void fn00001000(word32 d0, word32 a0)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	a6_9 = Mem0[0x00000004<p32>:word32]
	d2_108 = d0
	a2_305 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	a0_13 = 0x00003E70<p32>
	d0_16 = 0xC<32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00003E70<p32>:word32] = fp
	Mem32[0x00003E74<p32>:word32] = a6_9
	d0_34 = FindTask(0<32>)
	d0_38 = OpenLibrary(0x000012BC<p32>, 0<32>)
	branch d0_38 == 0<32> l00001226
l00001056:
	Mem67[0x00003E78<p32>:word32] = d0_38
	branch Mem67[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001060:
	d4_103 = 2<32>
	d2_108 = 8<32>
	goto l00001076
l00001066:
	a0_75 = a0
	d4_103 = 3<32>
l0000106A:
	branch Mem67[a0_723:byte] != 0x20<8> l00001072
l00001070:
	d4_103 = SEQ(SLICE(d4_103, word16, 16), SLICE(d4_103, word16, 0) + 1<16>)
l00001072:
	a0_75 = a0_723 + 1<i32>
	a0_723 = a0_75
	branch Mem67[a0_723:byte] != 0<8> l0000106A
l00001076:
	d0_106 = d4_103 << 2<32>
	d0_113 = d0_106 + d2_108
	d1_117 = 0x10001<32>
	d0_118 = AllocMem(d0_113 + 0x11<32>, 0x10001<32>)
	branch d0_118 == 0<32> l0000123E
l00001096:
	Mem180[d0_118:word32] = d0_113 + 0x11<32>
	Mem183[d0_118 + 12<i32>:word32] = d4_103 - 1<32>
	Mem186[d0_118 + 8<i32>:word32] = d0_118 + 16<i32> + d0_106
	Mem188[0<32>:word32] = 0<32>
	d0_189 = Mem188[d0_34 + 172<i32>:word32]
	branch d0_189 == 0<32> l00001190
l000010B6:
	d0_266 = Mem188[(d0_189 << 2<32>) + 16<i32>:word32]
	a1_269 = Mem188[d0_118 + 8<i32>:word32]
	a0_274 = (d0_266 << 2<32>) + 1<i32>
	Mem277[a0_274 + CONVERT(Mem188[d0_266 << 2<32>:byte], uint8, uint32):byte] = 0<8>
	Mem278[d0_118 + 16<i32>:word32] = a0_274
	a6_279 = d0_118 + 20<i32>
	d3_280 = 1<32>
	a0_287 = a0 + d2_108
l000010DA:
	a0_287 = a0_287 - 1<i32>
	branch Mem278[a0_287:byte] >u 0x20<8> l000010E2
l000010DE_1:
	v30_295 = SLICE(d2_108, word16, 0)
	d2_108 = SEQ(SLICE(d2_108, word16, 16), v30_295 - 1<i16>)
	branch v30_295 != 0<16> l000010DA
l000010E2:
	Mem300[a0_287 + 1<i32>:byte] = 0<8>
l000010E6:
	v32_307 = Mem306[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v32_307)
	branch v32_307 == 0<8> l00001148
l000010EA:
	branch v32_307 == 0x20<8> l000010E6
l000010F0:
	branch v32_307 == 9<8> l000010E6
l000010F6:
	branch d3_280 == Mem306[d0_118 + 12<i32>:word32] l00001148
l000010FC:
	Mem329[a6_279:word32] = a1_269
	a6_279 = a6_279 + 4<i32>
	d3_280 = SEQ(SLICE(d3_280, word16, 16), SLICE(d3_280, word16, 0) + 1<16>)
	branch v32_307 == 0x22<8> l0000111A
l00001106:
	Mem390[a1_269:byte] = v32_307
	a1_269 = a1_269 + 1<i32>
l00001108:
	v41_397 = Mem396[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(SLICE(d1_117, word24, 8), v41_397)
	branch v41_397 == 0<8> l00001148
l0000110C:
	branch v41_397 == 0x20<8> l00001116
l00001112:
	Mem537[a1_269:byte] = v41_397
	a1_269 = a1_269 + 1<i32>
	goto l00001108
l00001116:
	Mem530[a1_269:byte] = 0<8>
	a1_269 = a1_269 + 1<i32>
	goto l000010E6
l0000111A:
	v51_340 = Mem339[a2_305:byte]
	v52_343 = SLICE(d1_117, word24, 8)
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v51_340)
	branch v51_340 == 0<8> l00001148
l0000111E:
	branch v51_340 == 0x22<8> l00001116
l00001124:
	branch v51_340 != 0x2A<8> l00001144
l0000112A:
	v55_355 = Mem339[a2_305:byte]
	a2_305 = a2_305 + 1<i32>
	d1_117 = SEQ(v52_343, v55_355)
	branch (v55_355 & 0xDF<8>) != 0x4E<8> l0000113C
l00001138:
	d1_117 = 0xA<32>
	goto l00001144
l0000113C:
	branch (v55_355 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_117 = 0x1B<32>
l00001144:
	Mem384[a1_269:byte] = SLICE(d1_117, byte, 0)
	a1_269 = a1_269 + 1<i32>
	goto l0000111A
l00001148:
	Mem408[a1_269:byte] = 0<8>
	Mem413[a6_279:word32] = 0<32>
	Mem438[0x00003E84<p32>:word32] = execPrivate4()
	d0_439 = execPrivate5()
	Mem440[0x00003E88<p32>:word32] = d0_439
	dwLoc0C_582 = d0_118 + 16<i32>
	dwLoc10 = d3_280
	branch Mem440[Mem440[0x00003E74<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	v65_450 = Mem440[d0_34 + 224<i32>:word32]
	Mem451[0x00003E8C<p32>:word32] = v65_450
	branch v65_450 != 0<32> l0000117E
l0000117A:
	Mem458[0x00003E8C<p32>:word32] = d0_439
l0000117E:
	branch Mem464[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l00001186:
	a0_475 = Mem464[d0_34 + 176<i32>:word32]
	a0_472 = a0_475 + 4<i32> - Mem464[a0_475:word32]
	goto l00001202
l00001190:
	d0_195 = fn00001214(d0_34)
	Mem197[0x00003E7C<p32>:word32] = d0_195
	Mem198[0x00003E80<p32>:word32] = d0_195
	Mem202[0<32>:word32] = 0<32>
	dwLoc0C_582 = d0_195
	branch Mem202[d0_195 + 36<i32>:word32] == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	d0_220 = Supervisor(d0_118)
	Mem221[d0_118 + 4<i32>:word32] = d0_220
	branch d0_220 != 0<32> l000011D2
l000011CC:
l000011CE_thunk_fn0000127C:
	fn0000127C()
	return
l000011D2:
	Mem227[0x00003E84<p32>:word32] = d0_220
	Mem228[0x00003E88<p32>:word32] = d0_220
	Mem229[0x00003E8C<p32>:word32] = d0_220
	Mem231[d0_34 + 156<i32>:word32] = d0_220
	Mem232[d0_34 + 160<i32>:word32] = d0_220
	d0_236 = Mem232[(d0_220 << 2<32>) + 8<i32>:word32]
	branch d0_236 == 0<32> l000011F4
l000011F0:
	Mem241[d0_34 + 164<i32>:word32] = d0_236
l000011F4:
l000011F8:
	a0_472 = Mem470[d0_34 + 58<i32>:word32]
l00001202:
	Mem487[0x00003E98<p32>:word32] = a0_472
	Mem494[0x00003E9C<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_582)
l00001212_thunk_fn0000127C:
	fn0000127C()
	return
l00001226:
	Alert(0x38007<32>)
	goto l0000125C
l0000123E:
	CloseLibrary(Mem67[0x00003E78<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem163[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn0000126C(fn00001214(d0_34))
l00001268:
	return
fn00001000_exit:


word32 fn00001214(word32 a3)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut: d0:[0..31]-fn00001000
// Trashed: a0 d0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	return GetMsg(a3 + 92<i32>)
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1 d0
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn000012D0
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	return fn0000127C()
fn00001278_exit:


word32 fn0000127C()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut: a5:[0..31]-fn00001278
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	a7_6 = Mem0[0x00003E70<p32>:word32]
	v8_11 = Mem0[a7_6 - 4<32>:word32]
	v6_8 = Mem0[a7_6 - 8<32>:word32]
	branch Mem0[v8_11 + 4<i32>:word32] == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00003E78<p32>:word32])
	branch v6_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v6_8)
l000012B0:
	FreeMem(v8_11, Mem0[v8_11:word32])
	return v8_11
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn0000131C
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch false l00001308
l000012E2:
	d2_18 = 1<32>
	branch Mem11[0x00003FBC<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_18 = d2_18 + 1<32>
	branch Mem11[0x00003FB8<p32> + (d2_18 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	d2_35 = d2_18 - 1<32>
	branch d2_35 == 0<32> l00001308
l000012FA:
	call Mem11[0x00003FB8<p32> + (d2_35 << 2<32>):word32] (retsize: 4;)
		uses: d0:d2_38 << 2<32>,Mem:Mem11,Stack +0014:dwArg04
	d2_35 = d2_35 - 1<32>
	branch d2_35 != 0<32> l000012FA
l00001308:
	return fn00001278(dwArg04)
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001354
//      fn00002400
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn00002400
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00003EA0<p32>:word32] != 0<32> l0000134E
l00001328:
	a3_13 = Mem8[0x00003FC8<p32>:word32]
	Mem15[0x00003EA0<p32>:word32] = 1<32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_27,Mem:Mem15,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	a5 = fn000012D0(dwArg04)
l0000134E:
	return a5
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	a3_19 = 0x00003FB0<p32>
	branch false l00001372
l00001366:
	branch Mem8[0x00003FB0<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_19:word32] (retsize: 4;)
		uses: Mem:Mem8,Stack +0010:dwArg04,Stack +0014:dwArg08
	a3_19 = a3_19 + 4<i32>
	branch Mem8[a3_19:word32] != 0<32> l0000136A
l00001372:
	fn0000131C(fn000013D8())
	return
fn00001354_exit:


void fn00001390()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001394
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: a7
fn00001390_entry:
l00001390:
	return
fn00001390_exit:


void fn00001394()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013AC
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: a7
fn00001394_entry:
l00001394:
	fn00001390()
	fn00001390()
	fn00001390()
	fn00001390()
	fn00001390()
	fn00001390()
	fn00001390()
	fn00001390()
	fn00001390()
	fn00001390()
	return
fn00001394_exit:


void fn000013AC()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013C4
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: a7
fn000013AC_entry:
l000013AC:
	fn00001394()
	fn00001394()
	fn00001394()
	fn00001394()
	fn00001394()
	fn00001394()
	fn00001394()
	fn00001394()
	fn00001394()
	fn00001394()
	return
fn000013AC_exit:


void fn000013C4()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013D8
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: a7
fn000013C4_entry:
l000013C4:
	fn000013AC()
	fn000013AC()
	fn000013AC()
	fn000013AC()
	fn000013AC()
	fn000013AC()
	fn000013AC()
	fn000013AC()
	fn000013AC()
	return
fn000013C4_exit:


word32 fn000013D8()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001354
// MayUse: 
// LiveOut: d0:[0..31]-fn00001354
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a7 d2
fn000013D8_entry:
l000013D8:
	fn00001474(fn00002BB8(fn00003DE0(0x0000142C<p32>), 0x00001448<p32>), 0x0000144C<p32>)
	d2_50 = 1<32>
	goto l00001412
l0000140E:
	fn000013C4()
	d2_50 = d2_50 + 1<32>
l00001412:
	branch d2_50 <= dwLoc04 l0000140E
l00001418:
	return fn00003DE0(0x00001468<p32>)
fn000013D8_exit:


void fn00001474(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013D8
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00001474_entry:
l00001474:
	fn00001490(d0, Mem8[0x00003FD0<p32>:word32], dwArg04, fp + 8<i32>)
	return
fn00001474_exit:


void fn00001490(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001474
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn00001490_entry:
l00001490:
	d3_1518 = dwArg0C
	a5_1617 = dwArg04
	a4_1970 = dwArg08
	d6_1648 = 0<32>
	branch Mem36[dwArg08:byte] == 0<8> l00001DD6
l000014AC:
	branch Mem46[a4_1970:byte] != 0x25<8> l00001DB0
l000014B4:
	dwLoc30_2209 = 0<32>
	d5_269 = 0xFFFFFFFF<32>
	d4_396 = 0x69<32>
	a3_1308 = fp + -36<i32>
	d7_1016 = 0<32>
	dwLoc0A_2211 = 0<32>
	a2_140 = a4_1970 + 1<i32>
	d2_135 = 0<32>
l000014D2:
	d1_100 = 0<32>
l000014D4:
	branch Mem108[0x00001DE8<p32> + d1_100:byte] != Mem108[a2_140:byte] l000014F8
l000014E6:
	d1_128 = 1<32> << d1_100
	d0 = d1_128
	d2_135 = d2_135 | d1_128
	a2_140 = a2_140 + 1<32>
	goto l00001502
l000014F8:
	d1_100 = d1_100 + 1<32>
	branch d1_100 <u 5<32> l000014D4
l00001502:
	branch d1_100 <u 5<32> l000014D2
l0000150A:
	dwLoc28_2214 = d2_135
	branch Mem147[a2_140:byte] != 0x2A<8> l00001548
l00001514:
	d0_163 = __align(d3_1518 + 3<32>, 4<i32>)
	a2_140 = a2_140 + 1<32>
	d3_1518 = d0_163 + 4<32>
	a0_1484 = d0_163 + 4<32>
	v32_239 = Mem147[d0_163:word32]
	branch v32_239 >= 0<32> l00001540
l0000152C:
	d0_163 = -v32_239
	dwLoc28_2214 = d2_135 | 4<32>
	dwLoc30_2209 = d0_163
	goto l000015B4
l00001540:
	dwLoc30_2209 = v32_239
	goto l000015B4
l00001548:
	a0_1484 = 0x0000288D<p32> + (SEQ(SLICE(d0, word24, 8), Mem147[a2_140:byte]) & 0xFF<32>)
	d0_162 = CONVERT(Mem147[a0_1484:byte], uint8, uint32)
	d0_163 = d0_162 & 4<32>
	branch (d0_162 & 4<32>) == 0<32> l000015B4
l00001564:
	d2_168 = 0<32>
l00001568:
	d1_182 = __swap(0xA<32>) *u32 SLICE(d2_168, word16, 0)
	d0_191 = SLICE(d2_168, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_182, word16, 16), SLICE(d1_182, word16, 0) + SLICE(__swap(d2_168), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_140 = a2_140 + 1<i32>
	a0_1484 = 0x0000288D<p32> + (SEQ(SLICE(d0_191, word24, 8), Mem176[a2_140:byte]) & 0xFF<32>)
	d1_202 = CONVERT(Mem176[a2_140:byte], int8, int32)
	d0_216 = CONVERT(Mem176[a0_1484:byte], uint8, uint32)
	d1_100 = d1_202 - 0x30<32>
	d2_168 = d1_202 - 0x30<32> + d0_191
	d0_163 = d0_216 & 4<32>
	branch (d0_216 & 4<32>) != 0<32> l00001568
l000015B0:
	dwLoc30_2209 = d2_168
l000015B4:
	branch Mem261[a2_140:byte] != 0x2E<8> l00001648
l000015BC:
	a2_140 = a2_140 + 1<32>
	branch Mem261[a2_140:byte] != 0x2A<8> l000015E2
l000015C4:
	d0_341 = __align(d3_1518 + 3<32>, 4<i32>)
	a2_140 = a2_140 + 1<32>
	d3_1518 = d0_341 + 4<32>
	a0_1484 = d0_341 + 4<32>
	v39_346 = Mem261[d0_341:word32]
	branch v39_346 < 0<32> l00001648
l000015DC:
	d5_269 = v39_346
	goto l00001648
l000015E2:
	a0_1484 = 0x0000288D<p32> + (SEQ(SLICE(d0_163, word24, 8), Mem261[a2_140:byte]) & 0xFF<32>)
	d5_269 = 0<32>
	branch (CONVERT(Mem261[a0_1484:byte], uint8, uint32) & 4<32>) == 0<32> l00001648
l00001600:
	d1_296 = __swap(0xA<32>) *u32 SLICE(d5_269, word16, 0)
	d0_305 = SLICE(d5_269, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_296, word16, 16), SLICE(d1_296, word16, 0) + SLICE(__swap(d5_269), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_140 = a2_140 + 1<i32>
	d1_316 = CONVERT(Mem290[a2_140:byte], int8, int32)
	a0_1484 = 0x0000288D<p32> + (SEQ(SLICE(d0_305, word24, 8), Mem290[a2_140:byte]) & 0xFF<32>)
	d1_100 = d1_316 - 0x30<32>
	d5_269 = d1_316 - 0x30<32> + d0_305
	branch (CONVERT(Mem290[a0_1484:byte], uint8, uint32) & 4<32>) != 0<32> l00001600
l00001648:
	branch Mem359[a2_140:byte] == 0x68<8> l0000166C
l0000164E:
	branch Mem359[a2_140:byte] == 0x6C<8> l0000166C
l00001654:
	branch Mem359[a2_140:byte] == 0x4C<8> l0000166C
l0000165A:
	branch Mem359[a2_140:byte] == 0x6A<8> l0000166C
l00001660:
	branch Mem359[a2_140:byte] == 0x7A<8> l0000166C
l00001666:
	branch Mem359[a2_140:byte] != 0x74<8> l00001672
l0000166C:
	a2_140 = a2_140 + 1<i32>
	d4_396 = CONVERT(Mem359[a2_140:byte], int8, int32)
l00001672:
	branch d4_396 != 0x68<32> l00001684
l0000167A:
	branch Mem359[a2_140:byte] != 0x68<8> l00001684
l00001680:
	d4_396 = 2<32>
	a2_140 = a2_140 + 1<32>
l00001684:
	branch d4_396 != 0x6C<32> l00001696
l0000168C:
	branch Mem359[a2_140:byte] != 0x6C<8> l00001696
l00001692:
	d4_396 = 1<32>
	a2_140 = a2_140 + 1<32>
l00001696:
	branch d4_396 != 0x6A<32> l000016A0
l0000169E:
	d4_396 = 1<32>
l000016A0:
	branch d4_396 != 0x7A<32> l000016AA
l000016A8:
	d4_396 = 0x6C<32>
l000016AA:
	branch d4_396 != 0x74<32> l000016B4
l000016B2:
	d4_396 = 0x69<32>
l000016B4:
	v93_458 = Mem359[a2_140:byte]
	a2_1937 = a2_140 + 1<i32>
	d1_1108 = SEQ(SLICE(d1_100, word24, 8), v93_458)
	branch v93_458 == 0x25<8> l00001B3C
l000016C0:
	branch v93_458 == 0x58<8> l0000170E
l000016C6:
	branch v93_458 == 0x63<8> l00001ABC
l000016CE:
	branch v93_458 == 0x64<8> l0000170E
l000016D4:
	branch v93_458 == 0x69<8> l0000170E
l000016DA:
	branch v93_458 == 0x6E<8> l00001B4E
l000016E6:
	branch v93_458 <=u 0x70<8> l0000170E
l000016F4:
	branch v93_458 == 0x73<8> l00001AF8
l00001700:
	branch v93_458 == 0x75<8> l0000170E
l00001706:
	branch v93_458 != 0x78<8> l00001BE6
l0000170E:
	branch v93_458 != 0x70<8> l00001720
l00001714:
	d4_396 = 0x6C<32>
	d1_1108 = 0x78<32>
	dwLoc28_2214 = dwLoc28_2214 | 1<32>
l00001720:
	branch SLICE(d1_1108, byte, 0) == 0x64<8> l0000172E
l00001726:
	branch SLICE(d1_1108, byte, 0) != 0x69<8> l00001878
l0000172E:
	branch d4_396 != 1<32> l00001754
l00001736:
	d0_1196 = __align(d3_1518 + 3<32>, 4<i32>)
	d3_1093 = d0_1196 + 8<32>
	qwLoc40_3398 = Mem1202[d0_1196:word64] (alias)
	goto l000017EC
l00001754:
	branch d4_396 != 0x6C<32> l00001780
l0000175C:
	d0_1175 = __align(d3_1518 + 3<32>, 4<i32>)
	d0_1179 = Mem846[d0_1175:word32]
	d3_1093 = d0_1175 + 4<32>
	qwLoc40_3398 = SEQ(d0_1179 >> 0x1F<32>, d0_1179) (alias)
	goto l000017EC
l00001780:
	d0_1091 = __align(d3_1518 + 3<32>, 4<i32>)
	d0_1096 = Mem846[d0_1091:word32]
	d3_1093 = d0_1091 + 4<32>
	wLoc3A_2306 = SLICE(d0_1096, word16, 0) (alias)
	d0_1103 = d0_1096 >> 0x1F<32>
	dwLoc40_2305 = d0_1096 >> 0x1F<32>
	branch d4_396 != 0x68<32> l000017C6
l000017AA:
	d1_1120 = CONVERT(wLoc3A_2306, int16, int32)
	dwLoc40_2305 = d1_1120 >> 0x1F<32>
	d1_1108 = SEQ(SLICE(d0_1096 >> 0x1F<32>, word16, 16), wLoc3A_2306)
	d0_1103 = d1_1108
	d0_1096 = SEQ(SLICE(d1_1120, word24, 8), SLICE(wLoc3A_2306, byte, 0)) (alias)
l000017C6:
	bLoc39_2311 = SLICE(d0_1096, byte, 24) (alias)
	qwLoc40_3398 = SEQ(dwLoc40_2305, d0_1096) (alias)
	branch d4_396 != 2<32> l000017EC
l000017CE:
	d1_1155 = CONVERT(bLoc39_2311, int8, int32)
	d1_1108 = SEQ(SLICE(d0_1103, word24, 8), bLoc39_2311)
	qwLoc40_3398 = SEQ(d1_1155 >> 0x1F<32>, d1_1155) (alias)
l000017EC:
	v127_1209 = SLICE(d1_1108, byte, 0)
	dwLoc40_2331 = SLICE(qwLoc40_3398, word32, 0) (alias)
	dwLoc3C_2326 = SLICE(qwLoc40_3398, word32, 32) (alias)
	bLoc44_2273 = v127_1209
	branch dwLoc40_2331 >= 0<32> l00001836
l00001816:
	d0_d1_2186 = -SEQ(dwLoc40_2331, dwLoc3C_2326)
	Mem1298[dwLoc38:word32] = SLICE(d0_d1_2186, word32, 32)
	Mem1300[dwLoc38 + 4<i32>:word32] = SLICE(d0_d1_2186, word32, 0)
	d7_1016 = 1<32>
	goto l000019AC
l00001836:
	branch (dwLoc28_2214 & 0x10<32>) == 0<32> l00001850
l00001842:
	d7_1016 = 1<32>
	goto l00001864
l00001850:
	branch (dwLoc28_2214 & 8<32>) == 0<32> l00001864
l00001858:
	d7_1016 = 1<32>
l00001864:
	dwLoc34 = dwLoc3C_2326
	dwLoc38 = dwLoc40_2331
	bLoc44_2273 = v127_1209
	goto l000019AC
l00001878:
	branch d4_396 != 1<32> l0000189C
l00001880:
	d0_873 = __align(d3_1518 + 3<32>, 4<i32>)
	v197_878 = Mem846[d0_873 + 4<32>:word32]
	d3_1093 = d0_873 + 8<32>
	wLoc32_2256 = SLICE(v197_878, word16, 0) (alias)
	wLoc34_2278 = SLICE(v197_878, word16, 16) (alias)
	dwLoc38_2251 = Mem879[d0_873:word32]
	goto l000018D6
l0000189C:
	branch d4_396 != 0x6C<32> l000018BE
l000018A4:
	d0_858 = __align(d3_1518 + 3<32>, 4<i32>)
	v206_863 = Mem846[d0_858:word32]
	d3_1093 = d0_858 + 4<32>
	wLoc32_2256 = SLICE(v206_863, word16, 0) (alias)
	wLoc34_2278 = SLICE(v206_863, word16, 16) (alias)
	dwLoc38_2251 = 0<32>
	goto l000018D6
l000018BE:
	d0_841 = __align(d3_1518 + 3<32>, 4<i32>)
	v217_847 = Mem846[d0_841:word32]
	d3_1093 = d0_841 + 4<32>
	wLoc32_2256 = SLICE(v217_847, word16, 0) (alias)
	wLoc34_2278 = SLICE(v217_847, word16, 16) (alias)
	dwLoc38_2251 = 0<32>
l000018D6:
	dwLoc34_3409 = SEQ(wLoc34_2278, wLoc32_2256) (alias)
	branch d4_396 != 0x68<32> l000018F2
l000018DE:
	dwLoc38_2251 = 0<32>
	dwLoc34_3409 = SEQ(SLICE(CONVERT(wLoc32_2256, uint16, uint32), word24, 8), SLICE(wLoc32_2256, byte, 0)) (alias)
l000018F2:
	bLoc31_2263 = SLICE(dwLoc34_3409, byte, 24) (alias)
	qwLoc38_3412 = SEQ(dwLoc38_2251, dwLoc34_3409) (alias)
	branch d4_396 != 2<32> l0000190E
l000018FA:
	qwLoc38_3412 = CONVERT(bLoc31_2263, uint8, uint64) (alias)
l0000190E:
	dwLoc38 = SLICE(qwLoc38_3412, word32, 0) (alias)
	dwLoc34 = SLICE(qwLoc38_3412, word32, 32) (alias)
	bLoc44_2273 = SLICE(d1_1108, byte, 0)
	branch (dwLoc28_2214 & 1<32>) == 0<32> l000019AC
l0000191E:
	branch SLICE(d1_1108, byte, 0) != 0x6F<8> l0000195A
l00001924:
	branch d5_269 != 0<32> l0000194E
l00001928:
	branch dwLoc38 == 0<32> l0000195A
l0000194E:
	d7_1016 = 1<32>
l0000195A:
	branch SLICE(d1_1108, byte, 0) == 0x78<8> l0000196A
l00001960:
	bLoc44_2273 = SLICE(d1_1108, byte, 0)
	branch SLICE(d1_1108, byte, 0) != 0x58<8> l000019AC
l0000196A:
	bLoc44_2273 = SLICE(d1_1108, byte, 0)
	branch dwLoc38 == 0<32> l000019AC
l00001994:
	Mem1069[fp + -6<i32> + d7_1016:byte] = 0x30<8>
	d7_1068 = d7_1016 + 1<32>
	Mem1074[fp + -6<i32> + d7_1068:byte] = SLICE(d1_1108, byte, 0)
	d7_1016 = d7_1068 + 1<32>
	bLoc44_2273 = SLICE(d1_1108, byte, 0)
l000019AC:
	a3_1308 = fp + -14<i32>
	branch bLoc44_2273 == 0x78<8> l000019C0
l000019BA:
	branch bLoc44_2273 != 0x58<8> l000019CA
l000019C0:
	dwLoc44_2369 = 0x10<32>
	goto l000019E8
l000019CA:
	branch bLoc44_2273 != 0x6F<8> l000019DA
l000019D0:
	dwLoc40_2366 = 8<32>
	goto l000019E2
l000019DA:
	dwLoc40_2366 = 0xA<32>
l000019E2:
	dwLoc44_2369 = dwLoc40_2366
l000019E8:
	branch bLoc44_2273 == 0x58<8> l000019FA
l000019F4:
	a6_1348 = 0x00001DF0<p32>
	goto l000019FE
l000019FA:
	a6_1348 = 0x00001E00<p32>
l000019FE:
	d3_1411 = 0<32>
	d6_d7_3403 = SEQ(dwLoc38, dwLoc34) (alias)
l00001A20:
	a3_1308 = a3_1308 - 1<i32>
	Mem1466[a3_1308:byte] = Mem1442[a6_1348 + fn00002778(d6_d7_3403, SEQ(dwLoc44_2369 >> 0x1F<32>, dwLoc44_2369)):byte]
	d0_d1_3406 = fn00002430(d6_d7_3403, SEQ(dwLoc44_2369 >> 0x1F<32>, dwLoc44_2369), out a0_1484)
	d3_1411 = d3_1411 + 1<32>
	d6_d7_3403 = d0_d1_3406 (alias)
	branch SLICE(d0_d1_3406, word32, 32) != 0<32> l00001A20
l00001A8E:
	dwLoc0A_2211 = d3_1411
	d5_1517 = d5_269
	d3_1518 = d3_1093
	branch d5_269 != 0xFFFFFFFF<32> l00001AB0
l00001AAA:
	d5_1517 = 0<32>
	goto l00001BFC
l00001AB0:
	dwLoc28_2214 = dwLoc28_2214 & 0xFFFFFFFD<32>
	goto l00001BFC
l00001ABC:
	branch d4_396 != 0x6C<32> l00001AD8
l00001AC4:
	d0_548 = __align(d3_1518 + 3<32>, 4<i32>)
	d3_1518 = d0_548 + 4<32>
	a0_1484 = d0_548 + 4<32>
	goto l00001AEA
l00001AD8:
	d0_521 = __align(d3_1518 + 3<32>, 4<i32>)
	d3_1518 = d0_521 + 4<32>
	a0_1484 = d0_521 + 4<32>
l00001AEA:
	dwLoc0A_2211 = 1<32>
	d5_1517 = 0<32>
	goto l00001BFC
l00001AF8:
	d0_696 = __align(d3_1518 + 3<32>, 4<i32>)
	a3_1308 = Mem571[d0_696:word32]
	d3_1518 = d0_696 + 4<32>
	a0_1484 = d0_696 + 4<32>
	a1_702 = a3_1308
	dwLoc0A_2211 = 0<32>
	branch d5_269 == 0<32> l00001B1A
l00001B14:
	branch d5_269 <=u 0<32> l00001B36
l00001B1A:
	branch Mem703[a3_1308:byte] == 0<8> l00001B36
l00001B1E:
	d0_731 = 0<32>
l00001B22:
	d0_731 = d0_731 + 1<32>
	a1_702 = a1_702 + 1<32>
	branch d5_269 <=u 0<32> l00001B2E
l00001B2A:
	branch d5_269 <=u d0_731 l00001B32
l00001B2E:
	branch Mem703[a1_702:byte] != 0<8> l00001B22
l00001B32:
	dwLoc0A_2211 = d0_731
l00001B36:
	d5_1517 = 0<32>
	goto l00001BFC
l00001B3C:
	a3_1308 = 0x00001DE4<p32>
	dwLoc0A_2211 = 1<32>
	d5_1517 = 0<32>
	goto l00001BFC
l00001B4E:
	branch d4_396 != 1<32> l00001B70
l00001B56:
	d0_658 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_658:word32]
	Mem664[a0_1484 + 4<i32>:word32] = d6_1648
	Mem665[a0_1484:word32] = 0<32>
	d3_1518 = d0_658 + 4<32>
	goto l00001BDE
l00001B70:
	branch d4_396 != 0x6C<32> l00001B8E
l00001B78:
	d0_645 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_645:word32]
	Mem651[a0_1484:word32] = d6_1648
	d3_1518 = d0_645 + 4<32>
	goto l00001BDE
l00001B8E:
	branch d4_396 != 0x68<32> l00001BAC
l00001B96:
	d0_631 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_631:word32]
	Mem638[a0_1484:word16] = SLICE(d6_1648, word16, 0)
	d3_1518 = d0_631 + 4<32>
	goto l00001BDE
l00001BAC:
	branch d4_396 != 2<32> l00001BCA
l00001BB4:
	d0_617 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_617:word32]
	Mem624[a0_1484:byte] = SLICE(d6_1648, byte, 0)
	d3_1518 = d0_617 + 4<32>
	goto l00001BDE
l00001BCA:
	d0_590 = __align(d3_1518 + 3<32>, 4<i32>)
	a0_1484 = Mem571[d0_590:word32]
	Mem610[a0_1484:word32] = d6_1648
	d3_1518 = d0_590 + 4<32>
l00001BDE:
	d5_1517 = 0<32>
	dwLoc30_2209 = 0<32>
	goto l00001BFC
l00001BE6:
	branch v93_458 != 0<8> l00001BEC
l00001BEA:
	a2_1937 = a2_1937 - 1<32>
l00001BEC:
	a3_1308 = a4_1970
	dwLoc0A_2211 = a2_1937 - a4_1970
	d5_1517 = 0<32>
	dwLoc30_2209 = 0<32>
l00001BFC:
	branch d5_1517 >u dwLoc0A_2211 l00001C0A
l00001C02:
	dwLoc44_2477 = dwLoc0A_2211
	goto l00001C0E
l00001C0A:
	dwLoc44_2477 = d5_1517
l00001C0E:
	d0_1568 = dwLoc44_2477 + d7_1016
	branch d0_1568 <u dwLoc30_2209 l00001C32
l00001C2C:
	dwLoc44_2520 = 0<32>
	goto l00001C42
l00001C32:
	dwLoc44_2520 = dwLoc30_2209 - d0_1568
l00001C42:
	branch (dwLoc28_2214 & 2<32>) == 0<32> l00001C84
l00001C50:
	d2_1609 = 0<32>
	branch d7_1016 == 0<32> l00001C84
l00001C56:
	branch fn00001E10(CONVERT(Mem1618[fp + -6<i32> + d2_1609:byte], int8, int32), a5_1617, out a0_1484, out a5_1617) != 0xFFFFFFFF<32> l00001C7C
l00001C76:
	goto l00001DD8
l00001C7C:
	d2_1609 = d2_1609 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch d7_1016 >u d2_1609 l00001C56
l00001C84:
	branch (dwLoc28_2214 & 4<32>) != 0<32> l00001CD6
l00001C8C:
	d2_1664 = 0<32>
	branch dwLoc44_2520 == 0<32> l00001CD6
l00001C94:
l00001C9C:
	branch (dwLoc28_2214 & 2<32>) == 0<32> l00001CAA
l00001CA4:
	a0_1687 = SEQ(SLICE(a0_1484, word16, 16), 0x30<16>)
	goto l00001CAE
l00001CAA:
	a0_1687 = SEQ(SLICE(a0_1484, word16, 16), 0x20<16>)
l00001CAE:
	branch fn00001E10(a0_1687, a5_1617, out a0_1484, out a5_1617) != 0xFFFFFFFF<32> l00001CC6
l00001CC0:
	goto l00001DD8
l00001CC6:
	d2_1664 = d2_1664 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch dwLoc44_2520 >u d2_1664 l00001C9C
l00001CCE:
l00001CD6:
	branch (dwLoc28_2214 & 2<32>) != 0<32> l00001D12
l00001CDE:
	d2_1737 = 0<32>
	branch d7_1016 == 0<32> l00001D12
l00001CE4:
	branch fn00001E10(CONVERT(Mem1749[fp + -6<i32> + d2_1737:byte], int8, int32), a5_1617, out a0_3416, out a5_1617) != 0xFFFFFFFF<32> l00001D0A
l00001D04:
	goto l00001DD8
l00001D0A:
	d2_1737 = d2_1737 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch d7_1016 >u d2_1737 l00001CE4
l00001D12:
	d2_1789 = dwLoc0A_2211
	branch d5_1517 <=u dwLoc0A_2211 l00001D40
l00001D1C:
	branch fn00001E10(0x00000030<p32>, a5_1617, out a0_3417, out a5_1617) != 0xFFFFFFFF<32> l00001D38
l00001D32:
	goto l00001DD8
l00001D38:
	d2_1789 = d2_1789 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch d5_1517 >u d2_1789 l00001D1C
l00001D40:
	d2_1834 = 0<32>
	branch dwLoc0A_2211 == 0<32> l00001D76
l00001D48:
l00001D4C:
	branch fn00001E10(CONVERT(Mem1845[a3_1308 + d2_1834:byte], int8, int32), a5_1617, out a0_3418, out a5_1617) != 0xFFFFFFFF<32> l00001D6E
l00001D6A:
	goto l00001DD8
l00001D6E:
	d2_1834 = d2_1834 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch dwLoc0A_2211 >u d2_1834 l00001D4C
l00001D76:
	d0 = dwLoc28_2214 & 4<32>
	branch d0 == 0<32> l00001DAC
l00001D7E:
	d2_1891 = 0<32>
	branch dwLoc44_2520 == 0<32> l00001DAC
l00001D86:
l00001D8A:
	d0 = fn00001E10(0x00000020<p32>, a5_1617, out a0_3419, out a5_1617)
	branch d0 != 0xFFFFFFFF<32> l00001DA4
l00001DA0:
	goto l00001DD8
l00001DA4:
	d2_1891 = d2_1891 + 1<32>
	d6_1648 = d6_1648 + 1<32>
	branch dwLoc44_2520 >u d2_1891 l00001D8A
l00001DAC:
	a4_1970 = a2_1937
	goto l00001DD0
l00001DB0:
	a4_1970 = a4_1970 + 1<i32>
	d0 = fn00001E10(CONVERT(Mem53[a4_1970:byte], int8, int32), a5_1617, out a0_3415, out a5_1617)
	branch d0 != 0xFFFFFFFF<32> l00001DCE
l00001DCA:
	goto l00001DD8
l00001DCE:
	d6_1648 = d6_1648 + 1<32>
l00001DD0:
	branch Mem1972[a4_1970:byte] != 0<8> l000014AC
l00001DD6:
l00001DD8:
	return
fn00001490_exit:


word32 fn00001E10(word32 dwArg04, word32 dwArg08, word16 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001490
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn00001490 a5:[0..31]-fn00001490 d0:[0..31]-fn00001490
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00001E10_entry:
l00001E10:
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<32>
	v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l00001E54
l00001E2C:
	branch dwArg04 != 0xA<32> l00001E3E
l00001E32:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l00001E54
l00001E3E:
	a0_109 = Mem20[dwArg08 + 4<i32>:word32]
	Mem64[dwArg08 + 4<i32>:word32] = a0_109 + 1<32>
	Mem67[a0_109:byte] = SLICE(dwArg04, byte, 0)
	d1_53 = CONVERT(Mem67[a0_109:byte], uint8, uint32)
	goto l00001E62
l00001E54:
	d1_53 = fn00001E6C(dwArg04, dwArg08, out a0_109, out a5)
l00001E62:
	a0Out = a0_109
	a5Out = a5
	return d1_53
fn00001E10_exit:


word32 fn00001E6C(word32 dwArg04, word32 dwArg08, word16 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001E10
//      fn00003DE0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn00001E10 a5:[0..31]-fn00001E10 d0:[0..31]-fn00003DE0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00001E6C_entry:
l00001E6C:
	a5_137 = fn00002400()
	branch dwArg08 != 0<32> l00001E88
l00001E82:
	d0_117 = 0xFFFFFFFF<32>
	goto l00001F7A
l00001E88:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 0x49<32>) == 0x40<32> l00001E9A
l00001E94:
	d0_117 = 0xFFFFFFFF<32>
	goto l00001F7A
l00001E9A:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l00001EB8
l00001EA0:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<32>) == 0<32> l00001EB0
l00001EA8:
	Mem70[dwArg08 + 28<i32>:word32] = 1<32>
	goto l00001EB8
l00001EB0:
	Mem65[dwArg08 + 28<i32>:word32] = 0x400<32>
l00001EB8:
	branch Mem75[dwArg08 + 8<i32>:word32] != 0<32> l00001EF8
l00001EBE:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00001ED2
l00001ECE:
	d4_153 = 2<32>
	goto l00001ED4
l00001ED2:
	d4_153 = 1<32>
l00001ED4:
	d0_175 = fn0000202C(d4_153 + Mem75[dwArg08 + 28<i32>:word32], out a0)
	branch d0_175 != 0<32> l00001EEE
l00001EE8:
	d0_117 = 0xFFFFFFFF<32>
	goto l00001F7A
l00001EEE:
	Mem190[dwArg08 + 8<i32>:word32] = d0_175 + 1<i32>
	goto l00001F56
l00001EF8:
	branch Mem75[dwArg08:word32] == 0<32> l00001F52
l00001EFC:
	branch (Mem75[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00001F28
l00001F08:
	branch dwArg04 != 0xA<32> l00001F28
l00001F0E:
	a0_122 = Mem75[dwArg08 + 4<i32>:word32]
	Mem125[dwArg08 + 4<i32>:word32] = a0_122 + 1<32>
	Mem127[a0_122:byte] = SLICE(dwArg04, byte, 0)
	d0_117 = fn00001F80(dwArg08, out a0, out a5_137)
	goto l00001F7A
l00001F28:
	branch Mem75[dwArg08 + 4<i32>:word32] - Mem75[dwArg08 + 8<i32>:word32] == execPrivate3() l00001F56
l00001F46:
	Mem116[dwArg08 + 24<i32>:word32] = Mem75[dwArg08 + 24<i32>:word32] | 0x10<32>
	a0 = dwArg08 + 24<i32>
	d0_117 = 0xFFFFFFFF<32>
	goto l00001F7A
l00001F52:
	d0_117 = 0<32>
	goto l00001F7A
l00001F56:
	Mem199[dwArg08 + 24<i32>:word32] = Mem197[dwArg08 + 24<i32>:word32] | 2<32>
	a0 = Mem199[dwArg08 + 8<i32>:word32]
	Mem206[a0:byte] = SLICE(dwArg04, byte, 0)
	Mem209[dwArg08 + 4<i32>:word32] = Mem206[dwArg08 + 8<i32>:word32] + 1<32>
	Mem213[dwArg08 + 20<i32>:word32] = Mem209[dwArg08 + 28<i32>:word32] - 1<32>
	d0_117 = 0<32>
l00001F7A:
	a0Out = a0
	a5Out = a5_137
	return d0_117
fn00001E6C_exit:


word32 fn00001F80(word32 dwArg04, word16 & a0Out, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001E6C
//      fn00002B74
//      fn00003DA4
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0:[16..31]-fn00001E6C a5:[0..31]-fn00001E6C d0:[0..31]-fn00001E6C
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn00001F80_entry:
l00001F80:
	a5_23 = fn00002400()
	branch dwArg04 != 0<32> l00001F96
l00001F92:
	d0_105 = 0xFFFFFFFF<32>
	goto l0000200E
l00001F96:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l00001FB4
l00001F9C:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<32>) == 0<32> l00001FAC
l00001FA4:
	Mem48[dwArg04 + 28<i32>:word32] = 1<32>
	goto l00001FB4
l00001FAC:
	Mem43[dwArg04 + 28<i32>:word32] = 0x400<32>
l00001FB4:
	branch Mem53[dwArg04 + 8<i32>:word32] != 0<32> l00001FBE
l00001FBA:
	d0_105 = 0<32>
	goto l0000200E
l00001FBE:
	branch (Mem53[dwArg04 + 24<i32>:word32] & 2<32>) == 0<32> l00002004
l00001FC6:
	branch Mem53[dwArg04:word32] == 0<32> l00001FF4
l00001FCA:
	branch Mem53[dwArg04 + 4<i32>:word32] - Mem53[dwArg04 + 8<i32>:word32] == execPrivate3() l00001FF8
l00001FE8:
	Mem104[dwArg04 + 24<i32>:word32] = Mem53[dwArg04 + 24<i32>:word32] | 0x10<32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0xFFFFFFFF<32>
	goto l0000200E
l00001FF4:
	d0_105 = 0<32>
	goto l0000200E
l00001FF8:
	Mem85[dwArg04 + 4<i32>:word32] = Mem53[dwArg04 + 8<i32>:word32]
	Mem87[dwArg04 + 20<i32>:word32] = Mem85[dwArg04 + 28<i32>:word32]
l00002004:
	Mem96[dwArg04 + 24<i32>:word32] = Mem94[dwArg04 + 24<i32>:word32] & 0xFFFFFFFC<32>
	a0 = dwArg04 + 24<i32>
	d0_105 = 0<32>
l0000200E:
	a0Out = a0
	a5Out = a5_23
	return d0_105
fn00001F80_exit:


word32 fn0000202C(word32 dwArg04, word16 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001E6C
//      fn00003CA8
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0:[16..31]-fn00001E6C d0:[0..31]-fn00001E6C
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn0000202C_entry:
l0000202C:
	branch dwArg04 != 0<32> l0000203A
l00002036:
	d0_112 = 0<32>
	goto l00002090
l0000203A:
	branch Mem5[0x00003EA8<p32>:word32] != 0<32> l0000205E
l00002042:
	a0_15 = Mem5[0x00003EA4<p32>:word32]
	Mem21[0<32>:word32] = 0<32>
	Mem35[0x00003EA8<p32>:word32] = fn00002320(dwLoc10, a0_15, a0_15, out a0)
l0000205E:
	branch Mem40[0x00003EA8<p32>:word32] != 0<32> l0000206A
l00002066:
	d0_112 = 0<32>
	goto l00002090
l0000206A:
	d0_59 = fn000021FC(Mem51[0x00003EA8<p32>:word32], dwArg04 + 4<32>, out a0)
	branch d0_59 != 0<32> l00002088
l00002084:
	d0_112 = 0<32>
	goto l00002090
l00002088:
	Mem74[d0_59:word32] = dwArg04
	a0 = d0_59 + 4<i32>
	d0_112 = d0_59 + 4<i32>
l00002090:
	a0Out = a0
	return d0_112
fn0000202C_exit:


void fn00002098(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002098_entry:
l00002098:
	branch dwArg04 == 0<32> l000020C2
l000020A2:
	branch Mem0[0x00003EA8<p32>:word32] == 0<32> l000020C2
l000020AA:
	fn00002160(Mem21[0x00003EA8<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<32>)
l000020C2:
	return
fn00002098_exit:


void fn00002160(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002098
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn00002160_entry:
l00002160:
	branch Mem20[Mem20[0x00003E74<p32>:word32] + 20<i32>:word16] <u 0x27<16> l00002190
l0000217E:
	FreePooled(dwArg08, dwArg04)
	goto l000021F4
l00002190:
	branch dwArg04 == 0<32> l000021F4
l00002194:
	branch dwArg08 == 0<32> l000021F4
l00002198:
	a3_38 = dwArg08 + -12<i32>
	branch dwArg0C >=u Mem20[dwArg04 + 20<i32>:word32] l000021DA
l000021A4:
	a2_42 = dwArg04
l000021A6:
	a2_42 = Mem20[a2_42:word32]
	branch Mem20[a2_42:word32] == 0<32> l000021F4
l000021AC:
	branch Mem20[a2_42 + 8<i32>:byte] == 0<8> l000021A6
l000021B2:
	branch dwArg08 <u Mem20[a2_42 + 20<i32>:word32] l000021A6
l000021B8:
	branch dwArg08 >=u Mem20[a2_42 + 24<i32>:word32] l000021A6
l000021BE:
	Deallocate(a2_42, dwArg08, dwArg0C)
	branch Mem20[a2_42 + 28<i32>:word32] != Mem20[dwArg04 + 16<i32>:word32] l000021F4
l000021D8:
	a3_38 = a2_42
l000021DA:
	Remove(a3_38)
	a3_78 = a3_38 - 4<i32>
	FreeMem(a3_78, Mem20[a3_78:word32])
l000021F4:
	return
fn00002160_exit:


word32 fn000021FC(word32 dwArg04, word32 dwArg08, word16 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000202C
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0:[16..31]-fn0000202C d0:[0..31]-fn0000202C
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn000021FC_entry:
l000021FC:
	a0_117 = Mem26[0x00003E74<p32>:word32]
	branch Mem26[a0_117 + 20<i32>:word16] <u 0x27<16> l00002228
l00002216:
	a0_117 = dwArg04
	d0_164 = AllocPooled(dwArg08, dwArg04)
	goto l0000231A
l00002228:
	a3_124 = 0<32>
	branch dwArg04 == 0<32> l00002318
l00002230:
	branch dwArg08 == 0<32> l00002318
l00002236:
	branch dwArg08 >=u Mem26[dwArg04 + 20<i32>:word32] l000022EA
l0000223E:
	a5_170 = Mem26[dwArg04:word32]
l00002240:
	branch Mem26[a5_170:word32] == 0<32> l00002262
l00002244:
	branch Mem26[a5_170 + 8<i32>:byte] == 0<8> l0000225E
l0000224A:
	d0_132 = Allocate(a5_170, dwArg08)
	a0_117 = a5_170
	a3_124 = d0_132
	branch d0_132 != 0<32> l000022CE
l0000225E:
	a5_170 = Mem26[a5_170:word32]
	goto l00002240
l00002262:
	d3_81 = Mem26[dwArg04 + 16<i32>:word32] + 0x28<32>
	d0_86 = AllocMem(d3_81, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_86
	branch d0_86 == 0<32> l00002318
l00002280:
	Mem93[d0_86:word32] = d3_81
	Mem95[d0_86 + 12<i32>:byte] = 0xA<8>
	Mem98[d0_86 + 20<i32>:word32] = d0_86 + 40<i32>
	Mem99[d0_86 + 24<i32>:word32] = d0_86 + 40<i32>
	Mem101[Mem99[d0_86 + 20<i32>:word32]:word32] = 0<32>
	a2_102 = Mem101[d0_86 + 20<i32>:word32]
	Mem105[a2_102 + 4<32>:word32] = Mem101[dwArg04 + 16<i32>:word32]
	Mem108[d0_86 + 32<i32>:word32] = Mem105[a2_102 + 4<32>:word32]
	Mem111[d0_86 + 28<i32>:word32] = Mem108[d0_86 + 32<i32>:word32] + Mem108[d0_86 + 20<i32>:word32]
	AddHead(dwArg04, d0_86 + 4<i32>)
	a0_117 = d0_86 + 4<i32>
	a3_124 = Allocate(d0_86 + 4<i32>, dwArg08)
l000022CE:
	branch (Mem141[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l00002318
l000022DA:
	a2_148 = a3_124
	d2_151 = dwArg08 + 7<32> >>u 3<32>
l000022E0:
	Mem154[a2_148:word32] = 0<32>
	a2_155 = a2_148 + 4<i32>
	Mem156[a2_155:word32] = 0<32>
	a2_148 = a2_155 + 4<i32>
	d2_151 = d2_151 - 1<32>
	branch d2_151 != 0<32> l000022E0
l000022E8:
	goto l00002318
l000022EA:
	d0_52 = AllocMem(dwArg08 + 0x10<32>, Mem26[dwArg04 + 12<i32>:word32])
	a3_124 = d0_52
	branch d0_52 == 0<32> l00002318
l00002304:
	Mem59[d0_52:word32] = dwArg08 + 0x10<32>
	AddTail(dwArg04, d0_52 + 4<i32>)
	Mem66[d0_52 + 0xC<32>:word32] = 0<32>
	a0_117 = dwArg04
	a3_124 = d0_52 + 0x10<32>
l00002318:
	d0_164 = a3_124
l0000231A:
	a0Out = a0_117
	return d0_164
fn000021FC_exit:


word32 fn00002320(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word16 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000202C
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0:[16..31]-fn0000202C d0:[0..31]-fn0000202C
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn00002320_entry:
l00002320:
	a0_17 = Mem14[0x00003E74<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l0000234E
l0000233A:
	d0_51 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
	goto l0000238A
l0000234E:
	a1_21 = 0<32>
	branch dwArg08 <u dwArg0C l00002388
l00002354:
	d0_30 = AllocMem(0x18<32>, 0<32>)
	a1_21 = d0_30
	branch d0_30 == 0<32> l00002388
l0000236A:
	Mem38[d0_30:word32] = d0_30 + 4<i32>
	Mem39[d0_30 + 4<i32>:word32] = 0<32>
	Mem40[d0_30 + 8<i32>:word32] = d0_30
	Mem42[d0_30 + 12<i32>:word32] = dwArg04
	Mem45[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & 0xFFFFFFF8<32>
	Mem46[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l00002388:
	d0_51 = a1_21
l0000238A:
	a0Out = a0_17
	return d0_51
fn00002320_exit:


void fn00002390(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn00002390_entry:
l00002390:
	branch Mem11[Mem11[0x00003E74<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000023B4
l000023A6:
	DeletePrivatePool(dwArg04)
	goto l000023F8
l000023B4:
	branch dwArg04 == 0<32> l000023F8
l000023B8:
	d0_23 = RemHead(dwArg04)
	a2_24 = d0_23
	branch d0_23 == 0<32> l000023EA
l000023CA:
	a2_31 = a2_24 - 4<i32>
	FreeMem(a2_31, Mem11[a2_31:word32])
	d0_40 = RemHead(dwArg04)
	a2_24 = d0_40
	branch d0_40 != 0<32> l000023CA
l000023EA:
	FreeMem(dwArg04, 0x18<32>)
l000023F8:
	return
fn00002390_exit:


word32 fn00002400()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001E6C
//      fn00001F80
//      fn00003CA8
// MayUse: 
// LiveOut: a5:[0..31]-fn00001E6C
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002400_entry:
l00002400:
	branch (SetSignal(0<32>, 0x1000<32>) & 0x1000<32>) == 0<32> l0000242A
l0000241E:
	a5 = fn0000131C(0x00000014<p32>)
l0000242A:
	return a5
fn00002400_exit:


ui64 fn00002430(word64 qwArg04, word64 qwArg0C, word16 & a0Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001490
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: a0:[16..31]-fn00001490 Sequence d0:d1:[0..63]-fn00001490
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00002430_entry:
	dwArg08 = SLICE(qwArg04, word32, 32)
	dwArg04 = SLICE(qwArg04, word32, 0)
	dwArg10 = SLICE(qwArg0C, word32, 32)
	dwArg0C = SLICE(qwArg0C, word32, 0)
l00002430:
	d1_100 = dwArg08
	a0_20 = dwArg08
	d3_174 = dwArg10
	branch dwArg0C != 0<32> l00002486
l00002448:
	branch dwArg04 >=u dwArg10 l0000245A
l0000244C:
	d1_100 = fn00002534(dwArg04, dwArg08, dwArg10, out d1_375, out d2_376)
	goto l0000252C
l0000245A:
	branch dwArg10 != 0<32> l00002466
l0000245E:
	d3_174 = CONVERT(1<32> /u SLICE(dwArg10, uint16, 0), int16, int32)
l00002466:
	d0_186 = fn00002534(0<32>, dwArg04, d3_174, out d1_187, out d2_188)
	d1_100 = fn00002534(d1_187, dwArg08, d2_188, out d1_377, out d2_378)
	d0_210 = d0_186
	goto l0000252E
l00002486:
	branch dwArg04 >=u dwArg0C l00002490
l0000248A:
	goto l0000252C
l00002490:
	d4_31 = 0x18<32>
	d6_32 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000024AE
l0000249A:
	d4_31 = 0x10<32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000024AE
l000024A2:
	d4_31 = 8<32>
	d6_32 = __rol<word32,word32>(d6_32, 8<32>)
	branch SLICE(d6_32, byte, 0) != 0<8> l000024AE
l000024AA:
	d4_31 = 0<32>
	d6_32 = SEQ(SLICE(d6_32, word24, 8), SLICE(dwArg0C, byte, 0))
l000024AE:
	d4_65 = SEQ(SLICE(d4_31, word24, 8), SLICE(d4_31, byte, 0) + Mem17[0x00003EAC<p32> + CONVERT(SLICE(d6_32, word16, 0) & 0xFF<16>, int16, int32):byte])
	d5_67 = 0x20<32> - d4_65
	branch d5_67 != 0<32> l000024CE
l000024C2:
	branch dwArg0C <u dwArg04 l000024CA
l000024C6:
	branch dwArg10 >u dwArg08 l0000248A
l000024CA:
	goto l0000252C
l000024CE:
	d0_89 = fn00002534(dwArg04 >>u d4_65, SLICE(qwArg04 >>u d4_65, word32, 0), SLICE(qwArg0C >>u d4_65, word32, 0), out d1_90, out d2_379)
	d3_76 = dwArg10 << d5_67
	d5_105 = __swap(d0_89)
	d6_107 = __swap(d3_76)
	d2_111 = __swap(d0_89 *u32 SLICE(d3_76, word16, 0))
	d3_106 = d3_76 *u32 SLICE(d5_105, word16, 0)
	d5_109 = d5_105 *u32 SLICE(d6_107, word16, 0)
	v38_v35_257 = CONVERT(SLICE(d2_111, word16, 0), uint16, uint32) + SEQ(SLICE(d5_109, word16, 0), SLICE(d3_106, word16, 0))
	d4_108 = d0_89 *u32 SLICE(d6_107, word16, 0)
	v42_v40_258 = CONVERT(SLICE(v38_v35_257, word16, 0), uint16, uint32) + SEQ(SLICE(v38_v35_257, word16, 16), SLICE(d4_108, word16, 0))
	d6_86 = dwArg08 << d5_67
	d2_128 = __swap(SEQ(SLICE(d2_111, word16, 16), SLICE(v42_v40_258, word16, 0)))
	a0_20 = d6_86
	d1_100 = d0_89
	v49_138 = d1_90 - ((__swap(SEQ(SLICE(d3_106, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_108, word16, 16), 0<16>))) + SEQ(SLICE(d5_109, word16, 16), SLICE(v42_v40_258, word16, 16)))
	branch v49_138 <u 0<32> l0000252A
l00002524:
	branch v49_138 != 0<32> l0000252C
l00002526:
	branch d6_86 >=u d2_128 l0000252C
l0000252A:
	d1_100 = d0_89 - 1<32>
l0000252C:
	d0_210 = 0<32>
l0000252E:
	a0Out = a0_20
	return SEQ(d0_210, d1_100)
fn00002430_exit:


word32 fn00002534(word32 d0, word32 d1, word32 d2, word32 & d1Out, word32 & d2Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002430
//      fn00002778
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0:[0..31]-fn00002778 d1:[0..31]-fn00002778 d2:[0..31]-fn00002778
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00002534_entry:
l00002534:
	d7_13 = d2
	branch d2 == 0<32> l0000254E
l0000253C:
	branch d0 != 0<32> l0000255C
l00002542:
	branch d1 == 0<32> l0000267A
l00002548:
	branch d2 >u d1 l0000267A
l0000254E:
	d0 = fn000026F2(d1, d2, d2, out d1)
	goto l0000267A
l0000255C:
	d2_26 = __swap(d2)
	branch SLICE(d2_26, word16, 0) != 0<16> l00002584
l00002562:
	d0_293 = __swap(d0)
	d1_294 = __swap(d1)
	d0_297 = SEQ(SLICE(d0_293, word16, 16), SLICE(d1_294, word16, 0))
	d0_307 = SEQ(d0_297 %u SLICE(d2, uint16, 0), SLICE(__swap(d1_294), word16, 0))
	d2 = SEQ(SLICE(__swap(CONVERT(d0_297 /u SLICE(d2, uint16, 0), uint16, uint32)), word16, 16), d0_307 /u SLICE(d2, uint16, 0))
	d1 = __swap(SEQ(d0_307 %u SLICE(d2, uint16, 0), 0<16>))
	d0 = d2
	goto l0000267A
l00002584:
	bLoc26_389 = 0<8>
	d0_48 = 0<32>
	d5_d6_372 = SEQ(d0, d1) (alias)
	d5_d6_372 = SEQ(d0, d1) (alias)
	branch d2 < 0<32> l000025A0
l00002596:
	d5_d6_372 = d5_d6_372 * 2<64>
	d0_48 = SEQ(SLICE(d0_48, word16, 16), SLICE(d0_48, word16, 0) + 1<16>)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l00002596
l000025A0:
	v41_68 = SLICE(d0_48, word16, 0)
	d5_d6_576 = d5_d6_372 (alias)
l000025A2:
	d5_77 = SLICE(d5_d6_576, word32, 32) (alias)
	d2_79 = __swap(d5_77)
	d3_80 = __swap(d7_13)
	d6_102 = SLICE(d5_d6_576, word32, 0) (alias)
	branch SLICE(d2_79 - d3_80, word16, 0) != 0<16> l000025B4
l000025AE:
	d1_112 = 0xFFFF<32>
	goto l000025BE
l000025B4:
	d1_112 = __swap(SEQ(SLICE(__swap(SEQ(d5_77 %u SLICE(d3_80, uint16, 0), d5_77 /u SLICE(d3_80, uint16, 0))), word16, 16), 0<16>))
l000025BE:
	d6_106 = __swap(SEQ(SLICE(d6_102, word16, 16), 0<16>))
l000025C4:
	d4_121 = __swap(d5_77 - __swap(d7_13) *u32 SLICE(d1_112, word16, 0))
	wLoc22_469 = SLICE(dwLoc24, word16, 0) (alias)
	d2_114 = d1_112 *u32 SLICE(d7_13, word16, 0)
	d4_129 = SEQ(SLICE(d4_121, word16, 16), SLICE(d6_106, word16, 0))
	branch SLICE(d4_121, word16, 0) != 0<16> l000025E4
l000025DC:
	branch d2_114 <=u d4_129 l000025E4
l000025E0:
	d1_112 = d1_112 - 1<32>
	goto l000025C4
l000025E4:
	d6_141 = __swap(d1_112)
	d3_148 = __swap(d6_141)
	d4_150 = __swap(d7_13)
	d6_154 = __swap(d6_141 *u32 SLICE(d7_13, word16, 0))
	d5_149 = d7_13 *u32 SLICE(d3_148, word16, 0)
	d3_152 = d3_148 *u32 SLICE(d4_150, word16, 0)
	v57_v55_373 = CONVERT(SLICE(d6_154, word16, 0), uint16, uint32) + SEQ(SLICE(d3_152, word16, 0), SLICE(d5_149, word16, 0))
	d2_151 = d6_141 *u32 SLICE(d4_150, word16, 0)
	v61_v59_374 = CONVERT(SLICE(v57_v55_373, word16, 0), uint16, uint32) + SEQ(SLICE(v57_v55_373, word16, 16), SLICE(d2_151, word16, 0))
	d5_d6_377 = d5_d6_576 - SEQ((__swap(SEQ(SLICE(d5_149, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_151, word16, 16), 0<16>))) + SEQ(SLICE(d3_152, word16, 16), SLICE(v61_v59_374, word16, 16)), __swap(SEQ(SLICE(d6_154, word16, 16), SLICE(v61_v59_374, word16, 0))))
	d6_186 = SLICE(d5_d6_377, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_377, word32, 32) (alias)
	branch d5_189 >=u 0<32> l0000263C
l00002626:
	d5_d6_379 = CONVERT(d6_186, word32, uint64) + SEQ(d5_189, SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_112 = d1_112 - 1<32>
	d6_186 = SLICE(d5_d6_379, word32, 0) (alias)
	d5_189 = SLICE(d5_d6_379, word32, 32) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l0000263C:
	branch bLoc26_389 != 0<8> l00002658
l00002642:
	d5_278 = __swap(d5_189)
	d6_279 = __swap(d6_186)
	bLoc26_389 = true
	dwLoc24 = SEQ(SLICE(d1_112, word16, 0), wLoc22_469) (alias)
	d5_d6_576 = SEQ(SLICE(d5_278, word16, 16), SLICE(d6_279, word16, 0), SLICE(d6_279, word16, 16), 0<16>) (alias)
	goto l000025A2
l00002658:
	d6_228 = __swap(SEQ(SLICE(d6_186, word16, 16), SLICE(d5_189, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_112, word16, 0))
	d5_229 = __swap(d5_189)
	v81_232 = SLICE(d7_13, word16, 16)
	branch v41_68 == 0<16> l00002672
l00002668:
	d7_240 = SEQ(v81_232, v41_68 - 1<16>)
	d5_d6_579 = SEQ(d5_229, d6_228) (alias)
l0000266A:
	d5_d6_579 = d5_d6_579 >>u 1<32>
	v85_251 = SLICE(d7_240, word16, 0)
	d6_228 = SLICE(d5_d6_579, word32, 0)
	d7_240 = SEQ(SLICE(d7_240, word16, 16), v85_251 - 1<i16>)
	branch v85_251 != 0<16> l0000266A
l00002672:
	d1 = d6_228
	d2 = d2_26
l0000267A:
	d1Out = d1
	d2Out = d2
	return d0
fn00002534_exit:


word32 fn000026C0(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002C04
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0:[0..31]-fn00002C04
// Trashed: CVZNX d0 d1
// Preserved: a7
fn000026C0_entry:
l000026C0:
	branch dwArg04 > 0<32> l000026E0
l000026CA:
	d0_36 = -dwArg04
	branch dwArg08 > 0<32> l000026D8
l000026D0:
	return fn000026F2(d0_36, -dwArg08, d2, out d1_89)
l000026D8:
	return -fn000026F2(d0_36, dwArg08, d2, out d1_88)
l000026E0:
	branch dwArg08 > 0<32> l000026E2_thunk_fn000026F2
	goto l000026E4
l000026E2_thunk_fn000026F2:
	return fn000026F2(dwArg04, dwArg08, d2, out d1_90)
l000026E4:
	return -fn000026F2(dwArg04, -dwArg08, d2, out d1_91)
fn000026C0_exit:


word32 fn000026F2(word32 d0, word32 d1, word32 d2, word32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002534
//      fn000026C0
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0:[0..31]-fn000026C0 d1:[0..31]-fn00002534
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn000026F2_entry:
l000026F2:
	d1_22 = __swap(d1)
	v9_8 = SLICE(d1_22, word16, 0)
	v10_9 = SLICE(d2, word16, 16)
	d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l00002718
l000026FA:
	d0_136 = __swap(d0)
	d1_137 = __swap(d1_22)
	v13_139 = SLICE(d0_136, word16, 0)
	d2_141 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_139)
	branch v13_139 == 0<16> l00002708
l00002704:
	v16_147 = d2_141 /u SLICE(d1_137, uint16, 0)
	d2_141 = SEQ(d2_141 %u SLICE(d1_137, uint16, 0), v16_147)
	d0_136 = SEQ(SLICE(d0_136, word16, 16), v16_147)
l00002708:
	d0_156 = __swap(d0_136)
	d2_160 = SEQ(SLICE(d2_141, word16, 16), SLICE(d0_156, word16, 0))
	v33_163 = d2_160 /u SLICE(d1_137, uint16, 0)
	d1Out = SEQ(SLICE(d1_137, word16, 16), SLICE(__swap(SEQ(d2_160 %u SLICE(d1_137, uint16, 0), v33_163)), word16, 0))
	return SEQ(SLICE(d0_156, word16, 16), v33_163)
l00002718:
	d3_18 = 0x10<32>
	branch SLICE(d1_22, word16, 0) >=u 0x80<16> l00002726
l00002722:
	d1_22 = __rol<word32,word32>(d1_22, 8<32>)
	d3_18 = 8<32>
l00002726:
	branch SLICE(d1_22, word16, 0) >=u 0x800<16> l00002730
l0000272C:
	d1_22 = __rol<word32,word32>(d1_22, 4<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 4<16>)
l00002730:
	branch SLICE(d1_22, word16, 0) >=u 0x2000<16> l0000273A
l00002736:
	d1_22 = __rol<word32,word32>(d1_22, 2<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 2<16>)
l0000273A:
	branch SLICE(d1_22, word16, 0) < 0<16> l00002742
l0000273E:
	d1_22 = __rol<word32,word32>(d1_22, 1<32>)
	d3_18 = SEQ(SLICE(d3_18, word16, 16), SLICE(d3_18, word16, 0) - 1<16>)
l00002742:
	d0_71 = d0 >>u d3_18
	d2_75 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_18
	v52_82 = SLICE(__swap(d3_18), word16, 16)
	v50_79 = d0_71 /u SLICE(d1_22, uint16, 0)
	d1_90 = __swap(d1_22)
	d3_102 = SEQ(v52_82, v50_79)
	d0_108 = SEQ(d0_71 %u SLICE(d1_22, uint16, 0), SLICE(d2_75, word16, 0)) - SEQ(SLICE(d2_75, word16, 16), v50_79) *u32 SLICE(d1_90, word16, 0)
	branch d0_108 >=u 0<32> l00002764
l0000275E:
	d3_102 = SEQ(v52_82, v50_79 - 1<16>)
	d0_108 = d0_108 + d1_90
l00002762:
	branch d0_108 >=u 0<32> l00002762
l00002764:
	d1Out = __swap(__rol<word32,word32>(d0_108, __swap(d3_102)))
	return CONVERT(SLICE(d3_102, word16, 0), uint16, uint32)
fn000026F2_exit:


word32 fn00002778(word64 qwArg04, word64 qwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001490
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: d1:[0..31]-fn00001490
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn00002778_entry:
	dwArg08 = SLICE(qwArg04, word32, 32)
	dwArg04 = SLICE(qwArg04, word32, 0)
	dwArg10 = SLICE(qwArg0C, word32, 32)
	dwArg0C = SLICE(qwArg0C, word32, 0)
l00002778:
	d1_175 = dwArg08
	d3_206 = dwArg10
	branch dwArg0C != 0<32> l000027CA
l00002790:
	branch dwArg04 >=u dwArg10 l000027A2
l00002794:
	fn00002534(dwArg04, dwArg08, dwArg10, out d1_175, out d2_416)
	goto l00002884
l000027A2:
	branch dwArg10 != 0<32> l000027AE
l000027A6:
	d3_206 = CONVERT(1<32> /u SLICE(dwArg10, uint16, 0), int16, int32)
l000027AE:
	fn00002534(0<32>, dwArg04, d3_206, out d1_219, out d2_220)
	fn00002534(d1_219, dwArg08, d2_220, out d1_175, out d2_417)
	goto l00002884
l000027CA:
	branch dwArg04 <u dwArg0C l00002884
l000027D0:
	d4_34 = 0x18<32>
	d6_35 = __rol<word32,word32>(dwArg0C, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l000027EE
l000027DA:
	d4_34 = 0x10<32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l000027EE
l000027E2:
	d4_34 = 8<32>
	d6_35 = __rol<word32,word32>(d6_35, 8<32>)
	branch SLICE(d6_35, byte, 0) != 0<8> l000027EE
l000027EA:
	d4_34 = 0<32>
	d6_35 = SEQ(SLICE(d6_35, word24, 8), SLICE(dwArg0C, byte, 0))
l000027EE:
	d4_68 = SEQ(SLICE(d4_34, word24, 8), SLICE(d4_34, byte, 0) + Mem20[0x00003EAC<p32> + CONVERT(SLICE(d6_35, word16, 0) & 0xFF<16>, int16, int32):byte])
	d5_70 = 0x20<32> - d4_68
	branch d5_70 != 0<32> l00002810
l00002802:
	branch dwArg0C <u dwArg04 l0000280A
l00002806:
	branch dwArg10 >u dwArg08 l00002884
l0000280A:
	d1_175 = dwArg08 - dwArg10 (alias)
	goto l00002884
l00002810:
	d0_92 = fn00002534(dwArg04 >>u d4_68, SLICE(qwArg04 >>u d4_68, word32, 0), SLICE(qwArg0C >>u d4_68, word32, 0), out d1_93, out d2_94)
	d3_79 = dwArg10 << d5_70
	d7_108 = __swap(d0_92)
	d6_110 = __swap(d3_79)
	d2_114 = __swap(d0_92 *u32 SLICE(d3_79, word16, 0))
	d3_109 = d3_79 *u32 SLICE(d7_108, word16, 0)
	d7_112 = d7_108 *u32 SLICE(d6_110, word16, 0)
	v39_v37_283 = CONVERT(SLICE(d2_114, word16, 0), uint16, uint32) + SEQ(SLICE(d7_112, word16, 0), SLICE(d3_109, word16, 0))
	d4_111 = d0_92 *u32 SLICE(d6_110, word16, 0)
	v43_v41_284 = CONVERT(SLICE(v39_v37_283, word16, 0), uint16, uint32) + SEQ(SLICE(v39_v37_283, word16, 16), SLICE(d4_111, word16, 0))
	d2_131 = __swap(SEQ(SLICE(d2_114, word16, 16), SLICE(v43_v41_284, word16, 0)))
	d6_89 = dwArg08 << d5_70
	d3_139 = __swap(SEQ(SLICE(d3_109, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_111, word16, 16), 0<16>)) + SEQ(SLICE(d7_112, word16, 16), SLICE(v43_v41_284, word16, 16))
	v50_141 = d1_93 - d2_131
	branch v50_141 <u 0<32> l0000286C
l00002866:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch v50_141 != 0<32> l00002870
l00002868:
	d2_d3_290 = SEQ(d2_131, d3_139) (alias)
	branch d6_89 >=u d3_139 l00002870
l0000286C:
	d2_d3_290 = SEQ(d2_131, d3_139) - SEQ(d2_94, d3_79)
l00002870:
	d1_175 = SLICE(SEQ(d1_93, d6_89) - d2_d3_290 >>u d4_68, word32, 0) (alias)
l00002884:
	return d1_175
fn00002778_exit:


void fn00002B74(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002B74_entry:
l00002B74:
	branch dwArg04 == 0<32> l00002B8C
l00002B80:
	fn00001F80(dwArg04, out a0_111, out a5_112)
	goto l00002BB2
l00002B8C:
	a2_12 = Mem5[0x00003FD8<p32>:word32]
	branch a2_12 == 0<32> l00002BB2
l00002B96:
	branch (Mem20[a2_12 + 24<i32>:word32] & 2<32>) == 0<32> l00002BA8
l00002B9E:
	fn00001F80(a2_12, out a0_113, out a5_114)
l00002BA8:
	a2_12 = Mem46[a2_12 + 12<i32>:word32]
	branch a2_12 != 0<32> l00002B96
l00002BB2:
	return
fn00002B74_exit:


word32 fn00002BB8(word32 d0, word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013D8
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: d0:[0..31]-fn000013D8
// Trashed: CVZN a0 d0
// Preserved: a7
fn00002BB8_entry:
l00002BB8:
	return fn00002C04(d0, Mem8[0x00003FCC<p32>:word32], dwArg04, fp + 8<i32>)
fn00002BB8_exit:


word24 fn00002BD4(byte bArg07, word32 dwArg08)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002C04
// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0:[8..31]-fn00002C04
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00002BD4_entry:
l00002BD4:
	d0_12 = dwArg08
	branch dwArg08 == 0<32> l00002BFE
l00002BE0:
	d0_12 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_12 >=u Mem5[dwArg08 + 8<i32>:word32] l00002BF2
l00002BEA:
	Mem18[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00002BF2:
	Mem26[dwArg08 + 20<i32>:word32] = Mem24[dwArg08 + 20<i32>:word32] + 1<32>
	Mem29[dwArg08 + 4<i32>:word32] = Mem26[dwArg08 + 4<i32>:word32] - 1<32>
l00002BFE:
	return SLICE(d0_12, word24, 0)
fn00002BD4_exit:


word32 fn00002C04(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002BB8
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0:[0..31]-fn00002BB8
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00002C04_entry:
l00002C04:
	d2_1002 = dwArg0C
	a4_280 = dwArg08
	dwLoc3C_4062 = 0<32>
	d4_132 = 0<32>
	d5_1086 = 0<32>
	branch Mem40[dwArg08:byte] == 0<8> l00003C06
l00002C26:
	d3_1918 = 0<32>
	branch Mem49[a4_280:byte] != 0x25<8> l00003B04
l00002C30:
	a3_284 = a4_280 + 1<i32>
	d0_294 = CONVERT(Mem283[0x0000288D<p32> + CONVERT(Mem283[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d6_1174 = 0xFFFFFFFF<32>
	bLoc30_4077 = 0x69<8>
	bLoc2F_4078 = 0<8>
	d0 = d0_294 & 4<32>
	branch (d0_294 & 4<32>) == 0<32> l00002CB4
l00002C58:
	d0_310 = CONVERT(Mem283[0x0000288D<p32> + CONVERT(Mem283[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d6_1174 = 0<32>
	d0 = d0_310 & 4<32>
	branch (d0_310 & 4<32>) == 0<32> l00002CB4
l00002C72:
	d1_326 = __swap(0xA<32>) *u32 SLICE(d6_1174, word16, 0)
	d0_335 = SLICE(d6_1174, word16, 0) *u32 0xA<32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_326, word16, 16), SLICE(d1_326, word16, 0) + SLICE(__swap(d6_1174), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a3_284 = a3_284 + 1<i32>
	d1_344 = CONVERT(Mem320[a3_284:byte], uint8, uint32)
	d0_358 = CONVERT(Mem320[0x0000288D<p32> + CONVERT(Mem320[a3_284:byte], uint8, uint32):byte], uint8, uint32)
	d1 = d1_344 - 0x30<32>
	d6_1174 = d1_344 - 0x30<32> + d0_335
	d0 = d0_358 & 4<32>
	branch (d0_358 & 4<32>) != 0<32> l00002C72
l00002CB4:
	branch Mem365[a3_284:byte] == 0x68<8> l00002CDE
l00002CBA:
	branch Mem365[a3_284:byte] == 0x6C<8> l00002CDE
l00002CC0:
	branch Mem365[a3_284:byte] == 0x4C<8> l00002CDE
l00002CC6:
	branch Mem365[a3_284:byte] == 0x7A<8> l00002CDE
l00002CCC:
	branch Mem365[a3_284:byte] == 0x6A<8> l00002CDE
l00002CD2:
	branch Mem365[a3_284:byte] == 0x74<8> l00002CDE
l00002CD8:
	branch Mem365[a3_284:byte] != 0x2A<8> l00002D46
l00002CDE:
	d7 = SEQ(SLICE(d7, word24, 8), 0<8>)
	d1 = SEQ(SLICE(d1, word24, 8), 0x69<8>)
l00002CE6:
	branch Mem365[a3_284:byte] != 0x2A<8> l00002CF0
l00002CEC:
	d7 = 1<32>
	goto l00002D12
l00002CF0:
	branch SLICE(d1, byte, 0) != 0x68<8> l00002D00
l00002CF6:
	branch Mem365[a3_284:byte] != 0x68<8> l00002D00
l00002CFC:
	d1 = 2<32>
	goto l00002D12
l00002D00:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00002D10
l00002D06:
	branch Mem365[a3_284:byte] != 0x6C<8> l00002D10
l00002D0C:
	d1 = 1<32>
	goto l00002D12
l00002D10:
	d1 = SEQ(SLICE(d1, word24, 8), Mem365[a3_284:byte])
l00002D12:
	a3_284 = a3_284 + 1<32>
	branch Mem365[a3_284:byte] == 0x68<8> l00002CE6
l00002D1A:
	branch Mem365[a3_284:byte] == 0x6C<8> l00002CE6
l00002D20:
	branch Mem365[a3_284:byte] == 0x4C<8> l00002CE6
l00002D26:
	branch Mem365[a3_284:byte] == 0x7A<8> l00002CE6
l00002D2C:
	branch Mem365[a3_284:byte] == 0x6A<8> l00002CE6
l00002D32:
	branch Mem365[a3_284:byte] == 0x74<8> l00002CE6
l00002D38:
	branch Mem365[a3_284:byte] == 0x2A<8> l00002CE6
l00002D3E:
	bLoc30_4077 = SLICE(d1, byte, 0)
	bLoc2F_4078 = SLICE(d7, byte, 0)
l00002D46:
	branch bLoc30_4077 != 0x6A<8> l00002D54
l00002D4E:
	bLoc30_4077 = 1<8>
l00002D54:
	branch bLoc30_4077 != 0x74<8> l00002D62
l00002D5C:
	bLoc30_4077 = 0x69<8>
l00002D62:
	branch bLoc30_4077 != 0x7A<8> l00002D70
l00002D6A:
	bLoc30_4077 = 0x6C<8>
l00002D70:
	v77_519 = Mem518[a3_284:byte]
	v78_525 = SLICE(d7, word24, 8)
	a3_2025 = a3_284 + 1<i32>
	d7 = SEQ(v78_525, v77_519)
	branch v77_519 == 0<8> l00002DE6
l00002D74:
	branch v77_519 == 0x25<8> l00002DE6
l00002D7A:
	branch v77_519 == 0x63<8> l00002DE6
l00002D80:
	branch v77_519 == 0x6E<8> l00002DE6
l00002D86:
	branch v77_519 == 0x5B<8> l00002DE6
l00002D8C:
	Mem547[dwArg04 + 24<i32>:word32] = Mem545[dwArg04 + 24<i32>:word32] | 1<32>
	v84_549 = Mem547[dwArg04 + 20<i32>:word32] - 1<32>
	Mem550[dwArg04 + 20<i32>:word32] = v84_549
	branch v84_549 < 0<32> l00002DB6
l00002D9E:
	a0_575 = Mem550[dwArg04 + 4<i32>:word32]
	Mem580[dwArg04 + 4<i32>:word32] = a0_575 + 1<32>
	v88_584 = Mem580[a0_575:byte]
	d0_562 = SEQ(SLICE(d0, word24, 8), v88_584)
	d1 = CONVERT(v88_584, uint8, uint32)
	goto l00002DC2
l00002DB6:
	d0_562 = fn00003CA8(dwArg04, out a5_6018)
	d1 = d0_562
l00002DC2:
	d0_615 = CONVERT(Mem612[0x0000288D<p32> + (SEQ(SLICE(d0_562, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_615 & 8<32>
	branch (d0_615 & 8<32>) != 0<32> l00002D8C
l00002DE4:
	d3_1918 = 1<32>
l00002DE6:
	v126_634 = SLICE(d1, word24, 8)
	d1_638 = SEQ(v126_634, v77_519 - 0x25<8>)
	branch v77_519 == 0x25<8> l00003232
l00002DF0:
	branch v77_519 == 0x5B<8> l00002F2E
l00002DF8:
	d1_1404 = SEQ(v126_634, v77_519 - 0x63<8>)
	branch v77_519 == 0x63<8> l00002E0E
l00002DFC:
	d1 = SEQ(v126_634, v77_519 - 0x6E<8>)
	branch v77_519 == 0x6E<8> l000032A0
l00002E04:
	d1 = SEQ(v126_634, v77_519 - 0x73<8>)
	branch v77_519 == 0x73<8> l0000314C
l00002E0A:
	goto l00003342
l00002E0E:
	branch d6_1174 != 0xFFFFFFFF<32> l00002E18
l00002E16:
	d6_1174 = 1<32>
l00002E18:
	branch bLoc2F_4078 != 0<8> l00002E32
l00002E1E:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a1_1420 = Mem655[d0:word32]
	goto l00002E34
l00002E32:
	a1_1420 = 0<32>
l00002E34:
	Mem1436[dwArg04 + 24<i32>:word32] = Mem655[dwArg04 + 24<i32>:word32] | 1<32>
	Mem1439[dwArg04 + 20<i32>:word32] = Mem1436[dwArg04 + 20<i32>:word32] - 1<32>
	branch Mem1443[dwArg04 + 20<i32>:word32] < 0<32> l00002E6C
l00002E4C:
	a0_1474 = Mem1443[dwArg04 + 4<i32>:word32]
	Mem1479[dwArg04 + 4<i32>:word32] = a0_1474 + 1<32>
	v222_1483 = Mem1479[a0_1474:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v222_1483)
	dwLoc44_4197 = CONVERT(v222_1483, uint8, uint32)
	d1 = d1_1404
	goto l00002E8A
l00002E6C:
	d0 = fn00003CA8(dwArg04, out a5_6025)
	dwLoc44_4197 = d0
	d1 = d1_1460
l00002E8A:
	d5_1086 = dwLoc44_4197
	d3_1510 = d3_1918 + 1<32>
	d4_1514 = d4_132 + 1<32>
	branch dwLoc44_4197 == 0xFFFFFFFF<32> l00002F02
l00002EA0:
	branch d6_1174 <u d3_1510 l00002F02
l00002EA8:
	d7 = SEQ(v78_525, bLoc2F_4078)
	a4_1535 = a1_1420
l00002EB0:
	branch bLoc2F_4078 != 0<8> l00002EB6
l00002EB4:
	Mem1544[a4_1535:byte] = SLICE(d5_1086, byte, 0)
	a4_1535 = a4_1535 + 1<i32>
l00002EB6:
	Mem1555[dwArg04 + 24<i32>:word32] = Mem1552[dwArg04 + 24<i32>:word32] | 1<32>
	v241_1557 = Mem1555[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1558[dwArg04 + 20<i32>:word32] = v241_1557
	branch v241_1557 < 0<32> l00002EE0
l00002EC8:
	a0_1584 = Mem1558[dwArg04 + 4<i32>:word32]
	Mem1589[dwArg04 + 4<i32>:word32] = a0_1584 + 1<32>
	v243_1593 = Mem1589[a0_1584:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v243_1593)
	d1 = CONVERT(v243_1593, uint8, uint32)
	goto l00002EEC
l00002EE0:
	d0 = fn00003CA8(dwArg04, out a5_6026)
	d1 = d0
l00002EEC:
	d5_1086 = d1
	d3_1510 = d3_1510 + 1<32>
	d4_1514 = d4_1514 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00002EFE
l00002EFA:
	branch d6_1174 >=u d3_1510 l00002EB0
l00002EFE:
l00002F02:
	branch d5_1086 == 0xFFFFFFFF<32> l00002F14
l00002F0A:
	d0 = CONVERT(fn00002BD4(SLICE(d5_1086, byte, 0), dwArg04), uint24, uint32)
l00002F14:
	d3_130 = d3_1510 - 1<32>
	d4_132 = d4_1514 - 1<32>
	branch bLoc2F_4078 != 0<8> l00003AFE
l00002F20:
	branch d3_130 == 0<32> l00003AFE
l00002F26:
	dwLoc3C_4062 = dwLoc3C_4062 + 1<32>
	goto l00003AFE
l00002F2E:
	bLoc4C_4105 = 0<8>
	branch Mem787[a3_2025:byte] != 0x5E<8> l00002F40
l00002F38:
	bLoc4C_4105 = 1<8>
	a3_2025 = a3_2025 + 1<32>
l00002F40:
	d7 = SEQ(v78_525, bLoc4C_4105)
	d1_1069 = 0<32>
l00002F4C:
	branch bLoc4C_4105 == 0<8> l00002F58
l00002F50:
	d5_814 = 0xFF<32>
	goto l00002F5A
l00002F58:
	d5_814 = 0<32>
l00002F5A:
	Mem829[fp + -42<i32> + d1_1069:byte] = SLICE(d5_814, byte, 0)
	d1_1069 = d1_1069 + 1<32>
	branch d1_1069 <u 0x20<32> l00002F4C
l00002F6C:
l00002F78:
	branch Mem863[a3_2025:byte] == 0<8> l00002FEE
l00002F7C:
	v409_868 = Mem863[a3_2025:byte]
	a3_2025 = a3_2025 + 1<i32>
	d1_1069 = SEQ(SLICE(d1_1069, word24, 8), v409_868)
	branch Mem863[a3_2025:byte] != 0x2D<8> l00002F90
l00002F84:
	branch v409_868 >=u Mem863[a3_2025 + 1<i32>:byte] l00002F90
l00002F8A:
	a3_2025 = a3_2025 + 2<32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem863[a3_2025 + 1<32>:byte])
	goto l00002F92
l00002F90:
	d7 = SEQ(SLICE(d7, word24, 8), v409_868)
l00002F92:
	d5_900 = CONVERT(v409_868, uint8, uint32)
	d0 = CONVERT(SLICE(d7, byte, 0), uint8, uint32)
	branch d0 <u d5_900 l00002FE8
l00002F9E:
	branch bLoc4C_4105 == 0<8> l00002FC2
l00002FA2:
	a0_940 = fp + -42<i32> + (d5_900 >>u 3<32>)
	d1_1069 = CONVERT(Mem927[a0_940:byte], uint8, uint32)
	Mem954[a0_940:byte] = SLICE(~(1<32> << (d5_900 & 7<32>)) & d1_1069, byte, 0)
	goto l00002FDE
l00002FC2:
	a0_919 = fp + -42<i32> + (d5_900 >>u 3<32>)
	d1_1069 = CONVERT(Mem927[a0_919:byte], uint8, uint32)
	Mem933[a0_919:byte] = 1<8> << (SLICE(d5_900, byte, 0) & 7<8>) | SLICE(d1_1069, byte, 0)
l00002FDE:
	d5_900 = d5_900 + 1<32>
	d0 = CONVERT(SLICE(d7, byte, 0), uint8, uint32)
	branch d0 >=u d5_900 l00002F9E
l00002FE8:
	branch Mem975[a3_2025:byte] != 0x5D<8> l00002F78
l00002FEE:
	a3_2025 = a3_2025 + 1<32>
	branch bLoc2F_4078 != 0<8> l0000300E
l00002FFA:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a6_1005 = Mem988[d0:word32]
	goto l00003010
l0000300E:
	a6_1005 = 0<32>
l00003010:
	Mem1020[dwArg04 + 24<i32>:word32] = Mem988[dwArg04 + 24<i32>:word32] | 1<32>
	v433_1022 = Mem1020[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1023[dwArg04 + 20<i32>:word32] = v433_1022
	branch v433_1022 < 0<32> l00003042
l00003022:
	a0_1048 = Mem1023[dwArg04 + 4<i32>:word32]
	Mem1053[dwArg04 + 4<i32>:word32] = a0_1048 + 1<32>
	v435_1057 = Mem1053[a0_1048:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v435_1057)
	dwLoc4C_4136 = CONVERT(v435_1057, uint8, uint32)
	d1 = d1_1069
	goto l00003050
l00003042:
	d0 = fn00003CA8(dwArg04, out a5_6030)
	dwLoc4C_4136 = d0
l00003050:
	d5_1086 = dwLoc4C_4136
	d3_1099 = d3_1918 + 1<32>
	d4_1112 = d4_132 + 1<32>
	branch dwLoc4C_4136 == 0xFFFFFFFF<32> l0000311E
l00003064:
	d1 = CONVERT(Mem1126[fp + -42<i32> + fn000026C0(d2_1002, dwLoc4C_4136, 0x00000008<p32>):byte], uint8, uint32)
	d0 = 1<32> << (dwLoc4C_4136 & 7<32>) & d1
	branch d0 == 0<32> l0000311E
l00003094:
	branch d6_1174 <u d3_1099 l0000311E
l0000309A:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2F_4078)
l0000309E:
	branch bLoc2F_4078 != 0<8> l000030A4
l000030A2:
	Mem1208[a6_1005:byte] = SLICE(d5_1086, byte, 0)
	a6_1005 = a6_1005 + 1<i32>
l000030A4:
	Mem1219[dwArg04 + 24<i32>:word32] = Mem1216[dwArg04 + 24<i32>:word32] | 1<32>
	v450_1221 = Mem1219[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1222[dwArg04 + 20<i32>:word32] = v450_1221
	branch v450_1221 < 0<32> l000030CE
l000030B6:
	a0_1248 = Mem1222[dwArg04 + 4<i32>:word32]
	Mem1253[dwArg04 + 4<i32>:word32] = a0_1248 + 1<32>
	v452_1257 = Mem1253[a0_1248:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v452_1257)
	d1 = CONVERT(v452_1257, uint8, uint32)
	goto l000030DA
l000030CE:
	d0 = fn00003CA8(dwArg04, out a5_6031)
	d1 = d0
l000030DA:
	d5_1086 = d1
	d3_1099 = d3_1099 + 1<32>
	d4_1112 = d4_1112 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l0000311A
l000030E8:
	d1 = CONVERT(Mem1293[fp + -42<i32> + fn000026C0(d2_1002, d1, 0x00000008<p32>):byte], uint8, uint32)
	d0 = 1<32> << (d1 & 7<32>) & d1
	branch d0 == 0<32> l0000311A
l00003116:
	branch d6_1174 >=u d3_1099 l0000309E
l0000311A:
l0000311E:
	branch d5_1086 == 0xFFFFFFFF<32> l00003130
l00003126:
	d0 = CONVERT(fn00002BD4(SLICE(d5_1086, byte, 0), dwArg04), uint24, uint32)
l00003130:
	d3_130 = d3_1099 - 1<32>
	d4_132 = d4_1112 - 1<32>
	branch bLoc2F_4078 != 0<8> l00003AFE
l0000313C:
	branch d3_130 == 0<32> l00003AFE
l00003142:
	Mem1397[a6_1005:byte] = 0<8>
	dwLoc3C_4062 = dwLoc3C_4062 + 1<32>
	goto l00003AFE
l0000314C:
	branch bLoc2F_4078 != 0<8> l00003166
l00003152:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	d2_1002 = d0 + 4<32>
	a5_1788 = Mem655[d0:word32]
	goto l00003168
l00003166:
	a5_1788 = 0<32>
l00003168:
	branch d5_1086 == 0xFFFFFFFF<32> l00003204
l00003172:
	d0_1826 = CONVERT(Mem655[0x0000288D<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_1826 & 8<32>
	branch (d0_1826 & 8<32>) != 0<32> l00003204
l0000318E:
	branch d6_1174 <u d3_1918 l00003204
l00003192:
	d7 = SEQ(v78_525, bLoc2F_4078)
l00003196:
	branch bLoc2F_4078 != 0<8> l0000319C
l0000319A:
	Mem1853[a5_1788:byte] = SLICE(d5_1086, byte, 0)
	a5_1788 = a5_1788 + 1<i32>
l0000319C:
	Mem1864[dwArg04 + 24<i32>:word32] = Mem1861[dwArg04 + 24<i32>:word32] | 1<32>
	v161_1866 = Mem1864[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1867[dwArg04 + 20<i32>:word32] = v161_1866
	branch v161_1866 < 0<32> l000031C6
l000031AE:
	a0_1893 = Mem1867[dwArg04 + 4<i32>:word32]
	Mem1898[dwArg04 + 4<i32>:word32] = a0_1893 + 1<32>
	v163_1902 = Mem1898[a0_1893:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v163_1902)
	d1 = CONVERT(v163_1902, uint8, uint32)
	goto l000031D2
l000031C6:
	d0 = fn00003CA8(dwArg04, out a5_1788)
	d1 = d0
l000031D2:
	d5_1086 = d1
	d3_1918 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003200
l000031E0:
	d0_1939 = CONVERT(Mem1936[0x0000288D<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_1939 & 8<32>
	branch (d0_1939 & 8<32>) != 0<32> l00003200
l000031FC:
	branch d6_1174 >=u d3_1918 l00003196
l00003200:
l00003204:
	branch d5_1086 == 0xFFFFFFFF<32> l00003216
l0000320C:
	d0 = CONVERT(fn00002BD4(SLICE(d5_1086, byte, 0), dwArg04), uint24, uint32)
l00003216:
	d3_130 = d3_1918 - 1<32>
	d4_132 = d4_132 - 1<32>
	branch bLoc2F_4078 != 0<8> l00003AFE
l00003222:
	branch d3_130 == 0<32> l00003AFE
l00003228:
	Mem2013[a5_1788:byte] = 0<8>
	dwLoc3C_4062 = dwLoc3C_4062 + 1<32>
	goto l00003AFE
l00003232:
	Mem657[dwArg04 + 24<i32>:word32] = Mem655[dwArg04 + 24<i32>:word32] | 1<32>
	v138_659 = Mem657[dwArg04 + 20<i32>:word32] - 1<32>
	Mem660[dwArg04 + 20<i32>:word32] = v138_659
	branch v138_659 < 0<32> l00003264
l00003244:
	a0_687 = Mem660[dwArg04 + 4<i32>:word32]
	Mem692[dwArg04 + 4<i32>:word32] = a0_687 + 1<32>
	v140_696 = Mem692[a0_687:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v140_696)
	dwLoc4C_4097 = CONVERT(v140_696, uint8, uint32)
	d1 = d1_638
	goto l00003272
l00003264:
	d0 = fn00003CA8(dwArg04, out a5_6021)
	dwLoc4C_4097 = d0
	d1 = d1_675
l00003272:
	d5_1086 = dwLoc4C_4097
	d3_130 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
	branch dwLoc4C_4097 == 0x25<32> l00003AFE
l00003286:
	branch dwLoc4C_4097 == 0xFFFFFFFF<32> l00003298
l0000328E:
	d0 = CONVERT(fn00002BD4(SLICE(dwLoc4C_4097, byte, 0), dwArg04), uint24, uint32)
l00003298:
	d3_130 = d3_130 - 1<32>
	d4_132 = d4_132 - 1<32>
	goto l00003AFE
l000032A0:
	branch bLoc2F_4078 != 0<8> l00003338
l000032A8:
	branch bLoc30_4077 != 1<8> l000032CA
l000032B0:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_1766 = Mem655[d0:word32]
	Mem1767[a0_1766 + 4<i32>:word32] = d4_132
	Mem1768[a0_1766:word32] = 0<32>
	d2_1002 = d0 + 4<32>
	goto l00003338
l000032CA:
	branch bLoc30_4077 != 0x6C<8> l000032E8
l000032D2:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1754[Mem655[d0:word32]:word32] = d4_132
	d2_1002 = d0 + 4<32>
	goto l00003338
l000032E8:
	branch bLoc30_4077 != 0x68<8> l00003306
l000032F0:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1741[Mem655[d0:word32]:word16] = SLICE(d4_132, word16, 0)
	d2_1002 = d0 + 4<32>
	goto l00003338
l00003306:
	branch bLoc30_4077 != 2<8> l00003324
l0000330E:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1727[Mem655[d0:word32]:byte] = SLICE(d4_132, byte, 0)
	d2_1002 = d0 + 4<32>
	goto l00003338
l00003324:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem1713[Mem655[d0:word32]:word32] = d4_132
	d2_1002 = d0 + 4<32>
l00003338:
	d3_130 = 1<32>
	dwLoc3C_4062 = dwLoc3C_4062 + 1<32>
	goto l00003AFE
l00003342:
	dwLoc48_4248 = 0<32>
	dwLoc4C_4249 = 0<32>
	dwLoc0A_4250 = 0<32>
	branch v77_519 != 0<8> l00003354
l00003352:
	a3_2025 = a3_2025 - 1<32>
l00003354:
	branch v77_519 != 0x70<8> l00003362
l0000335A:
	bLoc30_4077 = 0x6C<8>
	d7 = 0x78<32>
l00003362:
	branch d5_1086 != 0x2D<32> l00003370
l0000336A:
	branch SLICE(d7, byte, 0) != 0x75<8> l00003378
l00003370:
	branch d5_1086 != 0x2B<32> l000033C8
l00003378:
	branch d6_1174 <u d3_1918 l000033C8
l0000337C:
	Mem2071[dwArg04 + 24<i32>:word32] = Mem2064[dwArg04 + 24<i32>:word32] | 1<32>
	v184_2073 = Mem2071[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2074[dwArg04 + 20<i32>:word32] = v184_2073
	dwLoc0A_4250 = d5_1086
	branch v184_2073 < 0<32> l000033B2
l00003392:
	a0_2098 = Mem2074[dwArg04 + 4<i32>:word32]
	Mem2103[dwArg04 + 4<i32>:word32] = a0_2098 + 1<32>
	v186_2107 = Mem2103[a0_2098:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v186_2107)
	dwLoc44_4254 = CONVERT(v186_2107, uint8, uint32)
	goto l000033C0
l000033B2:
	d0 = fn00003CA8(dwArg04, out a5_6022)
	dwLoc44_4254 = d0
l000033C0:
	d5_1086 = dwLoc44_4254
	d3_1918 = d3_1918 + 1<32>
	d4_132 = d4_132 + 1<32>
l000033C8:
	branch SLICE(d7, byte, 0) != 0x69<8> l0000353A
l000033D0:
	branch d5_1086 != 0x30<32> l000034FC
l000033DA:
	branch d6_1174 <u d3_1918 l000034FC
l000033E0:
	Mem2213[dwArg04 + 24<i32>:word32] = Mem2172[dwArg04 + 24<i32>:word32] | 1<32>
	v196_2215 = Mem2213[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2216[dwArg04 + 20<i32>:word32] = v196_2215
	branch v196_2215 < 0<32> l00003412
l000033F2:
	a0_2241 = Mem2216[dwArg04 + 4<i32>:word32]
	Mem2246[dwArg04 + 4<i32>:word32] = a0_2241 + 1<32>
	v198_2250 = Mem2246[a0_2241:byte]
	d0_2228 = SEQ(SLICE(d0, word24, 8), v198_2250)
	dwLoc44_4260 = CONVERT(v198_2250, uint8, uint32)
	goto l00003420
l00003412:
	d0_2228 = fn00003CA8(dwArg04, out a5_6023)
	dwLoc44_4260 = d0_2228
l00003420:
	bLoc41_4266 = SLICE(dwLoc44_4260, byte, 0) (alias)
	d0_2281 = SEQ(SLICE(d0_2228, word24, 8), bLoc41_4266)
	d3_2273 = d3_1918 + 1<32>
	d0 = d0_2281 & 0xFF<32>
	branch __btst<byte>(Mem2271[0x0000288D<p32> + CONVERT(SLICE(d0_2281, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l00003446
l00003442:
	d0 = CONVERT(bLoc41_4266 | 0x20<8>, uint8, uint32)
l00003446:
	branch d0 != 0x78<32> l000034DE
l00003450:
	branch d6_1174 <u d3_2273 l000034DE
l00003456:
	Mem2313[dwArg04 + 24<i32>:word32] = Mem2271[dwArg04 + 24<i32>:word32] | 1<32>
	v212_2315 = Mem2313[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2316[dwArg04 + 20<i32>:word32] = v212_2315
	branch v212_2315 < 0<32> l00003488
l00003468:
	a0_2341 = Mem2316[dwArg04 + 4<i32>:word32]
	Mem2346[dwArg04 + 4<i32>:word32] = a0_2341 + 1<32>
	v214_2350 = Mem2346[a0_2341:byte]
	d0_2328 = SEQ(SLICE(d0, word24, 8), v214_2350)
	dwLoc44_4268 = CONVERT(v214_2350, uint8, uint32)
	goto l00003496
l00003488:
	d0_2328 = fn00003CA8(dwArg04, out a5_6024)
	dwLoc44_4268 = d0_2328
l00003496:
	d0_2391 = CONVERT(Mem2371[0x0000288D<p32> + (SEQ(SLICE(d0_2328, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2391 & 0x44<32>
	branch (d0_2391 & 0x44<32>) == 0<32> l000034C2
l000034BC:
	branch d6_1174 <u d3_2273 + 1<32> l000034C2
l000034C0:
	d7 = 0x78<32>
l000034C2:
	branch dwLoc44_4268 == 0xFFFFFFFF<32> l000034D8
l000034CC:
	d0 = CONVERT(fn00002BD4(SLICE(dwLoc44_4268, byte, 0), dwArg04), uint24, uint32)
l000034D8:
	goto l000034E0
l000034DE:
	d7 = 0x6F<32>
l000034E0:
	branch dwLoc44_4260 == 0xFFFFFFFF<32> l000034F6
l000034EA:
	d0 = CONVERT(fn00002BD4(SLICE(dwLoc44_4260, byte, 0), dwArg04), uint24, uint32)
l000034F6:
	goto l0000353A
l000034FC:
	d0_2179 = CONVERT(Mem2172[0x0000288D<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2179 & 4<32>
	branch (d0_2179 & 4<32>) != 0<32> l0000353A
l00003518:
	d0_2194 = CONVERT(Mem2172[0x0000288D<p32> + (CONVERT(SLICE(d5_1086, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2194 & 0x44<32>
	branch (d0_2194 & 0x44<32>) == 0<32> l0000353A
l00003534:
	branch d6_1174 <u d3_1918 l0000353A
l00003538:
	d7 = 0x78<32>
l0000353A:
	d4_2586 = d4_132
	d3_2499 = d3_1918
	branch SLICE(d7, byte, 0) != 0x78<8> l0000366E
l00003542:
	branch d5_1086 != 0x30<32> l0000366E
l0000354C:
	branch d6_1174 <u d3_1918 l0000366E
l00003552:
	Mem2510[dwArg04 + 24<i32>:word32] = Mem2507[dwArg04 + 24<i32>:word32] | 1<32>
	v267_2512 = Mem2510[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2513[dwArg04 + 20<i32>:word32] = v267_2512
	branch v267_2512 < 0<32> l00003584
l00003564:
	a0_2540 = Mem2513[dwArg04 + 4<i32>:word32]
	Mem2545[dwArg04 + 4<i32>:word32] = a0_2540 + 1<32>
	v269_2549 = Mem2545[a0_2540:byte]
	d0_2527 = SEQ(SLICE(d0, word24, 8), v269_2549)
	dwLoc44_4288 = CONVERT(v269_2549, uint8, uint32)
	goto l00003592
l00003584:
	d0_2527 = fn00003CA8(dwArg04, out a5_6027)
	dwLoc44_4288 = d0_2527
l00003592:
	bLoc41_4294 = SLICE(dwLoc44_4288, byte, 0) (alias)
	d0_2593 = SEQ(SLICE(d0_2527, word24, 8), bLoc41_4294)
	d3_2584 = d3_1918 + 1<32>
	d4_2588 = d4_132 + 1<32>
	d0 = d0_2593 & 0xFF<32>
	branch __btst<byte>(Mem2582[0x0000288D<p32> + CONVERT(SLICE(d0_2593, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l000035B8
l000035B4:
	d0 = CONVERT(bLoc41_4294 | 0x20<8>, uint8, uint32)
l000035B8:
	branch d0 != 0x78<32> l00003654
l000035C2:
	branch d6_1174 <u d3_2584 l00003654
l000035C8:
	Mem2621[dwArg04 + 24<i32>:word32] = Mem2582[dwArg04 + 24<i32>:word32] | 1<32>
	v282_2623 = Mem2621[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2624[dwArg04 + 20<i32>:word32] = v282_2623
	branch v282_2623 < 0<32> l000035FA
l000035DA:
	a0_2649 = Mem2624[dwArg04 + 4<i32>:word32]
	Mem2654[dwArg04 + 4<i32>:word32] = a0_2649 + 1<32>
	v284_2658 = Mem2654[a0_2649:byte]
	d0_2636 = SEQ(SLICE(d0, word24, 8), v284_2658)
	dwLoc44_4296 = CONVERT(v284_2658, uint8, uint32)
	goto l00003608
l000035FA:
	d0_2636 = fn00003CA8(dwArg04, out a5_6028)
	dwLoc44_4296 = d0_2636
l00003608:
	d0_2696 = CONVERT(Mem2679[0x0000288D<p32> + (SEQ(SLICE(d0_2636, word24, 8), SLICE(dwLoc44_4296, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d3_2499 = d3_2584 + 1<32>
	d4_2586 = d4_2588 + 1<32>
	d0 = d0_2696 & 0x44<32>
	branch (d0_2696 & 0x44<32>) == 0<32> l0000363A
l00003630:
	branch d6_1174 <u d3_2584 + 1<32> l0000363A
l00003634:
	d5_1086 = dwLoc44_4296
	goto l0000366E
l0000363A:
	branch dwLoc44_4296 == 0xFFFFFFFF<32> l00003650
l00003644:
	d0 = CONVERT(fn00002BD4(SLICE(dwLoc44_4296, byte, 0), dwArg04), uint24, uint32)
l00003650:
l00003654:
	branch dwLoc44_4288 == 0xFFFFFFFF<32> l0000366A
l0000365E:
	d0 = CONVERT(fn00002BD4(SLICE(dwLoc44_4288, byte, 0), dwArg04), uint24, uint32)
l0000366A:
	d3_2499 = d3_2584 - 1<32>
	d4_2586 = d4_2588 - 1<32>
l0000366E:
	branch SLICE(d7, byte, 0) == 0x78<8> l0000367A
l00003674:
	branch SLICE(d7, byte, 0) != 0x58<8> l00003684
l0000367A:
	dwLoc38_4318 = 0x10<32>
	goto l000036A2
l00003684:
	branch SLICE(d7, byte, 0) != 0x6F<8> l00003694
l0000368A:
	dwLoc44_4315 = 8<32>
	goto l0000369C
l00003694:
	dwLoc44_4315 = 0xA<32>
l0000369C:
	dwLoc38_4318 = dwLoc44_4315
l000036A2:
	d0_2843 = CONVERT(Mem2814[0x0000288D<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2843 & 0x44<32>
	dwLoc44_4323 = d4_2586
	bLoc2E_4324 = SLICE(d7, byte, 0)
	qwLoc4C_6009 = 0<64> (alias)
	branch (d0_2843 & 0x44<32>) == 0<32> l0000390A
l000036D4:
	branch dwLoc38_4318 != 0xA<32> l0000370A
l000036DE:
	d0_2899 = CONVERT(Mem2882[0x0000288D<p32> + (CONVERT(SLICE(d5_1086, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_2899 & 4<32>
	dwLoc44_4323 = d4_2586
	bLoc2E_4324 = SLICE(d7, byte, 0)
	qwLoc4C_6009 = 0<64> (alias)
	branch (d0_2899 & 4<32>) == 0<32> l0000390A
l0000370A:
	branch dwLoc38_4318 != 8<32> l0000372A
l00003714:
	dwLoc44_4323 = d4_2586
	bLoc2E_4324 = SLICE(d7, byte, 0)
	qwLoc4C_6009 = 0<64> (alias)
	branch d5_1086 > 0x37<32> l0000390A
l0000372A:
	dwLoc44_4323 = d4_2586
	bLoc2E_4324 = SLICE(d7, byte, 0)
	qwLoc4C_6009 = 0<64> (alias)
	branch d6_1174 <u d3_2499 l0000390A
l00003740:
	d7 = dwLoc38_4318
l00003748:
	d0_2992 = fn00003C28(d4_2586, dwLoc38_4318 >> 0x1F<32>, dwLoc38_4318, dwLoc4C_4249, dwLoc48_4248, out d1_2993)
	branch (CONVERT(Mem3004[0x0000288D<p32> + (SEQ(SLICE(dwLoc38_4318 >> 0x1F<32>, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 4<32>) == 0<32> l000037A8
l0000379E:
	d4_2586 = d5_1086 - 0x30<32>
	goto l000037AA
l000037A8:
	d4_2586 = 0<32>
l000037AA:
	d0_3040 = d4_2586 >> 0x1F<32>
	d2_d2_4041 = SEQ(d0_2992, d4_2586) + SEQ(d0_3040, d1_2993)
	d2_3047 = SLICE(d2_d2_4041, word32, 0) (alias)
	d2_3057 = SLICE(d2_d2_4041, word32, 32) (alias)
	branch (CONVERT(Mem3059[0x0000288D<p32> + (SEQ(SLICE(d0_3040, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 1<32>) == 0<32> l000037FA
l000037F0:
	d6_3082 = d5_1086 - 0x37<32>
	goto l000037FC
l000037FA:
	d6_3082 = 0<32>
l000037FC:
	d0_3097 = d6_3082 >> 0x1F<32>
	d2_d2_4043 = SEQ(d2_3057, d6_3082) + SEQ(d0_3097, d2_3047)
	d2_3104 = SLICE(d2_d2_4043, word32, 0) (alias)
	d2_3113 = SLICE(d2_d2_4043, word32, 32) (alias)
	branch (CONVERT(Mem3115[0x0000288D<p32> + (SEQ(SLICE(d0_3097, word24, 8), SLICE(d5_1086, byte, 0)) & 0xFF<32>):byte], uint8, uint32) & 2<32>) == 0<32> l0000384C
l00003842:
	d2_3138 = d5_1086 - 0x57<32>
	goto l0000384E
l0000384C:
	d2_3138 = 0<32>
l0000384E:
	Mem3183[dwArg04 + 24<i32>:word32] = Mem3169[dwArg04 + 24<i32>:word32] | 1<32>
	v343_3185 = Mem3183[dwArg04 + 20<i32>:word32] - 1<32>
	Mem3186[dwArg04 + 20<i32>:word32] = v343_3185
	d2_d2_4045 = SEQ(d2_3113, d2_3138) + SEQ(d2_3138 >> 0x1F<32>, d2_3104)
	dwLoc48_4248 = SLICE(d2_d2_4045, word32, 0)
	dwLoc4C_4249 = SLICE(d2_d2_4045, word32, 32)
	branch v343_3185 < 0<32> l000038A0
l00003888:
	a0_3210 = Mem3186[dwArg04 + 4<i32>:word32]
	Mem3215[dwArg04 + 4<i32>:word32] = a0_3210 + 1<32>
	v345_3219 = Mem3215[a0_3210:byte]
	d0_3197 = CONVERT(v345_3219, uint8, uint32)
	d1 = CONVERT(v345_3219, uint8, uint32)
	goto l000038AC
l000038A0:
	d0_3197 = fn00003CA8(dwArg04, out a5_6029)
	d1 = d0_3197
l000038AC:
	d0_3248 = CONVERT(Mem3236[0x0000288D<p32> + (SEQ(SLICE(d0_3197, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d3_2499 = d3_6032 + 1<32>
	dwLoc44_4323 = dwLoc44_4323 + 1<32>
	d0 = d0_3248 & 0x44<32>
	qwLoc4C_6009 = d2_d2_4045 (alias)
	branch (d0_3248 & 0x44<32>) == 0<32> l0000390A
l000038D0:
	branch dwLoc38_4318 != 0xA<32> l000038F4
l000038D8:
	d0_3270 = CONVERT(Mem3236[0x0000288D<p32> + (CONVERT(SLICE(d1, byte, 0), uint8, uint32) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_3270 & 4<32>
	qwLoc4C_6009 = d2_d2_4045 (alias)
	branch (d0_3270 & 4<32>) == 0<32> l0000390A
l000038F4:
	branch dwLoc38_4318 != 8<32> l00003904
l000038FC:
	qwLoc4C_6009 = d2_d2_4045 (alias)
	branch d1 > 0x37<32> l0000390A
l00003904:
	qwLoc4C_6009 = d2_d2_4045 (alias)
	d3_6032 = d3_2499
	branch d6_1174 >=u d3_6032 + 1<32> l00003748
l0000390A:
	dwLoc4C_4522 = SLICE(qwLoc4C_6009, word32, 0) (alias)
	dwLoc48_4485 = SLICE(qwLoc4C_6009, word32, 32) (alias)
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2E_4324)
	d4_3307 = dwLoc44_4323
	branch dwLoc0A_4250 == 0<32> l0000393E
l0000391C:
	branch d3_2499 != 2<32> l0000393E
l00003924:
	branch d5_1086 == 0xFFFFFFFF<32> l00003936
l0000392C:
	d0 = CONVERT(fn00002BD4(SLICE(d5_1086, byte, 0), dwArg04), uint24, uint32)
l00003936:
	d3_2499 = d3_2499 - 1<32>
	d4_3307 = dwLoc44_4323 - 1<32>
	d5_1086 = dwLoc0A_4250
l0000393E:
	branch d5_1086 == 0xFFFFFFFF<32> l00003950
l00003946:
	d0 = CONVERT(fn00002BD4(SLICE(d5_1086, byte, 0), dwArg04), uint24, uint32)
l00003950:
	d3_130 = d3_2499 - 1<32>
	d4_132 = d4_3307 - 1<32>
	branch bLoc2F_4078 != 0<8> l00003AFE
l0000395C:
	branch d3_130 == 0<32> l00003AFE
l00003962:
	branch bLoc2E_4324 != 0x75<8> l00003A24
l0000396A:
	bLoc44_4664 = bLoc30_4077 - 1<8>
	branch bLoc44_4664 == 0<8> l00003994
l0000397E:
	branch bLoc44_4664 == 1<8> l000039EC
l00003984:
	branch bLoc44_4664 == 0x67<8> l000039D0
l0000398C:
	branch bLoc44_4664 == 0x6B<8> l000039B4
l00003992:
	goto l00003A08
l00003994:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_3575 = Mem3559[d0:word32]
	Mem3577[a0_3575 + 4<i32>:word32] = dwLoc48_4485
	Mem3579[a0_3575:word32] = dwLoc4C_4522
	d2_1002 = d0 + 4<32>
	goto l00003AFA
l000039B4:
	d0_3628 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3635[Mem3622[d0_3628:word32]:word32] = dwLoc48_4485
	d2_1002 = d0_3628 + 4<32>
	d0 = dwLoc48_4485
	goto l00003AFA
l000039D0:
	d0_3609 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3617[Mem3603[d0_3609:word32]:word16] = SLICE(dwLoc48_4485, word16, 0)
	d2_1002 = d0_3609 + 4<32>
	d0 = dwLoc48_4485
	goto l00003AFA
l000039EC:
	d0_3590 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3598[Mem3584[d0_3590:word32]:byte] = SLICE(dwLoc48_4485, byte, 0)
	d2_1002 = d0_3590 + 4<32>
	d0 = dwLoc48_4485
	goto l00003AFA
l00003A08:
	d0_3642 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3649[Mem3622[d0_3642:word32]:word32] = dwLoc48_4485
	d2_1002 = d0_3642 + 4<32>
	d0 = dwLoc48_4485
	goto l00003AFA
l00003A24:
	branch dwLoc0A_4250 != 0x2D<32> l00003A40
l00003A2E:
	d0_d1_4047 = -qwLoc4C_6009
	Mem3427[dwLoc44_4323:word32] = SLICE(d0_d1_4047, word32, 32)
	d1 = SLICE(d0_d1_4047, word32, 0)
	Mem3429[dwLoc44_4323 + 4<i32>:word32] = d1
	goto l00003A4C
l00003A40:
	dwLoc40 = dwLoc48_4485
	dwLoc44_4323 = dwLoc4C_4522
l00003A4C:
	bLoc4C_4602 = bLoc30_4077 - 1<8>
	branch bLoc4C_4602 == 0<8> l00003A76
l00003A60:
	branch bLoc4C_4602 == 1<8> l00003AC8
l00003A66:
	branch bLoc4C_4602 == 0x67<8> l00003AAE
l00003A6E:
	branch bLoc4C_4602 == 0x6B<8> l00003A94
l00003A74:
	goto l00003AE2
l00003A76:
	d0 = __align(d2_1002 + 3<32>, 4<i32>)
	a0_3471 = Mem3451[d0:word32]
	Mem3473[a0_3471 + 4<i32>:word32] = dwLoc40
	Mem3475[a0_3471:word32] = dwLoc44_4323
	d2_1002 = d0 + 4<32>
	goto l00003AFA
l00003A94:
	d0_3524 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3531[Mem3518[d0_3524:word32]:word32] = dwLoc40
	d2_1002 = d0_3524 + 4<32>
	d0 = dwLoc40
	goto l00003AFA
l00003AAE:
	d0_3505 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3513[Mem3499[d0_3505:word32]:word16] = SLICE(dwLoc40, word16, 0)
	d2_1002 = d0_3505 + 4<32>
	d0 = dwLoc40
	goto l00003AFA
l00003AC8:
	d0_3486 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3494[Mem3480[d0_3486:word32]:byte] = SLICE(dwLoc40, byte, 0)
	d2_1002 = d0_3486 + 4<32>
	d0 = dwLoc40
	goto l00003AFA
l00003AE2:
	d0_3538 = __align(d2_1002 + 3<32>, 4<i32>)
	Mem3545[Mem3518[d0_3538:word32]:word32] = dwLoc40
	d2_1002 = d0_3538 + 4<32>
	d0 = dwLoc40
l00003AFA:
	dwLoc3C_4062 = dwLoc3C_4062 + 1<32>
l00003AFE:
	a4_280 = a3_2025
	goto l00003BFC
l00003B04:
	d0_63 = CONVERT(Mem49[0x0000288D<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_280:byte]) & 0xFF<32>):byte], uint8, uint32)
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l00003B90
l00003B20:
	Mem174[dwArg04 + 24<i32>:word32] = Mem172[dwArg04 + 24<i32>:word32] | 1<32>
	v97_176 = Mem174[dwArg04 + 20<i32>:word32] - 1<32>
	Mem177[dwArg04 + 20<i32>:word32] = v97_176
	branch v97_176 < 0<32> l00003B4A
l00003B32:
	a0_202 = Mem177[dwArg04 + 4<i32>:word32]
	Mem207[dwArg04 + 4<i32>:word32] = a0_202 + 1<32>
	v99_211 = Mem207[a0_202:byte]
	d0_189 = SEQ(SLICE(d0, word24, 8), v99_211)
	d1 = CONVERT(v99_211, uint8, uint32)
	goto l00003B56
l00003B4A:
	d0_189 = fn00003CA8(dwArg04, out a5_6019)
	d1 = d0_189
l00003B56:
	d0_242 = CONVERT(Mem239[0x0000288D<p32> + (SEQ(SLICE(d0_189, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], uint8, uint32)
	d5_1086 = d1
	d4_132 = d4_132 + 1<32>
	d0 = d0_242 & 8<32>
	branch (d0_242 & 8<32>) != 0<32> l00003B20
l00003B78:
	branch d1 == 0xFFFFFFFF<32> l00003B8A
l00003B80:
	d0 = CONVERT(fn00002BD4(SLICE(d1, byte, 0), dwArg04), uint24, uint32)
l00003B8A:
	d4_132 = d4_132 - 1<32>
	d3_130 = 1<32>
	goto l00003BFA
l00003B90:
	Mem72[dwArg04 + 24<i32>:word32] = Mem49[dwArg04 + 24<i32>:word32] | 1<32>
	v113_74 = Mem72[dwArg04 + 20<i32>:word32] - 1<32>
	Mem75[dwArg04 + 20<i32>:word32] = v113_74
	branch v113_74 < 0<32> l00003BC2
l00003BA2:
	a0_100 = Mem75[dwArg04 + 4<i32>:word32]
	Mem105[dwArg04 + 4<i32>:word32] = a0_100 + 1<32>
	dwLoc4C_4064 = CONVERT(Mem105[a0_100:byte], uint8, uint32)
	goto l00003BD0
l00003BC2:
	dwLoc4C_4064 = fn00003CA8(dwArg04, out a5_6020)
	d1 = d1_88
l00003BD0:
	d0 = CONVERT(Mem127[a4_280:byte], int8, int32)
	d5_1086 = dwLoc4C_4064
	d3_130 = 1<32>
	d4_132 = d4_132 + 1<32>
	branch d0 == dwLoc4C_4064 l00003BFA
l00003BE4:
	branch dwLoc4C_4064 == 0xFFFFFFFF<32> l00003BF6
l00003BEC:
	d0 = CONVERT(fn00002BD4(SLICE(dwLoc4C_4064, byte, 0), dwArg04), uint24, uint32)
l00003BF6:
	d3_130 = 0<32>
	d4_132 = d4_132 - 1<32>
l00003BFA:
	a4_280 = a4_280 + 1<32>
l00003BFC:
	branch d3_130 == 0<32> l00003C06
l00003C00:
	branch Mem3739[a4_280:byte] != 0<8> l00002C26
l00003C06:
	branch d5_1086 != 0xFFFFFFFF<32> l00003C18
l00003C0E:
	branch dwLoc3C_4062 != 0<32> l00003C18
l00003C14:
	d0_3780 = d5_1086
	goto l00003C1C
l00003C18:
	d0_3780 = dwLoc3C_4062
l00003C1C:
	return d0_3780
fn00002C04_exit:


word32 fn00003C28(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 & d1Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002C04
// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0:[0..31]-fn00002C04 d1:[0..31]-fn00002C04
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003C28_entry:
l00003C28:
	d0_23 = __swap(dwArg08)
	d1_25 = __swap(dwArg10)
	d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u32 SLICE(dwArg10, word16, 0)
	d1_32 = d1_25 *u32 SLICE(d0_23, word16, 0)
	d2_39 = dwArg08 *u32 SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u32 SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l00003C5C
l00003C56:
	d1_32 = d1_32 + 0x10000<32>
l00003C5C:
	d2_45 = __swap(d2_39)
	d3_65 = __swap(dwArg0C) *u32 SLICE(dwArg08, word16, 0)
	d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65, word16, 0) + SLICE(__swap(dwArg08), word16, 0) *u SLICE(dwArg0C, word16, 0)))
	d3_83 = __swap(dwArg04) *u32 SLICE(dwArg10, word16, 0)
	d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83, word16, 0) + SLICE(__swap(dwArg10), word16, 0) *u SLICE(dwArg04, word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return CONVERT(SLICE(d2_45, word16, 0), uint16, uint32) + d1_32 + (dwArg0C *u32 SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u32 SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn00003C28_exit:


word32 fn00003CA8(word32 dwArg04, word32 & a5Out)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002C04
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5:[0..31]-fn00002C04 d0:[0..31]-fn00002C04
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00003CA8_entry:
l00003CA8:
	a5_295 = fn00002400()
	branch dwArg04 != 0<32> l00003CC0
l00003CBA:
	d0_169 = 0xFFFFFFFF<32>
	goto l00003D9E
l00003CC0:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 0x2A<32>) == 0x20<32> l00003CD2
l00003CCC:
	d0_169 = 0xFFFFFFFF<32>
	goto l00003D9E
l00003CD2:
	Mem51[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<32>
	branch (Mem51[dwArg04 + 24<i32>:word32] & 0x200<32>) == 0<32> l00003CEA
l00003CE4:
	a5_295 = fn00003DA4()
l00003CEA:
	branch Mem51[dwArg04 + 28<i32>:word32] != 0<32> l00003D08
l00003CF0:
	branch (Mem51[dwArg04 + 24<i32>:word32] & 4<32>) == 0<32> l00003D00
l00003CF8:
	Mem85[dwArg04 + 28<i32>:word32] = 1<32>
	goto l00003D08
l00003D00:
	Mem80[dwArg04 + 28<i32>:word32] = 0x400<32>
l00003D08:
	branch Mem90[dwArg04 + 8<i32>:word32] != 0<32> l00003D44
l00003D0E:
	branch (Mem90[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003D22
l00003D1E:
	d4_102 = 2<32>
	goto l00003D24
l00003D22:
	d4_102 = 1<32>
l00003D24:
	d0_126 = fn0000202C(d4_102 + Mem90[dwArg04 + 28<i32>:word32], out a0_324)
	branch d0_126 != 0<32> l00003D3C
l00003D38:
	d0_169 = 0xFFFFFFFF<32>
	goto l00003D9E
l00003D3C:
	Mem141[dwArg04 + 8<i32>:word32] = d0_126 + 1<i32>
l00003D44:
	Mem149[dwArg04 + 4<i32>:word32] = Mem147[dwArg04 + 8<i32>:word32]
	d0_154 = execPrivate2()
	Mem156[dwArg04 + 20<i32>:word32] = d0_154
	v24_157 = Mem156[dwArg04 + 20<i32>:word32] - 1<32>
	Mem158[dwArg04 + 20<i32>:word32] = v24_157
	branch v24_157 >= 0<32> l00003D8A
l00003D68:
	branch Mem158[dwArg04 + 20<i32>:word32] != 0xFFFFFFFF<32> l00003D7A
l00003D70:
	Mem187[dwArg04 + 24<i32>:word32] = Mem158[dwArg04 + 24<i32>:word32] | 8<32>
	goto l00003D82
l00003D7A:
	Mem180[dwArg04 + 24<i32>:word32] = Mem158[dwArg04 + 24<i32>:word32] | 0x10<32>
l00003D82:
	Mem192[dwArg04 + 20<i32>:word32] = 0<32>
	d0_169 = 0xFFFFFFFF<32>
	goto l00003D9E
l00003D8A:
	a0_162 = Mem158[dwArg04 + 4<i32>:word32]
	Mem165[dwArg04 + 4<i32>:word32] = a0_162 + 1<32>
	d0_169 = SEQ(SLICE(d0_154, word24, 8), Mem165[a0_162:byte]) & 0xFF<32>
l00003D9E:
	a5Out = a5_295
	return d0_169
fn00003CA8_exit:


word32 fn00003DA4()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00003CA8
// MayUse: 
// LiveOut: a5:[0..31]-fn00003CA8
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00003DA4_entry:
l00003DA4:
	a2_13 = Mem5[0x00003FD8<p32>:word32]
	branch a2_13 == 0<32> l00003DDC
l00003DB2:
	branch (Mem14[a2_13 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l00003DD2
l00003DC4:
	branch Mem14[a2_13:word32] == 0<32> l00003DD2
l00003DC8:
	fn00001F80(a2_13, out a0_90, out a5)
l00003DD2:
	a2_13 = Mem43[a2_13 + 12<i32>:word32]
	branch a2_13 != 0<32> l00003DB2
l00003DDC:
	return a5
fn00003DA4_exit:


word32 fn00003DE0(word32 dwArg04)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013D8
// MayUse:  Stack +0004:[0..31]
// LiveOut: d0:[0..31]-fn000013D8
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00003DE0_entry:
l00003DE0:
	a2_101 = dwArg04
	d2_104 = 0<32>
	branch Mem11[dwArg04:byte] == 0<8> l00003E60
l00003DEE:
	a0_19 = Mem18[0x00003FD0<p32>:word32]
	Mem23[a0_19 + 24<i32>:word32] = Mem18[a0_19 + 24<i32>:word32] | 2<32>
	v15_25 = Mem23[a0_19 + 20<i32>:word32] - 1<32>
	Mem26[a0_19 + 20<i32>:word32] = v15_25
	branch v15_25 < 0<32> l00003E36
l00003E04:
	branch Mem26[a2_101:byte] != 0xA<8> l00003E1C
l00003E0A:
	branch (Mem26[Mem26[0x00003FD0<p32>:word32] + 24<i32>:word32] & 0x80<32>) != 0<32> l00003E36
l00003E1C:
	a1_75 = Mem26[0x00003FD0<p32>:word32]
	a0_77 = Mem26[a1_75 + 4<32>:word32]
	Mem80[a1_75 + 4<32>:word32] = a0_77 + 1<32>
	Mem83[a0_77:byte] = Mem80[a2_101:byte]
	d1_69 = CONVERT(Mem83[a0_77:byte], uint8, uint32)
	goto l00003E4E
l00003E36:
	d1_69 = fn00001E6C(CONVERT(Mem45[a2_101:byte], int8, int32), Mem26[0x00003FD0<p32>:word32], out a0_191, out a5_192)
l00003E4E:
	branch d1_69 != 0xFFFFFFFF<32> l00003E58
l00003E54:
	d0_114 = 0xFFFFFFFF<32>
	goto l00003E62
l00003E58:
	a2_101 = a2_101 + 1<32>
	d2_104 = d2_104 + 1<32>
	branch Mem108[a2_101:byte] != 0<8> l00003DEE
l00003E60:
	d0_114 = d2_104
l00003E62:
	return d0_114
fn00003DE0_exit:


