// main.main
// Return size: 0
void main.main()
main.main_entry:
main.main_exit:


// main.init
// Return size: 0
void main.init()
main.init_entry:
main.init_exit:


// runtime.memhash0
// Return size: 0
void runtime.memhash0()
runtime.memhash0_entry:
runtime.memhash0_exit:


// runtime.memhash8
// Return size: 0
void runtime.memhash8()
runtime.memhash8_entry:
runtime.memhash8_exit:


// runtime.memhash16
// Return size: 0
void runtime.memhash16()
runtime.memhash16_entry:
runtime.memhash16_exit:


// runtime.memhash32
// Return size: 0
void runtime.memhash32()
runtime.memhash32_entry:
runtime.memhash32_exit:


// runtime.memhash64
// Return size: 0
void runtime.memhash64()
runtime.memhash64_entry:
runtime.memhash64_exit:


// runtime.memhash128
// Return size: 0
void runtime.memhash128()
runtime.memhash128_entry:
runtime.memhash128_exit:


// runtime.strhash
// Return size: 0
void runtime.strhash()
runtime.strhash_entry:
runtime.strhash_exit:


// runtime.f32hash
// Return size: 0
void runtime.f32hash()
runtime.f32hash_entry:
runtime.f32hash_exit:


// runtime.f64hash
// Return size: 0
void runtime.f64hash()
runtime.f64hash_entry:
runtime.f64hash_exit:


// runtime.c64hash
// Return size: 0
void runtime.c64hash()
runtime.c64hash_entry:
runtime.c64hash_exit:


// runtime.c128hash
// Return size: 0
void runtime.c128hash()
runtime.c128hash_entry:
runtime.c128hash_exit:


// runtime.interhash
// Return size: 0
void runtime.interhash()
runtime.interhash_entry:
runtime.interhash_exit:


// runtime.nilinterhash
// Return size: 0
void runtime.nilinterhash()
runtime.nilinterhash_entry:
runtime.nilinterhash_exit:


// runtime.memequal0
// Return size: 0
void runtime.memequal0()
runtime.memequal0_entry:
runtime.memequal0_exit:


// runtime.memequal8
// Return size: 0
void runtime.memequal8()
runtime.memequal8_entry:
runtime.memequal8_exit:


// runtime.memequal16
// Return size: 0
void runtime.memequal16()
runtime.memequal16_entry:
runtime.memequal16_exit:


// runtime.memequal32
// Return size: 0
void runtime.memequal32()
runtime.memequal32_entry:
runtime.memequal32_exit:


// runtime.memequal64
// Return size: 0
void runtime.memequal64()
runtime.memequal64_entry:
runtime.memequal64_exit:


// runtime.memequal128
// Return size: 0
void runtime.memequal128()
runtime.memequal128_entry:
runtime.memequal128_exit:


// runtime.f32equal
// Return size: 0
void runtime.f32equal()
runtime.f32equal_entry:
runtime.f32equal_exit:


// runtime.f64equal
// Return size: 0
void runtime.f64equal()
runtime.f64equal_entry:
runtime.f64equal_exit:


// runtime.c64equal
// Return size: 0
void runtime.c64equal()
runtime.c64equal_entry:
runtime.c64equal_exit:


// runtime.c128equal
// Return size: 0
void runtime.c128equal()
runtime.c128equal_entry:
runtime.c128equal_exit:


// runtime.strequal
// Return size: 0
void runtime.strequal()
runtime.strequal_entry:
runtime.strequal_exit:


// runtime.interequal
// Return size: 0
void runtime.interequal()
runtime.interequal_entry:
runtime.interequal_exit:


// runtime.nilinterequal
// Return size: 0
void runtime.nilinterequal()
runtime.nilinterequal_entry:
runtime.nilinterequal_exit:


// runtime.efaceeq
// Return size: 0
void runtime.efaceeq()
runtime.efaceeq_entry:
runtime.efaceeq_exit:


// runtime.ifaceeq
// Return size: 0
void runtime.ifaceeq()
runtime.ifaceeq_entry:
runtime.ifaceeq_exit:


// runtime.alginit
// Return size: 0
void runtime.alginit()
runtime.alginit_entry:
runtime.alginit_exit:


// runtime.atomicstorep
// Return size: 0
void runtime.atomicstorep()
runtime.atomicstorep_entry:
runtime.atomicstorep_exit:


// runtime.casp
// Return size: 0
void runtime.casp()
runtime.casp_entry:
runtime.casp_exit:


// runtime.cgocall
// Return size: 0
void runtime.cgocall()
runtime.cgocall_entry:
runtime.cgocall_exit:


// runtime.endcgo
// Return size: 0
void runtime.endcgo()
runtime.endcgo_entry:
runtime.endcgo_exit:


// runtime.cgocallbackg
// Return size: 0
void runtime.cgocallbackg()
runtime.cgocallbackg_entry:
runtime.cgocallbackg_exit:


// runtime.cgocallbackg1
// Return size: 0
void runtime.cgocallbackg1()
runtime.cgocallbackg1_entry:
runtime.cgocallbackg1_exit:


// runtime.unwindm
// Return size: 0
void runtime.unwindm()
runtime.unwindm_entry:
runtime.unwindm_exit:


// runtime.cgoIsGoPointer
// Return size: 0
void runtime.cgoIsGoPointer()
runtime.cgoIsGoPointer_entry:
runtime.cgoIsGoPointer_exit:


// runtime.cgoCheckWriteBarrier
// Return size: 0
void runtime.cgoCheckWriteBarrier()
runtime.cgoCheckWriteBarrier_entry:
runtime.cgoCheckWriteBarrier_exit:


// runtime.cgoCheckMemmove
// Return size: 0
void runtime.cgoCheckMemmove()
runtime.cgoCheckMemmove_entry:
runtime.cgoCheckMemmove_exit:


// runtime.cgoCheckSliceCopy
// Return size: 0
void runtime.cgoCheckSliceCopy()
runtime.cgoCheckSliceCopy_entry:
runtime.cgoCheckSliceCopy_exit:


// runtime.cgoCheckTypedBlock
// Return size: 0
void runtime.cgoCheckTypedBlock()
runtime.cgoCheckTypedBlock_entry:
runtime.cgoCheckTypedBlock_exit:


// runtime.cgoCheckBits
// Return size: 0
void runtime.cgoCheckBits()
runtime.cgoCheckBits_entry:
runtime.cgoCheckBits_exit:


// runtime.cgoCheckUsingType
// Return size: 0
void runtime.cgoCheckUsingType()
runtime.cgoCheckUsingType_entry:
runtime.cgoCheckUsingType_exit:


// runtime.makechan
// Return size: 0
void runtime.makechan()
runtime.makechan_entry:
runtime.makechan_exit:


// runtime.chansend1
// Return size: 0
void runtime.chansend1()
runtime.chansend1_entry:
runtime.chansend1_exit:


// runtime.chansend
// Return size: 0
void runtime.chansend()
runtime.chansend_entry:
runtime.chansend_exit:


// runtime.send
// Return size: 0
void runtime.send()
runtime.send_entry:
runtime.send_exit:


// runtime.sendDirect
// Return size: 0
void runtime.sendDirect()
runtime.sendDirect_entry:
runtime.sendDirect_exit:


// runtime.closechan
// Return size: 0
void runtime.closechan()
runtime.closechan_entry:
runtime.closechan_exit:


// runtime.chanrecv1
// Return size: 0
void runtime.chanrecv1()
runtime.chanrecv1_entry:
runtime.chanrecv1_exit:


// runtime.chanrecv
// Return size: 0
void runtime.chanrecv()
runtime.chanrecv_entry:
runtime.chanrecv_exit:


// runtime.recv
// Return size: 0
void runtime.recv()
runtime.recv_entry:
runtime.recv_exit:


// runtime.(*waitq).dequeue
// Return size: 0
void runtime.(*waitq).dequeue()
runtime.(*waitq).dequeue_entry:
runtime.(*waitq).dequeue_exit:


// runtime.lostProfileData
// Return size: 0
void runtime.lostProfileData()
runtime.lostProfileData_entry:
runtime.lostProfileData_exit:


// runtime.(*cpuProfile).add
// Return size: 0
void runtime.(*cpuProfile).add()
runtime.(*cpuProfile).add_entry:
runtime.(*cpuProfile).add_exit:


// runtime.(*cpuProfile).addWithFlushlog
// Return size: 0
void runtime.(*cpuProfile).addWithFlushlog()
runtime.(*cpuProfile).addWithFlushlog_entry:
runtime.(*cpuProfile).addWithFlushlog_exit:


// runtime.(*cpuProfile).evict
// Return size: 0
void runtime.(*cpuProfile).evict()
runtime.(*cpuProfile).evict_entry:
runtime.(*cpuProfile).evict_exit:


// runtime.(*cpuProfile).flushlog
// Return size: 0
void runtime.(*cpuProfile).flushlog()
runtime.(*cpuProfile).flushlog_entry:
runtime.(*cpuProfile).flushlog_exit:


// runtime.gogetenv
// Return size: 0
void runtime.gogetenv()
runtime.gogetenv_entry:
runtime.gogetenv_exit:


// runtime.(*TypeAssertionError).Error
// Return size: 0
void runtime.(*TypeAssertionError).Error()
runtime.(*TypeAssertionError).Error_entry:
runtime.(*TypeAssertionError).Error_exit:


// runtime.errorString.Error
// Return size: 0
void runtime.errorString.Error()
runtime.errorString.Error_entry:
runtime.errorString.Error_exit:


// runtime.plainError.Error
// Return size: 0
void runtime.plainError.Error()
runtime.plainError.Error_entry:
runtime.plainError.Error_exit:


// runtime.typestring
// Return size: 0
void runtime.typestring()
runtime.typestring_entry:
runtime.typestring_exit:


// runtime.printany
// Return size: 0
void runtime.printany()
runtime.printany_entry:
runtime.printany_exit:


// runtime.panicwrap
// Return size: 0
void runtime.panicwrap()
runtime.panicwrap_entry:
runtime.panicwrap_exit:


// runtime.memhash
// Return size: 0
void runtime.memhash()
runtime.memhash_entry:
runtime.memhash_exit:


// runtime.makemap
// Return size: 0
void runtime.makemap()
runtime.makemap_entry:
runtime.makemap_exit:


// runtime.mapassign1
// Return size: 0
void runtime.mapassign1()
runtime.mapassign1_entry:
runtime.mapassign1_exit:


// runtime.hashGrow
// Return size: 0
void runtime.hashGrow()
runtime.hashGrow_entry:
runtime.hashGrow_exit:


// runtime.growWork
// Return size: 0
void runtime.growWork()
runtime.growWork_entry:
runtime.growWork_exit:


// runtime.evacuate
// Return size: 0
void runtime.evacuate()
runtime.evacuate_entry:
runtime.evacuate_exit:


// runtime.mapaccess1_fast32
// Return size: 0
void runtime.mapaccess1_fast32()
runtime.mapaccess1_fast32_entry:
runtime.mapaccess1_fast32_exit:


// runtime.mapaccess2_fast32
// Return size: 0
void runtime.mapaccess2_fast32()
runtime.mapaccess2_fast32_entry:
runtime.mapaccess2_fast32_exit:


// runtime.getitab
// Return size: 0
void runtime.getitab()
runtime.getitab_entry:
runtime.getitab_exit:


// runtime.additab
// Return size: 0
void runtime.additab()
runtime.additab_entry:
runtime.additab_exit:


// runtime.itabsinit
// Return size: 0
void runtime.itabsinit()
runtime.itabsinit_entry:
runtime.itabsinit_exit:


// runtime.convT2E
// Return size: 0
void runtime.convT2E()
runtime.convT2E_entry:
runtime.convT2E_exit:


// runtime.convT2I
// Return size: 0
void runtime.convT2I()
runtime.convT2I_entry:
runtime.convT2I_exit:


// runtime.assertI2T
// Return size: 0
void runtime.assertI2T()
runtime.assertI2T_entry:
runtime.assertI2T_exit:


// runtime.assertE2T2
// Return size: 0
void runtime.assertE2T2()
runtime.assertE2T2_entry:
runtime.assertE2T2_exit:


// runtime.convI2E
// Return size: 0
void runtime.convI2E()
runtime.convI2E_entry:
runtime.convI2E_exit:


// runtime.assertE2I
// Return size: 0
void runtime.assertE2I()
runtime.assertE2I_entry:
runtime.assertE2I_exit:


// runtime.assertE2I2
// Return size: 0
void runtime.assertE2I2()
runtime.assertE2I2_entry:
runtime.assertE2I2_exit:


// runtime.lfstackpush
// Return size: 0
void runtime.lfstackpush()
runtime.lfstackpush_entry:
runtime.lfstackpush_exit:


// runtime.lfstackpop
// Return size: 0
void runtime.lfstackpop()
runtime.lfstackpop_entry:
runtime.lfstackpop_exit:


// runtime.lock
// Return size: 0
void runtime.lock()
runtime.lock_entry:
runtime.lock_exit:


// runtime.unlock
// Return size: 0
void runtime.unlock()
runtime.unlock_entry:
runtime.unlock_exit:


// runtime.notewakeup
// Return size: 0
void runtime.notewakeup()
runtime.notewakeup_entry:
runtime.notewakeup_exit:


// runtime.notesleep
// Return size: 0
void runtime.notesleep()
runtime.notesleep_entry:
runtime.notesleep_exit:


// runtime.notetsleep_internal
// Return size: 0
void runtime.notetsleep_internal()
runtime.notetsleep_internal_entry:
runtime.notetsleep_internal_exit:


// runtime.notetsleep
// Return size: 0
void runtime.notetsleep()
runtime.notetsleep_entry:
runtime.notetsleep_exit:


// runtime.notetsleepg
// Return size: 0
void runtime.notetsleepg()
runtime.notetsleepg_entry:
runtime.notetsleepg_exit:


// runtime.mallocinit
// Return size: 0
void runtime.mallocinit()
runtime.mallocinit_entry:
runtime.mallocinit_exit:


// runtime.(*mheap).sysAlloc
// Return size: 0
void runtime.(*mheap).sysAlloc()
runtime.(*mheap).sysAlloc_entry:
runtime.(*mheap).sysAlloc_exit:


// runtime.(*mcache).nextFree
// Return size: 0
void runtime.(*mcache).nextFree()
runtime.(*mcache).nextFree_entry:
runtime.(*mcache).nextFree_exit:


// runtime.mallocgc
// Return size: 0
void runtime.mallocgc()
runtime.mallocgc_entry:
runtime.mallocgc_exit:


// runtime.largeAlloc
// Return size: 0
void runtime.largeAlloc()
runtime.largeAlloc_entry:
runtime.largeAlloc_exit:


// runtime.newobject
// Return size: 0
void runtime.newobject()
runtime.newobject_entry:
runtime.newobject_exit:


// runtime.newarray
// Return size: 0
void runtime.newarray()
runtime.newarray_entry:
runtime.newarray_exit:


// runtime.profilealloc
// Return size: 0
void runtime.profilealloc()
runtime.profilealloc_entry:
runtime.profilealloc_exit:


// runtime.nextSample
// Return size: 0
void runtime.nextSample()
runtime.nextSample_entry:
runtime.nextSample_exit:


// runtime.persistentalloc
// Return size: 0
void runtime.persistentalloc()
runtime.persistentalloc_entry:
runtime.persistentalloc_exit:


// runtime.persistentalloc1
// Return size: 0
void runtime.persistentalloc1()
runtime.persistentalloc1_entry:
runtime.persistentalloc1_exit:


// runtime.gcmarkwb_m
// Return size: 0
void runtime.gcmarkwb_m()
runtime.gcmarkwb_m_entry:
runtime.gcmarkwb_m_exit:


// runtime.writebarrierptr_nostore1
// Return size: 0
void runtime.writebarrierptr_nostore1()
runtime.writebarrierptr_nostore1_entry:
runtime.writebarrierptr_nostore1_exit:


// runtime.writebarrierptr
// Return size: 0
void runtime.writebarrierptr()
runtime.writebarrierptr_entry:
runtime.writebarrierptr_exit:


// runtime.writebarrierptr_nostore
// Return size: 0
void runtime.writebarrierptr_nostore()
runtime.writebarrierptr_nostore_entry:
runtime.writebarrierptr_nostore_exit:


// runtime.typedmemmove
// Return size: 0
void runtime.typedmemmove()
runtime.typedmemmove_entry:
runtime.typedmemmove_exit:


// runtime.callwritebarrier
// Return size: 0
void runtime.callwritebarrier()
runtime.callwritebarrier_entry:
runtime.callwritebarrier_exit:


// runtime.typedslicecopy
// Return size: 0
void runtime.typedslicecopy()
runtime.typedslicecopy_entry:
runtime.typedslicecopy_exit:


// runtime.(*mheap).mapBits
// Return size: 0
void runtime.(*mheap).mapBits()
runtime.(*mheap).mapBits_entry:
runtime.(*mheap).mapBits_exit:


// runtime.(*mspan).refillAllocCache
// Return size: 0
void runtime.(*mspan).refillAllocCache()
runtime.(*mspan).refillAllocCache_entry:
runtime.(*mspan).refillAllocCache_exit:


// runtime.(*mspan).nextFreeIndex
// Return size: 0
void runtime.(*mspan).nextFreeIndex()
runtime.(*mspan).nextFreeIndex_entry:
runtime.(*mspan).nextFreeIndex_exit:


// runtime.markBitsForAddr
// Return size: 0
void runtime.markBitsForAddr()
runtime.markBitsForAddr_entry:
runtime.markBitsForAddr_exit:


// runtime.markBits.setMarked
// Return size: 0
void runtime.markBits.setMarked()
runtime.markBits.setMarked_entry:
runtime.markBits.setMarked_exit:


// runtime.heapBitsForSpan
// Return size: 0
void runtime.heapBitsForSpan()
runtime.heapBitsForSpan_entry:
runtime.heapBitsForSpan_exit:


// runtime.heapBitsForObject
// Return size: 0
void runtime.heapBitsForObject()
runtime.heapBitsForObject_entry:
runtime.heapBitsForObject_exit:


// runtime.heapBits.setCheckmarked
// Return size: 0
void runtime.heapBits.setCheckmarked()
runtime.heapBits.setCheckmarked_entry:
runtime.heapBits.setCheckmarked_exit:


// runtime.heapBitsBulkBarrier
// Return size: 0
void runtime.heapBitsBulkBarrier()
runtime.heapBitsBulkBarrier_entry:
runtime.heapBitsBulkBarrier_exit:


// runtime.bulkBarrierBitmap
// Return size: 0
void runtime.bulkBarrierBitmap()
runtime.bulkBarrierBitmap_entry:
runtime.bulkBarrierBitmap_exit:


// runtime.typeBitsBulkBarrier
// Return size: 0
void runtime.typeBitsBulkBarrier()
runtime.typeBitsBulkBarrier_entry:
runtime.typeBitsBulkBarrier_exit:


// runtime.heapBits.initSpan
// Return size: 0
void runtime.heapBits.initSpan()
runtime.heapBits.initSpan_entry:
runtime.heapBits.initSpan_exit:


// runtime.heapBits.initCheckmarkSpan
// Return size: 0
void runtime.heapBits.initCheckmarkSpan()
runtime.heapBits.initCheckmarkSpan_entry:
runtime.heapBits.initCheckmarkSpan_exit:


// runtime.heapBits.clearCheckmarkSpan
// Return size: 0
void runtime.heapBits.clearCheckmarkSpan()
runtime.heapBits.clearCheckmarkSpan_entry:
runtime.heapBits.clearCheckmarkSpan_exit:


// runtime.(*mspan).countFree
// Return size: 0
void runtime.(*mspan).countFree()
runtime.(*mspan).countFree_entry:
runtime.(*mspan).countFree_exit:


// runtime.heapBitsSetType
// Return size: 0
void runtime.heapBitsSetType()
runtime.heapBitsSetType_entry:
runtime.heapBitsSetType_exit:


// runtime.heapBitsSetTypeGCProg
// Return size: 0
void runtime.heapBitsSetTypeGCProg()
runtime.heapBitsSetTypeGCProg_entry:
runtime.heapBitsSetTypeGCProg_exit:


// runtime.progToPointerMask
// Return size: 0
void runtime.progToPointerMask()
runtime.progToPointerMask_entry:
runtime.progToPointerMask_exit:


// runtime.runGCProg
// Return size: 0
void runtime.runGCProg()
runtime.runGCProg_entry:
runtime.runGCProg_exit:


// runtime.allocmcache
// Return size: 0
void runtime.allocmcache()
runtime.allocmcache_entry:
runtime.allocmcache_exit:


// runtime.freemcache
// Return size: 0
void runtime.freemcache()
runtime.freemcache_entry:
runtime.freemcache_exit:


// runtime.(*mcache).refill
// Return size: 0
void runtime.(*mcache).refill()
runtime.(*mcache).refill_entry:
runtime.(*mcache).refill_exit:


// runtime.(*mcache).releaseAll
// Return size: 0
void runtime.(*mcache).releaseAll()
runtime.(*mcache).releaseAll_entry:
runtime.(*mcache).releaseAll_exit:


// runtime.(*mcentral).cacheSpan
// Return size: 0
void runtime.(*mcentral).cacheSpan()
runtime.(*mcentral).cacheSpan_entry:
runtime.(*mcentral).cacheSpan_exit:


// runtime.(*mcentral).uncacheSpan
// Return size: 0
void runtime.(*mcentral).uncacheSpan()
runtime.(*mcentral).uncacheSpan_entry:
runtime.(*mcentral).uncacheSpan_exit:


// runtime.(*mcentral).freeSpan
// Return size: 0
void runtime.(*mcentral).freeSpan()
runtime.(*mcentral).freeSpan_entry:
runtime.(*mcentral).freeSpan_exit:


// runtime.(*mcentral).grow
// Return size: 0
void runtime.(*mcentral).grow()
runtime.(*mcentral).grow_entry:
runtime.(*mcentral).grow_exit:


// runtime.addrspace_free
// Return size: 0
void runtime.addrspace_free()
runtime.addrspace_free_entry:
runtime.addrspace_free_exit:


// runtime.mmap_fixed
// Return size: 0
void runtime.mmap_fixed()
runtime.mmap_fixed_entry:
runtime.mmap_fixed_exit:


// runtime.sysAlloc
// Return size: 0
void runtime.sysAlloc()
runtime.sysAlloc_entry:
runtime.sysAlloc_exit:


// runtime.sysUnused
// Return size: 0
void runtime.sysUnused()
runtime.sysUnused_entry:
runtime.sysUnused_exit:


// runtime.sysUsed
// Return size: 0
void runtime.sysUsed()
runtime.sysUsed_entry:
runtime.sysUsed_exit:


// runtime.sysFree
// Return size: 0
void runtime.sysFree()
runtime.sysFree_entry:
runtime.sysFree_exit:


// runtime.sysFault
// Return size: 0
void runtime.sysFault()
runtime.sysFault_entry:
runtime.sysFault_exit:


// runtime.sysReserve
// Return size: 0
void runtime.sysReserve()
runtime.sysReserve_entry:
runtime.sysReserve_exit:


// runtime.sysMap
// Return size: 0
void runtime.sysMap()
runtime.sysMap_entry:
runtime.sysMap_exit:


// runtime.queuefinalizer
// Return size: 0
void runtime.queuefinalizer()
runtime.queuefinalizer_entry:
runtime.queuefinalizer_exit:


// runtime.wakefing
// Return size: 0
void runtime.wakefing()
runtime.wakefing_entry:
runtime.wakefing_exit:


// runtime.runfinq
// Return size: 0
void runtime.runfinq()
runtime.runfinq_entry:
runtime.runfinq_exit:


// runtime.(*fixalloc).alloc
// Return size: 0
void runtime.(*fixalloc).alloc()
runtime.(*fixalloc).alloc_entry:
runtime.(*fixalloc).alloc_exit:


// runtime.gcinit
// Return size: 0
void runtime.gcinit()
runtime.gcinit_entry:
runtime.gcinit_exit:


// runtime.readgogc
// Return size: 0
void runtime.readgogc()
runtime.readgogc_entry:
runtime.readgogc_exit:


// runtime.gcenable
// Return size: 0
void runtime.gcenable()
runtime.gcenable_entry:
runtime.gcenable_exit:


// runtime/debug.setGCPercent
// Return size: 0
void runtime/debug.setGCPercent()
runtime/debug.setGCPercent_entry:
runtime/debug.setGCPercent_exit:


// runtime.setGCPhase
// Return size: 0
void runtime.setGCPhase()
runtime.setGCPhase_entry:
runtime.setGCPhase_exit:


// runtime.(*gcControllerState).startCycle
// Return size: 0
void runtime.(*gcControllerState).startCycle()
runtime.(*gcControllerState).startCycle_entry:
runtime.(*gcControllerState).startCycle_exit:


// runtime.(*gcControllerState).endCycle
// Return size: 0
void runtime.(*gcControllerState).endCycle()
runtime.(*gcControllerState).endCycle_entry:
runtime.(*gcControllerState).endCycle_exit:


// runtime.(*gcControllerState).enlistWorker
// Return size: 0
void runtime.(*gcControllerState).enlistWorker()
runtime.(*gcControllerState).enlistWorker_entry:
runtime.(*gcControllerState).enlistWorker_exit:


// runtime.(*gcControllerState).findRunnableGCWorker
// Return size: 0
void runtime.(*gcControllerState).findRunnableGCWorker()
runtime.(*gcControllerState).findRunnableGCWorker_entry:
runtime.(*gcControllerState).findRunnableGCWorker_exit:


// runtime.GC
// Return size: 0
void runtime.GC()
runtime.GC_entry:
runtime.GC_exit:


// runtime.gcStart
// Return size: 0
void runtime.gcStart()
runtime.gcStart_entry:
runtime.gcStart_exit:


// runtime.gcMarkDone
// Return size: 0
void runtime.gcMarkDone()
runtime.gcMarkDone_entry:
runtime.gcMarkDone_exit:


// runtime.gcMarkTermination
// Return size: 0
void runtime.gcMarkTermination()
runtime.gcMarkTermination_entry:
runtime.gcMarkTermination_exit:


// runtime.gcBgMarkStartWorkers
// Return size: 0
void runtime.gcBgMarkStartWorkers()
runtime.gcBgMarkStartWorkers_entry:
runtime.gcBgMarkStartWorkers_exit:


// runtime.gcBgMarkWorker
// Return size: 0
void runtime.gcBgMarkWorker()
runtime.gcBgMarkWorker_entry:
runtime.gcBgMarkWorker_exit:


// runtime.gcMarkWorkAvailable
// Return size: 0
void runtime.gcMarkWorkAvailable()
runtime.gcMarkWorkAvailable_entry:
runtime.gcMarkWorkAvailable_exit:


// runtime.gcFlushGCWork
// Return size: 0
void runtime.gcFlushGCWork()
runtime.gcFlushGCWork_entry:
runtime.gcFlushGCWork_exit:


// runtime.gcMark
// Return size: 0
void runtime.gcMark()
runtime.gcMark_entry:
runtime.gcMark_exit:


// runtime.gcSweep
// Return size: 0
void runtime.gcSweep()
runtime.gcSweep_entry:
runtime.gcSweep_exit:


// runtime.gcCopySpans
// Return size: 0
void runtime.gcCopySpans()
runtime.gcCopySpans_entry:
runtime.gcCopySpans_exit:


// runtime.gcResetMarkState
// Return size: 0
void runtime.gcResetMarkState()
runtime.gcResetMarkState_entry:
runtime.gcResetMarkState_exit:


// runtime.clearpools
// Return size: 0
void runtime.clearpools()
runtime.clearpools_entry:
runtime.clearpools_exit:


// runtime.gchelper
// Return size: 0
void runtime.gchelper()
runtime.gchelper_entry:
runtime.gchelper_exit:


// runtime.gchelperstart
// Return size: 0
void runtime.gchelperstart()
runtime.gchelperstart_entry:
runtime.gchelperstart_exit:


// runtime.itoaDiv
// Return size: 0
void runtime.itoaDiv()
runtime.itoaDiv_entry:
runtime.itoaDiv_exit:


// runtime.fmtNSAsMS
// Return size: 0
void runtime.fmtNSAsMS()
runtime.fmtNSAsMS_entry:
runtime.fmtNSAsMS_exit:


// runtime.gcMarkRootPrepare
// Return size: 0
void runtime.gcMarkRootPrepare()
runtime.gcMarkRootPrepare_entry:
runtime.gcMarkRootPrepare_exit:


// runtime.gcMarkRootCheck
// Return size: 0
void runtime.gcMarkRootCheck()
runtime.gcMarkRootCheck_entry:
runtime.gcMarkRootCheck_exit:


// runtime.markroot
// Return size: 0
void runtime.markroot()
runtime.markroot_entry:
runtime.markroot_exit:


// runtime.markrootBlock
// Return size: 0
void runtime.markrootBlock()
runtime.markrootBlock_entry:
runtime.markrootBlock_exit:


// runtime.markrootFreeGStacks
// Return size: 0
void runtime.markrootFreeGStacks()
runtime.markrootFreeGStacks_entry:
runtime.markrootFreeGStacks_exit:


// runtime.markrootSpans
// Return size: 0
void runtime.markrootSpans()
runtime.markrootSpans_entry:
runtime.markrootSpans_exit:


// runtime.gcAssistAlloc
// Return size: 0
void runtime.gcAssistAlloc()
runtime.gcAssistAlloc_entry:
runtime.gcAssistAlloc_exit:


// runtime.gcWakeAllAssists
// Return size: 0
void runtime.gcWakeAllAssists()
runtime.gcWakeAllAssists_entry:
runtime.gcWakeAllAssists_exit:


// runtime.gcFlushBgCredit
// Return size: 0
void runtime.gcFlushBgCredit()
runtime.gcFlushBgCredit_entry:
runtime.gcFlushBgCredit_exit:


// runtime.scanstack
// Return size: 0
void runtime.scanstack()
runtime.scanstack_entry:
runtime.scanstack_exit:


// runtime.scanframeworker
// Return size: 0
void runtime.scanframeworker()
runtime.scanframeworker_entry:
runtime.scanframeworker_exit:


// runtime.queueRescan
// Return size: 0
void runtime.queueRescan()
runtime.queueRescan_entry:
runtime.queueRescan_exit:


// runtime.dequeueRescan
// Return size: 0
void runtime.dequeueRescan()
runtime.dequeueRescan_entry:
runtime.dequeueRescan_exit:


// runtime.gcDrain
// Return size: 0
void runtime.gcDrain()
runtime.gcDrain_entry:
runtime.gcDrain_exit:


// runtime.gcDrainN
// Return size: 0
void runtime.gcDrainN()
runtime.gcDrainN_entry:
runtime.gcDrainN_exit:


// runtime.scanblock
// Return size: 0
void runtime.scanblock()
runtime.scanblock_entry:
runtime.scanblock_exit:


// runtime.scanobject
// Return size: 0
void runtime.scanobject()
runtime.scanobject_entry:
runtime.scanobject_exit:


// runtime.shade
// Return size: 0
void runtime.shade()
runtime.shade_entry:
runtime.shade_exit:


// runtime.greyobject
// Return size: 0
void runtime.greyobject()
runtime.greyobject_entry:
runtime.greyobject_exit:


// runtime.gcDumpObject
// Return size: 0
void runtime.gcDumpObject()
runtime.gcDumpObject_entry:
runtime.gcDumpObject_exit:


// runtime.gcmarknewobject
// Return size: 0
void runtime.gcmarknewobject()
runtime.gcmarknewobject_entry:
runtime.gcmarknewobject_exit:


// runtime.initCheckmarks
// Return size: 0
void runtime.initCheckmarks()
runtime.initCheckmarks_entry:
runtime.initCheckmarks_exit:


// runtime.clearCheckmarks
// Return size: 0
void runtime.clearCheckmarks()
runtime.clearCheckmarks_entry:
runtime.clearCheckmarks_exit:


// runtime.finishsweep_m
// Return size: 0
void runtime.finishsweep_m()
runtime.finishsweep_m_entry:
runtime.finishsweep_m_exit:


// runtime.bgsweep
// Return size: 0
void runtime.bgsweep()
runtime.bgsweep_entry:
runtime.bgsweep_exit:


// runtime.sweepone
// Return size: 0
void runtime.sweepone()
runtime.sweepone_entry:
runtime.sweepone_exit:


// runtime.gosweepone
// Return size: 0
void runtime.gosweepone()
runtime.gosweepone_entry:
runtime.gosweepone_exit:


// runtime.(*mspan).ensureSwept
// Return size: 0
void runtime.(*mspan).ensureSwept()
runtime.(*mspan).ensureSwept_entry:
runtime.(*mspan).ensureSwept_exit:


// runtime.(*mspan).sweep
// Return size: 0
void runtime.(*mspan).sweep()
runtime.(*mspan).sweep_entry:
runtime.(*mspan).sweep_exit:


// runtime.deductSweepCredit
// Return size: 0
void runtime.deductSweepCredit()
runtime.deductSweepCredit_entry:
runtime.deductSweepCredit_exit:


// runtime.reimburseSweepCredit
// Return size: 0
void runtime.reimburseSweepCredit()
runtime.reimburseSweepCredit_entry:
runtime.reimburseSweepCredit_exit:


// runtime.(*gcWork).init
// Return size: 0
void runtime.(*gcWork).init()
runtime.(*gcWork).init_entry:
runtime.(*gcWork).init_exit:


// runtime.(*gcWork).put
// Return size: 0
void runtime.(*gcWork).put()
runtime.(*gcWork).put_entry:
runtime.(*gcWork).put_exit:


// runtime.(*gcWork).tryGet
// Return size: 0
void runtime.(*gcWork).tryGet()
runtime.(*gcWork).tryGet_entry:
runtime.(*gcWork).tryGet_exit:


// runtime.(*gcWork).get
// Return size: 0
void runtime.(*gcWork).get()
runtime.(*gcWork).get_entry:
runtime.(*gcWork).get_exit:


// runtime.(*gcWork).dispose
// Return size: 0
void runtime.(*gcWork).dispose()
runtime.(*gcWork).dispose_entry:
runtime.(*gcWork).dispose_exit:


// runtime.(*gcWork).balance
// Return size: 0
void runtime.(*gcWork).balance()
runtime.(*gcWork).balance_entry:
runtime.(*gcWork).balance_exit:


// runtime.(*workbuf).checknonempty
// Return size: 0
void runtime.(*workbuf).checknonempty()
runtime.(*workbuf).checknonempty_entry:
runtime.(*workbuf).checknonempty_exit:


// runtime.(*workbuf).checkempty
// Return size: 0
void runtime.(*workbuf).checkempty()
runtime.(*workbuf).checkempty_entry:
runtime.(*workbuf).checkempty_exit:


// runtime.getempty
// Return size: 0
void runtime.getempty()
runtime.getempty_entry:
runtime.getempty_exit:


// runtime.putempty
// Return size: 0
void runtime.putempty()
runtime.putempty_entry:
runtime.putempty_exit:


// runtime.putfull
// Return size: 0
void runtime.putfull()
runtime.putfull_entry:
runtime.putfull_exit:


// runtime.trygetfull
// Return size: 0
void runtime.trygetfull()
runtime.trygetfull_entry:
runtime.trygetfull_exit:


// runtime.getfull
// Return size: 0
void runtime.getfull()
runtime.getfull_entry:
runtime.getfull_exit:


// runtime.handoff
// Return size: 0
void runtime.handoff()
runtime.handoff_entry:
runtime.handoff_exit:


// runtime.recordspan
// Return size: 0
void runtime.recordspan()
runtime.recordspan_entry:
runtime.recordspan_exit:


// runtime.(*mheap).init
// Return size: 0
void runtime.(*mheap).init()
runtime.(*mheap).init_entry:
runtime.(*mheap).init_exit:


// runtime.(*mheap).mapSpans
// Return size: 0
void runtime.(*mheap).mapSpans()
runtime.(*mheap).mapSpans_entry:
runtime.(*mheap).mapSpans_exit:


// runtime.(*mheap).reclaimList
// Return size: 0
void runtime.(*mheap).reclaimList()
runtime.(*mheap).reclaimList_entry:
runtime.(*mheap).reclaimList_exit:


// runtime.(*mheap).reclaim
// Return size: 0
void runtime.(*mheap).reclaim()
runtime.(*mheap).reclaim_entry:
runtime.(*mheap).reclaim_exit:


// runtime.(*mheap).alloc_m
// Return size: 0
void runtime.(*mheap).alloc_m()
runtime.(*mheap).alloc_m_entry:
runtime.(*mheap).alloc_m_exit:


// runtime.(*mheap).alloc
// Return size: 0
void runtime.(*mheap).alloc()
runtime.(*mheap).alloc_entry:
runtime.(*mheap).alloc_exit:


// runtime.(*mheap).allocStack
// Return size: 0
void runtime.(*mheap).allocStack()
runtime.(*mheap).allocStack_entry:
runtime.(*mheap).allocStack_exit:


// runtime.(*mheap).allocSpanLocked
// Return size: 0
void runtime.(*mheap).allocSpanLocked()
runtime.(*mheap).allocSpanLocked_entry:
runtime.(*mheap).allocSpanLocked_exit:


// runtime.(*mheap).allocLarge
// Return size: 0
void runtime.(*mheap).allocLarge()
runtime.(*mheap).allocLarge_entry:
runtime.(*mheap).allocLarge_exit:


// runtime.bestFit
// Return size: 0
void runtime.bestFit()
runtime.bestFit_entry:
runtime.bestFit_exit:


// runtime.(*mheap).grow
// Return size: 0
void runtime.(*mheap).grow()
runtime.(*mheap).grow_entry:
runtime.(*mheap).grow_exit:


// runtime.(*mheap).freeSpan
// Return size: 0
void runtime.(*mheap).freeSpan()
runtime.(*mheap).freeSpan_entry:
runtime.(*mheap).freeSpan_exit:


// runtime.(*mheap).freeStack
// Return size: 0
void runtime.(*mheap).freeStack()
runtime.(*mheap).freeStack_entry:
runtime.(*mheap).freeStack_exit:


// runtime.(*mheap).freeSpanLocked
// Return size: 0
void runtime.(*mheap).freeSpanLocked()
runtime.(*mheap).freeSpanLocked_entry:
runtime.(*mheap).freeSpanLocked_exit:


// runtime.scavengelist
// Return size: 0
void runtime.scavengelist()
runtime.scavengelist_entry:
runtime.scavengelist_exit:


// runtime.(*mheap).scavenge
// Return size: 0
void runtime.(*mheap).scavenge()
runtime.(*mheap).scavenge_entry:
runtime.(*mheap).scavenge_exit:


// runtime.(*mSpanList).remove
// Return size: 0
void runtime.(*mSpanList).remove()
runtime.(*mSpanList).remove_entry:
runtime.(*mSpanList).remove_exit:


// runtime.(*mSpanList).insert
// Return size: 0
void runtime.(*mSpanList).insert()
runtime.(*mSpanList).insert_entry:
runtime.(*mSpanList).insert_exit:


// runtime.(*mSpanList).insertBack
// Return size: 0
void runtime.(*mSpanList).insertBack()
runtime.(*mSpanList).insertBack_entry:
runtime.(*mSpanList).insertBack_exit:


// runtime.addspecial
// Return size: 0
void runtime.addspecial()
runtime.addspecial_entry:
runtime.addspecial_exit:


// runtime.setprofilebucket
// Return size: 0
void runtime.setprofilebucket()
runtime.setprofilebucket_entry:
runtime.setprofilebucket_exit:


// runtime.freespecial
// Return size: 0
void runtime.freespecial()
runtime.freespecial_entry:
runtime.freespecial_exit:


// runtime.newMarkBits
// Return size: 0
void runtime.newMarkBits()
runtime.newMarkBits_entry:
runtime.newMarkBits_exit:


// runtime.newAllocBits
// Return size: 0
void runtime.newAllocBits()
runtime.newAllocBits_entry:
runtime.newAllocBits_exit:


// runtime.nextMarkBitArenaEpoch
// Return size: 0
void runtime.nextMarkBitArenaEpoch()
runtime.nextMarkBitArenaEpoch_entry:
runtime.nextMarkBitArenaEpoch_exit:


// runtime.newArena
// Return size: 0
void runtime.newArena()
runtime.newArena_entry:
runtime.newArena_exit:


// runtime.newBucket
// Return size: 0
void runtime.newBucket()
runtime.newBucket_entry:
runtime.newBucket_exit:


// runtime.(*bucket).mp
// Return size: 0
void runtime.(*bucket).mp()
runtime.(*bucket).mp_entry:
runtime.(*bucket).mp_exit:


// runtime.(*bucket).bp
// Return size: 0
void runtime.(*bucket).bp()
runtime.(*bucket).bp_entry:
runtime.(*bucket).bp_exit:


// runtime.stkbucket
// Return size: 0
void runtime.stkbucket()
runtime.stkbucket_entry:
runtime.stkbucket_exit:


// runtime.eqslice
// Return size: 0
void runtime.eqslice()
runtime.eqslice_entry:
runtime.eqslice_exit:


// runtime.mprof_GC
// Return size: 0
void runtime.mprof_GC()
runtime.mprof_GC_entry:
runtime.mprof_GC_exit:


// runtime.mProf_GC
// Return size: 0
void runtime.mProf_GC()
runtime.mProf_GC_entry:
runtime.mProf_GC_exit:


// runtime.mProf_Malloc
// Return size: 0
void runtime.mProf_Malloc()
runtime.mProf_Malloc_entry:
runtime.mProf_Malloc_exit:


// runtime.mProf_Free
// Return size: 0
void runtime.mProf_Free()
runtime.mProf_Free_entry:
runtime.mProf_Free_exit:


// runtime.blockevent
// Return size: 0
void runtime.blockevent()
runtime.blockevent_entry:
runtime.blockevent_exit:


// runtime.tracealloc
// Return size: 0
void runtime.tracealloc()
runtime.tracealloc_entry:
runtime.tracealloc_exit:


// runtime.tracefree
// Return size: 0
void runtime.tracefree()
runtime.tracefree_entry:
runtime.tracefree_exit:


// runtime.tracegc
// Return size: 0
void runtime.tracegc()
runtime.tracegc_entry:
runtime.tracegc_exit:


// runtime.initSizes
// Return size: 0
void runtime.initSizes()
runtime.initSizes_entry:
runtime.initSizes_exit:


// runtime.computeDivMagic
// Return size: 0
void runtime.computeDivMagic()
runtime.computeDivMagic_entry:
runtime.computeDivMagic_exit:


// runtime.init.1
// Return size: 0
void runtime.init.1()
runtime.init.1_entry:
runtime.init.1_exit:


// runtime.cachestats
// Return size: 0
void runtime.cachestats()
runtime.cachestats_entry:
runtime.cachestats_exit:


// runtime.flushallmcaches
// Return size: 0
void runtime.flushallmcaches()
runtime.flushallmcaches_entry:
runtime.flushallmcaches_exit:


// runtime.purgecachedstats
// Return size: 0
void runtime.purgecachedstats()
runtime.purgecachedstats_entry:
runtime.purgecachedstats_exit:


// runtime.mSysStatInc
// Return size: 0
void runtime.mSysStatInc()
runtime.mSysStatInc_entry:
runtime.mSysStatInc_exit:


// runtime.mSysStatDec
// Return size: 0
void runtime.mSysStatDec()
runtime.mSysStatDec_entry:
runtime.mSysStatDec_exit:


// runtime.gcMaxStackBarriers
// Return size: 0
void runtime.gcMaxStackBarriers()
runtime.gcMaxStackBarriers_entry:
runtime.gcMaxStackBarriers_exit:


// runtime.gcInstallStackBarrier
// Return size: 0
void runtime.gcInstallStackBarrier()
runtime.gcInstallStackBarrier_entry:
runtime.gcInstallStackBarrier_exit:


// runtime.gcRemoveStackBarriers
// Return size: 0
void runtime.gcRemoveStackBarriers()
runtime.gcRemoveStackBarriers_entry:
runtime.gcRemoveStackBarriers_exit:


// runtime.gcRemoveStackBarrier
// Return size: 0
void runtime.gcRemoveStackBarrier()
runtime.gcRemoveStackBarrier_entry:
runtime.gcRemoveStackBarrier_exit:


// runtime.gcTryRemoveAllStackBarriers
// Return size: 0
void runtime.gcTryRemoveAllStackBarriers()
runtime.gcTryRemoveAllStackBarriers_entry:
runtime.gcTryRemoveAllStackBarriers_exit:


// runtime.gcPrintStkbars
// Return size: 0
void runtime.gcPrintStkbars()
runtime.gcPrintStkbars_entry:
runtime.gcPrintStkbars_exit:


// runtime.gcUnwindBarriers
// Return size: 0
void runtime.gcUnwindBarriers()
runtime.gcUnwindBarriers_entry:
runtime.gcUnwindBarriers_exit:


// runtime.nextBarrierPC
// Return size: 0
void runtime.nextBarrierPC()
runtime.nextBarrierPC_entry:
runtime.nextBarrierPC_exit:


// runtime.gcLockStackBarriers
// Return size: 0
void runtime.gcLockStackBarriers()
runtime.gcLockStackBarriers_entry:
runtime.gcLockStackBarriers_exit:


// runtime.gcTryLockStackBarriers
// Return size: 0
void runtime.gcTryLockStackBarriers()
runtime.gcTryLockStackBarriers_entry:
runtime.gcTryLockStackBarriers_exit:


// runtime.gcUnlockStackBarriers
// Return size: 0
void runtime.gcUnlockStackBarriers()
runtime.gcUnlockStackBarriers_entry:
runtime.gcUnlockStackBarriers_exit:


// runtime.netpollinited
// Return size: 0
void runtime.netpollinited()
runtime.netpollinited_entry:
runtime.netpollinited_exit:


// runtime.netpollready
// Return size: 0
void runtime.netpollready()
runtime.netpollready_entry:
runtime.netpollready_exit:


// runtime.netpollunblock
// Return size: 0
void runtime.netpollunblock()
runtime.netpollunblock_entry:
runtime.netpollunblock_exit:


// runtime.netpoll
// Return size: 0
void runtime.netpoll()
runtime.netpoll_entry:
runtime.netpoll_exit:


// runtime.cmpstring
// Return size: 0
void runtime.cmpstring()
runtime.cmpstring_entry:
runtime.cmpstring_exit:


// runtime.futexsleep
// Return size: 0
void runtime.futexsleep()
runtime.futexsleep_entry:
runtime.futexsleep_exit:


// runtime.futexwakeup
// Return size: 0
void runtime.futexwakeup()
runtime.futexwakeup_entry:
runtime.futexwakeup_exit:


// runtime.getproccount
// Return size: 0
void runtime.getproccount()
runtime.getproccount_entry:
runtime.getproccount_exit:


// runtime.newosproc
// Return size: 0
void runtime.newosproc()
runtime.newosproc_entry:
runtime.newosproc_exit:


// runtime.sysargs
// Return size: 0
void runtime.sysargs()
runtime.sysargs_entry:
runtime.sysargs_exit:


// runtime.osinit
// Return size: 0
void runtime.osinit()
runtime.osinit_entry:
runtime.osinit_exit:


// runtime.getRandomData
// Return size: 0
void runtime.getRandomData()
runtime.getRandomData_entry:
runtime.getRandomData_exit:


// runtime.goenvs
// Return size: 0
void runtime.goenvs()
runtime.goenvs_entry:
runtime.goenvs_exit:


// runtime.mpreinit
// Return size: 0
void runtime.mpreinit()
runtime.mpreinit_entry:
runtime.mpreinit_exit:


// runtime.msigsave
// Return size: 0
void runtime.msigsave()
runtime.msigsave_entry:
runtime.msigsave_exit:


// runtime.msigrestore
// Return size: 0
void runtime.msigrestore()
runtime.msigrestore_entry:
runtime.msigrestore_exit:


// runtime.sigblock
// Return size: 0
void runtime.sigblock()
runtime.sigblock_entry:
runtime.sigblock_exit:


// runtime.minit
// Return size: 0
void runtime.minit()
runtime.minit_entry:
runtime.minit_exit:


// runtime.unminit
// Return size: 0
void runtime.unminit()
runtime.unminit_entry:
runtime.unminit_exit:


// runtime.setsig
// Return size: 0
void runtime.setsig()
runtime.setsig_entry:
runtime.setsig_exit:


// runtime.setsigstack
// Return size: 0
void runtime.setsigstack()
runtime.setsigstack_entry:
runtime.setsigstack_exit:


// runtime.getsig
// Return size: 0
void runtime.getsig()
runtime.getsig_entry:
runtime.getsig_exit:


// runtime.signalstack
// Return size: 0
void runtime.signalstack()
runtime.signalstack_entry:
runtime.signalstack_exit:


// runtime.updatesigmask
// Return size: 0
void runtime.updatesigmask()
runtime.updatesigmask_entry:
runtime.updatesigmask_exit:


// runtime.unblocksig
// Return size: 0
void runtime.unblocksig()
runtime.unblocksig_entry:
runtime.unblocksig_exit:


// runtime.cputicks
// Return size: 0
void runtime.cputicks()
runtime.cputicks_entry:
runtime.cputicks_exit:


// runtime.panicCheckMalloc
// Return size: 0
void runtime.panicCheckMalloc()
runtime.panicCheckMalloc_entry:
runtime.panicCheckMalloc_exit:


// runtime.panicindex
// Return size: 0
void runtime.panicindex()
runtime.panicindex_entry:
runtime.panicindex_exit:


// runtime.panicslice
// Return size: 0
void runtime.panicslice()
runtime.panicslice_entry:
runtime.panicslice_exit:


// runtime.panicdivide
// Return size: 0
void runtime.panicdivide()
runtime.panicdivide_entry:
runtime.panicdivide_exit:


// runtime.panicoverflow
// Return size: 0
void runtime.panicoverflow()
runtime.panicoverflow_entry:
runtime.panicoverflow_exit:


// runtime.panicfloat
// Return size: 0
void runtime.panicfloat()
runtime.panicfloat_entry:
runtime.panicfloat_exit:


// runtime.panicmem
// Return size: 0
void runtime.panicmem()
runtime.panicmem_entry:
runtime.panicmem_exit:


// runtime.throwinit
// Return size: 0
void runtime.throwinit()
runtime.throwinit_entry:
runtime.throwinit_exit:


// runtime.deferproc
// Return size: 0
void runtime.deferproc()
runtime.deferproc_entry:
runtime.deferproc_exit:


// runtime.testdefersizes
// Return size: 0
void runtime.testdefersizes()
runtime.testdefersizes_entry:
runtime.testdefersizes_exit:


// runtime.init.2
// Return size: 0
void runtime.init.2()
runtime.init.2_entry:
runtime.init.2_exit:


// runtime.newdefer
// Return size: 0
void runtime.newdefer()
runtime.newdefer_entry:
runtime.newdefer_exit:


// runtime.freedefer
// Return size: 0
void runtime.freedefer()
runtime.freedefer_entry:
runtime.freedefer_exit:


// runtime.freedeferpanic
// Return size: 0
void runtime.freedeferpanic()
runtime.freedeferpanic_entry:
runtime.freedeferpanic_exit:


// runtime.freedeferfn
// Return size: 0
void runtime.freedeferfn()
runtime.freedeferfn_entry:
runtime.freedeferfn_exit:


// runtime.deferreturn
// Return size: 0
void runtime.deferreturn()
runtime.deferreturn_entry:
runtime.deferreturn_exit:


// runtime.preprintpanics
// Return size: 0
void runtime.preprintpanics()
runtime.preprintpanics_entry:
runtime.preprintpanics_exit:


// runtime.printpanics
// Return size: 0
void runtime.printpanics()
runtime.printpanics_entry:
runtime.printpanics_exit:


// runtime.gopanic
// Return size: 0
void runtime.gopanic()
runtime.gopanic_entry:
runtime.gopanic_exit:


// runtime.getargp
// Return size: 0
void runtime.getargp()
runtime.getargp_entry:
runtime.getargp_exit:


// runtime.startpanic
// Return size: 0
void runtime.startpanic()
runtime.startpanic_entry:
runtime.startpanic_exit:


// runtime.dopanic
// Return size: 0
void runtime.dopanic()
runtime.dopanic_entry:
runtime.dopanic_exit:


// runtime.throw
// Return size: 0
void runtime.throw()
runtime.throw_entry:
runtime.throw_exit:


// runtime.recovery
// Return size: 0
void runtime.recovery()
runtime.recovery_entry:
runtime.recovery_exit:


// runtime.startpanic_m
// Return size: 0
void runtime.startpanic_m()
runtime.startpanic_m_entry:
runtime.startpanic_m_exit:


// runtime.dopanic_m
// Return size: 0
void runtime.dopanic_m()
runtime.dopanic_m_entry:
runtime.dopanic_m_exit:


// runtime.canpanic
// Return size: 0
void runtime.canpanic()
runtime.canpanic_entry:
runtime.canpanic_exit:


// runtime.printlock
// Return size: 0
void runtime.printlock()
runtime.printlock_entry:
runtime.printlock_exit:


// runtime.printunlock
// Return size: 0
void runtime.printunlock()
runtime.printunlock_entry:
runtime.printunlock_exit:


// runtime.gwrite
// Return size: 0
void runtime.gwrite()
runtime.gwrite_entry:
runtime.gwrite_exit:


// runtime.printsp
// Return size: 0
void runtime.printsp()
runtime.printsp_entry:
runtime.printsp_exit:


// runtime.printnl
// Return size: 0
void runtime.printnl()
runtime.printnl_entry:
runtime.printnl_exit:


// runtime.printbool
// Return size: 0
void runtime.printbool()
runtime.printbool_entry:
runtime.printbool_exit:


// runtime.printfloat
// Return size: 0
void runtime.printfloat()
runtime.printfloat_entry:
runtime.printfloat_exit:


// runtime.printuint
// Return size: 0
void runtime.printuint()
runtime.printuint_entry:
runtime.printuint_exit:


// runtime.printint
// Return size: 0
void runtime.printint()
runtime.printint_entry:
runtime.printint_exit:


// runtime.printhex
// Return size: 0
void runtime.printhex()
runtime.printhex_entry:
runtime.printhex_exit:


// runtime.printpointer
// Return size: 0
void runtime.printpointer()
runtime.printpointer_entry:
runtime.printpointer_exit:


// runtime.printstring
// Return size: 0
void runtime.printstring()
runtime.printstring_entry:
runtime.printstring_exit:


// runtime.printslice
// Return size: 0
void runtime.printslice()
runtime.printslice_entry:
runtime.printslice_exit:


// runtime.printeface
// Return size: 0
void runtime.printeface()
runtime.printeface_entry:
runtime.printeface_exit:


// runtime.main
// Return size: 0
void runtime.main()
runtime.main_entry:
runtime.main_exit:


// runtime.init.3
// Return size: 0
void runtime.init.3()
runtime.init.3_entry:
runtime.init.3_exit:


// runtime.forcegchelper
// Return size: 0
void runtime.forcegchelper()
runtime.forcegchelper_entry:
runtime.forcegchelper_exit:


// runtime.Gosched
// Return size: 0
void runtime.Gosched()
runtime.Gosched_entry:
runtime.Gosched_exit:


// runtime.gopark
// Return size: 0
void runtime.gopark()
runtime.gopark_entry:
runtime.gopark_exit:


// runtime.goparkunlock
// Return size: 0
void runtime.goparkunlock()
runtime.goparkunlock_entry:
runtime.goparkunlock_exit:


// runtime.goready
// Return size: 0
void runtime.goready()
runtime.goready_entry:
runtime.goready_exit:


// runtime.acquireSudog
// Return size: 0
void runtime.acquireSudog()
runtime.acquireSudog_entry:
runtime.acquireSudog_exit:


// runtime.releaseSudog
// Return size: 0
void runtime.releaseSudog()
runtime.releaseSudog_entry:
runtime.releaseSudog_exit:


// runtime.funcPC
// Return size: 0
void runtime.funcPC()
runtime.funcPC_entry:
runtime.funcPC_exit:


// runtime.badmcall
// Return size: 0
void runtime.badmcall()
runtime.badmcall_entry:
runtime.badmcall_exit:


// runtime.badmcall2
// Return size: 0
void runtime.badmcall2()
runtime.badmcall2_entry:
runtime.badmcall2_exit:


// runtime.badreflectcall
// Return size: 0
void runtime.badreflectcall()
runtime.badreflectcall_entry:
runtime.badreflectcall_exit:


// runtime.allgadd
// Return size: 0
void runtime.allgadd()
runtime.allgadd_entry:
runtime.allgadd_exit:


// runtime.schedinit
// Return size: 0
void runtime.schedinit()
runtime.schedinit_entry:
runtime.schedinit_exit:


// runtime.dumpgstatus
// Return size: 0
void runtime.dumpgstatus()
runtime.dumpgstatus_entry:
runtime.dumpgstatus_exit:


// runtime.checkmcount
// Return size: 0
void runtime.checkmcount()
runtime.checkmcount_entry:
runtime.checkmcount_exit:


// runtime.mcommoninit
// Return size: 0
void runtime.mcommoninit()
runtime.mcommoninit_entry:
runtime.mcommoninit_exit:


// runtime.ready
// Return size: 0
void runtime.ready()
runtime.ready_entry:
runtime.ready_exit:


// runtime.gcprocs
// Return size: 0
void runtime.gcprocs()
runtime.gcprocs_entry:
runtime.gcprocs_exit:


// runtime.needaddgcproc
// Return size: 0
void runtime.needaddgcproc()
runtime.needaddgcproc_entry:
runtime.needaddgcproc_exit:


// runtime.helpgc
// Return size: 0
void runtime.helpgc()
runtime.helpgc_entry:
runtime.helpgc_exit:


// runtime.freezetheworld
// Return size: 0
void runtime.freezetheworld()
runtime.freezetheworld_entry:
runtime.freezetheworld_exit:


// runtime.readgstatus
// Return size: 0
void runtime.readgstatus()
runtime.readgstatus_entry:
runtime.readgstatus_exit:


// runtime.casfrom_Gscanstatus
// Return size: 0
void runtime.casfrom_Gscanstatus()
runtime.casfrom_Gscanstatus_entry:
runtime.casfrom_Gscanstatus_exit:


// runtime.castogscanstatus
// Return size: 0
void runtime.castogscanstatus()
runtime.castogscanstatus_entry:
runtime.castogscanstatus_exit:


// runtime.casgstatus
// Return size: 0
void runtime.casgstatus()
runtime.casgstatus_entry:
runtime.casgstatus_exit:


// runtime.scang
// Return size: 0
void runtime.scang()
runtime.scang_entry:
runtime.scang_exit:


// runtime.restartg
// Return size: 0
void runtime.restartg()
runtime.restartg_entry:
runtime.restartg_exit:


// runtime.stopTheWorldWithSema
// Return size: 0
void runtime.stopTheWorldWithSema()
runtime.stopTheWorldWithSema_entry:
runtime.stopTheWorldWithSema_exit:


// runtime.mhelpgc
// Return size: 0
void runtime.mhelpgc()
runtime.mhelpgc_entry:
runtime.mhelpgc_exit:


// runtime.startTheWorldWithSema
// Return size: 0
void runtime.startTheWorldWithSema()
runtime.startTheWorldWithSema_entry:
runtime.startTheWorldWithSema_exit:


// runtime.mstart
// Return size: 0
void runtime.mstart()
runtime.mstart_entry:
runtime.mstart_exit:


// runtime.mstart1
// Return size: 0
void runtime.mstart1()
runtime.mstart1_entry:
runtime.mstart1_exit:


// runtime.forEachP
// Return size: 0
void runtime.forEachP()
runtime.forEachP_entry:
runtime.forEachP_exit:


// runtime.runSafePointFn
// Return size: 0
void runtime.runSafePointFn()
runtime.runSafePointFn_entry:
runtime.runSafePointFn_exit:


// runtime.allocm
// Return size: 0
void runtime.allocm()
runtime.allocm_entry:
runtime.allocm_exit:


// runtime.needm
// Return size: 0
void runtime.needm()
runtime.needm_entry:
runtime.needm_exit:


// runtime.newextram
// Return size: 0
void runtime.newextram()
runtime.newextram_entry:
runtime.newextram_exit:


// runtime.oneNewExtraM
// Return size: 0
void runtime.oneNewExtraM()
runtime.oneNewExtraM_entry:
runtime.oneNewExtraM_exit:


// runtime.dropm
// Return size: 0
void runtime.dropm()
runtime.dropm_entry:
runtime.dropm_exit:


// runtime.lockextra
// Return size: 0
void runtime.lockextra()
runtime.lockextra_entry:
runtime.lockextra_exit:


// runtime.unlockextra
// Return size: 0
void runtime.unlockextra()
runtime.unlockextra_entry:
runtime.unlockextra_exit:


// runtime.newm
// Return size: 0
void runtime.newm()
runtime.newm_entry:
runtime.newm_exit:


// runtime.stopm
// Return size: 0
void runtime.stopm()
runtime.stopm_entry:
runtime.stopm_exit:


// runtime.mspinning
// Return size: 0
void runtime.mspinning()
runtime.mspinning_entry:
runtime.mspinning_exit:


// runtime.startm
// Return size: 0
void runtime.startm()
runtime.startm_entry:
runtime.startm_exit:


// runtime.handoffp
// Return size: 0
void runtime.handoffp()
runtime.handoffp_entry:
runtime.handoffp_exit:


// runtime.wakep
// Return size: 0
void runtime.wakep()
runtime.wakep_entry:
runtime.wakep_exit:


// runtime.stoplockedm
// Return size: 0
void runtime.stoplockedm()
runtime.stoplockedm_entry:
runtime.stoplockedm_exit:


// runtime.startlockedm
// Return size: 0
void runtime.startlockedm()
runtime.startlockedm_entry:
runtime.startlockedm_exit:


// runtime.gcstopm
// Return size: 0
void runtime.gcstopm()
runtime.gcstopm_entry:
runtime.gcstopm_exit:


// runtime.execute
// Return size: 0
void runtime.execute()
runtime.execute_entry:
runtime.execute_exit:


// runtime.findrunnable
// Return size: 0
void runtime.findrunnable()
runtime.findrunnable_entry:
runtime.findrunnable_exit:


// runtime.resetspinning
// Return size: 0
void runtime.resetspinning()
runtime.resetspinning_entry:
runtime.resetspinning_exit:


// runtime.injectglist
// Return size: 0
void runtime.injectglist()
runtime.injectglist_entry:
runtime.injectglist_exit:


// runtime.schedule
// Return size: 0
void runtime.schedule()
runtime.schedule_entry:
runtime.schedule_exit:


// runtime.parkunlock_c
// Return size: 0
void runtime.parkunlock_c()
runtime.parkunlock_c_entry:
runtime.parkunlock_c_exit:


// runtime.park_m
// Return size: 0
void runtime.park_m()
runtime.park_m_entry:
runtime.park_m_exit:


// runtime.goschedImpl
// Return size: 0
void runtime.goschedImpl()
runtime.goschedImpl_entry:
runtime.goschedImpl_exit:


// runtime.gosched_m
// Return size: 0
void runtime.gosched_m()
runtime.gosched_m_entry:
runtime.gosched_m_exit:


// runtime.gopreempt_m
// Return size: 0
void runtime.gopreempt_m()
runtime.gopreempt_m_entry:
runtime.gopreempt_m_exit:


// runtime.goexit1
// Return size: 0
void runtime.goexit1()
runtime.goexit1_entry:
runtime.goexit1_exit:


// runtime.goexit0
// Return size: 0
void runtime.goexit0()
runtime.goexit0_entry:
runtime.goexit0_exit:


// runtime.reentersyscall
// Return size: 0
void runtime.reentersyscall()
runtime.reentersyscall_entry:
runtime.reentersyscall_exit:


// runtime.entersyscall
// Return size: 0
void runtime.entersyscall()
runtime.entersyscall_entry:
runtime.entersyscall_exit:


// runtime.entersyscall_sysmon
// Return size: 0
void runtime.entersyscall_sysmon()
runtime.entersyscall_sysmon_entry:
runtime.entersyscall_sysmon_exit:


// runtime.entersyscall_gcwait
// Return size: 0
void runtime.entersyscall_gcwait()
runtime.entersyscall_gcwait_entry:
runtime.entersyscall_gcwait_exit:


// runtime.entersyscallblock
// Return size: 0
void runtime.entersyscallblock()
runtime.entersyscallblock_entry:
runtime.entersyscallblock_exit:


// runtime.entersyscallblock_handoff
// Return size: 0
void runtime.entersyscallblock_handoff()
runtime.entersyscallblock_handoff_entry:
runtime.entersyscallblock_handoff_exit:


// runtime.exitsyscall
// Return size: 0
void runtime.exitsyscall()
runtime.exitsyscall_entry:
runtime.exitsyscall_exit:


// runtime.exitsyscallfast
// Return size: 0
void runtime.exitsyscallfast()
runtime.exitsyscallfast_entry:
runtime.exitsyscallfast_exit:


// runtime.exitsyscallfast_pidle
// Return size: 0
void runtime.exitsyscallfast_pidle()
runtime.exitsyscallfast_pidle_entry:
runtime.exitsyscallfast_pidle_exit:


// runtime.exitsyscall0
// Return size: 0
void runtime.exitsyscall0()
runtime.exitsyscall0_entry:
runtime.exitsyscall0_exit:


// runtime.malg
// Return size: 0
void runtime.malg()
runtime.malg_entry:
runtime.malg_exit:


// runtime.newproc
// Return size: 0
void runtime.newproc()
runtime.newproc_entry:
runtime.newproc_exit:


// runtime.newproc1
// Return size: 0
void runtime.newproc1()
runtime.newproc1_entry:
runtime.newproc1_exit:


// runtime.gfput
// Return size: 0
void runtime.gfput()
runtime.gfput_entry:
runtime.gfput_exit:


// runtime.gfget
// Return size: 0
void runtime.gfget()
runtime.gfget_entry:
runtime.gfget_exit:


// runtime.gfpurge
// Return size: 0
void runtime.gfpurge()
runtime.gfpurge_entry:
runtime.gfpurge_exit:


// runtime.unlockOSThread
// Return size: 0
void runtime.unlockOSThread()
runtime.unlockOSThread_entry:
runtime.unlockOSThread_exit:


// runtime.badunlockosthread
// Return size: 0
void runtime.badunlockosthread()
runtime.badunlockosthread_entry:
runtime.badunlockosthread_exit:


// runtime._System
// Return size: 0
void runtime._System()
runtime._System_entry:
runtime._System_exit:


// runtime._ExternalCode
// Return size: 0
void runtime._ExternalCode()
runtime._ExternalCode_entry:
runtime._ExternalCode_exit:


// runtime._GC
// Return size: 0
void runtime._GC()
runtime._GC_entry:
runtime._GC_exit:


// runtime.sigprof
// Return size: 0
void runtime.sigprof()
runtime.sigprof_entry:
runtime.sigprof_exit:


// runtime.setsSP
// Return size: 0
void runtime.setsSP()
runtime.setsSP_entry:
runtime.setsSP_exit:


// runtime.procresize
// Return size: 0
void runtime.procresize()
runtime.procresize_entry:
runtime.procresize_exit:


// runtime.acquirep
// Return size: 0
void runtime.acquirep()
runtime.acquirep_entry:
runtime.acquirep_exit:


// runtime.acquirep1
// Return size: 0
void runtime.acquirep1()
runtime.acquirep1_entry:
runtime.acquirep1_exit:


// runtime.releasep
// Return size: 0
void runtime.releasep()
runtime.releasep_entry:
runtime.releasep_exit:


// runtime.incidlelocked
// Return size: 0
void runtime.incidlelocked()
runtime.incidlelocked_entry:
runtime.incidlelocked_exit:


// runtime.checkdead
// Return size: 0
void runtime.checkdead()
runtime.checkdead_entry:
runtime.checkdead_exit:


// runtime.sysmon
// Return size: 0
void runtime.sysmon()
runtime.sysmon_entry:
runtime.sysmon_exit:


// runtime.retake
// Return size: 0
void runtime.retake()
runtime.retake_entry:
runtime.retake_exit:


// runtime.preemptall
// Return size: 0
void runtime.preemptall()
runtime.preemptall_entry:
runtime.preemptall_exit:


// runtime.schedtrace
// Return size: 0
void runtime.schedtrace()
runtime.schedtrace_entry:
runtime.schedtrace_exit:


// runtime.mput
// Return size: 0
void runtime.mput()
runtime.mput_entry:
runtime.mput_exit:


// runtime.globrunqget
// Return size: 0
void runtime.globrunqget()
runtime.globrunqget_entry:
runtime.globrunqget_exit:


// runtime.pidleput
// Return size: 0
void runtime.pidleput()
runtime.pidleput_entry:
runtime.pidleput_exit:


// runtime.pidleget
// Return size: 0
void runtime.pidleget()
runtime.pidleget_entry:
runtime.pidleget_exit:


// runtime.runqempty
// Return size: 0
void runtime.runqempty()
runtime.runqempty_entry:
runtime.runqempty_exit:


// runtime.runqput
// Return size: 0
void runtime.runqput()
runtime.runqput_entry:
runtime.runqput_exit:


// runtime.runqputslow
// Return size: 0
void runtime.runqputslow()
runtime.runqputslow_entry:
runtime.runqputslow_exit:


// runtime.runqget
// Return size: 0
void runtime.runqget()
runtime.runqget_entry:
runtime.runqget_exit:


// runtime.runqgrab
// Return size: 0
void runtime.runqgrab()
runtime.runqgrab_entry:
runtime.runqgrab_exit:


// runtime.runqsteal
// Return size: 0
void runtime.runqsteal()
runtime.runqsteal_entry:
runtime.runqsteal_exit:


// runtime.(*randomOrder).reset
// Return size: 0
void runtime.(*randomOrder).reset()
runtime.(*randomOrder).reset_entry:
runtime.(*randomOrder).reset_exit:


// runtime.gcd
// Return size: 0
void runtime.gcd()
runtime.gcd_entry:
runtime.gcd_exit:


// runtime.gotraceback
// Return size: 0
void runtime.gotraceback()
runtime.gotraceback_entry:
runtime.gotraceback_exit:


// runtime.args
// Return size: 0
void runtime.args()
runtime.args_entry:
runtime.args_exit:


// runtime.goargs
// Return size: 0
void runtime.goargs()
runtime.goargs_entry:
runtime.goargs_exit:


// runtime.goenvs_unix
// Return size: 0
void runtime.goenvs_unix()
runtime.goenvs_unix_entry:
runtime.goenvs_unix_exit:


// runtime.testAtomic64
// Return size: 0
void runtime.testAtomic64()
runtime.testAtomic64_entry:
runtime.testAtomic64_exit:


// runtime.check
// Return size: 0
void runtime.check()
runtime.check_entry:
runtime.check_exit:


// runtime.parsedebugvars
// Return size: 0
void runtime.parsedebugvars()
runtime.parsedebugvars_entry:
runtime.parsedebugvars_exit:


// runtime/debug.SetTraceback
// Return size: 0
void runtime/debug.SetTraceback()
runtime/debug.SetTraceback_entry:
runtime/debug.SetTraceback_exit:


// runtime.timediv
// Return size: 0
void runtime.timediv()
runtime.timediv_entry:
runtime.timediv_exit:


// runtime.(*guintptr).cas
// Return size: 0
void runtime.(*guintptr).cas()
runtime.(*guintptr).cas_entry:
runtime.(*guintptr).cas_exit:


// runtime.extendRandom
// Return size: 0
void runtime.extendRandom()
runtime.extendRandom_entry:
runtime.extendRandom_exit:


// runtime.readyWithTime
// Return size: 0
void runtime.readyWithTime()
runtime.readyWithTime_entry:
runtime.readyWithTime_exit:


// runtime.semacquire
// Return size: 0
void runtime.semacquire()
runtime.semacquire_entry:
runtime.semacquire_exit:


// runtime.semrelease
// Return size: 0
void runtime.semrelease()
runtime.semrelease_entry:
runtime.semrelease_exit:


// runtime.cansemacquire
// Return size: 0
void runtime.cansemacquire()
runtime.cansemacquire_entry:
runtime.cansemacquire_exit:


// runtime.init.4
// Return size: 0
void runtime.init.4()
runtime.init.4_entry:
runtime.init.4_exit:


// runtime.initsig
// Return size: 0
void runtime.initsig()
runtime.initsig_entry:
runtime.initsig_exit:


// runtime.resetcpuprofiler
// Return size: 0
void runtime.resetcpuprofiler()
runtime.resetcpuprofiler_entry:
runtime.resetcpuprofiler_exit:


// runtime.dieFromSignal
// Return size: 0
void runtime.dieFromSignal()
runtime.dieFromSignal_entry:
runtime.dieFromSignal_exit:


// runtime.raisebadsignal
// Return size: 0
void runtime.raisebadsignal()
runtime.raisebadsignal_entry:
runtime.raisebadsignal_exit:


// runtime.crash
// Return size: 0
void runtime.crash()
runtime.crash_entry:
runtime.crash_exit:


// runtime.noSignalStack
// Return size: 0
void runtime.noSignalStack()
runtime.noSignalStack_entry:
runtime.noSignalStack_exit:


// runtime.sigNotOnStack
// Return size: 0
void runtime.sigNotOnStack()
runtime.sigNotOnStack_entry:
runtime.sigNotOnStack_exit:


// runtime.badsignal
// Return size: 0
void runtime.badsignal()
runtime.badsignal_entry:
runtime.badsignal_exit:


// runtime.badsignalgo
// Return size: 0
void runtime.badsignalgo()
runtime.badsignalgo_entry:
runtime.badsignalgo_exit:


// runtime.sigfwdgo
// Return size: 0
void runtime.sigfwdgo()
runtime.sigfwdgo_entry:
runtime.sigfwdgo_exit:


// runtime.dumpregs
// Return size: 0
void runtime.dumpregs()
runtime.dumpregs_entry:
runtime.dumpregs_exit:


// runtime.sighandler
// Return size: 0
void runtime.sighandler()
runtime.sighandler_entry:
runtime.sighandler_exit:


// runtime.sigtrampgo
// Return size: 0
void runtime.sigtrampgo()
runtime.sigtrampgo_entry:
runtime.sigtrampgo_exit:


// runtime.sigpanic
// Return size: 0
void runtime.sigpanic()
runtime.sigpanic_entry:
runtime.sigpanic_exit:


// runtime.sigsend
// Return size: 0
void runtime.sigsend()
runtime.sigsend_entry:
runtime.sigsend_exit:


// runtime.makeslice
// Return size: 0
void runtime.makeslice()
runtime.makeslice_entry:
runtime.makeslice_exit:


// runtime.growslice
// Return size: 0
void runtime.growslice()
runtime.growslice_entry:
runtime.growslice_exit:


// runtime.stackinit
// Return size: 0
void runtime.stackinit()
runtime.stackinit_entry:
runtime.stackinit_exit:


// runtime.stacklog2
// Return size: 0
void runtime.stacklog2()
runtime.stacklog2_entry:
runtime.stacklog2_exit:


// runtime.stackpoolalloc
// Return size: 0
void runtime.stackpoolalloc()
runtime.stackpoolalloc_entry:
runtime.stackpoolalloc_exit:


// runtime.stackpoolfree
// Return size: 0
void runtime.stackpoolfree()
runtime.stackpoolfree_entry:
runtime.stackpoolfree_exit:


// runtime.stackcacherefill
// Return size: 0
void runtime.stackcacherefill()
runtime.stackcacherefill_entry:
runtime.stackcacherefill_exit:


// runtime.stackcacherelease
// Return size: 0
void runtime.stackcacherelease()
runtime.stackcacherelease_entry:
runtime.stackcacherelease_exit:


// runtime.stackcache_clear
// Return size: 0
void runtime.stackcache_clear()
runtime.stackcache_clear_entry:
runtime.stackcache_clear_exit:


// runtime.stackalloc
// Return size: 0
void runtime.stackalloc()
runtime.stackalloc_entry:
runtime.stackalloc_exit:


// runtime.stackfree
// Return size: 0
void runtime.stackfree()
runtime.stackfree_entry:
runtime.stackfree_exit:


// runtime.adjustpointers
// Return size: 0
void runtime.adjustpointers()
runtime.adjustpointers_entry:
runtime.adjustpointers_exit:


// runtime.adjustframe
// Return size: 0
void runtime.adjustframe()
runtime.adjustframe_entry:
runtime.adjustframe_exit:


// runtime.adjustdefers
// Return size: 0
void runtime.adjustdefers()
runtime.adjustdefers_entry:
runtime.adjustdefers_exit:


// runtime.adjustsudogs
// Return size: 0
void runtime.adjustsudogs()
runtime.adjustsudogs_entry:
runtime.adjustsudogs_exit:


// runtime.adjuststkbar
// Return size: 0
void runtime.adjuststkbar()
runtime.adjuststkbar_entry:
runtime.adjuststkbar_exit:


// runtime.findsghi
// Return size: 0
void runtime.findsghi()
runtime.findsghi_entry:
runtime.findsghi_exit:


// runtime.syncadjustsudogs
// Return size: 0
void runtime.syncadjustsudogs()
runtime.syncadjustsudogs_entry:
runtime.syncadjustsudogs_exit:


// runtime.copystack
// Return size: 0
void runtime.copystack()
runtime.copystack_entry:
runtime.copystack_exit:


// runtime.round2
// Return size: 0
void runtime.round2()
runtime.round2_entry:
runtime.round2_exit:


// runtime.newstack
// Return size: 0
void runtime.newstack()
runtime.newstack_entry:
runtime.newstack_exit:


// runtime.nilfunc
// Return size: 0
void runtime.nilfunc()
runtime.nilfunc_entry:
runtime.nilfunc_exit:


// runtime.gostartcallfn
// Return size: 0
void runtime.gostartcallfn()
runtime.gostartcallfn_entry:
runtime.gostartcallfn_exit:


// runtime.shrinkstack
// Return size: 0
void runtime.shrinkstack()
runtime.shrinkstack_entry:
runtime.shrinkstack_exit:


// runtime.freeStackSpans
// Return size: 0
void runtime.freeStackSpans()
runtime.freeStackSpans_entry:
runtime.freeStackSpans_exit:


// runtime.morestackc
// Return size: 0
void runtime.morestackc()
runtime.morestackc_entry:
runtime.morestackc_exit:


// runtime.concatstrings
// Return size: 0
void runtime.concatstrings()
runtime.concatstrings_entry:
runtime.concatstrings_exit:


// runtime.concatstring2
// Return size: 0
void runtime.concatstring2()
runtime.concatstring2_entry:
runtime.concatstring2_exit:


// runtime.concatstring4
// Return size: 0
void runtime.concatstring4()
runtime.concatstring4_entry:
runtime.concatstring4_exit:


// runtime.slicebytetostring
// Return size: 0
void runtime.slicebytetostring()
runtime.slicebytetostring_entry:
runtime.slicebytetostring_exit:


// runtime.rawstringtmp
// Return size: 0
void runtime.rawstringtmp()
runtime.rawstringtmp_entry:
runtime.rawstringtmp_exit:


// runtime.slicebytetostringtmp
// Return size: 0
void runtime.slicebytetostringtmp()
runtime.slicebytetostringtmp_entry:
runtime.slicebytetostringtmp_exit:


// runtime.rawstring
// Return size: 0
void runtime.rawstring()
runtime.rawstring_entry:
runtime.rawstring_exit:


// runtime.gostring
// Return size: 0
void runtime.gostring()
runtime.gostring_entry:
runtime.gostring_exit:


// runtime.index
// Return size: 0
void runtime.index()
runtime.index_entry:
runtime.index_exit:


// runtime.contains
// Return size: 0
void runtime.contains()
runtime.contains_entry:
runtime.contains_exit:


// runtime.atoi
// Return size: 0
void runtime.atoi()
runtime.atoi_entry:
runtime.atoi_exit:


// runtime.findnull
// Return size: 0
void runtime.findnull()
runtime.findnull_entry:
runtime.findnull_exit:


// runtime.gostringnocopy
// Return size: 0
void runtime.gostringnocopy()
runtime.gostringnocopy_entry:
runtime.gostringnocopy_exit:


// runtime.badsystemstack
// Return size: 0
void runtime.badsystemstack()
runtime.badsystemstack_entry:
runtime.badsystemstack_exit:


// runtime.unixnanotime
// Return size: 0
void runtime.unixnanotime()
runtime.unixnanotime_entry:
runtime.unixnanotime_exit:


// runtime.moduledataverify
// Return size: 0
void runtime.moduledataverify()
runtime.moduledataverify_entry:
runtime.moduledataverify_exit:


// runtime.moduledataverify1
// Return size: 0
void runtime.moduledataverify1()
runtime.moduledataverify1_entry:
runtime.moduledataverify1_exit:


// runtime.findmoduledatap
// Return size: 0
void runtime.findmoduledatap()
runtime.findmoduledatap_entry:
runtime.findmoduledatap_exit:


// runtime.findfunc
// Return size: 0
void runtime.findfunc()
runtime.findfunc_entry:
runtime.findfunc_exit:


// runtime.pcvalue
// Return size: 0
void runtime.pcvalue()
runtime.pcvalue_entry:
runtime.pcvalue_exit:


// runtime.cfuncname
// Return size: 0
void runtime.cfuncname()
runtime.cfuncname_entry:
runtime.cfuncname_exit:


// runtime.funcname
// Return size: 0
void runtime.funcname()
runtime.funcname_entry:
runtime.funcname_exit:


// runtime.funcline1
// Return size: 0
void runtime.funcline1()
runtime.funcline1_entry:
runtime.funcline1_exit:


// runtime.funcline
// Return size: 0
void runtime.funcline()
runtime.funcline_entry:
runtime.funcline_exit:


// runtime.funcspdelta
// Return size: 0
void runtime.funcspdelta()
runtime.funcspdelta_entry:
runtime.funcspdelta_exit:


// runtime.pcdatavalue
// Return size: 0
void runtime.pcdatavalue()
runtime.pcdatavalue_entry:
runtime.pcdatavalue_exit:


// runtime.funcdata
// Return size: 0
void runtime.funcdata()
runtime.funcdata_entry:
runtime.funcdata_exit:


// runtime.step
// Return size: 0
void runtime.step()
runtime.step_entry:
runtime.step_exit:


// runtime.readvarint
// Return size: 0
void runtime.readvarint()
runtime.readvarint_entry:
runtime.readvarint_exit:


// runtime.stackmapdata
// Return size: 0
void runtime.stackmapdata()
runtime.stackmapdata_entry:
runtime.stackmapdata_exit:


// runtime.gostartcall
// Return size: 0
void runtime.gostartcall()
runtime.gostartcall_entry:
runtime.gostartcall_exit:


// runtime.rewindmorestack
// Return size: 0
void runtime.rewindmorestack()
runtime.rewindmorestack_entry:
runtime.rewindmorestack_exit:


// runtime.timerproc
// Return size: 0
void runtime.timerproc()
runtime.timerproc_entry:
runtime.timerproc_exit:


// runtime.timejump
// Return size: 0
void runtime.timejump()
runtime.timejump_entry:
runtime.timejump_exit:


// runtime.siftdownTimer
// Return size: 0
void runtime.siftdownTimer()
runtime.siftdownTimer_entry:
runtime.siftdownTimer_exit:


// runtime.traceReader
// Return size: 0
void runtime.traceReader()
runtime.traceReader_entry:
runtime.traceReader_exit:


// runtime.traceProcFree
// Return size: 0
void runtime.traceProcFree()
runtime.traceProcFree_entry:
runtime.traceProcFree_exit:


// runtime.traceEvent
// Return size: 0
void runtime.traceEvent()
runtime.traceEvent_entry:
runtime.traceEvent_exit:


// runtime.traceAcquireBuffer
// Return size: 0
void runtime.traceAcquireBuffer()
runtime.traceAcquireBuffer_entry:
runtime.traceAcquireBuffer_exit:


// runtime.traceReleaseBuffer
// Return size: 0
void runtime.traceReleaseBuffer()
runtime.traceReleaseBuffer_entry:
runtime.traceReleaseBuffer_exit:


// runtime.traceFlush
// Return size: 0
void runtime.traceFlush()
runtime.traceFlush_entry:
runtime.traceFlush_exit:


// runtime.(*traceBuf).varint
// Return size: 0
void runtime.(*traceBuf).varint()
runtime.(*traceBuf).varint_entry:
runtime.(*traceBuf).varint_exit:


// runtime.(*traceStackTable).put
// Return size: 0
void runtime.(*traceStackTable).put()
runtime.(*traceStackTable).put_entry:
runtime.(*traceStackTable).put_exit:


// runtime.(*traceStackTable).find
// Return size: 0
void runtime.(*traceStackTable).find()
runtime.(*traceStackTable).find_entry:
runtime.(*traceStackTable).find_exit:


// runtime.(*traceStackTable).newStack
// Return size: 0
void runtime.(*traceStackTable).newStack()
runtime.(*traceStackTable).newStack_entry:
runtime.(*traceStackTable).newStack_exit:


// runtime.(*traceAlloc).alloc
// Return size: 0
void runtime.(*traceAlloc).alloc()
runtime.(*traceAlloc).alloc_entry:
runtime.(*traceAlloc).alloc_exit:


// runtime.traceGomaxprocs
// Return size: 0
void runtime.traceGomaxprocs()
runtime.traceGomaxprocs_entry:
runtime.traceGomaxprocs_exit:


// runtime.traceProcStart
// Return size: 0
void runtime.traceProcStart()
runtime.traceProcStart_entry:
runtime.traceProcStart_exit:


// runtime.traceProcStop
// Return size: 0
void runtime.traceProcStop()
runtime.traceProcStop_entry:
runtime.traceProcStop_exit:


// runtime.traceGCStart
// Return size: 0
void runtime.traceGCStart()
runtime.traceGCStart_entry:
runtime.traceGCStart_exit:


// runtime.traceGCDone
// Return size: 0
void runtime.traceGCDone()
runtime.traceGCDone_entry:
runtime.traceGCDone_exit:


// runtime.traceGCScanStart
// Return size: 0
void runtime.traceGCScanStart()
runtime.traceGCScanStart_entry:
runtime.traceGCScanStart_exit:


// runtime.traceGCScanDone
// Return size: 0
void runtime.traceGCScanDone()
runtime.traceGCScanDone_entry:
runtime.traceGCScanDone_exit:


// runtime.traceGCSweepStart
// Return size: 0
void runtime.traceGCSweepStart()
runtime.traceGCSweepStart_entry:
runtime.traceGCSweepStart_exit:


// runtime.traceGCSweepDone
// Return size: 0
void runtime.traceGCSweepDone()
runtime.traceGCSweepDone_entry:
runtime.traceGCSweepDone_exit:


// runtime.traceGoCreate
// Return size: 0
void runtime.traceGoCreate()
runtime.traceGoCreate_entry:
runtime.traceGoCreate_exit:


// runtime.traceGoStart
// Return size: 0
void runtime.traceGoStart()
runtime.traceGoStart_entry:
runtime.traceGoStart_exit:


// runtime.traceGoEnd
// Return size: 0
void runtime.traceGoEnd()
runtime.traceGoEnd_entry:
runtime.traceGoEnd_exit:


// runtime.traceGoSched
// Return size: 0
void runtime.traceGoSched()
runtime.traceGoSched_entry:
runtime.traceGoSched_exit:


// runtime.traceGoPreempt
// Return size: 0
void runtime.traceGoPreempt()
runtime.traceGoPreempt_entry:
runtime.traceGoPreempt_exit:


// runtime.traceGoPark
// Return size: 0
void runtime.traceGoPark()
runtime.traceGoPark_entry:
runtime.traceGoPark_exit:


// runtime.traceGoUnpark
// Return size: 0
void runtime.traceGoUnpark()
runtime.traceGoUnpark_entry:
runtime.traceGoUnpark_exit:


// runtime.traceGoSysCall
// Return size: 0
void runtime.traceGoSysCall()
runtime.traceGoSysCall_entry:
runtime.traceGoSysCall_exit:


// runtime.traceGoSysExit
// Return size: 0
void runtime.traceGoSysExit()
runtime.traceGoSysExit_entry:
runtime.traceGoSysExit_exit:


// runtime.traceGoSysBlock
// Return size: 0
void runtime.traceGoSysBlock()
runtime.traceGoSysBlock_entry:
runtime.traceGoSysBlock_exit:


// runtime.traceHeapAlloc
// Return size: 0
void runtime.traceHeapAlloc()
runtime.traceHeapAlloc_entry:
runtime.traceHeapAlloc_exit:


// runtime.traceNextGC
// Return size: 0
void runtime.traceNextGC()
runtime.traceNextGC_entry:
runtime.traceNextGC_exit:


// runtime.tracebackinit
// Return size: 0
void runtime.tracebackinit()
runtime.tracebackinit_entry:
runtime.tracebackinit_exit:


// runtime.tracebackdefers
// Return size: 0
void runtime.tracebackdefers()
runtime.tracebackdefers_entry:
runtime.tracebackdefers_exit:


// runtime.gentraceback
// Return size: 0
void runtime.gentraceback()
runtime.gentraceback_entry:
runtime.gentraceback_exit:


// runtime.getArgInfo
// Return size: 0
void runtime.getArgInfo()
runtime.getArgInfo_entry:
runtime.getArgInfo_exit:


// runtime.tracebackCgoContext
// Return size: 0
void runtime.tracebackCgoContext()
runtime.tracebackCgoContext_entry:
runtime.tracebackCgoContext_exit:


// runtime.printcreatedby
// Return size: 0
void runtime.printcreatedby()
runtime.printcreatedby_entry:
runtime.printcreatedby_exit:


// runtime.traceback
// Return size: 0
void runtime.traceback()
runtime.traceback_entry:
runtime.traceback_exit:


// runtime.tracebacktrap
// Return size: 0
void runtime.tracebacktrap()
runtime.tracebacktrap_entry:
runtime.tracebacktrap_exit:


// runtime.traceback1
// Return size: 0
void runtime.traceback1()
runtime.traceback1_entry:
runtime.traceback1_exit:


// runtime.callers
// Return size: 0
void runtime.callers()
runtime.callers_entry:
runtime.callers_exit:


// runtime.gcallers
// Return size: 0
void runtime.gcallers()
runtime.gcallers_entry:
runtime.gcallers_exit:


// runtime.showframe
// Return size: 0
void runtime.showframe()
runtime.showframe_entry:
runtime.showframe_exit:


// runtime.goroutineheader
// Return size: 0
void runtime.goroutineheader()
runtime.goroutineheader_entry:
runtime.goroutineheader_exit:


// runtime.tracebackothers
// Return size: 0
void runtime.tracebackothers()
runtime.tracebackothers_entry:
runtime.tracebackothers_exit:


// runtime.printCgoTraceback
// Return size: 0
void runtime.printCgoTraceback()
runtime.printCgoTraceback_entry:
runtime.printCgoTraceback_exit:


// runtime.printOneCgoTraceback
// Return size: 0
void runtime.printOneCgoTraceback()
runtime.printOneCgoTraceback_entry:
runtime.printOneCgoTraceback_exit:


// runtime.callCgoSymbolizer
// Return size: 0
void runtime.callCgoSymbolizer()
runtime.callCgoSymbolizer_entry:
runtime.callCgoSymbolizer_exit:


// runtime.cgoContextPCs
// Return size: 0
void runtime.cgoContextPCs()
runtime.cgoContextPCs_entry:
runtime.cgoContextPCs_exit:


// runtime.(*_type).string
// Return size: 0
void runtime.(*_type).string()
runtime.(*_type).string_entry:
runtime.(*_type).string_exit:


// runtime.(*_type).uncommon
// Return size: 0
void runtime.(*_type).uncommon()
runtime.(*_type).uncommon_entry:
runtime.(*_type).uncommon_exit:


// runtime.reflectOffsLock
// Return size: 0
void runtime.reflectOffsLock()
runtime.reflectOffsLock_entry:
runtime.reflectOffsLock_exit:


// runtime.reflectOffsUnlock
// Return size: 0
void runtime.reflectOffsUnlock()
runtime.reflectOffsUnlock_entry:
runtime.reflectOffsUnlock_exit:


// runtime.resolveNameOff
// Return size: 0
void runtime.resolveNameOff()
runtime.resolveNameOff_entry:
runtime.resolveNameOff_exit:


// runtime.(*_type).nameOff
// Return size: 0
void runtime.(*_type).nameOff()
runtime.(*_type).nameOff_entry:
runtime.(*_type).nameOff_exit:


// runtime.(*_type).typeOff
// Return size: 0
void runtime.(*_type).typeOff()
runtime.(*_type).typeOff_entry:
runtime.(*_type).typeOff_exit:


// runtime.(*_type).textOff
// Return size: 0
void runtime.(*_type).textOff()
runtime.(*_type).textOff_entry:
runtime.(*_type).textOff_exit:


// runtime.name.tagLen
// Return size: 0
void runtime.name.tagLen()
runtime.name.tagLen_entry:
runtime.name.tagLen_exit:


// runtime.name.name
// Return size: 0
void runtime.name.name()
runtime.name.name_entry:
runtime.name.name_exit:


// runtime.name.tag
// Return size: 0
void runtime.name.tag()
runtime.name.tag_entry:
runtime.name.tag_exit:


// runtime.name.pkgPath
// Return size: 0
void runtime.name.pkgPath()
runtime.name.pkgPath_entry:
runtime.name.pkgPath_exit:


// runtime.typelinksinit
// Return size: 0
void runtime.typelinksinit()
runtime.typelinksinit_entry:
runtime.typelinksinit_exit:


// runtime.typesEqual
// Return size: 0
void runtime.typesEqual()
runtime.typesEqual_entry:
runtime.typesEqual_exit:


// runtime.writeErr
// Return size: 0
void runtime.writeErr()
runtime.writeErr_entry:
runtime.writeErr_exit:


// runtime.cgocallbackg1.func1
// Return size: 0
void runtime.cgocallbackg1.func1()
runtime.cgocallbackg1.func1_entry:
runtime.cgocallbackg1.func1_exit:


// runtime.cgoCheckWriteBarrier.func1
// Return size: 0
void runtime.cgoCheckWriteBarrier.func1()
runtime.cgoCheckWriteBarrier.func1_entry:
runtime.cgoCheckWriteBarrier.func1_exit:


// runtime.cgoCheckTypedBlock.func1
// Return size: 0
void runtime.cgoCheckTypedBlock.func1()
runtime.cgoCheckTypedBlock.func1_entry:
runtime.cgoCheckTypedBlock.func1_exit:


// runtime.cgoCheckTypedBlock.func2
// Return size: 0
void runtime.cgoCheckTypedBlock.func2()
runtime.cgoCheckTypedBlock.func2_entry:
runtime.cgoCheckTypedBlock.func2_exit:


// runtime.cgoCheckBits.func1
// Return size: 0
void runtime.cgoCheckBits.func1()
runtime.cgoCheckBits.func1_entry:
runtime.cgoCheckBits.func1_exit:


// runtime.chansend.func1
// Return size: 0
void runtime.chansend.func1()
runtime.chansend.func1_entry:
runtime.chansend.func1_exit:


// runtime.chanrecv.func1
// Return size: 0
void runtime.chanrecv.func1()
runtime.chanrecv.func1_entry:
runtime.chanrecv.func1_exit:


// runtime.(*cpuProfile).(runtime.flushlog)-fm
// Return size: 0
void runtime.(*cpuProfile).(runtime.flushlog)-fm()
runtime.(*cpuProfile).(runtime.flushlog)-fm_entry:
runtime.(*cpuProfile).(runtime.flushlog)-fm_exit:


// runtime.(*mcache).nextFree.func1
// Return size: 0
void runtime.(*mcache).nextFree.func1()
runtime.(*mcache).nextFree.func1_entry:
runtime.(*mcache).nextFree.func1_exit:


// runtime.mallocgc.func1
// Return size: 0
void runtime.mallocgc.func1()
runtime.mallocgc.func1_entry:
runtime.mallocgc.func1_exit:


// runtime.persistentalloc.func1
// Return size: 0
void runtime.persistentalloc.func1()
runtime.persistentalloc.func1_entry:
runtime.persistentalloc.func1_exit:


// runtime.writebarrierptr_nostore1.func1
// Return size: 0
void runtime.writebarrierptr_nostore1.func1()
runtime.writebarrierptr_nostore1.func1_entry:
runtime.writebarrierptr_nostore1.func1_exit:


// runtime.writebarrierptr.func1
// Return size: 0
void runtime.writebarrierptr.func1()
runtime.writebarrierptr.func1_entry:
runtime.writebarrierptr.func1_exit:


// runtime.writebarrierptr_nostore.func1
// Return size: 0
void runtime.writebarrierptr_nostore.func1()
runtime.writebarrierptr_nostore.func1_entry:
runtime.writebarrierptr_nostore.func1_exit:


// runtime.typedslicecopy.func1
// Return size: 0
void runtime.typedslicecopy.func1()
runtime.typedslicecopy.func1_entry:
runtime.typedslicecopy.func1_exit:


// runtime.heapBitsBulkBarrier.func1
// Return size: 0
void runtime.heapBitsBulkBarrier.func1()
runtime.heapBitsBulkBarrier.func1_entry:
runtime.heapBitsBulkBarrier.func1_exit:


// runtime.freemcache.func1
// Return size: 0
void runtime.freemcache.func1()
runtime.freemcache.func1_entry:
runtime.freemcache.func1_exit:


// runtime.(*gcControllerState).findRunnableGCWorker.func1
// Return size: 0
void runtime.(*gcControllerState).findRunnableGCWorker.func1()
runtime.(*gcControllerState).findRunnableGCWorker.func1_entry:
runtime.(*gcControllerState).findRunnableGCWorker.func1_exit:


// runtime.gcStart.func1
// Return size: 0
void runtime.gcStart.func1()
runtime.gcStart.func1_entry:
runtime.gcStart.func1_exit:


// runtime.gcMarkDone.func1.1
// Return size: 0
void runtime.gcMarkDone.func1.1()
runtime.gcMarkDone.func1.1_entry:
runtime.gcMarkDone.func1.1_exit:


// runtime.gcMarkDone.func1
// Return size: 0
void runtime.gcMarkDone.func1()
runtime.gcMarkDone.func1_entry:
runtime.gcMarkDone.func1_exit:


// runtime.gcMarkTermination.func1
// Return size: 0
void runtime.gcMarkTermination.func1()
runtime.gcMarkTermination.func1_entry:
runtime.gcMarkTermination.func1_exit:


// runtime.gcMarkTermination.func2
// Return size: 0
void runtime.gcMarkTermination.func2()
runtime.gcMarkTermination.func2_entry:
runtime.gcMarkTermination.func2_exit:


// runtime.gcBgMarkWorker.func1
// Return size: 0
void runtime.gcBgMarkWorker.func1()
runtime.gcBgMarkWorker.func1_entry:
runtime.gcBgMarkWorker.func1_exit:


// runtime.gcMarkRootPrepare.func1
// Return size: 0
void runtime.gcMarkRootPrepare.func1()
runtime.gcMarkRootPrepare.func1_entry:
runtime.gcMarkRootPrepare.func1_exit:


// runtime.markroot.func1
// Return size: 0
void runtime.markroot.func1()
runtime.markroot.func1_entry:
runtime.markroot.func1_exit:


// runtime.gcAssistAlloc.func1
// Return size: 0
void runtime.gcAssistAlloc.func1()
runtime.gcAssistAlloc.func1_entry:
runtime.gcAssistAlloc.func1_exit:


// runtime.scanstack.func1
// Return size: 0
void runtime.scanstack.func1()
runtime.scanstack.func1_entry:
runtime.scanstack.func1_exit:


// runtime.gosweepone.func1
// Return size: 0
void runtime.gosweepone.func1()
runtime.gosweepone.func1_entry:
runtime.gosweepone.func1_exit:


// runtime.(*mheap).alloc.func1
// Return size: 0
void runtime.(*mheap).alloc.func1()
runtime.(*mheap).alloc.func1_entry:
runtime.(*mheap).alloc.func1_exit:


// runtime.(*mheap).freeSpan.func1
// Return size: 0
void runtime.(*mheap).freeSpan.func1()
runtime.(*mheap).freeSpan.func1_entry:
runtime.(*mheap).freeSpan.func1_exit:


// runtime.mProf_Malloc.func1
// Return size: 0
void runtime.mProf_Malloc.func1()
runtime.mProf_Malloc.func1_entry:
runtime.mProf_Malloc.func1_exit:


// runtime.tracealloc.func1
// Return size: 0
void runtime.tracealloc.func1()
runtime.tracealloc.func1_entry:
runtime.tracealloc.func1_exit:


// runtime.tracefree.func1
// Return size: 0
void runtime.tracefree.func1()
runtime.tracefree.func1_entry:
runtime.tracefree.func1_exit:


// runtime.futexwakeup.func1
// Return size: 0
void runtime.futexwakeup.func1()
runtime.futexwakeup.func1_entry:
runtime.futexwakeup.func1_exit:


// runtime.deferproc.func1
// Return size: 0
void runtime.deferproc.func1()
runtime.deferproc.func1_entry:
runtime.deferproc.func1_exit:


// runtime.deferreturn.func1
// Return size: 0
void runtime.deferreturn.func1()
runtime.deferreturn.func1_entry:
runtime.deferreturn.func1_exit:


// runtime.dopanic.func1
// Return size: 0
void runtime.dopanic.func1()
runtime.dopanic.func1_entry:
runtime.dopanic.func1_exit:


// runtime.main.func1
// Return size: 0
void runtime.main.func1()
runtime.main.func1_entry:
runtime.main.func1_exit:


// runtime.main.func2
// Return size: 0
void runtime.main.func2()
runtime.main.func2_entry:
runtime.main.func2_exit:


// runtime.goready.func1
// Return size: 0
void runtime.goready.func1()
runtime.goready.func1_entry:
runtime.goready.func1_exit:


// runtime.casgstatus.func1
// Return size: 0
void runtime.casgstatus.func1()
runtime.casgstatus.func1_entry:
runtime.casgstatus.func1_exit:


// runtime.casgstatus.func2
// Return size: 0
void runtime.casgstatus.func2()
runtime.casgstatus.func2_entry:
runtime.casgstatus.func2_exit:


// runtime.casgstatus.func3
// Return size: 0
void runtime.casgstatus.func3()
runtime.casgstatus.func3_entry:
runtime.casgstatus.func3_exit:


// runtime.reentersyscall.func1
// Return size: 0
void runtime.reentersyscall.func1()
runtime.reentersyscall.func1_entry:
runtime.reentersyscall.func1_exit:


// runtime.entersyscallblock.func1
// Return size: 0
void runtime.entersyscallblock.func1()
runtime.entersyscallblock.func1_entry:
runtime.entersyscallblock.func1_exit:


// runtime.entersyscallblock.func2
// Return size: 0
void runtime.entersyscallblock.func2()
runtime.entersyscallblock.func2_entry:
runtime.entersyscallblock.func2_exit:


// runtime.exitsyscall.func1
// Return size: 0
void runtime.exitsyscall.func1()
runtime.exitsyscall.func1_entry:
runtime.exitsyscall.func1_exit:


// runtime.exitsyscallfast.func1
// Return size: 0
void runtime.exitsyscallfast.func1()
runtime.exitsyscallfast.func1_entry:
runtime.exitsyscallfast.func1_exit:


// runtime.exitsyscallfast.func2
// Return size: 0
void runtime.exitsyscallfast.func2()
runtime.exitsyscallfast.func2_entry:
runtime.exitsyscallfast.func2_exit:


// runtime.malg.func1
// Return size: 0
void runtime.malg.func1()
runtime.malg.func1_entry:
runtime.malg.func1_exit:


// runtime.newproc.func1
// Return size: 0
void runtime.newproc.func1()
runtime.newproc.func1_entry:
runtime.newproc.func1_exit:


// runtime.gfget.func1
// Return size: 0
void runtime.gfget.func1()
runtime.gfget.func1_entry:
runtime.gfget.func1_exit:


// runtime.morestackc.func1
// Return size: 0
void runtime.morestackc.func1()
runtime.morestackc.func1_entry:
runtime.morestackc.func1_exit:


// runtime.callers.func1
// Return size: 0
void runtime.callers.func1()
runtime.callers.func1_entry:
runtime.callers.func1_exit:


// runtime.init
// Return size: 0
void runtime.init()
runtime.init_entry:
runtime.init_exit:


// type..hash.[2]float32
// Return size: 0
void type..hash.[2]float32()
type..hash.[2]float32_entry:
type..hash.[2]float32_exit:


// type..eq.[2]float32
// Return size: 0
void type..eq.[2]float32()
type..eq.[2]float32_entry:
type..eq.[2]float32_exit:


// type..hash.[2]float64
// Return size: 0
void type..hash.[2]float64()
type..hash.[2]float64_entry:
type..hash.[2]float64_exit:


// type..eq.[2]float64
// Return size: 0
void type..eq.[2]float64()
type..eq.[2]float64_entry:
type..eq.[2]float64_exit:


// runtime.(*errorString).Error
// Return size: 0
void runtime.(*errorString).Error()
runtime.(*errorString).Error_entry:
runtime.(*errorString).Error_exit:


// type..hash.runtime.uncommontype
// Return size: 0
void type..hash.runtime.uncommontype()
type..hash.runtime.uncommontype_entry:
type..hash.runtime.uncommontype_exit:


// type..eq.runtime.uncommontype
// Return size: 0
void type..eq.runtime.uncommontype()
type..eq.runtime.uncommontype_entry:
type..eq.runtime.uncommontype_exit:


// type..hash.runtime._panic
// Return size: 0
void type..hash.runtime._panic()
type..hash.runtime._panic_entry:
type..hash.runtime._panic_exit:


// type..eq.runtime._panic
// Return size: 0
void type..eq.runtime._panic()
type..eq.runtime._panic_entry:
type..eq.runtime._panic_exit:


// type..hash.runtime._defer
// Return size: 0
void type..hash.runtime._defer()
type..hash.runtime._defer_entry:
type..hash.runtime._defer_exit:


// type..eq.runtime._defer
// Return size: 0
void type..eq.runtime._defer()
type..eq.runtime._defer_entry:
type..eq.runtime._defer_exit:


// type..hash.runtime.special
// Return size: 0
void type..hash.runtime.special()
type..hash.runtime.special_entry:
type..hash.runtime.special_exit:


// type..eq.runtime.special
// Return size: 0
void type..eq.runtime.special()
type..eq.runtime.special_entry:
type..eq.runtime.special_exit:


// type..hash.runtime.markBits
// Return size: 0
void type..hash.runtime.markBits()
type..hash.runtime.markBits_entry:
type..hash.runtime.markBits_exit:


// type..eq.runtime.markBits
// Return size: 0
void type..eq.runtime.markBits()
type..eq.runtime.markBits_entry:
type..eq.runtime.markBits_exit:


// type..hash.runtime.mcache
// Return size: 0
void type..hash.runtime.mcache()
type..hash.runtime.mcache_entry:
type..hash.runtime.mcache_exit:


// type..eq.runtime.mcache
// Return size: 0
void type..eq.runtime.mcache()
type..eq.runtime.mcache_entry:
type..eq.runtime.mcache_exit:


// type..hash.runtime.hchan
// Return size: 0
void type..hash.runtime.hchan()
type..hash.runtime.hchan_entry:
type..hash.runtime.hchan_exit:


// type..eq.runtime.hchan
// Return size: 0
void type..eq.runtime.hchan()
type..eq.runtime.hchan_entry:
type..eq.runtime.hchan_exit:


// type..hash.runtime.sudog
// Return size: 0
void type..hash.runtime.sudog()
type..hash.runtime.sudog_entry:
type..hash.runtime.sudog_exit:


// type..eq.runtime.sudog
// Return size: 0
void type..eq.runtime.sudog()
type..eq.runtime.sudog_entry:
type..eq.runtime.sudog_exit:


// type..hash.runtime.heapBits
// Return size: 0
void type..hash.runtime.heapBits()
type..hash.runtime.heapBits_entry:
type..hash.runtime.heapBits_exit:


// type..eq.runtime.heapBits
// Return size: 0
void type..eq.runtime.heapBits()
type..eq.runtime.heapBits_entry:
type..eq.runtime.heapBits_exit:


// type..hash.runtime.modulehash
// Return size: 0
void type..hash.runtime.modulehash()
type..hash.runtime.modulehash_entry:
type..hash.runtime.modulehash_exit:


// type..eq.runtime.modulehash
// Return size: 0
void type..eq.runtime.modulehash()
type..eq.runtime.modulehash_entry:
type..eq.runtime.modulehash_exit:


// type..hash.runtime.bitvector
// Return size: 0
void type..hash.runtime.bitvector()
type..hash.runtime.bitvector_entry:
type..hash.runtime.bitvector_exit:


// type..eq.runtime.bitvector
// Return size: 0
void type..eq.runtime.bitvector()
type..eq.runtime.bitvector_entry:
type..eq.runtime.bitvector_exit:


// runtime.(*plainError).Error
// Return size: 0
void runtime.(*plainError).Error()
runtime.(*plainError).Error_entry:
runtime.(*plainError).Error_exit:


// type..hash.runtime.cpuProfile
// Return size: 0
void type..hash.runtime.cpuProfile()
type..hash.runtime.cpuProfile_entry:
type..hash.runtime.cpuProfile_exit:


// type..eq.runtime.cpuProfile
// Return size: 0
void type..eq.runtime.cpuProfile()
type..eq.runtime.cpuProfile_entry:
type..eq.runtime.cpuProfile_exit:


// type..hash.runtime.TypeAssertionError
// Return size: 0
void type..hash.runtime.TypeAssertionError()
type..hash.runtime.TypeAssertionError_entry:
type..hash.runtime.TypeAssertionError_exit:


// type..eq.runtime.TypeAssertionError
// Return size: 0
void type..eq.runtime.TypeAssertionError()
type..eq.runtime.TypeAssertionError_entry:
type..eq.runtime.TypeAssertionError_exit:


// type..hash.[6]string
// Return size: 0
void type..hash.[6]string()
type..hash.[6]string_entry:
type..hash.[6]string_exit:


// type..eq.[6]string
// Return size: 0
void type..eq.[6]string()
type..eq.[6]string_entry:
type..eq.[6]string_exit:


// type..hash.[9]string
// Return size: 0
void type..hash.[9]string()
type..hash.[9]string_entry:
type..hash.[9]string_exit:


// type..eq.[9]string
// Return size: 0
void type..eq.[9]string()
type..eq.[9]string_entry:
type..eq.[9]string_exit:


// type..hash.runtime._func
// Return size: 0
void type..hash.runtime._func()
type..hash.runtime._func_entry:
type..hash.runtime._func_exit:


// type..eq.runtime._func
// Return size: 0
void type..eq.runtime._func()
type..eq.runtime._func_entry:
type..eq.runtime._func_exit:


// type..hash.runtime.hmap
// Return size: 0
void type..hash.runtime.hmap()
type..hash.runtime.hmap_entry:
type..hash.runtime.hmap_exit:


// type..eq.runtime.hmap
// Return size: 0
void type..eq.runtime.hmap()
type..eq.runtime.hmap_entry:
type..eq.runtime.hmap_exit:


// type..hash.runtime.stackmap
// Return size: 0
void type..hash.runtime.stackmap()
type..hash.runtime.stackmap_entry:
type..hash.runtime.stackmap_exit:


// type..eq.runtime.stackmap
// Return size: 0
void type..eq.runtime.stackmap()
type..eq.runtime.stackmap_entry:
type..eq.runtime.stackmap_exit:


// type..hash.runtime.specialfinalizer
// Return size: 0
void type..hash.runtime.specialfinalizer()
type..hash.runtime.specialfinalizer_entry:
type..hash.runtime.specialfinalizer_exit:


// type..eq.runtime.specialfinalizer
// Return size: 0
void type..eq.runtime.specialfinalizer()
type..eq.runtime.specialfinalizer_entry:
type..eq.runtime.specialfinalizer_exit:


// type..hash.runtime.specialprofile
// Return size: 0
void type..hash.runtime.specialprofile()
type..hash.runtime.specialprofile_entry:
type..hash.runtime.specialprofile_exit:


// type..eq.runtime.specialprofile
// Return size: 0
void type..eq.runtime.specialprofile()
type..eq.runtime.specialprofile_entry:
type..eq.runtime.specialprofile_exit:


// type..hash.runtime.mcentral
// Return size: 0
void type..hash.runtime.mcentral()
type..hash.runtime.mcentral_entry:
type..hash.runtime.mcentral_exit:


// type..eq.runtime.mcentral
// Return size: 0
void type..eq.runtime.mcentral()
type..eq.runtime.mcentral_entry:
type..eq.runtime.mcentral_exit:


// type..hash.struct { mcentral runtime.mcentral; pad [32]uint8 }
// Return size: 0
void type..hash.struct { mcentral runtime.mcentral; pad [32]uint8 }()
type..hash.struct { mcentral runtime.mcentral; pad [32]uint8 }_entry:
type..hash.struct { mcentral runtime.mcentral; pad [32]uint8 }_exit:


// type..eq.struct { mcentral runtime.mcentral; pad [32]uint8 }
// Return size: 0
void type..eq.struct { mcentral runtime.mcentral; pad [32]uint8 }()
type..eq.struct { mcentral runtime.mcentral; pad [32]uint8 }_entry:
type..eq.struct { mcentral runtime.mcentral; pad [32]uint8 }_exit:


// type..hash.[67]struct { mcentral runtime.mcentral; pad [32]uint8 }
// Return size: 0
void type..hash.[67]struct { mcentral runtime.mcentral; pad [32]uint8 }()
type..hash.[67]struct { mcentral runtime.mcentral; pad [32]uint8 }_entry:
type..hash.[67]struct { mcentral runtime.mcentral; pad [32]uint8 }_exit:


// type..eq.[67]struct { mcentral runtime.mcentral; pad [32]uint8 }
// Return size: 0
void type..eq.[67]struct { mcentral runtime.mcentral; pad [32]uint8 }()
type..eq.[67]struct { mcentral runtime.mcentral; pad [32]uint8 }_entry:
type..eq.[67]struct { mcentral runtime.mcentral; pad [32]uint8 }_exit:


// type..hash.struct { F uintptr; c *runtime.mcache; sizeclass int8 }
// Return size: 0
void type..hash.struct { F uintptr; c *runtime.mcache; sizeclass int8 }()
type..hash.struct { F uintptr; c *runtime.mcache; sizeclass int8 }_entry:
type..hash.struct { F uintptr; c *runtime.mcache; sizeclass int8 }_exit:


// type..eq.struct { F uintptr; c *runtime.mcache; sizeclass int8 }
// Return size: 0
void type..eq.struct { F uintptr; c *runtime.mcache; sizeclass int8 }()
type..eq.struct { F uintptr; c *runtime.mcache; sizeclass int8 }_entry:
type..eq.struct { F uintptr; c *runtime.mcache; sizeclass int8 }_exit:


// type..hash.struct { F uintptr; s **runtime.mspan; size *uintptr; needzero bool }
// Return size: 0
void type..hash.struct { F uintptr; s **runtime.mspan; size *uintptr; needzero bool }()
type..hash.struct { F uintptr; s **runtime.mspan; size *uintptr; needzero bool }_entry:
type..hash.struct { F uintptr; s **runtime.mspan; size *uintptr; needzero bool }_exit:


// type..eq.struct { F uintptr; s **runtime.mspan; size *uintptr; needzero bool }
// Return size: 0
void type..eq.struct { F uintptr; s **runtime.mspan; size *uintptr; needzero bool }()
type..eq.struct { F uintptr; s **runtime.mspan; size *uintptr; needzero bool }_entry:
type..eq.struct { F uintptr; s **runtime.mspan; size *uintptr; needzero bool }_exit:


// type..hash.runtime.gcControllerState
// Return size: 0
void type..hash.runtime.gcControllerState()
type..hash.runtime.gcControllerState_entry:
type..hash.runtime.gcControllerState_exit:


// type..eq.runtime.gcControllerState
// Return size: 0
void type..eq.runtime.gcControllerState()
type..eq.runtime.gcControllerState_entry:
type..eq.runtime.gcControllerState_exit:


// type..hash.runtime.finblock
// Return size: 0
void type..hash.runtime.finblock()
type..hash.runtime.finblock_entry:
type..hash.runtime.finblock_exit:


// type..eq.runtime.finblock
// Return size: 0
void type..eq.runtime.finblock()
type..eq.runtime.finblock_entry:
type..eq.runtime.finblock_exit:


// type..hash.runtime.functype
// Return size: 0
void type..hash.runtime.functype()
type..hash.runtime.functype_entry:
type..hash.runtime.functype_exit:


// type..eq.runtime.functype
// Return size: 0
void type..eq.runtime.functype()
type..eq.runtime.functype_entry:
type..eq.runtime.functype_exit:


// type..hash.runtime.divMagic
// Return size: 0
void type..hash.runtime.divMagic()
type..hash.runtime.divMagic_entry:
type..hash.runtime.divMagic_exit:


// type..eq.runtime.divMagic
// Return size: 0
void type..eq.runtime.divMagic()
type..eq.runtime.divMagic_entry:
type..eq.runtime.divMagic_exit:


// type..hash.struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }
// Return size: 0
void type..hash.struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }()
type..hash.struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }_entry:
type..hash.struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }_exit:


// type..eq.struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }
// Return size: 0
void type..eq.struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }()
type..eq.struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }_entry:
type..eq.struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }_exit:


// type..hash.struct { F uintptr; h *runtime.mheap; s *runtime.mspan; acct int32 }
// Return size: 0
void type..hash.struct { F uintptr; h *runtime.mheap; s *runtime.mspan; acct int32 }()
type..hash.struct { F uintptr; h *runtime.mheap; s *runtime.mspan; acct int32 }_entry:
type..hash.struct { F uintptr; h *runtime.mheap; s *runtime.mspan; acct int32 }_exit:


// type..eq.struct { F uintptr; h *runtime.mheap; s *runtime.mspan; acct int32 }
// Return size: 0
void type..eq.struct { F uintptr; h *runtime.mheap; s *runtime.mspan; acct int32 }()
type..eq.struct { F uintptr; h *runtime.mheap; s *runtime.mspan; acct int32 }_entry:
type..eq.struct { F uintptr; h *runtime.mheap; s *runtime.mspan; acct int32 }_exit:


// type..hash.struct { Size uint32; Mallocs uint64; Frees uint64 }
// Return size: 0
void type..hash.struct { Size uint32; Mallocs uint64; Frees uint64 }()
type..hash.struct { Size uint32; Mallocs uint64; Frees uint64 }_entry:
type..hash.struct { Size uint32; Mallocs uint64; Frees uint64 }_exit:


// type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }
// Return size: 0
void type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }()
type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }_entry:
type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }_exit:


// type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }
// Return size: 0
void type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }()
type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }_entry:
type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }_exit:


// type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }
// Return size: 0
void type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }()
type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }_entry:
type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }_exit:


// type..hash.runtime.MemStats
// Return size: 0
void type..hash.runtime.MemStats()
type..hash.runtime.MemStats_entry:
type..hash.runtime.MemStats_exit:


// type..eq.runtime.MemStats
// Return size: 0
void type..eq.runtime.MemStats()
type..eq.runtime.MemStats_entry:
type..eq.runtime.MemStats_exit:


// type..hash.struct { F uintptr; addr *uint32; ret int32 }
// Return size: 0
void type..hash.struct { F uintptr; addr *uint32; ret int32 }()
type..hash.struct { F uintptr; addr *uint32; ret int32 }_entry:
type..hash.struct { F uintptr; addr *uint32; ret int32 }_exit:


// type..eq.struct { F uintptr; addr *uint32; ret int32 }
// Return size: 0
void type..eq.struct { F uintptr; addr *uint32; ret int32 }()
type..eq.struct { F uintptr; addr *uint32; ret int32 }_entry:
type..eq.struct { F uintptr; addr *uint32; ret int32 }_exit:


// type..hash.runtime.sigaltstackt
// Return size: 0
void type..hash.runtime.sigaltstackt()
type..hash.runtime.sigaltstackt_entry:
type..hash.runtime.sigaltstackt_exit:


// type..eq.runtime.sigaltstackt
// Return size: 0
void type..eq.runtime.sigaltstackt()
type..eq.runtime.sigaltstackt_entry:
type..eq.runtime.sigaltstackt_exit:


// type..hash.runtime.sigactiont
// Return size: 0
void type..hash.runtime.sigactiont()
type..hash.runtime.sigactiont_entry:
type..hash.runtime.sigactiont_exit:


// type..eq.runtime.sigactiont
// Return size: 0
void type..eq.runtime.sigactiont()
type..eq.runtime.sigactiont_entry:
type..eq.runtime.sigactiont_exit:


// type..hash.struct { F uintptr; newg *runtime.g; stacksize int32 }
// Return size: 0
void type..hash.struct { F uintptr; newg *runtime.g; stacksize int32 }()
type..hash.struct { F uintptr; newg *runtime.g; stacksize int32 }_entry:
type..hash.struct { F uintptr; newg *runtime.g; stacksize int32 }_exit:


// type..eq.struct { F uintptr; newg *runtime.g; stacksize int32 }
// Return size: 0
void type..eq.struct { F uintptr; newg *runtime.g; stacksize int32 }()
type..eq.struct { F uintptr; newg *runtime.g; stacksize int32 }_entry:
type..eq.struct { F uintptr; newg *runtime.g; stacksize int32 }_exit:


// type..hash.struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }
// Return size: 0
void type..hash.struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }()
type..hash.struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }_entry:
type..hash.struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }_exit:


// type..eq.struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }
// Return size: 0
void type..eq.struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }()
type..eq.struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }_entry:
type..eq.struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }_exit:


// type..hash.runtime.dbgVar
// Return size: 0
void type..hash.runtime.dbgVar()
type..hash.runtime.dbgVar_entry:
type..hash.runtime.dbgVar_exit:


// type..eq.runtime.dbgVar
// Return size: 0
void type..eq.runtime.dbgVar()
type..eq.runtime.dbgVar_entry:
type..eq.runtime.dbgVar_exit:


// type..hash.runtime.semaRoot
// Return size: 0
void type..hash.runtime.semaRoot()
type..hash.runtime.semaRoot_entry:
type..hash.runtime.semaRoot_exit:


// type..eq.runtime.semaRoot
// Return size: 0
void type..eq.runtime.semaRoot()
type..eq.runtime.semaRoot_entry:
type..eq.runtime.semaRoot_exit:


// type..hash.runtime.sigTabT
// Return size: 0
void type..hash.runtime.sigTabT()
type..hash.runtime.sigTabT_entry:
type..hash.runtime.sigTabT_exit:


// type..eq.runtime.sigTabT
// Return size: 0
void type..eq.runtime.sigTabT()
type..eq.runtime.sigTabT_entry:
type..eq.runtime.sigTabT_exit:


// type..hash.[2]string
// Return size: 0
void type..hash.[2]string()
type..hash.[2]string_entry:
type..hash.[2]string_exit:


// type..eq.[2]string
// Return size: 0
void type..eq.[2]string()
type..eq.[2]string_entry:
type..eq.[2]string_exit:


// type..hash.[4]string
// Return size: 0
void type..hash.[4]string()
type..hash.[4]string_entry:
type..hash.[4]string_exit:


// type..eq.[4]string
// Return size: 0
void type..eq.[4]string()
type..eq.[4]string_entry:
type..eq.[4]string_exit:


// type..hash.runtime.traceStack
// Return size: 0
void type..hash.runtime.traceStack()
type..hash.runtime.traceStack_entry:
type..hash.runtime.traceStack_exit:


// type..eq.runtime.traceStack
// Return size: 0
void type..eq.runtime.traceStack()
type..eq.runtime.traceStack_entry:
type..eq.runtime.traceStack_exit:


// type..hash.runtime.traceStackTable
// Return size: 0
void type..hash.runtime.traceStackTable()
type..hash.runtime.traceStackTable_entry:
type..hash.runtime.traceStackTable_exit:


// type..eq.runtime.traceStackTable
// Return size: 0
void type..eq.runtime.traceStackTable()
type..eq.runtime.traceStackTable_entry:
type..eq.runtime.traceStackTable_exit:


// type..hash.[33]float64
// Return size: 0
void type..hash.[33]float64()
type..hash.[33]float64_entry:
type..hash.[33]float64_exit:


// type..eq.[33]float64
// Return size: 0
void type..eq.[33]float64()
type..eq.[33]float64_entry:
type..eq.[33]float64_exit:


// type..hash.struct { enabled bool; needed bool; cgo bool; alignme uint64 }
// Return size: 0
void type..hash.struct { enabled bool; needed bool; cgo bool; alignme uint64 }()
type..hash.struct { enabled bool; needed bool; cgo bool; alignme uint64 }_entry:
type..hash.struct { enabled bool; needed bool; cgo bool; alignme uint64 }_exit:


// type..eq.struct { enabled bool; needed bool; cgo bool; alignme uint64 }
// Return size: 0
void type..eq.struct { enabled bool; needed bool; cgo bool; alignme uint64 }()
type..eq.struct { enabled bool; needed bool; cgo bool; alignme uint64 }_entry:
type..eq.struct { enabled bool; needed bool; cgo bool; alignme uint64 }_exit:


// type..hash.runtime.sweepdata
// Return size: 0
void type..hash.runtime.sweepdata()
type..hash.runtime.sweepdata_entry:
type..hash.runtime.sweepdata_exit:


// type..eq.runtime.sweepdata
// Return size: 0
void type..eq.runtime.sweepdata()
type..eq.runtime.sweepdata_entry:
type..eq.runtime.sweepdata_exit:


// type..hash.[67]runtime.divMagic
// Return size: 0
void type..hash.[67]runtime.divMagic()
type..hash.[67]runtime.divMagic_entry:
type..hash.[67]runtime.divMagic_exit:


// type..eq.[67]runtime.divMagic
// Return size: 0
void type..eq.[67]runtime.divMagic()
type..eq.[67]runtime.divMagic_entry:
type..eq.[67]runtime.divMagic_exit:


// type..hash.struct { size uint32; nmalloc uint64; nfree uint64 }
// Return size: 0
void type..hash.struct { size uint32; nmalloc uint64; nfree uint64 }()
type..hash.struct { size uint32; nmalloc uint64; nfree uint64 }_entry:
type..hash.struct { size uint32; nmalloc uint64; nfree uint64 }_exit:


// type..eq.struct { size uint32; nmalloc uint64; nfree uint64 }
// Return size: 0
void type..eq.struct { size uint32; nmalloc uint64; nfree uint64 }()
type..eq.struct { size uint32; nmalloc uint64; nfree uint64 }_entry:
type..eq.struct { size uint32; nmalloc uint64; nfree uint64 }_exit:


// type..hash.[67]struct { size uint32; nmalloc uint64; nfree uint64 }
// Return size: 0
void type..hash.[67]struct { size uint32; nmalloc uint64; nfree uint64 }()
type..hash.[67]struct { size uint32; nmalloc uint64; nfree uint64 }_entry:
type..hash.[67]struct { size uint32; nmalloc uint64; nfree uint64 }_exit:


// type..eq.[67]struct { size uint32; nmalloc uint64; nfree uint64 }
// Return size: 0
void type..eq.[67]struct { size uint32; nmalloc uint64; nfree uint64 }()
type..eq.[67]struct { size uint32; nmalloc uint64; nfree uint64 }_entry:
type..eq.[67]struct { size uint32; nmalloc uint64; nfree uint64 }_exit:


// type..hash.runtime.mstats
// Return size: 0
void type..hash.runtime.mstats()
type..hash.runtime.mstats_entry:
type..hash.runtime.mstats_exit:


// type..eq.runtime.mstats
// Return size: 0
void type..eq.runtime.mstats()
type..eq.runtime.mstats_entry:
type..eq.runtime.mstats_exit:


// type..hash.[256]struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }
// Return size: 0
void type..hash.[256]struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }()
type..hash.[256]struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }_entry:
type..hash.[256]struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }_exit:


// type..eq.[256]struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }
// Return size: 0
void type..eq.[256]struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }()
type..eq.[256]struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }_entry:
type..eq.[256]struct { schedtick uint32; schedwhen int64; syscalltick uint32; syscallwhen int64 }_exit:


// type..hash.runtime.forcegcstate
// Return size: 0
void type..hash.runtime.forcegcstate()
type..hash.runtime.forcegcstate_entry:
type..hash.runtime.forcegcstate_exit:


// type..eq.runtime.forcegcstate
// Return size: 0
void type..eq.runtime.forcegcstate()
type..eq.runtime.forcegcstate_entry:
type..eq.runtime.forcegcstate_exit:


// type..hash.struct { root runtime.semaRoot; pad [0]uint8 }
// Return size: 0
void type..hash.struct { root runtime.semaRoot; pad [0]uint8 }()
type..hash.struct { root runtime.semaRoot; pad [0]uint8 }_entry:
type..hash.struct { root runtime.semaRoot; pad [0]uint8 }_exit:


// type..eq.struct { root runtime.semaRoot; pad [0]uint8 }
// Return size: 0
void type..eq.struct { root runtime.semaRoot; pad [0]uint8 }()
type..eq.struct { root runtime.semaRoot; pad [0]uint8 }_entry:
type..eq.struct { root runtime.semaRoot; pad [0]uint8 }_exit:


// type..hash.[251]struct { root runtime.semaRoot; pad [0]uint8 }
// Return size: 0
void type..hash.[251]struct { root runtime.semaRoot; pad [0]uint8 }()
type..hash.[251]struct { root runtime.semaRoot; pad [0]uint8 }_entry:
type..hash.[251]struct { root runtime.semaRoot; pad [0]uint8 }_exit:


// type..eq.[251]struct { root runtime.semaRoot; pad [0]uint8 }
// Return size: 0
void type..eq.[251]struct { root runtime.semaRoot; pad [0]uint8 }()
type..eq.[251]struct { root runtime.semaRoot; pad [0]uint8 }_entry:
type..eq.[251]struct { root runtime.semaRoot; pad [0]uint8 }_exit:


// type..hash.struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }
// Return size: 0
void type..hash.struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }()
type..hash.struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }_entry:
type..hash.struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }_exit:


// type..eq.struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }
// Return size: 0
void type..eq.struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }()
type..eq.struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }_entry:
type..eq.struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }_exit:


// type..hash.[65]runtime.sigTabT
// Return size: 0
void type..hash.[65]runtime.sigTabT()
type..hash.[65]runtime.sigTabT_entry:
type..hash.[65]runtime.sigTabT_exit:


// type..eq.[65]runtime.sigTabT
// Return size: 0
void type..eq.[65]runtime.sigTabT()
type..eq.[65]runtime.sigTabT_entry:
type..eq.[65]runtime.sigTabT_exit:


// type..hash.[16]runtime.dbgVar
// Return size: 0
void type..hash.[16]runtime.dbgVar()
type..hash.[16]runtime.dbgVar_entry:
type..hash.[16]runtime.dbgVar_exit:


// type..eq.[16]runtime.dbgVar
// Return size: 0
void type..eq.[16]runtime.dbgVar()
type..eq.[16]runtime.dbgVar_entry:
type..eq.[16]runtime.dbgVar_exit:


// runtime.rt0_go
// Return size: 0
void runtime.rt0_go()
runtime.rt0_go_entry:
runtime.rt0_go_exit:


// runtime.asminit
// Return size: 0
void runtime.asminit()
runtime.asminit_entry:
runtime.asminit_exit:


// runtime.reginit
// Return size: 0
void runtime.reginit()
runtime.reginit_entry:
runtime.reginit_exit:


// runtime.gosave
// Return size: 0
void runtime.gosave()
runtime.gosave_entry:
runtime.gosave_exit:


// runtime.gogo
// Return size: 0
void runtime.gogo()
runtime.gogo_entry:
runtime.gogo_exit:


// runtime.mcall
// Return size: 0
void runtime.mcall()
runtime.mcall_entry:
runtime.mcall_exit:


// runtime.systemstack_switch
// Return size: 0
void runtime.systemstack_switch()
runtime.systemstack_switch_entry:
runtime.systemstack_switch_exit:


// runtime.systemstack
// Return size: 0
void runtime.systemstack()
runtime.systemstack_entry:
runtime.systemstack_exit:


// runtime.morestack
// Return size: 0
void runtime.morestack()
runtime.morestack_entry:
runtime.morestack_exit:


// runtime.morestack_noctxt
// Return size: 0
void runtime.morestack_noctxt()
runtime.morestack_noctxt_entry:
runtime.morestack_noctxt_exit:


// runtime.stackBarrier
// Return size: 0
void runtime.stackBarrier()
runtime.stackBarrier_entry:
runtime.stackBarrier_exit:


// runtime.reflectcall
// Return size: 0
void runtime.reflectcall()
runtime.reflectcall_entry:
runtime.reflectcall_exit:


// runtime.call32
// Return size: 0
void runtime.call32()
runtime.call32_entry:
runtime.call32_exit:


// runtime.call64
// Return size: 0
void runtime.call64()
runtime.call64_entry:
runtime.call64_exit:


// runtime.call128
// Return size: 0
void runtime.call128()
runtime.call128_entry:
runtime.call128_exit:


// runtime.call256
// Return size: 0
void runtime.call256()
runtime.call256_entry:
runtime.call256_exit:


// runtime.call512
// Return size: 0
void runtime.call512()
runtime.call512_entry:
runtime.call512_exit:


// runtime.call1024
// Return size: 0
void runtime.call1024()
runtime.call1024_entry:
runtime.call1024_exit:


// runtime.call2048
// Return size: 0
void runtime.call2048()
runtime.call2048_entry:
runtime.call2048_exit:


// runtime.call4096
// Return size: 0
void runtime.call4096()
runtime.call4096_entry:
runtime.call4096_exit:


// runtime.call8192
// Return size: 0
void runtime.call8192()
runtime.call8192_entry:
runtime.call8192_exit:


// runtime.call16384
// Return size: 0
void runtime.call16384()
runtime.call16384_entry:
runtime.call16384_exit:


// runtime.call32768
// Return size: 0
void runtime.call32768()
runtime.call32768_entry:
runtime.call32768_exit:


// runtime.call65536
// Return size: 0
void runtime.call65536()
runtime.call65536_entry:
runtime.call65536_exit:


// runtime.call131072
// Return size: 0
void runtime.call131072()
runtime.call131072_entry:
runtime.call131072_exit:


// runtime.call262144
// Return size: 0
void runtime.call262144()
runtime.call262144_entry:
runtime.call262144_exit:


// runtime.call524288
// Return size: 0
void runtime.call524288()
runtime.call524288_entry:
runtime.call524288_exit:


// runtime.call1048576
// Return size: 0
void runtime.call1048576()
runtime.call1048576_entry:
runtime.call1048576_exit:


// runtime.call2097152
// Return size: 0
void runtime.call2097152()
runtime.call2097152_entry:
runtime.call2097152_exit:


// runtime.call4194304
// Return size: 0
void runtime.call4194304()
runtime.call4194304_entry:
runtime.call4194304_exit:


// runtime.call8388608
// Return size: 0
void runtime.call8388608()
runtime.call8388608_entry:
runtime.call8388608_exit:


// runtime.call16777216
// Return size: 0
void runtime.call16777216()
runtime.call16777216_entry:
runtime.call16777216_exit:


// runtime.call33554432
// Return size: 0
void runtime.call33554432()
runtime.call33554432_entry:
runtime.call33554432_exit:


// runtime.call67108864
// Return size: 0
void runtime.call67108864()
runtime.call67108864_entry:
runtime.call67108864_exit:


// runtime.call134217728
// Return size: 0
void runtime.call134217728()
runtime.call134217728_entry:
runtime.call134217728_exit:


// runtime.call268435456
// Return size: 0
void runtime.call268435456()
runtime.call268435456_entry:
runtime.call268435456_exit:


// runtime.call536870912
// Return size: 0
void runtime.call536870912()
runtime.call536870912_entry:
runtime.call536870912_exit:


// runtime.call1073741824
// Return size: 0
void runtime.call1073741824()
runtime.call1073741824_entry:
runtime.call1073741824_exit:


// runtime.procyield
// Return size: 0
void runtime.procyield()
runtime.procyield_entry:
runtime.procyield_exit:


// runtime.jmpdefer
// Return size: 0
void runtime.jmpdefer()
runtime.jmpdefer_entry:
runtime.jmpdefer_exit:


// gosave
// Return size: 0
void gosave()
gosave_entry:
gosave_exit:


// runtime.asmcgocall
// Return size: 0
void runtime.asmcgocall()
runtime.asmcgocall_entry:
runtime.asmcgocall_exit:


// runtime.cgocallback
// Return size: 0
void runtime.cgocallback()
runtime.cgocallback_entry:
runtime.cgocallback_exit:


// runtime.cgocallback_gofunc
// Return size: 0
void runtime.cgocallback_gofunc()
runtime.cgocallback_gofunc_entry:
runtime.cgocallback_gofunc_exit:


// runtime.setg
// Return size: 0
void runtime.setg()
runtime.setg_entry:
runtime.setg_exit:


// setg_gcc
// Return size: 0
void setg_gcc()
setg_gcc_entry:
setg_gcc_exit:


// runtime.getcallerpc
// Return size: 0
void runtime.getcallerpc()
runtime.getcallerpc_entry:
runtime.getcallerpc_exit:


// runtime.getcallersp
// Return size: 0
void runtime.getcallersp()
runtime.getcallersp_entry:
runtime.getcallersp_exit:


// runtime.abort
// Return size: 0
void runtime.abort()
runtime.abort_entry:
runtime.abort_exit:


// runtime.memhash_varlen
// Return size: 0
void runtime.memhash_varlen()
runtime.memhash_varlen_entry:
runtime.memhash_varlen_exit:


// runtime.memequal
// Return size: 0
void runtime.memequal()
runtime.memequal_entry:
runtime.memequal_exit:


// runtime.memequal_varlen
// Return size: 0
void runtime.memequal_varlen()
runtime.memequal_varlen_entry:
runtime.memequal_varlen_exit:


// runtime.eqstring
// Return size: 0
void runtime.eqstring()
runtime.eqstring_entry:
runtime.eqstring_exit:


// runtime.fastrand1
// Return size: 0
void runtime.fastrand1()
runtime.fastrand1_entry:
runtime.fastrand1_exit:


// runtime.return0
// Return size: 0
void runtime.return0()
runtime.return0_entry:
runtime.return0_exit:


// runtime.goexit
// Return size: 0
void runtime.goexit()
runtime.goexit_entry:
runtime.goexit_exit:


// runtime.prefetcht0
// Return size: 0
void runtime.prefetcht0()
runtime.prefetcht0_entry:
runtime.prefetcht0_exit:


// runtime.prefetcht1
// Return size: 0
void runtime.prefetcht1()
runtime.prefetcht1_entry:
runtime.prefetcht1_exit:


// runtime.prefetcht2
// Return size: 0
void runtime.prefetcht2()
runtime.prefetcht2_entry:
runtime.prefetcht2_exit:


// runtime.prefetchnta
// Return size: 0
void runtime.prefetchnta()
runtime.prefetchnta_entry:
runtime.prefetchnta_exit:


// runtime.checkASM
// Return size: 0
void runtime.checkASM()
runtime.checkASM_entry:
runtime.checkASM_exit:


// runtime.publicationBarrier
// Return size: 0
void runtime.publicationBarrier()
runtime.publicationBarrier_entry:
runtime.publicationBarrier_exit:


// runtime.memclr
// Return size: 0
void runtime.memclr()
runtime.memclr_entry:
runtime.memclr_exit:


// runtime.memmove
// Return size: 0
void runtime.memmove()
runtime.memmove_entry:
runtime.memmove_exit:


// _rt0_mips64_linux
// Return size: 0
void _rt0_mips64_linux()
_rt0_mips64_linux_entry:
_rt0_mips64_linux_exit:


// _main
// Return size: 0
void _main()
_main_entry:
_main_exit:


// main
// Return size: 0
void main()
main_entry:
main_exit:


// runtime.exit
// Return size: 0
void runtime.exit()
runtime.exit_entry:
runtime.exit_exit:


// runtime.open
// Return size: 0
void runtime.open()
runtime.open_entry:
runtime.open_exit:


// runtime.closefd
// Return size: 0
void runtime.closefd()
runtime.closefd_entry:
runtime.closefd_exit:


// runtime.write
// Return size: 0
void runtime.write()
runtime.write_entry:
runtime.write_exit:


// runtime.read
// Return size: 0
void runtime.read()
runtime.read_entry:
runtime.read_exit:


// runtime.usleep
// Return size: 0
void runtime.usleep()
runtime.usleep_entry:
runtime.usleep_exit:


// runtime.gettid
// Return size: 0
void runtime.gettid()
runtime.gettid_entry:
runtime.gettid_exit:


// runtime.raise
// Return size: 0
void runtime.raise()
runtime.raise_entry:
runtime.raise_exit:


// runtime.raiseproc
// Return size: 0
void runtime.raiseproc()
runtime.raiseproc_entry:
runtime.raiseproc_exit:


// runtime.setitimer
// Return size: 0
void runtime.setitimer()
runtime.setitimer_entry:
runtime.setitimer_exit:


// runtime.mincore
// Return size: 0
void runtime.mincore()
runtime.mincore_entry:
runtime.mincore_exit:


// time.now
// Return size: 0
void time.now()
time.now_entry:
time.now_exit:


// runtime.nanotime
// Return size: 0
void runtime.nanotime()
runtime.nanotime_entry:
runtime.nanotime_exit:


// runtime.rtsigprocmask
// Return size: 0
void runtime.rtsigprocmask()
runtime.rtsigprocmask_entry:
runtime.rtsigprocmask_exit:


// runtime.rt_sigaction
// Return size: 0
void runtime.rt_sigaction()
runtime.rt_sigaction_entry:
runtime.rt_sigaction_exit:


// runtime.sigfwd
// Return size: 0
void runtime.sigfwd()
runtime.sigfwd_entry:
runtime.sigfwd_exit:


// runtime.sigtramp
// Return size: 0
void runtime.sigtramp()
runtime.sigtramp_entry:
runtime.sigtramp_exit:


// runtime.cgoSigtramp
// Return size: 0
void runtime.cgoSigtramp()
runtime.cgoSigtramp_entry:
runtime.cgoSigtramp_exit:


// runtime.mmap
// Return size: 0
void runtime.mmap()
runtime.mmap_entry:
runtime.mmap_exit:


// runtime.munmap
// Return size: 0
void runtime.munmap()
runtime.munmap_entry:
runtime.munmap_exit:


// runtime.madvise
// Return size: 0
void runtime.madvise()
runtime.madvise_entry:
runtime.madvise_exit:


// runtime.futex
// Return size: 0
void runtime.futex()
runtime.futex_entry:
runtime.futex_exit:


// runtime.clone
// Return size: 0
void runtime.clone()
runtime.clone_entry:
runtime.clone_exit:


// runtime.sigaltstack
// Return size: 0
void runtime.sigaltstack()
runtime.sigaltstack_entry:
runtime.sigaltstack_exit:


// runtime.osyield
// Return size: 0
void runtime.osyield()
runtime.osyield_entry:
runtime.osyield_exit:


// runtime.sched_getaffinity
// Return size: 0
void runtime.sched_getaffinity()
runtime.sched_getaffinity_entry:
runtime.sched_getaffinity_exit:


// runtime.epollwait
// Return size: 0
void runtime.epollwait()
runtime.epollwait_entry:
runtime.epollwait_exit:


// runtime.save_g
// Return size: 0
void runtime.save_g()
runtime.save_g_entry:
runtime.save_g_exit:


// runtime.load_g
// Return size: 0
void runtime.load_g()
runtime.load_g_entry:
runtime.load_g_exit:


// runtime/internal/atomic.Cas
// Return size: 0
void runtime/internal/atomic.Cas()
runtime/internal/atomic.Cas_entry:
runtime/internal/atomic.Cas_exit:


// runtime/internal/atomic.Cas64
// Return size: 0
void runtime/internal/atomic.Cas64()
runtime/internal/atomic.Cas64_entry:
runtime/internal/atomic.Cas64_exit:


// runtime/internal/atomic.Casuintptr
// Return size: 0
void runtime/internal/atomic.Casuintptr()
runtime/internal/atomic.Casuintptr_entry:
runtime/internal/atomic.Casuintptr_exit:


// runtime/internal/atomic.Loaduintptr
// Return size: 0
void runtime/internal/atomic.Loaduintptr()
runtime/internal/atomic.Loaduintptr_entry:
runtime/internal/atomic.Loaduintptr_exit:


// runtime/internal/atomic.Loaduint
// Return size: 0
void runtime/internal/atomic.Loaduint()
runtime/internal/atomic.Loaduint_entry:
runtime/internal/atomic.Loaduint_exit:


// runtime/internal/atomic.Storeuintptr
// Return size: 0
void runtime/internal/atomic.Storeuintptr()
runtime/internal/atomic.Storeuintptr_entry:
runtime/internal/atomic.Storeuintptr_exit:


// runtime/internal/atomic.Loadint64
// Return size: 0
void runtime/internal/atomic.Loadint64()
runtime/internal/atomic.Loadint64_entry:
runtime/internal/atomic.Loadint64_exit:


// runtime/internal/atomic.Xaddint64
// Return size: 0
void runtime/internal/atomic.Xaddint64()
runtime/internal/atomic.Xaddint64_entry:
runtime/internal/atomic.Xaddint64_exit:


// runtime/internal/atomic.Casp1
// Return size: 0
void runtime/internal/atomic.Casp1()
runtime/internal/atomic.Casp1_entry:
runtime/internal/atomic.Casp1_exit:


// runtime/internal/atomic.Xadd
// Return size: 0
void runtime/internal/atomic.Xadd()
runtime/internal/atomic.Xadd_entry:
runtime/internal/atomic.Xadd_exit:


// runtime/internal/atomic.Xadd64
// Return size: 0
void runtime/internal/atomic.Xadd64()
runtime/internal/atomic.Xadd64_entry:
runtime/internal/atomic.Xadd64_exit:


// runtime/internal/atomic.Xchg
// Return size: 0
void runtime/internal/atomic.Xchg()
runtime/internal/atomic.Xchg_entry:
runtime/internal/atomic.Xchg_exit:


// runtime/internal/atomic.Xchg64
// Return size: 0
void runtime/internal/atomic.Xchg64()
runtime/internal/atomic.Xchg64_entry:
runtime/internal/atomic.Xchg64_exit:


// runtime/internal/atomic.StorepNoWB
// Return size: 0
void runtime/internal/atomic.StorepNoWB()
runtime/internal/atomic.StorepNoWB_entry:
runtime/internal/atomic.StorepNoWB_exit:


// runtime/internal/atomic.Store
// Return size: 0
void runtime/internal/atomic.Store()
runtime/internal/atomic.Store_entry:
runtime/internal/atomic.Store_exit:


// runtime/internal/atomic.Store64
// Return size: 0
void runtime/internal/atomic.Store64()
runtime/internal/atomic.Store64_entry:
runtime/internal/atomic.Store64_exit:


// runtime/internal/atomic.Or8
// Return size: 0
void runtime/internal/atomic.Or8()
runtime/internal/atomic.Or8_entry:
runtime/internal/atomic.Or8_exit:


// runtime/internal/atomic.And8
// Return size: 0
void runtime/internal/atomic.And8()
runtime/internal/atomic.And8_entry:
runtime/internal/atomic.And8_exit:


// runtime/internal/atomic.Load
// Return size: 0
void runtime/internal/atomic.Load()
runtime/internal/atomic.Load_entry:
runtime/internal/atomic.Load_exit:


// runtime/internal/atomic.Load64
// Return size: 0
void runtime/internal/atomic.Load64()
runtime/internal/atomic.Load64_entry:
runtime/internal/atomic.Load64_exit:


// runtime/internal/atomic.Loadp
// Return size: 0
void runtime/internal/atomic.Loadp()
runtime/internal/atomic.Loadp_entry:
runtime/internal/atomic.Loadp_exit:


// runtime.etext
// Return size: 0
void runtime.etext()
runtime.etext_entry:
runtime.etext_exit:


