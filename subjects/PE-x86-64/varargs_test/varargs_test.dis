word32 fn0000000140001000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx xmm0
// Preserved: rsp
fn0000000140001000_entry:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001000:
	word64 rax_5 = Mem0[0x0000000140003000:word64] ^ fp - 200
	fn0000000140001140(qwLocC8, qwLocC0, qwLocB8, qwLocB0)
	fn00000001400010D0(qwLocC8, qwLocC0, qwLocB8, qwLocB0)
	return fn00000001400011B0(rax_5 ^ fp - 200)
// DataOut: eax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001000_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> xmm0:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> -168(fp):fp - 0x0000000000000080 -160(fp):fp - 0x0000000000000078 -152(fp):fp - 0x0000000000000088 -144(fp):fp - 0x0000000000000084 -16(fp):<invalid>



word64 fn00000001400010C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: ah al ax eax rax
// Preserved: rsp
fn00000001400010C0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000001400010C0:
	return 0x0000000140003628
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000001400010C0_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:0000000140003628



void fn00000001400010D0(word64 qwArg08, word64 qwArg10, word64 qwArg18, word64 qwArg20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rbx rdi rsi rsp
fn00000001400010D0_entry:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400010D0:
	word64 rsp_26
	word64 rcx_27
	word64 rdx_28
	word64 r8_29
	word64 r9_30
	word64 rbx_31
	word64 rsi_32
	word64 rdi_33
	byte SCZO_34
	word32 ecx_35
	byte SZO_36
	byte C_37
	word64 rax_38
	word32 r9d_39
	call _acrt_iob_func (retsize: 8; depth: 80)
		uses: C_25,ecx_23,qwLoc08_12,qwLoc10_15,qwLoc18_18,r8,r9,rbx,rcx_22,rdi_20,rdx,rsi_21,rsp_19,SZO_24
		defs: C_37,ecx_35,r8_29,r9_30,r9d_39,rax_38,rbx_31,rcx_27,rdi_33,rdx_28,rsi_32,rsp_26,SCZO_34,SZO_36
	word64 rax_41 = fn00000001400010C0()
	word64 rsp_51
	word64 rcx_52
	word64 rdx_53
	word64 r8_54
	word64 r9_55
	word64 rbx_56
	word64 rsi_57
	word64 rdi_58
	byte SCZO_59
	word32 ecx_60
	byte SZO_61
	byte C_62
	word64 rax_63
	word32 r9d_64
	call _stdio_common_vfscanf (retsize: 8; depth: 80)
		uses: C_45,ecx_35,qwLoc08_12,qwLoc10_15,qwLoc18_18,qwLoc28_46,r8_47,r9_42,r9d_43,rax_41,rbx_40,rcx_50,rdi_33,rdx_48,rsi_32,rsp_26,SCZO_34,SZO_44
		defs: C_62,ecx_60,r8_54,r9_55,r9d_64,rax_63,rbx_56,rcx_52,rdi_58,rdx_53,rsi_57,rsp_51,SCZO_59,SZO_61
	return
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000001400010D0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:rdi rsi:rsi rcx:<invalid> rbx:rbx r9:<invalid> r8:<invalid> rdx:<invalid> rax:<invalid> -40(fp):fp + 0x0000000000000010 -24(fp):rdi -16(fp):rsi -8(fp):rbx 8(fp):rcx 16(fp):rdx 24(fp):r8 32(fp):r9



word64 fn0000000140001130()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: ah al ax eax rax
// Preserved: rsp
fn0000000140001130_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001130:
	return 0x0000000140003620
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001130_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:0000000140003620



void fn0000000140001140(word64 qwArg08, word64 qwArg10, word64 qwArg18, word64 qwArg20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rbx rdi rsi rsp
fn0000000140001140_entry:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001140:
	word64 rsp_24
	word64 rcx_25
	word64 rdx_26
	word64 r8_27
	word64 r9_28
	word64 rbx_29
	word64 rsi_30
	word64 rdi_31
	byte SCZO_32
	word32 ecx_33
	word64 rax_34
	word32 r9d_35
	byte SZO_36
	byte C_37
	call _acrt_iob_func (retsize: 8; depth: 80)
		uses: qwLoc08_12,qwLoc10_15,qwLoc18_18,r8,r9,rbx,rcx_23,rdi_21,rdx,rsi_22,rsp_19,SCZO_20
		defs: C_37,ecx_33,r8_27,r9_28,r9d_35,rax_34,rbx_29,rcx_25,rdi_31,rdx_26,rsi_30,rsp_24,SCZO_32,SZO_36
	word64 rax_39 = fn0000000140001130()
	word64 rsp_49
	word64 rcx_50
	word64 rdx_51
	word64 r8_52
	word64 r9_53
	word64 rbx_54
	word64 rsi_55
	word64 rdi_56
	byte SCZO_57
	word32 ecx_58
	word64 rax_59
	word32 r9d_60
	byte SZO_61
	byte C_62
	call _stdio_common_vfprintf (retsize: 8; depth: 80)
		uses: C_43,ecx_33,qwLoc08_12,qwLoc10_15,qwLoc18_18,qwLoc28_44,r8_45,r9_40,r9d_41,rax_39,rbx_38,rcx_48,rdi_31,rdx_46,rsi_30,rsp_24,SCZO_32,SZO_42
		defs: C_62,ecx_58,r8_52,r9_53,r9d_60,rax_59,rbx_54,rcx_50,rdi_56,rdx_51,rsi_55,rsp_49,SCZO_57,SZO_61
	return
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001140_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rdi:rdi rsi:rsi rcx:<invalid> rbx:rbx r9:<invalid> r8:<invalid> rdx:<invalid> rax:<invalid> -40(fp):fp + 0x0000000000000010 -24(fp):rdi -16(fp):rsi -8(fp):rbx 8(fp):rcx 16(fp):rdx 24(fp):r8 32(fp):r9



word32 fn00000001400011B0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rsp
fn00000001400011B0_entry:
// DataOut: eax rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000001400011B0:
	branch rcx != Mem0[0x0000000140003000:word64] l00000001400011CC
// DataOut: eax rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000001400011BA:
	word64 rcx_30 = __rol(rcx, 0x10)
	branch ((word16) rcx_30 & 0xFFFF) != 0x0000 l00000001400011C8
// DataOut: eax rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000001400011C8:
	rcx = __ror(rcx_30, 0x10)
// DataOut: rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid>

l00000001400011CC:
// DataOut: rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid>

l00000001400011CC_thunk_fn000000014000147C:
	return fn000000014000147C(rcx, qwArg00, qwArg08)
// DataOut: eax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid>

l00000001400011C6:
	return eax
// DataOut: eax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid>

fn00000001400011B0_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid> eax:<invalid> rax:0x0000000000000008 rdx:<invalid> r8:<invalid> r9:<invalid>



void fn00000001400011D4(word64 rbx, word64 r8, word64 r13, word128 xmm1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13 r8 rbx xmm1
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx esp r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rbx rcx rdx rsp sp spl xmm0 xmm1
// Preserved:
fn00000001400011D4_entry:
// DataOut: r13 r8 rbx xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0028(0)

l00000001400011D4:
	word64 rsp_8
	word64 rbx_9
	byte SCZO_10
	word32 ecx_11
	word64 rcx_12
	word32 eax_13
	word64 rax_14
	byte al_15
	byte SZO_16
	byte C_17
	byte Z_18
	word64 r8_19
	word64 r13_20
	word128 xmm1_21
	byte bl_22
	call set_app_type (retsize: 8; depth: 48)
		uses: qwLoc08_4,rbx,rcx_7,rsp_5,SCZO_6
		defs: al_15,bl_22,C_17,eax_13,ecx_11,r13_20,r8_19,rax_14,rbx_9,rcx_12,rsp_8,SCZO_10,SZO_16,xmm1_21,Z_18
	fn0000000140001920()
	_set_fmode(dwLoc28)
	Mem32[__p__commode():word32] = fn0000000140001ABC()
	word32 eax_34 = fn000000014000164C(0x00000001, r8_19, r13_20, xmm1_21, qwLoc28)
	byte al_36 = (byte) eax_34
	branch al_36 == 0x00 l0000000140001279
// DataOut: eax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: Local -0008(64)

l0000000140001279:
	byte bl_153
	fn0000000140001974(0x00000007, rbx, qwArg00, qwArg08, out bl_153)
	int3()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> rbp:<invalid> rdx:<invalid> r8:<invalid> al:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx
// LocalsOut: Local -0008(64)

l000000014000120D:
	fn0000000140001B5C(qwArg00, qwArg08)
	fn0000000140001854(eax_34)
	word32 eax_74 = fn0000000140001918()
	word64 rsp_76
	word64 rbx_77
	byte SCZO_78
	word32 ecx_79
	word64 rcx_80
	word32 eax_81
	word64 rax_82
	byte al_83
	byte SZO_84
	byte C_85
	byte Z_86
	word64 r8_87
	word64 r13_88
	word128 xmm1_89
	byte bl_90
	call configure_narrow_argv (retsize: 8; depth: 8)
		uses: al_36,bl_22,C_39,dwLoc28,eax_74,ecx_31,qwLoc08_4,qwLoc28,r13_20,r8_19,rax_35,rbx_28,rcx_75,rsp_8,SCZO_10,SZO_37,xmm1_21,Z_38
		defs: al_83,bl_90,C_85,eax_81,ecx_79,r13_88,r8_87,rax_82,rbx_77,rcx_80,rsp_76,SCZO_78,SZO_84,xmm1_89,Z_86
	branch eax_81 != 0x00000000 l0000000140001284
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> rbp:<invalid> rdx:<invalid> r8:<invalid> al:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx
// LocalsOut: Local -0008(64)

l0000000140001284:
	byte bl_71
	fn0000000140001974(0x00000007, rbx, qwArg00, qwArg08, out bl_71)
	int3()
	int3()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> rbp:<invalid> rdx:<invalid> r8:<invalid> al:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx

l000000014000128F_thunk_fn0000000140001290:
	fn0000000140001290()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> rbp:<invalid> rdx:<invalid> r8:0x0000000000000098 al:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx

l000000014000122E:
	fn0000000140001928()
	branch fn0000000140001958() == 0x00000000 l0000000140001248
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> rbp:<invalid> rdx:<invalid> r8:<invalid> al:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx

l000000014000123C:
	__setusermatherr(0x0000000140001ABC)
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> al:<invalid> rbp:<invalid> rdx:<invalid> r8:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx

l0000000140001248:
	fn0000000140001DD0()
	fn0000000140001DD0()
	word32 eax_98 = fn0000000140001ABC()
	word64 rsp_100
	word64 rbx_101
	byte SCZO_102
	word32 ecx_103
	word64 rcx_104
	word32 eax_105
	word64 rax_106
	byte al_107
	byte SZO_108
	byte C_109
	byte Z_110
	word64 r8_111
	word64 r13_112
	word128 xmm1_113
	byte bl_114
	call configthreadlocale (retsize: 8; depth: 8)
		uses: al_83,bl_90,C_97,dwLoc28,eax_98,ecx_79,qwLoc08_4,qwLoc28,r13_88,r8_87,rax_82,rbx_77,rcx_99,rsp_76,SCZO_78,SZO_95,xmm1_89,Z_96
		defs: al_107,bl_114,C_109,eax_105,ecx_103,r13_112,r8_111,rax_106,rbx_101,rcx_104,rsp_100,SCZO_102,SZO_108,xmm1_113,Z_110
	fn0000000140001938()
	branch 0x01 == 0x00 l000000014000126C
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> al:<invalid> rbp:<invalid> rdx:<invalid> r8:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx

l0000000140001267:
	word64 rsp_135
	word64 rbx_136
	byte SCZO_137
	word32 ecx_138
	word64 rcx_139
	word32 eax_140
	word64 rax_141
	byte al_142
	byte SZO_143
	byte C_144
	byte Z_145
	word64 r8_146
	word64 r13_147
	word128 xmm1_148
	byte bl_149
	call initialize_narrow_environment (retsize: 8; depth: 8)
		uses: al_107,bl_114,C_117,dwLoc28,eax_105,ecx_103,qwLoc08_4,qwLoc28,r13_112,r8_111,rax_106,rbx_101,rcx_104,rsp_100,SCZO_102,SZO_115,xmm1_113,Z_116
		defs: al_142,bl_149,C_144,eax_140,ecx_138,r13_147,r8_146,rax_141,rbx_136,rcx_139,rsp_135,SCZO_137,SZO_143,xmm1_148,Z_145
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> al:0x01 rbp:<invalid> rdx:<invalid> r8:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx

l000000014000126C:
	fn0000000140001ABC()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> al:<invalid> rbp:<invalid> rdx:<invalid> r8:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx

fn00000001400011D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rcx:<invalid> eax:<invalid> rax:<invalid> rbx:<invalid> al:<invalid> rbp:<invalid> rdx:<invalid> r8:<invalid> xmm0:<invalid> xmm1:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbx



void fn0000000140001290()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn0000000140001290_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001290:
	fn000000014000193C()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001290_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void fn00000001400012A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: rsp
fn00000001400012A0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400012A0:
	fn0000000140001B14()
	word32 eax_4 = fn0000000140001ABC()
	word64 rsp_8
	byte SCZO_9
	word32 ecx_10
	word32 eax_11
	word64 rcx_12
	call set_new_mode (retsize: 8; depth: 8)
		uses: eax_4,rcx_5,rsp_6,SCZO_7
		defs: eax_11,ecx_10,rcx_12,rsp_8,SCZO_9
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000001400012A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid> rax:<invalid>



word32 fn00000001400012BC(word32 edx, word64 r13, selector gs, word64 qwArg08, word64 qwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx gs r13
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esi r10 r10b r10d r10w r11 r11b r11d r11w r8 r8b r8d r8w r9 r9b r9d r9w rax rbx rcx rdx rsi si sil xmm0
// Preserved: rbx rdi rsi rsp
fn00000001400012BC_entry:
// DataOut: edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400012BC:
	branch fn0000000140001600(0x00000001, edx, r13) != 0x00 l00000001400012E4
// DataOut: gs
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400012D9:
	byte bl_347
	fn0000000140001974(0x00000007, qwLoc40, qwLoc38, qwLoc30, out bl_347)
	int3()
// DataOut: gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> eax:<invalid> al:<invalid> rax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400012E4:
	byte bl_26 = fn00000001400015C4(gs)
	word32 ecx_32 = (word32) (uint64) Mem0[0x00000001400035B0:word32]
	branch ecx_32 != 0x00000001 l0000000140001308
// DataOut: bl ecx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> eax:<invalid> al:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> bl:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400012FE:
	ecx_32 = (word32) fn0000000140001974(0x00000007, qwLoc40, qwLoc38, qwLoc30, out bl_26) (alias)
// DataOut: bl ecx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:0x00 bl:<invalid> al:<invalid> eax:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):0x00 -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001308:
	word32 eax_224
	branch ecx_32 != 0x00000000 l0000000140001356
// DataOut: bl sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:0x00 bl:<invalid> al:<invalid> eax:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):0x00 -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001356:
// DataOut: bl sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:0x00 bl:<invalid> al:<invalid> eax:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):0x00 -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l000000014000130C:
	Mem319[0x00000001400035B0:word32] = 0x00000001
	branch _initterm_e(0x00000001400021B8, 0x00000001400021D0) == 0x00000000 l0000000140001337
// DataOut: bl sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:0x00 bl:<invalid> al:<invalid> eax:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):0x00 -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001337:
	_initterm(0x00000001400021A0, 0x00000001400021B0)
	Mem331[0x00000001400035B0:word32] = 0x00000002
// DataOut: bl sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:00000001400021B8 sil:0x00 bl:<invalid> rdx:00000001400021D0 eax:<invalid> al:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):0x00 -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l000000014000135E:
	fn00000001400017B4(bl_26)
	word64 rax_77 = fn0000000140001964()
	branch Mem0[rax_77:word64] == 0x0000000000000000 l0000000140001395
// DataOut: rax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001373:
	word64 rax_282 = fn0000000140001718(rax_77)
	byte al_283 = (byte) rax_282
	branch al_283 == 0x00 l0000000140001395
// DataOut: eax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> al:<invalid> r8:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l000000014000137F:
	word64 rbx_288 = Mem0[rax_77:word64]
	fn0000000140001BF4()
	word64 rsp_295
	word64 rbx_296
	word64 rsi_297
	word64 rdi_298
	byte SCZO_299
	word64 rcx_300
	byte al_301
	byte SZO_302
	byte C_303
	byte Z_304
	byte sil_305
	byte bl_306
	word32 ecx_307
	word64 rdx_308
	word32 eax_309
	word64 rax_310
	byte cl_311
	word32 r8d_312
	word64 r8_313
	word32 edx_314
	word32 ebx_315
	word64 r13_316
	selector gs_317
	byte dl_318
	call rbx_288 (retsize: 8; depth: 64)
		uses: al_283,bl_81,bLoc18_69,C_294,cl_76,dl,eax_284,ebx_82,ecx_36,edx_291,gs,qwLoc08_8,r13,r8_290,r8d,rax_282,rbx_288,rcx_292,rdi,rdx_71,rsi_75,rsp_9,SCZO_83,sil_70,SZO_293,Z_286
		defs: al_301,bl_306,C_303,cl_311,dl_318,eax_309,ebx_315,ecx_307,edx_314,gs_317,r13_316,r8_313,r8d_312,rax_310,rbx_296,rcx_300,rdi_298,rdx_308,rsi_297,rsp_295,SCZO_299,sil_305,SZO_302,Z_304
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001395:
	word64 rax_104 = fn000000014000196C()
	branch Mem0[rax_104:word64] == 0x0000000000000000 l00000001400013B7
// DataOut: rax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> edx:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400013A3:
	word64 rax_250 = fn0000000140001718(rax_104)
	byte al_251 = (byte) rax_250
	branch al_251 == 0x00 l00000001400013B7
// DataOut: rax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> edx:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400013AF:
	word64 rsp_257
	word64 rbx_258
	word64 rsi_259
	word64 rdi_260
	byte SCZO_261
	word64 rcx_262
	byte al_263
	byte SZO_264
	byte C_265
	byte Z_266
	byte sil_267
	byte bl_268
	word32 ecx_269
	word64 rdx_270
	word32 eax_271
	word64 rax_272
	byte cl_273
	word32 r8d_274
	word64 r8_275
	word32 edx_276
	word32 ebx_277
	word64 r13_278
	selector gs_279
	byte dl_280
	call register_thread_local_exe_atexit_callback (retsize: 8; depth: 64)
		uses: al_251,bl_108,bLoc18_69,C_255,cl_99,dl_96,eax_252,ebx_109,ecx_93,edx_90,gs_88,qwLoc08_8,r13_89,r8_91,r8d_92,rax_250,rbx_107,rcx_256,rdi_102,rdx_95,rsi_101,rsp_103,SCZO_110,sil_94,SZO_253,Z_254
		defs: al_263,bl_268,C_265,cl_273,dl_280,eax_271,ebx_277,ecx_269,edx_276,gs_279,r13_278,r8_275,r8d_274,rax_272,rbx_258,rcx_262,rdi_260,rdx_270,rsi_259,rsp_257,SCZO_261,sil_267,SZO_264,Z_266
// DataOut: rax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> edx:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400013B7:
	word64 rsp_112
	word64 rbx_113
	word64 rsi_114
	word64 rdi_115
	byte SCZO_116
	word64 rcx_117
	byte al_118
	byte SZO_119
	byte C_120
	byte Z_121
	byte sil_122
	byte bl_123
	word32 ecx_124
	word64 rdx_125
	word32 eax_126
	word64 rax_127
	byte cl_128
	word32 r8d_129
	word64 r8_130
	word32 edx_131
	word32 ebx_132
	word64 r13_133
	selector gs_134
	byte dl_135
	call _p___argv (retsize: 8; depth: 64)
		uses: al_105,bl_108,bLoc18_69,C_98,cl_99,dl_96,eax_106,ebx_109,ecx_93,edx_90,gs_88,qwLoc08_8,r13_89,r8_91,r8d_92,rax_104,rbx_107,rcx_100,rdi_102,rdx_95,rsi_101,rsp_103,SCZO_110,sil_94,SZO_97,Z_111
		defs: al_118,bl_123,C_120,cl_128,dl_135,eax_126,ebx_132,ecx_124,edx_131,gs_134,r13_133,r8_130,r8d_129,rax_127,rbx_113,rcx_117,rdi_115,rdx_125,rsi_114,rsp_112,SCZO_116,sil_122,SZO_119,Z_121
	word64 rsp_137
	word64 rbx_138
	word64 rsi_139
	word64 rdi_140
	byte SCZO_141
	word64 rcx_142
	byte al_143
	byte SZO_144
	byte C_145
	byte Z_146
	byte sil_147
	byte bl_148
	word32 ecx_149
	word64 rdx_150
	word32 eax_151
	word64 rax_152
	byte cl_153
	word32 r8d_154
	word64 r8_155
	word32 edx_156
	word32 ebx_157
	word64 r13_158
	selector gs_159
	byte dl_160
	call _p___argc (retsize: 8; depth: 64)
		uses: al_118,bl_123,bLoc18_69,C_120,cl_128,dl_135,eax_126,ebx_132,ecx_124,edx_131,gs_134,qwLoc08_8,r13_133,r8_130,r8d_129,rax_127,rbx_113,rcx_117,rdi_136,rdx_125,rsi_114,rsp_112,SCZO_116,sil_122,SZO_119,Z_121
		defs: al_143,bl_148,C_145,cl_153,dl_160,eax_151,ebx_157,ecx_149,edx_156,gs_159,r13_158,r8_155,r8d_154,rax_152,rbx_138,rcx_142,rdi_140,rdx_150,rsi_139,rsp_137,SCZO_141,sil_147,SZO_144,Z_146
	word64 rsp_162
	word64 rbx_163
	word64 rsi_164
	word64 rdi_165
	byte SCZO_166
	word64 rcx_167
	byte al_168
	byte SZO_169
	byte C_170
	byte Z_171
	byte sil_172
	byte bl_173
	word32 ecx_174
	word64 rdx_175
	word32 eax_176
	word64 rax_177
	byte cl_178
	word32 r8d_179
	word64 r8_180
	word32 edx_181
	word32 ebx_182
	word64 r13_183
	selector gs_184
	byte dl_185
	call get_initial_narrow_environment (retsize: 8; depth: 64)
		uses: al_143,bl_148,bLoc18_69,C_145,cl_153,dl_160,eax_151,ebx_157,ecx_149,edx_156,gs_159,qwLoc08_8,r13_158,r8_155,r8d_154,rax_152,rbx_161,rcx_142,rdi_140,rdx_150,rsi_139,rsp_137,SCZO_141,sil_147,SZO_144,Z_146
		defs: al_168,bl_173,C_170,cl_178,dl_185,eax_176,ebx_182,ecx_174,edx_181,gs_184,r13_183,r8_180,r8d_179,rax_177,rbx_163,rcx_167,rdi_165,rdx_175,rsi_164,rsp_162,SCZO_166,sil_172,SZO_169,Z_171
	word32 eax_189 = fn0000000140001000()
	word64 rbx_190 = (uint64) eax_189
	word32 ebx_192 = (word32) rbx_190
	byte al_193 = fn0000000140001AC0()
	branch al_193 != 0x00 l00000001400013EB
// DataOut: ebx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> edx:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400013EB:
	branch sil_172 != 0x00 l00000001400013F5
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> rdi:<invalid> xmm0:<invalid> r9:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400013F0:
	word64 rsp_225
	word64 rbx_226
	word64 rsi_227
	word64 rdi_228
	byte SCZO_229
	word64 rcx_230
	byte al_231
	byte SZO_232
	byte C_233
	byte Z_234
	byte sil_235
	byte bl_236
	word32 ecx_237
	word64 rdx_238
	word32 eax_239
	word64 rax_240
	byte cl_241
	word32 r8d_242
	word64 r8_243
	word32 edx_244
	word32 ebx_245
	word64 r13_246
	selector gs_247
	byte dl_248
	call cexit (retsize: 8; depth: 64)
		uses: al_193,bl_191,bLoc18_69,C_200,cl_178,dl_185,eax_189,ebx_192,ecx_174,edx_181,gs_184,qwLoc08_8,r13_183,r8_186,r8d_179,rax_177,rbx_190,rcx_188,rdi_165,rdx_187,rsi_164,rsp_162,SCZO_166,sil_172,SZO_198,Z_199
		defs: al_231,bl_236,C_233,cl_241,dl_248,eax_239,ebx_245,ecx_237,edx_244,gs_247,r13_246,r8_243,r8d_242,rax_240,rbx_226,rcx_230,rdi_228,rdx_238,rsi_227,rsp_225,SCZO_229,sil_235,SZO_232,Z_234
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> rdi:<invalid> xmm0:<invalid> r9:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400013F5:
	eax_224 = (word32) (uint64) fn00000001400017D8(0x00) (alias)
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> rdi:<invalid> xmm0:<invalid> r9:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l00000001400013E4:
	exit((uint64) ebx_192)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> cl:<invalid> rax:<invalid> rbx:<invalid> r8:<invalid> al:<invalid> rdi:<invalid> xmm0:<invalid> r9:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi

l000000014000132D:
	eax_224 = 0x000000FF (alias)
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:00000001400021B8 sil:0x00 bl:<invalid> rdx:00000001400021D0 eax:<invalid> al:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r10:<invalid> r11:<invalid> -24(fp):0x00 -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001423:
	return eax_224
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> rax:<invalid> al:<invalid> r8:<invalid> r9:<invalid> cl:0x01 rbx:<invalid> rdi:<invalid> xmm0:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi

fn00000001400012BC_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> eax:<invalid> rax:<invalid> rbx:rbx rsi:rsi rdi:rdi al:<invalid> r8:<invalid> r9:<invalid> cl:0x01 xmm0:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid> -24(fp):<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi



DWORD Win32CrtStartup()
// stackDelta: 8; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx gs r13
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esi r10 r10b r10d r10w r11 r11b r11d r11w r8 r8b r8d r8w r9 r9b r9d r9w rax rbx rcx rdx rsi si sil xmm0
// Preserved: rsp
Win32CrtStartup_entry:
// DataOut: edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001434:
	fn000000014000186C(qwLoc28, qwLoc20, qwLoc18, qwLoc10)
// DataOut: edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp

l000000014000143D_thunk_fn00000001400012BC:
	return fn00000001400012BC(edx, r13, gs, qwArg08, qwArg10)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> eax:<invalid> rcx:0x000000002DDFA233

Win32CrtStartup_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> eax:<invalid> rcx:<invalid> sil:<invalid> bl:<invalid> rdx:<invalid> al:<invalid> r8:<invalid> r9:<invalid> cl:0x01 xmm0:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> r10:<invalid> r11:<invalid>



word32 fn0000000140001448()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: rbx rsp
fn0000000140001448_entry:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0028(0)

l0000000140001448:
	SetUnhandledExceptionFilter(tLoc28)
	UnhandledExceptionFilter(tLoc28)
	word32 eax_12 = GetCurrentProcess()
	word64 rsp_22
	word64 rbx_23
	byte SCZO_24
	word64 rcx_25
	word32 ecx_26
	byte SZO_27
	byte C_28
	word32 eax_29
	word64 rax_30
	word32 edx_31
	word64 rdx_32
	call Mem0[0x0000000140002058:word64] (retsize: 4; depth: 4)
		uses: eax_12,qwLoc08_4,rax_14,rbx_19,rcx_15,rdx_16,rsp_20,SCZO_18,tLoc28
		defs: C_28,eax_29,ecx_26,edx_31,rax_30,rbx_23,rcx_25,rdx_32,rsp_22,SCZO_24,SZO_27
	return eax_29
// DataOut: eax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001448_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rbx:rbx rcx:<invalid> eax:<invalid> rdx:<invalid> -8(fp):rbx



word32 fn000000014000147C(word64 rcx, word64 qwArg00, word64 qwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rsp
// Stack args: Stack +0000(64)
fn000000014000147C_entry:
// DataOut: rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0038(0) Stack +0000(64)

l000000014000147C:
	branch IsProcessorFeaturePresent(tLoc38) == 0x00000000 l000000014000149A
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0038(64) Stack +0000(64) Stack +0008(64)

l000000014000149A:
	fn0000000140001550(0x00000001400030E0, qwLoc38)
	Mem17[0x00000001400031D8:word64] = qwArg00
	Mem20[0x0000000140003178:word64] = fp + 0x0000000000000008
	Mem22[0x0000000140003050:word64] = Mem20[0x00000001400031D8:word64]
	Mem24[0x0000000140003160:word64] = rcx
	Mem25[0x0000000140003040:word32] = 0xC0000409
	Mem26[0x0000000140003044:word32] = 0x00000001
	Mem27[0x0000000140003058:word32] = 0x00000001
	Mem31[0x0000000140003060:word64] = 0x0000000000000002
	return fn0000000140001448()
// DataOut: eax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:0x0000000000000017 eax:<invalid> 8(fp):rcx

fn000000014000147C_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid> eax:<invalid> rax:0x0000000000000008 rdx:<invalid> r8:<invalid> r9:<invalid> -24(fp):<invalid> -16(fp):<invalid> 8(fp):rcx

l0000000140001493:
	__fastfail(0x00000002)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rcx:0x0000000000000017 eax:<invalid> 8(fp):rcx



void fn0000000140001550(word64 rcx, word64 qwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rbx rdi rsi rsp
fn0000000140001550_entry:
// DataOut: rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0020(64) Local -0058(0)

l0000000140001550:
	RtlCaptureContext(tLoc58)
	word64 rsi_16 = Mem0[rcx + 0x00000000000000F8:word64]
// DataOut: edi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0010(8) Local -0020(64)

l000000014000156A:
	word64 rax_47 = RtlLookupFunctionEntry(rsi_16, fp + 0x0000000000000008, 0x0000000000000000)
	branch rax_47 == 0x0000000000000000 l00000001400015B9
// DataOut: edi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000058 rbx:rcx rsi:<invalid> rdi:<invalid> r8:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> r9:<invalid> -56(fp):rcx -48(fp):fp + 0x0000000000000018 -40(fp):fp + 0x0000000000000010 -32(fp):<invalid> -24(fp):rdi -16(fp):rsi -8(fp):rbx
// LocalsOut: fp(64) Local -0010(8) Local -0020(64)

l0000000140001580:
	word64 rsp_91
	word64 rbx_92
	word64 rdi_94
	byte SCZO_95
	word64 rcx_96
	word32 edi_97
	byte SZO_98
	byte C_99
	word32 r8d_100
	word64 r8_101
	word64 rdx_102
	word64 rax_103
	byte Z_104
	word64 r9_105
	word32 ecx_106
	byte SO_107
	call KERNEL32.dll!RtlVirtualUnwind (retsize: 8; depth: 96)
		uses: C_89,ecx_87,edi_37,qwLoc08_4,qwLoc10_7,qwLoc18_10,qwLoc20_76,qwLoc28_82,qwLoc30_85,qwLoc38_90,r8_83,r8d_36,r9_81,rax_47,rbx_42,rcx_86,rdi_40,rdx_80,rsi_41,rsp_43,SCZO_39,SO_38,SZO_88,tLoc58,Z_49
		defs: C_99,ecx_106,edi_97,r8_101,r8d_100,r9_105,rax_103,rbx_92,rcx_96,rdi_94,rdx_102,rsi_93,rsp_91,SCZO_95,SO_107,SZO_98,Z_104
	branch (word32) (uint64) (edi_97 + 0x00000001) < 0x00000002 l000000014000156A
// DataOut: edi rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000058 rbx:rcx rsi:<invalid> rdi:<invalid> r8:<invalid> rdx:fp + 0x0000000000000008 rcx:<invalid> rax:<invalid> r9:<invalid> -56(fp):rcx -48(fp):fp + 0x0000000000000018 -40(fp):fp + 0x0000000000000010 -32(fp):<invalid> -24(fp):rdi -16(fp):rsi -8(fp):rbx
// LocalsOut: fp(64) Local -0010(8) Local -0020(64)

l00000001400015B9:
	return
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000058 rbx:rcx rsi:<invalid> rdi:<invalid> r8:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> r9:<invalid> -56(fp):rcx -48(fp):fp + 0x0000000000000018 -40(fp):fp + 0x0000000000000010 -32(fp):<invalid> -24(fp):rdi -16(fp):rsi -8(fp):rbx

fn0000000140001550_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbx:rbx rsi:rsi rdi:rdi r8:<invalid> rdx:<invalid> rcx:<invalid> rax:<invalid> r9:<invalid> -56(fp):rcx -48(fp):fp + 0x0000000000000018 -40(fp):fp + 0x0000000000000010 -32(fp):<invalid> -24(fp):rdi -16(fp):rsi -8(fp):rbx



byte fn00000001400015C4(selector gs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gs
// LiveOut: al
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: rsp
fn00000001400015C4_entry:
// DataOut: gs sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400015C4:
	byte al_12
	branch fn0000000140001DC4() == 0x00000000 l00000001400015F2
// DataOut: gs sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400015D1:
	word64 rcx_32 = Mem0[Mem0[gs:0x00000030:word64] + 0x0000000000000008:word64]
// DataOut: rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000001400015E5:
	__lock()
	word64 rax_39
	branch __cmpxchg(Mem0[0x00000001400035B8:word64], rcx_32, 0x0000000000000000, out rax_39) l00000001400015E0
// DataOut: rax rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rcx:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000001400015E0:
	branch rcx_32 == rax_39 l00000001400015F9
// DataOut: rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rcx:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000001400015F9:
	al_12 = 0x01
// DataOut: al sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rcx:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000001400015F2:
	al_12 = 0x00
// DataOut: al sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rcx:<invalid> al:<invalid>
// LocalsOut: fp(64)

l00000001400015F4:
	return al_12
// DataOut: al sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 al:<invalid> rax:<invalid> rcx:<invalid>

fn00000001400015C4_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: rsp:fp al:<invalid> rax:<invalid> rcx:<invalid>



byte fn0000000140001600(word32 ecx, word32 edx, word64 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx r13
// LiveOut: al
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx r10 r10b r10d r10w r11 r11b r11d r11w r8 r8b r8d r8w r9 r9b r9d r9w rax rbx rcx rdx
// Preserved: rbx rsp
fn0000000140001600_entry:
// DataOut: ecx edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001600:
	byte al_16 = (byte) (word32) Mem0[0x00000001400035F0:byte]
	branch ecx != 0x00000000 l0000000140001617
// DataOut: al bl ebx edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001614_1:
	al_16 = 0x01 (alias)
// DataOut: al ebx edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid> rbx:0x0000000000000001 -8(fp):rbx
// LocalsOut: fp(64)

l0000000140001617:
	byte al_33
	Mem18[0x00000001400035F0:byte] = al_16
	byte bl_24 = fn0000000140001BFC(edx, 0x00000001, r13, qwLoc28, qwLoc20, qwLoc18)
	fn0000000140001938()
	branch true l000000014000162F
// DataOut: bl gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid> rbx:0x0000000000000001 -8(fp):rbx
// LocalsOut: fp(64)

l000000014000162F:
	fn0000000140001938()
	branch true l0000000140001641
// DataOut: bl gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid> rbx:0x0000000000000001 al:0x01 rcx:<invalid> rax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l0000000140001641:
	al_33 = bl_24
// DataOut: al gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid> rbx:0x0000000000000001 al:0x01 rcx:<invalid> rax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l0000000140001638:
	fn0000000140001938()
// DataOut: gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid> rbx:0x0000000000000001 al:0x01 rcx:<invalid> rax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l000000014000162B:
	al_33 = 0x00
// DataOut: al gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid> rbx:0x0000000000000001 al:0x01 rcx:<invalid> rax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l0000000140001643:
	return al_33
// DataOut: al gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 eax:<invalid> rbx:0x0000000000000001 al:<invalid> rcx:<invalid> rax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> -8(fp):rbx

fn0000000140001600_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: rsp:fp eax:<invalid> rbx:rbx al:<invalid> rcx:<invalid> rax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> -8(fp):rbx



word32 fn000000014000164C(word32 ecx, word64 r8, word64 r13, word128 xmm1, word64 qwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx r13 r8 xmm1
// LiveOut: al eax rsp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx esp r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rbx rcx rdx rsp sp spl xmm0 xmm1
// Preserved:
fn000000014000164C_entry:
// DataOut: ecx r13 r8 xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0018(128) Local -0028(128)

l000000014000164C:
	word64 rbx_10 = (uint64) ecx
	word32 ebx_11 = (word32) rbx_10
	branch ecx >u 0x00000001 l000000014000170A
// DataOut: ebx r13 r8 rsp xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0018(128) Local -0028(128)

l000000014000170A:
	byte bl_179
	word64 rcx_180 = fn0000000140001974(0x00000005, qwLoc50, qwLoc48, qwLoc40, out bl_179)
	int3()
	int3()
	int3()
	int3()
// DataOut: rcx rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx -8(fp):rbp 8(fp):rbx

l0000000140001717_thunk_fn0000000140001718:
	return (word32) fn0000000140001718(rcx_180)
// DataOut: al eax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx rcx:<invalid> eax:<invalid> rdx:<invalid> r8:0x0000000000000098 rax:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbp 8(fp):rbx

l0000000140001664:
	word32 eax_141
	word32 eax_37 = fn0000000140001DC4()
	branch eax_37 == 0x00000000 l0000000140001698
// DataOut: eax ebx r13 r8 xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64) Local -0018(128) Local -0028(128)

l000000014000166D:
	branch ebx_11 != 0x00000000 l0000000140001698
// DataOut: eax r13 r8 xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx rax:<invalid> al:<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64) Local -0018(128) Local -0028(128)

l0000000140001698:
	word64 rdx_69 = Mem0[0x0000000140003000:word64]
	word32 eax_78 = (word32) (uint64) ((word32) (uint64) (word32) rdx_69 & 0x0000003F)
	word64 r8_86 = __ror(r8 | 0xFFFFFFFFFFFFFFFF, (byte) (uint64) (0x00000040 - eax_78)) ^ rdx_69
	Mem89[r13 - 0x0000000000000020:word64] = r8_86
	Mem91[r13 - 0x0000000000000018:word64] = r8_86
	Mem94[r13 - 0x0000000000000010:word64] = r8_86
	Mem98[0x00000001400035C0:word128] = owLoc28
	Mem99[r13 - 0x0000000000000020:word64] = r8_86
	Mem100[r13 - 0x0000000000000018:word64] = r8_86
	Mem102[r13 - 0x0000000000000010:word64] = r8_86
	Mem103[0x00000001400035D0:real64] = rLoc18
	Mem105[0x00000001400035D8:word128] = owLoc28
	Mem106[0x00000001400035E8:real64] = rLoc18
	eax_141 = DPB(eax_78, 0x01, 0) (alias)
// DataOut: al eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx rax:<invalid> al:<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64)

l0000000140001671:
	word64 rsp_115
	word64 rbx_116
	word64 rbp_117
	byte SCZO_118
	word32 ebx_119
	word32 ecx_120
	byte CZ_121
	word32 eax_122
	byte SZO_123
	byte C_124
	byte Z_125
	word64 rcx_126
	byte al_127
	word64 rdx_128
	word64 r8_129
	word32 edx_130
	word64 rax_131
	byte cl_132
	word64 r13_133
	word128 xmm0_134
	word128 xmm1_135
	byte bl_136
	call initialize_onexit_table (retsize: 8; depth: 80)
		uses: al_40,bl_12,C_109,cl,CZ_14,eax_37,ebx_11,ecx,edx,owLoc28,qwLoc08_6,r13,r8,rax_39,rbp_7,rbx_10,rcx_110,rdx,rLoc18,rsp_8,SCZO_13,SZO_107,xmm0,xmm1,Z_108
		defs: al_127,bl_136,C_124,cl_132,CZ_121,eax_122,ebx_119,ecx_120,edx_130,r13_133,r8_129,rax_131,rbp_117,rbx_116,rcx_126,rdx_128,rsp_115,SCZO_118,SZO_123,xmm0_134,xmm1_135,Z_125
	branch eax_122 == 0x00000000 l0000000140001685
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx rax:<invalid> al:<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64)

l0000000140001685:
	word64 rsp_146
	word64 rbx_147
	word64 rbp_148
	byte SCZO_149
	word32 ebx_150
	word32 ecx_151
	byte CZ_152
	word32 eax_153
	byte SZO_154
	byte C_155
	byte Z_156
	word64 rcx_157
	byte al_158
	word64 rdx_159
	word64 r8_160
	word32 edx_161
	word64 rax_162
	byte cl_163
	word64 r13_164
	word128 xmm0_165
	word128 xmm1_166
	byte bl_167
	call initialize_onexit_table (retsize: 8; depth: 80)
		uses: al_127,bl_136,C_139,cl_132,CZ_121,eax_122,ebx_119,ecx_120,edx_130,owLoc28,qwLoc08_6,r13_133,r8_129,rax_131,rbp_117,rbx_116,rcx_145,rdx_128,rLoc18,rsp_115,SCZO_118,SZO_137,xmm0_134,xmm1_135,Z_138
		defs: al_158,bl_167,C_155,cl_163,CZ_152,eax_153,ebx_150,ecx_151,edx_161,r13_164,r8_160,rax_162,rbp_148,rbx_147,rcx_157,rdx_159,rsp_146,SCZO_149,SZO_154,xmm0_165,xmm1_166,Z_156
	eax_141 = DPB(eax_153, eax_153 == 0x00000000, 0) (alias)
// DataOut: al eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx rcx:<invalid> rax:<invalid> al:<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64)

l0000000140001681:
	eax_141 = DPB(eax_122, 0x00, 0) (alias)
// DataOut: al eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx rcx:<invalid> rax:<invalid> al:<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64)

l00000001400016FF:
	return eax_141
// DataOut: al eax rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000048 rbp:fp - 0x0000000000000008 rbx:(uint64) ecx rdx:<invalid> r8:<invalid> rax:<invalid> rcx:<invalid> al:<invalid> xmm0:<invalid> xmm1:<invalid> -8(fp):rbp 8(fp):rbx

fn000000014000164C_exit:
// DataOut: al eax rsp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rbx:<invalid> rcx:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid> al:<invalid> xmm0:<invalid> xmm1:<invalid> eax:<invalid> r9:<invalid> bl:<invalid> -8(fp):rbp 8(fp):rbx



word64 fn0000000140001718(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut: al eax rax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rsp
fn0000000140001718_entry:
// DataOut: rbx rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001718:
	word64 rax_101
	word64 rax_33 = 0x0000000000005A4D
	branch Mem0[0x0000000140000000:word16] != 0x5A4D l00000001400017A6
// DataOut: r8 rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l000000014000172D:
	rax_33 = (int64) Mem0[0x000000014000003C:word32]
	word64 rcx_51 = rax_33 + 0x0000000140000000
	branch Mem0[rcx_51:word32] != 0x00004550 l00000001400017A6
// DataOut: r8 rbx rcx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx rax:0x0000000000005A4D
// LocalsOut: fp(64)

l0000000140001747:
	rax_33 = 0x000000000000020B
	branch Mem0[rcx_51 + 0x0000000000000018:word16] != 0x020B l00000001400017A6
// DataOut: r8 rbx rcx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx rax:<invalid> rdx:0000000140000000 rcx:<invalid>
// LocalsOut: fp(64)

l00000001400017A6:
	rax_101 = DPB(rax_33, 0x00, 0) (alias)
// DataOut: al eax rax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx rax:<invalid> rdx:0000000140000000 rcx:<invalid>
// LocalsOut: fp(64)

l0000000140001752:
	word64 rax_61 = DPB(0x000000000000020B, (word32) Mem0[rcx_51 + 0x0000000000000014:word16], 0)
	word64 rdx_116 = rcx_51 + 0x0000000000000018 + rax_61
	word64 rax_114 = DPB(rax_61, (word32) Mem0[rcx_51 + 0x0000000000000006:word16], 0)
	word64 r8_59 = rcx - 0x0000000140000000
	word64 r9_69 = rdx_116 + (rax_114 * 0x0000000000000005) * 0x0000000000000008
// DataOut: r8 r9 rbx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx rax:0x000000000000020B rdx:0000000140000000 rcx:<invalid>
// LocalsOut: fp(64)

l000000014000176C:
	branch rdx_116 == r9_69 l000000014000178D
// DataOut: r8 r9 rbx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l000000014000178D:
	rdx_116 = 0x0000000000000000
// DataOut: rbx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l0000000140001775:
	word64 rcx_109 = (uint64) Mem0[rdx_116 + 0x000000000000000C:word32]
	word32 ecx_110 = (word32) rcx_109
	branch r8_59 <u rcx_109 l0000000140001787
// DataOut: ecx r8 r9 rbx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l000000014000177D:
	rax_114 = (uint64) ((word32) (uint64) Mem0[rdx_116 + 0x0000000000000008:word32] + ecx_110)
	branch r8_59 <u rax_114 l000000014000178F
// DataOut: r8 r9 rbx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l000000014000178F:
	branch rdx_116 != 0x0000000000000000 l0000000140001798
// DataOut: rbx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l0000000140001798:
	branch Mem0[rdx_116 + 0x0000000000000024:word32] >= 0x00000000 l00000001400017A2
// DataOut: rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l00000001400017A2:
	rax_101 = DPB(rax_114, 0x01, 0) (alias)
// DataOut: al eax rax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l000000014000179E:
	rax_101 = DPB(rax_114, 0x00, 0) (alias)
// DataOut: al eax rax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l0000000140001794:
	rax_101 = DPB(rax_114, 0x00, 0) (alias)
// DataOut: al eax rax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)

l00000001400017AC:
	return rax_101
// DataOut: al eax rax rbx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:<invalid> rax:<invalid> rdx:<invalid> rcx:<invalid> al:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>

fn0000000140001718_exit:
// DataOut: al eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp r8:<invalid> rax:<invalid> rdx:<invalid> rcx:<invalid> al:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>

l0000000140001787:
	rdx_116 = rdx_116 + 0x0000000000000028
// DataOut: r8 r9 rbx rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000018 r8:rcx - 0x0000000140000000 rax:<invalid> rdx:<invalid> rcx:<invalid> eax:<invalid> r9:<invalid> -24(fp):<invalid>
// LocalsOut: fp(64)



void fn00000001400017B4(byte cl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cl
// LiveOut:
// Trashed: SCZO ah al ax bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: rbx rsp
fn00000001400017B4_entry:
// DataOut: cl sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400017B4:
	branch fn0000000140001DC4() == 0x00000000 l00000001400017D2
// DataOut: bl rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400017C7:
	branch cl != 0x00 l00000001400017D2
// DataOut: rdx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 bl:cl rdx:<invalid> rax:<invalid> al:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l00000001400017CB:
	Mem29[0x00000001400035B8:word64] = 0x0000000000000000
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 bl:cl rdx:<invalid> rax:<invalid> al:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l00000001400017D2:
	return
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 bl:cl rdx:<invalid> rax:<invalid> al:<invalid> -8(fp):rbx

fn00000001400017B4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp bl:<invalid> rdx:<invalid> rbx:rbx rax:<invalid> al:<invalid> -8(fp):rbx



word32 fn00000001400017D8(byte dl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl
// LiveOut: ebx
// Trashed: SCZO al ax bl bx eax ebx rax rbx
// Preserved: cl rbx rsp
fn00000001400017D8_entry:
// DataOut: dl ebx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000001400017D8:
	branch Mem0[0x00000001400035F0:byte] == 0x00 l00000001400017ED
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0008(32)

l00000001400017E9:
	branch dl != 0x00 l00000001400017FB
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 bl:cl -8(fp):rbx
// LocalsOut: fp(64) Local -0008(32)

l00000001400017ED:
	fn0000000140001938()
	fn0000000140001938()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 bl:cl -8(fp):rbx
// LocalsOut: fp(64) Local -0008(32)

l00000001400017FB:
	return (word32) rbx
// DataOut: ebx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 bl:cl cl:cl al:0x01 -8(fp):rbx

fn00000001400017D8_exit:
// DataOut: ebx
// DataOut (flags): 
// SymbolicIn: rsp:fp bl:<invalid> cl:cl al:0x01 rbx:rbx -8(fp):rbx



word64 fn0000000140001804(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax
// LiveOut: rax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: rbx rsp
fn0000000140001804_entry:
// DataOut: eax rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001804:
	word64 rbx_25
	word32 eax_23
	word64 rdx_7 = Mem0[0x0000000140003000:word64]
	word32 edx_8 = (word32) rdx_7
	word32 ecx_12 = (word32) (uint64) edx_8
	byte cl_15 = (byte) (uint64) (ecx_12 & 0x0000003F)
	word64 rdx_17 = __ror(rdx_7 ^ Mem0[0x00000001400035C0:word64], cl_15)
	branch rdx_17 != 0xFFFFFFFFFFFFFFFF l0000000140001833
// DataOut: eax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001833:
	word64 rsp_65
	byte SCZO_67
	word64 rdx_68
	word64 rcx_69
	word32 ecx_70
	word32 edx_71
	byte SZO_72
	byte C_73
	byte cl_74
	byte Z_75
	word64 rax_77
	call register_onexit_function (retsize: 8; depth: 48)
		uses: C,cl_15,eax,ecx_12,edx_8,qwLoc08_4,rax,rbx_10,rcx_64,rdx_63,rsp_5,SCZO_18,SZO,Z_19
		defs: C_73,cl_74,eax_76,ecx_70,edx_71,rax_77,rbx_66,rcx_69,rdx_68,rsp_65,SCZO_67,SZO_72,Z_75
// DataOut: eax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rdx:<invalid> rbx:rcx rcx:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l0000000140001829:
	word64 rsp_50
	byte SCZO_52
	word64 rdx_53
	word64 rcx_54
	word32 ecx_55
	word32 edx_56
	byte SZO_57
	byte C_58
	byte cl_59
	byte Z_60
	word64 rax_62
	call crt_atexit (retsize: 8; depth: 48)
		uses: C,cl_15,eax,ecx_12,edx_8,qwLoc08_4,rax,rbx_10,rcx_45,rdx_17,rsp_5,SCZO_18,SZO,Z_19
		defs: C_58,cl_59,eax_61,ecx_55,edx_56,rax_62,rbx_51,rcx_54,rdx_53,rsp_50,SCZO_52,SZO_57,Z_60
// DataOut: eax rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rdx:<invalid> rbx:rcx rcx:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l0000000140001842:
	word64 rcx_27 = 0x0000000000000000
	branch eax_23 != 0x00000000 l000000014000184A
// DataOut: rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rdx:<invalid> rbx:rcx rcx:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l0000000140001846_1:
	rcx_27 = rbx_25
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rdx:<invalid> rbx:rcx rcx:<invalid> -8(fp):rbx
// LocalsOut: fp(64)

l000000014000184A:
	return rcx_27
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rdx:<invalid> rbx:rcx rcx:<invalid> -8(fp):rbx

fn0000000140001804_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp rdx:<invalid> rbx:rbx rcx:<invalid> rax:<invalid> -8(fp):rbx



void fn0000000140001854(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: rsp
fn0000000140001854_entry:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001854:
	fn0000000140001804(eax)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001854_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> rdx:<invalid> rcx:<invalid>



void fn000000014000186C(word64 qwArg08, word64 qwArg10, word64 qwArg18, word64 qwArg20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: rbp rbx rsp
// Stack args: Stack +0010(64) Stack +0018(64)
fn000000014000186C_entry:
// DataOut: edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0028(0) Stack +0010(64) Stack +0018(64)

l000000014000186C:
	word64 rax_15 = Mem0[0x0000000140003000:word64]
	branch rax_15 != 0x000000002DDFA232 l0000000140001903
// DataOut: edx gs r13 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0028(0) Stack +0010(64) Stack +0018(64)

l0000000140001894:
	GetSystemTimeAsFileTime(tLoc28)
	word64 v14_44 = qwArg10 & 0x0000000000000000 ^ (uint64) GetCurrentThreadId() ^ (uint64) GetCurrentProcessId()
	QueryPerformanceCounter(tLoc28)
	word64 rax_55 = (uint64) dwArg18 << 0x0000000000000020 ^ qwArg18 ^ v14_44 ^ fp + 0x0000000000000008
	rax_15 = rax_55 & 0x00000000FFFFFFFF
	branch (rax_55 & 0x00000000FFFFFFFF) != 0x000000002DDFA232 l00000001400018FC
// DataOut: edx gs r13 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rbx:0x000000002DDFA232 rax:<invalid> -8(fp):rbp 16(fp):<invalid> 32(fp):rbx
// LocalsOut: fp(64)

l00000001400018F8_1:
	rax_15 = 0x000000002DDFA233
// DataOut: edx gs r13 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rbx:0x000000002DDFA232 rax:<invalid> eax:<invalid> rcx:0x000000002DDFA233 -8(fp):rbp 8(fp):<invalid> 16(fp):<invalid> 32(fp):rbx
// LocalsOut: fp(64)

l00000001400018FC:
	Mem64[0x0000000140003000:word64] = rax_15
// DataOut: edx gs r13 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rbx:0x000000002DDFA232 rax:<invalid> eax:<invalid> rcx:0x000000002DDFA233 -8(fp):rbp 8(fp):<invalid> 16(fp):<invalid> 32(fp):rbx
// LocalsOut: fp(64)

l0000000140001903:
	Mem29[0x0000000140003008:word64] = ~rax_15
	return
// DataOut: edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rbx:0x000000002DDFA232 rax:<invalid> eax:<invalid> rcx:0x000000002DDFA233 -8(fp):rbp 8(fp):<invalid> 16(fp):<invalid> 32(fp):rbx

fn000000014000186C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rbx:rbx rax:<invalid> eax:<invalid> rcx:0x000000002DDFA233 -8(fp):rbp 8(fp):<invalid> 16(fp):<invalid> 32(fp):rbx



word32 fn0000000140001918()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: ah al ax eax rax
// Preserved: rsp
fn0000000140001918_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001918:
	return 0x00000001
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001918_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:0x0000000000000001



word32 fn0000000140001920()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: ah al ax eax rax
// Preserved: rsp
fn0000000140001920_entry:
// DataOut: r13 r8 xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001920:
	return 0x00004000
// DataOut: eax r13 r8 xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001920_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:0x0000000000004000



void fn0000000140001928()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ch cl cx ecx rcx
// Preserved: rsp
fn0000000140001928_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001928:
	word64 rsp_4
	word64 rcx_5
	call Mem0[0x0000000140002028:word64] (retsize: 4; depth: 4)
		uses: rcx_2,rsp_1
		defs: rcx_5,rsp_4
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001928_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid>



void fn0000000140001938()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: al ax eax rax
// Preserved: rsp
fn0000000140001938_entry:
// DataOut: bl gs
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001938:
	return
// DataOut: bl gs
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001938_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp al:0x01



void fn000000014000193C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn000000014000193C_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l000000014000193C:
	word64 rax_4 = fn0000000140001130()
	Mem7[rax_4:word64] = Mem0[rax_4:word64] | 0x0000000000000004
	word64 rax_10 = fn00000001400010C0()
	Mem12[rax_10:word64] = Mem7[rax_10:word64] | 0x0000000000000002
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn000000014000193C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



word32 fn0000000140001958()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn0000000140001958_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001958:
	return (word32) (Mem0[0x0000000140003014:word32] == 0x00000000)
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001958_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> al:Test(EQ,Z)



word64 fn0000000140001964()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: ah al ax eax rax
// Preserved: rsp
fn0000000140001964_entry:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001964:
	return 0x0000000140003638
// DataOut: rax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001964_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:0000000140003638



word64 fn000000014000196C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: ah al ax eax rax
// Preserved: rsp
fn000000014000196C_entry:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

l000000014000196C:
	return 0x0000000140003630
// DataOut: rax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn000000014000196C_exit:
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:0000000140003630



word64 fn0000000140001974(word32 ecx, word64 qwArg00, word64 qwArg08, word64 qwArg10, ptr64 & blOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: bl ecx rcx
// Trashed: SCZO ah al ax bl bx ch cl cx dh dl dx eax ebx ecx edx r8 r8b r8d r8w r9 r9b r9d r9w rax rbx rcx rdx
// Preserved: rbp rbx rsp
fn0000000140001974_entry:
// DataOut: bl ecx gs sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -03E0(64) Local -0590(64) Local -05B8(0) Local -05C0(0) Local -05C8(0)

l0000000140001974:
	word32 ebx_11 = (word32) (uint64) ecx
	branch IsProcessorFeaturePresent(tLoc05C8) == 0x00000000 l000000014000199D
// DataOut: ebx gs sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -03E0(64) Local -0590(64) Local -05B8(0) Local -05C0(0) Local -05C8(0) Stack +0008(8)

l000000014000199D:
	Mem23[0x0000000140003610:word32] = Mem0[0x0000000140003610:word32] & 0x00000000
	word32 eax_30 = memset(ptrLoc05C8, dwLoc05C0, tLoc05B8)
	RtlCaptureContext(ptrLoc05C8)
	word64 rax_36 = RtlLookupFunctionEntry(qwLoc03E0, fp + 0x0000000000000010, 0x0000000000000000)
	branch rax_36 == 0x0000000000000000 l0000000140001A1A
// DataOut: gs sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000005C8 rbp:fp - 0x00000000000004C8 rbx:(uint64) ecx rcx:0x0000000000000017 eax:<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64) Local -0590(64) Local -05B8(0) Local -05C0(0) Local -05C8(0) Stack +0008(8)

l00000001400019DE:
	word64 rsp_134
	word64 rbx_135
	word64 rbp_136
	byte SCZO_137
	word32 ebx_138
	word32 ecx_139
	word64 rcx_140
	word32 eax_141
	byte SZO_142
	byte C_143
	byte Z_144
	word32 edx_145
	word64 rdx_146
	word32 r8d_147
	word64 r8_148
	word64 rax_149
	word64 r9_150
	byte bl_151
	call KERNEL32.dll!RtlVirtualUnwind (retsize: 8; depth: 1488)
		uses: bl_12,C_126,dwLoc0574,dwLoc0578,dwLoc05C0,eax_30,ebx_11,ecx_124,edx,ptrLoc05C8,qwLoc03E0,qwLoc0440,qwLoc0568,qwLoc0580,qwLoc0588,qwLoc0590_111,qwLoc0598_117,qwLoc05A0_120,qwLoc05A8_122,qwLoc08_6,r8_118,r8d,r9_116,rax_36,rbp_7,rbx_32,rcx_123,rdx_115,rsp_8,SCZO,SZO_125,tLoc05B8,tLoc05C8,Z_38
		defs: bl_151,C_143,eax_141,ebx_138,ecx_139,edx_145,r8_148,r8d_147,r9_150,rax_149,rbp_136,rbx_135,rcx_140,rdx_146,rsp_134,SCZO_137,SZO_142,Z_144
// DataOut: gs sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000005C8 rbp:fp - 0x00000000000004C8 rbx:<invalid> rcx:<invalid> eax:<invalid> rdx:fp + 0x0000000000000010 r8:<invalid> rax:<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64) Local -05B8(0) Local -05C0(0) Local -05C8(0) Stack +0008(8)

l0000000140001A1A:
	memset(ptrLoc05C8, dwLoc05C0, tLoc05B8)
	word32 eax_72 = IsDebuggerPresent()
	SetUnhandledExceptionFilter(ptrLoc05C8)
	branch UnhandledExceptionFilter(ptrLoc05C8) != 0x00000000 l0000000140001AA8
// DataOut: bl ecx gs rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000005C8 rbp:fp - 0x00000000000004C8 rbx:<invalid> rcx:<invalid> eax:<invalid> rdx:<invalid> r8:<invalid> rax:<invalid> r9:<invalid> -1448(fp):fp - 0x00000000000004D8 -1440(fp):fp + 0x0000000000000020 -1432(fp):fp + 0x0000000000000018 -1424(fp):<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64) Stack +0008(8)

l0000000140001A9E:
	Mem107[0x0000000140003610:word32] = Mem23[0x0000000140003610:word32] & (word32) ((uint64) (0x00000000 - (-(eax_72 == 0x00000001) == 0x00)))
// DataOut: ecx gs rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000005C8 rbp:fp - 0x00000000000004C8 rbx:<invalid> rcx:fp - 0x0000000000000588 eax:<invalid> rdx:<invalid> r8:0x0000000000000098 rax:<invalid> r9:<invalid> bl:Test(EQ,Z) -1448(fp):fp - 0x00000000000004D8 -1440(fp):fp + 0x0000000000000020 -1432(fp):fp + 0x0000000000000018 -1424(fp):<invalid> -1416(fp):fp - 0x0000000000000578 -1408(fp):fp - 0x00000000000004D8 -1400(fp):0x40000015 -1396(fp):0x00000001 -1384(fp):<invalid> -1088(fp):fp + 0x0000000000000008 -992(fp):<invalid> -8(fp):rbp 8(fp):rbx
// LocalsOut: fp(64) Stack +0008(8)

l0000000140001AA8:
	byte bl_96
	*blOut = (byte) rbx
	return fp - 0x0000000000000588
// DataOut: bl ecx gs rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000005C8 rbp:fp - 0x00000000000004C8 rbx:<invalid> rcx:fp - 0x0000000000000588 eax:<invalid> rdx:<invalid> r8:0x0000000000000098 rax:<invalid> r9:<invalid> bl:<invalid> -1448(fp):fp - 0x00000000000004D8 -1440(fp):fp + 0x0000000000000020 -1432(fp):fp + 0x0000000000000018 -1424(fp):<invalid> -1416(fp):fp - 0x0000000000000578 -1408(fp):fp - 0x00000000000004D8 -1400(fp):0x40000015 -1396(fp):0x00000001 -1384(fp):<invalid> -1088(fp):fp + 0x0000000000000008 -992(fp):<invalid> -8(fp):rbp 8(fp):rbx

fn0000000140001974_exit:
// DataOut: bl ecx rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rbx:rbx rcx:fp - 0x0000000000000588 eax:<invalid> rdx:<invalid> r8:0x0000000000000098 rax:<invalid> r9:<invalid> bl:<invalid> -1448(fp):fp - 0x00000000000004D8 -1440(fp):fp + 0x0000000000000020 -1432(fp):fp + 0x0000000000000018 -1424(fp):<invalid> -1416(fp):fp - 0x0000000000000578 -1408(fp):fp - 0x00000000000004D8 -1400(fp):0x40000015 -1396(fp):0x00000001 -1384(fp):<invalid> -1088(fp):fp + 0x0000000000000008 -992(fp):<invalid> -8(fp):rbp 8(fp):rbx

l0000000140001999:
	__fastfail((word32) (uint64) ebx_11)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000005C8 rbp:fp - 0x00000000000004C8 rbx:(uint64) ecx rcx:0x0000000000000017 eax:<invalid> -8(fp):rbp 8(fp):rbx



word32 fn0000000140001ABC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn0000000140001ABC_entry:
// DataOut: r13 r8 rbx xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001ABC:
	return 0x00000000
// DataOut: eax r13 r8 rbx xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001ABC_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



byte fn0000000140001AC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: rsp
fn0000000140001AC0_entry:
// DataOut: ebx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0028(0)

l0000000140001AC0:
	byte al_21
	word64 rax_7 = DPB(rax, GetModuleHandleW(tLoc28), 0)
	branch rax_7 != 0x0000000000000000 l0000000140001AD8
// DataOut: ebx rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001AD8:
	branch Mem0[rax_7:word16] != 0x5A4D l0000000140001AD4
// DataOut: ebx rcx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rcx:rax eax:<invalid>
// LocalsOut: fp(64)

l0000000140001AE2:
	word64 rax_49 = (int64) Mem0[rax_7 + 0x000000000000003C:word32] + rax_7
	branch Mem0[rax_49:word32] != 0x00004550 l0000000140001AD4
// DataOut: ebx rax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rcx:rax eax:0x00005A4D rax:0x0000000000005A4D
// LocalsOut: fp(64)

l0000000140001AF1:
	branch Mem0[rax_49 + 0x0000000000000018:word16] != 0x020B l0000000140001AD4
// DataOut: ebx rax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rcx:rax eax:<invalid> rax:<invalid>
// LocalsOut: fp(64)

l0000000140001AFC:
	branch Mem0[rax_49 + 0x0000000000000084:word32] <=u 0x0000000E l0000000140001AD4
// DataOut: ebx rax sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rcx:0x000000000000020B eax:<invalid> rax:<invalid>
// LocalsOut: fp(64)

l0000000140001B05:
	al_21 = Mem0[rax_49 + 0x00000000000000F8:word32] != 0x00000000
// DataOut: al ebx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rcx:0x000000000000020B eax:<invalid> rax:<invalid>
// LocalsOut: fp(64)

l0000000140001AD4:
	al_21 = 0x00
// DataOut: al ebx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rcx:<invalid> eax:<invalid> rax:<invalid>
// LocalsOut: fp(64)

l0000000140001B0F:
	return al_21
// DataOut: al ebx sil
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rcx:<invalid> eax:<invalid> al:<invalid> rax:<invalid>

fn0000000140001AC0_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid> eax:<invalid> al:<invalid> rax:<invalid>



void fn0000000140001B14()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ch cl cx ecx rcx
// Preserved: rsp
fn0000000140001B14_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001B14:
	word64 rsp_4
	word64 rcx_5
	call Mem0[0x0000000140002068:word64] (retsize: 4; depth: 4)
		uses: rcx_2,rsp_1
		defs: rcx_5,rsp_4
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001B14_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rcx:<invalid>



void fn0000000140001B24(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx esp rax rcx rsp sp spl
// Preserved: rsp
fn0000000140001B24_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001B24:
	word64 rax_5 = Mem0[rcx:word64]
	branch Mem0[rax_5:word32] != 0xE06D7363 l0000000140001B4F
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001B33:
	branch Mem0[rax_5 + 0x0000000000000018:word32] != 0x00000004 l0000000140001B4F
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid>
// LocalsOut: fp(64)

l0000000140001B39:
	word64 rcx_33 = (uint64) Mem0[rax_5 + 0x0000000000000020:word32]
	word32 ecx_34 = (word32) rcx_33
	branch rcx_33 <=u 0xFFFFFFFFE66CFADE l0000000140001B56
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid>
// LocalsOut: fp(64)

l0000000140001B47:
	branch ecx_34 == 0x01994000 l0000000140001B56
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rcx:<invalid> eax:<invalid>
// LocalsOut: fp(64)

l0000000140001B56:
	word64 rsp_38
	byte SCZO_39
	word64 rax_40
	word64 rcx_41
	byte Z_42
	word32 ecx_43
	word32 eax_44
	byte CZ_45
	byte SZO_46
	byte C_47
	call api-ms-win-crt-runtime-l1-1-0.dll!terminate (retsize: 8; depth: 48)
		uses: C,CZ_37,eax_35,ecx_34,rax_5,rcx_33,rsp_2,SCZO_36,SZO,Z_32
		defs: C_47,CZ_45,eax_44,ecx_43,rax_40,rcx_41,rsp_38,SCZO_39,SZO_46,Z_42
	int3()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rcx:<invalid> eax:<invalid>

l0000000140001B5B_thunk_fn0000000140001B5C:
	fn0000000140001B5C(qwLoc28, qwLoc20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rcx:<invalid> eax:<invalid>

l0000000140001B4F:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rax:<invalid> rcx:<invalid> eax:<invalid>

fn0000000140001B24_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rax:<invalid> rcx:<invalid> eax:<invalid>



void fn0000000140001B5C(word64 qwArg08, word64 qwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ch cl cx ecx rcx
// Preserved: rbx rdi rsi rsp
fn0000000140001B5C_entry:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001B5C:
	word64 rbx_11 = 0x0000000140002680
	word64 rsi_12 = 0x0000000140002680
// DataOut: eax rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001B91:
	branch rbx_11 <u rsi_12 l0000000140001B7B
// DataOut: eax rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002680 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001B7B:
	word64 rdi_32 = Mem0[rbx_11:word64]
	branch rdi_32 == 0x0000000000000000 l0000000140001B8D
// DataOut: eax rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002680 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001B83:
	fn0000000140001BF4()
	word64 rsp_47
	word64 rdi_50
	byte SCZO_51
	byte C_52
	byte SZO_53
	byte Z_54
	word64 rcx_55
	call rdi_32 (retsize: 8; depth: 48)
		uses: C_35,qwLoc08_8,rbx_19,rcx_46,rdi_32,rsi_20,rsp_22,SCZO_23,SZO_33,Z_34
		defs: C_52,rbx_48,rcx_55,rdi_50,rsi_49,rsp_47,SCZO_51,SZO_53,Z_54
// DataOut: eax rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002680 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001B8D:
	rbx_11 = rbx_11 + 0x0000000000000008
// DataOut: eax rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002680 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001B96:
	return
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002680 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi

fn0000000140001B5C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbx:rbx rsi:rsi rdi:rdi rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi



void fn0000000140001BA8(word64 qwArg08, word64 qwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ch cl cx ecx rcx
// Preserved: rbx rdi rsi rsp
fn0000000140001BA8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001BA8:
	word64 rbx_11 = 0x0000000140002690
	word64 rsi_12 = 0x0000000140002690
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001BDD:
	branch rbx_11 <u rsi_12 l0000000140001BC7
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002690 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001BC7:
	word64 rdi_32 = Mem0[rbx_11:word64]
	branch rdi_32 == 0x0000000000000000 l0000000140001BD9
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002690 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001BCF:
	fn0000000140001BF4()
	word64 rsp_47
	word64 rdi_50
	byte SCZO_51
	byte C_52
	byte SZO_53
	byte Z_54
	word64 rcx_55
	call rdi_32 (retsize: 8; depth: 48)
		uses: C_35,qwLoc08_8,rbx_19,rcx_46,rdi_32,rsi_20,rsp_22,SCZO_23,SZO_33,Z_34
		defs: C_52,rbx_48,rcx_55,rdi_50,rsi_49,rsp_47,SCZO_51,SZO_53,Z_54
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002690 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001BD9:
	rbx_11 = rbx_11 + 0x0000000000000008
// DataOut: rbx rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002690 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi
// LocalsOut: fp(64)

l0000000140001BE2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbx:<invalid> rsi:0000000140002690 rdi:<invalid> rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi

fn0000000140001BA8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbx:rbx rsi:rsi rdi:rdi rcx:<invalid> -8(fp):rdi 8(fp):rbx 16(fp):rsi



void fn0000000140001BF4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn0000000140001BF4_entry:
// DataOut: eax rbx rsi sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001BF4:
	word64 rsp_3
	call Mem0[0x0000000140002190:word64] (retsize: 4; depth: 4)
		uses: rsp_1
		defs: rsp_3
	return
// DataOut: eax rbx rsi sil
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001BF4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



byte fn0000000140001BFC(word32 edx, word32 ebx, word64 r13, word64 qwArg08, word64 qwArg10, word64 qwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edx r13
// LiveOut: bl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx r10 r10b r10d r10w r11 r11b r11d r11w r8 r8b r8d r8w r9 r9b r9d r9w rax rbx rcx rdx
// Preserved: rbp rbx rdi rsp
fn0000000140001BFC_entry:
// DataOut: bl ebx edx gs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0020(32)

l0000000140001BFC:
	Mem19[0x000000014000301C:word32] = 0x00000002
	word32 eax_20
	word32 ebx_21
	word32 ecx_22
	word32 edx_23
	__cpuid(0x00000000, 0x00000000, &eax_20, &ebx_21, &ecx_22, &edx_23)
	Mem26[0x0000000140003018:word32] = 0x00000001
	word32 r8d_100 = (word32) (uint64) Mem26[0x0000000140003614:word32]
	word32 eax_65
	word32 ebx_66
	word32 ecx_67
	word32 edx_68
	__cpuid(0x00000001, 0x00000000, &eax_65, &ebx_66, &ecx_67, &edx_68)
	word32 r9d_71 = (word32) (uint64) ecx_67
	Mem72[r13 - 0x0000000000000008:word32] = r9d_71
	word32 r11d_52 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) ((word32) (uint64) ebx_21 ^ 0x68747541) | (word32) ((uint64) ((word32) ((uint64) edx_23) ^ 0x69746E65))) | (word32) ((uint64) (ecx_22 ^ 0x444D4163)))
	word32 edi_58 = (word32) (uint64) eax_20
	word32 ecx_75 = (word32) (uint64) eax_65
	branch (word32) (uint64) ((word32) (uint64) ((word32) (uint64) ((word32) (uint64) edx_23 ^ 0x49656E69) | (word32) ((uint64) ((word32) ((uint64) ecx_22) ^ 0x6C65746E))) | (word32) ((uint64) ((word32) ((uint64) ebx_21) ^ 0x756E6547))) != 0x00000000 l0000000140001CE9
// DataOut: eax ebx ecx edi edx gs r11d r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001C97:
	Mem205[0x0000000140003020:word64] = Mem72[0x0000000140003020:word64] | 0xFFFFFFFFFFFFFFFF
	r8d_100 = (word32) (uint64) (r8d_100 | 0x00000004) (alias)
	Mem213[0x0000000140003614:word32] = r8d_100
	word32 eax_210 = (word32) (uint64) (eax_65 & 0x0FFF3FF0)
	branch eax_210 == 0x000106C0 l0000000140001CDE
// DataOut: eax ebx ecx edi edx gs r11d r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001CB6:
	branch eax_210 == 0x00020660 l0000000140001CDE
// DataOut: eax ebx ecx edi edx gs r11d r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001CBD:
	branch eax_210 == 0x00020670 l0000000140001CDE
// DataOut: eax ebx ecx edi edx gs r11d r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001CC4:
	word64 rax_235 = (uint64) (eax_210 + 0xFFFCF9B0)
	branch (word32) rax_235 >u 0x00000020 l0000000140001CE9
// DataOut: ebx ecx edi edx gs r11d r13 r8d r9d rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001CCE:
	branch __bt(0x0000000000010001, rax_235) l0000000140001CE9
// DataOut: ebx ecx edi edx gs r11d r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001CDE:
	r8d_100 = (word32) (uint64) (r8d_100 | 0x00000001) (alias)
	Mem230[0x0000000140003614:word32] = r8d_100
// DataOut: ebx ecx edi edx gs r11d r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:0x0000000000010001 -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001CE9:
	branch r11d_52 != 0x00000000 l0000000140001D07
// DataOut: ebx ecx edi edx gs r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:0x0000000000010001 -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001CEE:
	branch (word32) (uint64) (ecx_75 & 0x0FF00F00) <u 0x00600F00 l0000000140001D07
// DataOut: ebx edi edx gs r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:0x0000000000010001 -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001CFC:
	r8d_100 = (word32) (uint64) (r8d_100 | 0x00000004) (alias)
	Mem203[0x0000000140003614:word32] = r8d_100
// DataOut: ebx edi edx gs r13 r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:0x0000000000010001 -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001D07:
	Mem109[r13 - 0x000000000000001C:word32] = r9d_71
	branch edi_58 < 0x00000007 l0000000140001D3B
// DataOut: eax ebx edx gs r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:0x0000000000010001 -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001D17:
	word32 eax_180
	word32 ebx_181
	word32 ecx_182
	word32 edx_183
	__cpuid(0x00000007, 0x00000000, &eax_180, &ebx_181, &ecx_182, &edx_183)
	branch __bt(ebx_181, 0x09) l0000000140001D3B
// DataOut: gs r8d r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:0x0000000000000007 eax:0x00000007 ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:0x0000000000010001 -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001D30:
	Mem194[0x0000000140003614:word32] = (word32) (uint64) (r8d_100 | 0x00000002)
// DataOut: gs r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001D3B:
	branch __bt(r9d_71, 0x14) l0000000140001DB0
// DataOut: gs r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001D42:
	Mem143[0x0000000140003018:word32] = 0x00000002
	Mem144[0x000000014000301C:word32] = 0x00000006
	branch __bt(r9d_71, 0x1B) l0000000140001DB0
// DataOut: gs r9d
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001D5D:
	branch __bt(r9d_71, 0x1C) l0000000140001DB0
// DataOut: gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001D64:
	word64 edx_eax_148 = __xgetbv(0x00000000)
	branch ((byte) (edx_eax_148 << 0x0000000000000020 | edx_eax_148) & 0x06) != 0x06 l0000000140001DB0
// DataOut: gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> rbx:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Local -0020(0) Stack +0010(8)

l0000000140001D7E:
	word32 eax_162 = (word32) (uint64) ((word32) (uint64) Mem144[0x000000014000301C:word32] | 0x00000008)
	Mem165[0x0000000140003018:word32] = 0x00000003
	Mem170[0x000000014000301C:word32] = eax_162
	branch (bLoc20 & 0x20) == 0x00 l0000000140001DB0
// DataOut: eax gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> Sequence edx:eax:<invalid> al:al & 0x06 rbx:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 8(fp):<invalid> 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Stack +0010(8)

l0000000140001D9D:
	Mem175[0x0000000140003018:word32] = 0x00000005
	Mem176[0x000000014000301C:word32] = (word32) (uint64) (eax_162 | 0x00000020)
// DataOut: gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> Sequence edx:eax:<invalid> al:<invalid> rbx:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 8(fp):<invalid> 16(fp):rbx 24(fp):rdi
// LocalsOut: fp(64) Stack +0010(8)

l0000000140001DB0:
	return (byte) rbx
// DataOut: bl gs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000028 rbp:fp - 0x0000000000000008 rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:<invalid> Sequence edx:eax:<invalid> al:<invalid> rbx:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 8(fp):<invalid> 16(fp):rbx 24(fp):rdi

fn0000000140001BFC_exit:
// DataOut: bl
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rcx:<invalid> rax:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> r8:<invalid> r9:<invalid> r10:<invalid> r11:<invalid> rdx:<invalid> rdi:rdi rbx:rbx Sequence edx:eax:<invalid> al:<invalid> -40(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):rbp 8(fp):<invalid> 16(fp):rbx 24(fp):rdi



word32 fn0000000140001DC4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn0000000140001DC4_entry:
// DataOut: bl ebx gs r13 r8 sil xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001DC4:
	return (word32) (Mem0[0x0000000140003030:word32] != 0x00000000)
// DataOut: bl eax ebx gs r13 r8 sil xmm1
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001DC4_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid> al:Test(NE,Z)



void fn0000000140001DD0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn0000000140001DD0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001DD0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001DD0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000140001E7C(word64 rax, word64 rdx, word64 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r9 rax rdx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esp r10 r10b r10d r10w r11 r11b r11d r11w r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx rsp sp spl
// Preserved:
fn0000000140001E7C_entry:
// DataOut: r9 rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001E7C:
	fn0000000140001E9C(rax, rdx, r9, Mem0[r9 + 0x0000000000000038:word64])
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001E7C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 r8:<invalid> rcx:<invalid> rdx:<invalid> rax:0x0000000000000001 r11:<invalid> r9:<invalid> r10:<invalid> eax:0x00000001



void fn0000000140001E9C(word64 rax, word64 rcx, word64 rdx, word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8 rax rcx rdx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx r10 r10b r10d r10w r11 r11b r11d r11w r8 r8b r8d r8w r9 r9b r9d r9w rax rcx rdx
// Preserved: rbx rsp
fn0000000140001E9C_entry:
// DataOut: r8 rax rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001E9C:
	word32 r11d_12 = (word32) (uint64) ((word32) (uint64) Mem0[r8:word32] & 0xFFFFFFF8)
	word64 r9_14 = rcx
	word64 r10_19 = rcx
	branch (Mem0[rax:byte] & 0x04) == 0x00 l0000000140001EC7
// DataOut: r10 r11d r8 r9 rax rbx rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001EB4:
	r10_19 = (int64) Mem0[r8 + 0x0000000000000004:word32] + rcx & (int64) ((word32) ((uint64) (-((word32) ((uint64) Mem0[rax + 0x0000000000000008:word32])))))
// DataOut: r10 r11d r9 rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 r11:<invalid> rbx:rdx r9:rcx r10:rcx -8(fp):rbx

l0000000140001EC7:
	word64 rdx_24 = Mem0[(int64) r11d_12 + r10_19:word64]
	word64 rcx_27 = (uint64) Mem0[Mem0[rdx + 0x0000000000000010:word64] + 0x0000000000000008:word32] + Mem0[rdx + 0x0000000000000008:word64]
	branch (Mem0[rcx_27 + 0x0000000000000003:byte] & 0x0F) == 0x00 l0000000140001EE9
// DataOut: r9 rcx rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 r11:<invalid> rbx:rdx r9:rcx r10:<invalid> rax:<invalid> rcx:(int64) eax -8(fp):rbx

l0000000140001EDF:
	r9_14 = rcx + (uint64) ((word32) Mem0[rcx_27 + 0x0000000000000003:byte] & 0xFFFFFFF0)
// DataOut: r9 rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 r11:<invalid> rbx:rdx r9:rcx r10:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> -8(fp):rbx

l0000000140001EE9:
	word64 r9_37 = r9_14 ^ rdx_24
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 r11:<invalid> rbx:rdx r9:<invalid> r10:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> -8(fp):rbx

l0000000140001EF0_thunk_fn00000001400011B0:
	fn00000001400011B0(r9_37)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp r11:<invalid> rbx:rbx r9:<invalid> r10:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> -8(fp):rbx

fn0000000140001E9C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp r11:<invalid> rbx:rbx r9:<invalid> r10:<invalid> rax:<invalid> rcx:<invalid> rdx:<invalid> eax:<invalid> r8:<invalid> -8(fp):rbx



void fn0000000140001F10()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn0000000140001F10_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000140001F10:
	word64 rsp_3
	word64 rax_4
	call rax (retsize: 4; depth: 4)
		uses: rax,rsp_1
		defs: rax_4,rsp_3
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001F10_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000140001F12(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: rbp rsp
fn0000000140001F12_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001F12:
	word64 rsp_14
	word64 rbp_15
	byte SCZO_16
	word64 rdx_17
	word64 rax_18
	word64 rcx_19
	word32 ecx_20
	call seh_filter_exe (retsize: 8; depth: 48)
		uses: qwLoc08_4,rax_11,rbp_8,rcx_13,rdx_12,rsp_5,SCZO_6
		defs: ecx_20,rax_18,rbp_15,rcx_19,rdx_17,rsp_14,SCZO_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001F12_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp rax:<invalid> rdx:<invalid> rcx:<invalid> -8(fp):rbp



void fn0000000140001F30(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: rbp rsp
fn0000000140001F30_entry:
// DataOut: rcx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000140001F30:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000140001F30_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:(uint64) ecx rcx:<invalid> cl:Test(EQ,Z) rbp:rbp -8(fp):rbp



