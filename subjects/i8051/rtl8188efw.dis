void fn0000(byte R1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  R1
// LiveOut:
// Trashed: CAOP A DPH DPL R1 R7
// Preserved: SP
fn0000_entry:
// DataOut: R1
// DataOut (flags): 
// SymbolicIn: SP:fp

l0000:
// DataOut: R1
// DataOut (flags): 
// SymbolicIn: SP:fp

l0788:
// DataOut: R1
// DataOut (flags): 
// SymbolicIn: SP:fp

l077A:
	Mem6[0x001D:byte] = 0x00
// DataOut: A
// DataOut (flags): 
// SymbolicIn: SP:fp

l0791:
	byte SP_14
	byte R1_15
	bool P_16
	byte A_17
	byte R7_18
	byte CAOP_19
	call fn4EF3 (retsize: 2; depth: 2)
		uses: A_12,CAOP_13,P_5,R1_3,R7_9,SP_1
		defs: A_17,CAOP_19,P_16,R1_15,R7_18,SP_14
	Mem22[0x0157:byte] = 0x05
	byte A_24 = Mem22[0x80EA:byte]
	branch (A_24 >>u 0x02 & 0x01) != 0x00 l07AA
// DataOut:
// DataOut (flags): 
// SymbolicIn: SP:fp R1:R1 + 0x01 A:<invalid> Sequence DPH:DPL:0x80F0

l07A7:
	byte SP_31
	byte R1_32
	bool P_33
	byte A_34
	byte R7_35
	byte CAOP_36
	call fn4AC0 (retsize: 2; depth: 2)
		uses: A_24,CAOP_19,P_16,R1_15,R7_18,SP_14
		defs: A_34,CAOP_36,P_33,R1_32,R7_35,SP_31
// DataOut:
// DataOut (flags): 
// SymbolicIn: SP:fp R1:R1 + 0x01 A:<invalid> Sequence DPH:DPL:0x80EA R7:<invalid>

l07AA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: SP:fp R1:R1 + 0x01 A:<invalid> Sequence DPH:DPL:0x80EA R7:<invalid>

fn0000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: SP:fp R1:R1 + 0x01 A:<invalid> Sequence DPH:DPL:0x80EA R7:<invalid>



