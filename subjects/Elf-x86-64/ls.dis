// _init
// Return size: 8
void _init()
_init_entry:
	// succ:  l0000000000402168
l0000000000402168:
	rsp = fp
	rsp = rsp - 0x0000000000000008
	SCZO = cond(rsp)
	rax = Mem0[0x0000000000619FF8:word64]
	SZO = cond(rax & rax)
	C = false
	branch Test(EQ,Z) l000000000040217D
	// succ:  l0000000000402178 l000000000040217D
l0000000000402178:
	call __gmon_start__ (retsize: 8;)
	// succ:  l000000000040217D
l000000000040217D:
	rsp = rsp + 0x0000000000000008
	SCZO = cond(rsp)
	return
	// succ:  _init_exit
_init_exit:


// fn0000000000404890
// Return size: 0
void fn0000000000404890()
fn0000000000404890_entry:
	// succ:  l0000000000404890
l0000000000404890:
	rsp = fp
	ebp = ebp ^ ebp
	SZO = cond(ebp)
	C = false
	r9 = rdx
	rsi = Mem0[rsp:word64]
	rsp = rsp + 0x0000000000000008
	rdx = rsp
	__align(rsp)
	rsp = rsp - 0x0000000000000004
	Mem0[rsp:word32] = rax
	rsp = rsp - 0x0000000000000004
	Mem0[rsp:word32] = rsp
	r8 = 0x0000000000411ED0
	rcx = 0x0000000000411E60
	rdi = 0x00000000004028C0
	rax = DPB(rax, __libc_start_main(rdi, rsi, rdx, rcx, r8, r9, Mem0[rsp:(ptr void)]), 0)
	__hlt()
fn0000000000404890_exit:


// _fini
// Return size: 8
void _fini()
_fini_entry:
	// succ:  l0000000000411EFC
l0000000000411EFC:
	rsp = fp
	rsp = rsp - 0x0000000000000008
	SCZO = cond(rsp)
	rsp = rsp + 0x0000000000000008
	SCZO = cond(rsp)
	return
	// succ:  _fini_exit
_fini_exit:


