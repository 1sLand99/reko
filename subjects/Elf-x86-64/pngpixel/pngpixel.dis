void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
fn0000000000400AE8_entry:
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400AE8:
	branch Mem0[0x0000000000601FF8:word64] == 0x0000000000000000 l0000000000400AFD
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400AF8:
	fn0000000000400CC0()
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>
// LocalsOut: fp(64)

l0000000000400AFD:
	return
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>

fn0000000000400AE8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void fn0000000000400B30()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400B30_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400B30_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400B40()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400B40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400B40_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400B50()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400B50_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400B50_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400B60()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400B60_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400B60_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400B70()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400B70_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400B70_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400B80()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400B80_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400B80_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400B90()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400B90_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400B90_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400BA0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400BA0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400BA0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400BB0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400BB0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400BB0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400BC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400BC0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400BC0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400BD0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400BD0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400BD0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400BE0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400BE0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400BE0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400BF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400BF0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400BF0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C00()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C00_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C00_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C10()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C10_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C10_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C20()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C20_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C20_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C30()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C30_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C30_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C40()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C40_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C50()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C50_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C50_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C60()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C60_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C60_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C70()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C70_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C70_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C80()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C80_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C80_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400C90()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400C90_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400C90_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400CA0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400CA0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400CA0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400CB0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000400CB0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000000000400CB0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void fn0000000000400CC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn0000000000400CC0_entry:
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400CC0:
	word64 rsp_3
	call Mem0[0x0000000000601FF8:word32] (retsize: 4; depth: 4)
		uses: rsp_1
		defs: rsp_3
	return
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn0000000000400CC0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void _start(word64 rax, word64 rdx, word64 qwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax rdx
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(64)
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_start_entry:
// DataOut: rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000400CD0:
	__align(fp + 0x0000000000000008)
	word64 rax_21 = DPB(rax, __libc_start_main(0x00000000004012F9, qwArg00, fp + 0x0000000000000008, 0x0000000000401780, 0x00000000004017F0, rdx, DPB(qwArg00, fp + 0x0000000000000004, 0)), 0)
	__hlt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



word64 deregister_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut: rsp
// Trashed: SCZO ah al ax di dil eax edi esp r8 r8b r8d r8w rax rdi rsp sp spl
// Preserved: rbp
fn0000000000400D00_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D00:
	branch DPB(rax, 0x006020FF, 0) <=u 0x000000000000000E l0000000000400D30
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D15:
	word64 rax_37 = DPB(rax, 0x00000000, 0)
	branch rax_37 == 0x0000000000000000 l0000000000400D30
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:0x006020FF r8:r8 - 6299896 rbp:fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400D30:
	return fp + 0x0000000000000004
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:<invalid> r8:r8 - 6299896 rbp:fp - 0x0000000000000004 -4(fp):rbp

l0000000000400D1F:
	word64 rsp_44
	word32 eax_45
	word64 rbp_46
	word64 r8_47
	byte SCZO_48
	word64 rax_49
	byte CZ_50
	byte SZO_51
	byte C_52
	byte Z_53
	word32 edi_54
	call 0x00000000 (retsize: 4;)
		uses: C_40,CZ_11,dwLoc04_7,eax_36,edi_43,qwLoc04,r8_9,rax_37,rbp_41,rsp_42,SCZO_10,SZO_38,Z_39
		defs: C_52,CZ_50,eax_45,edi_54,r8_47,rax_49,rbp_46,rsp_44,SCZO_48,SZO_51,Z_53
	return rsp_44
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 eax:0x00000000 r8:r8 - 6299896 rbp:fp - 0x0000000000000004 -4(fp):rbp

fn0000000000400D00_exit:
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 eax:<invalid> r8:<invalid> rbp:rbp edi:<invalid> -4(fp):rbp



void register_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi esp rax rdi rsi rsp si sil sp spl
// Preserved: rbp
fn0000000000400D40_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D40:
	word64 rsi_9 = DPB(rsi, 0x006020F8, 0) - 6299896 >> 0x0000000000000003
	branch rsi_9 + (rsi_9 >>u 0x000000000000003F) >> 0x0000000000000001 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> edi:<invalid> eax:<invalid> esi:<invalid> rsi:<invalid> rax:<invalid>
// LocalsOut: fp(64)

l0000000000400D63:
	word64 rax_41 = DPB(rsi_9 >>u 0x000000000000003F, 0x00000000, 0)
	branch rax_41 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 esi:<invalid> rsi:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> edi:<invalid> eax:<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400D78:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 esi:<invalid> rsi:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> edi:<invalid> -4(fp):rbp

l0000000000400D6D:
	word64 rsp_48
	word32 esi_49
	word64 rbp_50
	word64 rsi_51
	byte SCZO_52
	word64 rax_53
	byte Z_54
	word32 eax_55
	byte SZO_56
	byte C_57
	word32 edi_58
	call 0x00000000 (retsize: 4;)
		uses: C_44,dwLoc04_7,eax_40,edi_47,esi_2,qwLoc04,rax_41,rbp_45,rsi_14,rsp_46,SCZO_15,SZO_42,Z_43
		defs: C_57,eax_55,edi_58,esi_49,rax_53,rbp_50,rsi_51,rsp_48,SCZO_52,SZO_56,Z_54
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 esi:<invalid> rsi:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:0x00000000 edi:<invalid> -4(fp):rbp

fn0000000000400D40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 esi:<invalid> rsi:<invalid> rbp:rbp rax:<invalid> eax:<invalid> edi:<invalid> -4(fp):rbp



void __do_global_dtors_aux(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi esp r8 r8b r8d r8w rax rbp rdi rsp sp spl
// Preserved: rbp
fn0000000000400D80_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D80:
	branch Mem0[0x0000000000602108:byte] != 0x00 l0000000000400D9A
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400D89:
	deregister_tm_clones(r8)
	Mem17[0x0000000000602108:byte] = 0x01
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l0000000000400D9A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> r8:<invalid> edi:<invalid> -4(fp):rbp

fn0000000000400D80_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> eax:<invalid> r8:<invalid> edi:<invalid> -4(fp):rbp



void frame_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esi esp rax rdi rsi rsp si sil sp spl
// Preserved: rbp rsp
fn0000000000400DA0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400DA0:
	rsp = fp
	edi = 0x00601E10
	rdi = DPB(rdi, edi, 0) (alias)
	SCZO = cond(Mem0[rdi:word64] - 0x0000000000000000)
	Z = SCZO (alias)
	branch Test(NE,Z) l0000000000400DB0
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400DB0:
	eax = 0x00000000
	rax = DPB(rax, eax, 0) (alias)
	SZO = cond(rax & rax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0000000000400DAB
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp edi:0x00601E10
// LocalsOut: fp(64)

l0000000000400DBA:
	rsp = fp - 0x0000000000000004
	dwLoc04 = rbp
	qwLoc04 = DPB(qwLoc04, dwLoc04, 0) (alias)
	rbp = fp - 0x0000000000000004
	call 0x00000000 (retsize: 4; depth: 8)
	rbp = qwLoc04
	rsp = fp + 0x0000000000000004
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp edi:0x00601E10 eax:0x00000000

l0000000000400DC0_thunk_register_tm_clones:
	register_tm_clones()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 edi:<invalid> eax:<invalid> rbp:rbp -4(fp):rbp

l0000000000400DAB:
	register_tm_clones()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp edi:0x00601E10 eax:0x00000000

fn0000000000400DA0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> edi:<invalid> eax:<invalid> esi:<invalid> rsi:<invalid> rax:<invalid> rbp:rbp -4(fp):rbp

l0000000000400D40:
	word64 rsi_9 = DPB(rsi, 0x006020F8, 0) - 6299896 >> 0x0000000000000003
	branch rsi_9 + (rsi_9 >>u 0x000000000000003F) >> 0x0000000000000001 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> edi:<invalid> eax:<invalid> esi:<invalid> rsi:<invalid> rax:<invalid>
// LocalsOut: fp(64)

l0000000000400D63:
	word64 rax_41 = DPB(rsi_9 >>u 0x000000000000003F, 0x00000000, 0)
	branch rax_41 == 0x0000000000000000 l0000000000400D78
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 esi:<invalid> rsi:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> edi:<invalid> eax:<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400D78:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 esi:<invalid> rsi:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> edi:<invalid> -4(fp):rbp

l0000000000400D6D:
	word64 rsp_48
	word32 esi_49
	word64 rbp_50
	word64 rsi_51
	byte SCZO_52
	word64 rax_53
	byte Z_54
	word32 eax_55
	byte SZO_56
	byte C_57
	word32 edi_58
	call 0x00000000 (retsize: 4;)
		uses: C_44,dwLoc04_7,eax_40,edi_47,esi_2,qwLoc04,rax_41,rbp_45,rsi_14,rsp_46,SCZO_15,SZO_42,Z_43
		defs: C_57,eax_55,edi_58,esi_49,rax_53,rbp_50,rsi_51,rsp_48,SCZO_52,SZO_56,Z_54
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 esi:<invalid> rsi:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:0x00000000 edi:<invalid> -4(fp):rbp

fn0000000000400D40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 esi:<invalid> rsi:<invalid> rbp:rbp rax:<invalid> eax:<invalid> edi:<invalid> -4(fp):rbp



void component(word32 ecx, word32 edx, word32 esi, word32 edi, word32 r8d, word64 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edi edx esi r13 r8d
// LiveOut:
// Trashed: SCZO ah al ax bp bpl dh dl dx eax ebp edx esp rax rbp rdx rsp sp spl
// Preserved:
fn0000000000400DC6_entry:
// DataOut: ecx edi edx esi r13 r8d
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -002C(0) Local -0034(0)

l0000000000400DC6:
	Mem16[r13 - 0x0000000000000028:word32] = r8d
	word64 rax_41 = DPB(DPB(rax, (esi >>u 0x00000006) *s dwLoc2C *s ecx, 0) << 0x0000000000000003, (edx + (esi & 0x0000003F) *s dwLoc2C) *s ecx >>u 0x00000003, 0)
	branch ecx >u 0x00000010 l0000000000400EC1
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: Local -0028(32) Local -0034(0)

l0000000000400EC1:
	word64 rax_69 = Mem16[0x0000000000602100:word64]
	word64 rax_78 = DPB(rax_69, fprintf(rax_69, DPB(rsi, 0x00401808, 0), tLoc34), 0)
	exit(DPB(rax_69, 0x00000001, 0))
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbp:fp - 0x0000000000000004 eax:<invalid> edx:<invalid> rax:<invalid> -40(fp):ecx -36(fp):edx -32(fp):esi -28(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):rbp

l0000000000400E2D:
	word64 rax_51 = Mem16[DPB(rax_41, ecx, 0) * 0x0000000000000008 + 0x00401828:word64]
	word32 eax_52 = (word32) rax_51
	word64 rsp_53
	word64 rbp_54
	byte SCZO_55
	word64 rdi_56
	word32 esi_57
	word32 edx_58
	word32 ecx_59
	word64 r13_60
	word32 r8d_61
	word32 eax_62
	byte SZO_63
	byte C_64
	word64 rax_65
	byte CZ_66
	word64 rsi_67
	word32 edi_68
	call eax_52 (retsize: 4; depth: 56)
		uses: CZ_48,dwLoc04_4,dwLoc08_45,dwLoc0C_23,dwLoc20_10,dwLoc24_12,dwLoc28_14,dwLoc2C,eax_52,ecx,edx_27,esi,qwLoc1C_43,r13,r8d,rax_51,rbp_5,rdi,rsp_6,SCZO_47,SZO_46
		defs: C_64,CZ_66,eax_62,ecx_59,edi_68,edx_58,esi_57,r13_60,r8d_61,rax_65,rbp_54,rdi_56,rsi_67,rsp_53,SCZO_55,SZO_63
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbp:fp - 0x0000000000000004 eax:<invalid> edx:<invalid> rax:<invalid> -40(fp):ecx -36(fp):edx -32(fp):esi -28(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):rbp

fn0000000000400DC6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000034 rbp:fp - 0x0000000000000004 eax:<invalid> edx:<invalid> rax:<invalid> -40(fp):ecx -36(fp):edx -32(fp):esi -28(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):rbp



word64 print_pixel(byte dil, selector fs, word64 qwArg04, word64 qwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dil fs
// LiveOut: rbp
// Trashed: SCZO ah al ax bp bpl dh di dil dl dx eax ebp edi edx esi esp rax rbp rdi rdx rsi rsp si sil sp spl
// Preserved: rbx
// Stack args: Stack +000C(64)
fn0000000000400EE9_entry:
// DataOut: dil fs
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +000C(64)

l0000000000400EE9:
	word64 rsp_35
	word64 rbp_36
	word64 rbx_37
	byte SCZO_38
	word64 rdi_39
	word64 rsi_40
	word64 rdx_41
	word32 ecx_42
	word64 rax_43
	selector fs_44
	word32 eax_45
	byte SZO_46
	byte C_47
	byte al_48
	byte CZ_49
	word32 esi_50
	byte Z_51
	byte dil_52
	call png_get_bit_depth (retsize: 8; depth: 112)
		uses: al_32,C_29,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc70_22,eax_27,ecx,fs,qwLoc2C_26,qwLoc5C_16,qwLoc64_18,qwLoc6C_20,rax_31,rbp_5,rbx,rdi_34,rdx_30,rsi_33,rsp_14,SZO_28
		defs: al_48,C_47,CZ_49,dil_52,eax_45,ecx_42,esi_50,fs_44,rax_43,rbp_36,rbx_37,rdi_39,rdx_41,rsi_40,rsp_35,SCZO_38,SZO_46,Z_51
	word64 rsp_60
	word64 rbp_61
	word64 rbx_62
	byte SCZO_63
	word64 rdi_64
	word64 rsi_65
	word64 rdx_66
	word32 ecx_67
	word64 rax_68
	selector fs_69
	word32 eax_70
	byte SZO_71
	byte C_72
	byte al_73
	byte CZ_74
	word32 esi_75
	byte Z_76
	byte dil_77
	call png_get_color_type (retsize: 8; depth: 112)
		uses: al_57,C_47,CZ_49,dil_52,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc44_54,dwLoc70_22,eax_53,ecx_42,esi_50,fs_44,qwLoc2C_26,qwLoc5C_16,qwLoc64_18,qwLoc6C_20,rax_56,rbp_36,rbx_37,rdi_59,rdx_55,rsi_58,rsp_35,SCZO_38,SZO_46,Z_51
		defs: al_73,C_72,CZ_74,dil_77,eax_70,ecx_67,esi_75,fs_69,rax_68,rbp_61,rbx_62,rdi_64,rdx_66,rsi_65,rsp_60,SCZO_63,SZO_71,Z_76
	word64 rax_25 = Mem0[fs:0x00000028:word64]
	word32 eax_78 = (word32) al_73
	branch eax_78 >u 0x00000006 l00000000004012C9
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -002C(64) Stack +000C(64)

l00000000004012C9:
	word64 rsp_126
	word64 rbp_127
	word64 rbx_128
	byte SCZO_129
	word64 rdi_130
	word64 rsi_131
	word64 rdx_132
	word32 ecx_133
	word64 rax_134
	selector fs_135
	word32 eax_136
	byte SZO_137
	byte C_138
	byte al_139
	byte CZ_140
	word32 esi_141
	byte Z_142
	byte dil_143
	call png_error (retsize: 8; depth: 112)
		uses: al_80,C_72,CZ_82,dil_77,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc44_54,dwLoc70_22,eax_78,ecx_67,esi_124,fs_69,qwLoc2C_26,qwLoc5C_16,qwLoc64_18,qwLoc6C_20,rax_123,rbp_61,rbx_62,rdi_125,rdx_66,rsi_65,rsp_60,SCZO_81,SZO_71,Z_76
		defs: al_139,C_138,CZ_140,dil_143,eax_136,ecx_133,esi_141,fs_135,rax_134,rbp_127,rbx_128,rdi_130,rdx_132,rsi_131,rsp_126,SCZO_129,SZO_137,Z_142
	branch (rax_25 ^ Mem0[fs_135:0x00000028:word64]) == 0x0000000000000000 l00000000004012EE
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000068 rbp:fp - 0x0000000000000004 rax:<invalid> eax:(word32) al rdx:<invalid> rsi:<invalid> rdi:<invalid> -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Stack +000C(64)

l00000000004012E9:
	__stack_chk_fail()
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000068 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> esi:<invalid> -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64) Stack +000C(64)

l00000000004012EE:
	return qwArg0C
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000068 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> esi:<invalid> -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp

l0000000000400F4C:
	word64 rax_103 = Mem0[DPB(rax_68, eax_78, 0) * 0x0000000000000008 + 0x00401958:word64]
	word32 eax_104 = (word32) rax_103
	word64 rsp_105
	word64 rbp_106
	word64 rbx_107
	byte SCZO_108
	word64 rdi_109
	word64 rsi_110
	word64 rdx_111
	word32 ecx_112
	word64 rax_113
	selector fs_114
	word32 eax_115
	byte SZO_116
	byte C_117
	byte al_118
	byte CZ_119
	word32 esi_120
	byte Z_121
	byte dil_122
	call eax_104 (retsize: 4; depth: 108)
		uses: al_80,C_72,CZ_82,dil_77,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10_13,dwLoc44_54,dwLoc70_22,eax_104,ecx_67,esi_75,fs_69,qwLoc2C_26,qwLoc5C_16,qwLoc64_18,qwLoc6C_20,rax_103,rbp_61,rbx_62,rdi_64,rdx_66,rsi_65,rsp_60,SCZO_81,SZO_71,Z_76
		defs: al_118,C_117,CZ_119,dil_122,eax_115,ecx_112,esi_120,fs_114,rax_113,rbp_106,rbx_107,rdi_109,rdx_111,rsi_110,rsp_105,SCZO_108,SZO_116,Z_121
	return rbp_106
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000068 rbp:fp - 0x0000000000000004 rax:<invalid> eax:(word32) al rdx:<invalid> rsi:<invalid> rdi:<invalid> -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp

fn0000000000400EE9_exit:
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> eax:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> esi:<invalid> rbx:rbx -112(fp):ecx -108(fp):rdx -100(fp):rsi -92(fp):rdi -68(fp):(word32) al -44(fp):<invalid> -16(fp):rbx -12(fp):fp - 0x0000000000000008 -8(fp):fp - 0x0000000000000004 -4(fp):rbp



void main(word64 rsi, word32 edi, word64 r13, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi fs r13 rsi
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx esi esp r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
l0000000000401673:
	eax = Mem0[rbp - 0x0000000000000060:word32]
	SCZO = cond(eax - Mem0[rbp - 0x0000000000000064:word32])
	SO = SCZO (alias)
	branch Test(LT,SO) l00000000004014C3
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004014C3:
	eax = Mem0[rbp - 0x0000000000000070:word32]
	SCZO = cond(eax - 0x00000001)
	Z = SCZO (alias)
	branch Test(NE,Z) l00000000004015CE
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004015CE:
	Mem0[rbp - 0x0000000000000058:word32] = 0x00000000
	eax = Mem0[rbp - 0x0000000000000058:word32]
	Mem0[rbp - 0x000000000000005C:word32] = eax
	Mem0[rbp - 0x0000000000000050:word32] = 0x00000001
	eax = Mem0[rbp - 0x0000000000000050:word32]
	Mem0[rbp - 0x0000000000000054:word32] = eax
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004014CF:
	SCZO = cond(Mem0[rbp - 0x0000000000000060:word32] - 0x00000001)
	SZO = SCZO (alias)
	branch Test(LE,SZO) l00000000004014EF
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004014EF:
	eax = 0x00000007
	rax = DPB(rax, eax, 0) (alias)
	al = (byte) eax (alias)
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004014D5:
	eax = 0x00000007
	eax = 0x00000007 - Mem0[rbp - 0x0000000000000060:word32]
	eax = eax >> 0x00000001
	edx = 0x00000001
	ecx = eax
	cl = (byte) ecx (alias)
	edx = 0x00000001 << cl
	eax = edx
	eax = eax - 0x00000001
	rax = DPB(rax, eax, 0) (alias)
	al = (byte) eax (alias)
	SCZO = cond(eax)
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004014F4:
	edx = Mem0[rbp - 0x0000000000000060:word32]
	esi = edx
	esi = esi & 0x00000001
	edx = Mem0[rbp - 0x0000000000000060:word32]
	edx = edx + 0x00000001
	edx = edx >> 0x00000001
	ecx = 0x00000003
	ecx = 0x00000003 - edx
	edx = ecx
	ecx = edx
	cl = (byte) ecx (alias)
	esi = esi << cl
	edx = esi
	edx = edx & 0x00000007
	eax = eax - edx
	edx = eax
	eax = Mem0[rbp - 0x0000000000000080:word32]
	edx = edx + eax
	rdx = DPB(rdx, edx, 0) (alias)
	SCZO = cond(Mem0[rbp - 0x0000000000000060:word32] - 0x00000001)
	SZO = SCZO (alias)
	branch Test(LE,SZO) l0000000000401531
// DataOut: edx fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l0000000000401531:
	eax = 0x00000003
	rax = DPB(rax, eax, 0) (alias)
	al = (byte) eax (alias)
// DataOut: al edx fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l0000000000401525:
	eax = 0x00000007
	eax = 0x00000007 - Mem0[rbp - 0x0000000000000060:word32]
	eax = eax >> 0x00000001
	rax = DPB(rax, eax, 0) (alias)
	al = (byte) eax (alias)
	SCZO = cond(eax)
// DataOut: al edx fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l0000000000401536:
	ecx = eax
	cl = (byte) ecx (alias)
	edx = edx >>u cl
	eax = edx
	SZO = cond(eax & eax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l000000000040166E
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l000000000040166E:
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l0000000000401544:
	eax = Mem0[rbp - 0x0000000000000060:word32]
	eax = eax & 0x00000001
	edx = eax
	eax = Mem0[rbp - 0x0000000000000060:word32]
	eax = eax + 0x00000001
	eax = eax >> 0x00000001
	ecx = 0x00000003
	ecx = 0x00000003 - eax
	eax = ecx
	ecx = eax
	cl = (byte) ecx (alias)
	edx = edx << cl
	eax = edx
	eax = eax & 0x00000007
	Mem0[rbp - 0x0000000000000058:word32] = eax
	eax = Mem0[rbp - 0x0000000000000060:word32]
	eax = eax & 0x00000001
	SZO = cond(eax & eax)
	Z = SZO (alias)
	al = Test(EQ,Z)
	edx = (word32) al
	eax = Mem0[rbp - 0x0000000000000060:word32]
	eax = eax >> 0x00000001
	ecx = 0x00000003
	ecx = 0x00000003 - eax
	eax = ecx
	ecx = eax
	cl = (byte) ecx (alias)
	edx = edx << cl
	eax = edx
	eax = eax & 0x00000007
	Mem0[rbp - 0x000000000000005C:word32] = eax
	eax = 0x00000007
	eax = 0x00000007 - Mem0[rbp - 0x0000000000000060:word32]
	eax = eax >> 0x00000001
	edx = 0x00000001
	ecx = eax
	cl = (byte) ecx (alias)
	edx = 0x00000001 << cl
	eax = edx
	Mem0[rbp - 0x0000000000000050:word32] = eax
	SCZO = cond(Mem0[rbp - 0x0000000000000060:word32] - 0x00000002)
	SZO = SCZO (alias)
	branch Test(LE,SZO) l00000000004015C4
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004015C4:
	eax = 0x00000008
	rax = DPB(rax, eax, 0) (alias)
	al = (byte) eax (alias)
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004015AF:
	eax = Mem0[rbp - 0x0000000000000060:word32]
	eax = eax - 0x00000001
	eax = eax >> 0x00000001
	edx = 0x00000008
	ecx = eax
	cl = (byte) ecx (alias)
	edx = 0x00000008 >> cl
	SCZO = cond(edx)
	eax = edx
	rax = DPB(rax, eax, 0) (alias)
	al = (byte) eax (alias)
// DataOut: eax fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004015C9:
	Mem0[rbp - 0x0000000000000054:word32] = eax
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004015E8:
	eax = Mem0[rbp - 0x000000000000005C:word32]
	Mem0[rbp - 0x000000000000004C:word32] = eax
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l0000000000401664:
	eax = Mem0[rbp - 0x000000000000007C:word32]
	rax = DPB(rax, eax, 0) (alias)
	al = (byte) eax (alias)
	SCZO = cond(Mem0[rbp - 0x000000000000004C:word32] - eax)
	C = SCZO (alias)
	branch Test(ULT,C) l00000000004015F0
// DataOut: fs rax rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l00000000004015F0:
	edi = 0x004019B6
	rdi = DPB(rdi, edi, 0) (alias)
	rax = DPB(rax, puts(rdi), 0)
	rax = Mem0[rbp - 0x0000000000000038:word64]
	rcx = Mem0[rbp - 0x0000000000000010:word64]
	edx = 0x00000000
	rsi = rcx
	rdi = rax
	call png_read_row (retsize: 8;)
	eax = Mem0[rbp - 0x000000000000004C:word32]
	rax = DPB(rax, eax, 0) (alias)
	SCZO = cond(rax - Mem0[rbp - 0x0000000000000020:word64])
	Z = SCZO (alias)
	branch Test(NE,Z) l000000000040165E
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l000000000040161B:
	eax = Mem0[rbp - 0x0000000000000058:word32]
	Mem0[rbp - 0x0000000000000048:word32] = eax
	Mem0[rbp - 0x0000000000000044:word32] = 0x00000000
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l0000000000401656:
	eax = Mem0[rbp - 0x0000000000000080:word32]
	SCZO = cond(Mem0[rbp - 0x0000000000000048:word32] - eax)
	C = SCZO (alias)
	branch Test(ULT,C) l000000000040162A
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l000000000040162A:
	eax = Mem0[rbp - 0x0000000000000048:word32]
	rax = DPB(rax, eax, 0) (alias)
	SCZO = cond(rax - Mem0[rbp - 0x0000000000000028:word64])
	Z = SCZO (alias)
	branch Test(NE,Z) l000000000040164C
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l000000000040164C:
	eax = Mem0[rbp - 0x0000000000000050:word32]
	v27 = Mem0[rbp - 0x0000000000000048:word32] + eax
	Mem0[rbp - 0x0000000000000048:word32] = v27
	v28 = Mem0[rbp - 0x0000000000000044:word32] + 0x00000001
	Mem0[rbp - 0x0000000000000044:word32] = v28
	SCZO = cond(v28)
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l0000000000401633:
	rsi = Mem0[rbp - 0x0000000000000030:word64]
	rax = Mem0[rbp - 0x0000000000000038:word64]
	ecx = Mem0[rbp - 0x0000000000000044:word32]
	rdx = Mem0[rbp - 0x0000000000000010:word64]
	rdi = rax
	dil = (byte) rdi (alias)
	rbp = print_pixel(dil, fs, qwArg04, qwArg0C)
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l000000000040165E:
	eax = Mem0[rbp - 0x0000000000000054:word32]
	v26 = Mem0[rbp - 0x000000000000004C:word32] + eax
	Mem0[rbp - 0x000000000000004C:word32] = v26
	SCZO = cond(v26)
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l000000000040166C:
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l000000000040166F:
	v25 = Mem0[rbp - 0x0000000000000060:word32] + 0x00000001
	Mem0[rbp - 0x0000000000000060:word32] = v25
	SCZO = cond(v25)
// DataOut: fs rbp
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

l000000000040167F:
	Mem0[rbp - 0x0000000000000040:word64] = 0x0000000000000000
	rax = Mem0[rbp - 0x0000000000000038:word64]
	rdx = Mem0[rbp - 0x0000000000000010:word64]
	rsi = rdx
	rdi = rax
	call png_free (retsize: 8;)
	rax = Mem0[rbp - 0x0000000000000038:word64]
	rdx = rbp - 0x0000000000000030
	rsi = rdx
	rdi = rax
	call png_destroy_info_struct (retsize: 8;)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn:
// LocalsOut: fp(64) Local -000C(64)

fn00000000004012F9_entry:
// DataOut: edi fs r13 rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0074(32)

l00000000004012F9:
	rsp = fp
	rsp = fp - 0x0000000000000004
	dwLoc04 = rbp
	rbp = fp - 0x0000000000000004
	rsp = fp - 0x00000000000000A4
	dwLoc98 = edi
	qwLocA4 = rsi
	rax = Mem0[fs:0x00000028:word64]
	qwLoc0C = rax
	eax = 0x00000000
	dwLoc88 = 0x00000001
	SCZO = cond(dwLoc98 - 0x00000004)
	Z = SCZO (alias)
	branch Test(NE,Z) l000000000040173F
// DataOut: fs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -000C(64) Local -0074(32) Local -00A4(64)

l000000000040173F:
	rax = Mem0[0x0000000000602100:word64]
	rcx = rax
	edx = 0x00000027
	rdx = DPB(rdx, edx, 0) (alias)
	esi = 0x00000001
	rsi = DPB(rsi, esi, 0) (alias)
	edi = 0x00401A70
	rdi = DPB(rdi, edi, 0) (alias)
	rax = DPB(rax, fwrite(rdi, rsi, rdx, rcx), 0)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> eax:0x00000000 -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -000C(64)

l0000000000401337:
	rax = qwLocA4
	rax = rax + 0x0000000000000008
	SCZO = cond(rax)
	rax = Mem0[rax:word64]
	rdi = rax
	call atol (retsize: 8; depth: 172)
	qwLoc2C = rax
	rax = qwLocA4
	rax = rax + 0x0000000000000010
	SCZO = cond(rax)
	rax = Mem0[rax:word64]
	rdi = rax
	call atol (retsize: 8; depth: 172)
	qwLoc24 = rax
	rax = qwLocA4
	rax = rax + 0x0000000000000018
	rax = Mem0[rax:word64]
	esi = 0x00401990
	rsi = DPB(rsi, esi, 0) (alias)
	rdi = rax
	rax = fopen(rdi, rsi)
	eax = (word32) rax (alias)
	al = (byte) rax (alias)
	qwLoc1C = rax
	qwLoc44 = 0x0000000000000000
	SCZO = cond(qwLoc1C - 0x0000000000000000)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0000000000401716
// DataOut: fs r13 rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> eax:0x00000000 -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -000C(64) Local -0074(32) Local -00A4(64)

l0000000000401716:
	rax = qwLocA4
	rax = rax + 0x0000000000000018
	SCZO = cond(rax)
	rdx = Mem0[rax:word64]
	rax = Mem0[0x0000000000602100:word64]
	esi = 0x00401A48
	rsi = DPB(rsi, esi, 0) (alias)
	rdi = rax
	eax = 0x00000000
	rax = DPB(rax, eax, 0) (alias)
	rax = DPB(rax, fprintf(rdi, rsi, tLocA4), 0)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:0x00401990 -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -000C(64)

l000000000040139D:
	ecx = 0x00000000
	edx = 0x00000000
	esi = 0x00000000
	edi = 0x00401993
	call png_create_read_struct (retsize: 8; depth: 172)
	qwLoc3C = rax
	rax = qwLoc3C
	SZO = cond(rax & rax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l00000000004016F6
// DataOut: fs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:0x00401990 -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -000C(64) Local -003C(64) Local -0074(32)

l00000000004016F6:
	rax = Mem0[0x0000000000602100:word64]
	rcx = rax
	edx = 0x0000002E
	rdx = DPB(rdx, edx, 0) (alias)
	esi = 0x00000001
	rsi = DPB(rsi, esi, 0) (alias)
	edi = 0x00401A18
	rdi = DPB(rdi, edi, 0) (alias)
	rax = DPB(rax, fwrite(rdi, rsi, rdx, rcx), 0)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -60(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -000C(64)

l00000000004013C7:
	rax = qwLoc3C
	rdi = rax
	call png_create_info_struct (retsize: 8; depth: 172)
	qwLoc34 = rax
	rax = qwLoc34
	SZO = cond(rax & rax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l00000000004016C0
// DataOut: fs r13
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -60(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -000C(64) Local -003C(32) Local -0074(32)

l00000000004013E4:
	rax = qwLoc3C
	rdx = qwLoc1C
	rsi = rdx
	rdi = rax
	call png_init_io (retsize: 8; depth: 172)
	rdx = qwLoc34
	rax = qwLoc3C
	rsi = rdx
	rdi = rax
	call png_read_info (retsize: 8; depth: 172)
	rdx = qwLoc34
	rax = qwLoc3C
	rsi = rdx
	rdi = rax
	call png_get_rowbytes (retsize: 8; depth: 172)
	rdx = rax
	rax = qwLoc3C
	rsi = rdx
	rdi = rax
	call png_malloc (retsize: 8; depth: 172)
	qwLoc44 = rax
	rax = qwLoc44
	qwLoc14 = rax
	rsi = qwLoc34
	rax = qwLoc3C
	eax = (word32) rax (alias)
	r9 = r13 - 0x0000000000000074
	r8 = r13 - 0x0000000000000078
	rcx = fp - 0x0000000000000080
	rdx = fp - 0x0000000000000084
	rsp = fp - 0x00000000000000AC
	SCZO = cond(fp - 0x00000000000000AC)
	rdi = fp - 0x000000000000006C
	rsp = fp - 0x00000000000000B0
	dwLocB0 = fp - 0x000000000000006C
	rdi = fp - 0x0000000000000070
	rsp = fp - 0x00000000000000B4
	dwLocB4 = fp - 0x0000000000000070
	rdi = fp - 0x0000000000000074
	rsp = fp - 0x00000000000000B8
	dwLocB8 = fp - 0x0000000000000074
	rdi = rax
	call png_get_IHDR (retsize: 8; depth: 192)
	rsp = fp - 0x0000000000000098
	SZO = cond(eax & eax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l00000000004016AF
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x00000000000000A4 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):0x0000000000000000 -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -000C(64) Local -0074(32)

l00000000004016AF:
	rax = qwLoc3C
	esi = 0x004019C3
	rdi = rax
	call png_error (retsize: 8; depth: 160)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -000C(64)

l00000000004016C0:
	rax = Mem0[0x0000000000602100:word64]
	rcx = rax
	edx = 0x0000002C
	rdx = DPB(rdx, edx, 0) (alias)
	esi = 0x00000001
	rsi = DPB(rsi, esi, 0) (alias)
	edi = 0x004019E8
	rdi = DPB(rdi, edi, 0) (alias)
	rax = DPB(rax, fwrite(rdi, rsi, rdx, rcx), 0)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -000C(64)

l00000000004016DE:
	rax = fp - 0x000000000000003C
	edx = 0x00000000
	esi = 0x00000000
	rdi = fp - 0x000000000000003C
	call png_destroy_read_struct (retsize: 8; depth: 8)
// DataOut: fs
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:0x00000001 ecx:<invalid> edx:0x0000002C edi:0x004019E8 rcx:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp
// LocalsOut: Local -000C(64)

l000000000040175D:
	eax = 0x00000001
	rdi = qwLoc0C
	rdi = rdi ^ Mem0[fs:0x00000028:word64]
	SZO = cond(rdi)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0000000000401777
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rcx:<invalid> edx:<invalid> esi:<invalid> edi:<invalid> rdi:<invalid> rdx:<invalid> ecx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l0000000000401772:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:0x00000001 rcx:<invalid> edx:<invalid> esi:<invalid> edi:<invalid> rdi:<invalid> rdx:<invalid> ecx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l0000000000401777:
	rsp = Mem0
	Mem0 = Mem0[rsp:<unknown>]
	rsp = rsp + 0x0000000000000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> eax:0x00000001 rcx:<invalid> edx:<invalid> esi:<invalid> edi:<invalid> rdi:<invalid> rdx:<invalid> ecx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

fn00000000004012F9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:Mem0 rbp:fp - 0x0000000000000004 rax:<invalid> eax:0x00000001 rcx:<invalid> edx:<invalid> esi:<invalid> edi:<invalid> rdi:<invalid> rdx:<invalid> ecx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l000000000040147A:
	eax = dwLoc74
	rax = DPB(rax, eax, 0) (alias)
	al = (byte) eax (alias)
	SZO = cond(eax & eax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0000000000401488
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l0000000000401488:
	dwLoc68 = 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l0000000000401481:
	SCZO = cond(eax - 0x00000001)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0000000000401491
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l0000000000401491:
	dwLoc68 = 0x00000007
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l0000000000401486:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l000000000040149A:
	rax = qwLoc3C
	esi = 0x0040199A
	rdi = rax
	call png_error (retsize: 8; depth: 160)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp

l00000000004014AB:
	rax = qwLoc3C
	rdi = rax
	call png_start_read_image (retsize: 8; depth: 160)
	dwLoc64 = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000098 rbp:fp - 0x0000000000000004 rax:<invalid> eax:<invalid> rdi:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> rdx:<invalid> rsi:<invalid> r9:<invalid> r8:<invalid> rcx:<invalid> -184(fp):fp - 0x0000000000000074 -180(fp):fp - 0x0000000000000070 -176(fp):fp - 0x000000000000006C -164(fp):rsi -152(fp):edi -136(fp):0x00000001 -104(fp):<invalid> -68(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -44(fp):<invalid> -36(fp):<invalid> -28(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):rbp



void __libc_csu_init(word64 rsi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rsi
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx dh di dil dl dx eax ebp ebx edi edx esi esp r12 r12b r12d r12w r13 r13b r13d r13w r14 r14b r14d r14w r15 r15b r15d r15w rax rbp rbx rdi rdx rsi rsp si sil sp spl
// Preserved: rbx
fn0000000000401780_entry:
// DataOut: rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000401780:
	_init()
	branch 0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 == 0x0000000000000000 l00000000004017D6
// DataOut: rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0008(64)

l00000000004017B6:
	word64 rbx_63 = DPB(rbx, 0x00000000, 0)
// DataOut: rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000020 r15d:edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx rax:<invalid> -24(fp):rbx -20(fp):rbp -16(fp):fp - 0x000000000000000C -12(fp):rbp -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -0008(64)

l00000000004017C0:
	word64 rsp_72
	word64 rdi_73
	word64 rsi_74
	word32 r15d_75
	word32 edi_76
	word64 rbp_77
	word64 r12_78
	word64 rbx_79
	word64 r14_80
	word64 r13_81
	word64 rdx_82
	byte SCZO_83
	byte SZO_84
	byte C_85
	byte Z_86
	word32 ebx_87
	call Mem0[0x0000000000601E00 + rbx_63 * 0x00000008:word32] (retsize: 4; depth: 36)
		uses: C_65,dwLoc04_4,dwLoc08_7,dwLoc0C_12,dwLoc10_15,dwLoc14_18,dwLoc18_22,ebx_62,edi_71,qwLoc08,qwLoc10,qwLoc18,r12_16,r13_66,r14_67,r15d_68,rbp_28,rbx_63,rdi,rdx_69,rsi_70,rsp_27,SCZO_29,SZO_64,Z_31
		defs: C_85,ebx_87,edi_76,r12_78,r13_81,r14_80,r15d_75,rbp_77,rbx_79,rdi_73,rdx_82,rsi_74,rsp_72,SCZO_83,SZO_84,Z_86
	branch rbx_79 + 0x0000000000000001 != rbp_77 l00000000004017C0
// DataOut: rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000020 r15d:edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx ebx:<invalid> rdx:<invalid> rsi:<invalid> edi:<invalid> rbx:<invalid> rax:<invalid> -24(fp):rbx -20(fp):rbp -16(fp):fp - 0x000000000000000C -12(fp):rbp -8(fp):rsi -4(fp):rdi
// LocalsOut: fp(64) Local -0008(64)

l00000000004017D6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000020 r15d:edi r12:0000000000601E00 rbp:0x0000000000601E08 - 0x0000000000601E00 >> 0x0000000000000003 r14:rsi r13:rdx ebx:<invalid> rdx:<invalid> rsi:<invalid> edi:<invalid> rbx:<invalid> rax:<invalid> -24(fp):rbx -20(fp):rbp -16(fp):fp - 0x000000000000000C -12(fp):rbp -8(fp):rsi -4(fp):rdi

fn0000000000401780_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:rsi + 0x0000000000000020 r15d:edi r12:0000000000601E00 rbp:<invalid> r14:rsi r13:rdx rbx:rbx rsi:<invalid> rdi:<invalid> ebx:<invalid> rdx:<invalid> edi:<invalid> rax:<invalid> -24(fp):rbx -20(fp):rbp -16(fp):fp - 0x000000000000000C -12(fp):rbp -8(fp):rsi -4(fp):rdi



void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn00000000004017F0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004017F0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000000004017F0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
fn00000000004017F4_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004017F4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

fn00000000004017F4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



