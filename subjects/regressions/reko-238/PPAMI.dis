void fn00001000(word32 d0, word32 a0, word32 a5, word32 a6, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a5 a6 d0
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
// Stack args: Stack +0004(32)
fn00001000_entry:
// DataOut: a0 a5 a6 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001000:
	word32 a2_130 = a0
	word32 a4_44 = 0x00009608
	word32 a6_46 = Mem0[0x00000004:word32]
	word32 a3_294 = 0x0000B620
	word32 d0_49 = 0x000009E6
// DataOut: a2 a3 a4 a5 a6 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l00001024:
	d0_49 = d0_49 - 0x00000001
	branch d0_49 != 0xFFFFFFFF l00001022
// DataOut: a2 a3 a4 a5 a6 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0 d0:<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l00001022:
	Mem293[a3_294:word32] = 0
	a3_294 = a3_294 + 0x00000004
// DataOut: a2 a3 a4 a5 a6 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0 d0:<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l00001028:
	Mem56[a4_44 + 8280:word32] = fp - 0x00000034
	Mem58[a4_44 + 8272:word32] = a6_46
	Mem59[a4_44 + 8276:word32] = 0x00000000
	SetSignal(0, 0x00003000)
	word32 a1_62 = 0x000011EA
	word32 d0_64 = OpenLibrary(a1_62, 0)
	Mem66[a4_44 + 18340:word32] = d0_64
	branch d0_64 != 0x00000000 l00001056
// DataOut: a1 a2 a4 a5 a6 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0 d0:<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l00001056:
	word32 d0_132
	word32 a3_110 = Mem66[a6_46 + 276:word32]
	Mem112[a4_44 + 8268:word32] = Mem66[a3_110 + 152:word32]
	branch Mem112[a3_110 + 172:word32] == 0x00000000 l000010F8
// DataOut: a1 a2 a3 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0x00003000 d0:<invalid> a1:000011EA -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l000010F8:
	Mem238[a4_44 + 8220:word32] = Mem112[a3_110 + 58:word32]
	Mem242[a4_44 + 8220:word32] = Mem238[a4_44 + 8220:word32] + 0x00000080
	WaitPort(a3_110 + 92)
	GetMsg(a3_110 + 92)
	Mem247[a4_44 + 8276:word32] = 0x00000080
	a2_130 = 0x00000080
	d0_132 = Mem247[0x000000A4:word32]
	branch d0_132 == 0x00000000 l0000113C
// DataOut: a1 a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0x00003000 d0:<invalid> a1:000011EA -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l00001124:
	FindResident(a1_62)
	Mem289[a4_44 + 8268:word32] = d0_132
	Enable()
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a2:0x00000080 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0x00003000 d0:<invalid> a1:000011EA a0:<invalid> -56(fp):0x00000080 -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l0000113C:
	branch Mem247[0x000000A0:word32] == 0x00000000 l0000115C
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a2:0x00000080 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:000011EA a0:<invalid> -56(fp):0x00000080 -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l00001142:
	Supervisor(a5)
	Mem276[a4_44 + 8284:word32] = d0_132
	branch d0_132 == 0x00000000 l0000115C
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a2:0x00000080 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:000011EA a0:<invalid> -56(fp):0x00000080 -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l00001152:
	Mem283[a3_110 + 164:word32] = Mem276[(d0_132 << 0x00000002) + 8:word32]
	d0_132 = d0_132 << 0x00000002
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a2:0x00000080 d2:0x000003ED a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:000011EA a0:<invalid> -56(fp):0x00000080 -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l0000115C:
	Mem272[a4_44 + 8288:word32] = Mem247[Mem247[Mem247[a4_44 + 8276:word32] + 36:word32] + 4:word32]
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a2:0x00000080 d2:<invalid> a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:000011EA a0:<invalid> -56(fp):0x00000080 -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001068:
	Mem154[a4_44 + 8220:word32] = fp - 0x00000034 - dwArg04 + 0x00000080
	word32 a1_160 = Mem154[Mem154[a3_110 + 172:word32] * 0x00000002 * 0x00000002 + 16:word32] * 0x00000002 * 0x00000002
	word32 d1_165 = (int32) Mem154[a1_160:byte]
	Mem167[a4_44 + 8288:word32] = a1_160 + 0x00000001
	word32 d0_168 = d0 + d1_165
	word32 d0_172 = DPB(d0_168 + 0x00000007, (word16) (d0_168 + 0x00000007) & 0xFFFC, 0)
	Mem174[a4_44 + 8296:word32] = d0_172
	word32 d0_180 = AllocMem(d0_172, 0x00010001)
	branch d0_180 != 0x00000000 l000010C0
// DataOut: a1 a2 a4 a5 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0x00003000 d0:<invalid> a1:000011EA -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l000010C0:
	Mem207[a4_44 + 8292:word32] = d0_180
	d0_132 = d0 - 0x00000001
	word32 d2_210 = d0 + d1_165
// DataOut: a0 a1 a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:<invalid> a0:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l000010CC:
	Mem215[a0 + 2 + d2_210:byte] = Mem207[a0 + d0_132:byte]
	d2_210 = d2_210 - 0x00000001
	d0_132 = d0_132 - 0x00000001
	branch d0_132 != 0xFFFFFFFF l000010CC
// DataOut: a0 a1 a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:<invalid> a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:<invalid> a0:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l000010D8:
	Mem220[a4_44 + 2 + d2_210:byte] = 0x20
	Mem224[a4_44 + 2 + (d2_210 - 0x00000001):byte] = 0x22
	word32 d2_221 = d2_210 - 0x00000001
// DataOut: a0 a1 a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:<invalid> a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:<invalid> a0:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l000010E6:
	Mem228[a1_160 + 0x00000002 + d2_221:byte] = Mem224[a1_160 + 0x00000001 + d2_221:byte]
	d2_221 = d2_221 - 0x00000001
	branch d2_221 != 0xFFFFFFFF l000010E6
// DataOut: a0 a1 a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:<invalid> a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:<invalid> a0:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l000010F0:
	Mem232[d0_180:byte] = 0x22
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:<invalid> a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:<invalid> a0:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: Local -0004(32)

l00001170:
	fn000060AC()
	word32 a4_134
	word32 a2_135 = fn00006FB8(d0_132, a2_130, a4_44, a5, dwArg00, out a4_134)
// DataOut: a2 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d2:<invalid> a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:<invalid> a0:<invalid> -64(fp):0x00009608 + 8216 -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

l0000117A_thunk_fn00001180:
	word32 d1_138
	word32 d2_139
	word32 d4_140
	word32 a0_141
	word32 a1_142
	word32 a2_143
	word32 a3_144
	word32 a4_145
	word32 a5_146
	word32 a6_147
	fn00001180(0, a2_135, a4_134, out d1_138, out d2_139, out d4_140, out a0_141, out a1_142, out a2_143, out a3_144, out a4_145, out a5_146, out a6_147)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d2:<invalid> a4:<invalid> a6:<invalid> a3:<invalid> d1:<invalid> d0:0 a1:<invalid> a0:<invalid> a5:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d3:<invalid> d4:<invalid> -64(fp):0x00009608 + 8216 -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

l000010B4:
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:<invalid> a0:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

l000010BA_thunk_fn000011DA:
	word32 d1_194
	word32 d2_195
	word32 d4_196
	word32 a0_197
	word32 a1_198
	word32 a2_199
	word32 a3_200
	word32 a4_201
	word32 a5_202
	word32 a6_203
	fn000011DA(a4_44, out d1_194, out d2_195, out d4_196, out a0_197, out a1_198, out a2_199, out a3_200, out a4_201, out a5_202, out a6_203)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:<invalid> d0:0x000003E8 a1:<invalid> a0:<invalid> -60(fp):<invalid> -56(fp):0x000003E8 -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

l00001050:
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0x00003000 d0:<invalid> a1:000011EA -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

l00001050_thunk_fn000011DA:
	word32 d1_92
	word32 d2_93
	word32 d4_94
	word32 a0_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a5_100
	word32 a6_101
	fn000011DA(a4_44, out d1_92, out d2_93, out d4_94, out a0_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_100, out a6_101)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000034 a2:a0 d2:d0 a4:00009608 a6:<invalid> a3:<invalid> d1:0x00003000 d0:100 a1:000011EA -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

fn00001000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a2:<invalid> d2:<invalid> a4:<invalid> a6:<invalid> a3:<invalid> d1:<invalid> d0:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a0:<invalid> a5:<invalid> d7:<invalid> -64(fp):0x00009608 + 8216 -60(fp):<invalid> -56(fp):<invalid> -52(fp):d1 -48(fp):d2 -44(fp):d3 -40(fp):d4 -36(fp):d5 -32(fp):d6 -28(fp):a0 -24(fp):a1 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6



word32 fn0000117C(word32 a2, word32 a4, word32 dwArg04, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4
// LiveOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6
// Preserved: a7
// Stack args: Stack +0004(32)
fn0000117C_entry:
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0004(32)

l0000117C:
// DataOut: a2 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000117C_thunk_fn00001180:
	word32 d1_7
	word32 d2_8
	word32 d4_9
	word32 a0_10
	word32 a1_11
	word32 a2_12
	word32 a3_13
	word32 a4_14
	word32 a5_15
	word32 a6_16
	return fn00001180(dwArg04, a2, a4, out d1_7, out d2_8, out d4_9, out a0_10, out a1_11, out a2_12, out a3_13, out a4_14, out a5_15, out a6_16)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid>

fn0000117C_exit:
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid>



word32 fn00001180(word32 d0, word32 a2, word32 a4, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 d0
// LiveOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6
// Preserved:
l00001180:
	a7 = Mem0[a4 + 8280:word32]
	a7 = a7 - 0x00000004
	v8 = d0
	Mem0[a7:word32] = v8
	d0 = Mem0[a4 + 8260:word32]
	CVZN = cond(d0)
	Z = CVZN (alias)
	branch Test(EQ,Z) l00001190
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn:

l0000118A_thunk_fn00001190:
	d0 = fn00001190(a2, a4, out d1, out d2, out d4, out a0, out a1, out a2, out a3, out a4, out a5, out a6)
	return d0
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn:

l0000118A_thunk_fn0000118C:
	d0 = fn0000118C(a2, a4, out d1, out d2, out d4, out a0, out a1, out a2, out a3, out a4, out a5, out a6)
	return d0
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn:

fn00001180_entry:
	def a4
	def Mem0
	def d0
	def d1Out
	def d2Out
	def d4Out
	def a0Out
	def a1Out
	def a2Out
	def a3Out
	def a4Out
	def a5Out
	def a6Out
	def a2
// DataOut: a2 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001180:
	a7_2 = Mem0[a4 + 8280:word32]
	a7_3 = a7_2 - 0x00000004
	v5_5 = d0
	Mem6[a7_3:word32] = v5_5
	d0_7 = Mem6[a4 + 8260:word32]
	CVZN_8 = cond(d0_7)
	Z_9 = CVZN_8 (alias)
	branch d0_7 == 0x00000000 l0000118A_thunk_fn00001190
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000118A_thunk_fn00001190:
	d0_53 = fn00001190(a2, a4, out d1_43, out d2_44, out d4_45, out a0_46, out a1_47, out a2_48, out a3_49, out a4_50, out a5_51, out a6_52)
	return d0_53
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid>

l0000118A_thunk_fn0000118C:
	d0_42 = fn0000118C(a2, a4, out d1_32, out d2_33, out d4_34, out a0_35, out a1_36, out a2_37, out a3_38, out a4_39, out a5_40, out a6_41)
	return d0_42
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid>

fn00001180_exit:
	d1_10 = PHI(d1_43, d1_32, d1, d1)
	d2_11 = PHI(d2_44, d2_33, d2, d2)
	d4_12 = PHI(d4_45, d4_34, d4, d4)
	a0_13 = PHI(a0_46, a0_35, a0, a0)
	a1_14 = PHI(a1_47, a1_36, a1, a1)
	a2_15 = PHI(a2_48, a2_37, a2, a2)
	a3_16 = PHI(a3_49, a3_38, a3, a3)
	a4_17 = PHI(a4_50, a4_39, a4, a4)
	a5_18 = PHI(a5_51, a5_40, a5, a5)
	a6_19 = PHI(a6_52, a6_41, a6, a6)
	d0_20 = PHI(d0_53, d0_42, d0, d0)
	use d1_10 (=> d1Out)
	use d2_11 (=> d2Out)
	use d4_12 (=> d4Out)
	use a0_13 (=> a0Out)
	use a1_14 (=> a1Out)
	use a2_15 (=> a2Out)
	use a3_16 (=> a3Out)
	use a4_17 (=> a4Out)
	use a5_18 (=> a5Out)
	use a6_19 (=> a6Out)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid>



word32 fn0000118C(word32 a2, word32 a4, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4
// LiveOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6
// Preserved:
fn0000118C_entry:
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000118C:
	word32 a7_4
	word32 d0_5
	word32 a0_6
	word32 a2_7
	word32 a4_8
	word32 d1_9
	word32 d2_10
	word32 d4_11
	word32 a1_12
	word32 a3_13
	word32 a5_14
	word32 a6_15
	call d0 (retsize: 4; depth: 4)
		uses: a0_3,a7_1,d0
		defs: a0_6,a1_12,a2_7,a3_13,a4_8,a5_14,a6_15,a7_4,d0_5,d1_9,d2_10,d4_11
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000118E_thunk_fn00001190:
	word32 d1_16
	word32 d2_17
	word32 d4_18
	word32 a0_19
	word32 a1_20
	word32 a2_21
	word32 a3_22
	word32 a4_23
	word32 a5_24
	word32 a6_25
	return fn00001190(a2_7, a4_8, out d1_16, out d2_17, out d4_18, out a0_19, out a1_20, out a2_21, out a3_22, out a4_23, out a5_24, out a6_25)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:v3 a0:d0

fn0000118C_exit:
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid>



word32 fn00001190(word32 a2, word32 a4, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4
// LiveOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6
// Preserved:
fn00001190_entry:
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001190:
	word32 a1_3 = fn0000830C(a4)
	fn000060AE()
	branch Mem0[a4 + 8276:word32] == 0x00000000 l000011C8
// DataOut: a1 a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp

l000011C8:
	word32 d0_53 = Mem0[a4 + 8296:word32]
	branch d0_53 == 0x00000000 l000011CC_thunk_fn000011DA
// DataOut: a4 d0
// DataOut (flags): 
// SymbolicIn: a7:v3 d0:<invalid> a0:0x00000000 a1:<invalid>

l000011CC_thunk_fn000011DA:
	word32 d1_69
	word32 d2_70
	word32 d4_71
	word32 a0_72
	word32 a1_73
	word32 a2_74
	word32 a3_75
	word32 a4_76
	word32 a5_77
	word32 a6_78
	return fn000011DA(a4, out d1_69, out d2_70, out d4_71, out a0_72, out a1_73, out a2_74, out a3_75, out a4_76, out a5_77, out a6_78)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:v3 d0:<invalid> a0:0x00000000 a1:<invalid>

l000011CE:
	FreeMem(Mem0[a4 + 8292:word32], d0_53)
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:v3 d0:<invalid> a0:0x00000000 a1:<invalid>

l000011D6_thunk_fn000011DA:
	word32 d1_58
	word32 d2_59
	word32 d4_60
	word32 a0_61
	word32 a1_62
	word32 a2_63
	word32 a3_64
	word32 a4_65
	word32 a5_66
	word32 a6_67
	return fn000011DA(a4, out d1_58, out d2_59, out d4_60, out a0_61, out a1_62, out a2_63, out a3_64, out a4_65, out a5_66, out a6_67)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:v3 d0:<invalid> a1:<invalid> a6:<invalid> a0:0x00000000

l0000119E:
	branch Mem0[a4 + 8284:word32] == 0x00000000 l000011AC
// DataOut: a1 a2 a4
// DataOut (flags): 
// SymbolicIn: a7:v3 d0:<invalid> a0:0x00000000 a1:<invalid>

l000011A8:
	execPrivate1()
// DataOut: a1 a2 a4
// DataOut (flags): 
// SymbolicIn: a7:v3 a6:<invalid> d1:<invalid> d0:<invalid> a0:0x00000000 a1:<invalid>

l000011AC:
	branch Mem0[a4 + 8268:word32] == 0x00000000 l000011B6
// DataOut: a1 a2 a4
// DataOut (flags): 
// SymbolicIn: a7:v3 a6:<invalid> d1:<invalid> d0:<invalid> a0:0x00000000 a1:<invalid>

l000011B2:
	MakeFunctions(0x00000000, a1_3, a2)
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:v3 a6:<invalid> d1:<invalid> d0:<invalid> a0:0x00000000 a1:<invalid>

l000011B6:
	Forbid()
	ReplyMsg(Mem0[a4 + 8276:word32])
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:v3 a6:<invalid> d1:<invalid> d0:<invalid> a0:0x00000000 a1:<invalid>

l000011C6_thunk_fn000011DA:
	word32 d1_41
	word32 d2_42
	word32 d4_43
	word32 a0_44
	word32 a1_45
	word32 a2_46
	word32 a3_47
	word32 a4_48
	word32 a5_49
	word32 a6_50
	return fn000011DA(a4, out d1_41, out d2_42, out d4_43, out a0_44, out a1_45, out a2_46, out a3_47, out a4_48, out a5_49, out a6_50)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:v3 a6:<invalid> d1:<invalid> a1:<invalid> d0:<invalid> a0:0x00000000

fn00001190_exit:
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a0:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid>



word32 fn000011DA(word32 a4, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4
// LiveOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// Trashed: CVZN a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6
// Preserved:
fn000011DA_entry:
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: v3(32)

l000011DA:
	CloseLibrary(Mem0[a4 + 18340:word32])
	word32 v6_5 = Mem0[v3:word32]
// DataOut: a7 d0
// DataOut (flags): 
// SymbolicIn: a7:fp

l000011E4:
	word32 d1_9
	*d1Out = Mem0[v3 + 0x00000004:word32]
	word32 d2_11
	*d2Out = Mem0[v3 + 0x00000008:word32]
	word32 d4_15
	*d4Out = Mem0[v3 + 0x00000010:word32]
	word32 a0_21
	*a0Out = Mem0[v3 + 0x0000001C:word32]
	word32 a1_23
	*a1Out = Mem0[v3 + 0x00000020:word32]
	word32 a2_25
	*a2Out = Mem0[v3 + 0x00000024:word32]
	word32 a3_27
	*a3Out = Mem0[v3 + 0x00000028:word32]
	word32 a4_29
	*a4Out = Mem0[v3 + 0x0000002C:word32]
	word32 a5_31
	*a5Out = Mem0[v3 + 0x00000030:word32]
	word32 a6_33
	*a6Out = Mem0[v3 + 0x00000034:word32]
	return v6_5
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:v3 + 0x00000004 a1:<invalid> d0:<invalid>

fn000011DA_exit:
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:v3 + 0x00000038 a1:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> d5:<invalid> d6:<invalid> a0:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> a6:<invalid>



word32 fn000011F8(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, word32 dwArg04, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a2 a3 a4 a7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
// Stack args: Stack +0004(32)
fn000011F8_entry:
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000011F8:
	word32 a5_1707 = fp - 0x00000004
	branch fp - 0x000000A8 - Mem0[a4 + 8220:word32] <u 0x00000000 l00001200_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l00001200_thunk_fn000076EC:
	word32 d1_1709
	word32 d2_1710
	word32 d4_1711
	word32 d5_1712
	word32 d6_1713
	word32 d7_1714
	word32 a1_1715
	word32 a2_1716
	word32 a3_1717
	word32 a4_1718
	word32 a5_1719
	word32 a6_1720
	fn000076EC(d7, a2, a4, fp - 0x00000004, out d1_1709, out d2_1710, out d4_1711, out d5_1712, out d6_1713, out d7_1714, out a1_1715, out a2_1716, out a3_1717, out a4_1718, out a5_1719, out a6_1720)
	return a2_1716
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x000000A8 a5:fp - 0x00000004 -4(fp):a5

l00001204:
	word32 a1_78
	word32 d2_1708
	word32 a4_111
	fn00006170(d2, dwArg04, a2, a4, fp - 0x00000004, a4 + 1584, out d2_1708, out a1_78, out a4_111)
	word32 d7_1703 = dwArg04
	word32 a7_117 = fp - 0x000000C4
	branch dwArg04 >= 0x00000003 l00001224
// DataOut: a2 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x000000A8 a5:fp - 0x00000004 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001220:
	word32 d4_1702
	word32 a3_1705
	d2_1708 = fn00002376(d2_1708, dwArg04, a2, a4_111, fp - 0x00000004, out d4_1702, out d7_1703, out a2, out a3_1705, out a4_111, out a5_1707)
// DataOut: a2 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:3 a0:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a3:<invalid> d6:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):a4 + 5 -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001224:
	word32 a3_116 = Mem0[a5_1707 + 12:word32]
	word32 a0_93 = Mem0[a3_116 + 4:word32]
// DataOut: a0 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a3:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):a4 + 5 -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000122C:
	a0_93 = a0_1739 + 0x00000001
	word32 a0_1739 = a0_93
	branch Mem0[a0_1739:byte] != 0x00 l0000122C
// DataOut: a0 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):a4 + 5 -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001230:
	word32 d1_105 = 1
	branch a0_93 - 0x00000001 - Mem0[a3_116 + 4:word32] <= 0x00000001 l00001246
// DataOut: a2 a3 a4 a5 a7 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):a4 + 5 -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000123E:
	Mem1688[fp - 0x000000C8:word32] = 1
	word32 d2_1691
	word32 d4_1692
	word32 d5_1693
	word32 d6_1694
	word32 a1_1695
	word32 a5_1699
	fn00002322(d2_1708, d7_1703, a2, a3_116, a4_111, a5_1707, wArg02, out d1_105, out d2_1691, out d4_1692, out d5_1693, out d6_1694, out a1_1695, out a2, out a3_116, out a4_111, out a5_1699)
	a7_117 = fp - 0x000000C4
// DataOut: a2 a3 a4 a7 d0 d1 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:1 d6:<invalid> d5:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):a4 + 5 -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001246:
	word32 a7_123 = a7_117 - 0x00000004
	Mem125[a7_123:word32] = (int32) (int16) (int16) Mem0[Mem0[a3_116 + 4:word32]:byte]
	Mem128[a7_123 - 0x00000004:word32] = a4_111 + 1588
	word32 d4_132
	word32 d2_131
	word32 a5_135
	word32 a4_134
	word32 a3_133
	word32 d0_136 = fn00001AFA(d1_105, d7_1703, a2, a4_111, dwArg00, bArg07, out d2_131, out d4_132, out a3_133, out a4_134, out a5_135)
	Mem139[a4_134 + 8916:word32] = d0_136
	word32 a7_137 = a7_123 + 0x00000004
	branch d0_136 <= 0x00000002 l00001270
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001266:
	Mem1673[a7_123:word32] = 0x00000001
	word32 d1_1674
	word32 d4_1676
	word32 d5_1677
	word32 d6_1678
	word32 a1_1679
	fn00002322(d2_131, d7_1703, a2, a3_133, a4_134, a5_135, wArg02, out d1_1674, out d2_131, out d4_1676, out d5_1677, out d6_1678, out a1_1679, out a2, out a3_133, out a4_134, out a5_135)
	a7_137 = a7_123 + 0x0004
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:2 a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001270:
	word32 a0_156 = Mem139[a3_133 + 8:word32]
// DataOut: a0 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001274:
	a0_156 = a0_1740 + 0x00000001
	word32 a0_1740 = a0_156
	branch Mem139[a0_1740:byte] != 0x00 l00001274
// DataOut: a0 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001278:
	word32 d1_1660 = 1
	branch a0_156 - 0x00000001 - Mem139[a3_133 + 8:word32] <= 0x00000001 l00001290
// DataOut: a2 a3 a4 a5 a7 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001286:
	word32 a7_1658 = a7_137 - 0x00000004
	Mem1659[a7_1658:word32] = 0x00000002
	word32 d2_1661
	word32 d4_1662
	word32 d5_1663
	word32 d6_1664
	word32 a1_1665
	word32 a5_1669
	fn00002322(d2_131, d7_1703, a2, a3_133, a4_134, a5_135, wArg02, out d1_1660, out d2_1661, out d4_1662, out d5_1663, out d6_1664, out a1_1665, out a2, out a3_133, out a4_134, out a5_1669)
	a7_137 = a7_1658 + 0x0004
// DataOut: a2 a3 a4 a7 d0 d1 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:1 a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001290:
	word32 a7_186 = a7_137 - 0x00000004
	Mem188[a7_186:word32] = (int32) (int16) (int16) Mem139[Mem139[a3_133 + 8:word32]:byte]
	Mem191[a7_186 - 0x00000004:word32] = a4_134 + 1592
	word32 d4_193
	word32 a3_1640
	word32 d2_1577
	word32 a4_1482
	word32 a5_1483
	word32 d0_197 = fn00001AFA(d1_1660, d7_1703, a2, a4_134, dwArg00, bArg07, out d2_1577, out d4_193, out a3_1640, out a4_1482, out a5_1483)
	Mem200[a4_1482 + 8920:word32] = d0_197
	word32 a7_1657 = a7_186 + 0x00000004
	branch d0_197 <= 0x00000005 l000012BA
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000012B0:
	Mem1645[a7_186:word32] = 0x00000002
	word32 d1_1646
	word32 d4_1648
	word32 d5_1649
	word32 d6_1650
	word32 a1_1651
	fn00002322(d2_1577, d7_1703, a2, a3_1640, a4_1482, a5_1483, wArg02, out d1_1646, out d2_1577, out d4_1648, out d5_1649, out d6_1650, out a1_1651, out a2, out a3_1640, out a4_1482, out a5_1483)
	a7_1657 = a7_186 + 0x0004
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:5 a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000012BA:
	word32 a0_219 = Mem200[a4_1482 + 1142 + (Mem200[a4_1482 + 8920:word32] << 0x00000002):word32]
	word32 a1_220 = a4_1482 + 14496
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000012CC:
	byte v39_223 = Mem200[a0_219:byte]
	Mem226[a1_220:byte] = v39_223
	a0_219 = a0_219 + 0x00000001
	a1_220 = a1_220 + 0x00000001
	branch v39_223 != 0x00 l000012CC
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000012D0:
	word32 a7_230 = a7_1657 - 0x00000004
	Mem231[a7_230:word32] = a4_1482 + 1600
	Mem233[a7_230 - 0x00000004:word32] = a4_1482 + 14496
	word32 a1_234
	fn00007B74(dwArg00, dwArg04, out a1_234)
	word32 a7_1584 = a7_230 + 0x00000004
	word32 d4_1637 = d7_1703 - 0x00000003
	word32 d7_1484 = 3
	branch d4_1637 != 0x00000000 l000012EC
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000012E8:
	word32 a2_1639
	d2_1577 = fn00002376(d2_1577, 3, a2, a4_1482, a5_1483, out d4_1637, out d7_1484, out a2_1639, out a3_1640, out a4_1482, out a5_1483)
// DataOut: a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:3 d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000012EC:
	Mem253[a4_1482 + 8912:word32] = 0
	Mem255[a4_1482 + 8936:word32] = 0
	Mem258[a4_1482 + 9964:word16] = 0x0000
	Mem260[a4_1482 + 8932:word32] = 0
	Mem262[a4_1482 + 9966:word16] = 0x0000
	Mem264[a4_1482 + 8928:word32] = 0
	Mem266[a4_1482 + 8904:word32] = 0x00003000
	Mem268[a4_1482 + 10000:word16] = 0xFFFF
	Mem271[a4_1482 + 8924:word32] = 1
	Mem272[a4_1482 + 14364:byte] = 0x00
	word32 a2_1481 = a3_1640 + 12
// DataOut: a2 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001494:
	word32 a3_1510 = Mem272[a2_1481:word32]
	byte v52_298 = Mem272[a3_1510:byte]
	word32 d1_300 = 45
	branch v52_298 == 0x2D l00001328
// DataOut: a2 a3 a4 a5 a7 d0 d1 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014A0:
	d1_300 = 47
	branch v52_298 == 0x2F l00001328
// DataOut: a2 a3 a4 a5 a7 d0 d1 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:45 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001328:
	word32 a7_310 = a7_1584 - 0x00000004
	Mem312[a7_310:word32] = (int32) (int16) (int16) Mem272[a3_1510 + 1:byte]
	Mem315[a7_310 - 0x00000004:word32] = a4_1482 + 1602
	word32 a3_318
	word32 d4_317
	word32 d0_321 = fn00001AFA(d1_300, d7_1484, a2_1481, a4_1482, dwArg00, bArg07, out d2_1577, out d4_317, out a3_318, out a4_1482, out a5_1483)
	a7_1584 = a7_310 + 0x00000004
	word32 d6_323 = d0_321
	branch d0_321 < 0x00000009 l0000134E
// DataOut: a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001344:
	Mem458[a7_310:word32] = 0x00000003
	word32 d1_459
	word32 d5_462
	word32 a1_464
	fn00002322(d2_1577, d7_1484, a2_1481, a3_318, a4_1482, a5_1483, wArg02, out d1_459, out d2_1577, out d4_317, out d5_462, out d6_323, out a1_464, out a2_1481, out a3_318, out a4_1482, out a5_1483)
	a7_1584 = a7_310 + 0x0004
// DataOut: a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:9 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000134E:
	branch d6_323 - 6 >= 0x00000000 l00001386
// DataOut: a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001354:
	word32 a0_402 = Mem315[a2_1481:word32]
// DataOut: a0 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:6 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001356:
	a0_402 = a0_1741 + 0x00000001
	word32 a0_1741 = a0_402
	branch Mem315[a0_1741:byte] != 0x00 l00001356
// DataOut: a0 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:6 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000135A:
	branch (word16) (a0_402 - 0x00000001 - Mem315[a2_1481:word32]) - 0x0002 != 0x0000 l0000137E
// DataOut: a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:6 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000137E:
	Mem455[a5_1483 + -34:word32] = Mem315[a2_1481:word32] + 0x00000002
// DataOut: a2 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:6 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001364:
	d7_1484 = d7_1484 + 0x00000001
	d4_317 = d4_317 - 0x00000001
	a2_1481 = a2_1481 + 0x00000004
	branch d4_317 != 0x00000000 l00001376
// DataOut: a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:6 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000136C:
	word32 a7_437 = a7_1584 - 0x00000004
	Mem438[a7_437:word32] = 0x00000003
	word32 d1_440
	word32 d5_443
	word32 a1_445
	word32 a3_447
	fn00002322(d2_1577, d7_1484, a2_1481, a3_318, a4_1482, a5_1483, wArg02, out d1_440, out d2_1577, out d4_317, out d5_443, out d6_323, out a1_445, out a2_1481, out a3_447, out a4_1482, out a5_1483)
	a7_1584 = a7_437 + 0x0004
// DataOut: a2 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:6 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001376:
	Mem435[a5_1483 + -34:word32] = Mem315[a2_1481:word32]
// DataOut: a2 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001386:
	branch d6_323 - 0x00000009 >=u 0x00000000 l0000148E
// DataOut: a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000148E:
	d7_1484 = d7_1484 + 0x00000001
	d4_1637 = d4_317 - 0x00000001
	a2_1481 = a2_1481 + 0x00000004
// DataOut: a2 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001396:
	word32 d0_368 = DPB(d6_323, Mem315[0x000013A0 + DPB(d6_323, (word16) d6_323 + (word16) d6_323, 0):word16], 0)
	word32 a7_372
	word32 a5_373
	word32 a4_374
	byte CVZN_375
	byte C_376
	word32 a3_377
	word32 a2_378
	word32 d7_379
	word32 d6_380
	word32 d5_381
	word32 d4_382
	word32 d2_383
	word32 d0_384
	byte VN_385
	word32 a0_386
	byte ZN_387
	byte V_388
	byte Z_389
	byte CVZNX_390
	word32 d1_391
	byte VZN_392
	word32 a1_393
	byte N_394
	byte VZ_395
	byte CZ_396
	word32 a6_397
	call 0x000013A2 + d0_368 (retsize: 4; depth: 4)
		uses: a0_344,a1_349,a2_356,a3_359,a4_350,a5_357,a6,a7_358,C_363,CVZN_369,CVZNX_366,CZ_327,d0_368,d1_348,d2_351,d4_352,d5_353,d6_354,d7_355,dwLoc04_4,dwLocAC_51,dwLocB0_54,dwLocB4_57,dwLocB8_60,dwLocBC_63,dwLocC0_66,dwLocC4_69,dwLocC8_74,dwLocCC_76,N_275,V_346,VN_342,VZ,VZN_204,Z_345,ZN_343
		defs: a0_386,a1_393,a2_378,a3_377,a4_374,a5_373,a6_397,a7_372,C_376,CVZN_375,CVZNX_390,CZ_396,d0_384,d1_391,d2_383,d4_382,d5_381,d6_380,d7_379,N_394,V_388,VN_385,VZ_395,VZN_392,Z_389,ZN_387
	return a2_378
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5

l000014A8:
	word32 d0_475 = Mem272[a4_1482 + 8924:word32]
	branch d0_475 == 0x00000001 l000014B6
// DataOut: a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014B6:
	word32 a7_1618 = a7_1584 - 0x00000004
	Mem1619[a7_1618:word32] = a4_1482 + 1632
	Mem1621[a7_1618 - 0x00000004:word32] = a4_1482 + 14496
	word32 a1_1622
	fn00007B74(dwArg00, dwArg04, out a1_1622)
	a7_1584 = a7_1618 + 0x00000004
	branch (int32) Mem1621[a4_1482 + 10000:word16] <= 0x00008000 l000014D8
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014D2:
	Mem1635[a4_1482 + 10000:word16] = 0x8000
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014D8:
	Mem1632[a4_1482 + 10002:word16] = 0x1000
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014B0:
	branch d0_475 == 0x00000002 l000014E0
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014E0:
	word32 a7_1600 = a7_1584 - 0x00000004
	Mem1601[a7_1600:word32] = a4_1482 + 1634
	Mem1603[a7_1600 - 0x00000004:word32] = a4_1482 + 14496
	word32 a1_1604
	fn00007B74(dwArg00, dwArg04, out a1_1604)
	a7_1584 = a7_1600 + 0x00000004
	branch Mem1603[a4_1482 + 10000:word16] <=u 0x1000 l000014FE
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014F8:
	Mem1616[a4_1482 + 10000:word16] = 0x1000
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014FE:
	Mem1613[a4_1482 + 10002:word16] = 0x00FF
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000014B4:
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001504:
	branch 5 - Mem272[a4_1482 + 8920:word32] != 0x00000000 l00001516
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000150C:
	Mem1592[a4_1482 + 8936:word32] = 0x00000000
	Mem1595[a4_1482 + 9964:word16] = 0x0000
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:5 a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001516:
	branch Mem272[a4_1482 + 9964:word16] == 0x0000 l0000152A
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000151C:
	word32 a7_1585 = a7_1584 - 0x00000004
	Mem1586[a7_1585:word32] = a4_1482 + 1636
	Mem1588[a7_1585 - 0x00000004:word32] = a4_1482 + 14496
	word32 a1_1589
	fn00007B74(dwArg00, dwArg04, out a1_1589)
	a7_1584 = a7_1585 + 0x00000004
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000152A:
	branch Mem272[a4_1482 + 8936:word32] == 0x00000000 l0000153E
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001530:
	word32 a7_1578 = a7_1584 - 0x00000004
	Mem1579[a7_1578:word32] = a4_1482 + 1638
	Mem1581[a7_1578 - 0x00000004:word32] = a4_1482 + 14496
	word32 a1_1582
	fn00007B74(dwArg00, dwArg04, out a1_1582)
	a7_1584 = a7_1578 + 0x00000004
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000153E:
	word32 a7_502 = a7_1584 - 0x00000004
	Mem503[a7_502:word32] = a4_1482 + 1640
	Mem505[a7_502 - 0x00000004:word32] = a4_1482 + 14496
	word32 a1_506
	fn00007B74(dwArg00, dwArg04, out a1_506)
	Mem509[a7_502 - 0x00000008:word32] = a4_1482 + 1646
	Mem511[a7_502 - 0x0000000C:word32] = a4_1482 + 14364
	word32 a1_512
	fn00007B74(dwArg00, dwArg04, out a1_512)
	word32 a7_1485 = a7_502 + 0x00000004
	branch d4_1637 != 0x00000000 l00001562
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000155E:
	word32 d4_1571
	d2_1577 = fn00002376(d2_1577, d7_1484, a2_1481, a4_1482, a5_1483, out d4_1571, out d7_1484, out a2_1481, out a3_1510, out a4_1482, out a5_1483)
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:47 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001562:
	word32 a0_1486 = Mem511[a2_1481:word32]
	branch 0x2E - Mem511[a0_1486:byte] != 0x00 l000015A6
// DataOut: a0 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000156A:
	a0_1486 = a0_1744 + 0x00000001
	word32 a0_1744 = a0_1486
	branch Mem511[a0_1744:byte] != 0x00 l0000156A
// DataOut: a0 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:46 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000156E:
	word32 a0_1494 = a0_1486 - 0x00000001 - Mem511[a2_1481:word32]
	word32 d0_1496 = a0_1494
	branch a0_1494 <= 0x00000004 l00001582
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:46 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000157A:
	Mem1557[a7_502:word32] = 4
	word32 d1_1559
	word32 d2_1560
	word32 d4_1561
	word32 d5_1562
	word32 d6_1563
	word32 a1_1564
	d0_1496 = fn00002322(d2_1577, d7_1484, a2_1481, a3_1510, a4_1482, a5_1483, wArg02, out d1_1559, out d2_1560, out d4_1561, out d5_1562, out d6_1563, out a1_1564, out a2_1481, out a3_1510, out a4_1482, out a5_1483)
	a7_1485 = a7_502 + 0x0004
// DataOut: a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:4 a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001582:
	word32 a0_1513 = Mem511[a2_1481:word32]
	word32 a1_1514 = a4_1482
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001588:
	byte v78_1517 = Mem511[a0_1513:byte]
	Mem1520[a1_1514:byte] = v78_1517
	a0_1513 = a0_1513 + 0x00000001
	a1_1514 = a1_1514 + 0x00000001
	branch v78_1517 != 0x00 l00001588
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000158C:
	word32 a7_1524 = a7_1485 - 0x00000004
	Mem1525[a7_1524:word32] = a4_1482
	word32 d4_1526
	word32 d7_1527
	word32 d2_1531 = fn00002394(d0_1496, d7_1484, a2_1481, a3_1510, a4_1482, a5_1483, dwArg00, out d4_1526, out d7_1527, out a2_1481, out a4_1482, out a5_1483)
	a7_1485 = a7_1524 + 0x0004
	d7_1484 = d7_1527 + 0x00000001
	branch d4_1526 != 0x00000001 l000015A0
// DataOut: a2 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000159C:
	word32 d4_1548
	fn00002376(d2_1531, d7_1527 + 0x00000001, a2_1481, a4_1482, a5_1483, out d4_1548, out d7_1484, out a2_1481, out a3_1510, out a4_1482, out a5_1483)
// DataOut: a2 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000015A0:
	Mem1546[a4_1482 + 8928:word32] = 0
// DataOut: a2 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000015A6:
	branch Mem511[a4_1482 + 8916:word32] != 0x00000000 l000015CC
// DataOut: a2 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000015AC:
	word32 d0_1468 = Mem511[a4_1482 + 8920:word32]
	branch Mem511[Mem511[a4_1482 + 1142 + (d0_1468 << 0x00000002):word32]:byte] == 0x00 l000015CC
// DataOut: a2 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000015BE:
	word32 a7_1477 = a7_1485 - 0x00000004
	Mem1478[a7_1477:word32] = a4_1482 + 14509
	Mem1480[a7_1477 - 0x00000004:word32] = a4_1482 + 14496
	d7_1484 = fn000019C8(d0_1468 << 0x00000002, d7_1484, a2_1481, a4_1482, a5_1483, out a2_1481, out a4_1482, out a5_1483)
	a7_1485 = a7_1477 + 0x00000004
// DataOut: a2 a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000015CC:
	word32 d2_558
	word32 a1_559
	word32 a4_561
	word32 a5_562
	word32 a2_1446
	word32 d0_563 = fn00001D64(d7_1484, a2_1481, a4_1482, a5_1483, out d2_558, out a1_559, out a2_1446, out a4_561, out a5_562)
	Mem564[a5_562 + -30:word16] = 0x0000
	Mem568[0x00000000:word32] = 0x00000000
	word32 d2_573
	word32 d5_574
	word32 d6_575
	word32 d7_1444
	word32 a5_1465
	word32 d0_578 = fn000077D4(d0_563, d2_558, a1_559, a4_561, dwArg00, out d2_573, out d5_574, out d6_575, out d7_1444, out a5_1465)
	word32 d2_582 = Mem568[a4_561 + 8920:word32]
	word32 a7_567 = a7_1485 - 0x00000004
	word32 d1_580 = Mem568[a4_561 + 8916:word32]
	Mem589[a7_567:word32] = Mem568[a4_561 + 1096 + (d2_582 << 0x00000002):word32]
	Mem594[a7_567 - 0x00000004:word32] = Mem589[a4_561 + 1030 + (d1_580 << 0x00000002):word32]
	Mem596[a7_567 - 0x00000008:word32] = a4_561 + 1660
	Mem598[a7_567 + 0x00000024:word32] = d0_578
	word32 a1_601
	word32 a4_1447
	word32 d2_1448
	fn00006170(d2_582 << 0x00000002, d7_1444, a2_1446, a4_561, a5_1465, dwArg00, out d2_1448, out a1_601, out a4_1447)
	word32 a7_1449 = a7_567 + 0x00000004
	word16 v92_605 = Mem598[a4_1447 + 9964:word16]
	branch v92_605 == 0x0000 l00001624
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001624:
	branch Mem598[a4_1447 + 8916:word32] != 0x00000000 l0000163A
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000162A:
	branch Mem598[a4_1447 + 8932:word32] == 0x00000000 l0000163A
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001630:
	Mem1459[a7_567:word32] = a4_1447 + 1696
	word32 d4_1461
	word32 a1_1462
	fn00006110(d2_1448, a2_1446, a3_1510, a4_1447, a5_1465, dwArg00, out d2_1448, out d4_1461, out a1_1462, out a2_1446, out a4_1447, out a5_1465)
	a7_1449 = a7_567 + 0x0004
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001612:
	Mem1440[a7_567:word32] = (int32) v92_605
	Mem1443[a7_567 - 0x00000004:word32] = a4_1447 + 1674
	word32 a1_1445
	d2_1448 = fn0000812A(d2_1448, d7_1444, a2_1446, a4_1447, dwArg00, out d7_1444, out a1_1445, out a2_1446, out a4_1447)
	a7_1449 = a7_567 + 0x00000004
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000163A:
	word32 a7_620 = a7_1449 - 0x00000004
	Mem621[a7_620:word32] = a4_1447 + 1710
	word32 a2_625
	word32 d4_623
	word32 a1_1076
	word32 a4_1077
	word32 d2_1080
	word32 a5_1022
	fn00006110(d2_1448, a2_1446, a3_1510, a4_1447, a5_1465, dwArg00, out d2_1080, out d4_623, out a1_1076, out a2_625, out a4_1077, out a5_1022)
	word32 d0_1096 = d7_1444 << 0x00000002
	word32 a7_1084 = a7_620 + 0x0004
	word32 a2_1063 = Mem621[a5_1022 + 12:word32] + d0_1096
	word32 d7_1061 = Mem621[a5_1022 + -28:word32]
// DataOut: a1 a2 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000190E:
	branch d4_623 != 0x00000000 l00001658
// DataOut: a1 a2 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001658:
	word32 a7_801 = a7_1084 - 0x00000004
	Mem802[a7_801:word32] = a5_1022 + -135
	Mem804[a7_801 - 0x00000004:word32] = 0x00001000
	Mem806[a7_801 - 0x00000008:word32] = a4_1077 + 10004
	Mem810[a7_801 - 0x0000000C:word32] = Mem806[a2_1063:word32]
	word32 a3_1098 = a4_1077 + 10004
	word32 d4_1081
	d0_1096 = fn00001B44(d2_1080, d7_1061, a2_1063, a4_1077, a5_1022, dwArg00, dwArg04, dwArg08, dwArg0C, out d2_1080, out d4_1081, out a1_1076, out a4_1077, out a5_1022)
	a7_1084 = a7_801 + 0x00000004
	branch d0_1096 != 0x00000000 l00001904
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001678:
	Mem1414[a7_801:word32] = Mem810[a2_1063:word32]
	Mem1417[a7_801 - 0x00000004:word32] = a4_1077 + 1714
	word32 d2_1418
	word32 a1_1419
	word32 a4_1420
	fn00006170(d2_1080, d7_1061, a2_1063, a4_1077, a5_1022, dwArg00, out d2_1418, out a1_1419, out a4_1420)
	Mem1423[a7_801 - 0x00000008:word32] = 0x00000001
	word32 d1_1424
	word32 d5_1427
	word32 a6_1432
	d0_1096 = fn00008A58(a2_1063, a3_1098, a4_1420, dwArg00, out d1_1424, out d2_1080, out d4_1081, out d5_1427, out a1_1076, out a2_1063, out a4_1077, out a5_1022, out a6_1432)
	a7_1084 = a7_801 + 0x00000004
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001904:
	branch Mem810[a3_1098:byte] != 0x00 l00001692
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001692:
	word32 a0_851 = a5_1022 + -135
	word32 a1_852 = a4_1077 + 14100
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000169A:
	byte v123_855 = Mem810[a0_851:byte]
	Mem858[a1_852:byte] = v123_855
	a0_851 = a0_851 + 0x00000001
	a1_852 = a1_852 + 0x00000001
	branch v123_855 != 0x00 l0000169A
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000169E:
	word32 a7_862 = a7_1084 - 0x00000004
	Mem864[a7_862:word32] = a3_1098
	Mem867[a7_862 - 0x00000004:word32] = a4_1077 + 14100
	word32 a1_868
	word32 d0_869 = fn00007B74(dwArg00, dwArg04, out a1_868)
	Mem871[a7_862 - 0x00000008:word32] = a4_1077 + 1730
	Mem873[a7_862 - 0x0000000C:word32] = a4_1077 + 14100
	word32 d7_874
	word32 a4_875
	word32 a5_876
	word32 d2_877 = fn00001EE2(d2_1080, d7_1061, a1_868, a2_1063, a3_1098, a4_1077, a5_1022, dwArg00, dwArg04, out d7_874, out a4_875, out a5_876)
	Mem879[a4_875 + 8876:word32] = d0_869
	Mem881[a7_862 - 0x00000010:word32] = 0x0000002E
	Mem884[a7_862 - 0x00000014:word32] = a3_1098
	word32 d0_886 = fn00007BCC(d0_869, dwArg00, dwArg04)
	word32 a7_1402 = a7_862 + 0x00000004
	branch d0_886 == 0x00000000 l000016F0
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000016CA:
	word32 a1_1380 = a4_875
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000016D0:
	a1_1380 = a1_1743 + 0x00000001
	word32 a1_1743 = a1_1380
	branch Mem884[a1_1743:byte] != 0x00 l000016D0
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000016D4:
	Mem1393[a7_862:word32] = a1_1380 - 0x00000001 - a4_875
	Mem1396[a7_862 - 0x00000004:word32] = a4_875
	Mem1399[a7_862 - 0x00000008:word32] = d0_886
	a7_1402 = a7_862 + 0x00000004
	branch fn00007A88(dwArg00, dwArg04, dwArg08) != 0x00000000 l000016F0
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000016EA:
	Mem1409[a4_875 + 8928:word32] = 1
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000016F0:
	word32 a1_1333
	word32 a7_1335
	word32 d0_1334
	branch 2 - Mem884[a4_875 + 8916:word32] == 0x00000000 l000016FE
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000016F8:
	branch Mem884[a4_875 + 8928:word32] == 0x00000000 l0000171A
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000171A:
	word32 a0_1340 = a4_875 + 14100
	word32 a1_1341 = a4_875 + 14232
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001722:
	byte v136_1344 = Mem884[a0_1340:byte]
	Mem1347[a1_1341:byte] = v136_1344
	a0_1340 = a0_1340 + 0x00000001
	a1_1341 = a1_1341 + 0x00000001
	branch v136_1344 != 0x00 l00001722
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001726:
	word32 a7_1351 = a7_1402 - 0x00000004
	Mem1352[a7_1351:word32] = 0x0000002E
	Mem1354[a7_1351 - 0x00000004:word32] = a4_875 + 14232
	d0_1334 = fn00007BCC(2, dwArg00, dwArg04)
	a7_1335 = a7_1351 + 0x00000004
	branch d0_1334 == 0x00000000 l00001744
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001744:
	Mem1373[a7_1351:word32] = a4_875
	Mem1375[a7_1351 - 0x00000004:word32] = a4_875 + 14232
	d0_1334 = fn00007B74(dwArg00, dwArg04, out a1_1333)
	a7_1335 = a7_1351 + 0x00000004
// DataOut: a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001738:
	word32 a0_1361 = a4_875
	a1_1333 = d0_1334
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000173E:
	byte v138_1365 = Mem1354[a0_1361:byte]
	Mem1368[a1_1333:byte] = v138_1365
	a0_1361 = a0_1361 + 0x00000001
	a1_1333 = a1_1333 + 0x00000001
	branch v138_1365 != 0x00 l0000173E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001742:
// DataOut: a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000016FE:
	word32 a0_1318 = a5_876 + -135
	word32 a1_1319 = a4_875 + 14232
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001706:
	byte v134_1322 = Mem884[a0_1318:byte]
	Mem1325[a1_1319:byte] = v134_1322
	a0_1318 = a0_1318 + 0x00000001
	a1_1319 = a1_1319 + 0x00000001
	branch v134_1322 != 0x00 l00001706
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000170A:
	word32 a7_1329 = a7_1402 - 0x00000004
	Mem1330[a7_1329:word32] = a4_875 + 1734
	Mem1332[a7_1329 - 0x00000004:word32] = a4_875 + 14232
	d0_1334 = fn00007B74(dwArg00, dwArg04, out a1_1333)
	a7_1335 = a7_1329 + 0x00000004
// DataOut: a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001752:
	word32 a7_907 = a7_1335 - 0x00000004
	Mem908[a7_907:word32] = a4_875 + 1748
	Mem910[a7_907 - 0x00000004:word32] = a4_875 + 14232
	word32 d7_911
	word32 a4_912
	word32 a5_1270
	word32 d2_914 = fn00001EE2(d2_877, d7_874, a1_1333, a2_1063, a3_1098, a4_875, a5_876, dwArg00, dwArg04, out d7_911, out a4_912, out a5_1270)
	Mem917[a4_912 + 8880:word32] = d0_1334
	Mem920[a7_907:word32] = a3_1098
	Mem924[a7_907 - 0x00000004:word32] = 20
	Mem927[a7_907 - 0x00000008:word32] = 20
	Mem930[a7_907 - 0x0000000C:word32] = a4_912 + 1752
	word32 a1_932
	word32 a4_1269
	word32 a2_1267
	word32 d7_1243
	word32 d2_1266 = fn0000812A(d2_914, d7_911, a2_1063, a4_912, dwArg00, out d7_1243, out a1_932, out a2_1267, out a4_1269)
	word32 a7_1313 = a7_907 + 0x00000004
	word32 d0_937 = Mem930[a4_1269 + 8916:word32]
	branch d0_937 == 0x00000000 l0000178A
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000178A:
	Mem1280[a7_907:word32] = a4_1269 + 1760
	Mem1282[a7_907 - 0x00000004:word32] = a4_1269 + 14364
	word32 d7_1283
	word32 a4_1284
	word32 a5_1285
	word32 d2_1286 = fn00001EE2(d2_1266, d7_1243, a1_932, a2_1267, a3_1098, a4_1269, a5_1270, dwArg00, dwArg04, out d7_1283, out a4_1284, out a5_1285)
	Mem1288[a4_1284 + 8884:word32] = d0_937
	word32 d2_1290
	word32 a2_1291
	word32 a4_1293
	word32 a5_1294
	d7_1243 = (int32) (word16) fn00002668(d2_1286, d7_1283, a2_1267, a4_1284, a5_1285, out d2_1290, out a2_1291, out a3_1098, out a4_1293, out a5_1294)
	Mem1300[a7_907 - 0x00000004:word32] = Mem1288[a4_1293 + 8884:word32]
	word32 d5_1303
	word32 a0_1304
	word32 a1_1305
	word32 d0_1309 = fn000089F8(d2_1290, a2_1291, a3_1098, a4_1293, a5_1294, dwArg00, out d2_1266, out d5_1303, out a0_1304, out a1_1305, out a2_1267, out a4_1269, out a5_1270)
	Mem1311[a7_907 - 0x00000008:word32] = a4_1269 + 14364
	fn00007F80(d0_1309, a4_1269, dwArg00)
	a7_1313 = a7_907 + 0x00000004
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001780:
	branch d0_937 == 0x00000001 l000017B8
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001784:
	branch d0_937 == 0x00000002 l000017B8
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000017B8:
	d7_1243 = (int32) (word16) fn000047E4(d2_1266, d7_1243, a2_1267, a4_1269, a5_1270, out d2_1266, out a2_1267, out a3_1098, out a4_1269, out a5_1270)
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001788:
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000017C0:
	word32 a7_951 = a7_1313 - 0x00000004
	Mem953[a7_951:word32] = Mem930[a4_1269 + 8876:word32]
	word32 d2_955
	word32 d5_956
	word32 a0_957
	word32 a1_958
	word32 a2_959
	word32 a4_960
	word32 a5_961
	fn000089F8(d2_1266, a2_1267, a3_1098, a4_1269, a5_1270, dwArg00, out d2_955, out d5_956, out a0_957, out a1_958, out a2_959, out a4_960, out a5_961)
	Mem964[a7_951:word32] = Mem953[a4_960 + 8880:word32]
	word32 d5_967
	word32 a0_968
	word32 a1_1155
	word32 a4_1156
	word32 d2_1158
	word32 a2_1162
	word32 a5_1164
	fn000089F8(d2_955, a2_959, a3_1098, a4_960, a5_961, dwArg00, out d2_1158, out d5_967, out a0_968, out a1_1155, out a2_1162, out a4_1156, out a5_1164)
	word32 a7_1190 = a7_951 + 0x0004
	branch 2 - Mem964[a4_1156 + 8916:word32] != 0x00000000 l000017E4
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000017DA:
	Mem1258[a7_951:word32] = a4_1156 + 14232
	fn00007F80(2, a4_1156, dwArg00)
	a7_1190 = a7_951 + 0x0004
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000017E4:
	branch d7_1243 - 1 > 0x00000000 l0000184C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000184C:
	word32 a7_1239 = a7_1190 - 0x00000004
	Mem1240[a7_1239:word32] = a4_1156 + 14100
	word32 d5_1241
	word32 d6_1242
	d2_1158 = fn000022E6(d2_1158, d7_1243, a1_1155, a2_1162, a4_1156, a5_1164, dwArg00, out d5_1241, out d6_1242, out d7_1243, out a2_1162, out a4_1156, out a5_1164)
	Mem1249[a4_1156 + 8892:word32] = 1
	Mem1251[a4_1156 + 8888:word32] = 1
	Mem1254[a7_1239 - 0x00000004:word32] = a4_1156 + 14232
	fn00007F80(1, a4_1156, dwArg00)
	a7_1190 = a7_1239 + 0x00000004
// DataOut: a2 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:1 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000017EA:
	word32 d1_1136 = Mem964[a4_1156 + 8916:word32]
	branch d1_1136 == 0x00000000 l000017F4
// DataOut: a0 a1 a2 a3 a4 a5 a7 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:1 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000017F0:
	branch d1_1136 != 0x00000001 l00001866
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:1 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000017F4:
	branch Mem964[a4_1156 + 8928:word32] == 0x00000000 l00001866
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:1 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000017FA:
	word32 a7_1145 = a7_1190 - 0x00000004
	Mem1146[a7_1145:word32] = 0x0000000D
	Mem1148[a7_1145 - 0x00000004:word32] = a4_1156 + 14100
	word32 d0_1149 = fn000093B4(a0_968, a4_1156, dwArg00, dwArg04)
	word32 a7_1150 = a7_1145 + 0x00000004
	word32 d0_1151 = d0_1149 + 0x00000001
	branch d0_1149 != 0x00000001 l00001816
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:1 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000180C:
	Mem1223[a7_1145:word32] = 0x00000009
	word32 d1_1224
	word32 d5_1227
	word32 d6_1228
	d0_1151 = fn00002322(d2_1158, d7_1243, a2_1162, a3_1098, a4_1156, a5_1164, wArg02, out d1_1224, out d2_1158, out d4_1081, out d5_1227, out d6_1228, out a1_1155, out a2_1162, out a3_1098, out a4_1156, out a5_1164)
	a7_1150 = a7_1145 + 0x0004
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001816:
	word32 a7_1166 = a7_1150 - 0x00000004
	Mem1167[a7_1166:word32] = a4_1156 + 14100
	word32 d0_1168 = fn00007F80(d0_1151, a4_1156, dwArg00)
	word32 a7_1169 = a7_1166 + 0x0004
	word32 d0_1170 = d0_1168 + 0x00000001
	branch d0_1168 != 0x00000001 l0000182E
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001824:
	Mem1209[a7_1166:word32] = 0x00000009
	word32 d1_1210
	word32 d5_1213
	word32 d6_1214
	d0_1170 = fn00002322(d2_1158, d7_1243, a2_1162, a3_1098, a4_1156, a5_1164, wArg02, out d1_1210, out d2_1158, out d4_1081, out d5_1213, out d6_1214, out a1_1155, out a2_1162, out a3_1098, out a4_1156, out a5_1164)
	a7_1169 = a7_1166 + 0x0004
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000182E:
	word32 a7_1185 = a7_1169 - 0x00000004
	Mem1186[a7_1185:word32] = a4_1156 + 14100
	Mem1188[a7_1185 - 0x00000004:word32] = a4_1156 + 14232
	a7_1190 = a7_1185 + 0x00000004
	branch fn00007F3C(d0_1170, a1_1155, a4_1156, dwArg00, dwArg04) != 0x00000001 l00001866
// DataOut: a2 a3 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001840:
	Mem1195[a7_1185:word32] = 0x00000009
	word32 d1_1196
	word32 d5_1199
	word32 d6_1200
	word32 a1_1201
	fn00002322(d2_1158, d7_1243, a2_1162, a3_1098, a4_1156, a5_1164, wArg02, out d1_1196, out d2_1158, out d4_1081, out d5_1199, out d6_1200, out a1_1201, out a2_1162, out a3_1098, out a4_1156, out a5_1164)
	a7_1190 = a7_1185 + 0x0004
// DataOut: a2 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001866:
	word32 d0_1000 = Mem964[a4_1156 + 8888:word32]
	branch Mem964[a4_1156 + 8892:word32] - d0_1000 <=u 0x00000000 l00001876
// DataOut: a2 a4 a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001872:
	Mem1134[a4_1156 + 8892:word32] = d0_1000
// DataOut: a2 a4 a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001876:
	word32 d1_1006 = Mem964[a4_1156 + 8892:word32]
	Mem1009[a5_1164 + -30:word16] = Mem964[a5_1164 + -30:word16] + 0x0001
	word32 a7_1011 = a7_1190 - 0x00000004
	Mem1013[a7_1011:word32] = d1_1006
	Mem1016[a7_1011 - 0x00000004:word32] = d0_1000
	word32 d2_1018
	word32 d5_1019
	word32 a2_1020
	word32 a4_1021
	word32 d1_1027 = (int32) (word16) fn00001AC0(d2_1158, d7_1243, a2_1162, a4_1156, a5_1164, dwArg00, dwArg04, out d2_1018, out d5_1019, out a2_1020, out a4_1021, out a5_1022)
	Mem1030[a7_1011 + 0x00000020:word32] = d1_1027
	word32 d1_1033
	word32 d0_1034 = fn00009174(d1_1027, 100, d2_1018, out d1_1033)
	word32 d1_1035 = Mem1030[a7_1011 + 0x00000020:word32]
	Mem1037[a7_1011 + 0x00000028:word32] = d0_1034
	word32 d1_1041
	fn00009174(d1_1035, 100, d2_1018, out d1_1041)
	Mem1045[a7_1011:word32] = d1_1041
	Mem1049[a7_1011 - 0x00000004:word32] = Mem1045[a7_1011 + 40:word32]
	Mem1053[a7_1011 - 0x00000008:word32] = Mem1049[a4_1021 + 8892:word32]
	Mem1057[a7_1011 - 0x0000000C:word32] = Mem1053[a4_1021 + 8888:word32]
	Mem1060[a7_1011 - 0x00000010:word32] = a4_1021 + 1764
	word32 a1_1062
	word32 a4_1064
	word32 d2_1065 = fn0000812A(d2_1018, d7_1243, a2_1020, a4_1021, dwArg00, out d7_1061, out a1_1062, out a2_1063, out a4_1064)
	branch 2 - Mem1060[a4_1064 + 8916:word32] == 0x00000000 l000018D2
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000018CE:
	branch d7_1061 == 0x00000000 l000018EA
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000018EA:
	Mem1124[a7_1011:word32] = a4_1064 + 1800
	fn00006110(d2_1065, a2_1063, a3_1098, a4_1064, a5_1022, dwArg00, out d2_1080, out d4_1081, out a1_1076, out a2_1063, out a4_1077, out a5_1022)
	a7_1084 = a7_1011 + 0x0004
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000018D2:
	Mem1110[a7_1011:word32] = Mem1060[a4_1064 + 1536 + (d7_1061 << 0x00000002):word32]
	Mem1113[a7_1011 - 0x00000004:word32] = a4_1064 + 1792
	fn00006170(d2_1065, d7_1061, a2_1063, a4_1064, a5_1022, dwArg00, out d2_1080, out a1_1076, out a4_1077)
	a7_1084 = a7_1011 + 0x00000004
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:2 a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000018F4:
	word32 a0_1085 = a3_1098
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000018F6:
	a0_1085 = a0_1742 + 0x00000001
	word32 a0_1742 = a0_1085
	branch Mem1060[a0_1742:byte] != 0x00 l000018F6
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000018FA:
	word32 a0_1094 = a0_1085 - 0x00000001 - a3_1098
	d0_1096 = a0_1094 + 0x00000001
	a3_1098 = a3_1098 + (a0_1094 + 0x00000001)
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000190A:
	d4_623 = d4_1081 - 0x00000001
	a2_1063 = a2_1063 + 0x00000004
// DataOut: a1 a2 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001914:
	Mem662[0x00000000:word32] = 0x00000000
	word32 a7_661 = a7_1084 - 0x00000004
	word32 d2_667
	word32 d5_668
	word32 d6_669
	word32 d7_670
	word32 a5_671
	word32 d0_673 = fn000077D4(d0_1096, d2_1080, a1_1076, a4_1077, dwArg00, out d2_667, out d5_668, out d6_669, out d7_670, out a5_671) - Mem662[a7_661 + 36:word32]
	Mem676[a7_661:word32] = d6_669
	Mem679[a7_661 - 0x00000004:word32] = d5_668
	Mem681[a7_661 + 0x00000020:word32] = d0_673
	word32 d2_683
	word32 d5_684
	word32 a2_685
	word32 a4_686
	word32 a5_687
	word32 d0_688 = fn00001AC0(d2_667, d7_670, a2_1063, a4_1077, a5_671, dwArg00, dwArg04, out d2_683, out d5_684, out a2_685, out a4_686, out a5_687)
	Mem697[a7_661 + 0x00000026:word32] = (int32) Mem681[a5_687 + -30:word16]
	word32 d2_694 = (int32) (word16) d0_688
	word32 d1_700
	Mem703[a7_661 + 0x0000002E:word32] = fn00009174(d2_694, 100, d2_694, out d1_700)
	word32 d1_707
	fn00009174(d2_694, 100, d2_694, out d1_707)
	word32 d0_709 = Mem703[a7_661 + 0x00000020:word32]
	Mem711[a7_661 + 0x0000002A:word32] = d1_707
	word32 d1_714
	fn00009174(d0_709, 0x00015180, d2_694, out d1_714)
	word32 d1_719
	Mem722[a7_661 + 0x00000032:word32] = fn00009174(d1_714, 0x00000E10, d2_694, out d1_719)
	word32 d1_726
	fn00009174(Mem722[a7_661 + 0x00000020:word32], 0x00000E10, d2_694, out d1_726)
	word32 d1_731
	Mem734[a7_661 + 0x00000036:word32] = fn00009174(d1_726, 60, d2_694, out d1_731)
	word32 d1_738
	fn00009174(Mem734[a7_661 + 0x00000020:word32], 60, d2_694, out d1_738)
	Mem741[a7_661 - 0x00000004:word32] = d1_738
	Mem745[a7_661 - 0x00000008:word32] = Mem741[a7_661 + 0x00000036:word32]
	Mem749[a7_661 - 0x0000000C:word32] = Mem745[a7_661 + 0x00000032:word32]
	Mem753[a7_661 - 0x00000010:word32] = Mem749[a7_661 + 0x0000002A:word32]
	Mem757[a7_661 - 0x00000014:word32] = Mem753[a7_661 + 0x0000002E:word32]
	Mem760[a7_661 - 0x00000018:word32] = d6_669
	Mem763[a7_661 - 0x0000001C:word32] = d5_684
	Mem765[a7_661 - 0x00000020:word32] = a4_686 + 1864
	Mem767[a7_661 - 0x00000024:word32] = 0x00000009
	Mem771[a7_661 - 0x00000028:word32] = Mem767[a7_661 + 0x00000026:word32]
	Mem774[a7_661 - 0x0000002C:word32] = a4_686 + 1802
	word32 d7_775
	word32 a1_776
	word32 a2_777
	word32 a4_778
	fn0000812A(d2_694, d7_670, a2_685, a4_686, dwArg00, out d7_775, out a1_776, out a2_777, out a4_778)
	word32 a3_795
	*a3Out = Mem774[a5_687 + 0xFFFFFF58:word32]
	return Mem774[a5_687 + 0xFFFFFF54:word32]
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5

fn000011F8_exit:
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -204(fp):a4 + 1584 -200(fp):<invalid> -196(fp):d2 -192(fp):d4 -188(fp):d5 -184(fp):d6 -180(fp):d7 -176(fp):a2 -172(fp):a3 -4(fp):a5



word32 fn000019C8(word32 d0, word32 d7, word32 a2, word32 a4, word32 a5, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d0 d7
// LiveOut: a2 a4 a5 a7 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn000019C8_entry:
// DataOut: a2 a4 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000019C8:
	branch fp - 0x0000000C - Mem0[a4 + 8220:word32] <u 0x00000000 l000019D0_thunk_fn000076EC
// DataOut: a2 a4 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l000019D0_thunk_fn000076EC:
	word32 d1_271
	word32 d2_272
	word32 d4_273
	word32 d5_274
	word32 d6_275
	word32 d7_276
	word32 a1_277
	word32 a2_278
	word32 a3_279
	word32 a4_280
	word32 a5_281
	word32 a6_282
	fn000076EC(d7, a2, a4, fp - 0x00000004, out d1_271, out d2_272, out d4_273, out d5_274, out d6_275, out d7_276, out a1_277, out a2_278, out a3_279, out a4_280, out a5_281, out a6_282)
	return d7_276
// DataOut: a2 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 -4(fp):a5

l000019D4:
	word32 d2_68 = ((int32) (word16) (int16) Mem0[a4 + 2042:byte] << 0x00000008) + (int32) Mem0[a4 + 2043:byte]
	word32 a5_93
	word32 a4_94 = fn00001E98(d2_68, d7, a2, a4, fp - 0x00000004, DPB(__swap(((int32) (word16) (int16) Mem0[a4 + 2040:byte] << 0x00000008) + (int32) Mem0[a4 + 2041:byte]), 0x0000, 0) + d2_68 + 32, out a5_93)
	Mem98[fp - 0x00000020:word32] = 32
	Mem101[fp - 0x00000024:word32] = a4_94 + 2036
	fn00005C1C(dwArg00, dwArg04)
	word32 a3_119 = 32
// DataOut: a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A6A:
	word32 a0_120 = Mem101[a5_93 + 8:word32]
	word32 a1_121 = a3_119
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> d7:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A70:
	byte v32_130 = Mem101[a0_120:byte]
	a0_120 = a0_120 + 0x00000001
	a1_121 = a1_121 + 0x00000001
	branch v32_130 - Mem101[a1_121:byte] != 0x00 l00001A28
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A76:
	branch v32_130 != 0x00 l00001A70
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): Z
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A7A:
	branch v32_130 != 0x00 l00001A28
// DataOut: a2 a3 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A28:
	word32 a0_145 = a3_119
// DataOut: a0 a2 a3 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A2A:
	a0_145 = a0_291 + 0x00000001
	word32 a0_291 = a0_145
	branch Mem101[a0_291:byte] != 0x00 l00001A2A
// DataOut: a0 a2 a3 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A2E:
	byte v47_157 = Mem101[a3_119 + 1 + ((a0_145 - 0x00000001) - a3_119):byte]
	word32 a0_160 = a3_119
// DataOut: a0 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A3A:
	a0_160 = a0_292 + 0x00000001
	word32 a0_292 = a0_160
	branch Mem101[a0_292:byte] != 0x00 l00001A3A
// DataOut: a0 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A3E:
	byte v49_172 = Mem101[a3_119 + 2 + ((a0_160 - 0x00000001) - a3_119):byte]
	word32 a0_175 = a3_119
// DataOut: a0 a2 a3 a4 a5 a7 d0 d1 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A4A:
	a0_175 = a0_293 + 0x00000001
	word32 a0_293 = a0_175
	branch Mem101[a0_293:byte] != 0x00 l00001A4A
// DataOut: a0 a2 a3 a4 a5 a7 d0 d1 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A4E:
	a3_119 = a3_119 + (((((int32) ((word16) ((int16) v47_157)) << 0x00000008) + (int32) v49_172) + ((a0_175 - 0x00000001) - a3_119)) + 0x00000003)
// DataOut: a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A7C:
	word32 a0_208 = a3_119
// DataOut: a0 a2 a3 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A7E:
	a0_208 = a0_294 + 0x00000001
	word32 a0_294 = a0_208
	branch Mem101[a0_294:byte] != 0x00 l00001A7E
// DataOut: a0 a2 a3 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001A82:
	word32 a0_221 = a3_119 + (((a0_208 - 0x00000001) - a3_119) + 0x00000001)
	word32 d2_234 = ((int32) (word16) (int16) Mem101[a0_221:byte] << 0x00000008) + (int32) Mem101[a0_221 + 1:byte]
	Mem239[fp - 0x00000020:word32] = d2_234 + 0x00000002
	Mem243[fp - 0x00000024:word32] = Mem239[a5_93 + 12:word32]
	Mem246[fp - 0x00000028:word32] = a0_221
	fn000082E4(dwArg00, dwArg04, dwArg08)
	Mem250[fp - 0x00000028:word32] = 32
	word32 a4_252
	word32 a5_253
	word32 d7_254 = fn00001EC8(d2_234 + 0x00000002, d7, 32, a4_94, a5_93, dwArg00, out a4_252, out a5_253)
	word32 a2_260
	*a2Out = Mem250[a5_253 + 0xFFFFFFF0:word32]
	word32 a5_265
	*a5Out = Mem250[a5_253:word32]
	return d7_254
// DataOut: a2 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -36(fp):a4 + 2036 -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5

fn000019C8_exit:
// DataOut: a2 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d4:<invalid> a4:<invalid> -40(fp):32 -36(fp):<invalid> -32(fp):<invalid> -28(fp):d2 -24(fp):d3 -20(fp):a2 -16(fp):a3 -4(fp):a5



word32 fn00001AC0(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & d2Out, ptr32 & d5Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a2 a4 a5 d0 d2 d5
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00001AC0_entry:
	*a4Out = a4
	*d2Out = d2
	*d5Out = d5
	*a2Out = a2
	*a5Out = a5
// DataOut: a2 a4 a5 d2 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8) Stack +0004(32) Stack +0008(32)

l00001AC0:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l00001AC4_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00001AC4_thunk_fn000076EC:
	word32 d1_90
	word32 d2_91
	word32 d4_92
	word32 d5_93
	word32 d6_94
	word32 d7_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a5_100
	word32 a6_101
	return fn000076EC(d7, a2, a4, a5, out d1_90, out d2_91, out d4_92, out d5_93, out d6_94, out d7_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_100, out a6_101)
// DataOut: a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001AC8:
	word32 d0_54
	branch dwArg04 == 0x00000000 l00001ADC
// DataOut: a2 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001AD8:
	branch dwArg08 != 0x00000000 l00001AE0
// DataOut: a2 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> d6:<invalid> -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001AE0:
	word32 d1_88
	d0_54 = fn000091A6(fn00009154(dwArg04 - dwArg08, 0x00002710), dwArg04, d2, out d1_88)
// DataOut: a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> d6:<invalid> -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001ADC:
	d0_54 = 0
// DataOut: a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> d6:<invalid> -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001AF4:
	return d0_54
// DataOut: a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> -8(fp):d6 -4(fp):d7

fn00001AC0_exit:
// DataOut: a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):d6 -4(fp):d7



word32 fn00001AFA(word32 d1, word32 d7, word32 a2, word32 a4, word32 dwArg04, byte bArg0B, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 d1 d7
// LiveOut: a3 a4 a5 a7 d0 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 d7
// Stack args: Stack +0004(32) Stack +000B(32)
fn00001AFA_entry:
	*a4Out = a4
	*d2Out = d2
	*d4Out = d4
// DataOut: a2 a3 a4 a5 d1 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +000B(32)

l00001AFA:
	branch fp - 0x00000008 - Mem0[a4 + 8220:word32] <u 0x00000000 l00001B02_thunk_fn000076EC
// DataOut: a2 a3 a4 a5 d1 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +000B(32)

l00001B02_thunk_fn000076EC:
	word32 d1_100
	word32 d2_101
	word32 d4_102
	word32 d5_103
	word32 d6_104
	word32 d7_105
	word32 a1_106
	word32 a2_107
	word32 a3_108
	word32 a4_109
	word32 a5_110
	word32 a6_111
	return fn000076EC(d7, a2, a4, fp - 0x00000004, out d1_100, out d2_101, out d4_102, out d5_103, out d6_104, out d7_105, out a1_106, out a2_107, out a3_108, out a4_109, out a5_110, out a6_111)
// DataOut: a3 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a5:fp - 0x00000004 -4(fp):a5

l00001B06:
	word32 a2_62 = dwArg04
	byte v15_63 = (byte) fn000077BC((int32) (int16) (int16) bArg0B)
// DataOut: a2 a3 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a5:fp - 0x00000004 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l00001B2A:
	byte v16_70 = Mem0[a2_62:byte]
	branch v16_70 == 0x00 l00001B36
// DataOut: a2 a3 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> -24(fp):<invalid> -20(fp):d7 -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l00001B2E:
	branch v16_70 - v15_63 != 0x00 l00001B28
// DataOut: a2 a3 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> -24(fp):<invalid> -20(fp):d7 -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l00001B28:
	a2_62 = a2_62 + 0x00000001
// DataOut: a2 a3 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> -24(fp):<invalid> -20(fp):d7 -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l00001B36:
	word32 a3_84
	*a3Out = a3
	word32 a5_86
	*a5Out = a5
	return a2_62 - dwArg04
// DataOut: a3 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> -24(fp):<invalid> -20(fp):d7 -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5

fn00001AFA_exit:
// DataOut: a3 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):d7 -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5



word32 fn00001B44(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a1 a4 a5 a7 d0 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 a3 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn00001B44_entry:
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00001B44:
	branch fp - 0x0000002C - Mem0[a4 + 8220:word32] <u 0x00000000 l00001B4C_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00001B4C_thunk_fn000076EC:
	word32 d1_229
	word32 d2_230
	word32 d4_231
	word32 d5_232
	word32 d6_233
	word32 d7_234
	word32 a1_235
	word32 a2_236
	word32 a3_237
	word32 a4_238
	word32 a5_239
	word32 a6_240
	return fn000076EC(d7, a2, a4, fp - 0x00000004, out d1_229, out d2_230, out d4_231, out d5_232, out d6_233, out d7_234, out a1_235, out a2_236, out a3_237, out a4_238, out a5_239, out a6_240)
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 -4(fp):a5

l00001B50:
	word32 a2_156 = dwArg08
	word32 d4_95
	word32 a1_97
	word32 d2_143
	word32 a4_145
	word32 a6_101
	word32 d7_155
	word32 a3_157
	word32 a5_100
	word32 d0_102 = fn00001BC2(d2, dwArg0C, dwArg08, a4, dwArg04, dwArg10, out d2_143, out d4_95, out d7_155, out a1_97, out a3_157, out a4_145, out a5_100, out a6_101)
	word32 a7_103 = fp - 0x00000040
	branch d0_102 == 0x00000000 l00001BBA
// DataOut: a1 a2 a3 a4 a5 a6 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 -4(fp):a5
// LocalsOut: Local -0004(32)

l00001B84:
	word32 d6_139 = 0
// DataOut: a2 a3 a4 a5 a6 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00001B86:
	word32 a0_160 = a5_100 + -39
	word32 a1_161 = a0_160
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00001B8C:
	a1_161 = a1_262 + 0x00000001
	word32 a1_262 = a1_161
	branch Mem0[a1_262:byte] != 0x00 l00001B8C
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00001B90:
	word32 a1_170 = a1_161 - 0x00000001 - a0_160
	*a1Out = a1_170
	word32 d7_174 = d7_155 - (a1_170 + 0x00000001)
	branch d7_174 < 0x00000000 l00001BB6
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00001B9E:
	word32 a1_199 = a2_156
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 d2 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00001BA2:
	byte v29_202 = Mem0[a0_160:byte]
	Mem205[a1_199:byte] = v29_202
	a0_160 = a0_160 + 0x00000001
	a1_199 = a1_199 + 0x00000001
	branch v29_202 != 0x00 l00001BA2
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 d2 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00001BA6:
	word32 a7_210 = a7_103 - 0x00000004
	Mem211[a7_210:word32] = a5_100 + -39
	a7_103 = a7_210 + 0x0004
	word32 d2_256 = d2_143
	word32 a4_257 = a4_145
	word32 a6_258 = a6_101
	word32 a3_260 = a3_157
	word32 d4_214
	word32 a1_217
	branch fn00001C2A(d2_256, d7_174, a0_160, a1_199, a2_156 + (a1_170 + 0x00000001), a3_260, a4_257, a5_100, a6_258, dwArg00, out d2_143, out d4_214, out d6_139, out d7_155, out a1_217, out a2_156, out a3_157, out a4_145, out a5_100, out a6_101) != 0x00000000 l00001B86
// DataOut: a1 a2 a3 a4 a5 a6 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00001BB6:
	Mem194[a2_156:byte] = 0x00
	d0_102 = d6_139
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5

l00001BBA:
	word32 a5_136
	*a5Out = Mem0[a5_100:word32]
	return d0_102
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5

fn00001B44_exit:
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):fp + 0xFFFFFFD5 -64(fp):d5 -60(fp):d6 -56(fp):d7 -52(fp):a2 -48(fp):a3 -43(fp):<invalid> -42(fp):<invalid> -4(fp):a5



word32 fn00001BC2(word32 d2, word32 d7, word32 a2, word32 a4, word32 dwArg04, word32 dwArg08, ptr32 & d2Out, ptr32 & d4Out, ptr32 & d7Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 d2 d7
// LiveOut: a1 a3 a4 a5 a6 a7 d0 d2 d4 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2
// Stack args: Stack +0004(32) Stack +0008(32)
fn00001BC2_entry:
	*a4Out = a4
	*d2Out = d2
	*d4Out = d4
	*d7Out = d7
	*a6Out = a6
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32) Stack +0008(32)

l00001BC2:
	branch fp - 0x00000004 - Mem0[a4 + 8220:word32] <u 0x00000000 l00001BCA_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32) Stack +0008(32)

l00001BCA_thunk_fn000076EC:
	word32 d1_132
	word32 d2_133
	word32 d4_134
	word32 d5_135
	word32 d6_136
	word32 d7_137
	word32 a1_138
	word32 a2_139
	word32 a3_140
	word32 a4_141
	word32 a5_142
	word32 a6_143
	return fn000076EC(d7, a2, a4, fp - 0x00000004, out d1_132, out d2_133, out d4_134, out d5_135, out d6_136, out d7_137, out a1_138, out a2_139, out a3_140, out a4_141, out a5_142, out a6_143)
// DataOut: a1 a3 a4 a5 a6 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a5:fp - 0x00000004 -4(fp):a5

l00001BCE:
	word32 dwLoc10_124 = dwArg04
	word32 d0_62 = fn00007D30(dwArg08, dwArg04)
	branch d0_62 == 0x00000000 l00001BFC
// DataOut: a2 a3 a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a5:fp - 0x00000004 -4(fp):a5
// LocalsOut: fp(32) Local -0010(32) Local -0018(32)

l00001BE8:
	branch 0x3A - Mem0[(dwArg08 + -1) + d0_62:byte] == 0x00 l00001BFC
// DataOut: a2 a3 a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0010(32) Local -0018(32)

l00001BF0:
	word32 a1_129
	fn00007B74(dwArg08, a4 + 1866, out a1_129)
	dwLoc10_124 = a4 + 1866
// DataOut: a3 a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:58 a0:<invalid> d0:<invalid> a1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0010(32)

l00001BFC:
	word32 d0_103
	Mem72[0x00000000:word32] = 0x00000000
	word32 a1_80
	branch fn00008C08(d2, a4, fp - 0x00000004, a4 + 15392, dwArg04, dwLoc10_124, out a1_80) == 0x00000000 l00001C14
// DataOut: a1 a4 a5 a6 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:58 a1:<invalid> a0:<invalid> d0:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5

l00001C14:
	word32 a0_106 = a4 + 15400
	word32 a1_107 = Mem72[fp + 0x0000000C:word32]
// DataOut: a0 a1 a4 a5 a6 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d1:<invalid> a1:<invalid> a0:<invalid> d0:<invalid> d7:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -24(fp):a4 + 15392 -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5

l00001C1C:
	byte v23_110 = Mem72[a0_106:byte]
	Mem113[a1_107:byte] = v23_110
	a0_106 = a0_106 + 0x00000001
	a1_107 = a1_107 + 0x00000001
	*a1Out = a1_107
	branch v23_110 != 0x00 l00001C1C
// DataOut: a0 a1 a4 a5 a6 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d0:<invalid> d7:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -24(fp):a4 + 15392 -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5

l00001C20:
	d0_103 = 1
// DataOut: a1 a4 a5 a6 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d0:<invalid> d7:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -24(fp):a4 + 15392 -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5

l00001C10:
	d0_103 = 0
// DataOut: a1 a4 a5 a6 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d1:<invalid> a1:<invalid> a0:<invalid> d0:<invalid> d7:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -24(fp):a4 + 15392 -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5

l00001C22:
	word32 a3_94
	*a3Out = Mem72[fp - 0x00000008:word32]
	word32 a5_96
	*a5Out = Mem72[fp - 0x00000004:word32]
	return d0_103
// DataOut: a1 a3 a4 a5 a6 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d1:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -24(fp):a4 + 15392 -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5

fn00001BC2_exit:
// DataOut: a1 a3 a4 a5 a6 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d0:<invalid> a3:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -24(fp):a4 + 15392 -20(fp):<invalid> -16(fp):<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a5



word32 fn00001C2A(word32 d2, word32 d7, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg04, ptr32 & d2Out, ptr32 & d4Out, ptr32 & d6Out, ptr32 & d7Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 a4 a5 a6 d2 d7
// LiveOut: a1 a2 a3 a4 a5 a6 d0 d2 d4 d6 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7
fn00001C2A_entry:
	*a4Out = a4
	*d2Out = d2
	*a2Out = a2
	*a6Out = a6
	*d4Out = d4
	*d7Out = d7
// DataOut: a0 a1 a2 a3 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8)

l00001C2A:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l00001C2E_thunk_fn000076EC
// DataOut: a0 a1 a2 a3 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001C2E_thunk_fn000076EC:
	word32 d1_90
	word32 d2_91
	word32 d4_92
	word32 d5_93
	word32 d6_94
	word32 d7_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a5_100
	word32 a6_101
	return fn000076EC(d7, a2, a4, a5, out d1_90, out d2_91, out d4_92, out d5_93, out d6_94, out d7_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_100, out a6_101)
// DataOut: a1 a2 a3 a4 a5 a6 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001C32:
	word32 d0_66
	word32 d6_54
	word32 a1_55
	word32 a5_56
	branch fn00008DE8(d2, a0, a1, a2, a4, a5, a6, a4 + 15392, out d6_54, out a1_55, out a5_56) == 0x00000000 l00001C4A
// DataOut: a1 a2 a3 a4 a5 a6 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001C4A:
	word32 a0_77 = a4 + 15400
	word32 a1_78 = dwArg04
// DataOut: a0 a1 a2 a4 a5 a6 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a5:<invalid> d2:<invalid> d7:<invalid> a2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -8(fp):a4 + 15392 -4(fp):a3

l00001C50:
	byte v15_81 = Mem0[a0_77:byte]
	Mem84[a1_78:byte] = v15_81
	a0_77 = a0_77 + 0x00000001
	a1_78 = a1_78 + 0x00000001
	*a1Out = a1_78
	branch v15_81 != 0x00 l00001C50
// DataOut: a0 a1 a2 a4 a5 a6 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d0:<invalid> d1:<invalid> a5:<invalid> d2:<invalid> d7:<invalid> a2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -8(fp):a4 + 15392 -4(fp):a3

l00001C54:
	d0_66 = 1
// DataOut: a1 a2 a4 a5 a6 a7 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d0:<invalid> d1:<invalid> a5:<invalid> d2:<invalid> d7:<invalid> a2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -8(fp):a4 + 15392 -4(fp):a3

l00001C46:
	d0_66 = 0
// DataOut: a1 a2 a4 a5 a6 a7 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a5:<invalid> d2:<invalid> d7:<invalid> a2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -8(fp):a4 + 15392 -4(fp):a3

l00001C56:
	word32 a3_70
	*a3Out = Mem0[fp - 0x00000004:word32]
	return d0_66
// DataOut: a1 a2 a3 a4 a5 a6 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d2:<invalid> d7:<invalid> a2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -8(fp):a4 + 15392 -4(fp):a3

fn00001C2A_exit:
// DataOut: a1 a2 a3 a4 a5 a6 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> a5:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):a4 + 15392 -4(fp):a3



word32 fn00001D64(word32 d7, word32 a2, word32 a4, word32 a5, ptr32 & d2Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d7
// LiveOut: a1 a2 a4 a5 d0 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7 d4 d5 d6 d7
fn00001D64_entry:
	*a4Out = a4
	*d2Out = d2
	*a1Out = a1
	*a2Out = a2
	*a5Out = a5
// DataOut: a1 a2 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8)

l00001D64:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l00001D68_thunk_fn000076EC
// DataOut: a1 a2 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001D68_thunk_fn000076EC:
	word32 d1_133
	word32 d2_134
	word32 d4_135
	word32 d5_136
	word32 d6_137
	word32 d7_138
	word32 a1_139
	word32 a2_140
	word32 a3_141
	word32 a4_142
	word32 a5_143
	word32 a6_144
	return fn000076EC(d7, a2, a4, a5, out d1_133, out d2_134, out d4_135, out d5_136, out d6_137, out d7_138, out a1_139, out a2_140, out a3_141, out a4_142, out a5_143, out a6_144)
// DataOut: a1 a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001D6C:
	word32 d6_106 = 0
// DataOut: a1 a2 a4 a5 d0 d2 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001DAA:
	branch (word16) d6_106 - 0x0100 <u 0x0000 l00001D74
// DataOut: a1 a2 a4 a5 d0 d2 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 8940 d7:<invalid> -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001D74:
	word32 d4_121 = d6_106
	word32 d5_123 = 8
// DataOut: a1 a2 a4 a5 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 8940 d7:<invalid> -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001D96:
	branch (word16) d5_123 != 0x0000 l00001D7A
// DataOut: a1 a2 a4 a5 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 8940 d7:<invalid> -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001D7A:
	word32 d0_120
	word32 d0_110 = (int32) (word16) d4_121
	branch __btst((byte) d4_121, 0x0000) l00001D90
// DataOut: a1 a2 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 8940 d7:<invalid> -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001D90:
	d0_120 = d0_110 >> 0x00000001
// DataOut: a1 a2 a4 a5 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> d7:<invalid> a0:a4 + 8940 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001D88:
	d0_120 = DPB(d0_110 >> 0x00000001, (word16) (d0_110 >> 0x00000001) ^ 0xA001, 0)
// DataOut: a1 a2 a4 a5 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> d7:<invalid> a0:a4 + 8940 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001D92:
	d4_121 = d0_120
	d5_123 = DPB(d5_123, (word16) d5_123 - 0x0001, 0)
// DataOut: a1 a2 a4 a5 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> d7:<invalid> a0:a4 + 8940 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001D9A:
	word32 d0_100 = (int32) (word16) d6_106
	Mem104[a4 + d0_100 * 0x00000002:word16] = (word16) d4_121
	d0 = d0_100 * 0x00000002
	d6_106 = DPB(d6_106, (word16) d6_106 + 0x0001, 0)
// DataOut: a1 a2 a4 a5 d0 d2 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 8940 d7:<invalid> -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00001DB0:
	return d0
// DataOut: a1 a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d6:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 8940 d7:<invalid> -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

fn00001D64_exit:
// DataOut: a1 a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d6:<invalid> d4:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a2:<invalid> a4:<invalid> -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7



word32 fn00001E98(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, word32 dwArg04, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a4 a5
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7 d0 d7
// Stack args: Stack +0004(32)
fn00001E98_entry:
	*a5Out = a5
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8) Stack +0004(32)

l00001E98:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l00001E9C_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001E9C_thunk_fn000076EC:
	word32 d1_94
	word32 d2_95
	word32 d4_96
	word32 d5_97
	word32 d6_98
	word32 d7_99
	word32 a1_100
	word32 a2_101
	word32 a3_102
	word32 a4_103
	word32 a5_104
	word32 a6_105
	fn000076EC(d7, a2, a4, a5, out d1_94, out d2_95, out d4_96, out d5_97, out d6_98, out d7_99, out a1_100, out a2_101, out a3_102, out a4_103, out a5_104, out a6_105)
	return a4_103
// DataOut: a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001EA0:
	word32 d0_44 = fn0000833C(d2, a4, dwArg04)
	branch d0_44 != 0x00000000 l00001EC0
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001EB6:
	word32 d1_82
	word32 d2_83
	word32 d4_84
	word32 d5_85
	word32 d6_86
	word32 a1_87
	word32 a2_88
	word32 a3_89
	word32 a5_91
	fn00002322(d2, dwArg04, a2, d0_44, a4, a5, SLICE(0x00000005, word16, 16), out d1_82, out d2_83, out d4_84, out d5_85, out d6_86, out a1_87, out a2_88, out a3_89, out a4, out a5_91)
// DataOut: a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l00001EC0:
	return a4
// DataOut: a4 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3

fn00001E98_exit:
// DataOut: a4 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> a5:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3



word32 fn00001EC8(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, word32 dwArg04, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a4 a5 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7
// Stack args: Stack +0004(32)
fn00001EC8_entry:
	*a4Out = a4
	*a5Out = a5
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8) Stack +0004(32)

l00001EC8:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l00001ECC_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001ECC_thunk_fn000076EC:
	word32 d1_51
	word32 d2_52
	word32 d4_53
	word32 d5_54
	word32 d6_55
	word32 d7_56
	word32 a1_57
	word32 a2_58
	word32 a3_59
	word32 a4_60
	word32 a5_61
	word32 a6_62
	fn000076EC(d7, a2, a4, a5, out d1_51, out d2_52, out d4_53, out d5_54, out d6_55, out d7_56, out a1_57, out a2_58, out a3_59, out a4_60, out a5_61, out a6_62)
	return d7_56
// DataOut: a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001ED0:
	fn000087A0(d2, a4, dwArg04)
	return d7
// DataOut: a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00001EC8_exit:
// DataOut: a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> a5:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):a3



word32 fn00001EE2(word32 d2, word32 d7, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & d7Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a2 a3 a4 a5 d2 d7
// LiveOut: a4 a5 d2 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 a3 a7 d0
// Stack args: Stack +0004(32) Stack +0008(32)
fn00001EE2_entry:
	*a5Out = a5
// DataOut: a1 a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8) Stack +0004(32) Stack +0008(32)

l00001EE2:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l00001EE6_thunk_fn000076EC
// DataOut: a1 a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00001EE6_thunk_fn000076EC:
	word32 d1_100
	word32 d2_101
	word32 d4_102
	word32 d5_103
	word32 d6_104
	word32 d7_105
	word32 a1_106
	word32 a2_107
	word32 a3_108
	word32 a4_109
	word32 a5_110
	word32 a6_111
	fn000076EC(d7, a2, a4, a5, out d1_100, out d2_101, out d4_102, out d5_103, out d6_104, out d7_105, out a1_106, out a2_107, out a3_108, out a4_109, out a5_110, out a6_111)
	return d2_101
// DataOut: a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001EEA:
	word32 d7_54
	word32 a4_55
	word32 d2_53
	word32 d0_56 = fn00008830(d2, a1, dwArg08, a4, a5, dwArg04, dwArg08, out d2_53, out d7_54, out a4_55)
	branch d0_56 != 0x00000000 l00001F10
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00001F06:
	Mem85[fp - 0x0000000C:word32] = 0x00000006
	word32 d1_87
	word32 d4_89
	word32 d5_90
	word32 d6_91
	word32 a1_92
	word32 a2_93
	word32 a3_94
	word32 a4_95
	word32 a5_96
	fn00002322(d2_53, d7_54, dwArg08, d0_56, a4_55, a5, wArg02, out d1_87, out d2_53, out d4_89, out d5_90, out d6_91, out a1_92, out a2_93, out a3_94, out a4_95, out a5_96)
// DataOut: a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> a5:<invalid> d5:<invalid> d7:<invalid> d4:<invalid> d6:<invalid> d3:<invalid> a4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3

l00001F10:
	return d2_53
// DataOut: a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> a5:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3

fn00001EE2_exit:
// DataOut: a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a2:<invalid> d0:<invalid> a5:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3



word32 fn0000229C(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, word32 dwArg04, ptr32 & d7Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a2 a4 a5 a7 d2 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 d0
// Stack args: Stack +0004(32)
fn0000229C_entry:
	*d7Out = d7
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000229C:
	branch fp - 0x0000000C - Mem0[a4 + 8220:word32] <u 0x00000000 l000022A4_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l000022A4_thunk_fn000076EC:
	word32 d1_102
	word32 d2_103
	word32 d4_104
	word32 d5_105
	word32 d6_106
	word32 d7_107
	word32 a1_108
	word32 a2_109
	word32 a3_110
	word32 a4_111
	word32 a5_112
	word32 a6_113
	fn000076EC(d7, a2, a4, fp - 0x00000004, out d1_102, out d2_103, out d4_104, out d5_105, out d6_106, out d7_107, out a1_108, out a2_109, out a3_110, out a4_111, out a5_112, out a6_113)
	return d2_103
// DataOut: a2 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 -4(fp):a5

l000022A8:
	word32 d2_45
	word32 a2_46
	word32 a4_47
	word32 a5_48
	word32 d0_49 = fn000086A4(d2, a2, dwArg04, a4, fp - 0x00000004, dwArg04, out d2_45, out a2_46, out a4_47, out a5_48)
	Mem51[fp - 0x00000018:word32] = 0x00000002
	Mem53[0x00000000:word32] = 0x00000000
	Mem56[fp - 0x00000020:word32] = dwArg04
	Mem58[fp - 0x0000000C:word32] = d0_49
	word32 a2_62
	word32 a4_63
	word32 a5_64
	word32 d2_65 = fn0000871C(d2_45, a2_46, dwArg04, a4_47, a5_48, dwArg00, dwArg04, dwArg08, out a2_62, out a4_63, out a5_64)
	Mem67[fp - 0x00000020:word32] = dwArg04
	word32 d2_69
	word32 a2_70
	word32 a4_71
	word32 a5_72
	word32 d0_73 = fn000086A4(d2_65, a2_62, dwArg04, a4_63, a5_64, dwArg00, out d2_69, out a2_70, out a4_71, out a5_72)
	Mem74[fp - 0x00000020:word32] = 0x00000000
	Mem78[fp - 0x00000024:word32] = Mem74[fp - 0x0000000C:word32]
	Mem81[fp - 0x00000028:word32] = dwArg04
	Mem83[fp - 0x00000008:word32] = d0_73
	word32 a2_85
	word32 a4_86
	word32 a5_87
	word32 d2_88 = fn0000871C(d2_69, a2_70, dwArg04, a4_71, a5_72, dwArg00, dwArg04, dwArg08, out a2_85, out a4_86, out a5_87)
	word32 a5_93
	*a5Out = Mem83[a5_87:word32]
	return d2_88
// DataOut: a2 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 -4(fp):a5

fn0000229C_exit:
// DataOut: a2 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):0x00000000 -24(fp):00000002 -20(fp):<invalid> -16(fp):a3 -12(fp):<invalid> -8(fp):<invalid> -4(fp):a5



word32 fn000022E6(word32 d2, word32 d7, word32 a1, word32 a2, word32 a4, word32 a5, word32 dwArg04, ptr32 & d5Out, ptr32 & d6Out, ptr32 & d7Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a2 a4 a5 d2 d7
// LiveOut: a2 a4 a5 a7 d2 d5 d6 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 d0
// Stack args: Stack +0004(32)
fn000022E6_entry:
	*d6Out = d6
// DataOut: a1 a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000022E6:
	branch fp - 0x0000000C - Mem0[a4 + 8220:word32] <u 0x00000000 l000022EE_thunk_fn000076EC
// DataOut: a1 a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(0) Stack +0004(32)

l000022EE_thunk_fn000076EC:
	word32 d1_92
	word32 d2_93
	word32 d4_94
	word32 d5_95
	word32 d6_96
	word32 d7_97
	word32 a1_98
	word32 a2_99
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 a6_103
	fn000076EC(d7, a2, a4, fp - 0x00000004, out d1_92, out d2_93, out d4_94, out d5_95, out d6_96, out d7_97, out a1_98, out a2_99, out a3_100, out a4_101, out a5_102, out a6_103)
	return d2_93
// DataOut: a2 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 -4(fp):a5

l000022F2:
	word32 d7_53
	word32 a4_54
	word32 a5_55
	word32 d2_56 = fn00001EE2(d2, d7, a1, a2, dwArg04, a4, fp - 0x00000004, dwArg04, a4 + 1876, out d7_53, out a4_54, out a5_55)
	Mem59[fp - 0x00000018:word32] = d0
	Mem61[fp - 0x0000000C:word32] = d0
	word32 d7_64
	word32 a2_65
	word32 a4_66
	word32 a5_67
	word32 d2_68 = fn0000229C(d2_56, d7_53, a2, a4_54, a5_55, dwArg00, out d7_64, out a2_65, out a4_66, out a5_67)
	Mem70[fp - 0x00000018:word32] = Mem61[fp - 0x0000000C:word32]
	Mem72[fp - 0x00000008:word32] = d0
	word32 d2_74
	word32 d5_75
	word32 a0_76
	word32 a1_77
	word32 a2_78
	word32 a4_79
	word32 a5_80
	fn000089F8(d2_68, a2_65, dwArg04, a4_66, a5_67, dwArg00, out d2_74, out d5_75, out a0_76, out a1_77, out a2_78, out a4_79, out a5_80)
	word32 a5_86
	*a5Out = Mem72[a5_80:word32]
	return d2_74
// DataOut: a2 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a5:fp - 0x00000004 -4(fp):a5

fn000022E6_exit:
// DataOut: a2 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):a4 + 1876 -16(fp):a3 -12(fp):d0 -8(fp):d0 -4(fp):a5



word32 fn00002322(word32 d2, word32 d7, word32 a2, word32 a3, word32 a4, word32 a5, word16 wArg06, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & d6Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a3 a4 a5 d2 d7
// LiveOut: a1 a2 a3 a4 a5 d0 d1 d2 d4 d5 d6
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7 d7
// Stack args: Stack +0006(32)
fn00002322_entry:
	*a3Out = a3
	*d6Out = d6
// DataOut: a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8) Stack +0006(32)

l00002322:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l00002326_thunk_fn000076EC
// DataOut: a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0006(32)

l00002326_thunk_fn000076EC:
	word32 d1_111
	word32 d2_112
	word32 d4_113
	word32 d5_114
	word32 d6_115
	word32 d7_116
	word32 a1_117
	word32 a2_118
	word32 a3_119
	word32 a4_120
	word32 a5_121
	word32 a6_122
	return fn000076EC(d7, a2, a4, a5, out d1_111, out d2_112, out d4_113, out d5_114, out d6_115, out d7_116, out a1_117, out a2_118, out a3_119, out a4_120, out a5_121, out a6_122)
// DataOut: a1 a2 a3 a4 a5 d0 d1 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000232A:
	word32 d2_52
	word32 d5_53
	word32 a0_54
	word32 a1_55
	word32 a2_56
	word32 a4_57
	word32 a5_58
	fn000089F8(d2, a2, a3, a4, a5, Mem0[a4 + 8884:word32], out d2_52, out d5_53, out a0_54, out a1_55, out a2_56, out a4_57, out a5_58)
	Mem61[fp - 0x00000008:word32] = Mem0[a4_57 + 8880:word32]
	word32 d2_64
	word32 d5_65
	word32 a0_66
	word32 a1_67
	word32 a2_68
	word32 a4_69
	word32 a5_70
	word32 d0_71 = fn000089F8(d2_52, a2_56, a3, a4_57, a5_58, dwArg00, out d2_64, out d5_65, out a0_66, out a1_67, out a2_68, out a4_69, out a5_70)
	Mem73[fp - 0x0000000C:word32] = a4_69 + 14364
	word32 d0_74 = fn00006F88(d0_71, a4_69, dwArg00)
	Mem76[fp - 0x00000010:word32] = a4_69 + 14232
	fn00006F88(d0_74, a4_69, dwArg00)
	Mem85[fp - 0x00000010:word32] = Mem76[a4_69 + 1310 + ((int32) wArg06 << 0x00000002):word32]
	Mem88[fp - 0x00000014:word32] = a4_69 + 1880
	word32 d2_89
	word32 a1_90
	word32 a4_91
	fn00006170(d2_64, DPB(d7, wArg06, 0), a2_68, a4_69, a5_70, dwArg00, out d2_89, out a1_90, out a4_91)
	Mem94[fp - 0x00000018:word32] = 0x00000001
	word32 d1_95
	word32 d2_96
	word32 d4_97
	word32 d5_98
	word32 a1_99
	word32 a2_100
	word32 a4_101
	word32 a5_102
	word32 a6_103
	return fn00008A58(a2_68, a3, a4_91, dwArg00, out d1_95, out d2_96, out d4_97, out d5_98, out a1_99, out a2_100, out a4_101, out a5_102, out a6_103)
// DataOut: a1 a2 a3 a4 a5 d0 d1 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00002322_exit:
// DataOut: a1 a2 a3 a4 a5 d0 d1 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):00000001 -20(fp):a4 + 1880 -16(fp):<invalid> -12(fp):a4 + 14364 -8(fp):<invalid> -4(fp):d7



word32 fn00002376(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, ptr32 & d4Out, ptr32 & d7Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a2 a3 a4 a5 d2 d4 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7
fn00002376_entry:
	*d7Out = d7
	*a3Out = a3
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8)

l00002376:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l0000237A_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000237A_thunk_fn000076EC:
	word32 d1_64
	word32 d2_65
	word32 d4_66
	word32 d5_67
	word32 d6_68
	word32 d7_69
	word32 a1_70
	word32 a2_71
	word32 a3_72
	word32 a4_73
	word32 a5_74
	word32 a6_75
	fn000076EC(d7, a2, a4, a5, out d1_64, out d2_65, out d4_66, out d5_67, out d6_68, out d7_69, out a1_70, out a2_71, out a3_72, out a4_73, out a5_74, out a6_75)
	return d2_65
// DataOut: a2 a3 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000237E:
	word32 d2_41
	word32 a1_42
	word32 a4_43
	fn00006170(d2, d7, a2, a4, a5, a4 + 1886, out d2_41, out a1_42, out a4_43)
	Mem45[fp - 0x00000008:word32] = 0x00000000
	word32 d1_52
	word32 d2_53
	word32 d4_54
	word32 d5_55
	word32 a1_56
	word32 a2_57
	word32 a4_58
	word32 a5_59
	word32 a6_60
	fn00008A58(a2, a3, a4_43, dwArg00, out d1_52, out d2_53, out d4_54, out d5_55, out a1_56, out a2_57, out a4_58, out a5_59, out a6_60)
	return d2_53
// DataOut: a2 a3 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00002376_exit:
// DataOut: a2 a3 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):a4 + 213



word32 fn00002394(word32 d0, word32 d7, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg04, ptr32 & d4Out, ptr32 & d7Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a3 a4 a5 d0 d7
// LiveOut: a2 a4 a5 d2 d4 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7
// Stack args: Stack +0004(32)
fn00002394_entry:
	*a4Out = a4
	*d4Out = d4
	*d7Out = d7
	*a2Out = a2
	*a5Out = a5
// DataOut: a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8) Stack +0004(32)

l00002394:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l00002398_thunk_fn000076EC
// DataOut: a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002398_thunk_fn000076EC:
	word32 d1_78
	word32 d2_79
	word32 d4_80
	word32 d5_81
	word32 d6_82
	word32 d7_83
	word32 a1_84
	word32 a2_85
	word32 a3_86
	word32 a4_87
	word32 a5_88
	word32 a6_89
	fn000076EC(d7, a2, a4, a5, out d1_78, out d2_79, out d4_80, out d5_81, out d6_82, out d7_83, out a1_84, out a2_85, out a3_86, out a4_87, out a5_88, out a6_89)
	return d2_79
// DataOut: a2 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000239C:
	word32 a3_39 = dwArg04
// DataOut: a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000023B4:
	branch Mem0[a3_39:byte] != 0x00 l000023A4
// DataOut: a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> d0:<invalid> -8(fp):<invalid> -4(fp):a3
// LocalsOut: fp(32)

l000023A4:
	Mem75[a3_39:byte] = (byte) fn000077BC((int32) (int16) (int16) Mem0[a3_39:byte])
	a3_39 = a3_39 + 0x00000001
// DataOut: a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> d0:<invalid> -8(fp):<invalid> -4(fp):a3
// LocalsOut: fp(32)

l000023B8:
	return d2
// DataOut: a2 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> d0:<invalid> -8(fp):<invalid> -4(fp):a3

fn00002394_exit:
// DataOut: a2 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> a5:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):a3



word32 fn00002668(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, ptr32 & d2Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a2 a3 a4 a5 d0 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7 d7
fn00002668_entry:
	*a3Out = a3
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8)

l00002668:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l0000266C_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000266C_thunk_fn000076EC:
	word32 d1_170
	word32 d2_171
	word32 d4_172
	word32 d5_173
	word32 d6_174
	word32 d7_175
	word32 a1_176
	word32 a2_177
	word32 a3_178
	word32 a4_179
	word32 a5_180
	word32 a6_181
	return fn000076EC(d7, a2, a4, a5, out d1_170, out d2_171, out d4_172, out d5_173, out d6_174, out d7_175, out a1_176, out a2_177, out a3_178, out a4_179, out a5_180, out a6_181)
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002670:
	word32 d0_148
	word32 d7_45
	word32 a2_46
	word32 a4_47
	word32 a5_48
	word32 d2_49 = fn0000229C(d2, d7, a2, a4, a5, Mem0[a4 + 8876:word32], out d7_45, out a2_46, out a4_47, out a5_48)
	*d2Out = d2_49
	Mem53[a4_47 + 8888:word32] = d0
	branch d0 >u 0x00000012 l0000268C
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l0000268C:
	Mem83[fp - 0x00000008:word32] = 0
	Mem86[fp - 0x0000000C:word32] = 0
	Mem90[fp - 0x00000010:word32] = Mem86[a4_47 + 8876:word32]
	word32 a2_95
	word32 a4_96
	word32 a5_97
	word32 d2_98 = fn0000871C(d2_49, a2_46, a3, a4_47, a5_48, dwArg00, dwArg04, dwArg08, out a2_95, out a4_96, out a5_97)
	Mem101[fp - 0x00000010:word32] = 0
	Mem104[fp - 0x00000014:word32] = 0
	Mem108[fp - 0x00000018:word32] = Mem104[a4_96 + 8880:word32]
	word32 a2_110
	word32 a4_111
	word32 a5_112
	word32 d2_113 = fn0000871C(d2_98, a2_95, a3, a4_96, a5_97, dwArg00, dwArg04, dwArg08, out a2_110, out a4_111, out a5_112)
	*d2Out = d2_113
	word32 d0_115 = Mem108[a4_111 + 8920:word32]
	branch d0_115 >=u 0x00000006 l00002738
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:18 a5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7
// LocalsOut: Local -0004(32)

l00002738:
	branch (word16) d7_45 - 0x0001 <=u 0x0000 l00002742
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):0 -16(fp):0 -12(fp):0 -8(fp):<invalid> -4(fp):d7
// LocalsOut: Local -0004(32)

l00002742:
	Mem153[fp - 0x00000008:word32] = Mem108[a4_111 + 8880:word32]
	word32 d7_155
	word32 a2_156
	word32 a4_157
	word32 a5_158
	word32 d2_159
	*d2Out = fn0000229C(d2_113, d7_45, a2_110, a4_111, a5_112, dwArg00, out d7_155, out a2_156, out a4_157, out a5_158)
	Mem162[a4_157 + 8892:word32] = 1
	branch 1 - Mem162[a4_157 + 8888:word32] <u 0x00000000 l0000275A
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:1 a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):0 -16(fp):0 -12(fp):0 -8(fp):<invalid> -4(fp):d7

l0000275A:
	d0_148 = d7_155
// DataOut: a2 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):0 -16(fp):0 -12(fp):0 -8(fp):<invalid> -4(fp):d7

l00002756:
	d0_148 = 2
// DataOut: a2 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):0 -16(fp):0 -12(fp):0 -8(fp):<invalid> -4(fp):d7

l0000273E:
	d0_148 = d7_45
// DataOut: a2 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:1 a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):0 -16(fp):0 -12(fp):0 -8(fp):<invalid> -4(fp):d7

l000026BA:
	word32 d0_123 = DPB(d0_115, Mem108[0x000026C4 + DPB(d0_115, (word16) d0_115 + (word16) d0_115, 0):word16], 0)
	word32 a7_125
	word32 a4_126
	byte CVZN_127
	byte C_128
	word32 d7_129
	word32 d0_130
	word32 d1_131
	byte CZ_132
	byte CVZNX_133
	byte VZ_134
	word32 d2_135
	word32 a2_136
	word32 a5_137
	word32 a3_138
	word32 d4_139
	word32 d5_140
	word32 d6_141
	word32 a1_142
	word32 a6_143
	call 0x000026C6 + d0_123 (retsize: 4; depth: 4)
		uses: a1,a2_110,a3,a4_111,a5_112,a6,a7_114,C_118,CVZN_124,CVZNX_121,CZ_57,d0_123,d1_54,d2_113,d4,d5,d6,d7_45,dwLoc04_36,dwLoc08_40,VZ
		defs: a1_142,a2_136,a3_138,a4_126,a5_137,a6_143,a7_125,C_128,CVZN_127,CVZNX_133,CZ_132,d0_130,d1_131,d2_135,d4_139,d5_140,d6_141,d7_129,VZ_134
	return d0_130
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):0 -16(fp):0 -12(fp):0 -8(fp):<invalid> -4(fp):d7

l00002686:
	d0_148 = 2
// DataOut: a2 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:18 a5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7

l0000275C:
	return d0_148
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):0 -16(fp):0 -12(fp):0 -8(fp):<invalid> -4(fp):d7

fn00002668_exit:
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):<invalid> -20(fp):0 -16(fp):0 -12(fp):0 -8(fp):<invalid> -4(fp):d7



word32 fn000047E4(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, ptr32 & d2Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a2 a3 a4 a5 d0 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7 d7
fn000047E4_entry:
	*a3Out = a3
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8)

l000047E4:
	branch fp - Mem0[a4 + 8220:word32] <u 0x00000000 l000047E8_thunk_fn000076EC
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000047E8_thunk_fn000076EC:
	word32 d1_149
	word32 d2_150
	word32 d4_151
	word32 d5_152
	word32 d6_153
	word32 d7_154
	word32 a1_155
	word32 a2_156
	word32 a3_157
	word32 a4_158
	word32 a5_159
	word32 a6_160
	return fn000076EC(d7, a2, a4, a5, out d1_149, out d2_150, out d4_151, out d5_152, out d6_153, out d7_154, out a1_155, out a2_156, out a3_157, out a4_158, out a5_159, out a6_160)
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp

l000047EC:
	word32 d0_121
	word32 d7_46
	word32 a2_47
	word32 a4_48
	word32 a5_49
	word32 d2_50 = fn0000229C(d2, d7, a2, a4, a5, Mem0[a4 + 8876:word32], out d7_46, out a2_47, out a4_48, out a5_49)
	*d2Out = d2_50
	Mem54[a4_48 + 8888:word32] = d0
	Mem56[a4_48 + 8892:word32] = d0
	branch d0 >=u 0x00000012 l0000480C
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l0000480C:
	word32 d0_87 = Mem56[a4_48 + 8920:word32]
	branch d0_87 >=u 0x00000006 l00004874
// DataOut: a2 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:18 a5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7
// LocalsOut: Local -0004(32)

l00004874:
	branch (word16) d7_46 == 0x0000 l0000487C
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:18 d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7
// LocalsOut: Local -0004(32)

l0000487C:
	Mem126[fp - 0x00000008:word32] = Mem56[a4_48 + 8876:word32]
	word32 d7_129
	word32 a2_130
	word32 a4_131
	word32 a5_132
	word32 d2_133 = fn0000229C(d2_50, d7_46, a2_47, a4_48, a5_49, dwArg00, out d7_129, out a2_130, out a4_131, out a5_132)
	Mem135[a4_131 + 8892:word32] = d0_87
	Mem137[fp - 0x00000008:word32] = Mem135[a4_131 + 8880:word32]
	word32 d7_139
	word32 a2_140
	word32 a4_141
	word32 a5_142
	word32 d2_143
	*d2Out = fn0000229C(d2_133, d7_129, a2_130, a4_131, a5_132, dwArg00, out d7_139, out a2_140, out a4_141, out a5_142)
	Mem146[a4_141 + 8888:word32] = d0_87
	d0_121 = 0
// DataOut: a2 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:18 d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7

l00004878:
	d0_121 = d7_46
// DataOut: a2 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:18 d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7

l00004818:
	word32 d0_95 = DPB(d0_87, Mem56[0x00004822 + DPB(d0_87, (word16) d0_87 + (word16) d0_87, 0):word16], 0)
	word32 a7_97
	word32 a4_98
	byte CVZN_99
	byte C_100
	word32 d7_101
	word32 d0_102
	word32 d1_103
	byte CVZNX_104
	byte ZN_105
	byte V_106
	byte Z_107
	word32 d2_108
	word32 a2_109
	word32 a5_110
	word32 a3_111
	word32 d4_112
	word32 d5_113
	word32 d6_114
	word32 a1_115
	word32 a6_116
	call 0x00004824 + d0_95 (retsize: 4; depth: 4)
		uses: a1,a2_47,a3,a4_48,a5_49,a6,a7_51,C_90,CVZN_96,CVZNX_93,d0_95,d1_57,d2_50,d4,d5,d6,d7_46,dwLoc04_37,dwLoc08_41,V,Z,ZN
		defs: a1_115,a2_109,a3_111,a4_98,a5_110,a6_116,a7_97,C_100,CVZN_99,CVZNX_104,d0_102,d1_103,d2_108,d4_112,d5_113,d6_114,d7_101,V_106,Z_107,ZN_105
	return d0_102
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:18 d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7

l00004806:
	d0_121 = 6
// DataOut: a2 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:18 a5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7

l00004898:
	return d0_121
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7

fn000047E4_exit:
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d1:<invalid> d0:<invalid> d7:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -8(fp):<invalid> -4(fp):d7



void fn00005C1C(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CVZNX
// Preserved: a0 a1 a2 a7 d0 d1 d2
// Stack args: Stack +0004(32) Stack +0008(32)
fn00005C1C_entry:
// DataOut: a3 a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00005C1C:
	byte v12_31 = Mem0[dwArg04 + 18:byte]
	word32 a1_128 = dwArg08
	word32 a0_109 = dwArg04 + 0x00000013
	word32 d2_106 = DPB(DPB(-256, v12_31, 0), v12_31 * 0x02 * 0x02, 0)
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00005CF2:
	byte v16_45 = (byte) d2_106 + (byte) d2_106
	byte CVZNX_47 = cond(v16_45)
	d2_106 = DPB(d2_106, v16_45, 0)
	byte X_49 = CVZNX_47
	byte Z_50 = CVZNX_47
	branch v16_45 <u 0x00 l00005CFC
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): ZX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CF6:
	Mem702[a1_128:byte] = Mem0[a0_109:byte]
	byte CVZNX_706 = cond(v16_45 * 0x02)
	a0_109 = a0_109 + 0x00000001
	a1_128 = a1_128 + 0x00000001
	d2_106 = DPB(d2_106, v16_45 * 0x02, 0)
	X_49 = CVZNX_706 (alias)
	Z_50 = CVZNX_706 (alias)
	branch v16_45 * 0x02 >=u 0x00 l00005CF0
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): ZX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CFC:
	branch Z_50 l00005CEA
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CEA:
	byte v29_695 = Mem0[a0_109:byte] * 0x02 + X_49
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_106, v29_695, 0)
	branch v29_695 <u 0x00 l00005CFE
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CF0:
	Mem68[a1_128:byte] = Mem0[a0_109:byte]
	a0_109 = a0_109 + 0x00000001
	a1_128 = a1_128 + 0x00000001
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CFE:
	byte v22_86 = (byte) d2_106 + (byte) d2_106
	word32 d0_115 = 2
	word32 d1_113 = 0
	word32 d2_683 = DPB(d2_106, v22_86, 0)
	byte C_103 = cond(v22_86)
	branch v22_86 == 0x00 l00005D32
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): CX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D32:
	byte v102_682 = Mem0[a0_109:byte] * 0x02 + (v22_86 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_683 = DPB(d2_106, v102_682, 0)
	C_103 = cond(v102_682) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D06:
	branch C_103 l00005C86
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C86:
	byte v32_510 = (byte) d2_683 + (byte) d2_683
	word32 d2_511 = DPB(d2_683, v32_510, 0)
	byte X_514 = cond(v32_510)
	branch v32_510 == 0x00 l00005C40
// DataOut: a0 a1 a3 a4 a5 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C40:
	byte v52_669 = Mem0[a0_109:byte] * 0x02 + (v32_510 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_511 = DPB(d2_683, v52_669, 0)
	X_514 = cond(v52_669) (alias)
// DataOut: a0 a1 a3 a4 a5 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C8A:
	word16 v33_523 = X_514 + 0x0004
	byte v34_525 = (byte) d2_511 + (byte) d2_511
	d0_115 = DPB(2, v33_523, 0)
	d2_106 = DPB(d2_511, v34_525, 0)
	byte C_534 = cond(v34_525)
	branch v34_525 == 0x00 l00005C46
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): CX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C46:
	byte v85_656 = Mem0[a0_109:byte] * 0x02 + (v34_525 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_511, v85_656, 0)
	C_534 = cond(v85_656) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C90:
	branch C_534 l00005CA0
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C92:
	byte v36_547 = (byte) d2_106 + (byte) d2_106
	d2_106 = DPB(d2_106, v36_547, 0)
	byte X_551 = cond(v36_547)
	branch v36_547 == 0x00 l00005C4C
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C4C:
	byte v83_643 = Mem0[a0_109:byte] * 0x02 + (v36_547 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_106, v83_643, 0)
	X_551 = cond(v83_643) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C98:
	word16 v37_564 = (v33_523 - 0x0001) * 0x0002 + X_551
	d0_115 = DPB(d0_115, v37_564, 0)
	branch (byte) v37_564 - 0x09 == 0x00 l00005C6A
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C6A:
	word32 d0_570 = 3
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C6C:
	byte v71_576 = (byte) d2_106 + (byte) d2_106
	d2_106 = DPB(d2_106, v71_576, 0)
	byte X_580 = cond(v71_576)
	branch v71_576 == 0x00 l00005C3A
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C3A:
	byte v87_630 = Mem0[a0_109:byte] * 0x02 + (v71_576 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_106, v87_630, 0)
	X_580 = cond(v87_630) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C70:
	word16 v72_595 = (word16) d1_714 + (word16) d1_714 + X_580
	d1_113 = DPB(d1_714, v72_595, 0)
	d0_570 = d0_570 - 0x00000001
	word32 d1_714 = d1_113
	branch d0_570 != 0xFFFFFFFF l00005C6C
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C76:
	word32 d1_600 = DPB(d1_714, v72_595 + 0x0002, 0)
// DataOut: a0 a1 a3 a4 a5 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C78:
	Mem608[a1_128:byte] = Mem0[a0_109:byte]
	word32 a0_606 = a0_109 + 0x00000001
	word32 a1_609 = a1_128 + 0x00000001
	Mem613[a1_609:byte] = Mem608[a0_606:byte]
	Mem618[a1_609 + 0x00000001:byte] = Mem613[a0_606 + 0x00000001:byte]
	Mem623[a1_609 + 0x00000002:byte] = Mem618[a0_606 + 0x00000002:byte]
	a0_109 = a0_606 + 0x00000003
	a1_128 = a1_609 + 0x00000003
	d1_600 = d1_600 - 0x00000001
	branch d1_600 != 0xFFFFFFFF l00005C78
// DataOut: a0 a1 a3 a4 a5 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C84:
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D0A:
	byte v23_389 = (byte) d2_683 + (byte) d2_683
	d2_106 = DPB(d2_683, v23_389, 0)
	byte C_398 = cond(v23_389)
	branch v23_389 == 0x00 l00005D38
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): CX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D38:
	byte v96_500 = Mem0[a0_109:byte] * 0x02 + (v23_389 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_683, v96_500, 0)
	C_398 = cond(v96_500) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D0E:
	branch C_398 l00005CC0
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D10:
	byte v25_411 = (byte) d2_106 + (byte) d2_106
	d0_115 = 3
	d2_106 = DPB(d2_106, v25_411, 0)
	byte C_420 = cond(v25_411)
	branch v25_411 == 0x00 l00005D3E
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): CX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:2 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D3E:
	byte v89_487 = Mem0[a0_109:byte] * 0x02 + (v25_411 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_106, v89_487, 0)
	C_420 = cond(v89_487) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:3 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D16:
	branch C_420 l00005CA0
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:3 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D18:
	byte v26_431 = Mem0[a0_109:byte]
	a0_109 = a0_109 + 0x00000001
	word32 d0_433 = DPB(3, v26_431, 0)
	branch v26_431 == 0x00 l00005D50
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:3 d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D50:
	byte v48_439 = (byte) d2_106 + (byte) d2_106
	d2_106 = DPB(d2_106, v48_439, 0)
	byte C_448 = cond(v48_439)
	branch v48_439 != 0x00 l00005D58
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): CX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D54:
	byte v50_474 = Mem0[a0_109:byte] * 0x02 + (v48_439 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_106, v50_474, 0)
	C_448 = cond(v50_474) (alias)
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D58:
	branch C_448 l00005CF2
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D5A:
	return
// DataOut: a3 a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2

fn00005C1C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a0:a0 a1:a1 d2:d2 d0:d0 d1:d1 a2:a2 -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2

l00005D1C:
	d0_115 = DPB(d0_433, (word16) d0_433 + 0x0008, 0)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CA0:
	byte v39_174 = (byte) d2_106 + (byte) d2_106
	d2_106 = DPB(d2_106, v39_174, 0)
	byte C_183 = cond(v39_174)
	branch v39_174 == 0x00 l00005C52
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): CX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C52:
	byte v70_379 = Mem0[a0_109:byte] * 0x02 + (v39_174 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_106, v70_379, 0)
	C_183 = cond(v70_379) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CA4:
	branch C_183 l00005CC0
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CA6:
	byte v40_194 = (byte) d2_106 + (byte) d2_106
	word32 d2_195 = DPB(d2_106, v40_194, 0)
	byte X_198 = cond(v40_194)
	branch v40_194 == 0x00 l00005C58
// DataOut: a0 a1 a3 a4 a5 d0 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C58:
	byte v64_366 = Mem0[a0_109:byte] * 0x02 + (v40_194 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_195 = DPB(d2_106, v64_366, 0)
	X_198 = cond(v64_366) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CAA:
	byte v42_209 = (byte) d2_195 + (byte) d2_195
	word32 d1_208 = (int32) X_198
	d2_106 = DPB(d2_195, v42_209, 0)
	byte C_218 = cond(v42_209)
	branch v42_209 == 0x00 l00005C5E
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): CX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:0 a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C5E:
	byte v62_353 = Mem0[a0_109:byte] * 0x02 + (v42_209 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_195, v62_353, 0)
	C_218 = cond(v62_353) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CB0:
	branch C_218 l00005D20
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D20:
	byte v57_287 = (byte) d2_106 + (byte) d2_106
	word32 d2_288 = DPB(d2_106, v57_287, 0)
	byte X_291 = cond(v57_287)
	branch v57_287 == 0x00 l00005D44
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D44:
	byte v68_340 = Mem0[a0_109:byte] * 0x02 + (v57_287 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_288 = DPB(d2_106, v68_340, 0)
	X_291 = cond(v68_340) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D24:
	byte v60_304 = (byte) d2_288 + (byte) d2_288
	d1_208 = DPB(d1_208, X_198 * 0x0002 + X_291 | 0x0004, 0)
	d2_106 = DPB(d2_288, v60_304, 0)
	byte C_313 = cond(v60_304)
	branch v60_304 == 0x00 l00005D4A
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): CX
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D4A:
	byte v66_327 = Mem0[a0_109:byte] * 0x02 + (v60_304 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_288, v66_327, 0)
	C_313 = cond(v66_327) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D2E:
	branch C_313 l00005CBE
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005D30:
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CB2:
	branch X_198 != 0x0000 l00005CBE
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CB6:
	d1_208 = DPB(d1_208, X_198 + 0x0001, 0)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CB8:
	byte v46_245 = (byte) d2_106 + (byte) d2_106
	d2_106 = DPB(d2_106, v46_245, 0)
	byte X_249 = cond(v46_245)
	branch v46_245 == 0x00 l00005C64
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005C64:
	byte v54_270 = Mem0[a0_109:byte] * 0x02 + (v46_245 <u 0x00)
	a0_109 = a0_109 + 0x00000001
	d2_106 = DPB(d2_106, v54_270, 0)
	X_249 = cond(v54_270) (alias)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): X
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CBC:
	d1_208 = DPB(d1_208, (word16) d1_208 + (word16) d1_208 + X_249, 0)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CBE:
	d1_113 = DPB(d1_208, __rol((word16) d1_208, 0x0008), 0)
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CC0:
	word32 d1_118 = DPB(d1_113, Mem0[a0_109:byte], 0)
	word32 a2_121 = DPB(a1_128, (word16) a1_128 - (word16) d1_118, 0)
	a0_109 = a0_109 + 0x00000001
	word32 a2_122 = a2_121 - 0x0001
	word16 v92_123 = (word16) d0_115 >>u 0x0001
	branch v92_123 >=u 0x0000 l00005CCE
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CCC:
	Mem168[a1_128:byte] = Mem0[a2_121 - 0x0001:byte]
	a2_122 = a2_121
	a1_128 = a1_128 + 0x00000001
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CCE:
	word32 d0_131 = DPB(d0_115, v92_123 - 0x0001, 0)
	branch (word16) d1_118 != 0x0000 l00005CE0
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CE0:
	Mem156[a1_128:byte] = Mem0[a2_122:byte]
	word32 a2_154 = a2_122 + 0x00000001
	word32 a1_157 = a1_128 + 0x00000001
	Mem161[a1_157:byte] = Mem156[a2_154:byte]
	a2_122 = a2_154 + 0x00000001
	a1_128 = a1_157 + 0x00000001
	d0_131 = d0_131 - 0x00000001
	branch d0_131 != 0xFFFFFFFF l00005CE0
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CE8:
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CD4:
	byte v98_137 = Mem0[a2_122:byte]
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CD6:
	Mem143[a1_128:byte] = v98_137
	word32 a1_144 = a1_128 + 0x00000001
	Mem146[a1_144:byte] = v98_137
	a1_128 = a1_144 + 0x00000001
	d0_131 = d0_131 - 0x00000001
	branch d0_131 != 0xFFFFFFFF l00005CD6
// DataOut: a0 a1 a3 a4 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)

l00005CDE:
// DataOut: a0 a1 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a0:<invalid> a1:<invalid> d2:<invalid> d0:<invalid> d1:<invalid> a2:<invalid> -24(fp):d0 -20(fp):d1 -16(fp):d2 -12(fp):a0 -8(fp):a1 -4(fp):a2
// LocalsOut: fp(32)



void fn00006078(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a6 a7 d2 d3
// Stack args: Stack +0014(32) Stack +0020(32)
fn00006078_entry:
// DataOut: a4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0014(32) Stack +0020(32)

l00006078:
	FreeTrap(dwArg14)
	return
// DataOut: a4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00006078_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a6:a6 a0:<invalid> a1:<invalid> a2:a2 a3:a3 d0:<invalid> d1:<invalid> d2:d2 d3:d3 -20(fp):d2 -16(fp):d3 -12(fp):a2 -8(fp):a3 -4(fp):a6



void fn000060AC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: a7
fn000060AC_entry:
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp

l000060AC:
	return
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp

fn000060AC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp



void fn000060AE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: a7
fn000060AE_entry:
// DataOut: a1 a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp

l000060AE:
	return
// DataOut: a1 a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp

fn000060AE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp



word32 fn000060B0(word32 a3, word32 a4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3 a4
// LiveOut: a1 a4 a5 d0 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 a3 a7 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn000060B0_entry:
	*a4Out = a4
	*d2Out = d2
	*a1Out = a1
	*a5Out = a5
	*d4Out = d4
// DataOut: a1 a3 a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l000060B0:
	word32 d0_105
	word32 a0_28
	word32 d0_29 = fn000093F4(dwArg04, a4, dwArg04, out a0_28)
	word32 a7_123 = fp - 0x00000014
	word32 a2_119 = d0_29
	word32 d0_122 = d0_29
	branch d0_29 != 0x00000000 l000060D2
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l000060D2:
	branch __btst(Mem0[d0_29 + 3:byte], 0x0003) l000060EA
// DataOut: a2 a3 a4 a7 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0004(32)

l000060DA:
	Mem112[0x00000000:word32] = 0x00000000
	word32 d2_118
	word32 a5_121
	d0_122 = fn00008388(d0_29, a4, dwArg04, dwLoc1C, 0x00000002, out d2_118, out a2_119, out a4, out a5_121)
	a7_123 = fp - 0x00000014
// DataOut: a2 a3 a4 a7 d0 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: Local -0004(32)

l000060EA:
	word32 a7_83 = a7_123 - 0x00000004
	Mem85[a7_83:word32] = dwArg0C
	Mem88[a7_83 - 0x00000004:word32] = dwArg08
	Mem92[a7_83 - 0x00000008:word32] = Mem88[a2_119 + 4:word32]
	word32 a1_95
	word32 a4_96
	word32 a5_97
	word32 d4_98
	*d4Out = fn00008AAC(d0_122, a2_119, a4, dwArg00, dwArg04, dwArg08, out a1_95, out a4_96, out a5_97)
	branch Mem92[a4_96 + 8240:word32] == 0x00000000 l00006106
// DataOut: a1 a4 a5 a7 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

l00006106:
	d0_105 = d0_122
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

l00006102:
	d0_105 = -1
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

l000060CE:
	d0_105 = -1
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

l00006108:
	return d0_105
// DataOut: a1 a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

fn000060B0_exit:
// DataOut: a1 a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3



word32 fn00006110(word32 d2, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg04, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a3 a4 a5 d2
// LiveOut: a1 a2 a4 a5 d0 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7 d6 d7
// Stack args: Stack +0004(32)
fn00006110_entry:
	*d2Out = d2
	*a5Out = a5
	*d4Out = d4
// DataOut: a2 a3 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00006110:
	word32 a7_38 = fp - 0x0000000C
	word32 a3_12 = dwArg04
	word32 a0_13 = dwArg04
// DataOut: a0 a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l0000611A:
	a0_13 = a0_111 + 0x00000001
	word32 a0_111 = a0_13
	branch Mem0[a0_111:byte] != 0x00 l0000611A
// DataOut: a0 a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a0:<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l0000611E:
	word32 a0_23 = a0_13 - 0x00000001 - dwArg04
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a0:<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00006124:
	byte v14_45 = Mem0[a3_12:byte]
	a3_12 = a3_12 + 0x00000001
	branch (int32) v14_45 == 0x00000000 l0000615A
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):<invalid> -16(fp):a4 + 7702 -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l0000615A:
	word32 a7_87 = a7_38 - 0x00000004
	Mem88[a7_87:word32] = a4 + 7702
	Mem90[a7_87 - 0x00000004:word32] = 0x0000FFFF
	word32 a1_91
	word32 a2_92
	word32 a4_93
	fn0000728C(d2, a2, a4, a5, dwArg00, dwArg04, out a1_91, out a2_92, out a4_93)
	return a0_23
// DataOut: a1 a2 a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):<invalid> -16(fp):a4 + 7702 -12(fp):d6 -8(fp):d7 -4(fp):a3

fn00006110_exit:
// DataOut: a1 a2 a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):<invalid> -16(fp):a4 + 7702 -12(fp):d6 -8(fp):d7 -4(fp):a3

l0000612C:
	word32 v16_52 = Mem0[a4 + 7714:word32] - 0x00000001
	Mem53[a4 + 7714:word32] = v16_52
	branch v16_52 < 0x00000000 l00006144
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):<invalid> -16(fp):a4 + 7702 -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00006144:
	word32 a7_71 = a7_38 - 0x00000004
	Mem72[a7_71:word32] = a4 + 7702
	Mem75[a7_71 - 0x00000004:word32] = (int32) v14_45
	word32 a1_80
	fn0000728C(d2, a2, a4, a5, dwArg00, dwArg04, out a1_80, out a2, out a4)
	a7_38 = a7_71 + 0x00000004
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):<invalid> -16(fp):a4 + 7702 -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00006132:
	word32 a0_56 = Mem53[a4 + 7706:word32]
	Mem58[a4 + 7706:word32] = Mem53[a4 + 7706:word32] + 0x00000001
	Mem62[a0_56:byte] = v14_45
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):<invalid> -16(fp):a4 + 7702 -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)



word32 fn00006170(word32 d2, word32 d7, word32 a2, word32 a4, word32 a5, word32 dwArg04, ptr32 & d2Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2 d7
// LiveOut: a1 a4 d0 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 a3 a5 a7 d4 d5 d6 d7
// Stack args: Stack +0004(32)
fn00006170_entry:
	*d2Out = d2
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00006170:
	word32 a5_100 = fp - 0x00000004
	word32 a7_102 = fp - 0x00000040
	word32 a3_26 = dwArg04
	word32 d6_103 = 0
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00006186:
	byte v13_59 = Mem0[a3_26:byte]
	a3_26 = a3_26 + 0x00000001
	branch v13_59 == 0x00 l0000627E
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000627E:
	word32 a7_242 = a7_102 - 0x00000004
	Mem243[a7_242:word32] = a4 + 7702
	Mem245[a7_242 - 0x00000004:word32] = 0x0000FFFF
	word32 a1_246
	word32 a2_247
	word32 a4_248
	fn0000728C(d2, a2, a4, a5_100, dwArg00, dwArg04, out a1_246, out a2_247, out a4_248)
	return d6_103
// DataOut: a1 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5

fn00006170_exit:
// DataOut: a1 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d4:<invalid> d5:<invalid> a2:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5

l0000618E:
	branch v13_59 != 0x25 l0000624C
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000624C:
	word32 v48_211 = Mem0[a4 + 7714:word32] - 0x00000001
	Mem212[a4 + 7714:word32] = v48_211
	d6_103 = d6_103 + 0x00000001
	branch v48_211 < 0x00000000 l00006268
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:37 d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00006268:
	word32 a7_229 = a7_102 - 0x00000004
	Mem230[a7_229:word32] = a4 + 7702
	Mem233[a7_229 - 0x00000004:word32] = (int32) v13_59
	word32 a1_235
	fn0000728C(d2, a2, a4, a5_100, dwArg00, dwArg04, out a1_235, out a2, out a4)
	a7_102 = a7_229 + 0x00000004
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:37 d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00006254:
	word32 a0_215 = Mem212[a4 + 7706:word32]
	Mem217[a4 + 7706:word32] = Mem212[a4 + 7706:word32] + 0x00000001
	Mem221[a0_215:byte] = v13_59
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:37 d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00006196:
	word32 a2_148
	byte v20_70 = Mem0[a3_26:byte]
	a3_26 = a3_26 + 0x00000001
	word16 v22_76 = (word16) (int32) v20_70 - 0x0064
	branch v22_76 == 0x0000 l000061F2
// DataOut: a2 a3 a4 a5 a7 d0 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:37 d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061F2:
	word32 a0_196 = Mem0[a5_100 + -14:word32]
	word32 v44_197 = Mem0[a0_196:word32]
	Mem201[a5_100 + -14:word32] = a0_196 + 0x00000004
	word32 a7_202 = a7_102 - 0x00000004
	Mem204[a7_202:word32] = v44_197
	Mem207[a7_202 - 0x00000004:word32] = a5_100 + -27
	fn00007CF8(d2, dwArg00, dwArg04)
	a7_102 = a7_202 + 0x00000004
	a2_148 = a5_100 + -27
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061A2:
	branch v22_76 == 0x000C l000061BE
// DataOut: a2 a3 a4 a5 a7 d0 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061A8:
	branch v22_76 == 0x000F l000061B2
// DataOut: a2 a3 a4 a5 a7 d0 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061B2:
	word32 a0_189 = Mem0[a5_100 + -14:word32]
	a2_148 = Mem0[a0_189:word32]
	Mem194[a5_100 + -14:word32] = a0_189 + 0x00000004
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061AC:
	branch v22_76 == 0x0014 l000061BE
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061BE:
	word32 a0_112 = Mem0[a5_100 + -14:word32]
	word32 d4_115 = Mem0[a0_112:word32]
	Mem117[a5_100 + -14:word32] = a0_112 + 0x00000004
	word32 a2_118 = a5_100 + -20
	word32 d5_119 = 7
// DataOut: a2 a3 a4 a5 a7 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061CE:
	branch d5_119 < 0x00000000 l000061E8
// DataOut: a2 a3 a4 a5 a7 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d4:<invalid> a2:<invalid> d5:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061E8:
	Mem143[a5_100 + -19:byte] = 0x00
	a2_148 = a5_100 + -27
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d4:<invalid> a2:<invalid> d5:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000620C:
	word32 a7_90 = a7_102 - 0x00000004
	Mem92[a7_90:word32] = a2_148
	a7_102 = a7_90 + 0x0004
	word32 d4_96
	word32 a1_97
	d6_103 = d6_103 + fn00006110(d2, a2_148, a3_26 + 0x00000001, a4, a5_100, dwArg00, out d2, out d4_96, out a1_97, out a2, out a4, out a5_100)
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061D2:
	Mem138[a2_118:byte] = Mem117[0x00006296 + (d4_115 & 15):byte]
	a2_118 = a2_118 - 0x00000001
	d4_115 = d4_115 >> 0x00000004
	d5_119 = d5_119 - 0x00000001
// DataOut: a2 a3 a4 a5 a7 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d4:<invalid> a2:<invalid> d5:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000061B0:
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000621A:
	word32 v29_158 = Mem0[a4 + 7714:word32] - 0x00000001
	Mem159[a4 + 7714:word32] = v29_158
	d6_103 = d6_103 + 0x00000001
	branch v29_158 < 0x00000000 l00006236
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00006236:
	word32 a7_176 = a7_102 - 0x00000004
	Mem177[a7_176:word32] = a4 + 7702
	Mem180[a7_176 - 0x00000004:word32] = (int32) v20_70
	word32 a1_182
	fn0000728C(d2, a2, a4, a5_100, dwArg00, dwArg04, out a1_182, out a2, out a4)
	a7_102 = a7_176 + 0x00000004
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00006222:
	word32 a0_162 = Mem159[a4 + 7706:word32]
	Mem164[a4 + 7706:word32] = Mem159[a4 + 7706:word32] + 0x00000001
	Mem168[a0_162:byte] = v20_70
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d6:<invalid> a0:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a2:<invalid> a1:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):d4 -60(fp):d5 -56(fp):d6 -52(fp):d7 -48(fp):a2 -44(fp):a3 -24(fp):<invalid> -23(fp):0x00 -18(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)



word32 fn00006B30(word32 a4, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4
// LiveOut: d0
// Trashed: CVZNX a0 a1 a6 d0 d1
// Preserved: a2 a3 a5 a7 d2 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00006B30_entry:
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0040(32) Local -0064(32) Stack +0004(32) Stack +0008(32)

l00006B30:
	word32 a3_1092 = dwArg04 + 0x00000001
	word32 d7_1109 = 0
	word32 d6_1108 = 0
	word32 d5_1107 = 0
	byte bLoc09_1094 = 0x20
	word32 dwLoc0E_1076 = 0
	word32 dwLoc12_1058 = -1
	byte bLoc13_1040 = 0x00
	byte bLoc08_1103 = 0x00
	word32 dwLoc20_47 = 0
	word32 dwLoc1C_1010 = 0
	word32 dwLoc38_182 = fp + 0xFFFFFFCC
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B72:
	byte v22_63 = Mem0[a3_1092:byte]
	branch v22_63 == 0x00 l00006BA2
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B76:
	word16 v25_1099 = (word16) (int32) v22_63 - 0x0020
	branch v25_1099 == 0x0000 l00006B94
// DataOut: a2 a3 a4 a5 d0 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B94:
	d5_1107 = 1
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B80:
	branch v25_1099 == 0x0003 l00006B98
// DataOut: a2 a3 a4 a5 d0 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B98:
	bLoc08_1103 = 0x01
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B84:
	branch v25_1099 == 0x000B l00006B90
// DataOut: a2 a3 a4 a5 d0 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B90:
	d6_1108 = 1
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B88:
	branch v25_1099 != 0x000D l00006BA2
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BA2:
	branch Mem0[a3_1092:byte] != 0x30 l00006BB0
// DataOut: a2 a3 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BAA:
	a3_1092 = a3_1092 + 0x00000000
	bLoc09_1094 = 0x30
// DataOut: a2 a3 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:48 d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BB0:
	word32 a3_103
	branch 0x2A - Mem0[a3_1092:byte] != 0x00 l00006BC2
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:48 d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BC2:
	word32 a1_1088
	a3_103 = a3_1092 + fn00007D98(a3_1092, fp + 0xFFFFFFF2, out a1_1088)
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:42 d1:48 d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BB6:
	word32 a0_1071 = Mem0[dwArg08:word32]
	Mem1073[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	dwLoc0E_1076 = Mem1073[a0_1071:word32]
	a3_103 = a3_1092 + 0x00000001
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:42 d1:48 d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BD0:
	branch Mem0[a3_103:byte] != 0x2E l00006BFA
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):fp + 0xFFFFFFF2 -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BD8:
	word32 a3_1048 = a3_103 + 0x00000001
	branch 0x2A - Mem0[a3_1048:byte] != 0x00 l00006BEC
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:46 d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):fp + 0xFFFFFFF2 -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BEC:
	word32 a1_1067
	a3_103 = a3_1048 + fn00007D98(a3_1048, fp + 0xFFFFFFEE, out a1_1067)
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:42 d1:46 d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):fp + 0xFFFFFFF2 -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BE0:
	word32 a0_1053 = Mem0[dwArg08:word32]
	Mem1055[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	dwLoc12_1058 = Mem1055[a0_1053:word32]
	a3_103 = a3_1048 + 0x00000001
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:42 d1:46 d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):fp + 0xFFFFFFF2 -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006BFA:
	byte v44_104 = Mem0[a3_103:byte]
	branch v44_104 != 0x6C l00006C0C
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C0C:
	branch v44_104 != 0x68 l00006C14
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:108 d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C12:
	a3_103 = a3_103 + 0x00000001
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:104 d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C02:
	bLoc13_1040 = 0x01
	a3_103 = a3_103 + 0x00000001
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:108 d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C14:
	word32 dwLoc3C_596
	word32 dwLoc20_1026
	word32 d0_154
	byte v48_113 = Mem0[a3_103:byte]
	word32 d1_118 = (int32) v48_113
	word16 v51_121 = (word16) d1_118 - 0x0050
	word32 a3_114 = a3_103 + 0x00000001
	word32 d1_122 = DPB(d1_118, v51_121, 0)
	branch v51_121 == 0x0000 l00006D90
// DataOut: a2 a3 a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C26:
	d1_122 = DPB(d1_118, v51_121 - 0x0008, 0)
	branch v51_121 == 0x0008 l00006DA4
// DataOut: a2 a3 a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C2C:
	branch v51_121 == 0x0013 l00006E38
// DataOut: a2 a3 a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006E38:
	Mem1029[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	dwLoc20_1026 = 1
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -001C(0) Local -0020(32) Local -0038(32)

l00006C34:
	word32 dwLoc18_1007
	branch v51_121 == 0x0014 l00006C5C
// DataOut: a2 a3 a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C5C:
	word32 d0_1016
	branch bLoc13_1040 == 0x00 l00006C6A
// DataOut: a2 a3 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C6A:
	word32 a0_1018 = Mem0[dwArg08:word32]
	Mem1020[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	d0_1016 = Mem1020[a0_1018:word32]
// DataOut: a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C62:
	word32 a0_1012 = Mem0[dwArg08:word32]
	Mem1014[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	d0_1016 = Mem1014[a0_1012:word32]
// DataOut: a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C70:
	dwLoc18_1007 = d0_1016
	branch d0_1016 >= 0x00000000 l00006C80
// DataOut: a3 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C76:
	dwLoc18_1007 = -Mem0[fp + 0xFFFFFFE8:word32]
	dwLoc1C_1010 = 1
// DataOut: a3 a4 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C80:
	branch dwLoc1C_1010 == 0x00000000 l00006C8A
// DataOut: a3 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C8A:
	branch (byte) d6_1108 == 0x00 l00006C92
// DataOut: a3 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C92:
// DataOut: a3 a4 d0 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C8E:
// DataOut: a3 a4 d0 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C86:
// DataOut: a3 a4 d0 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C94:
	branch (dwLoc1C_1010 | (int32) ((byte) d6_1108) | (int32) ((byte) d5_1107)) == 0x00000000 l00006CAE
// DataOut: a3 a4 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006CA6:
	dwLoc38_182 = fp + 0xFFFFFFCD
	dwLoc20_47 = 0x00000001
// DataOut: a3 a4 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -52(fp):<invalid> -32(fp):0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C38:
	branch v51_121 == 0x001F l00006D4C
// DataOut: a2 a3 a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D4C:
	word32 d0_908
	branch bLoc13_1040 == 0x00 l00006D5A
// DataOut: a2 a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D5A:
	word32 a0_950 = Mem0[dwArg08:word32]
	Mem952[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	d0_908 = Mem952[a0_950:word32]
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D52:
	word32 a0_944 = Mem0[dwArg08:word32]
	Mem946[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	d0_908 = Mem946[a0_944:word32]
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D60:
	branch bLoc08_1103 == 0x00 l00006D7C
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D6A:
	dwLoc20_47 = 1
	dwLoc38_182 = fp + 0xFFFFFFCD
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D7C:
	dwLoc3C_596 = fn00007C8C(dwLoc38_182, d0_908)
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -52(fp):0x30 -32(fp):<invalid> -28(fp):0 -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -003C(32) Local -0040(32)

l00006C40:
	d1_122 = DPB(d1_118, v51_121 - 0x0020, 0)
	branch v51_121 == 0x0020 l00006D90
// DataOut: a2 a3 a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D90:
	branch dwLoc12_1058 > 0x00000000 l00006D9E
// DataOut: a2 a3 a4 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D98:
	dwLoc12_1058 = 8
// DataOut: a2 a3 a4 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D9E:
	bLoc13_1040 = 0x01
// DataOut: a2 a3 a4 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006C46:
	branch v51_121 == 0x0023 l00006E00
// DataOut: a2 a3 a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006E00:
	word32 a0_863 = Mem0[dwArg08:word32]
	Mem865[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	word32 a1_867 = Mem865[a0_863:word32]
	dwLoc38_182 = a1_867
	branch a1_867 != 0x00000000 l00006E14
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0038(32)

l00006E0C:
	dwLoc38_182 = 0x00006F2C
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0038(32)

l00006E14:
	word32 a0_874 = dwLoc38_182
// DataOut: a0 a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0038(32)

l00006E18:
	a0_874 = a0_1133 + 0x00000001
	word32 a0_1133 = a0_874
	branch Mem865[a0_1133:byte] != 0x00 l00006E18
// DataOut: a0 a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0038(32)

l00006E1C:
	word32 a0_883 = a0_874 - 0x00000001 - dwLoc38_182
	dwLoc20_1026 = a0_883
	branch dwLoc12_1058 < 0x00000000 l00006E54
// DataOut: a0 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -001C(0) Local -0020(32) Local -0038(32)

l00006E2E:
	branch a0_883 - dwLoc12_1058 <= 0x00000000 l00006E54
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -32(fp):<invalid> -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -001C(0) Local -0020(32) Local -0038(32)

l00006E32:
	dwLoc20_1026 = dwLoc12_1058
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -32(fp):<invalid> -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -001C(0) Local -0020(32) Local -0038(32)

l00006C4C:
	branch v51_121 == 0x0025 l00006D30
// DataOut: a2 a3 a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D30:
	word32 d0_847
	branch bLoc13_1040 == 0x00 l00006D3E
// DataOut: a2 a3 a4 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D3E:
	word32 a0_857 = Mem0[dwArg08:word32]
	Mem859[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	d0_847 = Mem859[a0_857:word32]
// DataOut: a3 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D36:
	word32 a0_851 = Mem0[dwArg08:word32]
	Mem853[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	d0_847 = Mem853[a0_851:word32]
// DataOut: a3 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006D44:
	dwLoc18_1007 = d0_847
// DataOut: a3 a4 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0018(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006CAE:
	dwLoc3C_596 = fn00007BF4(-1, dwLoc38_182, dwLoc18_1007)
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -52(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -003C(32) Local -0040(32)

l00006C52:
	d1_122 = DPB(d1_118, v51_121 - 0x0028, 0)
	branch v51_121 == 0x0028 l00006DA4
// DataOut: a2 a3 a4 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006DA4:
	word32 d0_696
	branch bLoc13_1040 == 0x00 l00006DB2
// DataOut: a2 a3 a4 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006DB2:
	word32 a0_749 = Mem0[dwArg08:word32]
	Mem751[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	d0_696 = Mem751[a0_749:word32]
// DataOut: a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006DAA:
	word32 a0_743 = Mem0[dwArg08:word32]
	Mem745[dwArg08:word32] = Mem0[dwArg08:word32] + 0x00000004
	d0_696 = Mem745[a0_743:word32]
// DataOut: a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006DB8:
	branch bLoc08_1103 == 0x00 l00006DD8
// DataOut: a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006DC2:
	d1_122 = 2
	dwLoc20_47 = 2
	dwLoc38_182 = fp + 0xFFFFFFCE
// DataOut: a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -0014(0) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006DD8:
	word32 d0_720 = fn00007CCC(d1_122, dwLoc38_182, d0_696)
	dwLoc3C_596 = d0_720
	branch __btst(v48_113, 0x0005) l00006CC0
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):<invalid> -52(fp):0x30 -51(fp):0x78 -32(fp):<invalid> -28(fp):0 -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -003C(32) Local -0040(32) Local -0060(32)

l00006DF2:
	fn000078D4(d0_720, a4, fp + 0xFFFFFFCC)
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x30 -51(fp):0x78 -32(fp):<invalid> -28(fp):0 -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -003C(32) Local -0040(32)

l00006CC0:
	branch dwLoc12_1058 > 0x00000000 l00006CCE
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -003C(32) Local -0040(32)

l00006CC8:
	dwLoc12_1058 = 1
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -003C(32) Local -0040(32)

l00006CCE:
	word32 d0_614 = dwLoc3C_596
	word32 d1_616 = dwLoc12_1058 - dwLoc3C_596
	branch d1_616 <= 0x00000000 l00006D14
// DataOut: a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32) Local -0038(32) Local -0040(32)

l00006CE0:
	fn000082E4(dwLoc38_182, dwLoc38_182 + d1_616, dwLoc3C_596)
	word32 d1_662 = dwLoc40
	word32 a0_664 = dwLoc38_182
// DataOut: a0 a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32)

l00006D08:
	d1_662 = d1_662 - 0x00000001
	branch d1_662 >=u 0x00000000 l00006D06
// DataOut: a0 a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32)

l00006D06:
	Mem676[a0_664:byte] = bLoc09_1094
	a0_664 = a0_664 + 0x00000001
// DataOut: a0 a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -0012(32) Local -001C(0) Local -0020(32)

l00006D0C:
	d0_614 = dwLoc12_1058
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -001C(0) Local -0020(32)

l00006D14:
	dwLoc20_1026 = dwLoc20_47 + d0_614
	dwLoc38_182 = fp + 0xFFFFFFCC
	branch (byte) d7_1109 == 0x00 l00006E54
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -001C(0) Local -0020(32) Local -0038(32)

l00006D26:
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:fp + 0xFFFFFFCC a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):fp + 0xFFFFFFCC -52(fp):<invalid> -51(fp):0x78 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(32) Local -001C(0) Local -0020(32) Local -0038(32)

l00006E54:
	word32 dwLoc0E_199
	branch dwLoc0E_1076 - dwLoc20_1026 >= 0x00000000 l00006E68
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -001C(0) Local -0020(8) Local -0038(32)

l00006E68:
	dwLoc0E_199 = dwLoc0E_1076 - dwLoc20_1026
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -001C(0) Local -0020(8) Local -0038(32)

l00006E60:
	dwLoc0E_199 = 0
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -001C(0) Local -0020(8) Local -0038(32)

l00006E6C:
	branch (byte) d7_1109 == 0x00 l00006EA8
// DataOut: a3 a4 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -001C(0) Local -0020(8) Local -0038(32)

l00006EA8:
	branch dwLoc1C_1010 != 0x00000000 l00006EB6
// DataOut: a3 a4 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(32) Local -0038(32)

l00006EAE:
	branch (byte) d5_1107 != 0x00 l00006EB6
// DataOut: a3 a4 d0 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(32) Local -0038(32)

l00006EB2:
	branch (byte) d6_1108 == 0x00 l00006EEC
// DataOut: a3 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(32) Local -0038(32)

l00006EB6:
	byte v116_511 = Mem0[dwLoc38_182:byte]
	branch v116_511 == 0x20 l00006ECE
// DataOut: a0 a3 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(32) Local -0038(32)

l00006EC2:
	branch v116_511 == 0x2B l00006ECE
// DataOut: a0 a3 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:32 d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(32) Local -0038(32)

l00006EC8:
	branch v116_511 != 0x2D l00006EEC
// DataOut: a0 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:43 d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(32) Local -0038(32)

l00006ECE:
	branch dwLoc20_1026 < 0x00000000 l00006EEC
// DataOut: a0 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(8) Local -0038(32)

l00006ED6:
	word32 a7_537
	word32 a5_538
	word32 a2_540
	word32 d7_541
	word32 d6_542
	word32 d5_543
	word32 d2_544
	byte CVZN_545
	word32 d0_546
	word32 d1_547
	word32 a0_548
	byte Z_549
	byte CVZNX_550
	byte ZN_551
	byte C_552
	byte V_553
	word32 a1_554
	byte N_555
	byte VZN_556
	word32 a6_557
	byte VN_558
	byte CZ_559
	bcuiposr0 None_560
	word32 a4_561
	call dwArg0C (retsize: 4; depth: 96)
		uses: a0_535,a1_186,a2_28,a3_114,a4,a5_5,a6_183,a7_529,bLoc08_54,bLoc09_179,bLoc13_171,bLoc14_120,bLoc33_174,bLoc34_173,C_523,CVZN_534,CVZNX_200,CZ,d0_528,d1_518,d2_201,d5_58,d6_59,d7_60,dwLoc04_4,dwLoc0E_199,dwLoc12_175,dwLoc18_172,dwLoc1C_170,dwLoc20_180,dwLoc38_533,dwLoc3C_178,dwLoc44_9,dwLoc48_12,dwLoc4C_15,dwLoc50_18,dwLoc54_21,dwLoc58_24,dwLoc5C_531,dwLoc60_176,dwLoc64_177,N_522,None,V_524,VN_198,VZN_184,Z_517,ZN_521
		defs: a0_548,a1_554,a2_540,a3_539,a4_561,a5_538,a6_557,a7_537,C_552,CVZN_545,CVZNX_550,CZ_559,d0_546,d1_547,d2_544,d5_543,d6_542,d7_541,N_555,None_560,V_553,VN_558,VZN_556,Z_549,ZN_551
	dwLoc20_1026 = dwLoc20_1026 - 0x00000001
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(8) Local -0038(32)

l00006EEC:
	word32 v125_401 = dwLoc0E_199 - 0x00000001
	dwLoc0E_199 = v125_401
	branch v125_401 < 0x00000000 l00006F04
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(8) Local -0038(32)

l00006F04:
	word32 v129_465 = dwLoc20_1026 - 0x00000001
	dwLoc20_1026 = v129_465
	branch v129_465 < 0x00000000 l00006F22
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0020(8) Local -0038(32)

l00006F0A:
	word32 a7_481
	word32 a5_482
	word32 a2_484
	word32 d7_485
	word32 d6_486
	word32 d5_487
	word32 d2_488
	byte CVZN_489
	word32 d0_490
	word32 d1_491
	word32 a0_492
	byte Z_493
	byte CVZNX_494
	byte ZN_495
	byte C_496
	byte V_497
	word32 a1_498
	byte N_499
	byte VZN_500
	word32 a6_501
	byte VN_502
	byte CZ_503
	bcuiposr0 None_504
	word32 a4_505
	call dwArg0C (retsize: 4; depth: 96)
		uses: a0_480,a1_448,a2_459,a3_464,a4_442,a5_460,a6_445,a7_474,bLoc08_54,bLoc09_179,bLoc13_171,bLoc14_120,bLoc33_174,bLoc34_173,C_450,CVZN_479,CVZNX_467,CZ_468,d0_473,d1_454,d2_456,d5_457,d6_458,d7_462,dwLoc04_4,dwLoc0E_402,dwLoc12_175,dwLoc18_172,dwLoc1C_170,dwLoc20_466,dwLoc38_478,dwLoc3C_178,dwLoc44_9,dwLoc48_12,dwLoc4C_15,dwLoc50_18,dwLoc54_21,dwLoc58_24,dwLoc5C_476,dwLoc60_176,dwLoc64_177,N_447,None_443,V_449,VN_444,VZN_446,Z_452,ZN_451
		defs: a0_492,a1_498,a2_484,a3_483,a4_505,a5_482,a6_501,a7_481,C_496,CVZN_489,CVZNX_494,CZ_503,d0_490,d1_491,d2_488,d5_487,d6_486,d7_485,N_499,None_504,V_497,VN_502,VZN_500,Z_493,ZN_495
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0020(8) Local -0038(32)

l00006EF2:
	word32 a7_413
	word32 a5_414
	word32 a2_416
	word32 d7_417
	word32 d6_418
	word32 d5_419
	word32 d2_420
	byte CVZN_421
	word32 d0_422
	word32 d1_423
	word32 a0_424
	byte Z_425
	byte CVZNX_426
	byte ZN_427
	byte C_428
	byte V_429
	word32 a1_430
	byte N_431
	byte VZN_432
	word32 a6_433
	byte VN_434
	byte CZ_435
	bcuiposr0 None_436
	word32 a4_437
	call dwArg0C (retsize: 4; depth: 96)
		uses: a0_412,a1_384,a2_395,a3_400,a4_378,a5_396,a6_381,a7_408,bLoc08_54,bLoc09_179,bLoc13_171,bLoc14_120,bLoc33_174,bLoc34_173,C_386,CVZN_411,CVZNX_403,CZ_404,d0_407,d1_390,d2_392,d5_393,d6_394,d7_398,dwLoc04_4,dwLoc0E_402,dwLoc12_175,dwLoc18_172,dwLoc1C_170,dwLoc20_374,dwLoc38_377,dwLoc3C_178,dwLoc44_9,dwLoc48_12,dwLoc4C_15,dwLoc50_18,dwLoc54_21,dwLoc58_24,dwLoc5C_410,dwLoc60_176,dwLoc64_177,N_383,None_379,V_385,VN_380,VZN_382,Z_388,ZN_387
		defs: a0_424,a1_430,a2_416,a3_415,a4_437,a5_414,a6_433,a7_413,C_428,CVZN_421,CVZNX_426,CZ_435,d0_422,d1_423,d2_420,d5_419,d6_418,d7_417,N_431,None_436,V_429,VN_434,VZN_432,Z_425,ZN_427
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(8) Local -0038(32)

l00006E70:
	word32 v106_264 = dwLoc20_1026 - 0x00000001
	dwLoc20_1026 = v106_264
	branch v106_264 < 0x00000000 l00006E8E
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(8) Local -0038(32)

l00006E8E:
	word32 v113_332 = dwLoc0E_199 - 0x00000001
	dwLoc0E_199 = v113_332
	branch v113_332 < 0x00000000 l00006F22
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8)

l00006F22:
	d0_154 = a3_114
// DataOut: a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006E96:
	word32 a7_344
	word32 a5_345
	word32 a2_347
	word32 d7_348
	word32 d6_349
	word32 d5_350
	word32 d2_351
	byte CVZN_352
	word32 d0_353
	word32 d1_354
	word32 a0_355
	byte Z_356
	byte CVZNX_357
	byte ZN_358
	byte C_359
	byte V_360
	word32 a1_361
	byte N_362
	byte VZN_363
	word32 a6_364
	byte VN_365
	byte CZ_366
	bcuiposr0 None_367
	word32 a4_368
	call dwArg0C (retsize: 4; depth: 96)
		uses: a0_343,a1_315,a2_326,a3_331,a4_309,a5_327,a6_312,a7_339,bLoc08_54,bLoc09_179,bLoc13_171,bLoc14_120,bLoc33_174,bLoc34_173,C_317,CVZN_342,CVZNX_334,CZ_335,d0_338,d1_321,d2_323,d5_324,d6_325,d7_329,dwLoc04_4,dwLoc0E_333,dwLoc12_175,dwLoc18_172,dwLoc1C_170,dwLoc20_265,dwLoc38_240,dwLoc3C_178,dwLoc44_9,dwLoc48_12,dwLoc4C_15,dwLoc50_18,dwLoc54_21,dwLoc58_24,dwLoc5C_341,dwLoc60_176,dwLoc64_177,N_314,None_310,V_316,VN_311,VZN_313,Z_319,ZN_318
		defs: a0_355,a1_361,a2_347,a3_346,a4_368,a5_345,a6_364,a7_344,C_359,CVZN_352,CVZNX_357,CZ_366,d0_353,d1_354,d2_351,d5_350,d6_349,d7_348,N_362,None_367,V_360,VN_365,VZN_363,Z_356,ZN_358
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8)

l00006E76:
	word32 a7_281
	word32 a5_282
	word32 a2_284
	word32 d7_285
	word32 d6_286
	word32 d5_287
	word32 d2_288
	byte CVZN_289
	word32 d0_290
	word32 d1_291
	word32 a0_292
	byte Z_293
	byte CVZNX_294
	byte ZN_295
	byte C_296
	byte V_297
	word32 a1_298
	byte N_299
	byte VZN_300
	word32 a6_301
	byte VN_302
	byte CZ_303
	bcuiposr0 None_304
	word32 a4_305
	call dwArg0C (retsize: 4; depth: 96)
		uses: a0_280,a1_247,a2_258,a3_263,a4_241,a5_259,a6_244,a7_273,bLoc08_54,bLoc09_179,bLoc13_171,bLoc14_120,bLoc33_174,bLoc34_173,C_249,CVZN_278,CVZNX_266,CZ_267,d0_272,d1_253,d2_255,d5_256,d6_257,d7_261,dwLoc04_4,dwLoc0E_199,dwLoc12_175,dwLoc18_172,dwLoc1C_170,dwLoc20_265,dwLoc38_277,dwLoc3C_178,dwLoc44_9,dwLoc48_12,dwLoc4C_15,dwLoc50_18,dwLoc54_21,dwLoc58_24,dwLoc5C_275,dwLoc60_176,dwLoc64_177,N_246,None_242,V_248,VN_243,VZN_245,Z_251,ZN_250
		defs: a0_292,a1_298,a2_284,a3_283,a4_305,a5_282,a6_301,a7_281,C_296,CVZN_289,CVZNX_294,CZ_303,d0_290,d1_291,d2_288,d5_287,d6_286,d7_285,N_299,None_304,V_297,VN_302,VZN_300,Z_293,ZN_295
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0009(32) Local -000E(8) Local -0020(8) Local -0038(32)

l00006C58:
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006E4E:
	d0_154 = 0
// DataOut: a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006F24:
	return d0_154
// DataOut: a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5

fn00006B30_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 a3:a3 a2:a2 d7:d7 d6:d6 d5:d5 d0:<invalid> d1:<invalid> d2:d2 a0:<invalid> a1:<invalid> a6:<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -51(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -19(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -4(fp):a5

l00006B8C:
	d7_1109 = 1
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)

l00006B9E:
	a3_1092 = a3_1092 + 0x00000001
// DataOut: a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000058 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:-1 a0:fp + 0xFFFFFFCC -88(fp):d2 -84(fp):d5 -80(fp):d6 -76(fp):d7 -72(fp):a2 -68(fp):a3 -56(fp):fp + 0xFFFFFFCC -32(fp):0 -28(fp):0 -19(fp):0x00 -18(fp):-1 -14(fp):0 -9(fp):0x20 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(0) Local -0009(32) Local -000E(32) Local -0012(32) Local -0013(0) Local -001C(32) Local -0020(32) Local -0038(32) Local -0040(32) Local -0064(32)



void fn00006F2E(word32 d7, word32 a4, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d7
// LiveOut:
// Trashed: CVZNX a0 a1 a6 d0 d1
// Preserved: a2 a3 a5 a7 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(8)
fn00006F2E_entry:
// DataOut: a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(8)

l00006F2E:
	word32 a3_17 = dwArg04
	word32 a2_19 = dwArg08
// DataOut: a2 a3 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00006F44:
	byte v9_43 = Mem0[a2_19:byte]
	word32 a2_44 = a2_19 + 0x00000001
	branch v9_43 == 0x00 l00006F7E
// DataOut: a2 a3 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006F7E:
	return
// DataOut: a4 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5

fn00006F2E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 a3:a3 a2:a2 d7:d7 d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5

l00006F4A:
	branch v9_43 != 0x25 l00006F72
// DataOut: a2 a3 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006F50:
	branch 0x25 - Mem0[a2_44:byte] != 0x00 l00006F58
// DataOut: a2 a3 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:37 d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006F58:
	word32 d0_90 = fn00006B30(a4, a2_44, fp + 0xFFFFFFF2, a3_17)
	branch d0_90 == 0x00000000 l00006F72
// DataOut: a2 a3 a4 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:37 d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006F6E:
	a2_19 = d0_90
// DataOut: a2 a3 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006F54:
// DataOut: a2 a3 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:37 d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00006F72:
	word32 a7_64
	word32 a5_65
	word32 d7_68
	byte CVZN_69
	byte ZN_70
	byte C_71
	byte V_72
	byte Z_73
	word32 d0_74
	call a3_17 (retsize: 4; depth: 36)
		uses: a2_44,a3_39,a4_34,a5_40,a7_60,C_48,CVZN_63,d0_59,d7_45,dwLoc04_4,dwLoc0A_56,dwLoc0E_22,dwLoc14_9,dwLoc18_12,dwLoc1C_15,dwLoc20_62,dwLoc24_54,dwLoc28_55,V_49,Z_53,ZN_46
		defs: a2_67,a3_66,a4_75,a5_65,a7_64,C_71,CVZN_69,d0_74,d7_68,V_72,Z_73,ZN_70
// DataOut: a2 a3 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> -40(fp):<invalid> -36(fp):fp + 0xFFFFFFF2 -32(fp):<invalid> -28(fp):d7 -24(fp):a2 -20(fp):a3 -14(fp):<invalid> -10(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)



word32 fn00006F88(word32 d0, word32 a4, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d0
// LiveOut: d0
// Trashed: CVZN d0 d1
// Preserved: a3 a6 a7
// Stack args: Stack +0004(32)
fn00006F88_entry:
// DataOut: a2 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00006F88:
	word32 d0_19
	InitCode(d0, dwArg04)
	branch d0 != 0x00000000 l00006FB0
// DataOut: a2 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00006FB0:
	d0_19 = 0
// DataOut: a2 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d1:<invalid> a6:<invalid> -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00006F9E:
	Forbid()
	Mem26[a4 + 8240:word32] = d0
	Mem29[a4 + 18336:word32] = 2
	d0_19 = -1
// DataOut: a2 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d1:<invalid> a6:<invalid> -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00006FB2:
	return d0_19
// DataOut: a2 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d1:<invalid> a6:<invalid> d0:<invalid> -8(fp):a3 -4(fp):a6

fn00006F88_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d1:<invalid> a6:a6 d0:<invalid> -8(fp):a3 -4(fp):a6



word32 fn00006FB8(word32 d0, word32 a2, word32 a4, word32 a5, word32 dwArg04, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d0
// LiveOut: a2 a4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
// Stack args: Stack +0004(32)
fn00006FB8_entry:
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0038(32) Stack +0004(32)

l00006FB8:
	word32 a3_23 = dwArg04
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00006FC4:
	branch Mem0[a4 + 18142:word32] - 0x00000020 >= 0x00000000 l000070B4
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00006FD0:
	byte v14_275 = Mem0[a3_23:byte]
	branch v14_275 == 0x20 l00006FE4
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00006FD8:
	branch v14_275 == 0x09 l00006FE4
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:32 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00006FDE:
	branch v14_275 != 0x0A l00006FE8
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:9 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00006FE8:
	byte v21_293 = Mem0[a3_23:byte]
	branch v21_293 == 0x00 l000070B4
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:10 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00006FEE:
	word32 d1_297 = Mem0[a4 + 18142:word32]
	Mem300[a4 + 18142:word32] = Mem0[a4 + 18142:word32] + 0x00000001
	word32 a0_303 = a4 + 18150 + (d1_297 << 0x00000002)
	a2 = a0_303
	branch v21_293 != 0x22 l0000708C
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:10 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l0000708C:
	Mem409[a0_303:word32] = a3_23
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:34 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l0000708E:
	byte v96_414 = Mem409[a3_23:byte]
	branch v96_414 == 0x00 l000070A8
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00007092:
	branch v96_414 == 0x20 l000070A8
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00007098:
	branch v96_414 == 0x09 l000070A8
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:32 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l0000709E:
	branch v96_414 == 0x0A l000070A8
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:9 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070A8:
	branch Mem409[a3_23:byte] != 0x00 l000070AE
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070AE:
	Mem424[a3_23:byte] = 0x00
	a3_23 = a3_23 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070AC:
// DataOut: a2 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070A4:
	a3_23 = a3_23 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:10 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00007008:
	word32 a3_309 = a3_23 + 0x00000001
	Mem312[a0_303:word32] = a3_309
	word32 dwLoc18_314 = a3_309
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:34 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l00007012:
	byte v27_324 = Mem312[a3_309:byte]
	branch v27_324 == 0x22 l0000707C
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l0000701A:
	branch v27_324 == 0x00 l0000707C
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:34 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l0000707C:
	Mem336[dwLoc18_314:byte] = 0x00
	a3_23 = a3_309 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:34 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l0000701E:
	branch v27_324 != 0x2A l00007070
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:34 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l00007070:
	Mem403[dwLoc18_314:byte] = Mem312[a3_309:byte]
	a3_309 = a3_309 + 0x00000001
	dwLoc18_314 = dwLoc18_314 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l00007024:
	word32 a3_349 = a3_309 + 0x00000001
	word16 v34_353 = (word16) (int32) Mem312[a3_349:byte] - 0x0030
	branch v34_353 == 0x0000 l0000703E
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l0000703E:
	Mem394[dwLoc18_314:byte] = 0x00
// DataOut: a2 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070B4:
	word32 a0_271
	word32 d0_61 = Mem0[a4 + 18142:word32]
	branch d0_61 != 0x00000000 l000070C0
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070C0:
	a0_271 = a4 + 18150
// DataOut: a0 a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070BA:
	a0_271 = Mem0[a4 + 8276:word32]
// DataOut: a0 a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070C4:
	word32 d7_238
	word32 d2_214
	Mem66[a4 + 18146:word32] = a0_271
	branch d0_61 != 0x00000000 l00007148
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00007148:
	execPrivate4()
	Mem244[a4 + 17764:word32] = d0_61
	execPrivate5()
	Mem246[a4 + 17772:word32] = d0_61
	Supervisor(fp - 0x00000004)
	Mem251[a4 + 17780:word32] = d0_61
	d2_214 = 0x000003ED
	branch d0_61 != 0x00000000 l00007182
// DataOut: a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00007174:
	Supervisor(fp - 0x00000004)
	Mem269[a4 + 17780:word32] = d0_61
// DataOut: a2 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:00007216 a6:<invalid> d1:00007216 d2:0x000003ED a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00007182:
	d7_238 = 16
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> a6:<invalid> d1:<invalid> d2:0x000003ED a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000070CC:
	word32 a0_175 = 0x00007204
	Mem180[a4 + 18084:word32] = Mem66[a0_175:word32]
	Mem185[a4 + 0x000046A8:word32] = Mem180[a0_175 + 0x00000004:word32]
	Mem190[a4 + 0x000046AC:word32] = Mem185[a0_175 + 0x00000008:word32]
	Mem195[a4 + 0x000046B0:word32] = Mem190[a0_175 + 0x0000000C:word32]
	Mem198[a4 + 0x000046B4:word16] = Mem195[a0_175 + 0x00000010:word16]
	word32 d0_210 = fn00007AD8(a4 + 18084, Mem198[Mem198[Mem198[a4 + 8276:word32] + 36:word32] + 4:word32], 0x00000028)
	Supervisor(fp - 0x00000004)
	Mem217[a4 + 17764:word32] = d0_210
	Mem219[a4 + 17772:word32] = d0_210
	Mem222[a4 + 17768:word32] = 16
	Mem224[a4 + 17780:word32] = d0_210
	Mem226[a4 + 17776:word32] = 16
	Mem237[FindTask(0x00000000) + 164:word32] = Mem226[(d0_210 << 0x00000002) + 8:word32]
	d2_214 = 0x000003EE
	d7_238 = 0
// DataOut: a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l00007184:
	word32 d0_101
	Mem89[a4 + 17760:word32] = Mem66[a4 + 17760:word32] | DPB(d7_238, (word16) d7_238 | 0x8001, 0)
	Mem94[a4 + 17768:word32] = Mem89[a4 + 17768:word32] | DPB(d7_238, (word16) d7_238 | 0x8002, 0)
	Mem96[a4 + 17776:word32] = Mem94[a4 + 17776:word32] | 0x00008003
	branch Mem96[a4 + 7772:word32] == 0x00000000 l000071AA
// DataOut: a2 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d7:<invalid> a2:<invalid> -56(fp):a4 + 18084 -52(fp):<invalid> -48(fp):00000028 -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000071AA:
	d0_101 = 0x00008000
// DataOut: a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d7:<invalid> a2:<invalid> -56(fp):a4 + 18084 -52(fp):<invalid> -48(fp):00000028 -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000071A6:
	d0_101 = 0
// DataOut: a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d7:<invalid> a2:<invalid> -56(fp):a4 + 18084 -52(fp):<invalid> -48(fp):00000028 -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)

l000071B0:
	Mem103[a4 + 7696:word32] = 0x00000000
	Mem108[a4 + 7692:word32] = DPB(d0_101, (word16) d0_101 | 0x0001, 0)
	Mem111[a4 + 7730:word32] = 1
	Mem116[a4 + 7726:word32] = DPB(d0_101, (word16) d0_101 | 0x0002, 0)
	Mem119[a4 + 7764:word32] = 2
	Mem124[a4 + 7760:word32] = DPB(d0_101, (word16) d0_101 | 0x0080, 0)
	Mem127[a4 + 8264:word32] = 0x00009238
	word32 a3_137
	word32 a4_138
	word32 a2_139 = fn000011F8(d2_214, d0_101, a2, a4, fp - 0x00000004, Mem127[a4 + 18142:word32], out a3_137, out a4_138)
	Mem140[fp - 0x00000034:word32] = 0x00000000
	word32 d1_146
	word32 d2_147
	word32 d4_148
	word32 d5_149
	word32 a1_150
	word32 a2_151
	word32 a4_152
	word32 a5_153
	word32 a6_154
	fn00008A58(a2_139, a3_137, a4_138, dwArg00, out d1_146, out d2_147, out d4_148, out d5_149, out a1_150, out a2_151, out a4_152, out a5_153, out a6_154)
	return Mem140[a5_153 + 0xFFFFFFE0:word32]
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d7:<invalid> a2:<invalid> -56(fp):a4 + 18084 -52(fp):<invalid> -48(fp):00000028 -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5

fn00006FB8_exit:
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -56(fp):a4 + 18084 -52(fp):<invalid> -48(fp):<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5

l00007030:
	branch v34_353 == 0x0015 l00007046
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l00007046:
	Mem388[dwLoc18_314:byte] = 0x17
	dwLoc18_314 = dwLoc18_314 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l00007036:
	branch v34_353 == 0x001E l00007054
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l00007054:
	Mem381[dwLoc18_314:byte] = 0x0A
	dwLoc18_314 = dwLoc18_314 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l0000703C:
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l00007062:
	Mem374[dwLoc18_314:byte] = Mem312[a3_349:byte]
	dwLoc18_314 = dwLoc18_314 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l0000706C:
	a3_309 = a3_349 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:42 a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0018(32) Local -0038(32)

l00006FE4:
	a3_23 = a3_23 + 0x00000001
// DataOut: a2 a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> -44(fp):d2 -40(fp):d7 -36(fp):a2 -32(fp):a3 -28(fp):a6 -24(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32)



word32 fn00007234(word32 d2, word32 a4, word32 dwArg04, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d2
// LiveOut: a1 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a3 a7
// Stack args: Stack +0004(32)
fn00007234_entry:
	*a1Out = a1
// DataOut: a1 a2 a4 a5 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00007234:
	word32 d0_17
	branch Mem0[dwArg04 + 20:word32] == 0x00000000 l0000724C
// DataOut: a1 a2 a3 a4 a5 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007240:
	branch __btst(Mem0[dwArg04 + 27:byte], 0x0003) l0000724C
// DataOut: a1 a2 a3 a4 a5 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> -4(fp):a3
// LocalsOut: fp(32)

l0000724C:
	word32 a0_30
	word32 a1_31
	word32 d0_32 = fn0000843C(d2, a4, Mem0[a4 + 8212:word32], out a0_30, out a1_31)
	Mem35[dwArg04 + 4:word32] = d0_32
	Mem37[dwArg04 + 16:word32] = d0_32
	branch d0_32 != 0x00000000 l0000726A
// DataOut: a1 a2 a3 a4 a5 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> -4(fp):a3

l0000726A:
	Mem46[dwArg04 + 20:word32] = Mem37[a4 + 8212:word32]
	Mem49[dwArg04 + 24:word32] = Mem46[dwArg04 + 24:word32] & -13
	Mem52[dwArg04 + 12:word32] = 0
	Mem54[dwArg04 + 8:word32] = 0
	d0_17 = 0
// DataOut: a1 a2 a4 a5 d0 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a3

l00007260:
	Mem42[a4 + 18336:word32] = 12
	d0_17 = -1
// DataOut: a1 a2 a4 a5 d0 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a3

l00007248:
	d0_17 = 0
// DataOut: a1 a2 a4 a5 d0 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> -4(fp):a3

l00007280:
	return d0_17
// DataOut: a1 a2 a4 a5 d0 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a3

fn00007234_exit:
// DataOut: a1 d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a3



word32 fn0000728C(word32 d2, word32 a2, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d2
// LiveOut: a1 a2 a4 d0
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a5 a7 d2 d4 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn0000728C_entry:
	*a1Out = a1
	*a2Out = a2
	*a4Out = a4
// DataOut: a1 a2 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0038(32) Local -003C(32) Stack +0004(32) Stack +0008(32)

l0000728C:
	word32 d0_158
	word32 a5_123 = fp - 0x00000004
	word32 a7_124 = fp - 0x00000030
	word32 d7_122 = dwArg04
	word32 d4_120 = dwArg04
	branch (Mem0[dwArg08 + 24:word32] & 49) == 0x00000000 l000072AC
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Local -0038(32) Local -003C(32)

l000072AC:
	word32 d0_96 = (int32) (int16) (int16) -__btst(Mem0[dwArg08 + 26:byte], 0x0007)
	branch Mem0[dwArg08 + 20:word32] != 0x00000000 l00007342
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32) Local -003C(32)

l000072C4:
	branch __btst(Mem0[dwArg08 + 27:byte], 0x0002) l00007342
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -0038(32) Local -003C(32)

l00007342:
	word32 d5_121
	branch __btst(Mem0[dwArg08 + 27:byte], 0x0002) l000073A2
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -003C(32)

l000073A2:
	__bset(Mem0[dwArg08 + 27:byte], 0x0001, out Mem0[dwArg08 + 27:byte])
	branch (byte) d0_96 == 0x00 l000073FA
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -003C(32)

l000073AC:
	branch dwArg04 == 0xFFFFFFFF l000073FA
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -003C(32)

l000073B2:
	Mem442[dwArg08 + 12:word32] = Mem0[dwArg08 + 12:word32] + 0x00000002
	branch dwArg04 != 0x0000000A l000073DE
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -003C(32)

l000073BC:
	word32 a0_472 = Mem442[dwArg08 + 4:word32]
	Mem474[dwArg08 + 4:word32] = Mem442[dwArg08 + 4:word32] + 0x00000001
	Mem477[a0_472:byte] = 0x0D
	branch Mem477[dwArg08 + 12:word32] < 0x00000000 l000073DA
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d1:10 -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -003C(32)

l000073D0:
	word32 a1_501
	fn0000728C(d2, a2, a4, fp - 0x00000004, -1, dwArg08, out a1_501, out a2, out a4)
	a7_124 = fp - 0x00000030
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d1:<invalid> a0:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000073DA:
	Mem492[dwArg08 + 12:word32] = Mem477[dwArg08 + 12:word32] + 0x00000001
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):-1 -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000073DE:
	word32 a0_456 = Mem442[dwArg08 + 4:word32]
	Mem458[dwArg08 + 4:word32] = Mem442[dwArg08 + 4:word32] + 0x00000001
	Mem462[a0_456:byte] = (byte) dwArg04
	branch Mem462[dwArg08 + 12:word32] > 0x00000000 l000073F8
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):-1 -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000073F8:
	d7_122 = -1
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):-1 -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000073FA:
	word32 d0_319 = Mem0[dwArg08 + 4:word32] - Mem0[dwArg08 + 16:word32]
	Mem322[fp + 0xFFFFFFEC:word32] = d0_319
	branch d0_319 == 0x00000000 l0000747A
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):-1 -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000747A:
	d5_121 = 0
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):-1 -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -20(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007408:
	branch __btst(Mem322[dwArg08 + 26:byte], 0x0006) l00007462
// DataOut: a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):-1 -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -20(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007410:
	word32 a7_359 = a7_124 - 0x00000004
	Mem360[a7_359:word32] = 0x00000002
	Mem362[0x00000000:word32] = 0x00000000
	Mem366[a7_359 - 0x00000008:word32] = Mem362[dwArg08 + 28:word32]
	word32 d2_368
	word32 d0_372 = fn00008388(a2, a4, dwArg00, dwArg04, dwArg08, out d2_368, out a2, out a4, out a5_123)
	Mem375[a5_123 + -20:word32] = d0_372
	a7_124 = a7_359 + 0x00000004
	branch (byte) d0_96 == 0x00 l00007462
// DataOut: a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):-1 -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -20(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000742A:
	word32 v60_392 = Mem375[a5_123 + -20:word32] - 0x00000001
	Mem393[a5_123 + -20:word32] = v60_392
	branch v60_392 < 0x00000000 l00007462
// DataOut: a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007430:
	Mem397[0x00000000:word32] = 0x00000000
	word32 a7_396 = a7_124 - 0x00000004
	Mem401[a7_396 - 0x00000004:word32] = Mem397[a5_123 + -20:word32]
	Mem405[a7_396 - 0x00000008:word32] = Mem401[dwArg08 + 28:word32]
	word32 d2_407
	word32 a4_409
	word32 a5_410
	fn00008388(a2, a4, dwArg00, dwArg04, dwArg08, out d2_407, out a2, out a4_409, out a5_410)
	Mem413[a7_396 - 0x0000000C:word32] = 0x00000001
	Mem415[a7_396 - 0x00000010:word32] = a5_410 + -3
	Mem419[a7_396 - 0x00000014:word32] = Mem415[dwArg08 + 28:word32]
	fn00007FB0(a4_409, dwArg00, dwArg04, dwArg08, out a4, out a5_123)
	a7_124 = a7_396 + 0x00000004
	branch Mem419[a4 + 8240:word32] != 0x00000000 l00007462
// DataOut: a2 a3 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007458:
	branch Mem419[a5_123 + -3:byte] == 0x1A l0000742A
// DataOut: a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007462:
	word32 a7_338 = a7_124 - 0x00000004
	Mem340[a7_338:word32] = Mem322[a5_123 + -16:word32]
	Mem344[a7_338 - 0x00000004:word32] = Mem340[dwArg08 + 16:word32]
	Mem348[a7_338 - 0x00000008:word32] = Mem344[dwArg08 + 28:word32]
	a7_124 = a7_338 + 0x00000004
	word32 a1_352
	d5_121 = fn000060B0(dwArg08, a4, dwArg00, dwArg04, dwArg08, out d2, out d4_120, out a1_352, out a4, out a5_123)
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000073F2:
	d0_158 = dwArg04
// DataOut: a1 a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):-1 -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5

l0000734A:
	branch dwArg04 != 0xFFFFFFFF l00007356
// DataOut: a1 a2 a3 a4 a5 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l00007356:
	branch (byte) d0_96 == 0x00 l00007382
// DataOut: a3 a4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l00007360:
	branch dwArg04 != 0x0000000A l00007382
// DataOut: a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -5(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l00007382:
	a7_124 = fp - 0x00000030
	word32 a1_267
	d5_121 = fn000060B0(dwArg08, a4, Mem0[dwArg08 + 28:word32], fp - 0x00000005, 1, out d2, out d4_120, out a1_267, out a4, out a5_123)
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007366:
	a7_124 = fp - 0x00000030
	word32 a1_293
	d5_121 = fn000060B0(dwArg08, a4, Mem0[dwArg08 + 28:word32], 0x00007516, 2, out d2, out d4_120, out a1_293, out a4, out a5_123)
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:10 d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000739C:
	d7_122 = -1
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000747C:
	branch d5_121 - -1 != 0x00000000 l0000748A
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000748A:
	branch d5_121 - Mem0[a5_123 + -16:word32] == 0x00000000 l00007496
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007490:
	__bset(Mem0[dwArg08 + 27:byte], 0x0004, out Mem0[dwArg08 + 27:byte])
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007482:
	__bset(Mem0[dwArg08 + 27:byte], 0x0005, out Mem0[dwArg08 + 27:byte])
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00007496:
	branch (byte) d0_96 == 0x00 l000074A8
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000074A8:
	branch __btst(Mem0[dwArg08 + 27:byte], 0x0002) l000074B8
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000074B8:
	Mem216[dwArg08 + 12:word32] = Mem0[dwArg08 + 20:word32]
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000074B0:
	Mem212[dwArg08 + 12:word32] = 0
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000749A:
	d2 = -Mem0[dwArg08 + 20:word32]
	Mem207[dwArg08 + 12:word32] = d2
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000074C0:
	Mem139[dwArg08 + 4:word32] = Mem0[dwArg08 + 16:word32]
	branch d7_122 - -1 == 0x00000000 l000074F6
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000074CC:
	word32 v78_168 = Mem139[dwArg08 + 12:word32] - 0x00000001
	Mem169[dwArg08 + 12:word32] = v78_168
	branch v78_168 < 0x00000000 l000074E4
// DataOut: a1 a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000074E4:
	word32 a7_187 = a7_124 - 0x00000004
	Mem189[a7_187:word32] = dwArg08
	Mem192[a7_187 - 0x00000004:word32] = (int32) (byte) d7_122
	word32 a1_195
	word32 a2_196
	word32 a4_197
	fn0000728C(d2, a2, a4, a5_123, dwArg00, dwArg04, out a1_195, out a2_196, out a4_197)
// DataOut: a1 a2 a3 a4 a5 a7 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l000074D2:
	word32 a0_172 = Mem169[dwArg08 + 4:word32]
	Mem174[dwArg08 + 4:word32] = Mem169[dwArg08 + 4:word32] + 0x00000001
	Mem178[a0_172:byte] = (byte) d7_122
// DataOut: a1 a2 a3 a4 a5 a7 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l000074F6:
	branch (Mem139[dwArg08 + 24:word32] & 48) == 0x00000000 l00007502
// DataOut: a1 a2 a4 a5 a7 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l00007502:
	branch d4_120 - -1 != 0x00000000 l0000750C
// DataOut: a1 a2 a4 a5 a7 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l0000750C:
	d0_158 = d4_120
// DataOut: a1 a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l00007508:
	d0_158 = 0
// DataOut: a1 a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l000074FE:
	d0_158 = -1
// DataOut: a1 a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l00007350:
	d0_158 = 0
// DataOut: a1 a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:-1 d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5

l000072CC:
	Mem509[dwArg08 + 12:word32] = 0
	d0_158 = 0
	branch dwArg04 == 0xFFFFFFFF l0000750E
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0038(32) Local -003C(32)

l000072DA:
	word32 a1_518
	branch fn00007234(d2, a4, dwArg08, out a1_518) == 0x00000000 l000072F2
// DataOut: a1 a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:0 d6:<invalid> d1:-1 -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -003C(32)

l000072F2:
	__bset(Mem509[dwArg08 + 27:byte], 0x0001, out Mem509[dwArg08 + 27:byte])
	branch (byte) d0_96 == 0x00 l0000730A
// DataOut: a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -003C(32)

l0000730A:
	Mem589[dwArg08 + 12:word32] = Mem509[dwArg08 + 20:word32]
// DataOut: a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -003C(32)

l000072FC:
	Mem585[dwArg08 + 12:word32] = -Mem509[dwArg08 + 20:word32]
// DataOut: a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -003C(32)

l00007312:
	word32 d1_547
	word32 v25_536 = Mem509[dwArg08 + 12:word32] - 0x00000001
	Mem537[dwArg08 + 12:word32] = v25_536
	branch v25_536 < 0x00000000 l0000732A
// DataOut: a1 a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -003C(32)

l0000732A:
	word32 a1_573
	word32 a2_574
	word32 a4_575
	d1_547 = fn0000728C(d2, a2, a4, fp - 0x00000004, (int32) (byte) dwArg04, dwArg08, out a1_573, out a2_574, out a4_575)
// DataOut: a1 a2 a4 a5 a7 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5

l00007318:
	word32 a0_551 = Mem537[dwArg08 + 4:word32]
	Mem553[dwArg08 + 4:word32] = Mem537[dwArg08 + 4:word32] + 0x00000001
	Mem557[a0_551:byte] = (byte) dwArg04
	d1_547 = (int32) (byte) dwArg04
// DataOut: a1 a2 a4 a5 a7 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5

l0000733C:
	d0_158 = d1_547
// DataOut: a1 a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5

l000072E6:
	__bset(Mem509[dwArg08 + 27:byte], 0x0005, out Mem509[dwArg08 + 27:byte])
	d0_158 = -1
// DataOut: a1 a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5

l000072A6:
	d0_158 = -1
// DataOut: a1 a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000030 a5:fp - 0x00000004 d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -4(fp):a5

l0000750E:
	return d0_158
// DataOut: a1 a2 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> d5:<invalid> d2:<invalid> a1:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5

fn0000728C_exit:
// DataOut: a1 a2 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> d7:<invalid> a3:<invalid> d4:<invalid> d0:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -72(fp):<invalid> -68(fp):fp - 0x00000007 -64(fp):00000001 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):d2 -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a3 -24(fp):<invalid> -20(fp):<invalid> -5(fp):<invalid> -4(fp):a5



word32 fn00007698(word32 d7, word32 a2, word32 a4, word32 dwArg04, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 d7
// LiveOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a7 d5 d6 d7
// Stack args: Stack +0004(32)
fn00007698_entry:
// DataOut: a2 a4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00007698:
	word32 a7_38 = fp - 0x0000000C
	word32 d6_18 = Mem0[a4 + 7640:word32] - 0x00000001
// DataOut: a2 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l000076A8:
	branch (word16) d6_18 < 0x0000 l000076DC
// DataOut: a2 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> a0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -16(fp):<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: Local -0004(32)

l000076DC:
	Mem96[a7_38 - 0x00000004:word32] = dwArg04
	word32 d1_98
	word32 d2_99
	word32 d4_100
	word32 a0_101
	word32 a1_102
	word32 a2_103
	word32 a3_104
	word32 a4_105
	word32 a5_106
	word32 a6_107
	return fn0000117C(a2, a4, dwArg00, out d1_98, out d2_99, out d4_100, out a0_101, out a1_102, out a2_103, out a3_104, out a4_105, out a5_106, out a6_107)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> a0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -16(fp):<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7

fn00007698_exit:
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d5:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -16(fp):<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7

l000076AC:
	word32 d5_50 = Mem0[a4 + 17760 + ((int32) ((int16) d6_18) << 0x00000003):word32]
	branch (byte) d5_50 == 0x00 l000076D8
// DataOut: a2 a4 a7 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> a0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -16(fp):<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: Local -0004(32)

l000076BE:
	branch __btst((byte) d5_50, 0x0004) l000076D8
// DataOut: a2 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> a0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -16(fp):<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: Local -0004(32)

l000076C4:
	word32 a7_78 = a7_38 - 0x00000004
	Mem80[a7_78:word32] = Mem0[a4 + 17760 + 4 + ((int32) ((int16) d6_18) << 0x00000003):word32]
	word32 d2_83
	word32 d5_84
	word32 a0_86
	word32 a1_87
	word32 a3_89
	word32 a5_91
	fn00009084(a2, a4, dwArg00, out d2_83, out d5_84, out d6_18, out a0_86, out a1_87, out a2, out a3_89, out a4, out a5_91)
	a7_38 = a7_78 + 0x0004
// DataOut: a2 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> a0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -16(fp):<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: Local -0004(32)

l000076D8:
	d6_18 = DPB(d6_18, (word16) d6_18 - 0x0001, 0)
// DataOut: a2 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> a0:<invalid> d5:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -16(fp):<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: Local -0004(32)



word32 fn000076EC(word32 d7, word32 a2, word32 a4, word32 a5, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & d6Out, ptr32 & d7Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d7
// LiveOut: a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
l000076EC:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn000076EC_entry:
	*d7Out = d7
	*d6Out = d6
// DataOut: a2 a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l000076EC:
	word32 a7_2 = Mem0[a4 + 8280:word32]
	word32 a4_6
	word32 a2_7 = fn000090A8(d7, a2, a4, a5, out a4_6)
	Mem9[a7_2 - 0x00000004:word32] = 0x00000014
	word32 d1_12
	word32 d2_13
	word32 d4_14
	word32 d5_15
	word32 a1_16
	word32 a2_17
	word32 a4_18
	word32 a5_19
	word32 a6_20
	fn00008A58(a2_7, a3, a4_6, dwArg00, out d1_12, out d2_13, out d4_14, out d5_15, out a1_16, out a2_17, out a4_18, out a5_19, out a6_20)
	Mem27[a7_2 - 0x00000008:word32] = a5_19
	Mem32[a7_2 - 0x00000014:word32] = a3
	word32 a3_33 = Mem32[a4_18 + 18080:word32]
	branch a3_33 != 0x00000000 l0000771A
// DataOut: a2 a3 a4 a5 a6 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00007714_thunk_fn0000771A:
	word32 d1_62
	word32 d2_63
	word32 a1_64
	word32 a3_65
	word32 a5_66
	return fn0000771A(a3_33, a4_18, a7_2 - 0x00000008, out d1_62, out d2_63, out a1_64, out a3_65, out a5_66)
// DataOut: a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a1:<invalid> a0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid>

l00007714_thunk_fn00007716:
	word32 d1_56
	word32 d2_57
	word32 a1_58
	word32 a3_59
	word32 a5_60
	return fn00007716(a4_18, a7_2 - 0x00000008, out d1_56, out d2_57, out a1_58, out a3_59, out a5_60)
// DataOut: a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a1:<invalid> a0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid>

fn000076EC_exit:
// DataOut: a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> a5:<invalid> a3:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d7:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid>



word32 fn00007708(word32 a4, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4
// LiveOut: a3 a5 a7 d2
// Trashed: CVZNX a0 a1 a3 a5 a7 d0 d1 d2
// Preserved:
fn00007708_entry:
// DataOut: a2 a4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007708:
	word32 a3_13 = Mem0[a4 + 18080:word32]
	branch a3_13 != 0x00000000 l00007714_thunk_fn0000771A
// DataOut: a2 a3 a4 a5 d5
// DataOut (flags): 
// SymbolicIn: a7:fp

l00007714_thunk_fn0000771A:
	word32 d1_31
	word32 d2_32
	word32 a1_33
	word32 a3_34
	word32 a5_35
	fn0000771A(a3_13, a4, fp - 0x00000004, out d1_31, out d2_32, out a1_33, out a3_34, out a5_35)
	return d2_32
// DataOut: a2 a3 a4 a5 a7 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> -16(fp):a3 -4(fp):a5

l00007714_thunk_fn00007716:
	word32 d1_25
	word32 d2_26
	word32 a1_27
	word32 a3_28
	word32 a5_29
	fn00007716(a4, fp - 0x00000004, out d1_25, out d2_26, out a1_27, out a3_28, out a5_29)
	return d2_26
// DataOut: a2 a3 a4 a5 a7 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> -16(fp):a3 -4(fp):a5

fn00007708_exit:
// DataOut: a3 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d2:<invalid> -16(fp):a3 -4(fp):a5



word32 fn00007716(word32 a4, word32 a5, ptr32 & d1Out, ptr32 & d2Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 a5
// LiveOut: a1 a3 a5 a7 d0 d1 d2
// Trashed: CVZNX a0 a1 a3 a5 a7 d0 d1 d2
// Preserved:
fn00007716_entry:
// DataOut: a2 a4 a5 a6 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00007716:
	word32 a3_2 = 0x00007794
// DataOut: a2 a3 a4 a5 a6 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00007716_thunk_fn0000771A:
	word32 d1_5
	word32 d2_6
	word32 a1_7
	word32 a3_8
	word32 a5_9
	return fn0000771A(a3_2, a4, a5, out d1_5, out d2_6, out a1_7, out a3_8, out a5_9)
// DataOut: a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:v3 a3:00007794

fn00007716_exit:
// DataOut: a1 a3 a5 a7 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> d2:<invalid>



word32 fn0000771A(word32 a3, word32 a4, word32 a5, ptr32 & d1Out, ptr32 & d2Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3 a4 a5
// LiveOut: a1 a3 a5 a7 d0 d1 d2
// Trashed: CVZNX a0 a1 a3 a5 a7 d0 d1 d2
// Preserved:
fn0000771A_entry:
	*d2Out = d2
// DataOut: a2 a3 a4 a5 a6 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: v3(32)

l0000771A:
	Mem5[a4 + 18296:byte] = Mem0[a3:byte]
	Mem8[a4 + 18297:byte] = Mem5[a3 + 1:byte]
	Mem10[a4 + 18298:byte] = Mem8[a3 + 2:byte]
	Mem11[a4 + 18299:byte] = 0x00
	Mem14[a4 + 18288:word32] = a4 + 18296
	Mem18[v3 - 0x00000004:word32] = a5 + -8
	Mem21[v3 - 0x00000008:word32] = a3 + 3
	word32 a1_25
	word32 a3_30 = a3 + (fn00007D98(dwArg00, dwArg04, out a1_25) + 0x00000003)
	word32 d0_34 = fn00009154(Mem21[a5 + -8:word32], 0x00000E10)
	Mem36[a4 + 18284:word32] = d0_34
	byte v22_37 = Mem36[a3_30:byte]
	word32 d1_32
	*d1Out = 0x00000E10
	word32 d0_38 = DPB(d0_34, v22_37, 0)
	branch v22_37 == 0x00 l0000777E
// DataOut: a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000777E:
	Mem78[a4 + 18300:byte] = 0x00
	Mem79[a4 + 18280:word32] = 0x00000000
// DataOut: a1 a2 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:v3 a0:<invalid> d0:<invalid> a3:<invalid> d1:0x00000E10 a1:<invalid> d2:<invalid>

l00007760:
	Mem63[a4 + 18300:byte] = v22_37
	Mem65[a4 + 18301:byte] = Mem63[a3_30 + 1:byte]
	Mem67[a4 + 18302:byte] = Mem65[a3_30 + 2:byte]
	Mem70[a4 + 18303:byte] = 0x00
	Mem73[a4 + 18280:word32] = 1
	d0_38 = 0
	word32 d1_71
	*d1Out = 1
// DataOut: a1 a2 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:v3 a0:<invalid> d0:<invalid> a3:<invalid> d1:0x00000E10 a1:<invalid> d2:<invalid>

l00007786:
	Mem49[a4 + 18292:word32] = a4 + 18300
	word32 a3_52
	*a3Out = Mem49[v3:word32]
	word32 a5_54
	*a5Out = Mem49[a5:word32]
	return d0_38
// DataOut: a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:v3 a0:<invalid> d0:<invalid> a3:<invalid> d1:<invalid> a1:<invalid> d2:<invalid>

fn0000771A_exit:
// DataOut: a1 a3 a5 a7 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:a5 + 0x00000004 a0:a4 + 18300 d0:<invalid> a3:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> d2:<invalid>



word32 fn000077BC(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX d0
// Preserved: a7
// Stack args: Stack +0004(32)
fn000077BC_entry:
// DataOut: a0 a1 a2 a3 a4 a5 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0004(32)

l000077BC:
	word32 d0_11 = dwArg04
	branch (byte) dwArg04 - 0x61 < 0x00 l000077D0
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l000077C6:
	branch (byte) dwArg04 - 0x7A > 0x00 l000077D0
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid>

l000077CC:
	d0_11 = DPB(dwArg04, (byte) dwArg04 - 0x20, 0)
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid>

l000077D0:
	return d0_11
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid>

fn000077BC_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid>



word32 fn000077D4(word32 d0, word32 d2, word32 a1, word32 a4, word32 dwArg04, ptr32 & d2Out, ptr32 & d5Out, ptr32 & d6Out, ptr32 & d7Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a4 d0 d2
// LiveOut: a5 a7 d0 d2 d5 d6 d7
// Trashed: CVZNX a0 a1 a3 a5 a7 d0 d1 d2 d5 d6 d7
// Preserved:
fn000077D4_entry:
// DataOut: a1 a2 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32) Local -000B(32)

l000077D4:
	fn00008518(d0, d2, a1, a4, fp + 0xFFFFFFF4)
	word32 d5_117 = 0
	word32 d7_37 = 0
// DataOut: a2 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l000077F8:
	branch (byte) d7_37 - (bLoc0B + 0x0A) >=u 0x00 l0000781E
// DataOut: a2 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l0000781E:
	word32 d7_100 = 1
// DataOut: a2 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l00007820:
	branch (byte) d7_100 - bLoc0A >=u 0x00 l0000783C
// DataOut: a2 a4 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l0000783C:
	word32 d1_109
	fn00009174((int32) (bLoc0B + 0x0A) + 0x00000002, 4, d2, out d1_109)
	branch d1_109 != 0x00000000 l00007858
// DataOut: a2 a4 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l0000784C:
	branch bLoc0A <=u 0x02 l00007858
// DataOut: a2 a4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32)

l00007856:
	d5_117 = d5_117 + 0x00000001
// DataOut: a2 a4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:2 a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32)

l00007858:
	word32 d5_156 = fn00009154(fn00009154(fn00009154(d5_117 + ((int32) bLoc09 - 0x00000001), 24) + (int32) bLoc08, 60) + (int32) bLoc07, 60) + (int32) bLoc06
	word32 a3_158
	word32 a5_159
	word32 d2_160
	*d2Out = fn00007708(a4, out a3_158, out a5_159)
	word32 d5_161 = d5_156 + Mem0[a4 + 18284:word32]
	branch a3_158 == 0x00000000 l000078A6
// DataOut: a2 a3 a4 a5 a7 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5

l000078A4:
	Mem184[a3_158:word32] = d5_161
// DataOut: a2 a4 a5 a7 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5

l000078A6:
	word32 d5_168
	*d5Out = Mem0[fp - 0x00000024:word32]
	word32 d6_170
	*d6Out = Mem0[fp - 0x00000020:word32]
	word32 d7_172
	*d7Out = Mem0[fp - 0x0000001C:word32]
	word32 a5_176
	*a5Out = Mem0[a5_159:word32]
	return d5_161
// DataOut: a2 a4 a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5

fn000077D4_exit:
// DataOut: a5 a7 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d2:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5

l00007828:
	d5_117 = d5_117 + (int32) Mem0[(a4 + 7775) + (int32) ((byte) d7_100):byte]
	d7_100 = DPB(d7_100, (byte) d7_100 + 0x01, 0)
// DataOut: a2 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l000077FC:
	word32 d1_61
	fn00009174((int32) (byte) d7_37 + 0x00000002, 4, d2, out d1_61)
	branch d1_61 != 0x00000000 l00007814
// DataOut: a2 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l00007814:
	d5_117 = d5_117 + 0x0000016D
// DataOut: a2 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l0000780C:
	d5_117 = d5_117 + 0x0000016E
// DataOut: a2 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)

l0000781A:
	d7_37 = DPB(d7_37, (byte) d7_37 + 0x01, 0)
// DataOut: a2 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000024 a5:fp - 0x00000004 a3:<invalid> d5:<invalid> d0:<invalid> d6:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> -40(fp):fp + 0xFFFFFFF4 -36(fp):d5 -32(fp):d6 -28(fp):d7 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0006(32) Local -0007(32) Local -0008(32) Local -0009(32) Local -000A(32)



void fn000078D4(word32 d0, word32 a4, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d0
// LiveOut:
// Trashed: CVZNX a0 d0 d1
// Preserved: a2 a3 a7 d2
// Stack args: Stack +0004(32)
fn000078D4_entry:
// DataOut: a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000078D4:
	word32 a2_13 = dwArg04
// DataOut: a2 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000078DE:
	byte v7_25 = Mem0[a2_13:byte]
	branch v7_25 == 0x00 l00007906
// DataOut: a2 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007906:
	return
// DataOut: a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3

fn000078D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 a2:a2 d0:<invalid> d2:d2 d1:<invalid> a0:a4 + 7953 -12(fp):d2 -8(fp):a2 -4(fp):a3

l000078E2:
	word32 d1_37
	branch __btst(Mem0[a4 + 7953 + (int32) v7_25:byte], 0x0001) l000078FC
// DataOut: a2 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l000078FC:
	d1_37 = (int32) v7_25
// DataOut: a2 a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l000078F2:
	d1_37 = (int32) v7_25 - 32
// DataOut: a2 a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007900:
	Mem40[a2_13:byte] = (byte) d1_37
	a2_13 = a2_13 + 0x00000001
// DataOut: a2 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)



word32 fn00007910(word32 a5, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5
// LiveOut: a2 a3 a5 a7 d7
// Trashed: CVZNX a0 a1 a2 a3 a5 a7 d0 d1 d6 d7
// Preserved:
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)
fn00007910_entry:
// DataOut: a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007910:
	fn00007A64(fp + 0xFFFFFFB4, dwArg04, 0x0000003F)
	word32 a1_38 = fp + 0xFFFFFFB4
// DataOut: a1 a2 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l0000793C:
	a1_38 = a1_349 + 0x00000001
	word32 a1_349 = a1_38
	branch Mem0[a1_349:byte] != 0x00 l0000793C
// DataOut: a1 a2 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:fp + 0xFFFFFFB4 a1:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007940:
	word32 a1_48 = a1_38 - 0x00000001 - (fp + 0xFFFFFFB4)
	branch dwArg08 == 0x00000000 l0000794E
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:fp + 0xFFFFFFB4 a1:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l0000794A:
	Mem347[dwArg08:byte] = 0x00
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:fp + 0xFFFFFFB4 a1:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l0000794E:
	branch dwArg0C == 0x00000000 l0000795C
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:fp + 0xFFFFFFB4 a1:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007954:
	Mem343[dwArg0C:byte] = 0x00
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:fp + 0xFFFFFFB4 a1:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l0000795C:
	branch dwArg10 == 0x00000000 l0000796A
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007962:
	Mem338[dwArg10:byte] = 0x00
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l0000796A:
	branch dwArg14 == 0x00000000 l00007976
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007970:
	Mem330[dwArg14:byte] = 0x00
// DataOut: a2 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007976:
	word32 d6_100 = a1_48
// DataOut: a2 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007978:
	d6_100 = d6_100 - 0x00000001
	branch false l000079B2
// DataOut: a2 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007980:
	word16 v27_289 = (word16) (int32) Mem0[fp + 0xFFFFFFB4 + d6_100:byte] - 0x002E
	branch v27_289 == 0x0000 l00007998
// DataOut: a2 a4 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007998:
	branch dwArg14 == 0x00000000 l000079AA
// DataOut: a2 a4 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l0000799E:
	word32 a0_318 = fp + 0xFFFFFFB5 + d6_100
	word32 a1_319 = dwArg14
// DataOut: a0 a1 a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079A6:
	byte v35_322 = Mem0[a0_318:byte]
	Mem325[a1_319:byte] = v35_322
	a0_318 = a0_318 + 0x00000001
	a1_319 = a1_319 + 0x00000001
	branch v35_322 != 0x00 l000079A6
// DataOut: a0 a1 a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079AA:
	Mem312[fp - 0x00000004 + d6_100:byte] = 0x00
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l0000798C:
	branch v27_289 == 0x0001 l000079B0
// DataOut: a2 a4 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l00007990:
	branch v27_289 == 0x000C l000079B0
// DataOut: a2 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l000079B0:
	d6_100 = a1_48
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079B2:
	d6_100 = d6_100 - 0x00000001
	branch false l000079FC
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079BA:
	word16 v31_230 = (word16) (int32) Mem0[fp + 0xFFFFFFB4 + d6_100:byte] - 0x002F
	branch v31_230 == 0x0000 l000079E6
// DataOut: a2 a4 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079E6:
	branch dwArg10 == 0x00000000 l000079F8
// DataOut: a2 a4 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079EC:
	word32 a0_275 = fp + 0xFFFFFFB5 + d6_100
	word32 a1_276 = dwArg10
// DataOut: a0 a1 a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079F4:
	byte v47_279 = Mem0[a0_275:byte]
	Mem282[a1_276:byte] = v47_279
	a0_275 = a0_275 + 0x00000001
	a1_276 = a1_276 + 0x00000001
	branch v47_279 != 0x00 l000079F4
// DataOut: a0 a1 a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079F8:
	Mem269[fp - 0x00000004 + d6_100:byte] = 0x00
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079C6:
	branch v31_230 != 0x000B l000079B2
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079CC:
	branch dwArg10 == 0x00000000 l000079DE
// DataOut: a2 a4 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079D2:
	word32 a0_252 = fp + 0xFFFFFFB5 + d6_100
	word32 a1_253 = dwArg10
// DataOut: a0 a1 a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079DA:
	byte v33_256 = Mem0[a0_252:byte]
	Mem259[a1_253:byte] = v33_256
	a0_252 = a0_252 + 0x00000001
	a1_253 = a1_253 + 0x00000001
	branch v33_256 != 0x00 l000079DA
// DataOut: a0 a1 a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079DE:
	Mem246[fp - 0x00000004 + (d6_100 + 0x00000001):byte] = 0x00
	d6_100 = d6_100 + 0x00000001
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l000079FC:
	branch d6_100 > 0x00000000 l00007A12
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00007A12:
	d6_100 = d6_100 - 0x00000001
	branch false l00007A4C
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A4C:
	branch dwArg0C == 0x00000000 l00007A5C
// DataOut: a4 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A52:
	word32 a0_216 = fp + 0xFFFFFFB4
	word32 a1_217 = dwArg0C
// DataOut: a0 a1 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A58:
	byte v45_220 = Mem0[a0_216:byte]
	Mem223[a1_217:byte] = v45_220
	a0_216 = a0_216 + 0x00000001
	a1_217 = a1_217 + 0x00000001
	branch v45_220 != 0x00 l00007A58
// DataOut: a0 a1 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A1A:
	branch (word16) (int32) Mem0[fp + 0xFFFFFFB4 + d6_100:byte] - 0x003A != 0x0000 l00007A12
// DataOut: a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A26:
	branch dwArg0C == 0x00000000 l00007A38
// DataOut: a2 a4 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A2C:
	word32 a0_202 = fp + 0xFFFFFFB5 + d6_100
	word32 a1_203 = dwArg0C
// DataOut: a0 a1 a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A34:
	byte v41_206 = Mem0[a0_202:byte]
	Mem209[a1_203:byte] = v41_206
	a0_202 = a0_202 + 0x00000001
	a1_203 = a1_203 + 0x00000001
	branch v41_206 != 0x00 l00007A34
// DataOut: a0 a1 a2 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A38:
	Mem186[fp - 0x00000004 + d6_100:byte] = 0x00
	branch dwArg08 == 0x00000000 l00007A5C
// DataOut: a2 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A40:
	word32 a0_190 = fp + 0xFFFFFFB4
	word32 a1_191 = dwArg08
// DataOut: a0 a1 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A46:
	byte v43_194 = Mem186[a0_190:byte]
	Mem197[a1_191:byte] = v43_194
	a0_190 = a0_190 + 0x00000001
	a1_191 = a1_191 + 0x00000001
	branch v43_194 != 0x00 l00007A46
// DataOut: a0 a1 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A4A:
// DataOut: a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A00:
	branch dwArg10 == 0x00000000 l00007A5C
// DataOut: a4 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A06:
	word32 a0_154 = fp + 0xFFFFFFB4
	word32 a1_155 = dwArg10
// DataOut: a0 a1 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A0C:
	byte v37_158 = Mem0[a0_154:byte]
	Mem161[a1_155:byte] = v37_158
	a0_154 = a0_154 + 0x00000001
	a1_155 = a1_155 + 0x00000001
	branch v37_158 != 0x00 l00007A0C
// DataOut: a0 a1 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A10:
// DataOut: a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A5C:
	return d7
	word32 a2_142
	*a2Out = dwArg08
	word32 a3_144
	*a3Out = dwArg0C
	word32 a5_146
	*a5Out = Mem0[a5:word32]
	return dwArg04
// DataOut: a2 a3 a4 a5 a7 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5

fn00007910_exit:
// DataOut: a2 a3 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:a5 + 0x00000004 a5:<invalid> a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5

l00007996:
// DataOut: a2 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000005C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> -104(fp):fp + 0xFFFFFFB4 -100(fp):<invalid> -96(fp):0000003F -92(fp):d6 -88(fp):d7 -84(fp):a2 -80(fp):a3 -13(fp):0x00 -4(fp):a5
// LocalsOut: fp(8) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)



void fn00007A64(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00007A64_entry:
// DataOut: a2 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A64:
	word32 a1_11 = dwArg08
	word32 a0_12 = dwArg04
	word32 d0_14 = dwArg0C
// DataOut: a0 a1 a2 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp

l00007A78:
	word32 d0_16 = d0_14 - 0x00000001
	branch d0_16 >=u 0x00000000 l00007A74
	d0_14 = d0_16 - 0x00000001
	branch d0_16 >=u 0x00000001 l00007A74
// DataOut: a0 a1 a2 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid> d1:<invalid>

l00007A74:
	byte v10_35 = Mem0[a1_11:byte]
	Mem38[a0_12:byte] = v10_35
	a1_11 = a1_11 + 0x00000001
	a0_12 = a0_12 + 0x00000001
	branch v10_35 == 0x00 l00007A80
// DataOut: a0 a1 a2 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid> d1:<invalid>

l00007A80:
	d0_14 = d0_14 - 0x00000001
	branch d0_14 >=u 0x00000000 l00007A7E
// DataOut: a0 a2 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid> d1:<invalid>

l00007A7E:
	Mem50[a0_12:byte] = 0x00
	a0_12 = a0_12 + 0x00000001
// DataOut: a0 a2 a4 d0 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid> d1:<invalid>

l00007A7C:
// DataOut: a2 a4 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid> d1:<invalid>

l00007A84:
	return
	return
// DataOut: a2 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid> d1:<invalid>

fn00007A64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid> d1:<invalid>



word32 fn00007A88(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a2 a3 a7 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00007A88_entry:
// DataOut: a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007A88:
	word32 a3_15 = dwArg04
	word32 a2_17 = dwArg08
	word32 d7_19 = dwArg0C
// DataOut: a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007A98:
	word32 d0_41
	branch d7_19 == 0x00000000 l00007ABC
// DataOut: a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007A9C:
	branch Mem0[a3_15:byte] == 0x00 l00007ABC
// DataOut: a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AA0:
	branch Mem0[a2_17:byte] == 0x00 l00007ABC
// DataOut: a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007ABC:
	branch d7_19 == 0x00000000 l00007AD0
// DataOut: a2 a3 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AC0:
	branch Mem0[a3_15:byte] == 0x00 l00007AC8
// DataOut: a2 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AC8:
	branch Mem0[a2_17:byte] == 0x00 l00007AD0
// DataOut: a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AD0:
	d0_41 = 0
// DataOut: a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007ACC:
	d0_41 = -1
// DataOut: a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AC4:
	d0_41 = 1
// DataOut: a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AA4:
	a3_15 = a3_15 + 0x00000001
	a2_17 = a2_17 + 0x00000001
	word32 d0_90 = (int32) Mem0[a3_15:byte] - (int32) Mem0[a2_17:byte]
	branch d0_90 == 0x00000000 l00007AB8
// DataOut: a2 a3 a4 a5 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AB8:
	d7_19 = d7_19 - 0x00000001
// DataOut: a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AB4:
	d0_41 = d0_90
// DataOut: a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007AD2:
	return d0_41
// DataOut: a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

fn00007A88_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 a2:a2 d7:d7 d0:<invalid> d6:d6 d1:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3



word32 fn00007AD8(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0
// Preserved: a2 a3 a5 a7 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00007AD8_entry:
// DataOut: a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007AD8:
	word32 a0_26 = dwArg08
// DataOut: a0 a2 a3 a4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007AEE:
	a0_26 = a0_92 + 0x00000001
	word32 a0_92 = a0_26
	branch Mem0[a0_92:byte] != 0x00 l00007AEE
// DataOut: a0 a2 a3 a4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32)

l00007AF2:
	word32 a0_36 = a0_26 - 0x00000001 - dwArg08
	word32 d6_38 = a0_36
	word32 a0_40 = dwArg04
// DataOut: a0 a2 a3 a4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32)

l00007AFA:
	a0_40 = a0_93 + 0x00000001
	word32 a0_93 = a0_40
	branch Mem0[a0_93:byte] != 0x00 l00007AFA
// DataOut: a0 a2 a3 a4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32)

l00007AFE:
	word32 a1_53 = dwArg04 + ((a0_40 - 0x00000001) - dwArg04)
	branch a0_36 - dwArg0C <=u 0x00000000 l00007B12
// DataOut: a1 a2 a3 a4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -000C(32)

l00007B10:
	d6_38 = dwArg0C
// DataOut: a1 a2 a3 a4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d0:<invalid> a1:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -12(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -000C(32)

l00007B12:
	word32 d0_60 = d6_38
	word32 a0_62 = dwArg08
	a1_63 = a1_53
// DataOut: a0 a1 a3 a4 d0 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d0:<invalid> a1:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -12(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -000C(32)

l00007B1A:
	word32 a1_63
	d0_60 = d0_60 - 0x00000001
	branch d0_60 >=u 0x00000000 l00007B18
// DataOut: a0 a1 a3 a4 d0 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d0:<invalid> a1:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -12(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -000C(32)

l00007B18:
	Mem87[a1_63:byte] = Mem0[a0_62:byte]
	a0_62 = a0_62 + 0x00000001
	a1_63 = a1_63 + 0x00000001
// DataOut: a0 a1 a3 a4 d0 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d0:<invalid> a1:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -12(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -000C(32)

l00007B1E:
	Mem71[a1_53 + d6_38:byte] = 0x00
	return dwArg04
// DataOut: a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d0:<invalid> a1:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -12(fp):<invalid> -4(fp):a5

fn00007AD8_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 a3:a3 a2:a2 d7:d7 a0:<invalid> d6:d6 d0:<invalid> a1:<invalid> -28(fp):d6 -24(fp):d7 -20(fp):a2 -16(fp):a3 -12(fp):<invalid> -4(fp):a5



word32 fn00007B30(word32 d0, word32 a4, word32 dwArg04, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d0
// LiveOut: a0 d0
// Trashed: CVZNX a0 d0 d1
// Preserved: a2 a3 a7 d2
// Stack args: Stack +0004(32)
fn00007B30_entry:
	*a0Out = a0
// DataOut: a0 a1 a4 a5 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00007B30:
	word32 a2_13 = dwArg04
// DataOut: a0 a1 a2 a3 a4 a5 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007B3A:
	byte v7_25 = Mem0[a2_13:byte]
	branch v7_25 == 0x00 l00007B62
// DataOut: a0 a1 a2 a3 a4 a5 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007B62:
	return dwArg04
// DataOut: a0 a1 a4 a5 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3

fn00007B30_exit:
// DataOut: a0 d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 a2:a2 d0:<invalid> d2:d2 d1:<invalid> a0:a4 + 7953 -12(fp):d2 -8(fp):a2 -4(fp):a3

l00007B3E:
	word32 d1_37
	word32 a0_34
	*a0Out = a4 + 7953
	branch __btst(Mem0[a4 + 7953 + (int32) v7_25:byte], 0x0000) l00007B58
// DataOut: a0 a1 a2 a3 a4 a5 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007B58:
	d1_37 = (int32) v7_25
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007B4E:
	d1_37 = (int32) v7_25 + 32
// DataOut: a0 a1 a2 a3 a4 a5 d0 d1 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007B5C:
	Mem40[a2_13:byte] = (byte) d1_37
	a2_13 = a2_13 + 0x00000001
// DataOut: a0 a1 a2 a3 a4 a5 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:a4 + 7953 d2:32 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)



word32 fn00007B74(word32 dwArg04, word32 dwArg08, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 d0
// Trashed: CVZN a0 a1 d0
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007B74_entry:
// DataOut: a2 a3 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0004(32) Stack +0008(32)

l00007B74:
	word32 a1_17 = dwArg08
	word32 a0_11 = dwArg04
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00007B7E:
	a0_11 = a0_27 + 0x00000001
	word32 a0_27 = a0_11
	branch Mem0[a0_27:byte] != 0x00 l00007B7E
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid>

l00007B82:
	word32 a0_16 = a0_11 - 0x00000001
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid>

l00007B84:
	byte v12_19 = Mem0[a1_17:byte]
	Mem22[a0_16:byte] = v12_19
	a1_17 = a1_17 + 0x00000001
	*a1Out = a1_17
	a0_16 = a0_16 + 0x00000001
	branch v12_19 != 0x00 l00007B84
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid>

l00007B88:
	return dwArg04
// DataOut: a1 a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid>

fn00007B74_exit:
// DataOut: a1 d0
// DataOut (flags): 
// SymbolicIn: a7:fp a1:<invalid> a0:<invalid> d0:<invalid>



word32 fn00007BCC(word32 d0, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a2 a3 a7 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007BCC_entry:
// DataOut: a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00007BCC:
	word32 a3_12 = dwArg04
	word32 a2_15 = 0x00000000
// DataOut: a2 a3 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007BDA:
	byte v9_24 = Mem0[a3_12:byte]
	branch v9_24 == 0x00 l00007BEC
// DataOut: a2 a3 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007BEC:
	return a2_15
// DataOut: a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3

fn00007BCC_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d7:d7 a2:a2 d0:<invalid> d1:<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3

l00007BDE:
	branch (int32) v9_24 - dwArg08 != 0x00000000 l00007BE8
// DataOut: a2 a3 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007BE6:
	a2_15 = a3_12
// DataOut: a2 a3 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00007BE8:
	a3_12 = a3_12 + 0x00000001
// DataOut: a2 a3 a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)



word32 fn00007BF4(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a5 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007BF4_entry:
// DataOut: a3 a4 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00007BF4:
	word32 d0_14 = dwArg08
	word32 a0_33 = dwArg04
	word32 a1_12 = fp - 0x00000010
// DataOut: a0 a1 a3 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8)

l00007C02:
	word32 d1_18
	d0_14 = fn000091A6(d0_14, 10, d2, out d1_18)
	Mem24[a1_12:byte] = (byte) ((word16) d1_18 + 0x0030)
	a1_12 = a1_12 + 0x00000001
	branch d0_14 != 0x00000000 l00007C02
// DataOut: a0 a1 a3 a4 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5
// LocalsOut: fp(8)

l00007C12:
	a1_32 = a1_12
// DataOut: a0 a1 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5
// LocalsOut: fp(8)

l00007C14:
	word32 a1_32
	a1_32 = a1_32 - 0x00000001
	Mem36[a0_33:byte] = Mem24[a1_32:byte]
	a0_33 = a0_33 + 0x00000001
	branch fp - 0x00000010 - a1_32 != 0x00000000 l00007C14
// DataOut: a0 a1 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5
// LocalsOut: fp(8)

l00007C1A:
	Mem41[a0_33:byte] = 0x00
	return a1_12 - (fp - 0x00000010)
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5

fn00007BF4_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> a5:a5 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5



word32 fn00007C24(word32 d7, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d7
// LiveOut: d0
// Trashed: CVZNX d0
// Preserved: a2 a3 a5 a7 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007C24_entry:
// DataOut: a0 a1 a4 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00007C24:
	word32 a3_110 = dwArg04
	word32 a2_19 = dwArg08
// DataOut: a0 a1 a2 a3 a4 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0008(32)

l00007C38:
	word32 d0_115
	byte v9_37 = Mem0[a2_19:byte]
	a2_19 = a2_19 + 0x00000001
	d7 = DPB(d7, v9_37, 0)
	branch v9_37 == 0x00 l00007C76
// DataOut: a0 a1 a2 a3 a4 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C76:
	branch Mem0[a3_110:byte] == 0x00 l00007C7E
// DataOut: a0 a1 a3 a4 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C7E:
	d0_115 = a3_110 - dwArg04
// DataOut: a0 a1 a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007C7A:
	d0_115 = 0
// DataOut: a0 a1 a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007C3E:
	word16 v16_62 = (word16) (int32) v9_37 - 0x002A
	branch v16_62 == 0x0000 l00007C58
// DataOut: a0 a1 a2 a3 a4 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C58:
	branch Mem0[a3_110:byte] == 0x00 l00007C38
// DataOut: a0 a1 a2 a3 a4 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C5C:
	branch fn00007C24(d7, a3_110, a2_19) != 0x00000000 l00007C38
// DataOut: a0 a1 a2 a3 a4 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C68:
	a3_110 = a3_110 + 0x00000001
// DataOut: a0 a1 a2 a3 a4 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C48:
	branch v16_62 != 0x0015 l00007C6C
// DataOut: a0 a1 a2 a3 a4 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C6C:
	a3_110 = a3_110 + 0x00000001
	word32 a3_121 = a3_110
	branch v9_37 - Mem0[a3_110:byte] == 0x00 l00007C38
// DataOut: a0 a1 a2 a3 a4 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C72:
	d0_115 = 0
// DataOut: a0 a1 a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007C4E:
	a3_110 = a3_110 + 0x00000001
	branch Mem0[a3_110:byte] != 0x00 l00007C38
// DataOut: a0 a1 a2 a3 a4 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32)

l00007C54:
	d0_115 = 0
// DataOut: a0 a1 a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007C84:
	return d0_115
// DataOut: a0 a1 a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5

fn00007C24_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 a3:a3 a2:a2 d7:d7 d0:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -8(fp):<invalid> -4(fp):a5



word32 fn00007C8C(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a5 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007C8C_entry:
// DataOut: a3 a4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00007C8C:
	word32 d0_14 = dwArg08
	word32 a0_29 = dwArg04
	word32 a1_12 = fp - 0x00000010
// DataOut: a0 a1 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8)

l00007C9A:
	Mem21[a1_12:byte] = (byte) (((word16) d0_14 & 0x0007) + 0x0030)
	a1_12 = a1_12 + 0x00000001
	d0_14 = d0_14 >>u 0x00000003
	branch d0_14 != 0x00000000 l00007C9A
// DataOut: a0 a1 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(8)

l00007CAA:
	a1_28 = a1_12
// DataOut: a0 a1 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(8)

l00007CAC:
	word32 a1_28
	a1_28 = a1_28 - 0x00000001
	Mem32[a0_29:byte] = Mem21[a1_28:byte]
	a0_29 = a0_29 + 0x00000001
	branch fp - 0x00000010 - a1_28 != 0x00000000 l00007CAC
// DataOut: a0 a1 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(8)

l00007CB2:
	Mem37[a0_29:byte] = 0x00
	return a1_12 - (fp - 0x00000010)
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):<invalid> -4(fp):a5

fn00007C8C_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> a5:a5 a1:<invalid> d1:<invalid> -16(fp):<invalid> -4(fp):a5



word32 fn00007CCC(word32 d1, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d1
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007CCC_entry:
// DataOut: a3 a4 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00007CCC:
	word32 d0_11 = dwArg08
	word32 a0_28 = dwArg04
	word32 a1_10 = fp + 4
// DataOut: a0 a1 a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007CD8:
	d1 = DPB(d1, (word16) d0_11 & 0x000F, 0)
	Mem18[a1_10:byte] = Mem0[0x00007CBC + d1:byte]
	a1_10 = a1_10 + 0x00000001
	d0_11 = d0_11 >>u 0x00000004
	branch d0_11 != 0x00000000 l00007CD8
// DataOut: a0 a1 a3 a4 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> 4(fp):<invalid>
// LocalsOut: fp(32)

l00007CE6:
	a1_27 = a1_10
// DataOut: a0 a1 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> 4(fp):<invalid>
// LocalsOut: fp(8)

l00007CEC:
	word32 a1_27
	a1_27 = a1_27 - 0x00000001
	Mem31[a0_28:byte] = Mem18[a1_27:byte]
	a0_28 = a0_28 + 0x00000001
	branch fp + 0x00000004 - a1_27 != 0x00000000 l00007CEC
// DataOut: a0 a1 a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> a1:<invalid> d1:fp + 0x00000004 4(fp):<invalid>
// LocalsOut: fp(8)

l00007CF2:
	Mem36[a0_28:byte] = 0x00
	return a1_10 - (fp + 0x00000004)
// DataOut: a3 a4 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> a1:<invalid> d1:fp + 0x00000004 4(fp):<invalid>

fn00007CCC_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> a1:<invalid> d1:fp + 0x00000004 4(fp):<invalid>



void fn00007CF8(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d2
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a5 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007CF8_entry:
// DataOut: a3 a4 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00007CF8:
	word32 d0_16 = dwArg08
	word32 a0_15 = dwArg04
	word32 a1_13 = fp - 0x00000010
	branch dwArg08 >= 0x00000000 l00007D0E
// DataOut: a0 a1 a3 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(8) Stack +0004(32)

l00007D08:
	Mem49[dwArg04:byte] = 0x2D
	a0_15 = dwArg04 + 0x00000001
	d0_16 = -dwArg08
// DataOut: a0 a1 a3 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:fp - 0x00000010 -4(fp):a5
// LocalsOut: fp(8) Stack +0004(32)

l00007D0E:
	word32 d1_20
	d0_16 = fn000091A6(d0_16, 10, d2, out d1_20)
	Mem26[a1_13:byte] = (byte) ((word16) d1_20 + 0x0030)
	a1_13 = a1_13 + 0x00000001
	branch d0_16 != 0x00000000 l00007D0E
// DataOut: a0 a1 a3 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5
// LocalsOut: fp(8) Stack +0004(32)

l00007D1E:
	a1_13 = a1_13 - 0x00000001
	Mem36[a0_15:byte] = Mem26[a1_13:byte]
	a0_15 = a0_15 + 0x00000001
	branch fp - 0x00000010 - a1_13 != 0x00000000 l00007D1E
// DataOut: a0 a1 a3 a4 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5
// LocalsOut: fp(8) Stack +0004(32)

l00007D24:
	Mem41[a0_15:byte] = 0x00
	return
// DataOut: a3 a4 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d0:<invalid> a0:<invalid> a5:fp - 0x00000004 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5

fn00007CF8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> a5:a5 a1:<invalid> d1:<invalid> -16(fp):0x3A -4(fp):a5



word32 fn00007D30(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0
// Preserved: a2 a3 a5 a7 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007D30_entry:
// DataOut: a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00007D30:
	word32 a0_19 = dwArg08
// DataOut: a0 a3 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0008(32)

l00007D40:
	a0_19 = a0_104 + 0x00000001
	word32 a0_104 = a0_19
	branch Mem0[a0_104:byte] != 0x00 l00007D40
// DataOut: a0 a3 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Stack +0008(32)

l00007D44:
	word32 a0_29 = a0_19 - 0x00000001 - dwArg08
	word32 d7_31 = a0_29
	word32 a2_35 = dwArg08 + a0_29
// DataOut: a2 a3 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Stack +0008(32)

l00007D54:
	word32 d0_101
	branch false l00007D8A
// DataOut: a2 a3 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Stack +0008(32)

l00007D8A:
	Mem100[dwArg04:byte] = 0x00
	d0_101 = 0
// DataOut: a4 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32)

l00007D58:
	a2_35 = a2_35 - 0x00000001
	word16 v18_65 = (word16) (int32) Mem0[a2_35:byte] - 0x002F
	branch v18_65 == 0x0000 l00007D6C
// DataOut: a2 a3 a4 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Stack +0008(32)

l00007D6C:
	d7_31 = d7_31 - 0x00000001
// DataOut: a3 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Stack +0008(32)

l00007D64:
	branch v18_65 == 0x000B l00007D6E
// DataOut: a2 a3 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Stack +0008(32)

l00007D6E:
	word32 d0_72 = d7_31
	word32 a0_74 = dwArg08
	word32 a1_75 = dwArg04
// DataOut: a0 a1 a3 a4 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32)

l00007D7A:
	d0_72 = d0_72 - 0x00000001
	branch d0_72 >=u 0x00000000 l00007D78
// DataOut: a0 a1 a3 a4 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> a1:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32)

l00007D78:
	Mem89[a1_75:byte] = Mem0[a0_74:byte]
	a0_74 = a0_74 + 0x00000001
	a1_75 = a1_75 + 0x00000001
// DataOut: a0 a1 a3 a4 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> a1:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32)

l00007D7E:
	Mem83[dwArg04 + d7_31:byte] = 0x00
	d0_101 = d7_31
// DataOut: a4 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> a1:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32)

l00007D8E:
	return d0_101
// DataOut: a4 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> a1:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5

fn00007D30_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 a3:a3 a0:<invalid> d7:d7 a2:a2 d0:<invalid> a1:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5

l00007D6A:
// DataOut: a2 a3 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Stack +0008(32)

l00007D86:
	d7_31 = d7_31 - 0x00000001
// DataOut: a2 a3 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d7:<invalid> a2:<invalid> d0:<invalid> -24(fp):d7 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Stack +0008(32)



word32 fn00007D98(word32 dwArg04, word32 dwArg08, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 d0
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a7 d2
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007D98_entry:
// DataOut: a2 a3 a4 a5 a6 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00007D98:
	word32 a0_18 = dwArg04
	word32 a1_4
	*a1Out = dwArg04
	word32 d1_21 = 0
	word32 d0_19 = 0
	branch Mem0[dwArg04:byte] - 0x2B == 0x00 l00007DB0
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0008(32)

l00007DAA:
	branch Mem0[dwArg04:byte] - 0x2D != 0x00 l00007DB2
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a0:<invalid> a1:<invalid> d1:0 d0:0 -4(fp):d2
// LocalsOut: Stack +0008(32)

l00007DB0:
	a0_18 = dwArg04 + 0x0001
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a0:<invalid> a1:<invalid> d1:0 d0:0 -4(fp):d2
// LocalsOut: Stack +0008(32)

l00007DB2:
	byte v13_22 = Mem0[a0_18:byte]
	a0_18 = a0_18 + 0x00000001
	d0_19 = DPB(d0_19, v13_22 - 0x30, 0)
	branch v13_22 < 0x30 l00007DCC
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a0:<invalid> a1:<invalid> d1:<invalid> d0:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: Stack +0008(32)

l00007DBA:
	branch v13_22 > 0x39 l00007DCC
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a0:<invalid> a1:<invalid> d1:<invalid> d0:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: Stack +0008(32)

l00007DCC:
	branch Mem0[dwArg04:byte] - 0x2D != 0x00 l00007DD4
// DataOut: a0 a1 a2 a3 a4 a5 a6 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a0:<invalid> a1:<invalid> d1:<invalid> d0:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: Stack +0008(32)

l00007DD2:
	d1_21 = -d1_21
// DataOut: a0 a1 a2 a3 a4 a5 a6 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a0:<invalid> a1:<invalid> d1:<invalid> d0:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: Stack +0008(32)

l00007DD4:
	Mem42[dwArg08:word32] = d1_21
	return a0_18 - 0x00000001 - dwArg04
// DataOut: a1 a2 a3 a4 a5 a6 d0 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a0:<invalid> a1:<invalid> d1:<invalid> d0:<invalid> d2:<invalid> -4(fp):d2

fn00007D98_exit:
// DataOut: a1 d0
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> a1:<invalid> d1:<invalid> d0:<invalid> d2:<invalid> -4(fp):d2

l00007DC0:
	d1_21 = ((d1_21 << 0x00000002) + d1_21) * 0x00000002 + d0_19
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a0:<invalid> a1:<invalid> d1:<invalid> d0:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: Stack +0008(32)



word32 fn00007E4C(word32 a4, word32 dwArg04, word32 dwArg08, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4
// LiveOut: a0 a1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a5 a6 a7 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00007E4C_entry:
	*a1Out = a1
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32) Stack +0008(32)

l00007E4C:
	word32 d7_190 = dwArg08
	branch false l00007E62
// DataOut: a0 a1 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32)

l00007E62:
	branch dwArg08 >=u 0x00000008 l00007E6A
// DataOut: a1 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -4(fp):a5
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32)

l00007E68:
	d7_190 = 8
// DataOut: a1 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:8 -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -4(fp):a5
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32)

l00007E6A:
	word32 d0_65 = d7_190 + 0x00000003
	word32 d7_101 = DPB(d0_65, (word16) d0_65 & 0xFFFC, 0)
	Mem76[a4 + 7660:word32] = Mem0[a4 + 7660:word32] + d7_101
	word32 d0_72 = dwArg04 + d7_101
	word32 a3_181 = Mem76[a4 + 7656:word32]
	word32 dwLoc10_177 = a4 + 7656
// DataOut: a1 a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:8 -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -4(fp):a5
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00007E90:
	branch a3_181 == 0x00000000 l00007F24
// DataOut: a1 a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00007F24:
	Mem184[dwLoc10_177:word32] = dwArg04
	Mem185[dwArg04:word32] = 0x00000000
	Mem187[dwArg04 + 4:word32] = d7_101
	a0 = dwLoc10_177
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007E96:
	a0 = a3_181 + Mem76[a3_181 + 4:word32]
	d7_101 = dwLoc18
	word32 a1_103 = d0_72
	*a1Out = a1_103
	branch a3_181 - d0_72 <=u 0x00000000 l00007EBC
// DataOut: a0 a1 a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(8)

l00007EBC:
	branch a3_181 - d0_72 != 0x00000000 l00007EDA
// DataOut: a0 a1 a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(8)

l00007EDA:
	branch dwArg04 - a0 >=u 0x00000000 l00007EE6
// DataOut: a0 a1 a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0014(32) Local -0018(8)

l00007EE6:
	branch dwArg04 - a0 != 0x00000000 l00007F14
// DataOut: a0 a1 a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0014(32) Local -0018(8)

l00007F14:
	dwLoc10_177 = a3_181
	a3_181 = Mem76[a3_181:word32]
// DataOut: a1 a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32)

l00007EEA:
	word32 d0_144 = Mem76[a3_181:word32]
	branch d0_144 == 0x00000000 l00007EFA
// DataOut: a0 a1 a3 a4 d0 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007EEE:
	branch d0_72 - d0_144 <=u 0x00000000 l00007EFA
// DataOut: a0 a1 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007EFA:
	Mem149[a3_181 + 4:word32] = Mem76[a3_181 + 4:word32] + dwLoc18
	word32 d0_151 = Mem149[a3_181:word32]
	branch d0_151 == 0x00000000 l00007F10
// DataOut: a0 a1 a3 a4 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007F02:
	branch d0_72 - d0_151 != 0x00000000 l00007F10
// DataOut: a0 a1 a3 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007F06:
	Mem163[a3_181 + 4:word32] = Mem149[a3_181 + 4:word32] + Mem149[d0_72 + 4:word32]
	Mem166[a3_181:word32] = Mem163[d0_72:word32]
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007F10:
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007EF2:
	Mem172[a4 + 7660:word32] = Mem76[a4 + 7660:word32] - dwLoc18
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007EDE:
	Mem137[a4 + 7660:word32] = Mem76[a4 + 7660:word32] - dwLoc18
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007EC0:
	Mem121[dwArg04:word32] = Mem76[a3_181:word32]
	Mem127[dwArg04 + 4:word32] = Mem121[a3_181 + 4:word32] + dwLoc18
	Mem130[dwLoc10_177:word32] = dwArg04
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007EAC:
	Mem108[dwArg04:word32] = a3_181
	Mem110[dwArg04 + 4:word32] = dwLoc18
	Mem113[dwLoc10_177:word32] = dwArg04
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00007E5C:
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -4(fp):a5
// LocalsOut: fp(32)

l00007F32:
	return a0
// DataOut: a0 a1 a4 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> a6:<invalid> d1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5

fn00007E4C_exit:
// DataOut: a0 a1
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 d7:d7 d0:<invalid> a2:a2 a3:a3 a6:a6 a0:<invalid> a1:<invalid> d1:<invalid> -44(fp):d7 -40(fp):a2 -36(fp):a3 -32(fp):a6 -28(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -4(fp):a5



word32 fn00007F3C(word32 d0, word32 a1, word32 a4, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a4 d0
// LiveOut: d0
// Trashed: CVZN d0 d1
// Preserved: a2 a3 a6 a7 d2
// Stack args: Stack +0008(32)
fn00007F3C_entry:
// DataOut: a1 a4 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0008(32)

l00007F3C:
	word32 d0_29
	InitStruct(a1, dwArg08, d0)
	branch d0 != 0x00000000 l00007F6A
// DataOut: a4 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007F6A:
	d0_29 = 0
// DataOut: a4 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> -16(fp):d2 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00007F58:
	Forbid()
	Mem40[a4 + 8240:word32] = d0
	Mem43[a4 + 18336:word32] = 5
	d0_29 = -1
// DataOut: a4 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> -16(fp):d2 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00007F6C:
	return d0_29
// DataOut: a4 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d0:<invalid> -16(fp):d2 -12(fp):a2 -8(fp):a3 -4(fp):a6

fn00007F3C_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 a2:a2 d1:<invalid> d2:d2 a6:a6 d0:<invalid> -16(fp):d2 -12(fp):a2 -8(fp):a3 -4(fp):a6



word32 fn00007F80(word32 d0, word32 a4, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d0
// LiveOut: d0
// Trashed: CVZN d0 d1
// Preserved: a3 a6 a7
// Stack args: Stack +0004(32)
fn00007F80_entry:
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00007F80:
	word32 d0_19
	InitCode(d0, dwArg04)
	branch d0 != 0x00000000 l00007FA8
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007FA8:
	d0_19 = 0
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d1:<invalid> a6:<invalid> -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00007F96:
	Forbid()
	Mem26[a4 + 8240:word32] = d0
	Mem29[a4 + 18336:word32] = 2
	d0_19 = -1
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d1:<invalid> a6:<invalid> -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00007FAA:
	return d0_19
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d1:<invalid> a6:<invalid> d0:<invalid> -8(fp):a3 -4(fp):a6

fn00007F80_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d1:<invalid> a6:a6 d0:<invalid> -8(fp):a3 -4(fp):a6



word32 fn00007FB0(word32 a4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4
// LiveOut: a4 a5 d0
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 a3 a7 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00007FB0_entry:
	*a4Out = a4
	*a5Out = a5
// DataOut: a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00007FB0:
	word32 d0_44
	word32 a0_28
	word32 d0_29 = fn000093F4(dwArg04, a4, dwArg04, out a0_28)
	branch d0_29 != 0x00000000 l00007FD2
// DataOut: a2 a3 a4 a5 a7 d0 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00007FD2:
	word32 a5_79
	word32 a4_80 = fn00008B74(d0_29, d0_29, a4, Mem0[d0_29 + 4:word32], dwArg08, dwArg0C, out a5_79)
	*a4Out = a4_80
	branch Mem0[a4_80 + 8240:word32] == 0x00000000 l00007FEE
// DataOut: a4 a5 a7 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

l00007FEE:
	d0_44 = d0_29
// DataOut: a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

l00007FEA:
	d0_44 = -1
// DataOut: a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

l00007FCE:
	d0_44 = -1
// DataOut: a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

l00007FF0:
	return d0_44
// DataOut: a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

fn00007FB0_exit:
// DataOut: a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> a2:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3



word32 fn0000812A(word32 d2, word32 d7, word32 a2, word32 a4, word32 dwArg04, ptr32 & d7Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 d2 d7
// LiveOut: a1 a2 a4 d2 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a5 a7
// Stack args: Stack +0004(32)
fn0000812A_entry:
	*d7Out = d7
// DataOut: a2 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32)

l0000812A:
	Mem13[a4 + 18312:word32] = 0x00000000
	fn00006F2E(d7, a4, 0x000080F0, dwArg04, fp + 0x00000008)
	word32 a1_30
	word32 a2_31
	word32 a4_32
	fn0000728C(d2, a2, a4, fp - 0x00000004, 0x0000FFFF, a4 + 7702, out a1_30, out a2_31, out a4_32)
	return d2
// DataOut: a1 a2 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn0000812A_exit:
// DataOut: a1 a2 a4 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a4:<invalid> -28(fp):0000FFFF -24(fp):a4 + 7702 -20(fp):000080F0 -16(fp):<invalid> -12(fp):fp + 0x00000008 -8(fp):a3 -4(fp):a5



word32 fn00008160(word32 d4, word32 a1, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d2Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a4 a5 d4
// LiveOut: a1 a4 d0 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 a3 a5 a7 d4 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00008160_entry:
	*a4Out = a4
	*d2Out = d2
	*a1Out = a1
// DataOut: a1 a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00008160:
	Mem30[a4 + 8240:word32] = 0x00000000
	word32 a5_200 = fp - 0x00000004
	word32 a7_201 = fp - 0x00000038
	word32 d5_167 = 3
// DataOut: a1 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Stack +000C(32)

l00008180:
	branch d5_167 - Mem30[a4 + 7640:word32] >= 0x00000000 l00008198
// DataOut: a1 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 17760 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +000C(32)

l00008186:
	branch Mem30[a4 + 17760 + (d5_167 << 0x00000003):word32] == 0x00000000 l00008198
// DataOut: a1 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 17760 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +000C(32)

l00008198:
	word32 d0_102
	branch Mem30[a4 + 7640:word32] - d5_167 != 0x00000000 l000081AC
// DataOut: a1 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 17760 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +000C(32)

l000081AC:
	word32 a0_115 = a4 + 17760 + (d5_167 << 0x00000003)
	word32 a2_116 = a0_115
	branch dwArg0C == 0x00000000 l000081C4
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 17760 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l000081BE:
	branch __btst((byte) dwArg0C, 0x0002) l000081CE
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l000081CE:
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l000081C4:
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l000081D6:
	word32 d7_125 = dwArg08 ^ Mem30[a4 + 7664:word32] & 0x00008000
	branch __btst((byte) d7_125, 0x0003) l000081F4
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l000081E8:
	d7_125 = DPB(d7_125, (word16) d7_125 & 0xFFFC | 0x0002, 0)
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l000081F4:
	word32 d0_133 = d7_125 & 3
	branch d0_133 == 0x00000000 l00008206
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l000081FE:
	branch d0_133 == 0x00000001 l00008206
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l00008202:
	branch d0_133 != 0x00000002 l0000820C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l0000820C:
	Mem355[a4 + 18336:word32] = 22
	d0_102 = -1
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5

l00008206:
	word32 d6_141 = d7_125 + 0x00000001
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l00008218:
	word32 d0_144 = d7_125 & 0x00000300
	branch d0_144 == 0x00000000 l000082AA
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 d6:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l000082AA:
	word32 a0_338
	word32 a1_339
	word32 a5_342
	d4 = fn00008BC0(d0_144, a0_115, a4, fp - 0x00000004, dwArg04, 0x000003ED, out d5_167, out a0_338, out a1_339, out a2_116, out a4, out a5_342)
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 d6:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5

l00008224:
	branch __btst((byte) d7_125, 0x000A) l00008240
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 d6:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l00008240:
	branch __btst((byte) d7_125, 0x0009) l0000825C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 d6:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l00008246:
	d0_144 = fn00008BC0(d0_144, a0_115, a4, fp - 0x00000004, dwArg04, 0x000003ED, out d5_167, out a0_115, out a1, out a2_116, out a4, out a5_200)
	a7_201 = fp - 0x00000038
	d4 = d0_144
	branch d0_144 > 0x00000000 l0000825C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 d6:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008258:
	__bset(d7_125, 0x0009, out d7_125)
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):000003ED -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000825C:
	branch __btst((byte) d7_125, 0x0009) l0000827C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):000003ED -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008262:
	Mem290[a5_200 + -1:byte] = 0x01
	Mem292[a4 + 18336:word32] = Mem290[a5_200 + -14:word32]
	word32 a7_294 = a7_201 - 0x00000004
	Mem296[a7_294:word32] = Mem292[a5_200 + -18:word32]
	Mem299[a7_294 - 0x00000004:word32] = dwArg04
	a7_201 = a7_294 + 0x00000004
	word32 a1_303
	d4 = fn0000901C(d0_144, a0_115, a1, a2_116, a4, dwArg00, out d5_167, out d6_141, out a1_303, out a2_116, out a4)
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):000003ED -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000822A:
	a7_201 = fp - 0x00000038
	word32 a1_263
	d4 = fn00008FB8(d0_144, a0_115, a1, a0_115, a4, dwArg04, out d5_167, out d6_141, out a1_263, out a2_116, out a4)
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:3 d6:<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000827C:
	branch Mem30[a5_200 + -1:byte] == 0x00 l000082B8
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00008282:
	branch (d7_125 & 240) == 0x00000000 l000082B8
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l0000828E:
	branch d4 < 0x00000000 l000082B8
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:240 d6:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00008292:
	word32 a7_220 = a7_201 - 0x00000004
	Mem222[a7_220:word32] = d4
	word32 d2_225
	word32 d5_226
	word32 a0_228
	word32 a1_229
	word32 a2_230
	word32 a3_231
	word32 a4_232
	word32 a5_233
	word32 d0_234 = fn00009084(a2_116, a4, dwArg00, out d2_225, out d5_226, out d6_141, out a0_228, out a1_229, out a2_230, out a3_231, out a4_232, out a5_233)
	Mem236[a7_220 - 0x00000004:word32] = 0x000003ED
	Mem239[a7_220 - 0x00000008:word32] = a3_231
	word32 a0_242
	word32 a1_243
	word32 a5_246
	d4 = fn00008BC0(d0_234, a2_230, a4_232, a5_233, dwArg00, dwArg04, out d5_167, out a0_242, out a1_243, out a2_116, out a4, out a5_246)
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:240 d6:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l000082B8:
	branch Mem30[a4 + 8240:word32] != 0x00000000 l000082C4
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l000082BE:
	branch d4 - -1 != 0x00000000 l000082C8
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l000082C8:
	Mem181[a2_116:word32] = d6_141
	Mem183[a2_116 + 4:word32] = d4
	d0_102 = d5_167
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:-1 a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l000082C4:
	d0_102 = -1
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l000081A0:
	Mem101[a4 + 18336:word32] = 24
	d0_102 = -1
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 17760 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5

l000082D0:
	return d0_102
// DataOut: a1 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a2:<invalid> d1:<invalid> d6:<invalid> d4:<invalid> a6:<invalid> d2:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5

fn00008160_exit:
// DataOut: a1 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d6:<invalid> a2:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> a1:<invalid> d3:<invalid> a4:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -22(fp):<invalid> -18(fp):<invalid> -5(fp):<invalid> -4(fp):a5

l00008194:
	d5_167 = d5_167 + 0x00000001
// DataOut: a1 a3 a4 a5 a7 d2 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000038 a5:fp - 0x00000004 a3:<invalid> d7:<invalid> d5:<invalid> d0:<invalid> a0:a4 + 17760 -56(fp):d4 -52(fp):d5 -48(fp):d6 -44(fp):d7 -40(fp):a2 -36(fp):a3 -18(fp):<invalid> -5(fp):0x00 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +000C(32)



void fn000082E4(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CVZNX a0 a1 d0
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn000082E4_entry:
// DataOut: a2 a3 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0004(32) Stack +0008(32) Stack +000C(32)

l000082E4:
	word32 a0_3 = dwArg04
	word32 a1_45 = dwArg08
	word32 d0_34 = dwArg0C
	branch dwArg0C <= 0x00000000 l00008308
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l000082F2:
	branch dwArg08 - dwArg04 <u 0x00000000 l00008302
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> a1:<invalid> d0:<invalid>

l00008302:
	Mem50[a1_45:byte] = Mem0[a0_3:byte]
	a0_3 = a0_3 + 0x00000001
	a1_45 = a1_45 + 0x00000001
	d0_34 = d0_34 - 0x00000001
	branch d0_34 != 0x00000000 l00008302
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> a1:<invalid> d0:<invalid>

l00008308:
	return
	return
// DataOut: a2 a3 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> a1:<invalid> d0:<invalid>

l000082F6:
	word32 a0_30 = dwArg04 + dwArg0C
	word32 a1_31 = dwArg08 + dwArg0C
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> a1:<invalid> d0:<invalid>

l000082FA:
	a0_30 = a0_30 - 0x00000001
	a1_31 = a1_31 - 0x00000001
	Mem40[a1_31:byte] = Mem0[a0_30:byte]
	d0_34 = d0_34 - 0x00000001
	branch d0_34 != 0x00000000 l000082FA
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> a1:<invalid> d0:<invalid>

l00008300:
	return
// DataOut: a2 a3 a4 a5 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> a1:<invalid> d0:<invalid>

fn000082E4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> a1:<invalid> d0:<invalid>



word32 fn0000830C(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4
// LiveOut: a1
// Trashed: CVZNX a0 a1 d0
// Preserved: a2 a3 a6 a7
fn0000830C_entry:
// DataOut: a1 a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000830C:
	word32 a3_13 = Mem0[a4 + 18320:word32]
// DataOut: a1 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00008314:
	branch a3_13 == 0x00000000 l0000832C
// DataOut: a1 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l0000832C:
	Mem31[a4 + 18324:word32] = 0x00000000
	Mem33[a4 + 18320:word32] = 0x00000000
	return a1
// DataOut: a1 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a6

fn0000830C_exit:
// DataOut: a1
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d0:<invalid> a0:0x00000000 a2:a2 a6:a6 a1:<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a6

l00008318:
	word32 a2_22 = Mem0[a3_13:word32]
	FreeMem(a3_13, Mem0[a3_13 + 8:word32])
	a1 = a3_13
	a3_13 = a2_22
// DataOut: a1 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)



word32 fn0000833C(word32 d2, word32 a4, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d2
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a7 d7
// Stack args: Stack +0004(32)
fn0000833C_entry:
// DataOut: a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l0000833C:
	word32 d0_15 = Mem0[a4 + 18332:word32]
	branch d0_15 == 0x00000000 l0000835C
// DataOut: a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0014(32)

l0000834A:
	word32 a1_87
	fn00007E4C(a4, d0_15, Mem0[d0_15:word32], out a1_87)
	Mem93[a4 + 18332:word32] = 0x00000000
// DataOut: a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:<invalid> d0:<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0014(32)

l0000835C:
	word32 d0_41
	branch dwArg04 != 0x00000000 l00008364
// DataOut: a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0014(32)

l00008364:
	word32 a0_61
	word32 a1_62
	word32 d0_63 = fn0000843C(d2, a4, dwArg04 + 0x00000004, out a0_61, out a1_62)
	branch d0_63 != 0x00000000 l00008378
// DataOut: a3 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00008378:
	Mem74[d0_63:word32] = dwArg04 + 0x00000004
	d0_41 = d0_63 + 4
// DataOut: a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00008374:
	d0_41 = 0
// DataOut: a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00008360:
	d0_41 = 0
// DataOut: a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00008382:
	return d0_41
// DataOut: a4 a5 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C d7:<invalid> d0:<invalid> a2:<invalid> a0:<invalid> a3:<invalid> a1:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3

fn0000833C_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d7:d7 d0:<invalid> a2:a2 a0:<invalid> a3:a3 a1:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d7 -8(fp):a2 -4(fp):a3



word32 fn00008388(word32 a2, word32 a4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d2Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4
// LiveOut: a2 a4 a5 d0 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7 d4 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00008388_entry:
	*a4Out = a4
	*d2Out = d2
	*a2Out = a2
	*a5Out = a5
// DataOut: a2 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00008388:
	word32 d0_45
	word32 a0_28
	word32 d0_29 = fn000093F4(dwArg04, a4, dwArg04, out a0_28)
	branch d0_29 != 0x00000000 l000083AA
// DataOut: a2 a3 a4 a5 a7 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000083AA:
	word32 a2_84
	word32 a4_85
	word32 a5_86
	word32 d0_87 = fn00008AF8(a2, a4, Mem0[d0_29 + 4:word32], dwArg08, dwArg0C, out a2_84, out a4_85, out a5_86)
	branch Mem0[a4_85 + 8240:word32] == 0x00000000 l000083C6
// DataOut: a2 a4 a5 a7 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d7:<invalid> d6:<invalid> d5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a3

l000083C6:
	d0_45 = d0_87
// DataOut: a2 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a3

l000083C2:
	d0_45 = -1
// DataOut: a2 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a3

l000083A6:
	d0_45 = -1
// DataOut: a2 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 d7:<invalid> d6:<invalid> d5:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> -24(fp):<invalid> -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a3

l000083C8:
	return d0_45
// DataOut: a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a3

fn00008388_exit:
// DataOut: a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a3:<invalid> d0:<invalid> d4:<invalid> d1:<invalid> a0:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a3



word32 fn000083D0(word32 a4, word32 dwArg04, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4
// LiveOut: a0 a1 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a6 a7 d7
// Stack args: Stack +0004(32)
fn000083D0_entry:
	*a1Out = a1
	*a0Out = a0
// DataOut: a0 a1 a4 a5 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000083D0:
	word32 d0_35
	word32 d0_23 = AllocMem(dwArg04 + 12, 0)
	branch d0_23 != 0x00000000 l000083F2
// DataOut: a0 a1 a3 a4 a5 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000083F2:
	Mem55[d0_23 + 8:word32] = dwArg04 + 12
	Mem60[d0_23 + 4:word32] = Mem55[a4 + 18324:word32]
	Mem64[d0_23:word32] = 0x00000000
	branch Mem64[a4 + 18320:word32] != 0x00000000 l0000840C
// DataOut: a1 a2 a3 a4 a5 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l0000840A:
	Mem91[a4 + 18320:word32] = d0_23
// DataOut: a1 a2 a3 a4 a5 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> a2:a4 + 18320 a0:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l0000840C:
	word32 d0_69 = Mem64[a4 + 18324:word32]
	branch d0_69 == 0x00000000 l00008416
// DataOut: a1 a2 a3 a4 a5 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> a2:a4 + 18320 a0:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00008412:
	Mem88[d0_69:word32] = d0_23
	word32 a1_86
	*a1Out = d0_69
// DataOut: a1 a2 a3 a4 a5 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> a2:a4 + 18320 a0:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00008416:
	Mem75[a4 + 18324:word32] = d0_23
	branch Mem75[a4 + 7644:word32] != 0x00000000 l00008424
// DataOut: a1 a3 a4 a5 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> a2:a4 + 18320 a0:<invalid> a1:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00008420:
	Mem84[a4 + 7644:word32] = d0_23
// DataOut: a1 a3 a4 a5 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> a2:a4 + 18320 a0:<invalid> a1:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l00008424:
	word32 a0_80
	*a0Out = d0_23 + 12
	d0_35 = d0_23 + 12
// DataOut: a0 a1 a4 a5 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> a2:a4 + 18320 a0:<invalid> a1:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l000083EE:
	d0_35 = 0
// DataOut: a0 a1 a4 a5 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l0000842A:
	return d0_35
// DataOut: a0 a1 a4 a5 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> d1:0 a6:<invalid> a3:<invalid> a2:a4 + 18320 a0:<invalid> a1:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6

fn000083D0_exit:
// DataOut: a0 a1 d0
// DataOut (flags): 
// SymbolicIn: a7:fp d7:d7 d0:<invalid> d1:0 a6:a6 a3:a3 a2:a2 a0:<invalid> a1:<invalid> -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6



word32 fn0000843C(word32 d2, word32 a4, word32 dwArg04, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d2
// LiveOut: a0 a1 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a7 d6 d7
// Stack args: Stack +0004(32)
fn0000843C_entry:
	*a1Out = a1
	*a0Out = a0
// DataOut: a0 a1 a4 a5 a6 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32)

l0000843C:
	word32 d0_102
	word32 d7_15 = dwArg04
	branch false l0000844E
// DataOut: a0 a1 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0018(32)

l0000844E:
	branch dwArg04 >=u 0x00000008 l00008456
// DataOut: a1 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0018(32)

l00008454:
	d7_15 = 8
// DataOut: a1 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0018(32)

l00008456:
	word32 d0_60 = d7_15 + 0x00000003
	word32 d7_64 = DPB(d0_60, (word16) d0_60 & 0xFFFC, 0)
	word32 a2_69 = a4 + 7656
	word32 a3_71 = Mem0[a4 + 7656:word32]
// DataOut: a1 a2 a3 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0018(32)

l00008466:
	branch a3_71 == 0x00000000 l000084AA
// DataOut: a1 a2 a3 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0018(32)

l000084AA:
	word32 d1_126 = Mem0[a4 + 7788:word32]
	word32 d1_131
	word32 d0_135 = fn00009154(fn00009174(d7_64 + d1_126 - 0x00000001, d1_126, d2, out d1_131), Mem0[a4 + 7788:word32])
	word32 d6_143 = DPB(d0_135 + 0x0000000B, (word16) (d0_135 + 0x0000000B) & 0xFFFC, 0)
	word32 a0_148
	word32 a1_149
	word32 d0_150 = fn000083D0(a4, d6_143, out a0_148, out a1_149)
	branch d0_150 == 0x00000000 l000084EE
// DataOut: a0 a1 a3 a4 a5 a6 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l000084EE:
	d0_102 = 0
// DataOut: a0 a1 a4 a5 a6 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:0 d6:<invalid> a0:<invalid> a1:<invalid> -20(fp):<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l000084DC:
	word32 a1_163
	fn00007E4C(a4, d0_150, d6_143, out a1_163)
	word32 a0_168
	word32 a1_169
	d0_102 = fn0000843C(d2, a4, d7_64, out a0_168, out a1_169)
// DataOut: a0 a1 a4 a5 a6 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:0 d6:<invalid> a0:<invalid> a1:<invalid> -20(fp):<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l0000846A:
	word32 d0_81 = Mem0[a3_71 + 4:word32]
	branch d0_81 - d7_64 < 0x00000000 l000084A4
// DataOut: a1 a2 a3 a4 a5 a6 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0018(32)

l00008472:
	branch d0_81 - d7_64 != 0x00000000 l00008482
// DataOut: a1 a2 a3 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0018(32)

l00008482:
	word32 d0_105 = Mem0[a3_71 + 4:word32] - d7_64
	branch d0_105 <u 0x00000008 l000084A4
// DataOut: a1 a2 a3 a4 a5 a6 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0018(32)

l000084A4:
	a2_69 = a3_71
	a3_71 = Mem0[a3_71:word32]
// DataOut: a1 a2 a3 a4 a5 a6 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Local -0018(32)

l0000848E:
	word32 a0_112 = a3_71 + d7_64
	*a0Out = a0_112
	Mem114[a2_69:word32] = a0_112
	Mem117[a0_112:word32] = Mem114[a3_71:word32]
	Mem119[a0_112 + 4:word32] = d0_105
	Mem121[a4 + 7660:word32] = Mem119[a4 + 7660:word32] - d7_64
	d0_102 = a3_71
// DataOut: a0 a1 a4 a5 a6 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00008476:
	word32 a0_96 = Mem0[a3_71:word32]
	*a0Out = a0_96
	Mem98[a2_69:word32] = a0_96
	Mem100[a4 + 7660:word32] = Mem98[a4 + 7660:word32] - d7_64
	d0_102 = a3_71
// DataOut: a0 a1 a4 a5 a6 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:8 -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00008448:
	d0_102 = 0
// DataOut: a0 a1 a4 a5 a6 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l000084F0:
	return d0_102
// DataOut: a0 a1 a4 a5 a6 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d7:<invalid> d0:<invalid> a2:<invalid> a3:<invalid> d1:<invalid> d6:<invalid> a0:<invalid> a1:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3

fn0000843C_exit:
// DataOut: a0 a1 d0
// DataOut (flags): 
// SymbolicIn: a7:fp d7:d7 d0:<invalid> d6:d6 a2:a2 a3:a3 d1:<invalid> a0:<invalid> a1:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):d6 -12(fp):d7 -8(fp):a2 -4(fp):a3



word32 fn00008504(word32 d2, word32 d7, word32 a4, word32 dwArg04, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d2 d7
// LiveOut: a0 a1 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d7
// Stack args: Stack +0004(32)
fn00008504_entry:
// DataOut: a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00008504:
	word32 a0_14
	word32 a1_15
	return fn0000843C(d2, a4, dwArg04, out a0_14, out a1_15)
// DataOut: a0 a1 a2 a3 a4 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00008504_exit:
// DataOut: a0 a1 d0
// DataOut (flags): 
// SymbolicIn: a7:fp d7:d7 d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):d7



word32 fn00008518(word32 d0, word32 d2, word32 a1, word32 a4, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a4 d0 d2
// LiveOut: d0
// Trashed: CVZNX a0 d0 d1
// Preserved: a3 a5 a6 a7 d2 d4 d5 d6 d7
// Stack args: Stack +0004(32)
fn00008518_entry:
// DataOut: a1 a2 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Stack +0004(32)

l00008518:
	Deallocate(fp + 0xFFFFFFF0, a1, d0)
	word32 d7_213 = 0x000007BB
	word32 d6_215 = dwLoc10
// DataOut: a2 a3 a4 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00008542:
	branch d6_215 - 0x0000016D <= 0x00000000 l00008568
// DataOut: a2 a3 a4 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00008568:
	branch d6_215 - 0x0000016D != 0x00000000 l00008580
// DataOut: a2 a3 a4 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00008570:
	word32 d1_207
	fn00009174(d7_213, 4, d2, out d1_207)
	branch d1_207 == 0x00000000 l00008580
// DataOut: a2 a3 a4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l0000857C:
	d7_213 = d7_213 + 0x00000000
	d6_215 = 0
// DataOut: a2 a3 a4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00008580:
	word32 d0_102
	word32 d1_84 = d7_213 - 0x000007BC
	Mem87[dwArg04 + 1:byte] = (byte) d1_84
	word32 d2_90 = (int32) (byte) d1_84
	word32 d1_96
	fn00009174(d2_90, 4, d2_90, out d1_96)
	branch d1_96 != 0x00000000 l000085A6
// DataOut: a2 a3 a4 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l000085A6:
	d0_102 = 28
// DataOut: a2 a3 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> d2:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l000085A2:
	d0_102 = 29
// DataOut: a2 a3 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> d2:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l000085A8:
	Mem104[a4 + 7793:byte] = (byte) d0_102
	word32 d4_105 = 0x00000001
	word32 d5_106 = d6_215
// DataOut: a2 a3 a4 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> d2:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l000085B2:
	branch d4_105 - 12 >= 0x00000000 l000085D6
// DataOut: a2 a3 a4 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l000085B8:
	branch (int32) Mem104[a4 + 7792 + d4_105:byte] - d5_106 > 0x00000000 l000085D6
// DataOut: a2 a3 a4 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d1:<invalid> a6:<invalid> d0:12 d7:<invalid> d6:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l000085D6:
	Mem123[dwArg04 + 2:byte] = (byte) (d4_105 + 0x00000000)
	Mem129[dwArg04 + 3:byte] = (byte) (d5_106 + 0x00000001)
	word32 d1_133
	fn00009174(dwLoc10, 7, d2_90, out d1_133)
	Mem136[dwArg04:byte] = (byte) d1_133
	word32 d1_141
	Mem144[dwArg04 + 4:byte] = (byte) fn00009174(dwLoc0C, 60, d2_90, out d1_141)
	word32 d1_148
	fn00009174(dwLoc0C, 60, d2_90, out d1_148)
	Mem151[dwArg04 + 5:byte] = (byte) d1_148
	word32 d1_156
	Mem159[dwArg04 + 6:byte] = (byte) fn00009174(dwLoc08, 50, d2_90, out d1_156)
	word32 d1_163
	word32 d0_164 = fn00009174(dwLoc08, 50, d2_90, out d1_163)
	Mem168[dwArg04 + 7:byte] = (byte) (d1_163 * 0x00000002)
	return d0_164
// DataOut: a2 a4 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:<invalid> d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5

fn00008518_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 a3:a3 a0:<invalid> d1:<invalid> a6:a6 d0:<invalid> d7:d7 d6:d6 d2:d2 d4:d4 d5:d5 -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5

l000085C6:
	d5_106 = d5_106 - (int32) Mem104[(a4 + 7792) + d4_105:byte]
	d4_105 = d4_105 + 0x00000001
// DataOut: a2 a3 a4 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:a4 + 7792 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> d2:<invalid> d4:<invalid> d5:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l0000854A:
	word32 d1_64
	fn00009174(d7_213, 4, d2, out d1_64)
	branch d1_64 != 0x00000000 l0000855E
// DataOut: a2 a3 a4 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l0000855E:
	d6_215 = d6_215 - 0x0000016D
// DataOut: a2 a3 a4 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00008556:
	d6_215 = d6_215 - 0x0000016E
// DataOut: a2 a3 a4 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l00008564:
	d7_213 = d7_213 + 0x00000001
// DataOut: a2 a3 a4 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000040 a5:fp - 0x00000004 a3:<invalid> a0:fp + 0xFFFFFFF0 d1:<invalid> a6:<invalid> d0:<invalid> d7:<invalid> d6:<invalid> -64(fp):d2 -60(fp):d4 -56(fp):d5 -52(fp):d6 -48(fp):d7 -44(fp):a3 -40(fp):a6 -20(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)



word32 fn000086A4(word32 d2, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg04, ptr32 & d2Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a3 a4 a5 d2
// LiveOut: a2 a4 a5 d0 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7 d7
// Stack args: Stack +0004(32)
fn000086A4_entry:
	*a2Out = a2
	*a4Out = a4
	*d2Out = d2
	*a5Out = a5
// DataOut: a2 a3 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000086A4:
	word32 d0_30
	word32 a7_112 = fp - 0x00000008
	branch __btst(Mem0[dwArg04 + 27:byte], 0x0001) l000086C6
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l000086B4:
	d0_30 = Mem0[dwArg04 + 20:word32]
	branch d0_30 == 0x00000000 l00008716
// DataOut: a2 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> -8(fp):d7 -4(fp):a3
// LocalsOut: fp(32) Local -0004(32)

l000086BA:
	word32 a1_108
	fn0000728C(d2, a2, a4, a5, 0x0000FFFF, dwArg04, out a1_108, out a2, out a4)
	a7_112 = fp - 0x00000008
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a3:<invalid> d0:<invalid> -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l000086C6:
	word32 a7_47 = a7_112 - 0x00000004
	Mem48[a7_47:word32] = 0x00000001
	Mem50[0x00000000:word32] = 0x00000000
	Mem54[a7_47 - 0x00000008:word32] = Mem50[dwArg04 + 28:word32]
	word32 d2_58
	word32 a2_59
	word32 a4_60
	word32 a5_61
	word32 d0_62 = fn00008388(a2, a4, dwArg00, dwArg04, dwArg08, out d2_58, out a2_59, out a4_60, out a5_61)
	branch d0_62 == 0xFFFFFFFF l000086E6
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l000086E0:
	branch Mem54[dwArg04 + 20:word32] != 0x00000000 l000086EA
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l000086EA:
	branch __btst(Mem54[dwArg04 + 27:byte], 0x0001) l000086FE
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l000086FE:
	branch __btst(Mem54[dwArg04 + 26:byte], 0x0007) l00008710
// DataOut: a2 a3 a4 a5 a7 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l00008710:
	d0_30 = d0_62 - Mem54[dwArg04 + 8:word32]
// DataOut: a2 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l00008706:
	d0_30 = d0_62 + Mem54[dwArg04 + 8:word32]
// DataOut: a2 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l000086F2:
	d0_30 = Mem54[dwArg04 + 4:word32] - Mem54[dwArg04 + 16:word32] + d0_62
// DataOut: a2 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l000086E6:
	d0_30 = d0_62
// DataOut: a2 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l00008716:
	return d0_30
// DataOut: a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3

fn000086A4_exit:
// DataOut: a2 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d7:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):0000FFFF -12(fp):<invalid> -8(fp):d7 -4(fp):a3



word32 fn0000871C(word32 d2, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a3 a4 a5 d2
// LiveOut: a2 a4 a5 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn0000871C_entry:
// DataOut: a2 a3 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l0000871C:
	word32 a7_102 = fp - 0x0000000C
	word32 d7_113 = dwArg08
	branch __btst(Mem0[dwArg04 + 27:byte], 0x0001) l00008742
// DataOut: a2 a3 a4 a5 a7 d2 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l00008742:
	branch dwArg0C != 0x00000001 l0000875C
// DataOut: a2 a3 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> d6:<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008748:
	branch __btst(Mem0[dwArg04 + 26:byte], 0x0007) l00008758
// DataOut: a2 a3 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> d6:<invalid> d0:1 -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008758:
	d7_113 = dwArg08 - Mem0[dwArg04 + 8:word32]
// DataOut: a2 a3 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> d6:<invalid> d0:1 -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008750:
	d7_113 = dwArg08 + Mem0[dwArg04 + 8:word32]
// DataOut: a2 a3 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> d6:<invalid> d0:1 -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008734:
	word32 a1_98
	fn0000728C(d2, a2, a4, a5, 0x0000FFFF, dwArg04, out a1_98, out a2, out a4)
	a7_102 = fp - 0x0000000C
// DataOut: a2 a3 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> d7:<invalid> d6:<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l0000875C:
	Mem29[dwArg04 + 4:word32] = Mem0[dwArg04 + 16:word32]
	Mem32[dwArg04 + 12:word32] = 0
	Mem34[dwArg04 + 8:word32] = 0
	branch __btst(Mem34[dwArg04 + 27:byte], 0x0007) l0000877A
// DataOut: a2 a3 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):0000FFFF -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008774:
	Mem84[dwArg04 + 24:word32] = Mem34[dwArg04 + 24:word32] & -4
// DataOut: a2 a3 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d6:<invalid> d0:0 d1:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):0000FFFF -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l0000877A:
	word32 a7_43 = a7_102 - 0x00000004
	Mem45[a7_43:word32] = dwArg0C
	Mem48[a7_43 - 0x00000004:word32] = d7_113
	Mem52[a7_43 - 0x00000008:word32] = Mem48[dwArg04 + 28:word32]
	word32 d2_55
	word32 a2_56
	word32 a4_57
	word32 a5_58
	branch fn00008388(a2, a4, dwArg00, dwArg04, dwArg08, out d2_55, out a2_56, out a4_57, out a5_58) != 0x00000001 l00008792
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):0000FFFF -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

l00008792:
	Mem79[dwArg04 + 24:word32] = Mem52[dwArg04 + 24:word32] & -49
// DataOut: a2 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

l0000878E:
// DataOut: a2 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

l0000879A:
	return d2_55
// DataOut: a2 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

fn0000871C_exit:
// DataOut: a2 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3



word32 fn000087A0(word32 d2, word32 a4, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d2
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a3 a7
// Stack args: Stack +0004(32)
fn000087A0_entry:
// DataOut: a2 a4 a5 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000087A0:
	word32 d0_19 = dwArg04
	branch dwArg04 == 0x00000000 l000087BA
// DataOut: a2 a3 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000087AA:
	Mem26[0x00000000:word32] = 0x00000000
	d0_19 = fn0000833C(d2, a4, dwLoc08)
	Mem39[a4 + 18332:word32] = dwArg04 - 0x00000004
// DataOut: a2 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> d0:<invalid> -4(fp):a3

l000087BA:
	return d0_19
// DataOut: a2 a4 a5 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -4(fp):a3

fn000087A0_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -4(fp):a3



word32 fn00008830(word32 d2, word32 a1, word32 a2, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & d2Out, ptr32 & d7Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a2 a4 a5 d2
// LiveOut: a4 d0 d2 d7
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 a3 a5 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00008830_entry:
	*a4Out = a4
	*d7Out = d7
	*d2Out = d2
// DataOut: a1 a2 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l00008830:
	word32 a3_111 = a4 + 7668
// DataOut: a1 a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l0000883C:
	branch a3_111 == 0x00000000 l0000884C
// DataOut: a1 a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a2:<invalid> -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l00008840:
	branch Mem0[a3_111 + 24:word32] == 0x00000000 l0000884C
// DataOut: a1 a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a2:<invalid> -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l0000884C:
	word32 d0_104
	branch a3_111 != 0x00000000 l00008872
// DataOut: a1 a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a2:<invalid> -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l00008850:
	word32 a0_107
	word32 d0_109 = fn0000843C(d2, a4, 0x00000022, out a0_107, out a1)
	a3_111 = d0_109
	branch d0_109 != 0x00000000 l00008864
// DataOut: a1 a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a2:<invalid> -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32)

l00008864:
	Mem121[a2:word32] = d0_109
	word32 d0_122 = 33
	word32 a0_125 = d0_109
// DataOut: a0 a1 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -24(fp):00000022 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32)

l0000886C:
	Mem129[a0_125:byte] = 0x00
	a0_125 = a0_125 + 0x00000001
	d0_122 = d0_122 - 0x00000001
	branch d0_122 != 0xFFFFFFFF l0000886C
// DataOut: a0 a1 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> d1:0 a0:<invalid> a2:<invalid> a1:<invalid> -24(fp):00000022 -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32)

l00008872:
	word32 d2_85
	word32 a1_86
	word32 a4_87
	fn0000888C(d2, a1, a4, fp - 0x00000004, dwArg08, a3_111, out d2_85, out a1_86, out a4_87)
	Mem91[fp - 0x00000024:word32] = a3_111
	Mem95[fp - 0x00000028:word32] = Mem91[fp + 0x00000008:word32]
	Mem99[fp - 0x0000002C:word32] = Mem95[fp + 0x00000004:word32]
	word32 d2_101
	word32 a1_102
	word32 a4_103
	d0_104 = fn0000888C(d2_85, a1_86, a4_87, fp - 0x00000004, dwArg04, dwArg08, out d2_101, out a1_102, out a4_103)
// DataOut: a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a2:<invalid> d1:0 a0:<invalid> a1:<invalid> -24(fp):00000022 -20(fp):a2 -16(fp):a3 -4(fp):a5

l00008860:
	d0_104 = 0
// DataOut: a4 a5 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -24(fp):00000022 -20(fp):a2 -16(fp):a3 -4(fp):a5

l00008880:
	return d0_104
// DataOut: a4 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d5:<invalid> d7:<invalid> d4:<invalid> d6:<invalid> d3:<invalid> a4:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):a2 -16(fp):a3 -4(fp):a5

fn00008830_exit:
// DataOut: a4 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> a2:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d5:<invalid> d7:<invalid> d4:<invalid> d6:<invalid> d3:<invalid> a4:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):a2 -16(fp):a3 -4(fp):a5

l00008846:
	a2 = a3_111
	a3_111 = Mem0[a3_111:word32]
// DataOut: a1 a2 a3 a4 a5 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a5:fp - 0x00000004 a3:<invalid> d0:<invalid> a2:<invalid> -20(fp):a2 -16(fp):a3 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -001C(32) Stack +0004(32) Stack +0008(32)



word32 fn0000888C(word32 d2, word32 a1, word32 a4, word32 a5, word32 dwArg08, word32 dwArg0C, ptr32 & d2Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a4 a5 d2
// LiveOut: a1 a4 d0 d2
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a2 a3 a5 a7 d4 d5 d6 d7
// Stack args: Stack +0008(32) Stack +000C(32)
fn0000888C_entry:
	*d2Out = d2
	*a1Out = a1
	*a4Out = a4
// DataOut: a1 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l0000888C:
	word32 a5_315 = fp - 0x00000004
	word32 a7_22 = fp - 0x0000002C
	word32 a2_28 = dwArg0C
	branch Mem0[dwArg0C + 24:word32] == 0x00000000 l000088AA
// DataOut: a1 a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l000088A2:
	word32 d2_309
	word32 d5_310
	word32 a0_311
	fn000089F8(d2, dwArg0C, dwArg08, a4, fp - 0x00000004, dwArg0C, out d2_309, out d5_310, out a0_311, out a1, out a2_28, out a4, out a5_315)
	a7_22 = fp - 0x0000002C
// DataOut: a1 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000002C a5:fp - 0x00000004 a3:<invalid> a2:<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000088AA:
	word32 d5_294 = Mem0[a4 + 7772:word32]
	word32 d7_295 = 1
	word16 v19_54 = (word16) (int32) Mem0[dwArg08 + 1:byte] - 0x0061
	branch v19_54 == 0x0000 l000088C2
// DataOut: a1 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> d6:<invalid> a6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000088C2:
	d5_294 = 0
// DataOut: a1 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:1 d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000088BC:
	branch v19_54 == 0x0001 l000088C6
// DataOut: a1 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:1 d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000088C6:
	d5_294 = 0x00008000
// DataOut: a1 a3 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:1 d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000088CC:
	d7_295 = 0x00000002
// DataOut: a1 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:1 d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000088C0:
// DataOut: a1 a3 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:1 d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000088CE:
	word32 d7_113
	word32 d6_112
	word32 d0_139
	word32 d0_69 = (int32) (int16) (int16) -cond(0x2B - Mem0[dwArg08 + d7_295:byte])
	word16 v27_74 = (word16) (int32) Mem0[dwArg08:byte] - 0x0061
	branch v27_74 == 0x0000 l000088F6
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l000088F6:
	word32 a7_251 = a7_22 - 0x00000004
	Mem252[a7_251:word32] = 0x0000000C
	Mem255[a7_251 - 0x00000004:word32] = 0x00008102
	Mem259[a7_251 - 0x00000008:word32] = Mem255[a5_315 + 8:word32]
	word32 d2_261
	word32 a1_262
	word32 a4_263
	word32 d0_264 = fn00008160(d0_69, a1, a4, a5_315, dwArg00, dwArg04, dwArg08, out d2_261, out a1_262, out a4_263)
	d6_112 = d0_264
	branch d0_264 != 0xFFFFFFFF l0000891A
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l0000891A:
	word32 d0_278
	branch d0_69 == 0x00000000 l00008924
// DataOut: a1 a2 a4 a5 a7 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):0x00008102 -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l00008924:
	d0_278 = 2
// DataOut: a1 a2 a4 a5 a7 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):0x00008102 -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l0000891E:
	d0_278 = 128
// DataOut: a1 a2 a4 a5 a7 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):0x00008102 -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l00008926:
	d7_113 = DPB(d0_278, (word16) d0_278 | 0x4000, 0)
// DataOut: a1 a2 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):0x00008102 -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l00008914:
	d0_139 = 0
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):0x00008102 -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000088E8:
	branch v27_74 == 0x0011 l00008930
// DataOut: a1 a4 a5 a7 d0 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008930:
	word32 d0_209
	branch d0_69 == 0x00000000 l00008938
// DataOut: a1 a4 a5 a7 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008938:
	d0_209 = 0
// DataOut: a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008934:
	d0_209 = 2
// DataOut: a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000893A:
	word32 a7_212 = a7_22 - 0x00000004
	Mem213[a7_212:word32] = 0x0000000C
	Mem216[a7_212 - 0x00000004:word32] = DPB(d0_209, (word16) d0_209 | 0x8000, 0)
	Mem220[a7_212 - 0x00000008:word32] = Mem216[a5_315 + 8:word32]
	word32 d2_222
	word32 a1_223
	word32 a4_224
	word32 d0_225 = fn00008160(d0_69, a1, a4, a5_315, dwArg00, dwArg04, dwArg08, out d2_222, out a1_223, out a4_224)
	d6_112 = d0_225
	branch d0_225 != 0xFFFFFFFF l0000895E
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l0000895E:
	word32 d0_239
	branch d0_69 == 0x00000000 l00008968
// DataOut: a1 a2 a4 a5 a7 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l00008968:
	d0_239 = 1
// DataOut: a1 a2 a4 a5 a7 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l00008962:
	d0_239 = 128
// DataOut: a1 a2 a4 a5 a7 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l0000896A:
	d7_113 = d0_239
// DataOut: a1 a2 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l00008958:
	d0_139 = 0
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000088EE:
	branch v27_74 == 0x0016 l0000896E
// DataOut: a1 a4 a5 a7 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l0000896E:
	word32 d0_157
	branch d0_69 == 0x00000000 l00008976
// DataOut: a1 a4 a5 a7 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008976:
	d0_157 = 1
// DataOut: a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008972:
	d0_157 = 2
// DataOut: a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008978:
	word32 a7_164 = a7_22 - 0x00000004
	Mem165[a7_164:word32] = 0x0000000C
	Mem168[a7_164 - 0x00000004:word32] = DPB(d0_157, (word16) d0_157 | 0x8000 | 0x0100 | 0x0200, 0)
	Mem172[a7_164 - 0x00000008:word32] = Mem168[a5_315 + 8:word32]
	word32 d2_176
	word32 a1_177
	word32 a4_178
	word32 d0_179 = fn00008160(d0_69, a1, a4, a5_315, dwArg00, dwArg04, dwArg08, out d2_176, out a1_177, out a4_178)
	d6_112 = d0_179
	branch d0_179 != 0xFFFFFFFF l000089A2
// DataOut: a1 a2 a4 a5 a7 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089A2:
	word32 d0_193
	branch d0_69 == 0x00000000 l000089AC
// DataOut: a1 a2 a4 a5 a7 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089AC:
	d0_193 = 2
// DataOut: a1 a2 a4 a5 a7 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089A6:
	d0_193 = 128
// DataOut: a1 a2 a4 a5 a7 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089AE:
	d7_113 = d0_193
// DataOut: a1 a2 a4 a5 a7 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089B6:
	Mem118[a2_28 + 16:word32] = 0x00000000
	Mem121[a2_28 + 20:word32] = 0
	Mem123[a2_28 + 28:word32] = d6_112
	Mem125[a2_28 + 4:word32] = Mem123[a2_28 + 16:word32]
	Mem127[a2_28 + 12:word32] = 0
	Mem129[a2_28 + 8:word32] = 0
	word32 d0_119 = 0
	branch d5_294 != 0x00000000 l000089DE
// DataOut: a1 a2 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089D8:
	d0_119 = 0x00008000
// DataOut: a1 a2 a4 a5 a7 d0 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:0 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089DE:
	Mem138[a2_28 + 24:word32] = d7_113 | d0_119
	d0_139 = a2_28
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l0000899E:
	d0_139 = 0
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:-1 d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000088F2:
// DataOut: a1 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089B2:
	d0_139 = 0
// DataOut: a1 a4 a5 a7 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:43 d4:<invalid> a0:<invalid> a1:<invalid> d6:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

l000089E8:
	return d0_139
// DataOut: a1 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5

fn0000888C_exit:
// DataOut: a1 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d5:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d4:<invalid> a0:<invalid> d6:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> a4:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):d4 -40(fp):d5 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -4(fp):a5



word32 fn000089F8(word32 d2, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg04, ptr32 & d2Out, ptr32 & d5Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a3 a4 a5 d2
// LiveOut: a0 a1 a2 a4 a5 d0 d2 d5
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7 d6 d7
// Stack args: Stack +0004(32)
fn000089F8_entry:
// DataOut: a2 a3 a4 a5 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000089F8:
	word32 d7_110
	word32 a7_109 = fp - 0x0000000C
	branch __btst(Mem0[dwArg04 + 27:byte], 0x0001) l00008A18
// DataOut: a2 a3 a4 a5 a7 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l00008A18:
	d7_110 = 0
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A08:
	a7_109 = fp - 0x0000000C
	word32 a1_105
	d7_110 = fn0000728C(d2, a2, a4, a5, 0x0000FFFF, dwArg04, out a1_105, out a2, out a4)
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000000C a3:<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A1A:
	branch (Mem0[dwArg04 + 24:word32] & 12) != 0x00000000 l00008A36
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):0000FFFF -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A22:
	branch Mem0[dwArg04 + 20:word32] == 0x00000000 l00008A36
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):0000FFFF -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A28:
	word32 a7_84 = a7_109 - 0x00000004
	Mem86[a7_84:word32] = Mem0[dwArg04 + 20:word32]
	Mem90[a7_84 - 0x00000004:word32] = Mem86[dwArg04 + 16:word32]
	word32 a1_92
	fn00007E4C(a4, dwArg00, dwArg04, out a1_92)
	a7_109 = a7_84 + 0x00000004
// DataOut: a2 a3 a4 a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):0000FFFF -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A36:
	Mem33[dwArg04 + 24:word32] = 0x00000000
	Mem37[a7_109 - 0x00000004:word32] = Mem33[dwArg04 + 28:word32]
	word32 d2_40
	word32 d5_41
	word32 a0_42
	word32 a1_43
	word32 a2_44
	word32 a4_45
	word32 a5_46
	word32 d0_47 = fn0000936C(a2, a4, dwArg00, out d2_40, out d5_41, out a0_42, out a1_43, out a2_44, out a4_45, out a5_46)
	word32 d0_50 = -1
	branch d7_110 - -1 == 0x00000000 l00008A52
// DataOut: a0 a1 a2 a4 a5 a7 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> d2:<invalid> d5:<invalid> d6:<invalid> a2:<invalid> d3:<invalid> a6:<invalid> a5:<invalid> a4:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

l00008A4C:
	branch d0_47 != 0x00000000 l00008A52
// DataOut: a0 a1 a2 a4 a5 a7 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

l00008A50:
	d0_50 = 0
// DataOut: a0 a1 a2 a4 a5 a7 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:-1 d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

l00008A52:
	return d0_50
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

fn000089F8_exit:
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3



word32 fn00008A58(word32 a2, word32 a3, word32 a4, word32 dwArg04, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a3 a4
// LiveOut: a1 a2 a4 a5 a6 d0 d1 d2 d4 d5
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7 d6 d7
// Stack args: Stack +0004(32)
fn00008A58_entry:
	*d5Out = d5
// DataOut: a2 a3 a4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00008A58:
	word32 a7_34 = fp - 0x0000000C
	word32 a3_15 = a4 + 7668
// DataOut: a2 a3 a4 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00008A64:
	branch a3_15 == 0x00000000 l00008A9C
// DataOut: a2 a3 a4 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A9C:
	Mem88[a7_34 - 0x00000004:word32] = dwArg04
	word32 d1_91
	word32 d2_92
	word32 d4_93
	word32 a0_94
	word32 a1_95
	word32 a2_96
	word32 a3_97
	word32 a4_98
	word32 a5_99
	word32 a6_100
	return fn00007698(dwArg04, a2, a4, dwArg00, out d1_91, out d2_92, out d4_93, out a0_94, out a1_95, out a2_96, out a3_97, out a4_98, out a5_99, out a6_100)
// DataOut: a1 a2 a4 a5 a6 d0 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

fn00008A58_exit:
// DataOut: a1 a2 a4 a5 a6 d0 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d6:<invalid> d5:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> a6:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3

l00008A68:
	branch __btst(Mem0[a3_15 + 27:byte], 0x0002) l00008A98
// DataOut: a2 a3 a4 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A70:
	branch __btst(Mem0[a3_15 + 27:byte], 0x0001) l00008A98
// DataOut: a2 a3 a4 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A78:
	word32 d0_58 = Mem0[a3_15 + 4:word32] - Mem0[a3_15 + 16:word32]
	branch d0_58 == 0x00000000 l00008A98
// DataOut: a2 a3 a4 a7 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A86:
	word32 a7_65 = a7_34 - 0x00000004
	Mem67[a7_65:word32] = d0_58
	Mem71[a7_65 - 0x00000004:word32] = Mem67[a3_15 + 16:word32]
	Mem75[a7_65 - 0x00000008:word32] = Mem71[a3_15 + 28:word32]
	word32 d2_79
	word32 d4_80
	word32 a1_81
	word32 a5_83
	fn000060B0(a3_15, a4, dwArg00, dwArg04, dwArg08, out d2_79, out d4_80, out a1_81, out a4, out a5_83)
	a7_34 = a7_65 + 0x00000004
// DataOut: a2 a3 a4 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)

l00008A98:
	a3_15 = Mem0[a3_15:word32]
// DataOut: a2 a3 a4 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d6:<invalid> d1:<invalid> a0:<invalid> a2:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a4:<invalid> a5:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d6 -8(fp):d7 -4(fp):a3
// LocalsOut: Local -0004(32)



word32 fn00008AAC(word32 d0, word32 a2, word32 a4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 d0
// LiveOut: a1 a4 a5 d4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a6 a7 d0 d2 d3 d5 d6 d7
fn00008AAC_entry:
	*a4Out = a4
	*a1Out = a1
	*a5Out = a5
// DataOut: a1 a2 a4 a5 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00008AAC:
	branch Mem0[a4 + 8264:word32] == 0x00000000 l00008AC6
// DataOut: a1 a2 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp

l00008AC2:
	word32 d2_85
	word32 d5_87
	word32 d6_88
	word32 a0_89
	word32 a1_90
	word32 a2_91
	word32 a3_92
	word32 a5_94
	d0 = fn0000943C(a2, a4, out d2_85, out d4, out d5_87, out d6_88, out a0_89, out a1_90, out a2_91, out a3_92, out a4, out a5_94)
// DataOut: a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C d7:<invalid> a3:<invalid> d6:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008AC6:
	Mem50[a4 + 8240:word32] = 0x00000000
	execPrivate3()
	branch d0 - -1 != 0x00000000 l00008AEE
// DataOut: a1 a4 a5 a7 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008AE0:
	Forbid()
	Mem80[a4 + 8240:word32] = -1
	Mem83[a4 + 18336:word32] = 5
// DataOut: a1 a4 a5 a7 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d5:<invalid> d0:-1 a0:<invalid> a1:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008AEE:
	return d4
// DataOut: a1 a4 a5 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

fn00008AAC_exit:
// DataOut: a1 a4 a5 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6



word32 fn00008AF8(word32 a2, word32 a4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4
// LiveOut: a2 a4 a5 d0
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a6 a7 d2 d3 d4 d5 d6 d7
// Stack args: Stack +0008(32) Stack +000C(32)
fn00008AF8_entry:
	*a4Out = a4
	*a2Out = a2
	*a5Out = a5
// DataOut: a2 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l00008AF8:
	word32 d6_114 = dwArg08
	word32 d5_113 = dwArg0C
	branch Mem0[a4 + 8264:word32] == 0x00000000 l00008B12
// DataOut: a2 a4 a5 a7 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp

l00008B0E:
	word32 d2_111
	word32 d4_112
	word32 a0_115
	word32 a1_116
	word32 a2_117
	word32 a3_118
	word32 a5_120
	fn0000943C(a2, a4, out d2_111, out d4_112, out d5_113, out d6_114, out a0_115, out a1_116, out a2_117, out a3_118, out a4, out a5_120)
// DataOut: a2 a4 a5 a7 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C d7:<invalid> d6:<invalid> d5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B12:
	Mem48[a4 + 8240:word32] = 0x00000000
	execPrivate6()
	word32 d0_50 = d5_113 - 0x00000001
	branch d0_50 != 0xFFFFFFFF l00008B3E
// DataOut: a2 a4 a5 a7 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B30:
	Forbid()
	Mem106[a4 + 8240:word32] = -1
	Mem109[a4 + 18336:word32] = 22
// DataOut: a2 a4 a5 a7 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:-1 d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B3E:
	word32 d0_101
	branch d5_113 == 0x00000000 l00008B4E
// DataOut: a2 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B4E:
	d0_101 = d6_114
// DataOut: a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B44:
	word32 d0_89 = d5_113 - 0x00000001
	branch d0_89 == 0x00000000 l00008B52
// DataOut: a2 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B52:
	d0_101 = d0_50 + d6_114
// DataOut: a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B48:
	d0_101 = d0_89 - 0x00000001
	branch d0_89 == 0x00000001 l00008B58
// DataOut: a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B58:
	execPrivate6()
// DataOut: a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B4C:
// DataOut: a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

l00008B66:
	return d0_101
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6

fn00008AF8_exit:
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d4:<invalid> a0:<invalid> a1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d4 -16(fp):d5 -12(fp):d6 -8(fp):d7 -4(fp):a6



word32 fn00008B74(word32 d0, word32 a2, word32 a4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 d0
// LiveOut: a4 a5
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a6 a7 d0 d2 d3 d5 d6 d7
fn00008B74_entry:
	*a5Out = a5
// DataOut: a2 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00008B74:
	branch Mem0[a4 + 8264:word32] == 0x00000000 l00008B8E
// DataOut: a2 a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:fp

l00008B8A:
	word32 d2_83
	word32 d4_84
	word32 d5_85
	word32 d6_86
	word32 a0_87
	word32 a1_88
	word32 a2_89
	word32 a3_90
	word32 a5_92
	d0 = fn0000943C(a2, a4, out d2_83, out d4_84, out d5_85, out d6_86, out a0_87, out a1_88, out a2_89, out a3_90, out a4, out a5_92)
// DataOut: a4 a5 a7 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x0000001C d7:<invalid> a3:<invalid> d6:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008B8E:
	Mem50[a4 + 8240:word32] = 0x00000000
	execPrivate2()
	branch d0 - -1 != 0x00000000 l00008BB6
// DataOut: a4 a5 a7 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008BA8:
	Forbid()
	Mem78[a4 + 8240:word32] = -1
	Mem81[a4 + 18336:word32] = 5
// DataOut: a4 a5 a7 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d5:<invalid> d0:-1 a0:<invalid> a1:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008BB6:
	return a4
// DataOut: a4 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

fn00008B74_exit:
// DataOut: a4 a5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d6:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> a6:<invalid> d5:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -28(fp):d2 -24(fp):d3 -20(fp):d5 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6



word32 fn00008BC0(word32 d0, word32 a2, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & d5Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d0
// LiveOut: a0 a1 a2 a4 a5 d0 d5
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a6 a7 d2 d6 d7
fn00008BC0_entry:
	*a4Out = a4
	*d5Out = d5
	*a0Out = a0
	*a1Out = a1
	*a2Out = a2
	*a5Out = a5
// DataOut: a0 a1 a2 a4 a5 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00008BC0:
	branch Mem0[a4 + 8264:word32] == 0x00000000 l00008BD6
// DataOut: a0 a1 a2 a4 a5 a7 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:fp

l00008BD2:
	word32 d2_79
	word32 d4_80
	word32 d5_81
	word32 d6_82
	word32 a0_83
	word32 a1_84
	word32 a2_85
	word32 a3_86
	d0 = fn0000943C(a2, a4, out d2_79, out d4_80, out d5_81, out d6_82, out a0_83, out a1_84, out a2_85, out a3_86, out a4, out a5)
// DataOut: a0 a1 a2 a4 a5 a7 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> d7:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008BD6:
	word32 d0_52
	Mem43[a4 + 8240:word32] = 0x00000000
	Supervisor(a5)
	branch d0 != 0x00000000 l00008BFE
// DataOut: a0 a1 a2 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008BFE:
	d0_52 = d0
// DataOut: a0 a1 a2 a4 a5 a7 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008BEC:
	Forbid()
	Mem71[a4 + 8240:word32] = d0
	Mem74[a4 + 18336:word32] = 2
	d0_52 = -1
// DataOut: a0 a1 a2 a4 a5 a7 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008C00:
	return d0_52
// DataOut: a0 a1 a2 a4 a5 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

fn00008BC0_exit:
// DataOut: a0 a1 a2 a4 a5 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6



word32 fn00008C08(word32 d2, word32 a4, word32 a5, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 a5 d2
// LiveOut: a1 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d5 d6 d7
// Preserved: a2 a3 a5 a6 a7 d2 d6 d7
// Stack args: Stack +0008(32) Stack +000C(32)
fn00008C08_entry:
// DataOut: a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -014C(32) Stack +0008(32) Stack +000C(32)

l00008C08:
	Mem31[a4 + 8240:word32] = 0x00000000
	Mem34[a4 + 18344:word32] = dwArg0C
	branch Mem34[a4 + 7804:word32] != 0x00000000 l00008C38
// DataOut: a2 a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Local -014C(32)

l00008C2A:
	Mem414[a4 + 7804:word32] = fn0000833C(d2, a4, 0x0000006C)
// DataOut: a2 a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000144 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -014C(32)

l00008C38:
	branch Mem34[a4 + 7808:word32] != 0x00000000 l00008C4C
// DataOut: a2 a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000144 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -328(fp):0000006C -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32) Local -014C(32)

l00008C3E:
	Mem407[a4 + 7808:word32] = fn0000833C(d2, a4, 0x0000006C)
// DataOut: a2 a4 a5 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000144 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -328(fp):0000006C -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: fp(32) Local -0004(32)

l00008C4C:
	word32 a2_67
	word32 a3_68
	word32 a5_69
	word32 d7_70 = fn00007910(fp - 0x00000004, dwLoc015C, dwArg08, Mem34[a4 + 7804:word32], fp + 0xFFFFFEF4, Mem34[a4 + 7808:word32], fp + 0xFFFFFED4, out a2_67, out a3_68, out a5_69)
	Mem72[fp - 0x0000015C:word32] = a5_69 + -264
	Mem76[fp - 0x00000160:word32] = Mem72[a4 + 7804:word32]
	word32 a1_79
	word32 d0_80 = fn00007B74(dwArg00, dwArg04, out a1_79)
	byte v29_82 = Mem76[a5_69 + -296:byte]
	word32 a7_154 = fp - 0x00000144
	word32 d0_104 = DPB(d0_80, v29_82, 0)
	branch v29_82 == 0x00 l00008C96
// DataOut: a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000144 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -328(fp):0000006C -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008C7A:
	Mem384[fp - 0x00000148:word32] = 0x00008DE6
	Mem388[fp - 0x0000014C:word32] = Mem384[a4 + 7808:word32]
	word32 a1_390
	fn00007B74(dwArg00, dwArg04, out a1_390)
	Mem393[fp - 0x00000150:word32] = a5_69 + -296
	Mem397[fp - 0x00000154:word32] = Mem393[a4 + 7808:word32]
	word32 a1_399
	d0_104 = fn00007B74(dwArg00, dwArg04, out a1_399)
	a7_154 = fp - 0x00000144
// DataOut: a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):fp + 0xFFFFFEF4 -332(fp):<invalid> -328(fp):fp + 0xFFFFFED4 -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008C96:
	word32 a0_102 = Mem76[a4 + 7808:word32]
	word32 a1_101 = a2_67
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008C9C:
	word32 d0_123
	byte v36_105 = Mem76[a0_102:byte]
	a0_102 = a0_102 + 0x00000001
	d0_104 = DPB(d0_104, v36_105, 0)
	a1_101 = a1_101 + 0x00000001
	*a1Out = a1_101
	branch v36_105 - Mem76[a1_101:byte] != 0x00 l00008CAE
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008CA2:
	branch v36_105 != 0x00 l00008C9C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): Z
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008CA6:
	branch v36_105 != 0x00 l00008CAE
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008CA8:
	branch Mem76[a4 + 8268:word32] != 0x00000000 l00008CD8
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008CD8:
	word32 a7_372 = a7_154 - 0x00000004
	Mem374[a7_372:word32] = Mem76[a4 + 7804:word32]
	d0_104 = fn000087A0(d2, a4, dwArg00)
	Mem378[a4 + 7804:word32] = 0x00000000
	Mem380[a4 + 18348:word32] = Mem378[a4 + 8268:word32]
	a7_154 = a7_372 + 0x0004
// DataOut: a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008CAE:
	MakeLibrary(a0_102, a1_101, a2_67, d0_104, Mem76[a4 + 7804:word32])
	Mem347[a4 + 18348:word32] = d0_104
	d2 = -2
	branch d0_104 != 0x00000000 l00008CEC
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l00008CEC:
	word32 a7_156 = a7_154 - 0x00000004
	Mem158[a7_156:word32] = Mem76[a4 + 7808:word32]
	word32 a0_160
	word32 d0_161 = fn00007B30(d0_104, a4, dwArg00, out a0_160)
	Mem163[a7_156 - 0x00000004:word32] = 0x00000104
	Mem165[a4 + 7808:word32] = d0_161
	word32 a0_167
	word32 a1_168
	word32 d0_169 = fn0000843C(d2, a4, dwArg00, out a0_167, out a1_168)
	Mem173[a5_69 + -8:word32] = d0_169
	word32 d6_171 = 0
// DataOut: a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D08:
	word32 a0_185 = a2_67
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D0A:
	a0_185 = a0_416 + 0x00000001
	word32 a0_416 = a0_185
	branch Mem173[a0_416:byte] != 0x00 l00008D0A
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D0E:
	branch d6_171 - ((a0_185 - 0x00000001) - a2_67) >= 0x00000000 l00008D2A
// DataOut: a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D16:
	byte v51_327 = Mem173[a2_67 + d6_171:byte]
	d0_169 = DPB(d0_169, v51_327, 0)
	branch v51_327 == 0x3F l00008D2A
// DataOut: a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D20:
	branch v51_327 == 0x23 l00008D2A
// DataOut: a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:63 d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D2A:
	word32 a0_203 = a2_67
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D2C:
	a0_203 = a0_417 + 0x00000001
	word32 a0_417 = a0_203
	branch Mem173[a0_417:byte] != 0x00 l00008D2C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D30:
	word32 a0_212 = a0_203 - 0x00000001 - a2_67
	branch d6_171 - a0_212 != 0x00000000 l00008D86
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D38:
	branch Mem173[a4 + 18316:word32] != 0x00000000 l00008D86
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008D86:
	word32 d2_218 = Mem173[a5_69 + -8:word32]
	word32 a6_219 = Mem173[a4 + 18340:word32]
	InitResident(a1_168, Mem173[a4 + 18348:word32])
	branch d0_169 != 0x00000000 l00008DB6
// DataOut: a0 a1 a2 a4 a5 a6 a7 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008DB6:
	Mem242[a7_156:word32] = Mem173[a5_69 + -8:word32]
	word32 a2_244
	word32 a5_245
	word32 d0_246 = fn00008E70(a0_212, a1_168, a2_67, a4, a5_69, a6_219, dwArg00, out a2_244, out a5_245)
	word32 a0_248 = Mem242[a5_245 + -8:word32]
	word32 a1_249 = a3_68
	word32 d0_250 = 64
// DataOut: a0 a1 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00008DC8:
	Mem258[a1_249:word32] = Mem242[a0_248:word32]
	a0_248 = a0_248 + 0x00000004
	a1_249 = a1_249 + 0x00000004
	d0_250 = d0_250 - 0x00000001
	branch d0_250 != 0xFFFFFFFF l00008DC8
// DataOut: a0 a1 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00008DCE:
	Mem263[a7_156 - 0x00000004:word32] = 0x00000104
	Mem267[a7_156 - 0x00000008:word32] = Mem263[a5_245 + -8:word32]
	word32 a1_269
	fn00007E4C(a4, dwArg00, dwArg04, out a1_269)
	d0_123 = d0_246
// DataOut: a1 a4 a5 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5

l00008D9A:
	Mem226[a4 + 18336:word32] = 20
	Mem228[a4 + 8240:word32] = 0x000000CC
	Mem230[a7_156:word32] = 0x00000104
	Mem233[a7_156 - 0x00000004:word32] = d2_218
	word32 a1_235
	fn00007E4C(a4, dwArg00, dwArg04, out a1_235)
	d0_123 = -1
// DataOut: a1 a4 a5 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5

l00008D3E:
	Mem280[a7_156:word32] = Mem173[a4 + 18344:word32]
	Mem283[a7_156 - 0x00000004:word32] = a2_67
	Mem287[a7_156 - 0x00000008:word32] = Mem283[a5_69 + -8:word32]
	word32 d0_289 = fn00008F10(d0_169, d7_70, a0_212, a1_168, a4, dwArg00, dwArg04)
	word32 a0_291 = Mem287[a5_69 + -8:word32]
	word32 a1_292 = a3_68
	word32 d0_293 = 64
// DataOut: a0 a1 a2 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00008D56:
	Mem301[a1_292:word32] = Mem287[a0_291:word32]
	a0_291 = a0_291 + 0x00000004
	a1_292 = a1_292 + 0x00000004
	d0_293 = d0_293 - 0x00000001
	branch d0_293 != 0xFFFFFFFF l00008D56
// DataOut: a0 a1 a2 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l00008D5C:
	Mem306[a7_156 - 0x0000000C:word32] = 0x00000104
	Mem310[a7_156 - 0x00000010:word32] = Mem306[a5_69 + -8:word32]
	word32 a1_312
	word32 a0_313 = fn00007E4C(a4, dwArg00, dwArg04, out a1_312)
	branch Mem310[a4 + 8268:word32] - Mem310[a4 + 18348:word32] == 0x00000000 l00008D82
// DataOut: a0 a1 a2 a4 a5 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5

l00008D78:
	MakeFunctions(a0_313, a1_312, a2_67)
// DataOut: a1 a4 a5 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5

l00008D82:
	d0_123 = d0_289
// DataOut: a1 a4 a5 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5

l00008D26:
	d6_171 = d6_171 + 0x00000001
// DataOut: a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:35 d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(0)

l00008CC4:
	Mem354[a4 + 18336:word32] = 2
	Mem356[a4 + 8240:word32] = 0x000000CD
	d0_123 = -1
// DataOut: a1 a4 a5 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -4(fp):a5

l00008DDC:
	return d0_123
// DataOut: a1 a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5

fn00008C08_exit:
// DataOut: a1 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> -352(fp):<invalid> -348(fp):fp + 0xFFFFFEF4 -344(fp):<invalid> -340(fp):<invalid> -336(fp):<invalid> -332(fp):<invalid> -328(fp):<invalid> -324(fp):d2 -320(fp):d6 -316(fp):d7 -312(fp):a2 -308(fp):a3 -304(fp):a6 -12(fp):<invalid> -4(fp):a5



word32 fn00008DE8(word32 d2, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 a6, word32 dwArg04, ptr32 & d6Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a4 a5 a6 d2
// LiveOut: a1 a5 d0 d6
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d5 d6 d7
// Preserved: a2 a3 a6 a7 d2 d7
// Stack args: Stack +0004(32)
fn00008DE8_entry:
	*d6Out = d6
	*a5Out = a5
	*a1Out = a1
// DataOut: a0 a1 a2 a4 a5 a6 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00008DE8:
	word32 d0_119
	Mem19[a4 + 8240:word32] = 0x00000000
	branch Mem19[a4 + 7808:word32] != 0x00000000 l00008DFE
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l00008DFE:
	word32 d0_58 = Mem19[a4 + 7804:word32]
	branch d0_58 == 0x00000000 l00008E2A
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 d0 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l00008E2A:
	Mem138[a4 + 18348:word32] = Mem19[a4 + 8268:word32]
// DataOut: a3 a4 a5 a6 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> d0:<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l00008E04:
	a6 = Mem19[a4 + 18340:word32]
	MakeLibrary(a0, a1, a2, d0_58, d0_58)
	Mem125[a4 + 18348:word32] = d0_58
	d2 = -2
	branch d0_58 != 0x00000000 l00008E30
// DataOut: a1 a3 a4 a5 a6 a7 d2 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> d0:<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32) Local -0004(32)

l00008E30:
	word32 a0_70
	word32 a1_71
	word32 d0_72 = fn0000843C(d2, a4, 0x00000104, out a0_70, out a1_71)
	word32 a0_74 = dwArg04
	word32 a1_75 = d0_72
	word32 d0_76 = 64
// DataOut: a0 a1 a2 a4 a5 a6 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> d0:<invalid> d1:<invalid> d2:-2 a6:<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008E40:
	Mem84[a1_75:word32] = Mem19[a0_74:word32]
	a0_74 = a0_74 + 0x00000004
	a1_75 = a1_75 + 0x00000004
	d0_76 = d0_76 - 0x00000001
	branch d0_76 != 0xFFFFFFFF l00008E40
// DataOut: a0 a1 a2 a4 a5 a6 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a3:<invalid> d0:<invalid> d1:<invalid> d2:-2 a6:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> -24(fp):00000104 -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008E46:
	word32 a2_91
	word32 a5_92
	word32 d0_93 = fn00008E70(a0_74, a1_75, d0_72, a4, a5, a6, d0_72, out a2_91, out a5_92)
	word32 a0_100 = a2_91
	word32 a1_106 = dwArg04
	word32 d0_101 = 64
// DataOut: a0 a1 a2 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a3:<invalid> d0:<invalid> d1:<invalid> d2:-2 a6:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> -24(fp):00000104 -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008E54:
	Mem105[a1_106:word32] = Mem84[a0_100:word32]
	a0_100 = a0_100 + 0x00000004
	a1_106 = a1_106 + 0x00000004
	d0_101 = d0_101 - 0x00000001
	branch d0_101 != 0xFFFFFFFF l00008E54
// DataOut: a0 a1 a2 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> d6:<invalid> d5:<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008E5A:
	Mem110[fp - 0x0000001C:word32] = 0x00000104
	Mem113[fp - 0x00000020:word32] = a2_91
	word32 a1_116
	fn00007E4C(a4, dwArg00, dwArg04, out a1_116)
	d0_119 = d0_93
// DataOut: a1 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> d6:<invalid> d5:<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6

l00008E18:
	Mem132[a4 + 18336:word32] = 2
	Mem134[a4 + 8240:word32] = 0x000000CD
	d0_119 = -1
// DataOut: a1 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> d0:<invalid> d1:<invalid> d2:-2 a6:<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6

l00008DFA:
	d0_119 = -1
// DataOut: a1 a4 a5 a7 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6

l00008E6A:
	return d0_119
// DataOut: a1 a4 a5 d0 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> d6:<invalid> d5:<invalid> -32(fp):<invalid> -28(fp):00000104 -24(fp):<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6

fn00008DE8_exit:
// DataOut: a1 a5 d0 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d0:<invalid> d2:<invalid> d7:<invalid> a2:<invalid> a6:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> a5:<invalid> d6:<invalid> d5:<invalid> -32(fp):<invalid> -28(fp):00000104 -24(fp):<invalid> -20(fp):d2 -16(fp):d7 -12(fp):a2 -8(fp):a3 -4(fp):a6



word32 fn00008E70(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 a6, word32 dwArg04, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a4 a5 a6
// LiveOut: a2 a5 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d5 d6 d7
// Preserved: a3 a6 a7 d2 d6 d7
// Stack args: Stack +0004(32)
fn00008E70_entry:
	*a2Out = a2
	*a5Out = a5
// DataOut: a0 a1 a2 a4 a5 a6 d4
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00008E70:
	word32 a7_128 = fp - 0x00000014
	word32 d7_101 = 0
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00008E7A:
	word32 d0_108 = 232
	branch d7_101 - 232 == 0x00000000 l00008EE6
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008E82:
	Alert(d7_101)
	branch true l00008E9C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:232 d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008E9C:
	branch Mem0[a4 + 18344:word32] != 0x00000000 l00008EAA
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:232 d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008EA2:
	d0_108 = Mem0[dwArg04 + 4:word32]
	branch false l00008E7A
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:232 d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008EAA:
	branch Mem0[a4 + 18316:word32] == 0x00000000 l00008ECE
// DataOut: a1 a2 a3 a4 a5 a7 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008ECE:
	word32 a7_136 = a7_128 - 0x00000004
	Mem138[a7_136:word32] = Mem0[a4 + 7808:word32]
	Mem141[a7_136 - 0x00000004:word32] = dwArg04 + 8
	a7_128 = a7_136 + 0x00000004
	branch fn00009488(d7_101, a5, dwArg00, dwArg04, out a0, out a1) != 0x00000000 l00008EE6
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008EE4:
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008EB0:
	word32 a7_114 = a7_128 - 0x00000004
	Mem116[a7_114:word32] = dwArg04 + 8
	word32 d0_120 = fn00007B30(d0_108, a4, dwArg00, out a0)
	Mem122[a7_114:word32] = Mem116[a4 + 7808:word32]
	Mem125[a7_114 - 0x00000004:word32] = d0_120
	a7_128 = a7_114 + 0x00000004
	branch fn00007C24(d7_101, dwArg00, dwArg04) != 0x00000000 l00008EE6
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008EE6:
	branch Mem0[a4 + 8268:word32] - Mem0[a4 + 18348:word32] == 0x00000000 l00008EFC
// DataOut: a0 a1 a2 a4 a5 a7 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008EF2:
	MakeFunctions(a0, a1, a2)
// DataOut: a2 a4 a5 a7 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008EFC:
	word32 d0_71
	branch d7_101 - 232 != 0x00000000 l00008F08
// DataOut: a2 a4 a5 a7 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008F08:
	d0_71 = 0
// DataOut: a2 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:232 d1:<invalid> a6:<invalid> d2:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008F04:
	d0_71 = 1
// DataOut: a2 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:232 d1:<invalid> a6:<invalid> d2:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008F0A:
	return d0_71
// DataOut: a2 a4 a5 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

fn00008E70_exit:
// DataOut: a2 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a6:<invalid> d2:<invalid> d6:<invalid> a0:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

l00008ECC:
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)

l00008E94:
	Forbid()
	d7_101 = 232
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a3:<invalid> d7:<invalid> d0:232 d1:<invalid> d2:<invalid> a6:<invalid> a0:<invalid> d6:<invalid> a5:<invalid> a1:<invalid> a2:<invalid> d5:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: Local -0004(32)



word32 fn00008F10(word32 d0, word32 d7, word32 a0, word32 a1, word32 a4, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a4 d0 d7
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a5 a6 a7 d2 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00008F10_entry:
// DataOut: a0 a1 a4 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32) Stack +0008(32)

l00008F10:
	word32 d0_120
	Mem29[a4 + 8240:word32] = 0x00000000
	MakeLibrary(a0, a1, dwArg08, d0, dwArg08)
	branch d0 != 0x00000000 l00008F48
// DataOut: a2 a3 a4 d2 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0030(32)

l00008F48:
	word32 d7_127
	word32 a0_82
	word32 a1_83
	word32 d0_84 = fn00008504(-2, d7, a4, 0x00000104, out a0_82, out a1_83)
	InitResident(a1_83, d0)
	branch d0_84 != 0x00000000 l00008F78
// DataOut: a0 a1 a2 a3 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000028 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:d0 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -4(fp):a5
// LocalsOut: fp(32) Local -0010(32)

l00008F78:
	MakeFunctions(a0_82, a1_83, dwArg08)
	d7_127 = 0
// DataOut: a3 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000028 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:d0 d0:<invalid> a0:<invalid> a1:<invalid> -44(fp):00000104 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0010(32)

l00008F66:
	Mem124[a4 + 18336:word32] = 2
	Mem126[a4 + 8240:word32] = 0x000000CD
	d7_127 = -1
// DataOut: a3 a4 d2 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000028 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:d0 d0:<invalid> a0:<invalid> a1:<invalid> -44(fp):00000104 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0010(32)

l00008F80:
	word32 a0_102 = d0_84
	word32 a1_101 = dwArg04
	word32 d0_103 = 64
// DataOut: a0 a1 a4 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000028 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:d0 d0:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> -44(fp):00000104 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0010(32)

l00008F86:
	Mem107[a1_101:word32] = Mem29[a0_102:word32]
	a0_102 = a0_102 + 0x00000004
	a1_101 = a1_101 + 0x00000004
	d0_103 = d0_103 - 0x00000001
	branch d0_103 != 0xFFFFFFFF l00008F86
// DataOut: a0 a1 a4 d0 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000028 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:d0 d0:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> -44(fp):00000104 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32) Local -0010(32)

l00008F8C:
	word32 a1_118
	fn00007E4C(a4, d0_84, 0x00000104, out a1_118)
	d0_120 = d7_127
// DataOut: a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000028 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:d0 d0:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> -44(fp):00000104 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -16(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00008F36:
	Mem72[a4 + 18336:word32] = 2
	Mem74[a4 + 8240:word32] = 0x000000CD
	d0_120 = -1
// DataOut: a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000028 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:<invalid> d2:-2 a6:<invalid> d6:d0 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -4(fp):a5
// LocalsOut: fp(32)

l00008F9A:
	return d0_120
// DataOut: a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d6:d0 d0:<invalid> d7:<invalid> a0:<invalid> a1:<invalid> -48(fp):<invalid> -44(fp):00000104 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -16(fp):<invalid> -4(fp):a5

fn00008F10_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 a3:a3 a2:a2 d1:<invalid> d2:d2 a6:a6 d6:d6 d0:<invalid> d7:d7 a0:<invalid> a1:<invalid> -48(fp):<invalid> -44(fp):00000104 -40(fp):d2 -36(fp):d6 -32(fp):d7 -28(fp):a2 -24(fp):a3 -20(fp):a6 -16(fp):<invalid> -4(fp):a5



word32 fn00008FB8(word32 d0, word32 a0, word32 a1, word32 a2, word32 a4, word32 dwArg04, ptr32 & d5Out, ptr32 & d6Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a4 d0
// LiveOut: a1 a2 a4 d0 d5 d6
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a5 a6 a7 d2 d7
// Stack args: Stack +0004(32)
fn00008FB8_entry:
	*a4Out = a4
	*d5Out = d5
	*d6Out = d6
	*a1Out = a1
	*a2Out = a2
// DataOut: a0 a1 a2 a4 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00008FB8:
	word32 a5_103 = fp - 0x00000004
	word32 a3_101 = dwArg04
	branch Mem0[a4 + 8264:word32] == 0x00000000 l00008FCE
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp

l00008FCA:
	word32 d2_94
	word32 d4_95
	word32 d5_96
	word32 d6_97
	d0 = fn0000943C(a2, a4, out d2_94, out d4_95, out d5_96, out d6_97, out a0, out a1, out a2, out a3_101, out a4, out a5_103)
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00008FCE:
	word32 d0_58
	Mem44[a4 + 8240:word32] = 0x00000000
	MakeLibrary(a0, a1, a2, d0, a3_101)
	branch d0 == 0x00000000 l00008FEE
// DataOut: a0 a1 a2 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00008FEE:
	Supervisor(a5_103)
	branch d0 != 0x00000000 l00009012
// DataOut: a1 a2 a4 a5 a7 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:-2 a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00009012:
	d0_58 = d0
// DataOut: a1 a2 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:0x000003EE a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00009000:
	Forbid()
	Mem86[a4 + 8240:word32] = d0
	Mem89[a4 + 18336:word32] = 2
	d0_58 = -1
// DataOut: a1 a2 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:0x000003EE a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00008FE4:
	MakeFunctions(a0, a1, a2)
	d0_58 = -1
// DataOut: a1 a2 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:-2 a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00009014:
	return d0_58
// DataOut: a1 a2 a4 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

fn00008FB8_exit:
// DataOut: a1 a2 a4 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5



word32 fn0000901C(word32 d0, word32 a0, word32 a1, word32 a2, word32 a4, word32 dwArg04, ptr32 & d5Out, ptr32 & d6Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a4 d0
// LiveOut: a1 a2 a4 d0 d5 d6
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a5 a6 a7 d2 d7
// Stack args: Stack +0004(32)
fn0000901C_entry:
	*a4Out = a4
	*d5Out = d5
	*d6Out = d6
	*a1Out = a1
	*a2Out = a2
// DataOut: a0 a1 a2 a4 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000901C:
	word32 a5_100 = fp - 0x00000004
	word32 a3_20 = dwArg04
	branch Mem0[a4 + 8264:word32] == 0x00000000 l00009032
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000902E:
	word32 d2_91
	word32 d4_92
	word32 d5_93
	word32 d6_94
	d0 = fn0000943C(a2, a4, out d2_91, out d4_92, out d5_93, out d6_94, out a0, out a1, out a2, out a3_20, out a4, out a5_100)
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000018 a5:fp - 0x00000004 a3:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00009032:
	Mem44[a4 + 8240:word32] = 0x00000000
	MakeLibrary(a0, a1, a2, d0, a3_20)
	branch d0 == 0x00000000 l00009054
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00009048:
	MakeFunctions(a0, a1, a2)
	InitCode(d0, a3_20)
// DataOut: a1 a2 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:-2 a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00009054:
	word32 d0_62
	Supervisor(a5_100)
	branch d0 != 0x00000000 l00009078
// DataOut: a1 a2 a4 a5 a7 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:-2 a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00009078:
	d0_62 = d0
// DataOut: a1 a2 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:0x000003EE a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l00009066:
	Forbid()
	Mem80[a4 + 8240:word32] = d0
	Mem83[a4 + 18336:word32] = 2
	d0_62 = -1
// DataOut: a1 a2 a4 a5 a7 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:0x000003EE a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

l0000907A:
	return d0_62
// DataOut: a1 a2 a4 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:0x000003EE a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5

fn0000901C_exit:
// DataOut: a1 a2 a4 d0 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -24(fp):d2 -20(fp):d7 -16(fp):a3 -12(fp):a6 -4(fp):a5



word32 fn00009084(word32 a2, word32 a4, word32 dwArg04, ptr32 & d2Out, ptr32 & d5Out, ptr32 & d6Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4
// LiveOut: a0 a1 a2 a3 a4 a5 d0 d2 d5 d6
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a6 a7 d7
fn00009084_entry:
	*a4Out = a4
	*d2Out = d2
	*d5Out = d5
	*d6Out = d6
	*a0Out = a0
	*a1Out = a1
	*a2Out = a2
	*a3Out = a3
	*a5Out = a5
// DataOut: a0 a1 a2 a3 a4 a5 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00009084:
	branch Mem0[a4 + 8264:word32] == 0x00000000 l00009096
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp

l00009092:
	word32 d2_52
	word32 d4_53
	word32 d5_54
	word32 d6_55
	word32 a0_56
	word32 a1_57
	word32 a2_58
	word32 a3_59
	word32 a4_60
	word32 a5_61
	fn0000943C(a2, a4, out d2_52, out d4_53, out d5_54, out d6_55, out a0_56, out a1_57, out a2_58, out a3_59, out a4_60, out a5_61)
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> -8(fp):d7 -4(fp):a6

l00009096:
	execPrivate1()
	return 0
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -8(fp):d7 -4(fp):a6

fn00009084_exit:
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> d0:0 a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -8(fp):d7 -4(fp):a6



word32 fn000090A8(word32 d7, word32 a2, word32 a4, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4 a5 d7
// LiveOut: a2 a4
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a5 a6 a7 d7
fn000090A8_entry:
// DataOut: a2 a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000090A8:
	word32 d0_20 = OpenLibrary(0x00009142, 0)
	word32 a5_134 = fp - 0x00000004
	word32 a7_13 = fp - 0x00000068
	word32 a3_132 = d0_20
	branch d0_20 != 0x00000000 l000090CE
// DataOut: a2 a3 a4 a5 a7 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l000090C4:
	word32 d1_126
	word32 d2_127
	word32 d4_128
	word32 a0_129
	word32 a1_130
	word32 a6_135
	fn00007698(d7, a2, a4, 0x00000014, out d1_126, out d2_127, out d4_128, out a0_129, out a1_130, out a2, out a3_132, out a4, out a5_134, out a6_135)
	a7_13 = fp - 0x00000068
// DataOut: a2 a3 a4 a5 a7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000068 a5:fp - 0x00000004 a1:00009142 d0:<invalid> a6:<invalid> a3:<invalid> -104(fp):d7 -100(fp):a3 -96(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l000090CE:
	word32 a0_119 = Mem0[a4 + 8288:word32]
	word32 d7_44 = (int32) Mem0[a0_119 + -1:byte]
	word32 d0_45 = d7_44
	word32 a1_122 = a5_134 + -80
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a1:<invalid> d0:<invalid> a6:<invalid> a3:<invalid> d7:<invalid> d6:<invalid> d5:<invalid> a0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -108(fp):00000014 -104(fp):d7 -100(fp):a3 -96(fp):a6 -4(fp):a5
// LocalsOut: Local -0004(32)

l000090E2:
	d0_45 = d0_45 - 0x00000001
	branch d0_45 >=u 0x00000000 l000090E0
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a1:<invalid> d0:<invalid> a6:<invalid> a3:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -108(fp):00000014 -104(fp):d7 -100(fp):a3 -96(fp):a6 -84(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000090E0:
	Mem121[a1_122:byte] = Mem0[a0_119:byte]
	a0_119 = a0_119 + 0x00000001
	a1_122 = a1_122 + 0x00000001
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a1:<invalid> d0:<invalid> a6:<invalid> a3:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -108(fp):00000014 -104(fp):d7 -100(fp):a3 -96(fp):a6 -84(fp):<invalid> -4(fp):a5
// LocalsOut: Local -0004(32)

l000090E6:
	Mem55[a5_134 + d7_44:byte] = 0x00
	Mem58[a4 + 7824:word32] = a5_134 + -80
	word32 a7_59 = a7_13 - 0x00000004
	Mem61[a7_59:word32] = a3_132
	Mem63[a7_59 - 0x00000004:word32] = 0x00000028
	Mem65[a7_59 - 0x00000008:word32] = 0x000000FA
	Mem69[a7_59 - 0x0000000C:word32] = 0
	Mem72[a7_59 - 0x00000010:word32] = 0
	Mem74[a7_59 - 0x00000014:word32] = a4 + 7852
	Mem78[a7_59 - 0x00000018:word32] = 0
	Mem80[a7_59 - 0x0000001C:word32] = a4 + 7832
	Mem83[a7_59 - 0x00000020:word32] = 0
	fn00006078(dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg20)
	Mem95[a7_59 - 0x00000024:word32] = 0x00000014
	word32 d1_96
	word32 d2_97
	word32 d4_98
	word32 a0_99
	word32 a1_100
	word32 a2_101
	word32 a3_102
	word32 a4_103
	word32 a5_104
	word32 a6_105
	fn00007698(d7_44, a2, a4, dwArg00, out d1_96, out d2_97, out d4_98, out a0_99, out a1_100, out a2_101, out a3_102, out a4_103, out a5_104, out a6_105)
	return a2_101
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a1:<invalid> d0:<invalid> a6:<invalid> a3:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -108(fp):00000014 -104(fp):d7 -100(fp):a3 -96(fp):a6 -84(fp):<invalid> -4(fp):a5

fn000090A8_exit:
// DataOut: a2 a4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a1:<invalid> d0:<invalid> a6:<invalid> a3:<invalid> d7:<invalid> a0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> -144(fp):00000014 -140(fp):0 -136(fp):a4 + 7832 -132(fp):0 -128(fp):a4 + 7852 -124(fp):0 -120(fp):0 -116(fp):000000FA -112(fp):00000028 -108(fp):<invalid> -104(fp):d7 -100(fp):a3 -96(fp):a6 -84(fp):<invalid> -4(fp):a5



word32 fn00009154(word32 d0, word32 d1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1
// LiveOut: d0
// Trashed: CVZNX d0
// Preserved: a7 d2 d3
fn00009154_entry:
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00009154:
	word32 d2_14 = __swap(d0) *u (word16) d1
	return d0 *u (word16) d1 + DPB(__swap(DPB(d2_14, (word16) d2_14 + (word16) (__swap(d1) *u (word16) d0), 0)), 0x0000, 0)
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00009154_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 d3:d3 d0:<invalid> -8(fp):d2 -4(fp):d3



word32 fn00009174(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1 d2
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7
fn00009174_entry:
// DataOut: a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00009174:
	branch d0 > 0x00000000 l00009196
// DataOut: a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00009196:
	branch d1 > 0x00000000 l00009198_thunk_fn000091A6
// DataOut: a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00009198_thunk_fn000091A6:
	word32 d1_44
	return fn000091A6(d0, d1, d2, out d1_44)
// DataOut: a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000919C:
	word32 d1_40
	return -fn000091A6(d0, -d1, d2, out d1_40)
// DataOut: a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000917A:
	word32 d0_15 = -d0
	branch d1 > 0x00000000 l0000918C
// DataOut: a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000918C:
	word32 d1_32
	*d1Out = -d1_29
	word32 d1_29
	return -fn000091A6(d0_15, d1, d2, out d1_29)
// DataOut: a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:-d0

l00009182:
	word32 d1_27
	*d1Out = -d1_25
	word32 d1_25
	return fn000091A6(d0_15, -d1, d2, out d1_25)
// DataOut: a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:-d0

fn00009174_exit:
// DataOut: d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>



word32 fn000091A6(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1 d2
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
l00009224:
	branch Test(UGE,C) l00009224
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d3 d4 d5 d6 d7
// DataOut (flags): C
// SymbolicIn:
// LocalsOut: fp(32) Local -0004(32)

fn000091A6_entry:
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000091A6:
	word32 d1_136 = __swap(d1)
	word16 v10_8 = (word16) d1_136
	word32 d2_9 = DPB(d2, v10_8, 0)
	branch v10_8 != 0x0000 l000091D0
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32)

l000091D0:
	word32 d3_138 = 16
	branch (word16) d1_136 - 0x0080 >=u 0x0000 l000091E0
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l000091DC:
	d1_136 = __rol(d1_136, 0x00000008)
	d3_138 = 8
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:16 -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l000091E0:
	branch (word16) d1_136 - 0x0800 >=u 0x0000 l000091EC
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l000091E8:
	d1_136 = __rol(d1_136, 0x00000004)
	d3_138 = DPB(d3_138, (word16) d3_138 - 0x0004, 0)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l000091EC:
	branch (word16) d1_136 - 0x2000 >=u 0x0000 l000091F8
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l000091F4:
	d1_136 = __rol(d1_136, 0x00000002)
	d3_138 = DPB(d3_138, (word16) d3_138 - 0x0002, 0)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l000091F8:
	branch (word16) d1_136 < 0x0000 l00009202
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l000091FE:
	d1_136 = __rol(d1_136, 0x00000001)
	d3_138 = DPB(d3_138, (word16) d3_138 - 0x0001, 0)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l00009202:
	word32 d0_96 = d0 >>u d3_138
	word32 d2_99 = DPB(__swap(DPB(d2, (word16) d0, 0)), 0x0000, 0) >>u d3_138
	uint16 v39_102 = (uint16) (d0_96 /u (uint16) d1_136)
	word32 d3_106 = DPB(__swap(d3_138), v39_102, 0)
	word32 d0_113 = DPB(DPB(d0_96, (uint16) (d0_96 % (uint16) d1_136), 16), (word16) d2_99, 0) - DPB(d2_99, v39_102, 0) *u (word16) __swap(d1_136)
	branch d0_113 >=u 0x00000000 l00009226
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32) Local -0004(32)

l00009226:
	word32 d1_128
	*d1Out = __swap(__rol(d0_113, __swap(d3_106)))
	return (int32) v39_102
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00009220:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l000091B0:
	word32 d0_27 = __swap(d0)
	word32 d1_28 = __swap(d1_136)
	word16 v13_30 = (word16) d0_27
	word32 d2_31 = DPB(__swap(d2_9), v13_30, 0)
	branch v13_30 == 0x0000 l000091C0
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: Local -0004(32)

l000091BC:
	uint16 v15_60 = (uint16) (d2_31 /u (uint16) d1_28)
	d2_31 = DPB(DPB(d2_31, (uint16) (d2_31 % (uint16) d1_28), 16), v15_60, 0)
	d0_27 = DPB(d0_27, v15_60, 0)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2
// LocalsOut: Local -0004(32)

l000091C0:
	word32 d0_36 = __swap(d0_27)
	word32 d2_38 = DPB(d2_31, (word16) d0_36, 0)
	uint16 v28_40 = (uint16) (d2_38 /u (uint16) d1_28)
	word32 d1_47
	*d1Out = DPB(d1_28, (word16) __swap(DPB(DPB(d2_38, (uint16) (d2_38 % (uint16) d1_28), 16), v28_40, 0)), 0)
	return DPB(d0_36, v28_40, 0)
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2

fn000091A6_exit:
// DataOut: d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> d2:d2 d0:<invalid> d3:d3 -8(fp):d3 -4(fp):d2



word32 fn0000936C(word32 a2, word32 a4, word32 dwArg04, ptr32 & d2Out, ptr32 & d5Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4
// LiveOut: a0 a1 a2 a4 a5 d0 d2 d5
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a3 a7 d7
// Stack args: Stack +0004(32)
fn0000936C_entry:
	*a4Out = a4
	*d2Out = d2
	*d5Out = d5
	*a1Out = a1
	*a2Out = a2
	*a5Out = a5
// DataOut: a1 a2 a4 a5 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000936C:
	word32 d0_35
	word32 a0_15
	word32 d0_16 = fn000093F4(dwArg04, a4, dwArg04, out a0_15)
	branch d0_16 != 0x00000000 l00009386
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00009386:
	branch __btst(Mem0[d0_16 + 3:byte], 0x0004) l00009394
// DataOut: a0 a1 a2 a3 a4 a5 a7 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3
// LocalsOut: fp(32)

l00009394:
	word32 d2_71
	word32 d5_72
	word32 d6_73
	word32 a0_74
	word32 a1_75
	word32 a2_76
	word32 a3_77
	word32 a4_78
	word32 a5_79
	fn00009084(a2, a4, Mem0[d0_16 + 4:word32], out d2_71, out d5_72, out d6_73, out a0_74, out a1_75, out a2_76, out a3_77, out a4_78, out a5_79)
	Mem84[a3_77:word32] = 0
	branch Mem84[a4_78 + 8240:word32] == 0x00000000 l000093AC
// DataOut: a0 a1 a2 a4 a5 a7 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l000093AC:
	d0_35 = 0
// DataOut: a0 a1 a2 a4 a5 a7 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:0 d1:<invalid> a0:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l000093A8:
	d0_35 = -1
// DataOut: a0 a1 a2 a4 a5 a7 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:0 d1:<invalid> a0:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l0000938E:
	Mem64[d0_16:word32] = 0
	d0_35 = 0
// DataOut: a0 a1 a2 a4 a5 a7 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l00009382:
	d0_35 = -1
// DataOut: a0 a1 a2 a4 a5 a7 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d7:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3

l000093AE:
	return d0_35
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3

fn0000936C_exit:
// DataOut: a0 a1 a2 a4 a5 d0 d2 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d7:<invalid> a3:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a6:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a4:<invalid> a5:<invalid> -12(fp):<invalid> -8(fp):d7 -4(fp):a3



word32 fn000093B4(word32 a0, word32 a4, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a4
// LiveOut: d0
// Trashed: CVZN d0 d1
// Preserved: a3 a6 a7 d2 d6 d7
// Stack args: Stack +0008(32)
fn000093B4_entry:
// DataOut: a0 a1 a2 a4 a5 d5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0008(32)

l000093B4:
	word32 d0_36
	branch Allocate(a0, -16) != 0x00000000 l000093EA
// DataOut: a1 a2 a4 a5 d5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000093EA:
	d0_36 = 0
// DataOut: a1 a2 a4 a5 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l000093D8:
	Mem50[a4 + 18336:word32] = 2
	Mem52[a4 + 8240:word32] = 0x000000CD
	d0_36 = -1
// DataOut: a1 a2 a4 a5 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6
// LocalsOut: fp(32)

l000093EC:
	return d0_36
// DataOut: a1 a2 a4 a5 d0 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000014 a3:<invalid> d7:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a6:<invalid> -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6

fn000093B4_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d7:d7 d6:d6 d0:<invalid> d1:<invalid> d2:d2 a6:a6 -20(fp):d2 -16(fp):d6 -12(fp):d7 -8(fp):a3 -4(fp):a6



word32 fn000093F4(word32 d7, word32 a4, word32 dwArg04, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4 d7
// LiveOut: a0 d0
// Trashed: CVZNX a0 d0
// Preserved: a7 d7
// Stack args: Stack +0004(32)
fn000093F4_entry:
	*a0Out = a0
// DataOut: a0 a1 a2 a3 a4 a5 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000093F4:
	word32 d0_27
	Mem10[a4 + 8240:word32] = 0
	branch dwArg04 < 0x00000000 l00009426
// DataOut: a0 a1 a2 a3 a4 a5 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l00009404:
	branch dwArg04 - Mem10[a4 + 7640:word32] >= 0x00000000 l00009426
// DataOut: a0 a1 a2 a3 a4 a5 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d7:<invalid> d0:0 -4(fp):d7
// LocalsOut: Local -0004(32)

l0000940A:
	word32 a0_51
	*a0Out = a4 + 17760
	branch Mem10[a4 + 17760 + (dwArg04 << 0x00000003):word32] == 0x00000000 l00009426
// DataOut: a0 a1 a2 a3 a4 a5 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d7:<invalid> d0:0 -4(fp):d7
// LocalsOut: Local -0004(32)

l00009426:
	Mem42[a4 + 18336:word32] = 9
	d0_27 = 0
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d7:<invalid> d0:<invalid> a0:a4 + 17760 -4(fp):d7
// LocalsOut: Local -0004(32)

l00009418:
	word32 a0_60 = a4 + 17760 + (dwArg04 << 0x00000003)
	*a0Out = a0_60
	d0_27 = a0_60
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d7:<invalid> d0:<invalid> a0:a4 + 17760 -4(fp):d7
// LocalsOut: Local -0004(32)

l0000942E:
	return d0_27
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000004 d7:<invalid> d0:<invalid> a0:<invalid> -4(fp):d7

fn000093F4_exit:
// DataOut: a0 d0
// DataOut (flags): 
// SymbolicIn: a7:fp d7:d7 d0:<invalid> a0:<invalid> -4(fp):d7



word32 fn0000943C(word32 a2, word32 a4, ptr32 & d2Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & d6Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 a4
// LiveOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d5 d6
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: a6 a7 d7
fn0000943C_entry:
	*d6Out = d6
	*d5Out = d5
	*d2Out = d2
	*d4Out = d4
	*a0Out = a0
	*a1Out = a1
	*a2Out = a2
	*a3Out = a3
	*a4Out = a4
	*a5Out = a5
// DataOut: a0 a1 a2 a3 a4 a5 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000943C:
	SetSignal(0, 0x00003000)
	word32 d0_112 = 0
	branch 0x00000000 == 0x00000000 l0000947C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000945C:
	branch Mem0[a4 + 8264:word32] == 0x00000000 l0000947C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d0:0 d1:0x00003000 a6:<invalid> d7:0x00000000 -8(fp):d7 -4(fp):a6
// LocalsOut: fp(32)

l00009462:
	word32 a0_69 = Mem0[a4 + 8264:word32]
	word32 a7_70
	word32 a6_71
	word32 d7_72
	byte CVZN_74
	word32 d1_75
	byte ZN_76
	byte C_77
	byte V_78
	byte Z_79
	word32 a4_80
	word32 a0_81
	byte N_82
	word32 a2_83
	word32 d2_84
	word32 d4_85
	word32 d5_86
	word32 d6_87
	word32 a1_88
	word32 a3_89
	word32 a5_90
	call a0_69 (retsize: 4; depth: 12)
		uses: a0_69,a1,a2,a3,a4,a5,a6_11,a7_5,C_67,CVZN,d0_8,d1_9,d2,d4,d5,d6,d7_13,dwLoc04_4,dwLoc08_7,dwLoc0C,N,V_68,Z_66,ZN_65
		defs: a0_81,a1_88,a2_83,a3_89,a4_80,a5_90,a6_71,a7_70,C_77,CVZN_74,d0_73,d1_75,d2_84,d4_85,d5_86,d6_87,d7_72,N_82,V_78,Z_79,ZN_76
	branch false l0000946E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d0:0 d1:0x00003000 a6:<invalid> d7:0x00000000 -8(fp):d7 -4(fp):a6
// LocalsOut: fp(32)

l0000946E:
	Mem95[a4_80 + 8264:word32] = 0x00000000
	word32 d1_102
	word32 d2_103
	word32 d4_104
	word32 a0_105
	word32 a1_106
	word32 a2_107
	word32 a3_108
	word32 a4_109
	word32 a5_110
	word32 a6_111
	d0_112 = fn00007698(d7_72, a2_83, a4_80, 0x00000014, out d1_102, out d2_103, out d4_104, out a0_105, out a1_106, out a2_107, out a3_108, out a4_109, out a5_110, out a6_111)
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d0:0 d1:0x00003000 a6:<invalid> d7:0x00000000 a0:<invalid> -8(fp):d7 -4(fp):a6

l0000946C:
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 d0:0 d1:0x00003000 a6:<invalid> d7:0x00000000 a0:<invalid> -8(fp):d7 -4(fp):a6

l0000947C:
	return d0_112
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> a6:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -12(fp):00000014 -8(fp):d7 -4(fp):a6

fn0000943C_exit:
// DataOut: a0 a1 a2 a3 a4 a5 d0 d2 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d0:<invalid> d1:<invalid> a6:<invalid> d7:<invalid> a0:<invalid> d6:<invalid> d5:<invalid> a1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -12(fp):00000014 -8(fp):d7 -4(fp):a6



word32 fn00009488(word32 d7, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5 d7
// LiveOut: a0 a1 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a7 d0 d1 d5 d6 d7
// Preserved: a2 a3 a5 a7 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00009488_entry:
	*a0Out = a0
	*a1Out = a1
// DataOut: a0 a1 a4 a5 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00009488:
	word32 a7_123 = fp - 0x00000048
	word32 a3_115 = dwArg04
	word32 a2_131 = dwArg08
	word32 d6_233 = 0
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Local -0004(32)

l0000949E:
	word32 d0_102
	byte v11_50 = Mem0[a2_131:byte]
	a2_131 = a2_131 + 0x00000001
	d7 = DPB(d7, v11_50, 0)
	branch v11_50 == 0x00 l000095AE
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000095AE:
	branch Mem0[a3_115:byte] == 0x00 l000095B6
// DataOut: a0 a1 a3 a4 a5 a7 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000095B6:
	d0_102 = a3_115 - Mem0[fp + 0xFFFFFFF8:word32]
// DataOut: a0 a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000095B2:
	d0_102 = 0
// DataOut: a0 a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000094A6:
	word16 v18_83 = (word16) (int32) v11_50 - 0x0023
	branch v18_83 == 0x0000 l000094CA
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094CA:
	byte v37_158 = Mem0[a2_131:byte]
	a2_131 = a2_131 + 0x00000001
	d7 = DPB(d7, v37_158, 0)
	word16 v39_164 = (word16) (int32) v37_158 - 0x0028
	branch v39_164 == 0x0000 l000094F0
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094F0:
	byte v43_236 = Mem0[a2_131:byte]
	a2_131 = a2_131 + 0x00000001
	d7 = DPB(d7, v43_236, 0)
	branch v43_236 == 0x29 l00009504
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d5:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00009504:
	Mem250[fp - 0x00000004 + d6_233:byte] = 0x00
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:41 a0:<invalid> d1:<invalid> d5:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00009508:
	word32 a7_260 = a7_123 - 0x00000004
	Mem261[a7_260:word32] = fp + 0xFFFFFFD7
	Mem264[a7_260 - 0x00000004:word32] = a3_115
	a7_123 = a7_260 + 0x00000004
	branch fn000095C4(dwArg00, dwArg04) == 0x00000000 l0000949E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00009518:
	word32 a0_272
	*a0Out = fp + 0xFFFFFFD7
	word32 a1_273 = fp + 0xFFFFFFD7
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l0000951E:
	a1_273 = a1_297 + 0x00000001
	word32 a1_297 = a1_273
	branch Mem264[a1_297:byte] != 0x00 l0000951E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00009522:
	word32 a1_282 = a1_273 - 0x00000001 - (fp + 0xFFFFFFD7)
	*a1Out = a1_282
	a3_115 = a3_115 + a1_282
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> d5:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094F8:
	Mem248[a7_123 + -37 + d6_233:byte] = v43_236
	word32 a0_243
	*a0Out = d6_233
	d6_233 = d6_233 + 0x00000001
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:41 a0:<invalid> d1:<invalid> d5:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094D6:
	branch v39_164 != 0x0017 l0000952C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l0000952C:
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l0000952E:
	byte v47_204 = Mem0[a3_115:byte]
	branch v47_204 == 0x00 l0000949E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00009534:
	word32 a7_211 = a7_123 - 0x00000004
	Mem213[a7_211:word32] = (int32) v47_204
	word32 d0_215 = fn000077BC(dwArg00)
	Mem220[a7_211:word32] = (int32) v37_158
	Mem222[a7_211 + 24:word32] = d0_215
	a7_123 = a7_211 + 0x0004
	branch Mem222[a7_211 + 0x00000018:word32] - fn000077BC(dwArg00) != 0x00000000 l0000949E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00009558:
	a3_115 = a3_115 + 0x00000001
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094DC:
	branch Mem0[a3_115:byte] == 0x00 l0000949E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094E0:
	word32 a7_182 = a7_123 - 0x00000004
	Mem184[a7_182:word32] = a2_131 + 0x00000001
	Mem187[a7_182 - 0x00000004:word32] = a3_115
	a7_123 = a7_182 + 0x00000004
	word32 a0_189
	word32 a1_190
	branch fn00009488(d7, fp - 0x00000004, dwArg00, dwArg04, out a0_189, out a1_190) != 0x00000000 l0000949E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094EC:
	a3_115 = a3_115 + 0x00000001
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094B0:
	branch v18_83 == 0x0004 l0000955C
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l0000955C:
	byte v30_130 = Mem0[a2_131:byte]
	word32 a7_136 = a7_123 - 0x00000004
	Mem138[a7_136:word32] = (int32) v30_130
	word32 d0_140 = fn000077BC(dwArg00)
	Mem146[a7_136:word32] = (int32) Mem138[a3_115:byte]
	Mem148[a7_136 + 24:word32] = d0_140
	a2_131 = a2_131 + 0x00000001
	d7 = DPB(d7, v30_130, 0)
	a3_115 = a3_115 + 0x00000001
	a7_123 = a7_136 + 0x0004
	branch Mem148[a7_136 + 0x00000018:word32] - fn000077BC(dwArg00) == 0x00000000 l0000949E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00009582:
	d0_102 = 0
// DataOut: a0 a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000094B6:
	branch v18_83 != 0x001C l00009586
// DataOut: a0 a1 a2 a3 a4 a5 a7 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l00009586:
	word32 a7_107 = a7_123 - 0x00000004
	Mem109[a7_107:word32] = (int32) v11_50
	word32 d0_112 = fn000077BC(dwArg00)
	Mem118[a7_107:word32] = (int32) Mem109[a3_115:byte]
	Mem120[a7_107 + 24:word32] = d0_112
	a3_115 = a3_115 + 0x00000001
	a7_123 = a7_107 + 0x0004
	branch Mem120[a7_107 + 0x00000018:word32] - fn000077BC(dwArg00) == 0x00000000 l0000949E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000095AA:
	d0_102 = 0
// DataOut: a0 a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000094BE:
	a3_115 = a3_115 + 0x00000001
	branch Mem0[a3_115:byte] != 0x00 l0000949E
// DataOut: a0 a1 a2 a3 a4 a5 a7 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: Local -0004(32)

l000094C4:
	d0_102 = 0
// DataOut: a0 a1 a4 a5 a7 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000095BC:
	return d0_102
// DataOut: a0 a1 a4 d0 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d1:<invalid> d5:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

fn00009488_exit:
// DataOut: a0 a1 d0
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a5:<invalid> a3:<invalid> a2:<invalid> d6:<invalid> d7:<invalid> d0:<invalid> d5:<invalid> d1:<invalid> a0:<invalid> a1:<invalid> -109(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):d5 -68(fp):d6 -64(fp):d7 -60(fp):a2 -56(fp):a3 -52(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>



word32 fn000095C4(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a2 a3 a5 a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn000095C4_entry:
// DataOut: a0 a1 a4 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l000095C4:
	word32 a3_14 = dwArg04
	word32 a2_16 = dwArg08
// DataOut: a0 a1 a2 a3 a4 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000095D4:
	word32 d0_39
	branch Mem0[a2_75:byte] == 0x00 l000095FE
// DataOut: a0 a1 a2 a3 a4 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l000095FE:
	d0_39 = 1
// DataOut: a0 a1 a4 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l000095D8:
	a3_14 = a3_76 + 0x00000001
	a2_16 = a2_75 + 0x00000001
	word32 a2_75 = a2_16
	word32 a3_76 = a3_14
	branch fn000077BC((int32) Mem0[a3_76:byte]) - fn000077BC((int32) Mem0[a2_75:byte]) == 0x00000000 l000095D4
// DataOut: a0 a1 a2 a3 a4 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l000095FA:
	d0_39 = 0
// DataOut: a0 a1 a4 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5
// LocalsOut: fp(32)

l00009600:
	return d0_39
// DataOut: a0 a1 a4 d0 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 a5:fp - 0x00000004 a3:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5

fn000095C4_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a5:a5 a3:a3 a2:a2 d0:<invalid> d1:<invalid> -20(fp):<invalid> -16(fp):a2 -12(fp):a3 -8(fp):<invalid> -4(fp):a5



