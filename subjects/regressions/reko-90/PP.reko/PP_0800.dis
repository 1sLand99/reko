void fn0800_0150()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8B0D
// MayUse: 
// LiveOut:
// Trashed: SCZO ah bx dx es Top
// Preserved: di si sp
fn0800_0150_entry:
l0800_0150:
	fn0800_01E6(0x2714<16>, 0x2714<16>, Mem0[0800:025A:selector])
	return
fn0800_0150_exit:


void fn0800_0163()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8B0D
// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_0163_entry:
l0800_0163:
	return
fn0800_0163_exit:


void fn0800_0164(byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8B0D
// MayUse:  Stack +0002:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0800_0164_exit:
fn0800_0164_entry:
l0800_0164:
	msdos_terminate(bArg02)


void fn0800_0176(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15]
// LiveOut:
// Trashed: ax bx dx es Top
// Preserved: ds sp
fn0800_0176_entry:
l0800_0176:
	Mem14[ds:0x5B<16>:word32] = msdos_get_interrupt_vector(0<8>)
	Mem21[ds:0x5F<16>:word32] = msdos_get_interrupt_vector(4<8>)
	Mem28[ds:0x63<16>:word32] = msdos_get_interrupt_vector(5<8>)
	Mem35[ds:0x67<16>:word32] = msdos_get_interrupt_vector(6<8>)
	msdos_set_interrupt_vector(0<8>, SEQ(cs, 0x16D<16>))
	return
fn0800_0176_exit:


byte fn0800_01B9(selector ds, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8B0D
// MayUse:  ds:[0..15]
// LiveOut: ax:[8..15]-fn0800_8B0D dx:[0..15]-fn0800_8B0D
// Trashed: ax dx Top
// Preserved: ds sp
fn0800_01B9_entry:
l0800_01B9:
	msdos_set_interrupt_vector(0<8>, Mem7[ds:0x5B<16>:segptr32])
	msdos_set_interrupt_vector(4<8>, Mem16[ds:0x5F<16>:segptr32])
	msdos_set_interrupt_vector(5<8>, Mem25[ds:0x63<16>:segptr32])
	ds_dx_36 = Mem34[ds:0x67<16>:segptr32]
	msdos_set_interrupt_vector(6<8>, ds_dx_36)
	dxOut = SLICE(ds_dx_36, word16, 0)
	return 0x25<8>
fn0800_01B9_exit:


void fn0800_01E6(word16 si, word16 di, selector es)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0150
// MayUse:  di:[0..15] es:[0..15] si:[0..15]
// LiveOut:
// Trashed: SCZO ah bx dx Top
// Preserved: es sp
fn0800_01E6_entry:
l0800_01E6:
	branch si == 0x26FC<16> l0800_01F0
l0800_01F0:
	ah_100 = 0xFF<8>
l0800_01EC:
	ah_100 = 0<8>
l0800_01F2:
	dx_14 = di
	bx_16 = si
l0800_01F6:
	branch bx_16 == di l0800_021D
l0800_021D:
	branch dx_14 == di l0800_023C
l0800_023C:
	return
fn0800_01E6_exit:
l0800_0221:
	Mem28[es:dx_14:byte] = 0xFF<8>
	branch Mem81[es:dx_14:byte] == 0<8> l0800_0235
l0800_0235:
	call 0x800<16>:Mem32[es:dx_14 + 2<i16>:word16] (retsize: 2;)
		uses: Mem:Mem32
l0800_022E:
	call Mem32[es:dx_14 + 2<i16>:segptr32] (retsize: 4;)
		uses: Mem:Mem32
l0800_01FA:
	branch Mem81[es:bx_16:byte] == 0xFF<8> l0800_0218
l0800_0200:
	branch si == 0x26FC<16> l0800_020C
l0800_020C:
	v18_102 = Mem81[es:bx_16 + 1<i16>:byte] >u ah_100
l0800_0206:
	v18_102 = ah_100 >u Mem81[es:bx_16 + 1<i16>:byte]
l0800_0210:
	branch v18_102 l0800_0218
l0800_0212:
	ah_100 = Mem81[es:bx_16 + 1<i16>:byte]
	dx_14 = bx_16
l0800_0218:
	bx_16 = bx_16 + 6<16>


void fn0800_023D(char * ds_dx, word16 cx)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Sequence ds:dx:[0..31]
// LiveOut:
// Trashed: C ax bx Top
// Preserved: ds dx sp
fn0800_023D_entry:
l0800_023D:
	msdos_write_file(2<16>, cx, ds_dx, out ax_10)
	return
fn0800_023D_exit:


void main(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
main_entry:
l0800_025E:
	Mem15[ds:0x2A27<16>:word16] = 1<16>
	Mem16[ds:0x2E4D<16>:word16] = 0<16>
	Mem17[ds:0x2A1F<16>:word16] = 0<16>
	Mem18[ds:0x2E4F<16>:word16] = 0<16>
	Mem19[ds:0x2A1D<16>:word16] = 0<16>
	Mem20[ds:0x2A17<16>:word16] = 0<16>
	Mem21[ds:0x2A1B<16>:word16] = 0<16>
	Mem22[ds:0x2A11<16>:word16] = 0<16>
	Mem23[ds:0x2A0F<16>:word16] = 0<16>
	Mem24[ds:0x2A0D<16>:word16] = 0<16>
	Mem25[ds:0x2A0B<16>:word16] = 0x3000<16>
	Mem26[ds:0x2E31<16>:word16] = 0x8000<16>
	Mem27[ds:0x2E2F<16>:word16] = 0x1000<16>
	Mem28[ds:0x2A21<16>:word16] = 1<16>
	Mem29[ds:0x29F5<16>:word16] = 0<16>
	Mem30[ds:0x29F3<16>:word16] = 0<16>
	Mem31[ds:0x29F1<16>:word16] = 0<16>
	Mem32[ds:0x29EF<16>:word16] = 0<16>
	Mem33[ds:0x2A13<16>:word16] = 0<16>
	Mem34[ds:0x2A23<16>:word16] = 1<16>
	cx_37 = fn0800_2C9A(ds, out dx_38, out bx_36)
	fn0800_B2EF(cx_37, dx_38, bx_36, ds, SEQ(ds, 0x7E8<16>), out di_55)
	fn0800_0402(cx_37, dx_38, bx_36, ds)
	bp_129 = fn0800_0541(di_55, ds, out ds_133)
	sp_84 = <invalid>
	Mem91[ss:sp_84 - 2<i16>:word16] = 1<16>
	Mem93[ss:sp_84 - 4<i16>:word16] = 1<16>
	fn0800_2DBF(ds_133, Mem93[ss:sp_84 - 4<i16>:word16], Mem93[ss:sp_84 - 2<i16>:word16])
	Mem101[ss:sp_84 - 2<i16>:word16] = 0<16>
	Mem103[ss:sp_84 - 4<i16>:word16] = 0<16>
	dx_ax_469 = fn0800_9764(ds_133, Mem103[ss:sp_84 - 4<i16>:segptr32], out cx_106)
	dx_107 = SLICE(dx_ax_469, word16, 16) (alias)
	Mem116[ss:bp_129 - 2<i16>:word16] = dx_107
	Mem117[ss:bp_129 - 4<i16>:word16] = SLICE(dx_ax_469, word16, 0)
	sp_115 = sp_84
	bx_118 = Mem117[ds_133:0x2A25<16>:word16]
	branch bx_118 >u 8<16> l0800_0338
l0800_031A:
	switch (bx_118) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
l0800_0335:
	bp_129 = fn0800_19EE(cx_106, dx_107, ds_133, out ds_133)
	sp_115 = <invalid>
l0800_032B:
	bp_129 = fn0800_18D9(cx_106, dx_107, ds_133, out ds_133)
	sp_115 = <invalid>
l0800_0326:
	bp_129 = fn0800_12E2(cx_106, dx_107, ds_133, out ds_133)
	sp_115 = <invalid>
l0800_0330:
	ds_133 = fn0800_112D(cx_106, dx_107, ds_133)
l0800_0321:
	ds_133 = fn0800_0DE8(cx_106, dx_107, ds_133)
l0800_0338:
	sp_216 = sp_115 - 2<i16>
	Mem218[ss:sp_216:word16] = 0<16>
	Mem220[ss:sp_216 - 2<i16>:word16] = 0<16>
	dx_ax_454 = fn0800_9764(ds_133, Mem220[ss:sp_216 - 2<i16>:segptr32], out cx_470) - Mem220[ss:bp_129 - 4<i16>:ui32]
	Mem241[ss:bp_129 - 2<i16>:word16] = SLICE(dx_ax_454, word16, 16)
	Mem242[ss:bp_129 - 4<i16>:word16] = SLICE(dx_ax_454, word16, 0)
	Mem245[ss:sp_216:word16] = Mem242[ds_133:0x29F1<16>:word16]
	Mem248[ss:sp_216 - 2<i16>:word16] = Mem245[ds_133:0x29EF<16>:word16]
	Mem251[ss:sp_216 - 4<i16>:word16] = Mem248[ds_133:0x29F5<16>:word16]
	Mem254[ss:sp_216 - 6<i16>:word16] = Mem251[ds_133:0x29F3<16>:word16]
	ax_255 = fn0800_0B79(Mem254[ss:sp_216 - 6<i16>:word32], Mem254[ss:sp_216 - 2<i16>:ui32])
	Mem271[ss:sp_216:word16] = 0<16>
	Mem273[ss:sp_216 - 2<i16>:word16] = 0x3C<16>
	Mem276[ss:sp_216 - 4<i16>:word16] = Mem273[ss:bp_129 - 2<i16>:word16]
	Mem279[ss:sp_216 - 6<i16>:word16] = Mem276[ss:bp_129 - 4<i16>:word16]
	dx_ax_471 = fn0800_8BCA(Mem279[ss:sp_216 - 6<i16>:word32], Mem279[ss:sp_216 - 2<i16>:word32])
	sp_284 = <invalid>
	Mem291[ss:sp_284 - 2<i16>:word16] = SLICE(dx_ax_471, word16, 16)
	Mem293[ss:sp_284 - 4<i16>:word16] = SLICE(dx_ax_471, word16, 0)
	Mem300[ss:sp_284 - 6<i16>:word16] = 0<16>
	Mem302[ss:sp_284 - 8<i16>:word16] = 0x3C<16>
	Mem305[ss:sp_284 - 10<i16>:word16] = 0<16>
	Mem307[ss:sp_284 - 12<i16>:word16] = 0xE10<16>
	Mem310[ss:sp_284 - 14<i16>:word16] = Mem307[ss:bp_129 - 2<i16>:word16]
	Mem313[ss:sp_284 - 16<i16>:word16] = Mem310[ss:bp_129 - 4<i16>:word16]
	dx_ax_472 = fn0800_8BCA(Mem313[ss:sp_284 - 16<i16>:word32], Mem313[ss:sp_284 - 12<i16>:word32])
	sp_318 = <invalid>
	Mem325[ss:sp_318 - 2<i16>:word16] = SLICE(dx_ax_472, word16, 16)
	Mem327[ss:sp_318 - 4<i16>:word16] = SLICE(dx_ax_472, word16, 0)
	dx_ax_473 = fn0800_8BBB(Mem327[ss:sp_318 - 4<i16>:word32], Mem327[ss:sp_318:word32], out cx_474)
	sp_332 = <invalid>
	Mem339[ss:sp_332 - 2<i16>:word16] = SLICE(dx_ax_473, word16, 16)
	Mem341[ss:sp_332 - 4<i16>:word16] = SLICE(dx_ax_473, word16, 0)
	Mem348[ss:sp_332 - 6<i16>:word16] = 0<16>
	Mem350[ss:sp_332 - 8<i16>:word16] = 0xE10<16>
	Mem353[ss:sp_332 - 10<i16>:word16] = 0<16>
	Mem355[ss:sp_332 - 12<i16>:word16] = 0x5180<16>
	Mem358[ss:sp_332 - 14<i16>:word16] = Mem355[ss:bp_129 - 2<i16>:word16]
	Mem361[ss:sp_332 - 16<i16>:word16] = Mem358[ss:bp_129 - 4<i16>:word16]
	dx_ax_475 = fn0800_8BCA(Mem361[ss:sp_332 - 16<i16>:word32], Mem361[ss:sp_332 - 12<i16>:word32])
	sp_366 = <invalid>
	Mem373[ss:sp_366 - 2<i16>:word16] = SLICE(dx_ax_475, word16, 16)
	Mem375[ss:sp_366 - 4<i16>:word16] = SLICE(dx_ax_475, word16, 0)
	dx_ax_476 = fn0800_8BBB(Mem375[ss:sp_366 - 4<i16>:word32], Mem375[ss:sp_366:word32], out cx_378)
	sp_380 = <invalid>
	Mem387[ss:sp_380 - 2<i16>:word16] = SLICE(dx_ax_476, word16, 16)
	Mem389[ss:sp_380 - 4<i16>:word16] = SLICE(dx_ax_476, word16, 0)
	Mem398[ss:sp_380 - 6<i16>:word16] = CONVERT(ax_255, uint16, uint32) %u 0x64<16>
	dx_ax_401 = CONVERT(ax_255, uint16, uint32) (alias)
	Mem407[ss:sp_380 - 8<i16>:word16] = dx_ax_401 /u 0x64<16>
	Mem410[ss:sp_380 - 10<i16>:word16] = Mem407[ds_133:0x29F1<16>:word16]
	Mem413[ss:sp_380 - 12<i16>:word16] = Mem410[ds_133:0x29EF<16>:word16]
	Mem416[ss:sp_380 - 14<i16>:word16] = Mem413[ds_133:0x29F5<16>:word16]
	Mem419[ss:sp_380 - 16<i16>:word16] = Mem416[ds_133:0x29F3<16>:word16]
	Mem421[ss:sp_380 - 18<i16>:word16] = ds_133
	Mem424[ss:sp_380 - 20<i16>:word16] = 0x5DC<16>
	Mem427[ss:sp_380 - 22<i16>:word16] = 8<16>
	Mem430[ss:sp_380 - 24<i16>:word16] = Mem427[ds_133:0x2A13<16>:word16]
	Mem432[ss:sp_380 - 26<i16>:word16] = ds_133
	Mem435[ss:sp_380 - 28<i16>:word16] = 0x7EB<16>
	fn0800_B2EF(cx_378, dx_ax_401 %u 0x64<16>, 0x64<16>, ds_133, Mem435[ss:sp_380 - 28<i16>:word32], out di_477)
	return
main_exit:


void fn0800_0402(word16 cx, word16 dx, word16 bx, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: di ds si sp
fn0800_0402_entry:
l0800_0402:
	branch Mem10[ds:0x2A27<16>:word16] != Mem10[ds:0x269A<16>:word16] l0800_0410
l0800_040D:
	fn0800_0DCE(cx, dx, bx, ds, out di_620)
l0800_0410:
	es_bx_32 = Mem10[ds:0x269C<16>:segptr32]
	es_36 = SLICE(es_bx_32, selector, 16) (alias)
	bx_34 = SLICE(es_bx_32, word16, 0) + (Mem10[ds:0x2A27<16>:word16] << 2<16>)
	ch_170 = SLICE(cx_46, byte, 8) (alias)
	branch fn0800_BFC7(Mem10[es_36:bx_34:word32], out cx_46) <=u 1<16> l0800_044D
l0800_042F:
	es_bx_59 = Mem44[ds:0x269C<16>:segptr32]
	es_63 = SLICE(es_bx_59, selector, 16) (alias)
	bx_61 = SLICE(es_bx_59, word16, 0) + (Mem44[ds:0x2A27<16>:word16] << 2<16>)
	fn0800_0D24(ds, 1<16>, Mem44[es_63:bx_61:word32], out cx_75, out dx_621, out bx_622, out si_623, out di_624, out ds)
	ch_170 = SLICE(cx_75, byte, 8) (alias)
l0800_044D:
	ax_112 = fn0800_0C29(ds, SEQ(ds, 0x829<16>), Mem89[Mem89[ds:Mem89[ds:0x269C<16>:word16] + (Mem89[ds:0x2A27<16>:word16] << 2<16>):segptr32]:byte], out cl_114, out dx_115, out bx_113)
	Mem123[ds:0x2A25<16>:word16] = ax_112
	cx_145 = SEQ(ch_170, cl_114) (alias)
	branch ax_112 < 9<16> l0800_0492
l0800_0474:
	es_bx_129 = Mem123[ds:0x269C<16>:segptr32]
	es_133 = SLICE(es_bx_129, selector, 16) (alias)
	bx_131 = SLICE(es_bx_129, word16, 0) + (Mem123[ds:0x2A27<16>:word16] << 2<16>)
	fn0800_0D24(ds, 1<16>, Mem123[es_133:bx_131:word32], out cx_145, out dx_115, out bx_113, out si_625, out di_626, out ds)
l0800_0492:
	Mem161[ds:0x2A27<16>:word16] = Mem159[ds:0x2A27<16>:word16] + 1<16>
	branch Mem161[ds:0x2A25<16>:word16] > 2<16> l0800_04A0
l0800_04A0:
	branch Mem161[ds:0x2A27<16>:word16] != Mem161[ds:0x269A<16>:word16] l0800_04AC
l0800_04A9:
	fn0800_0DCE(cx_145, dx_115, bx_113, ds, out di_627)
l0800_04AC:
	ax_186 = Mem161[ds:0x2A27<16>:word16]
	Mem188[ds:0x2A27<16>:word16] = Mem161[ds:0x2A27<16>:word16] + 1<16>
	es_bx_191 = Mem188[ds:0x269C<16>:segptr32]
	es_195 = SLICE(es_bx_191, selector, 16) (alias)
	bx_193 = SLICE(es_bx_191, word16, 0) + (ax_186 << 2<16>)
	fn0800_BF9E(SEQ(ds, 0x4348<16>), Mem188[es_195:bx_193:word32])
	fn0800_0C6C(ds, SEQ(ds, 0x4348<16>))
	di_239 = 0x4348<16>
	cx_244 = 0xFFFF<16>
l0800_04E4:
	branch cx_244 == 0<16> l0800_04E6
l0800_04E4_1:
	di_239 = di_239 + 1<i16>
	cx_244 = cx_244 - 1<16>
	branch Mem236[ds:di_239:byte] == 0<8> l0800_04E4
l0800_04E6:
	di_258 = di_239 - 1<16>
	cx_255 = ~cx_244
	v41_427 = di_258 == 0<16>
l0800_04ED:
	branch cx_255 == 0<16> l0800_04EF
l0800_04ED_2:
	v41_427 = Mem236[ds:di_258:byte] == 0x2E<8>
	di_258 = di_258 - 1<i16>
	cx_255 = cx_255 - 1<16>
	branch Mem236[ds:di_258:byte] == 0x2E<8> l0800_04ED
l0800_04EF:
	branch v41_427 l0800_04F8
l0800_04F1:
	di_258 = 0xFFFF<16>
l0800_04F8:
	di_281 = di_258 + 1<16>
	di_307 = 0x4348<16>
	cx_312 = 0xFFFF<16>
l0800_0507:
	branch cx_312 == 0<16> l0800_0509
l0800_0507_1:
	di_307 = di_307 + 1<i16>
	cx_312 = cx_312 - 1<16>
	branch Mem306[ds:di_307:byte] == 0<8> l0800_0507
l0800_0509:
	cx_323 = ~cx_312
	di_326 = di_307 - cx_323
	v45_431 = di_326 == 0<16>
l0800_0510:
	branch cx_323 == 0<16> l0800_0512
l0800_0510_2:
	v45_431 = Mem306[ds:di_326:byte] == 0x5C<8>
	di_326 = di_326 + 1<i16>
	cx_323 = cx_323 - 1<16>
	branch Mem306[ds:di_326:byte] == 0x5C<8> l0800_0510
l0800_0512:
	branch v45_431 l0800_051B
l0800_0514:
	di_326 = 1<16>
l0800_051B:
	branch di_281 >u di_326 - 1<16> l0800_0538
l0800_0523:
	di_374 = 0x4348<16>
	cx_376 = 0xFFFF<16>
l0800_0530:
	branch cx_376 == 0<16> l0800_0532
l0800_0530_1:
	di_374 = di_374 + 1<i16>
	cx_376 = cx_376 - 1<16>
	branch Mem371[ds:di_374:byte] == 0<8> l0800_0530
l0800_0532:
	memcpy(ds:di_374 - 1<16>, ds:0x833<16>, 5<u32>)
l0800_0538:
	Mem404[ds:0x2A19<16>:word16] = 1<16>
l0800_049D:
l0800_053E:
	return
fn0800_0402_exit:


word16 fn0800_0541(word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  di:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: bp:[0..15]-main ds:[0..15]-main sp:[0..15]-main
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: DP
fn0800_0541_entry:
l0800_0541:
	bp_1139 = fp - 2<i16>
	ax_17 = Mem15[ds:0x2A27<16>:word16]
	branch ax_17 != Mem15[ds:0x269A<16>:word16] l0800_0555
l0800_0555:
	branch Mem15[Mem15[ds:Mem15[ds:0x269C<16>:word16] + (ax_17 << 2<16>):segptr32]:byte] != 0x2D<8> l0800_056B
l0800_056B:
	branch Mem15[Mem15[ds:Mem15[ds:0x269C<16>:word16] + (Mem15[ds:0x2A27<16>:word16] << 2<16>):segptr32]:byte] != 0x2F<8> l0800_0584
l0800_0584:
	dsOut = ds
	return bp
l0800_0581:
	ptrLoc06_1593 = ptrLoc06 (alias)
l0800_0568:
	ptrLoc06_1593 = ptrLoc06 (alias)
l0800_086D:
	branch Mem48[Mem48[ds:Mem48[ds:0x269C<16>:word16] + (Mem48[ds:0x2A27<16>:word16] << 2<16>):segptr32]:byte] != 0x2D<8> l0800_0886
l0800_0886:
	branch Mem48[Mem48[ds:Mem48[ds:0x269C<16>:word16] + (Mem48[ds:0x2A27<16>:word16] << 2<16>):segptr32]:byte] != 0x2F<8> l0800_089F
l0800_089F:
	ax_71 = Mem48[ds:0x2A21<16>:word16]
	branch ax_71 == 1<16> l0800_08AE
l0800_08AE:
	di_1622 = 0x4271<16>
	cx_82 = 0xFFFF<16>
l0800_08BB:
	branch cx_82 == 0<16> l0800_08BD
l0800_08BB_1:
	di_1622 = di_1622 + 1<i16>
	cx_82 = cx_82 - 1<16>
	branch Mem77[ds:di_1622:byte] == 0<8> l0800_08BB
l0800_08BD:
	memcpy(ds:di_1622 - 1<16>, ds:0x85B<16>, 2<u32>)
	branch Mem77[ds:0x2E31<16>:word16] <=u 0x8000<16> l0800_08D1
l0800_08CB:
	Mem111[ds:0x2E31<16>:word16] = 0x8000<16>
l0800_08D1:
	Mem113[ds:0x2E2F<16>:word16] = 0x1000<16>
l0800_08A7:
	branch ax_71 == 2<16> l0800_08D9
l0800_08D9:
	di_120 = 0x4271<16>
	cx_122 = 0xFFFF<16>
l0800_08E6:
	branch cx_122 == 0<16> l0800_08E8
l0800_08E6_1:
	di_120 = di_120 + 1<i16>
	cx_122 = cx_122 - 1<16>
	branch Mem117[ds:di_120:byte] == 0<8> l0800_08E6
l0800_08E8:
	memcpy(ds:di_120 - 1<16>, ds:0x85D<16>, 2<u32>)
	branch Mem117[ds:0x2E31<16>:word16] <=u 0x1000<16> l0800_08FC
l0800_08F6:
	Mem151[ds:0x2E31<16>:word16] = 0x1000<16>
l0800_08FC:
	Mem153[ds:0x2E2F<16>:word16] = 0xFF<16>
l0800_08AC:
l0800_0902:
	branch Mem155[ds:0x2A23<16>:word16] != 2<16> l0800_0911
l0800_0909:
	Mem162[ds:0x2A1D<16>:word16] = 0<16>
	Mem163[ds:0x2E4F<16>:word16] = 0<16>
l0800_0911:
	branch Mem165[ds:0x2E4F<16>:word16] == 0<16> l0800_092D
l0800_0918:
	di_1624 = 0x4271<16>
	cx_190 = 0xFFFF<16>
l0800_0925:
	branch cx_190 == 0<16> l0800_0927
l0800_0925_1:
	di_1624 = di_1624 + 1<i16>
	cx_190 = cx_190 - 1<16>
	branch Mem185[ds:di_1624:byte] == 0<8> l0800_0925
l0800_0927:
	memcpy(ds:di_1624 - 1<16>, ds:0x653<16>, 2<u32>)
l0800_092D:
	branch Mem218[ds:0x2A1D<16>:word16] == 0<16> l0800_0949
l0800_0934:
	di_1625 = 0x4271<16>
	cx_234 = 0xFFFF<16>
l0800_0941:
	branch cx_234 == 0<16> l0800_0943
l0800_0941_1:
	di_1625 = di_1625 + 1<i16>
	cx_234 = cx_234 - 1<16>
	branch Mem229[ds:di_1625:byte] == 0<8> l0800_0941
l0800_0943:
	memcpy(ds:di_1625 - 1<16>, ds:0x85F<16>, 2<u32>)
l0800_0949:
	di_1626 = 0x4271<16>
	cx_274 = 0xFFFF<16>
l0800_0956:
	branch cx_274 == 0<16> l0800_0958
l0800_0956_1:
	di_1626 = di_1626 + 1<i16>
	cx_274 = cx_274 - 1<16>
	branch Mem269[ds:di_1626:byte] == 0<8> l0800_0956
l0800_0958:
	memcpy(ds:di_1626 - 1<16>, ds:0x861<16>, 5<u32>)
	branch Mem269[ds:0x2A25<16>:word16] != 0<16> l0800_0987
l0800_0965:
	branch Mem269[Mem269[ds:(Mem269[ds:0x2A23<16>:word16] << 2<16>) + 0x545<16>:segptr32]:byte] == 0<8> l0800_0987
l0800_0977:
	bp_1139 = fn0800_09A3(ds, out ds)
l0800_089C:
l0800_0883:
l0800_058A:
	ax_367 = fn0800_0C29(ds, SEQ(ds, 0x838<16>), Mem48[Mem48[ds:Mem48[ds:0x269C<16>:word16] + (Mem48[ds:0x2A27<16>:word16] << 2<16>):segptr32] + 1<i16>:byte], out cl_1599, out dx_370, out bx_1600)
	si_378 = ax_367
	branch ax_367 < 0xB<16> l0800_05CF
l0800_05B1:
	es_bx_384 = Mem366[ds:0x269C<16>:segptr32]
	es_388 = SLICE(es_bx_384, selector, 16) (alias)
	bx_386 = SLICE(es_bx_384, word16, 0) + (Mem366[ds:0x2A27<16>:word16] << 2<16>)
	fn0800_0D24(ds, 2<16>, Mem366[es_388:bx_386:word32], out cx_1601, out dx_370, out bx_1602, out si_378, out di, out ds)
l0800_05CF:
	branch si_378 < 6<16> l0800_05D7
l0800_05D7:
	es_bx_421 = Mem417[ds:0x269C<16>:segptr32]
	es_425 = SLICE(es_bx_421, selector, 16) (alias)
	bx_423 = SLICE(es_bx_421, word16, 0) + (Mem417[ds:0x2A27<16>:word16] << 2<16>)
	branch fn0800_BFC7(Mem417[es_425:bx_423:word32], out cx_435) != 2<16> l0800_0622
l0800_0622:
	es_bx_448 = Mem433[ds:0x269C<16>:segptr32]
	es_451 = SLICE(es_bx_448, selector, 16) (alias)
	bx_450 = SLICE(es_bx_448, word16, 0) + (Mem433[ds:0x2A27<16>:word16] << 2<16>)
	ptrLoc06_1242 = SEQ(Mem433[es_451:bx_450 + 2<i16>:word16], Mem433[es_451:bx_450:word16] + 2<16>) (alias)
l0800_05F6:
	Mem462[ds:0x2A27<16>:word16] = Mem433[ds:0x2A27<16>:word16] + 1<16>
	branch Mem462[ds:0x2A27<16>:word16] != Mem462[ds:0x269A<16>:word16] l0800_0606
l0800_0603:
	si_378 = fn0800_0DCE(cx_435, dx_370, bx_423, ds, out di)
l0800_0606:
	es_bx_481 = Mem462[ds:0x269C<16>:segptr32]
	es_485 = SLICE(es_bx_481, selector, 16) (alias)
	bx_483 = SLICE(es_bx_481, word16, 0) + (Mem462[ds:0x2A27<16>:word16] << 2<16>)
	ptrLoc06_1242 = Mem462[es_485:bx_483:word32] (alias)
l0800_063F:
	branch CONVERT(Mem494[ptrLoc06_1242:byte], int8, int16) != 0<16> l0800_0659
l0800_064A:
	fn0800_0D24(ds, 2<16>, SEQ(ds, 0x5DC<16>), out cx_1619, out dx_1620, out bx_1621, out si_378, out di, out ds)
l0800_05D4:
	ptrLoc06_1242 = ptrLoc06_1593 (alias)
l0800_0659:
	wLoc06_1259 = SLICE(ptrLoc06_1242, word16, 0) (alias)
	wLoc04_1253 = SLICE(ptrLoc06_1242, word16, 16) (alias)
	branch si_378 <=u 0xA<16> l0800_0663
l0800_0663:
	switch (si_378) { l0800_069D l0800_0716 l0800_0765 l0800_080A l0800_07A9 l0800_074C l0800_066A l0800_0682 l0800_0679 l0800_068B l0800_0694 }
l0800_0694:
	Mem541[ds:0x2A15<16>:word16] = 1<16>
l0800_068B:
	Mem542[ds:0x2A17<16>:word16] = 1<16>
l0800_0679:
	Mem543[ds:0x2A1D<16>:word16] = 1<16>
l0800_0682:
	Mem544[ds:0x2A1B<16>:word16] = 1<16>
l0800_066A:
	Mem545[ds:0x2A1F<16>:word16] = 1<16>
	Mem546[ds:0x2E4F<16>:word16] = 0<16>
l0800_074C:
	di = fn0800_BF18(di, ds, 0x853<16>, ds)
l0800_07A9:
	di_1627 = wLoc06_1259
	cx_602 = 0xFFFF<16>
l0800_07BB:
	branch cx_602 == 0<16> l0800_07BD
l0800_07BB_1:
	di_1627 = di_1627 + 1<i16>
	cx_602 = cx_602 - 1<16>
	branch Mem596[wLoc04_1253:di_1627:byte] == 0<8> l0800_07BB
l0800_07BD:
	cx_613 = ~cx_602
	di_615 = di_1627 - cx_613
	size_635 = (cx_613 >>u 1<16>) *u32 2<16>
	memcpy(ds:0x42E3<16>, wLoc04_1253:di_615, size_635)
	memcpy(ds:SLICE(size_635, word16, 0) + 0x42E3<16>, wLoc04_1253:di_615 + SLICE(size_635, word16, 0), CONVERT(SLICE(cond(cx_613 >>u 1<16>), bool, 1), bool, uint32))
	fn0800_0C6C(ds, SEQ(ds, 0x42E3<16>))
	di = 0x42E3<16>
	cx_671 = 0xFFFF<16>
l0800_07E8:
	branch cx_671 == 0<16> l0800_07EA
l0800_07E8_2:
	di = di + 1<i16>
	cx_671 = cx_671 - 1<16>
	branch Mem663[ds:di:byte] == 0<8> l0800_07E8
l0800_07EA:
	branch Mem663[ds:~cx_671 + 0x42E1<16>:byte] == 0x5C<8> l0800_0869
l0800_07F7:
	di_1629 = 0x42E3<16>
	cx_693 = 0xFFFF<16>
l0800_0800:
	branch cx_693 == 0<16> l0800_0802
l0800_0800_3:
	di_1629 = di_1629 + 1<i16>
	cx_693 = cx_693 - 1<16>
	branch Mem663[ds:di_1629:byte] == 0<8> l0800_0800
l0800_0802:
	di_704 = di_1629 - 1<16>
	memcpy(ds:di_704, ds:0x859<16>, 2<u32>)
	di = di_704 + 2<16>
l0800_080A:
	di_1630 = wLoc06_1259
	cx_731 = 0xFFFF<16>
l0800_081C:
	branch cx_731 == 0<16> l0800_081E
l0800_081C_1:
	di_1630 = di_1630 + 1<i16>
	cx_731 = cx_731 - 1<16>
	branch Mem725[wLoc04_1253:di_1630:byte] == 0<8> l0800_081C
l0800_081E:
	cx_742 = ~cx_731
	di_744 = di_1630 - cx_742
	size_764 = (cx_742 >>u 1<16>) *u32 2<16>
	memcpy(ds:0x427E<16>, wLoc04_1253:di_744, size_764)
	memcpy(ds:SLICE(size_764, word16, 0) + 0x427E<16>, wLoc04_1253:di_744 + SLICE(size_764, word16, 0), CONVERT(SLICE(cond(cx_742 >>u 1<16>), bool, 1), bool, uint32))
	fn0800_0C6C(ds, SEQ(ds, 0x427E<16>))
	di = 0x427E<16>
	cx_800 = 0xFFFF<16>
l0800_0849:
	branch cx_800 == 0<16> l0800_084B
l0800_0849_2:
	di = di + 1<i16>
	cx_800 = cx_800 - 1<16>
	branch Mem792[ds:di:byte] == 0<8> l0800_0849
l0800_084B:
	branch Mem792[ds:~cx_800 + 0x427C<16>:byte] == 0x5C<8> l0800_0869
l0800_0858:
	di_1632 = 0x427E<16>
	cx_822 = 0xFFFF<16>
l0800_0861:
	branch cx_822 == 0<16> l0800_0863
l0800_0861_3:
	di_1632 = di_1632 + 1<i16>
	cx_822 = cx_822 - 1<16>
	branch Mem792[ds:di_1632:byte] == 0<8> l0800_0861
l0800_0863:
	di_833 = di_1632 - 1<16>
	memcpy(ds:di_833, ds:0x859<16>, 2<u32>)
	di = di_833 + 2<16>
l0800_0765:
	di = fn0800_BF18(di, ds, 0x856<16>, ds)
	branch Mem860[ds:0x2A21<16>:word16] > 2<16> l0800_0796
l0800_0782:
	branch Mem860[ds:0x2A21<16>:word16] == 0<16> l0800_078C
l0800_078C:
	branch Mem860[ds:0x2A25<16>:word16] == 0<16> l0800_0796
l0800_0796:
	fn0800_0D24(ds, 5<16>, ptrLoc06_1242, out cx_1611, out dx_1612, out bx_1613, out si_1614, out di, out ds)
l0800_0793:
l0800_0789:
l0800_0716:
	di = fn0800_BF18(di, ds, 0x84F<16>, ds)
	branch Mem925[ds:0x2E4F<16>:word16] != 0<16> l0800_0743
l0800_0733:
	fn0800_0D24(ds, 4<16>, ptrLoc06_1242, out cx_1615, out dx_1616, out bx_1617, out si_1618, out di, out ds)
l0800_0743:
	Mem967[ds:0x2A1F<16>:word16] = 0<16>
l0800_069D:
	branch Mem968[ds:0x2A19<16>:word16] == 0<16> l0800_06A7
l0800_06A7:
	di_1213 = wLoc06_1259 (alias)
	cx_976 = 0xFFFF<16>
l0800_06AF:
	branch cx_976 == 0<16> l0800_06B1
l0800_06AF_1:
	di_1213 = di_1633 + 1<i16>
	cx_976 = cx_976 - 1<16>
	di_1633 = di_1213
	branch Mem968[wLoc04_1253:di_1633:byte] == 0<8> l0800_06AF
l0800_06B1:
	cx_987 = ~cx_976
	ch_1109 = SLICE(cx_987 - 1<16>, byte, 8) (alias)
	branch cx_987 <=u 2<16> l0800_06C9
l0800_06B9:
	fn0800_0D24(ds, 3<16>, ptrLoc06_1242, out cx_1011, out dx_1604, out bx_1605, out si_1606, out di_1607, out ds)
	ch_1109 = SLICE(cx_1011, byte, 8) (alias)
l0800_06C9:
	ax_1046 = fn0800_0C29(ds, SEQ(ds, 0x844<16>), Mem1026[ptrLoc06_1242:byte], out cl_1048, out dx_1049, out bx_1603)
	Mem1057[ds:0x2A23<16>:word16] = ax_1046
	cx_1071 = SEQ(ch_1109, cl_1048) (alias)
	branch ax_1046 < 6<16> l0800_06F3
l0800_06E3:
	fn0800_0D24(ds, 3<16>, ptrLoc06_1242, out cx_1071, out dx_1049, out bx_1608, out si_1609, out di_1610, out ds)
l0800_06F3:
	fn0800_BEA2(cx_1071, dx_1049, ds, SEQ(ds, 0x4271<16>), SEQ(ds, 0x84B<16>), out di)
l0800_06A4:
l0800_0660:
l0800_0869:
	Mem1131[ds:0x2A27<16>:word16] = Mem1127[ds:0x2A27<16>:word16] + 1<16>
	ptrLoc06_1593 = ptrLoc06_1242 (alias)
l0800_0552:
l0800_0987:
	bp_1157 = Mem1135[ss:bp_1139:word16]
	dsOut = ds
	return bp_1157
fn0800_0541_exit:


word16 fn0800_09A3(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0541
//      fn0800_5E64
//      fn0800_669C
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: bp:[0..15]-fn0800_0541 ds:[0..15]-fn0800_0541 sp:[0..15]-fn0800_5E64
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_09A3_entry:
l0800_09A3:
	ax_dx_375 = SEQ((CONVERT(Mem15[ds:0xA72<16>:byte], int8, int16) << 8<8>) + CONVERT(Mem15[ds:0xA73<16>:byte], uint8, uint16), 0<16>) + CONVERT((CONVERT(Mem27[ds:0xA74<16>:byte], int8, int16) << 8<8>) + CONVERT(Mem27[ds:0xA75<16>:byte], uint8, uint16), uint16, uint32)
	ax_50 = fn0800_4311(ds, SEQ(SLICE(ax_dx_375 + 0x20<32>, word16, 16), SLICE(ax_dx_375, word16, 0) + 0x20<16>), out dx_56, out bp_51, out si_402, out ds_146)
	Mem66[ss:bp_51 - 2<i16>:word16] = dx_56
	Mem67[ss:bp_51 - 4<i16>:word16] = ax_50
	Mem68[ss:bp_51 - 6<i16>:word16] = dx_56
	Mem69[ss:bp_51 - 8<i16>:word16] = ax_50
	sp_59 = <invalid>
	Mem72[ss:sp_59 + 2<16>:word16] = Mem69[ss:bp_51 - 2<i16>:word16]
	Mem74[ss:sp_59:word16] = ax_50
	Mem76[ss:sp_59 - 2<i16>:word16] = ds_146
	Mem79[ss:sp_59 - 4<i16>:word16] = 0xA6E<16>
	fn0800_867A(Mem79[ss:sp_59 - 4<i16>:word16], Mem79[ss:sp_59 - 2<i16>:selector], Mem79[ss:sp_59:word16], Mem79[ss:sp_59 + 2<i16>:selector])
l0800_0A4F:
	si_95 = Mem94[ss:bp_51 + 4<i16>:word16]
	Mem99[ss:sp_59 + 2<16>:word16] = ds_146
	es_di_101 = Mem99[ss:bp_51 - 8<i16>:segptr32]
	ds_100 = Mem99[ss:bp_51 + 6<i16>:selector]
	es_364 = SLICE(es_di_101, selector, 16) (alias)
	di_110 = SLICE(es_di_101, word16, 0) (alias)
	cx_106 = 0xFFFF<16>
l0800_0A5E:
	branch cx_106 == 0<16> l0800_0A60
l0800_0A5E_1:
	di_110 = di_110 + 1<i16>
	cx_106 = cx_106 - 1<16>
	branch Mem99[es_364:di_110:byte] == 0<8> l0800_0A5E
l0800_0A60:
	cx_117 = ~cx_106
	ax_136 = 0<16>
	cmpResult_125 = memcmp(ds_100:si_95, es_364:di_110 - cx_117, CONVERT(cx_117, word16, uint32))
	branch cmpResult_125 == 0<16> l0800_0A6D
l0800_0A68:
	ax_133 = 0<16> - CONVERT(cmpResult_125 <u 0<16>, bool, word16)
	ax_136 = ax_133 - 0xFFFF<16> - CONVERT(ax_133 <u 0<16>, bool, word16)
l0800_0A6D:
	ds_146 = Mem99[ss:sp_59 + 2<16>:selector]
	branch ax_136 != 0<16> l0800_09FF
l0800_09FF:
	es_di_162 = Mem99[ss:bp_51 - 8<i16>:segptr32]
	es_367 = SLICE(es_di_162, selector, 16) (alias)
	di_171 = SLICE(es_di_162, word16, 0) (alias)
	cx_167 = 0xFFFF<16>
l0800_0A07:
	branch cx_167 == 0<16> l0800_0A09
l0800_0A07_1:
	di_171 = di_407 + 1<i16>
	cx_167 = cx_167 - 1<16>
	di_407 = di_171
	branch Mem99[es_367:di_407:byte] == 0<8> l0800_0A07
l0800_0A09:
	di_193 = Mem99[ss:bp_51 - 8<i16>:word16]
	Mem197[ss:sp_59 + 2<16>:word16] = CONVERT(Mem99[es_367:Mem99[ss:bp_51 - 8<i16>:word16] + -cx_167 + 1<i16>:byte], int8, int16) << 8<8>
	cx_202 = 0xFFFF<16>
l0800_0A25:
	branch cx_202 == 0<16> l0800_0A27
l0800_0A25_2:
	di_193 = di_408 + 1<i16>
	cx_202 = cx_202 - 1<16>
	di_408 = di_193
	branch Mem197[es_367:di_408:byte] == 0<8> l0800_0A25
l0800_0A27:
	dx_231 = Mem197[ss:sp_59 + 2<16>:word16] + CONVERT(Mem197[es_367:(Mem197[ss:bp_51 - 8<i16>:word16] + -cx_202) + 2<i16>:byte], uint8, uint16)
	di_232 = Mem197[ss:bp_51 - 8<i16>:word16]
	cx_237 = 0xFFFF<16>
l0800_0A42:
	branch cx_237 == 0<16> l0800_0A44
l0800_0A42_3:
	di_232 = di_409 + 1<i16>
	cx_237 = cx_237 - 1<16>
	di_409 = di_232
	branch Mem197[es_367:di_409:byte] == 0<8> l0800_0A42
l0800_0A44:
	Mem260[ss:bp_51 - 8<i16>:word16] = Mem197[ss:bp_51 - 8<i16>:word16] + ((dx_231 + -cx_237) + 3<16>)
l0800_0A72:
	es_di_262 = Mem99[ss:bp_51 - 8<i16>:segptr32]
	es_372 = SLICE(es_di_262, selector, 16) (alias)
	di_271 = SLICE(es_di_262, word16, 0) (alias)
	cx_267 = 0xFFFF<16>
l0800_0A7A:
	branch cx_267 == 0<16> l0800_0A7C
l0800_0A7A_1:
	di_271 = di_410 + 1<i16>
	cx_267 = cx_267 - 1<16>
	di_410 = di_271
	branch Mem99[es_372:di_410:byte] == 0<8> l0800_0A7A
l0800_0A7C:
	Mem287[ss:bp_51 - 8<i16>:word16] = Mem99[ss:bp_51 - 8<i16>:word16] + ~cx_267
	es_bx_288 = Mem287[ss:bp_51 - 8<i16>:segptr32]
	Mem304[ss:sp_59 + 2<16>:word16] = (CONVERT(Mem287[es_bx_288:byte], int8, int16) << 8<8>) + CONVERT(Mem287[es_bx_288 + 1<i16>:byte], uint8, uint16) + 2<16>
	Mem307[ss:sp_59:word16] = Mem304[ss:bp_51 - 6<i16>:word16]
	Mem309[ss:sp_59 - 2<16>:word16] = SLICE(es_bx_288, word16, 0)
	Mem312[ss:sp_59 - 4<16>:word16] = Mem309[ss:bp_51 + 10<i16>:word16]
	Mem315[ss:sp_59 - 6<16>:word16] = Mem312[ss:bp_51 + 8<i16>:word16]
	fn0800_B0F3(Mem315[ss:sp_59 - 6<16>:word32], Mem315[ss:sp_59 - 2<16>:word32], Mem315[ss:sp_59 + 2<16>:word16])
	Mem331[ss:sp_59 + 2<16>:word16] = Mem315[ss:bp_51 - 2<i16>:word16]
	Mem334[ss:sp_59:word16] = Mem331[ss:bp_51 - 4<i16>:word16]
	fn0800_4346(ds_146, Mem334[ss:sp_59 + 2<16>:word16], out cx_403, out dx_404, out bx_405, out ds_340)
	bp_353 = Mem334[ss:bp_51:word16]
	dsOut = ds_340
	return bp_353
fn0800_09A3_exit:


word16 fn0800_0ABC(selector ds, word32 dwArg04, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_18D9
//      fn0800_19EE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: cx:[0..15]-fn0800_112D dx:[0..15]-fn0800_112D
// Trashed: SCZDO ax bx cx di dx es Top
// Preserved: bp si sp
fn0800_0ABC_entry:
l0800_0ABC:
	fn0800_35A3(fp - 16<i16>, ss, dwArg04, out dx_266)
	ax_51 = fn0800_0B79(Mem44[ds:0x2A07<16>:word32], Mem25[ds:0x2A03<16>:word32])
	dx_ax_71 = CONVERT(ax_51, uint16, uint32) (alias)
	bx_124 = 0x64<16>
	si_107 = fn0800_B2EF(ax_51, dx_ax_71 %u 0x64<16>, 0x64<16>, ds, SEQ(ds, 0x866<16>), out di_267)
	branch Mem104[ds:0x2A25<16>:word16] == 2<16> l0800_0B2E
l0800_0B2A:
	branch si_107 == 0<16> l0800_0B47
l0800_0B2E:
	fn0800_B2EF(ax_51, dx_ax_71 %u 0x64<16>, si_107 << 2<16>, ds, SEQ(ds, 0x889<16>), out di_268)
	bx_124 = si_107 << 2<16>
l0800_0B47:
	fn0800_B2EF(ax_51, dx_ax_71 %u 0x64<16>, bx_124, ds, SEQ(ds, 0x827<16>), out di_269)
	Mem180[ds:0x29F3<16>:ui32] = Mem176[ds:0x29F3<16>:ui32] + Mem160[ds:0x2A07<16>:ui32]
	dx_182 = Mem180[ds:0x2A03<16>:word16]
	Mem188[ds:0x29EF<16>:ui32] = Mem184[ds:0x29EF<16>:ui32] + SEQ(Mem180[ds:0x2A05<16>:word16], dx_182)
	Mem191[ds:0x2A13<16>:word16] = Mem188[ds:0x2A13<16>:word16] + 1<16>
	dxOut = dx_182
	return ax_51
fn0800_0ABC_exit:


word16 fn0800_0B79(word32 dwArg02, ui32 dwArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      fn0800_0ABC
// MayUse:  ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax:[0..15]-main
// Trashed: SCZO ax bx cx dx Top
// Preserved: P bp sp
fn0800_0B79_entry:
	wArg02 = SLICE(dwArg02, word16, 0)
	wArg04 = SLICE(dwArg02, word16, 16)
	wArg06 = SLICE(dwArg06, word16, 0)
	wArg08 = SLICE(dwArg06, word16, 16)
l0800_0B79:
	sp_4 = fp - 2<i16>
	branch dwArg02 == 0<16> l0800_0B9E
l0800_0B84:
	branch dwArg06 == 0<16> l0800_0B9E
l0800_0B8C:
	dwArg06_168 = dwArg06 (alias)
	dwArg02_216 = dwArg02 (alias)
	branch wArg04 >u wArg08 l0800_0BCE
l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
l0800_0B99:
	dwArg02_216 = dwArg02 (alias)
	branch wArg02 >u wArg06 l0800_0BCE
l0800_0BCE:
	ax_dx_158 = dwArg02_216 - dwArg06_168
	wArg08_174 = SLICE(dwArg06_168, word16, 16) (alias)
	wArg06_176 = SLICE(dwArg06_168, word16, 0) (alias)
	wArg02_167 = SLICE(dwArg02_216, word16, 0) (alias)
	wArg04_166 = SLICE(dwArg02_216, word16, 16) (alias)
	dx_33 = SLICE(ax_dx_158, word16, 0) (alias)
	ax_36 = SLICE(ax_dx_158, word16, 16) (alias)
	branch ax_36 >u 6<16> l0800_0BA2
l0800_0BDF:
	branch ax_36 != 6<16> l0800_0BE7
l0800_0BE1:
	branch dx_33 >u 0x8DB8<16> l0800_0BA2
l0800_0BA2:
	sp_49 = sp_4 - 2<i16>
	Mem51[ss:sp_49:word16] = 0<16>
	Mem53[ss:sp_49 - 2<i16>:word16] = 0xA<16>
	Mem57[ss:sp_49 - 4<i16>:word16] = wArg04_166
	Mem60[ss:sp_49 - 6<i16>:word16] = wArg02_167
	dx_ax_222 = fn0800_8BC2(Mem60[ss:sp_49 - 6<i16>:word32], Mem60[ss:sp_49 - 2<i16>:word32], out cx_223, out bx_224)
	sp_65 = <invalid>
	Mem80[ss:sp_65 + 6<16>:word16] = 0<16>
	Mem82[ss:sp_65 + 4<16>:word16] = 0xA<16>
	Mem85[ss:sp_65 + 2<16>:word16] = wArg08_174
	Mem88[ss:sp_65:word16] = wArg06_176
	sp_93 = <invalid>
	sp_4 = sp_93 + 8<16>
	dwArg06_168 = fn0800_8BC2(Mem88[ss:sp_65:word32], Mem88[ss:sp_65 + 4<i16>:word32], out cx_225, out bx_226) (alias)
	dwArg02_216 = dx_ax_222 (alias)
l0800_0BE7:
	sp_107 = sp_4 - 2<i16>
	Mem108[ss:sp_107:word16] = wArg04_166
	Mem111[ss:sp_107 - 2<i16>:word16] = wArg02_167
	cx_bx_160 = dwArg02_216 - dwArg06_168
	dx_ax_227 = fn0800_8F18(0x2710<16>, SLICE(cx_bx_160, word16, 16), 0<16>, SLICE(cx_bx_160, word16, 0), out ch_228)
	Mem132[ss:sp_107 - 4<i16>:word16] = SLICE(dx_ax_227, word16, 16)
	Mem134[ss:sp_107 - 6<i16>:word16] = SLICE(dx_ax_227, word16, 0)
	return SLICE(fn0800_8BC2(Mem134[ss:sp_107 - 6<i16>:word32], Mem134[ss:sp_107 - 2<i16>:word32], out cx_230, out bx_231), word16, 0)
l0800_0B9E:
	return 0<16>
fn0800_0B79_exit:


word16 fn0800_0C08(word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_831D
//      fn0800_8407
// MayUse:  Stack +0002:[0..15]
// LiveOut: ax:[0..15]-fn0800_831D
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_0C08_entry:
l0800_0C08:
	si_12 = wArg02
	cx_13 = 1<16>
l0800_0C15:
	dx_ax_18 = CONVERT(si_12, uint16, uint32) (alias)
	si_12 = dx_ax_18 /u 2<16>
	branch dx_ax_18 /u 2<16> != 0<32> l0800_0C14
l0800_0C14:
	cx_13 = cx_13 + 1<16>
l0800_0C24:
	return cx_13
fn0800_0C08_exit:


word16 fn0800_0C29(selector ds, word32 dwArg02, byte bArg06, ptr16 & clOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0402
//      fn0800_0541
// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..7]
// LiveOut: ax:[0..15]-fn0800_0402 bx:[0..15]-fn0800_0402 cl:[0..7]-fn0800_0402 dx:[0..15]-fn0800_0402
// Trashed: SCZOP ax bx cl dx es Top
// Preserved: bp sp
fn0800_0C29_entry:
	wArg02 = SLICE(dwArg02, word16, 0)
l0800_0C29:
	al_27 = fn0800_97CC(ds, CONVERT(bArg06, int8, int16), out dx_94) (alias)
	ptrLoc06_68 = dwArg02 (alias)
l0800_0C4F:
	wLoc06_69 = SLICE(ptrLoc06_68, word16, 0) (alias)
	wLoc04_77 = SLICE(ptrLoc06_68, word16, 16) (alias)
	bx_38 = SLICE(ptrLoc06_68, word16, 0) (alias)
	branch Mem35[ptrLoc06_68:byte] == 0<8> l0800_0C5D
l0800_0C58:
	branch Mem35[ptrLoc06_68:byte] != al_27 l0800_0C4C
l0800_0C4C:
	ptrLoc06_68 = SEQ(wLoc04_77, wLoc06_69 + 1<16>) (alias)
l0800_0C5D:
	clOut = al_27
	dx_ax_60 = CONVERT(wLoc06_69 - wArg02, word16, uint32)
	dxOut = SLICE(dx_ax_60, word16, 16)
	bxOut = bx_38
	return SLICE(dx_ax_60, word16, 0)
fn0800_0C29_exit:


word16 fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0402
//      fn0800_0541
//      fn0800_2DE2
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: dx:[0..15]-fn0800_2DE2
// Trashed: SCZO ax bx dx es Top
// Preserved: P bp sp
fn0800_0C6C_entry:
l0800_0C6C:
l0800_0C88:
	wArg02_50 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_54 = SLICE(ptrArg02, word16, 16) (alias)
	branch Mem11[ptrArg02:byte] != 0<8> l0800_0C71
l0800_0C71:
	Mem40[ptrArg02:byte] = fn0800_97CC(ds, CONVERT(Mem11[ptrArg02:byte], int8, int16), out dx)
	ptrArg02 = SEQ(wArg04_54, wArg02_50 + 1<16>) (alias)
l0800_0C91:
	return dx
fn0800_0C6C_exit:


void fn0800_0C93(selector ds, word32 dwArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_18D9
//      fn0800_19EE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_0C93_entry:
l0800_0C93:
	dx_146 = fn0800_3509(fp - 104<i16>, ss, dwArg02, out bx_29)
	di_325 = fp - 104<i16>
	cx_49 = 0xFFFF<16>
l0800_0CB9:
	branch cx_49 == 0<16> l0800_0CBB
l0800_0CB9_1:
	di_325 = di_325 + 1<i16>
	cx_49 = cx_49 - 1<16>
	branch Mem41[ss:di_325:byte] == 0<8> l0800_0CB9
l0800_0CBB:
	cx_60 = ~cx_49
	di_62 = di_325 - cx_60
	cmpResult_69 = memcmp(ds:0x2714<16>, ss:di_62, CONVERT(cx_60, word16, uint32))
	ax_80 = 0<16>
	cx_198 = cx_60 - __find_first_difference__(ds:0x2714<16>, ss:di_62)
	branch cmpResult_69 == 0<16> l0800_0CC8
l0800_0CC3:
	ax_77 = 0<16> - CONVERT(cmpResult_69 <u 0<16>, bool, word16)
	ax_80 = ax_77 - 0xFFFF<16> - CONVERT(ax_77 <u 0<16>, bool, word16)
l0800_0CC8:
	branch ax_80 == 0<16> l0800_0D0D
l0800_0CCC:
	fn0800_B2EF(cx_198, dx_146, bx_29, ds, SEQ(ds, 0x88F<16>), out di_324)
	di_144 = fp - 104<i16>
	dx_146 = ds
	cx_157 = 0xFFFF<16>
l0800_0CF5:
	branch cx_157 == 0<16> l0800_0CF7
l0800_0CF5_1:
	di_144 = di_144 + 1<i16>
	cx_157 = cx_157 - 1<16>
	branch Mem152[ss:di_144:byte] == 0<8> l0800_0CF5
l0800_0CF7:
	cx_168 = ~cx_157
	di_170 = di_144 - cx_168
	size_190 = (cx_168 >>u 1<16>) *u32 2<16>
	memcpy(ds:0x2714<16>, ss:di_170, size_190)
	memcpy(ds:SLICE(size_190, word16, 0) + 0x2714<16>, ss:di_170 + SLICE(size_190, word16, 0), CONVERT(SLICE(cond(cx_168 >>u 1<16>), bool, 1), bool, uint32))
	cx_198 = 0<16>
l0800_0D0D:
	fn0800_B2EF(cx_198, dx_146, bx_29, ds, SEQ(ds, 0x89E<16>), out di_323)
	return
fn0800_0C93_exit:


byte fn0800_0D24(selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0402
//      fn0800_0541
//      fn0800_12E2
//      fn0800_18D9
//      fn0800_19EE
//      fn0800_1CF6
//      fn0800_24FE
//      fn0800_3678
//      fn0800_37DF
//      fn0800_3C99
//      fn0800_3DCF
//      fn0800_3E9A
//      fn0800_4047
//      fn0800_4110
//      fn0800_4152
//      fn0800_4234
//      fn0800_4311
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax:[8..15]-fn0800_3DCF bx:[0..15]-fn0800_0402 cx:[0..15]-fn0800_0402 di:[0..15]-fn0800_0541 ds:[0..15]-fn0800_0402 dx:[0..15]-fn0800_0402 si:[0..15]-fn0800_0541
// Trashed: SCZDO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_0D24_entry:
l0800_0D24:
	fn0800_0DA9(ds, Mem14[ds:0x29DB<16>:word32], SEQ(ds, 0x4477<16>), out dx_210, out ds_24)
	fn0800_0DA9(ds_24, Mem37[ds_24:0x29D7<16>:word32], SEQ(ds_24, 0x4412<16>), out dx_211, out ds_47)
	cx_69 = fn0800_0DA9(ds_47, Mem60[ds_47:0x29D3<16>:word32], SEQ(ds_47, 0x43AD<16>), out dx_71, out ds_70)
	fn0800_B2EF(cx_69, dx_71, wArg02 << 2<16>, ds_70, SEQ(ds_70, 0x8A2<16>), out di_212)
	bx_104 = SLICE(ptrArg04, word16, 0) (alias)
	branch Mem92[ptrArg04:byte] == 0<8> l0800_0D92
l0800_0D83:
	fn0800_B2EF(cx_69, dx_71, bx_104, ds_70, SEQ(ds_70, 0x8A6<16>), out di_213)
l0800_0D92:
	si_140 = fn0800_B2EF(cx_69, dx_71, bx_104, ds_70, SEQ(ds_70, 0x827<16>), out di_139)
	ax_151 = CONVERT(fn0800_8B5A(ds_70, 1<16>, out dx_152), uint8, uint16)
	cxOut = cx_69
	dxOut = dx_152
	bxOut = bx_104
	siOut = si_140
	diOut = di_139
	dsOut = ds_70
	return SLICE(ax_151, byte, 8)
fn0800_0D24_exit:


word16 fn0800_0DA9(selector ds, word32 dwArg02, word32 dwArg06, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0D24
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx:[0..15]-fn0800_0D24 ds:[0..15]-fn0800_0D24 dx:[0..15]-fn0800_0D24
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: P bp sp
fn0800_0DA9_entry:
l0800_0DA9:
	branch dwArg02 == 0<16> l0800_0DCC
l0800_0DB4:
	cx = fn0800_A614(ds, dwArg02, out ds)
	dx = fn0800_8F7F(ds, dwArg06)
l0800_0DCC:
	dxOut = dx
	dsOut = ds
	return cx
fn0800_0DA9_exit:


word16 fn0800_0DCE(word16 cx, word16 dx, word16 bx, selector ds, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0402
//      fn0800_0541
// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: di:[0..15]-fn0800_0541 si:[0..15]-fn0800_0541
// Trashed: SCZDO ax di dx si Top
// Preserved: sp
fn0800_0DCE_entry:
l0800_0DCE:
	si_21 = fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x7E8<16>), out di_20)
	fn0800_8B5A(ds, 0<16>, out dx_53)
	diOut = di_20
	return si_21
fn0800_0DCE_exit:


selector fn0800_0DE8(word16 cx, word16 dx, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds:[0..15]-main
// Trashed: SCZDOP ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_0DE8_entry:
l0800_0DE8:
	bx_18 = Mem17[ds:0x2A25<16>:word16]
	fn0800_B2EF(cx, dx, bx_18 << 2<16>, ds, SEQ(ds, 0x8AC<16>), out di_1012)
	branch Mem32[ds:0x2E4F<16>:word16] == 0<16> l0800_0E2A
l0800_0E1B:
	fn0800_B2EF(cx, dx, bx_18 << 2<16>, ds, SEQ(ds, 0x8BA<16>), out di_1013)
l0800_0E2A:
	branch Mem65[ds:0x2A1F<16>:word16] == 0<16> l0800_0E3C
l0800_0E31:
	fn0800_B2EF(cx, dx, bx_18 << 2<16>, ds, SEQ(ds, 0x8CF<16>), out di_1016)
l0800_0E3C:
	fn0800_B2EF(cx, dx, bx_18 << 2<16>, ds, SEQ(ds, 0x8DC<16>), out di_1014)
	fn0800_37BE(fn0800_3678(ds, SEQ(ds, 0x427E<16>), out dx_118, out si_1015, out ds_117), dx_118, ds_117, SEQ(ds_117, 0x4477<16>))
	ax_159 = fn0800_4234(ds_117, SEQ(ds_117, 0x4477<16>), SEQ(ds_117, 0x8EC<16>), out cx_161, out dx_163, out si_166, out ds_162)
	Mem173[ds_162:0x29DD<16>:word16] = dx_163
	Mem174[ds_162:0x29DB<16>:word16] = ax_159
l0800_10F4:
	branch fn0800_2DE2(cx_161, dx_163, si_166, ds_162, SEQ(ds_162, 0x4541<16>), out cx_1017, out dx_1018, out si_1019, out ds_193) == 0<16> l0800_1106
l0800_1106:
	fn0800_A614(ds_193, Mem182[ds_193:0x29DB<16>:word32], out ds_217)
	fn0800_8F7F(ds_217, SEQ(ds_217, 0x4477<16>))
	return ds_217
fn0800_0DE8_exit:
l0800_1103:
l0800_0E7C:
	fn0800_3764(ds_193)
	branch fn0800_388C(ds_193, out cx_161, out dx_163, out si_166, out ds_162) != 0<16> l0800_0E89
l0800_0E89:
	fn0800_0C93(ds_162, SEQ(ds_162, 0x4541<16>))
	dx_ax_1020 = fn0800_4194(ds_162, Mem272[ds_162:0x29E3<16>:word32])
	dx_294 = SLICE(dx_ax_1020, word16, 16) (alias)
	Mem302[ds_162:0x2A09<16>:word16] = dx_294
	ax_291 = SLICE(dx_ax_1020, word16, 0) (alias)
	Mem303[ds_162:0x2A07<16>:word16] = ax_291
	Mem304[ds_162:0x2A05<16>:word16] = dx_294
	Mem305[ds_162:0x2A03<16>:word16] = ax_291
	sp_301 = fp - 2<16>
	si_166 = 0<16>
	branch Mem305[ds_162:0x2A09<16>:word16] >u 0<16> l0800_0ECF
l0800_0EB9:
	branch Mem305[ds_162:0x2A09<16>:word16] != 0<16> l0800_0EC2
l0800_0EBB:
	branch Mem305[ds_162:0x2A07<16>:word16] >u 0x12<16> l0800_0ECF
l0800_0EC2:
	branch Mem305[ds_162:0x2A15<16>:word16] != 0<16> l0800_0ECF
l0800_0ECF:
	branch fn0800_3992(ds_162, out ds_162) == 0<16> l0800_0EDC
l0800_0EDC:
	bx_336 = Mem305[ds_162:0x2A23<16>:word16]
	branch bx_336 <=u 5<16> l0800_0EE8
l0800_0EE8:
	switch (bx_336) { l0800_0FF4 l0800_0EEF l0800_1002 l0800_0FFB l0800_0FCC l0800_0FED }
l0800_0FED:
	sp_301 = <invalid>
	si_166 = fn0800_67BF(ds_162, out ds_162)
l0800_0FCC:
	branch fn0800_3F0A(ds_162, Mem305[ds_162:0x29E3<16>:word32], out ds_369) != 0x4D5A<16> l0800_0FE6
l0800_0FE6:
	sp_301 = <invalid>
	si_166 = fn0800_669C(ds_369, out ds_162)
l0800_0FDF:
	sp_301 = <invalid>
	si_166 = fn0800_5E64(ds_369, out ds_162)
l0800_0FFB:
	si_166 = fn0800_73AC(ds_162, out ds_162)
l0800_1002:
	si_166 = fn0800_741D(ds_162)
l0800_0EEF:
	branch Mem305[ds_162:0x2A09<16>:word16] <u 0<16> l0800_0F1F
l0800_0EF6:
	branch Mem305[ds_162:0x2A09<16>:word16] != 0<16> l0800_0EFF
l0800_0EF8:
	branch Mem305[ds_162:0x2A07<16>:word16] <u 0x12<16> l0800_0F1F
l0800_0EFF:
	dx_ax_1023 = fn0800_3F58(ds_162, Mem305[ds_162:0x29E3<16>:word32], out di_1024, out ds_162)
	dx_ax_1025 = fn0800_8CAA(SLICE(dx_ax_1023, word16, 0), 8<8>, SLICE(dx_ax_1023, word16, 16))
	sp_301 = <invalid>
	ax_466 = SLICE(dx_ax_1025, word16, 0) (alias)
	branch SLICE(dx_ax_1025, word16, 16) != 0x52<16> l0800_0F1F
l0800_0F17:
	branch ax_466 != 0x4E43<16> l0800_0F1F
l0800_0F1C:
	si_166 = 4<16>
l0800_0F1F:
	branch si_166 == 0<16> l0800_0F26
l0800_0F26:
	sp_493 = sp_301 - 2<i16>
	Mem495[ss:sp_493:word16] = Mem490[ds_162:0x2A09<16>:word16]
	Mem498[ss:sp_493 - 2<i16>:word16] = Mem495[ds_162:0x2A07<16>:word16]
	Mem501[ss:sp_493 - 4<i16>:word16] = Mem498[ds_162:0x2A09<16>:word16]
	Mem504[ss:sp_493 - 6<i16>:word16] = Mem501[ds_162:0x2A07<16>:word16]
	fn0800_75EA(ds_162, Mem504[ss:sp_493 - 6<i16>:word16], Mem504[ss:sp_493 - 4<i16>:word16], Mem504[ss:sp_493 - 2<i16>:word32], out si_166, out ds_162)
	sp_514 = <invalid>
	sp_301 = sp_514 + 8<16>
	ax_520 = Mem504[ds_162:0x2A05<16>:word16]
	dx_521 = Mem504[ds_162:0x2A03<16>:word16]
	branch ax_520 >=u Mem504[ds_162:0x2A09<16>:word16] l0800_0F4C
l0800_0F4C:
	branch ax_520 != Mem504[ds_162:0x2A09<16>:word16] l0800_0F57
l0800_0F4E:
	branch dx_521 >=u Mem504[ds_162:0x2A07<16>:word16] l0800_0F57
l0800_0F57:
	branch Mem504[ds_162:0x2A15<16>:word16] != 0<16> l0800_0F61
l0800_0F61:
	Mem535[ss:sp_514 + 6<16>:word16] = Mem504[ds_162:0x29E5<16>:word16]
	Mem538[ss:sp_514 + 4<16>:word16] = Mem535[ds_162:0x29E3<16>:word16]
	fn0800_BA67(ds_162, Mem538[ss:sp_514 + 4<16>:segptr32])
	Mem553[ss:sp_514 + 6<16>:word16] = Mem538[ds_162:0x29E1<16>:word16]
	Mem556[ss:sp_514 + 4<16>:word16] = Mem553[ds_162:0x29DF<16>:word16]
	fn0800_BA67(ds_162, Mem556[ss:sp_514 + 4<16>:segptr32])
	Mem571[ss:sp_514 + 6<16>:word16] = Mem556[ds_162:0x29E1<16>:word16]
	Mem574[ss:sp_514 + 4<16>:word16] = Mem571[ds_162:0x29DF<16>:word16]
	Mem578[ss:sp_514 + 2<16>:word16] = 0x524E<16>
	Mem580[ss:sp_514:word16] = 0x4300<16>
	ds_585 = fn0800_409C(ds_162, Mem580[ss:sp_514:word16], Mem580[ss:sp_514 + 2<i16>:word16], Mem580[ss:sp_514 + 4<i16>:word32])
	Mem596[ss:sp_514 + 6<16>:word16] = Mem580[ds_585:0x29E1<16>:word16]
	Mem599[ss:sp_514 + 4<16>:word16] = Mem596[ds_585:0x29DF<16>:word16]
	Mem602[ss:sp_514 + 2<16>:word16] = Mem599[ds_585:0x2A09<16>:word16]
	Mem605[ss:sp_514:word16] = Mem602[ds_585:0x2A07<16>:word16]
	ds_610 = fn0800_409C(ds_585, Mem605[ss:sp_514:word16], Mem605[ss:sp_514 + 2<i16>:word16], Mem605[ss:sp_514 + 4<i16>:word32])
	Mem621[ss:sp_514 + 6<16>:word16] = Mem605[ds_610:0x2A09<16>:word16]
	Mem624[ss:sp_514 + 4<16>:word16] = Mem621[ds_610:0x2A07<16>:word16]
	Mem627[ss:sp_514 + 2<16>:word16] = Mem624[ds_610:0x29E1<16>:word16]
	Mem630[ss:sp_514:word16] = Mem627[ds_610:0x29DF<16>:word16]
	Mem633[ss:sp_514 - 2<i16>:word16] = Mem630[ds_610:0x29E5<16>:word16]
	Mem636[ss:sp_514 - 4<i16>:word16] = Mem633[ds_610:0x29E3<16>:word16]
	fn0800_3B0A(ds_610, Mem636[ss:sp_514 + 4<i16>:word16], Mem636[ss:sp_514 + 6<i16>:word16], out si_1026, out ds_162)
	sp_646 = <invalid>
	sp_301 = sp_646 + 0xC<16>
	si_166 = 2<16>
l0800_0F5E:
l0800_0F54:
l0800_0F49:
l0800_0F23:
l0800_0FF4:
	si_166 = fn0800_6AD4(ds_162, out ds_162)
l0800_0EE5:
l0800_1007:
	sp_672 = sp_301 - 2<i16>
	Mem674[ss:sp_672:word16] = Mem669[ds_162:0x29E1<16>:word16]
	Mem677[ss:sp_672 - 2<i16>:word16] = Mem674[ds_162:0x29DF<16>:word16]
	dx_ax_1022 = fn0800_4194(ds_162, Mem677[ss:sp_672 - 2<i16>:word32])
	Mem689[ds_162:0x2A05<16>:word16] = SLICE(dx_ax_1022, word16, 16)
	Mem690[ds_162:0x2A03<16>:word16] = SLICE(dx_ax_1022, word16, 0)
	sp_301 = sp_672 + 2<16>
	ax_691 = Mem690[ds_162:0x2A05<16>:word16]
	dx_692 = Mem690[ds_162:0x2A03<16>:word16]
	branch ax_691 <u Mem690[ds_162:0x2A09<16>:word16] l0800_1049
l0800_1029:
	branch ax_691 != Mem690[ds_162:0x2A09<16>:word16] l0800_1031
l0800_102B:
	branch dx_692 <u Mem690[ds_162:0x2A07<16>:word16] l0800_1049
l0800_1031:
	branch Mem690[ds_162:0x2A15<16>:word16] != 0<16> l0800_1049
l0800_1038:
	dx_703 = Mem690[ds_162:0x2A07<16>:word16]
	Mem704[ds_162:0x2A05<16>:word16] = Mem690[ds_162:0x2A09<16>:word16]
	Mem705[ds_162:0x2A03<16>:word16] = dx_703
	si_166 = 3<16>
l0800_1049:
	branch si_166 != 4<16> l0800_105C
l0800_104E:
	dx_716 = Mem714[ds_162:0x2A07<16>:word16]
	Mem717[ds_162:0x2A05<16>:word16] = Mem714[ds_162:0x2A09<16>:word16]
	Mem718[ds_162:0x2A03<16>:word16] = dx_716
l0800_0ED6:
	si_166 = 0xE<16>
l0800_0EC9:
	si_166 = 3<16>
l0800_105C:
	branch Mem722[ds_162:0x427E<16>:byte] == 0<8> l0800_10B7
l0800_1063:
	branch si_166 == 3<16> l0800_106D
l0800_1068:
	branch si_166 != 4<16> l0800_10B7
l0800_106D:
	dx_733 = Mem722[ds_162:0x2A07<16>:word16]
	Mem734[ds_162:0x2A05<16>:word16] = Mem722[ds_162:0x2A09<16>:word16]
	Mem735[ds_162:0x2A03<16>:word16] = dx_733
	sp_741 = sp_301 - 2<i16>
	Mem746[ss:sp_741:word16] = Mem735[ds_162:0x29E5<16>:word16]
	Mem749[ss:sp_741 - 2<i16>:word16] = Mem746[ds_162:0x29E3<16>:word16]
	fn0800_BA67(ds_162, Mem749[ss:sp_741 - 2<i16>:segptr32])
	Mem764[ss:sp_741:word16] = Mem749[ds_162:0x29E1<16>:word16]
	Mem767[ss:sp_741 - 2<i16>:word16] = Mem764[ds_162:0x29DF<16>:word16]
	fn0800_BA67(ds_162, Mem767[ss:sp_741 - 2<i16>:segptr32])
	Mem782[ss:sp_741:word16] = Mem767[ds_162:0x2A09<16>:word16]
	Mem785[ss:sp_741 - 2<i16>:word16] = Mem782[ds_162:0x2A07<16>:word16]
	Mem788[ss:sp_741 - 4<i16>:word16] = Mem785[ds_162:0x29E1<16>:word16]
	Mem791[ss:sp_741 - 6<i16>:word16] = Mem788[ds_162:0x29DF<16>:word16]
	Mem794[ss:sp_741 - 8<i16>:word16] = Mem791[ds_162:0x29E5<16>:word16]
	Mem797[ss:sp_741 - 10<i16>:word16] = Mem794[ds_162:0x29E3<16>:word16]
	fn0800_3B0A(ds_162, Mem797[ss:sp_741 - 2<i16>:word16], Mem797[ss:sp_741:word16], out si_1021, out ds_162)
	sp_807 = <invalid>
	sp_301 = sp_807 + 0xC<16>
	si_166 = 0<16>
l0800_10B7:
	sp_821 = sp_301 - 2<i16>
	Mem823[ss:sp_821:word16] = Mem818[ds_162:0x29E5<16>:word16]
	Mem826[ss:sp_821 - 2<i16>:word16] = Mem823[ds_162:0x29E3<16>:word16]
	fn0800_A614(ds_162, Mem826[ss:sp_821 - 2<i16>:segptr32], out ds_832)
	Mem842[ss:sp_821:word16] = Mem826[ds_832:0x29E1<16>:word16]
	Mem845[ss:sp_821 - 2<i16>:word16] = Mem842[ds_832:0x29DF<16>:word16]
	fn0800_A614(ds_832, Mem845[ss:sp_821 - 2<i16>:segptr32], out ds_162)
	branch si_166 <= 2<16> l0800_10E5
l0800_10E5:
	si_166 = fn0800_37DF(ds_162, out ds_162)
l0800_10D8:
	Mem874[ss:sp_821:word16] = ds_162
	Mem877[ss:sp_821 - 2<i16>:word16] = 0x44DC<16>
	fn0800_8F7F(ds_162, Mem877[ss:sp_821 - 2<i16>:segptr32])
l0800_10E8:
	sp_887 = sp_301 - 2<i16>
	Mem890[ss:sp_887:word16] = ds_162
	Mem893[ss:sp_887 - 2<i16>:word16] = 0x4541<16>
	Mem896[ss:sp_887 - 4<i16>:word16] = si_166
	cx_161 = fn0800_0ABC(ds_162, Mem896[ss:sp_887 - 2<i16>:word32], out dx_163)
l0800_0E86:


selector fn0800_112D(word16 cx, word16 dx, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds:[0..15]-main
// Trashed: SCZDOP ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_112D_entry:
l0800_112D:
	bx_18 = Mem17[ds:0x2A25<16>:word16]
	fn0800_B2EF(cx, dx, bx_18 << 2<16>, ds, SEQ(ds, 0x8F0<16>), out di_607)
	branch Mem32[ds:0x2E4F<16>:word16] == 0<16> l0800_116F
l0800_1160:
	fn0800_B2EF(cx, dx, bx_18 << 2<16>, ds, SEQ(ds, 0x8FE<16>), out di_609)
l0800_116F:
	si_112 = fn0800_B2EF(cx, dx, bx_18 << 2<16>, ds, SEQ(ds, 0x913<16>), out di_608)
	branch Mem71[ds:0x2A25<16>:word16] == 1<16> l0800_1184
l0800_1184:
	cx = fn0800_3678(ds, SEQ(ds, 0x427E<16>), out dx, out si_112, out ds)
l0800_1181:
l0800_12C2:
	branch fn0800_2DE2(cx, dx, si_112, ds, SEQ(ds, 0x4541<16>), out cx_610, out dx_611, out si_612, out ds_122) == 0<16> l0800_12D4
l0800_12D4:
	return ds_122
fn0800_112D_exit:
l0800_12D1:
l0800_1192:
	fn0800_3764(ds_122)
	branch fn0800_388C(ds_122, out cx, out dx, out si_112, out ds) != 0<16> l0800_119F
l0800_119F:
	fn0800_0C93(ds, SEQ(ds, 0x4541<16>))
	dx_ax_613 = fn0800_4194(ds, Mem169[ds:0x29E3<16>:word32])
	dx_191 = SLICE(dx_ax_613, word16, 16) (alias)
	Mem199[ds:0x2A05<16>:word16] = dx_191
	ax_188 = SLICE(dx_ax_613, word16, 0) (alias)
	Mem200[ds:0x2A03<16>:word16] = ax_188
	sp_198 = fp - 2<16>
	branch dx_191 >u 0<16> l0800_11CF
l0800_11C3:
	branch Test(ULT,false) l0800_11CA
l0800_11C5:
	branch ax_188 >=u 0x12<16> l0800_11CF
l0800_11CF:
	bx_211 = Mem200[ds:0x2A23<16>:word16]
	branch bx_211 >u 5<16> l0800_1243
l0800_11D8:
	switch (bx_211) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
l0800_1229:
	si_112 = fn0800_4BB1(ds, out ds)
l0800_1208:
	sp_198 = fp - 2<16>
	branch fn0800_3F0A(ds, Mem200[ds:0x29E3<16>:word32], out ds_244) != 0x4D5A<16> l0800_1222
l0800_1222:
	si_112 = fn0800_4B97(ds_244, out ds)
l0800_121B:
	sp_198 = <invalid>
	si_112 = fn0800_46FE(ds_244, out ds)
l0800_1237:
	si_112 = fn0800_518F(ds, out ds)
l0800_123E:
	sp_198 = <invalid>
	si_112 = fn0800_51A9(ds, out ds)
l0800_11DF:
	dx_ax_616 = fn0800_3F58(ds, Mem200[ds:0x29E3<16>:word32], out di_617, out ds)
	dx_ax_618 = fn0800_8CAA(SLICE(dx_ax_616, word16, 0), 8<8>, SLICE(dx_ax_616, word16, 16))
	sp_198 = <invalid>
	ax_337 = SLICE(dx_ax_618, word16, 0) (alias)
	branch SLICE(dx_ax_618, word16, 16) != 0x52<16> l0800_1203
l0800_11F7:
	branch ax_337 != 0x4E43<16> l0800_1203
l0800_1203:
	si_112 = 7<16>
l0800_11FC:
	sp_198 = <invalid>
	si_112 = fn0800_5374(ds, out bp_619, out ds)
l0800_1230:
	si_112 = fn0800_4C55(ds, out ds)
l0800_11CA:
	si_112 = 7<16>
l0800_1243:
	sp_391 = sp_198 - 2<i16>
	Mem395[ss:sp_391:word16] = Mem384[ds:0x29E1<16>:word16]
	Mem398[ss:sp_391 - 2<i16>:word16] = Mem395[ds:0x29DF<16>:word16]
	dx_ax_614 = fn0800_4194(ds, Mem398[ss:sp_391 - 2<i16>:word32])
	Mem411[ds:0x2A09<16>:word16] = SLICE(dx_ax_614, word16, 16)
	Mem412[ds:0x2A07<16>:word16] = SLICE(dx_ax_614, word16, 0)
	Mem415[ss:sp_391:word16] = Mem412[ds:0x29E5<16>:word16]
	Mem418[ss:sp_391 - 2<i16>:word16] = Mem415[ds:0x29E3<16>:word16]
	dx_ax_615 = fn0800_4194(ds, Mem418[ss:sp_391 - 2<i16>:word32])
	Mem430[ds:0x2A05<16>:word16] = SLICE(dx_ax_615, word16, 16)
	Mem431[ds:0x2A03<16>:word16] = SLICE(dx_ax_615, word16, 0)
	branch si_112 == 0<16> l0800_127F
l0800_1271:
	dx_440 = Mem431[ds:0x2A03<16>:word16]
	Mem441[ds:0x2A09<16>:word16] = Mem431[ds:0x2A05<16>:word16]
	Mem442[ds:0x2A07<16>:word16] = dx_440
l0800_127F:
	Mem449[ss:sp_391:word16] = Mem444[ds:0x29E5<16>:word16]
	Mem452[ss:sp_391 - 2<i16>:word16] = Mem449[ds:0x29E3<16>:word16]
	fn0800_A614(ds, Mem452[ss:sp_391 - 2<i16>:segptr32], out ds_458)
	Mem468[ss:sp_391:word16] = Mem452[ds_458:0x29E1<16>:word16]
	Mem471[ss:sp_391 - 2<i16>:word16] = Mem468[ds_458:0x29DF<16>:word16]
	fn0800_A614(ds_458, Mem471[ss:sp_391 - 2<i16>:segptr32], out ds)
	branch Mem471[ds:0x2A25<16>:word16] == 2<16> l0800_12A6
l0800_12A2:
	branch si_112 == 0<16> l0800_12B3
l0800_12B3:
	si_112 = fn0800_37DF(ds, out ds)
l0800_12A6:
	Mem508[ss:sp_391:word16] = ds
	Mem511[ss:sp_391 - 2<i16>:word16] = 0x44DC<16>
	fn0800_8F7F(ds, Mem511[ss:sp_391 - 2<i16>:segptr32])
l0800_12B6:
	sp_521 = sp_198 - 2<i16>
	Mem524[ss:sp_521:word16] = ds
	Mem527[ss:sp_521 - 2<i16>:word16] = 0x4541<16>
	Mem531[ss:sp_521 - 4<i16>:word16] = si_112
	cx = fn0800_0ABC(ds, Mem531[ss:sp_521 - 2<i16>:word32], out dx)
l0800_119C:


word16 fn0800_12E2(word16 cx, word16 dx, selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp:[0..15]-main ds:[0..15]-main sp:[0..15]-main
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_12E2_entry:
l0800_12E2:
	bx_22 = Mem21[ds:0x2A25<16>:word16]
	fn0800_B2EF(cx, dx, bx_22 << 2<16>, ds, SEQ(ds, 0x916<16>), out di_2020)
	branch Mem36[ds:0x2E4F<16>:word16] == 0<16> l0800_1321
l0800_1312:
	fn0800_B2EF(cx, dx, bx_22 << 2<16>, ds, SEQ(ds, 0x925<16>), out di_2024)
l0800_1321:
	fn0800_B2EF(cx, dx, bx_22 << 2<16>, ds, SEQ(ds, 0x93A<16>), out di_2021)
	dx_ax_2022 = fn0800_AA7E(ds, SEQ(ds, 0x4348<16>), SEQ(ds, 0x93D<16>), out cx_2023, out ds_102)
	Mem110[ds_102:0x29D1<16>:word16] = SLICE(dx_ax_2022, word16, 16)
	Mem111[ds_102:0x29CF<16>:word16] = SLICE(dx_ax_2022, word16, 0)
	ax_112 = Mem111[ds_102:0x2A25<16>:word16]
	branch ax_112 == 3<16> l0800_1353
l0800_1353:
	branch (Mem111[ds_102:0x29CF<16>:word16] | Mem111[ds_102:0x29D1<16>:word16]) == 0<16> l0800_135F
l0800_135F:
	fn0800_0D24(ds_102, 7<16>, SEQ(ds_102, 0x4348<16>), out cx_2026, out dx_2027, out bx_2028, out si_2029, out di_2030, out ds_102)
l0800_135C:
l0800_134B:
	branch ax_112 == 4<16> l0800_1371
l0800_1371:
	branch (Mem111[ds_102:0x29CF<16>:word16] | Mem111[ds_102:0x29D1<16>:word16]) == 0<16> l0800_13C6
l0800_137A:
	branch fn0800_3E27(ds_102, Mem111[ds_102:0x29CF<16>:word32], out cx_2031, out di_2032, out ds_102) != 0x4D5A<16> l0800_13BA
l0800_13BA:
	Mem172[ds_102:0x29D1<16>:word16] = 0<16>
	Mem173[ds_102:0x29CF<16>:word16] = 0<16>
l0800_138D:
	fn0800_ACB3(ds_102, Mem184[ds_102:0x29CF<16>:word32], 0<32>, 2<16>, out cx_2033)
	dx_ax_2034 = fn0800_AD2F(ds_102, Mem190[ds_102:0x29CF<16>:word32])
	Mem220[ds_102:0x29ED<16>:word16] = SLICE(dx_ax_2034, word16, 16)
	Mem221[ds_102:0x29EB<16>:word16] = SLICE(dx_ax_2034, word16, 0)
l0800_13C6:
	branch (Mem223[ds_102:0x29CF<16>:word16] | Mem223[ds_102:0x29D1<16>:word16]) != 0<16> l0800_13F2
l0800_13CF:
	ax_242 = fn0800_4234(ds_102, SEQ(ds_102, 0x4348<16>), SEQ(ds_102, 0x941<16>), out cx_2044, out dx_246, out si_2045, out ds_102)
	Mem256[ds_102:0x29D1<16>:word16] = dx_246
	Mem257[ds_102:0x29CF<16>:word16] = ax_242
	Mem258[ds_102:0x29ED<16>:word16] = 0<16>
	Mem259[ds_102:0x29EB<16>:word16] = 0<16>
l0800_13F2:
	fn0800_2CCF(ds_102, SEQ(ss, fp - 104<i16>), 4<16>, 0<16>, out cl_2039, out dx_2040)
	fn0800_2CCF(ds_102, SEQ(ss, fp - 104<i16>), 4<16>, 0<16>, out cl_2041, out dx_2042)
	fn0800_4152(ds_102, SEQ(ss, fp - 112<i16>), 0xC<16>, 0<16>, Mem329[ds_102:0x29CF<16>:word32], out si_2043, out ds_354)
	ds_102 = fn0800_409C(ds_354, Mem372[ds_354:0x29EB<16>:word16], Mem369[ds_354:0x29ED<16>:word16], Mem349[ds_354:0x29CF<16>:word32])
l0800_1350:
l0800_1478:
	sp_407 = <invalid>
	cx_1812 = fn0800_1CF6(ds_102, 0<16>, out dx_404, out bp_1804, out si_2025, out ds_403)
	sp_413 = sp_407 + 2<16>
	si_414 = 0<16>
l0800_1527:
	sp_419 = sp_413 - 2<i16>
	Mem422[ss:sp_419:word16] = ds_403
	Mem425[ss:sp_419 - 2<i16>:word16] = 0x4541<16>
	sp_413 = sp_419 + 2<16>
	branch fn0800_2DE2(cx_1812, dx_404, si_414, ds_403, Mem425[ss:sp_419 - 2<i16>:segptr32], out cx_2035, out dx_2036, out si_414, out ds_403) == 0<16> l0800_1539
l0800_1536:
l0800_1486:
	Mem450[ss:sp_419:word16] = ds_403
	Mem453[ss:sp_419 - 2<i16>:word16] = 0x4541<16>
	Mem455[ss:sp_419 - 4<i16>:word16] = ss
	Mem459[ss:sp_419 - 6<i16>:word16] = bp_1804 - 110<i16>
	fn0800_3509(Mem459[ss:sp_419 - 6<i16>:word16], Mem459[ss:sp_419 - 4<i16>:selector], Mem459[ss:sp_419 - 2<i16>:word32], out bx_2037)
	Mem473[ss:sp_419:word16] = ds_403
	Mem476[ss:sp_419 - 2<i16>:word16] = 0x4541<16>
	Mem478[ss:sp_419 - 4<i16>:word16] = ss
	Mem481[ss:sp_419 - 6<i16>:word16] = bp_1804 - 0x84<16>
	fn0800_35A3(Mem481[ss:sp_419 - 6<i16>:word16], Mem481[ss:sp_419 - 4<i16>:selector], Mem481[ss:sp_419 - 2<i16>:word32], out dx_2038)
	Mem495[ss:sp_419:word16] = ss
	Mem498[ss:sp_419 - 2<i16>:word16] = bp_1804 - 110<i16>
	ax_499 = fn0800_283D(ds_403, Mem498[ss:sp_419 - 2<i16>:segptr32], out dx_502)
	Mem509[ss:bp_1804 - 2<i16>:word16] = dx_502
	Mem510[ss:bp_1804 - 4<i16>:word16] = ax_499
	branch (ax_499 | dx_502) != 0<16> l0800_14CD
l0800_14BC:
	Mem517[ss:sp_419:word16] = ss
	Mem520[ss:sp_419 - 2<i16>:word16] = bp_1804 - 110<i16>
	ax_521 = fn0800_1F5C(ds_403, Mem520[ss:sp_419 - 2<i16>:segptr32], out dx_526, out ds_403)
	Mem535[ss:bp_1804 - 2<i16>:word16] = dx_526
	Mem536[ss:bp_1804 - 4<i16>:word16] = ax_521
l0800_14CD:
	sp_542 = sp_413 - 2<i16>
	Mem543[ss:sp_542:word16] = Mem539[ss:bp_1804 - 2<i16>:word16]
	Mem546[ss:sp_542 - 2<i16>:word16] = Mem543[ss:bp_1804 - 4<i16>:word16]
	Mem548[ss:sp_542 - 4<i16>:word16] = ss
	Mem551[ss:sp_542 - 6<i16>:word16] = bp_1804 - 0x84<16>
	ax_552 = fn0800_2931(Mem551[ss:sp_542 - 6<i16>:segptr32], Mem551[ss:sp_542 - 2<i16>:segptr32], out dx_555)
	Mem562[ss:bp_1804 - 6<i16>:word16] = dx_555
	Mem563[ss:bp_1804 - 8<i16>:word16] = ax_552
	branch (ax_552 | dx_555) != 0<16> l0800_14FD
l0800_14FD:
	Mem571[ss:sp_542:word16] = Mem563[ss:bp_1804 - 6<i16>:word16]
	Mem574[ss:sp_542 - 2<i16>:word16] = Mem571[ss:bp_1804 - 8<i16>:word16]
	sp_585 = <invalid>
	ch_1809 = SLICE(CONVERT(fn0800_23EC(ds_403, Mem574[ss:sp_542 - 2<i16>:segptr32], out bp_1804, out si_2046, out ds_403), uint8, uint16), byte, 8) (alias)
	sp_413 = sp_585 + 4<16>
l0800_14E9:
	Mem596[ss:sp_542:word16] = Mem563[ss:bp_1804 - 2<i16>:word16]
	Mem599[ss:sp_542 - 2<i16>:word16] = Mem596[ss:bp_1804 - 4<i16>:word16]
	Mem601[ss:sp_542 - 4<i16>:word16] = ss
	Mem604[ss:sp_542 - 6<i16>:word16] = bp_1804 - 0x84<16>
	ch_1809 = SLICE(CONVERT(fn0800_2085(ds_403, Mem604[ss:sp_542 - 6<i16>:segptr32], Mem604[ss:sp_542 - 2<i16>:segptr32]), uint8, uint16), byte, 8) (alias)
	sp_413 = sp_542 + 2<16>
l0800_1509:
	es_bx_621 = Mem620[ds_403:0x2E51<16>:segptr32]
	dx_404 = CONVERT(Mem620[es_bx_621 + 5<i16>:byte], uint8, uint16) (alias)
	si_414 = 1<16>
	cx_1812 = SEQ(ch_1809, 8<8>) (alias)
	branch (CONVERT(Mem620[es_bx_621 + 4<i16>:byte], uint8, uint16) << 8<8>) + dx_404 >=u 0xFF8C<16> l0800_1539
l0800_1539:
	branch si_414 != 0<16> l0800_1551
l0800_1551:
	fn0800_1E5E(ds_403, out ds_648)
	sp_660 = sp_413 - 2<i16>
	Mem661[ss:sp_660:word16] = 1<16>
	cx_665 = fn0800_1CF6(ds_648, Mem661[ss:sp_660:word16], out dx_2047, out bp_1358, out si_2048, out ds_667)
	sp_671 = <invalid>
	Mem680[ss:sp_671:word16] = 1<16>
	Mem686[ss:sp_671 - 2<i16>:word16] = 0<16>
	fn0800_2DBF(ds_667, Mem686[ss:sp_671 - 2<i16>:word16], Mem686[ss:sp_671:word16])
	dx_691 = Mem686[ds_667:0x29CF<16>:word16]
	Mem692[ds_667:0x29E1<16>:word16] = Mem686[ds_667:0x29D1<16>:word16]
	Mem693[ds_667:0x29DF<16>:word16] = dx_691
	Mem695[ss:sp_671:word16] = ds_667
	Mem698[ss:sp_671 - 2<i16>:word16] = 0x945<16>
	Mem700[ss:sp_671 - 4<i16>:word16] = ds_667
	Mem703[ss:sp_671 - 6<i16>:word16] = 0x4477<16>
	fn0800_37BE(cx_665, dx_691, ds_667, Mem703[ss:sp_671 - 6<i16>:word32])
	Mem717[ss:sp_671:word16] = ds_667
	Mem720[ss:sp_671 - 2<i16>:word16] = 0x941<16>
	Mem722[ss:sp_671 - 4<i16>:word16] = ds_667
	Mem725[ss:sp_671 - 6<i16>:word16] = 0x4477<16>
	ax_726 = fn0800_4234(ds_667, Mem725[ss:sp_671 - 6<i16>:word32], Mem725[ss:sp_671 - 2<i16>:word32], out cx_1696, out dx_1686, out si_1237, out ds_1643)
	Mem740[ds_1643:0x29DD<16>:word16] = dx_1686
	Mem741[ds_1643:0x29DB<16>:word16] = ax_726
	sp_1675 = sp_671 + 2<16>
l0800_1897:
	sp_743 = sp_1675 - 2<i16>
	Mem746[ss:sp_743:word16] = ds_1643
	Mem749[ss:sp_743 - 2<i16>:word16] = 0x4541<16>
	sp_1705 = sp_743 + 2<16>
	branch fn0800_2DE2(cx_1696, dx_1686, si_1237, ds_1643, Mem749[ss:sp_743 - 2<i16>:segptr32], out cx_2049, out dx_2050, out si_2051, out ds_1643) == 0<16> l0800_18A9
l0800_18A6:
l0800_15A3:
	Mem774[ss:sp_743:word16] = ds_1643
	Mem777[ss:sp_743 - 2<i16>:word16] = 0x93D<16>
	Mem779[ss:sp_743 - 4<i16>:word16] = ds_1643
	Mem782[ss:sp_743 - 6<i16>:word16] = 0x4541<16>
	ax_783 = fn0800_4234(ds_1643, Mem782[ss:sp_743 - 6<i16>:word32], Mem782[ss:sp_743 - 2<i16>:word32], out cx_2052, out dx_787, out si_2053, out ds_1317)
	Mem797[ds_1317:0x29E5<16>:word16] = dx_787
	Mem798[ds_1317:0x29E3<16>:word16] = ax_783
	Mem800[ss:sp_743:word16] = ds_1317
	Mem803[ss:sp_743 - 2<i16>:word16] = 0x4541<16>
	Mem805[ss:sp_743 - 4<i16>:word16] = ss
	Mem809[ss:sp_743 - 6<i16>:word16] = bp_1358 - 110<i16>
	fn0800_3509(Mem809[ss:sp_743 - 6<i16>:word16], Mem809[ss:sp_743 - 4<i16>:selector], Mem809[ss:sp_743 - 2<i16>:word32], out bx_2054)
	Mem823[ss:sp_743:word16] = ds_1317
	Mem826[ss:sp_743 - 2<i16>:word16] = 0x4541<16>
	Mem828[ss:sp_743 - 4<i16>:word16] = ss
	Mem831[ss:sp_743 - 6<i16>:word16] = bp_1358 - 0x84<16>
	fn0800_35A3(Mem831[ss:sp_743 - 6<i16>:word16], Mem831[ss:sp_743 - 4<i16>:selector], Mem831[ss:sp_743 - 2<i16>:word32], out dx_2055)
	Mem845[ss:sp_743:word16] = ds_1317
	Mem848[ss:sp_743 - 2<i16>:word16] = 0x4541<16>
	fn0800_0C93(ds_1317, Mem848[ss:sp_743 - 2<i16>:word32])
	Mem862[ss:sp_743:word16] = ss
	Mem865[ss:sp_743 - 2<i16>:word16] = bp_1358 - 110<i16>
	ax_866 = fn0800_283D(ds_1317, Mem865[ss:sp_743 - 2<i16>:segptr32], out dx_869)
	Mem878[ss:sp_743:word16] = dx_869
	Mem880[ss:sp_743 - 2<i16>:word16] = ax_866
	Mem882[ss:sp_743 - 4<i16>:word16] = ss
	Mem885[ss:sp_743 - 6<i16>:word16] = bp_1358 - 0x84<16>
	ax_886 = fn0800_2931(Mem885[ss:sp_743 - 6<i16>:segptr32], Mem885[ss:sp_743 - 2<i16>:segptr32], out dx_889)
	Mem897[ss:bp_1358 - 6<i16>:word16] = dx_889
	Mem898[ss:bp_1358 - 8<i16>:word16] = ax_886
	Mem901[ss:sp_743:word16] = Mem898[ds_1317:0x29D1<16>:word16]
	Mem904[ss:sp_743 - 2<i16>:word16] = Mem901[ds_1317:0x29CF<16>:word16]
	dx_ax_2018 = fn0800_4194(ds_1317, Mem904[ss:sp_743 - 2<i16>:word32])
	Mem921[ds_1317:0x29E9<16>:word16] = SLICE(dx_ax_2018 - 4<32>, word16, 16)
	Mem922[ds_1317:0x29E7<16>:word16] = SLICE(dx_ax_2018, word16, 0) - 4<16>
	dx_ax_924 = CONVERT(Mem922[ds_1317:0x29E9<16>:word16], int16, int32)
	ax_928 = fn0800_8C8A(SLICE(dx_ax_924, word16, 0), 8<8>, SLICE(dx_ax_924, word16, 16), out cl_2056, out dx_2057)
	es_di_937 = Mem922[ss:bp_1358 - 8<i16>:segptr32]
	sp_932 = <invalid>
	Mem939[ss:sp_932 - 2<i16>:word16] = ax_928
	es_1825 = SLICE(es_di_937, selector, 16) (alias)
	di_1826 = SLICE(es_di_937, word16, 0) (alias)
	cx_944 = 0xFFFF<16>
l0800_1632:
	branch cx_944 == 0<16> l0800_1634
l0800_1632_1:
	di_1826 = di_1826 + 1<i16>
	cx_944 = cx_944 - 1<16>
	branch Mem939[es_1825:di_1826:byte] == 0<8> l0800_1632
l0800_1634:
	cx_955 = ~cx_944
	di_2072 = di_1826 - cx_955
	v100_1852 = di_2072 == 0<16>
l0800_163A:
	branch cx_955 == 0<16> l0800_163C
l0800_163A_2:
	v100_1852 = Mem939[es_1825:di_2072:byte] == 0<8>
	di_2072 = di_2072 + 1<i16>
	cx_955 = cx_955 - 1<16>
	branch Mem939[es_1825:di_2072:byte] == 0<8> l0800_163A
l0800_163C:
	branch v100_1852 l0800_1645
l0800_163E:
	di_2072 = 1<16>
	es_1825 = 0<16>
l0800_1645:
	Mem1000[es_1825:di_2072:byte] = Mem939[ss:sp_932 + 2<i16>:byte]
	es_di_1013 = Mem1000[ss:bp_1358 - 8<i16>:segptr32]
	Mem1016[ss:sp_932 - 2<i16>:word16] = Mem1000[ds_1317:0x29E9<16>:word16]
	es_1054 = SLICE(es_di_1013, selector, 16) (alias)
	di_1025 = SLICE(es_di_1013, word16, 0) (alias)
	cx_1021 = 0xFFFF<16>
l0800_165C:
	branch cx_1021 == 0<16> l0800_165E
l0800_165C_1:
	di_1025 = di_1025 + 1<i16>
	cx_1021 = cx_1021 - 1<16>
	branch Mem1016[es_1054:di_1025:byte] == 0<8> l0800_165C
l0800_165E:
	cx_1032 = ~cx_1021
	di_1035 = di_1025 - cx_1032
	v104_1856 = di_1035 == 0<16>
l0800_1664:
	branch cx_1032 == 0<16> l0800_1666
l0800_1664_2:
	v104_1856 = Mem1016[es_1054:di_1035:byte] == 0<8>
	di_1035 = di_1035 + 1<i16>
	cx_1032 = cx_1032 - 1<16>
	branch Mem1016[es_1054:di_1035:byte] == 0<8> l0800_1664
l0800_1666:
	branch v104_1856 l0800_166F
l0800_1668:
	di_1035 = 1<16>
	es_1054 = 0<16>
l0800_166F:
	Mem1078[es_1054:di_1035 + 1<16>:byte] = Mem1016[ss:sp_932 + 2<i16>:byte]
	ax_1087 = fn0800_8C8A(Mem1078[ds_1317:0x29E7<16>:word16], 8<8>, Mem1078[ds_1317:0x29E9<16>:word16], out cl_2058, out dx_2059)
	es_di_1101 = Mem1078[ss:bp_1358 - 8<i16>:segptr32]
	sp_1091 = <invalid>
	Mem1103[ss:sp_1091 - 2<i16>:word16] = ax_1087
	es_1141 = SLICE(es_di_1101, selector, 16) (alias)
	di_1112 = SLICE(es_di_1101, word16, 0) (alias)
	cx_1108 = 0xFFFF<16>
l0800_168E:
	branch cx_1108 == 0<16> l0800_1690
l0800_168E_1:
	di_1112 = di_1112 + 1<i16>
	cx_1108 = cx_1108 - 1<16>
	branch Mem1103[es_1141:di_1112:byte] == 0<8> l0800_168E
l0800_1690:
	cx_1119 = ~cx_1108
	di_1122 = di_1112 - cx_1119
	v108_1860 = di_1122 == 0<16>
l0800_1696:
	branch cx_1119 == 0<16> l0800_1698
l0800_1696_2:
	v108_1860 = Mem1103[es_1141:di_1122:byte] == 0<8>
	di_1122 = di_1122 + 1<i16>
	cx_1119 = cx_1119 - 1<16>
	branch Mem1103[es_1141:di_1122:byte] == 0<8> l0800_1696
l0800_1698:
	branch v108_1860 l0800_16A1
l0800_169A:
	di_1122 = 1<16>
	es_1141 = 0<16>
l0800_16A1:
	Mem1164[es_1141:di_1122 + 2<16>:byte] = Mem1103[ss:sp_1091 + 2<i16>:byte]
	es_di_1170 = Mem1164[ss:bp_1358 - 8<i16>:segptr32]
	es_1208 = SLICE(es_di_1170, selector, 16) (alias)
	di_1179 = SLICE(es_di_1170, word16, 0) (alias)
	cx_1175 = 0xFFFF<16>
l0800_16B3:
	branch cx_1175 == 0<16> l0800_16B5
l0800_16B3_1:
	di_1179 = di_1179 + 1<i16>
	cx_1175 = cx_1175 - 1<16>
	branch Mem1164[es_1208:di_1179:byte] == 0<8> l0800_16B3
l0800_16B5:
	cx_1186 = ~cx_1175
	di_1189 = di_1179 - cx_1186
	v112_1864 = di_1189 == 0<16>
l0800_16BB:
	branch cx_1186 == 0<16> l0800_16BD
l0800_16BB_2:
	v112_1864 = Mem1164[es_1208:di_1189:byte] == 0<8>
	di_1189 = di_1189 + 1<i16>
	cx_1186 = cx_1186 - 1<16>
	branch Mem1164[es_1208:di_1189:byte] == 0<8> l0800_16BB
l0800_16BD:
	branch v112_1864 l0800_16C6
l0800_16BF:
	di_1189 = 1<16>
	es_1208 = 0<16>
l0800_16C6:
	Mem1229[es_1208:di_1189 + 3<16>:byte] = Mem1164[ds_1317:0x29E7<16>:byte]
	Mem1235[ds_1317:0x2A05<16>:word16] = 0<16>
	Mem1236[ds_1317:0x2A03<16>:word16] = 0<16>
	Mem1250[ss:sp_1091 - 2<i16>:word16] = Mem1236[ds_1317:0x29E5<16>:word16]
	Mem1253[ss:sp_1091 - 4<i16>:word16] = Mem1250[ds_1317:0x29E3<16>:word16]
	dx_ax_2060 = fn0800_4194(ds_1317, Mem1253[ss:sp_1091 - 4<i16>:word32])
	Mem1265[ds_1317:0x2A09<16>:word16] = SLICE(dx_ax_2060, word16, 16)
	Mem1266[ds_1317:0x2A07<16>:word16] = SLICE(dx_ax_2060, word16, 0)
	Mem1272[ss:sp_1091 - 2<i16>:word16] = 0<16>
	Mem1275[ss:sp_1091 - 4<i16>:word16] = Mem1272[ds_1317:0x29E9<16>:word16]
	Mem1278[ss:sp_1091 - 6<i16>:word16] = Mem1275[ds_1317:0x29E7<16>:word16]
	Mem1281[ss:sp_1091 - 8<i16>:word16] = Mem1278[ds_1317:0x29E1<16>:word16]
	Mem1284[ss:sp_1091 - 10<i16>:word16] = Mem1281[ds_1317:0x29DF<16>:word16]
	fn0800_ACB3(ds_1317, Mem1284[ss:sp_1091 - 10<i16>:segptr32], Mem1284[ss:sp_1091 - 6<i16>:ui32], Mem1284[ss:sp_1091 - 2<i16>:word16], out cx_2061)
	di_1230 = 1<16>
	si_1237 = 0<16>
	sp_1295 = sp_1091
	branch Mem1284[ds_1317:0x2A09<16>:word16] >=u 0<16> l0800_171B
l0800_171B:
	branch Mem1284[ds_1317:0x2A09<16>:word16] >u 0<16> l0800_1724
l0800_171D:
	branch Mem1284[ds_1317:0x2A07<16>:word16] <=u 0x12<16> l0800_17A2
l0800_1724:
	branch Mem1284[ds_1317:0x2A21<16>:word16] == 0<16> l0800_17A2
l0800_172B:
	Mem1309[ss:sp_1091 - 2<i16>:word16] = Mem1284[ds_1317:0x29E5<16>:word16]
	Mem1312[ss:sp_1091 - 4<i16>:word16] = Mem1309[ds_1317:0x29E3<16>:word16]
	dx_ax_2063 = fn0800_3F58(ds_1317, Mem1312[ss:sp_1091 - 4<i16>:word32], out di_1230, out ds_1317)
	dx_ax_2064 = fn0800_8CAA(SLICE(dx_ax_2063, word16, 0), 8<8>, SLICE(dx_ax_2063, word16, 16))
	sp_1295 = <invalid>
	ax_1328 = SLICE(dx_ax_2064, word16, 0) (alias)
	branch SLICE(dx_ax_2064, word16, 16) != 0x52<16> l0800_1748
l0800_1743:
	branch ax_1328 == 0x4E43<16> l0800_17A2
l0800_1748:
	Mem1347[ss:sp_1295 - 2<i16>:word16] = Mem1312[ds_1317:0x2A09<16>:word16]
	Mem1350[ss:sp_1295 - 4<i16>:word16] = Mem1347[ds_1317:0x2A07<16>:word16]
	Mem1353[ss:sp_1295 - 6<i16>:word16] = Mem1350[ds_1317:0x2A09<16>:word16]
	Mem1356[ss:sp_1295 - 8<i16>:word16] = Mem1353[ds_1317:0x2A07<16>:word16]
	sp_1366 = <invalid>
	bp_1358 = fn0800_75EA(ds_1317, Mem1356[ss:sp_1295 - 8<i16>:word16], Mem1356[ss:sp_1295 - 6<i16>:word16], Mem1356[ss:sp_1295 - 4<i16>:word32], out si_1237, out ds_1317)
	sp_1295 = sp_1366 + 8<16>
	ax_1372 = Mem1356[ds_1317:0x2A05<16>:word16]
	dx_1373 = Mem1356[ds_1317:0x2A03<16>:word16]
	branch ax_1372 <u Mem1356[ds_1317:0x2A09<16>:word16] l0800_1778
l0800_176B:
	branch ax_1372 != Mem1356[ds_1317:0x2A09<16>:word16] l0800_1773
l0800_176D:
	branch dx_1373 <u Mem1356[ds_1317:0x2A07<16>:word16] l0800_1778
l0800_1778:
	ax_1379 = 0<16>
l0800_1773:
	ax_1379 = 1<16>
l0800_177A:
	di_1230 = ax_1379
	branch ax_1379 == 0<16> l0800_17A2
l0800_1780:
	Mem1399[ss:sp_1366 + 6<16>:word16] = 1<16>
	ax_dx_1851 = -Mem1399[ds_1317:0x2A03<16>:ui32]
	Mem1411[ss:sp_1366 + 4<16>:word16] = SLICE(ax_dx_1851, word16, 16)
	Mem1413[ss:sp_1366 + 2<16>:word16] = SLICE(ax_dx_1851, word16, 0)
	Mem1416[ss:sp_1366:word16] = Mem1413[ds_1317:0x29E1<16>:word16]
	Mem1419[ss:sp_1366 - 2<i16>:word16] = Mem1416[ds_1317:0x29DF<16>:word16]
	fn0800_ACB3(ds_1317, Mem1419[ss:sp_1366 - 2<i16>:segptr32], Mem1419[ss:sp_1366 + 2<i16>:ui32], Mem1419[ss:sp_1366 + 6<i16>:word16], out cx_2066)
	sp_1295 = sp_1366 + 8<16>
l0800_1718:
l0800_17A2:
	branch di_1230 != 0<16> l0800_17A9
l0800_17A9:
	dx_1445 = Mem1440[ds_1317:0x2A07<16>:word16]
	Mem1446[ds_1317:0x2A05<16>:word16] = Mem1440[ds_1317:0x2A09<16>:word16]
	Mem1447[ds_1317:0x2A03<16>:word16] = dx_1445
	sp_1450 = sp_1295 - 2<i16>
	Mem1452[ss:sp_1450:word16] = Mem1447[ds_1317:0x29E5<16>:word16]
	Mem1455[ss:sp_1450 - 2<i16>:word16] = Mem1452[ds_1317:0x29E3<16>:word16]
	fn0800_BA67(ds_1317, Mem1455[ss:sp_1450 - 2<i16>:segptr32])
	sp_1466 = sp_1450 + 2<16>
	branch Mem1455[ds_1317:0x2A09<16>:word16] <u 0<16> l0800_17F2
l0800_17CC:
	branch Mem1455[ds_1317:0x2A09<16>:word16] != 0<16> l0800_17D5
l0800_17CE:
	branch Mem1455[ds_1317:0x2A07<16>:word16] <u 0x12<16> l0800_17F2
l0800_17D5:
	Mem1478[ss:sp_1450:word16] = Mem1455[ds_1317:0x29E5<16>:word16]
	Mem1481[ss:sp_1450 - 2<i16>:word16] = Mem1478[ds_1317:0x29E3<16>:word16]
	dx_ax_2067 = fn0800_3F58(ds_1317, Mem1481[ss:sp_1450 - 2<i16>:word32], out di_2068, out ds_1317)
	dx_ax_2069 = fn0800_8CAA(SLICE(dx_ax_2067, word16, 0), 8<8>, SLICE(dx_ax_2067, word16, 16))
	sp_1466 = <invalid>
	ax_1497 = SLICE(dx_ax_2069, word16, 0) (alias)
	branch SLICE(dx_ax_2069, word16, 16) != 0x52<16> l0800_17F2
l0800_17ED:
	branch ax_1497 == 0x4E43<16> l0800_181E
l0800_17F2:
	sp_1514 = sp_1466 - 2<i16>
	Mem1516[ss:sp_1514:word16] = Mem1511[ds_1317:0x29D1<16>:word16]
	Mem1519[ss:sp_1514 - 2<i16>:word16] = Mem1516[ds_1317:0x29CF<16>:word16]
	Mem1523[ss:sp_1514 - 4<i16>:word16] = 0x524E<16>
	Mem1525[ss:sp_1514 - 6<i16>:word16] = 0x4300<16>
	ds_1530 = fn0800_409C(ds_1317, Mem1525[ss:sp_1514 - 6<i16>:word16], Mem1525[ss:sp_1514 - 4<i16>:word16], Mem1525[ss:sp_1514 - 2<i16>:word32])
	Mem1541[ss:sp_1514:word16] = Mem1525[ds_1530:0x29D1<16>:word16]
	Mem1544[ss:sp_1514 - 2<i16>:word16] = Mem1541[ds_1530:0x29CF<16>:word16]
	Mem1547[ss:sp_1514 - 4<i16>:word16] = Mem1544[ds_1530:0x2A09<16>:word16]
	Mem1550[ss:sp_1514 - 6<i16>:word16] = Mem1547[ds_1530:0x2A07<16>:word16]
	ds_1317 = fn0800_409C(ds_1530, Mem1550[ss:sp_1514 - 6<i16>:word16], Mem1550[ss:sp_1514 - 4<i16>:word16], Mem1550[ss:sp_1514 - 2<i16>:word32])
	sp_1466 = sp_1514 + 2<16>
l0800_181E:
	sp_1568 = sp_1466 - 2<i16>
	Mem1570[ss:sp_1568:word16] = Mem1565[ds_1317:0x2A09<16>:word16]
	Mem1573[ss:sp_1568 - 2<i16>:word16] = Mem1570[ds_1317:0x2A07<16>:word16]
	Mem1576[ss:sp_1568 - 4<i16>:word16] = Mem1573[ds_1317:0x29D1<16>:word16]
	Mem1579[ss:sp_1568 - 6<i16>:word16] = Mem1576[ds_1317:0x29CF<16>:word16]
	Mem1582[ss:sp_1568 - 8<i16>:word16] = Mem1579[ds_1317:0x29E5<16>:word16]
	Mem1585[ss:sp_1568 - 10<i16>:word16] = Mem1582[ds_1317:0x29E3<16>:word16]
	sp_1595 = <invalid>
	bp_1358 = fn0800_3B0A(ds_1317, Mem1585[ss:sp_1568 - 2<i16>:word16], Mem1585[ss:sp_1568:word16], out si_2070, out ds_1317)
	sp_1295 = sp_1595 + 0xC<16>
	si_1237 = 2<16>
l0800_17A6:
l0800_183F:
	sp_1607 = sp_1295 - 2<i16>
	Mem1609[ss:sp_1607:word16] = Mem1604[ds_1317:0x29D1<16>:word16]
	Mem1612[ss:sp_1607 - 2<i16>:word16] = Mem1609[ds_1317:0x29CF<16>:word16]
	Mem1615[ss:sp_1607 - 4<i16>:word16] = Mem1612[ds_1317:0x29ED<16>:word16]
	Mem1618[ss:sp_1607 - 6<i16>:word16] = Mem1615[ds_1317:0x29EB<16>:word16]
	ds_1623 = fn0800_409C(ds_1317, Mem1618[ss:sp_1607 - 6<i16>:word16], Mem1618[ss:sp_1607 - 4<i16>:word16], Mem1618[ss:sp_1607 - 2<i16>:word32])
	Mem1634[ss:sp_1607:word16] = Mem1618[ds_1623:0x29E5<16>:word16]
	Mem1637[ss:sp_1607 - 2<i16>:word16] = Mem1634[ds_1623:0x29E3<16>:word16]
	fn0800_A614(ds_1623, Mem1637[ss:sp_1607 - 2<i16>:segptr32], out ds_1643)
	Mem1652[ss:sp_1607:word16] = ds_1643
	Mem1655[ss:sp_1607 - 2<i16>:word16] = 0x4541<16>
	Mem1663[ss:sp_1607 - 4<i16>:word16] = si_1237
	ch_1695 = SLICE(fn0800_0ABC(ds_1643, Mem1663[ss:sp_1607 - 2<i16>:word32], out dx_2062), byte, 8) (alias)
	es_bx_1676 = Mem1663[ds_1643:0x2E51<16>:segptr32]
	dx_1686 = CONVERT(Mem1663[es_bx_1676 + 5<i16>:byte], uint8, uint16) (alias)
	sp_1675 = sp_1607 + 2<16>
	bx_1678 = SLICE(es_bx_1676, word16, 0) (alias)
	cx_1696 = SEQ(ch_1695, 8<8>) (alias)
	branch (CONVERT(Mem1663[es_bx_1676 + 4<i16>:byte], uint8, uint16) << 8<8>) + dx_1686 <u 0xFF8C<16> l0800_1897
l0800_188A:
	Mem1691[ss:sp_1607:word16] = ds_1643
	Mem1694[ss:sp_1607 - 2<i16>:word16] = 0x952<16>
	fn0800_B2EF(cx_1696, dx_1686, bx_1678, ds_1643, Mem1694[ss:sp_1607 - 2<i16>:word32], out di_2065)
	sp_1705 = sp_1607 + 2<16>
l0800_18A9:
	sp_1711 = sp_1705 - 2<i16>
	Mem1713[ss:sp_1711:word16] = Mem1708[ds_1643:0x29DD<16>:word16]
	Mem1716[ss:sp_1711 - 2<i16>:word16] = Mem1713[ds_1643:0x29DB<16>:word16]
	fn0800_A614(ds_1643, Mem1716[ss:sp_1711 - 2<i16>:segptr32], out ds_1722)
	Mem1731[ss:sp_1711:word16] = ds_1722
	Mem1734[ss:sp_1711 - 2<i16>:word16] = 0x4477<16>
	fn0800_8F7F(ds_1722, Mem1734[ss:sp_1711 - 2<i16>:segptr32])
	bp_1750 = fn0800_1E5E(ds_1722, out ds_1747)
	Mem1758[ss:sp_1711:word16] = Mem1734[ds_1747:0x29D1<16>:word16]
	Mem1761[ss:sp_1711 - 2<i16>:word16] = Mem1758[ds_1747:0x29CF<16>:word16]
	fn0800_A614(ds_1747, Mem1761[ss:sp_1711 - 2<i16>:segptr32], out ds_1767)
	bp_1779 = Mem1761[ss:bp_1750:word16]
	dsOut = ds_1767
	return bp_1779
l0800_153D:
	sp_1783 = sp_413 - 2<i16>
	Mem1784[ss:sp_1783:word16] = Mem1781[ds_403:0x29D1<16>:word16]
	Mem1787[ss:sp_1783 - 2<i16>:word16] = Mem1784[ds_403:0x29CF<16>:word16]
	fn0800_A614(ds_403, Mem1787[ss:sp_1783 - 2<i16>:segptr32], out ds_1793)
	bp_1807 = Mem1787[ss:bp_1804:word16]
	dsOut = ds_1793
	return bp_1807
fn0800_12E2_exit:


word16 fn0800_18D9(word16 cx, word16 dx, selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp:[0..15]-main ds:[0..15]-main sp:[0..15]-main
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_18D9_entry:
l0800_18D9:
	fn0800_B2EF(cx, dx, Mem18[ds:0x2A25<16>:word16] << 2<16>, ds, SEQ(ds, 0x96C<16>), out di_443)
	dx_ax_444 = fn0800_AA7E(ds, SEQ(ds, 0x4348<16>), SEQ(ds, 0x97D<16>), out cx_445, out ds_102)
	dx_60 = SLICE(dx_ax_444, word16, 16) (alias)
	Mem67[ds_102:0x29D1<16>:word16] = dx_60
	ax_56 = SLICE(dx_ax_444, word16, 0) (alias)
	Mem68[ds_102:0x29CF<16>:word16] = ax_56
	branch dx_ax_444 != 0<16> l0800_192A
l0800_191B:
	fn0800_0D24(ds_102, 7<16>, SEQ(ds_102, 0x4348<16>), out cx_446, out dx_447, out bx_448, out si_449, out di_450, out ds_102)
l0800_192A:
	cx_106 = fn0800_1CF6(ds_102, 1<16>, out dx_109, out bp_104, out si_111, out ds_108)
	sp_112 = <invalid>
	Mem124[ss:sp_112:word16] = 0<16>
	Mem126[ss:sp_112 - 2<i16>:word16] = 0<16>
	fn0800_2DBF(ds_108, Mem126[ss:sp_112 - 2<i16>:word16], Mem126[ss:sp_112:word16])
	sp_128 = sp_112 + 2<16>
l0800_19BC:
	sp_131 = sp_128 - 2<i16>
	Mem133[ss:sp_131:word16] = ss
	Mem137[ss:sp_131 - 2<i16>:word16] = bp_104 - 110<i16>
	Mem139[ss:sp_131 - 4<i16>:word16] = ss
	Mem142[ss:sp_131 - 6<i16>:word16] = bp_104 - 8<i16>
	Mem144[ss:sp_131 - 8<i16>:word16] = ss
	Mem147[ss:sp_131 - 10<i16>:word16] = bp_104 - 4<i16>
	branch fn0800_29C5(cx_106, dx_109, si_111, ds_108, Mem147[ss:sp_131 - 10<i16>:segptr32], Mem147[ss:sp_131 - 6<i16>:segptr32], Mem147[ss:sp_131 - 2<i16>:segptr32], out ds_157) == 0<16> l0800_19D8
l0800_19D8:
	bp_177 = fn0800_1E5E(ds_157, out ds_174)
	Mem185[ss:sp_131:word16] = Mem147[ds_174:0x29D1<16>:word16]
	Mem188[ss:sp_131 - 2<i16>:word16] = Mem185[ds_174:0x29CF<16>:word16]
	fn0800_A614(ds_174, Mem188[ss:sp_131 - 2<i16>:segptr32], out ds_194)
	bp_204 = Mem188[ss:bp_177:word16]
	dsOut = ds_194
	return bp_204
fn0800_18D9_exit:
l0800_19D5:
l0800_1940:
	Mem207[ss:sp_131:word16] = ss
	Mem210[ss:sp_131 - 2<i16>:word16] = bp_104 - 110<i16>
	fn0800_0C93(ds_157, Mem210[ss:sp_131 - 2<i16>:word32])
	Mem225[ss:sp_131:word16] = Mem210[ss:bp_104 - 6<i16>:word16]
	Mem228[ss:sp_131 - 2<i16>:word16] = Mem225[ss:bp_104 - 8<i16>:word16]
	fn0800_23EC(ds_157, Mem228[ss:sp_131 - 2<i16>:segptr32], out bp_104, out si_111, out ds_108)
	sp_238 = <invalid>
	Mem249[ss:sp_238 + 2<16>:word16] = Mem228[ss:bp_104 - 6<i16>:word16]
	Mem252[ss:sp_238:word16] = Mem249[ss:bp_104 - 8<i16>:word16]
	fn0800_22FE(ds_108, Mem252[ss:sp_238:segptr32])
	es_di_265 = Mem252[ss:bp_104 - 4<i16>:segptr32]
	es_305 = SLICE(es_di_265, selector, 16) (alias)
	di_267 = SLICE(es_di_265, word16, 0) + 2<16>
	cx_272 = 0xFFFF<16>
l0800_196E:
	branch cx_272 == 0<16> l0800_1970
l0800_196E_1:
	di_267 = di_267 + 1<i16>
	cx_272 = cx_272 - 1<16>
	branch Mem252[es_305:di_267:byte] == 0<8> l0800_196E
l0800_1970:
	cx_283 = ~cx_272
	di_286 = di_267 - cx_283
	v36_405 = di_286 == 0<16>
l0800_1976:
	branch cx_283 == 0<16> l0800_1978
l0800_1976_2:
	v36_405 = Mem252[es_305:di_286:byte] == 0<8>
	di_286 = di_286 + 1<i16>
	cx_283 = cx_283 - 1<16>
	branch Mem252[es_305:di_286:byte] == 0<8> l0800_1976
l0800_1978:
	branch v36_405 l0800_1981
l0800_197A:
	di_286 = 1<16>
	es_305 = 0<16>
l0800_1981:
	branch Mem252[es_305:di_286:byte] != 0<8> l0800_19AD
l0800_198D:
	dx_323 = Mem252[ds_108:0x2E51<16>:word16]
	branch Mem252[ds_108:0x2E53<16>:word16] != Mem252[ss:bp_104 - 2<i16>:word16] l0800_19A1
l0800_199C:
	branch dx_323 + 8<16> == Mem252[ss:bp_104 - 4<i16>:word16] l0800_19AD
l0800_19A1:
	Mem350[ss:sp_238 + 2<16>:word16] = Mem252[ss:bp_104 - 2<i16>:word16]
	Mem353[ss:sp_238:word16] = Mem350[ss:bp_104 - 4<i16>:word16]
	fn0800_2201(ds_108, Mem353[ss:sp_238:segptr32])
l0800_19AD:
	Mem371[ss:sp_238 + 2<16>:word16] = ss
	Mem375[ss:sp_238:word16] = bp_104 - 110<i16>
	Mem378[ss:sp_238 - 2<16>:word16] = 0xD<16>
	cx_106 = fn0800_0ABC(ds_108, Mem378[ss:sp_238:word32], out dx_109)
	sp_128 = sp_238 + 4<16>


word16 fn0800_19EE(word16 cx, word16 dx, selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp:[0..15]-main ds:[0..15]-main sp:[0..15]-main
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_19EE_entry:
l0800_19EE:
	fn0800_B2EF(cx, dx, Mem21[ds:0x2A25<16>:word16] << 2<16>, ds, SEQ(ds, 0x986<16>), out di_1261)
	dx_ax_1262 = fn0800_AA7E(ds, SEQ(ds, 0x4348<16>), SEQ(ds, 0x997<16>), out cx_1263, out ds_100)
	dx_63 = SLICE(dx_ax_1262, word16, 16) (alias)
	Mem70[ds_100:0x29D1<16>:word16] = dx_63
	ax_59 = SLICE(dx_ax_1262, word16, 0) (alias)
	Mem71[ds_100:0x29CF<16>:word16] = ax_59
	branch dx_ax_1262 != 0<16> l0800_1A40
l0800_1A31:
	fn0800_0D24(ds_100, 7<16>, SEQ(ds_100, 0x4348<16>), out cx_1264, out dx_1265, out bx_1266, out si_1267, out di_1268, out ds_100)
l0800_1A40:
	branch Mem101[ds_100:0x2A27<16>:word16] != Mem101[ds_100:0x269A<16>:word16] l0800_1A7D
l0800_1A49:
	es_bx_113 = Mem110[ds_100:0x269C<16>:segptr32]
	Mem117[es_bx_113 + 6<i16>:word16] = ss
	Mem118[es_bx_113 + 4<i16>:word16] = fp - 14<i16>
	Mem119[ds_100:0x2A27<16>:word16] = 1<16>
	Mem120[ds_100:0x269A<16>:word16] = 2<16>
	Mem121[ds_100:0x2A1B<16>:word16] = 1<16>
l0800_1A7D:
	fn0800_2DBF(ds_100, 1<16>, 0<16>)
	sp_150 = <invalid>
	cx_1093 = fn0800_1CF6(ds_100, 1<16>, out dx_1095, out bp_1029, out si_1061, out ds_1054)
	sp_1102 = sp_150 + 2<16>
	branch Mem140[ds_1054:0x2A25<16>:word16] == 7<16> l0800_1A9E
l0800_1A9E:
	Mem160[ss:sp_150:word16] = ds_1054
	Mem163[ss:sp_150 - 2<i16>:word16] = 0x99B<16>
	Mem165[ss:sp_150 - 4<i16>:word16] = ds_1054
	Mem168[ss:sp_150 - 6<i16>:word16] = 0x44DC<16>
	si_1061 = fn0800_37BE(cx_1093, dx_1095, ds_1054, Mem168[ss:sp_150 - 6<i16>:word32])
	sp_1102 = sp_150 + 2<16>
l0800_1A9B:
l0800_1CB4:
	sp_182 = sp_1102 - 2<i16>
	Mem184[ss:sp_182:word16] = ss
	Mem188[ss:sp_182 - 2<i16>:word16] = bp_1029 - 114<i16>
	Mem190[ss:sp_182 - 4<i16>:word16] = ss
	Mem193[ss:sp_182 - 6<i16>:word16] = bp_1029 - 8<i16>
	Mem195[ss:sp_182 - 8<i16>:word16] = ss
	Mem198[ss:sp_182 - 10<i16>:word16] = bp_1029 - 4<i16>
	branch fn0800_29C5(cx_1093, dx_1095, si_1061, ds_1054, Mem198[ss:sp_182 - 10<i16>:segptr32], Mem198[ss:sp_182 - 6<i16>:segptr32], Mem198[ss:sp_182 - 2<i16>:segptr32], out ds_208) == 0<16> l0800_1CD0
l0800_1CD0:
	Mem223[ss:sp_182:word16] = Mem198[ds_208:0x29D1<16>:word16]
	Mem226[ss:sp_182 - 2<i16>:word16] = Mem223[ds_208:0x29CF<16>:word16]
	fn0800_A614(ds_208, Mem226[ss:sp_182 - 2<i16>:segptr32], out ds_232)
	branch Mem226[ds_232:0x2A25<16>:word16] != 7<16> l0800_1CF0
l0800_1CE5:
	Mem242[ss:sp_182:word16] = ds_232
	Mem245[ss:sp_182 - 2<i16>:word16] = 0x44DC<16>
	fn0800_8F7F(ds_232, Mem245[ss:sp_182 - 2<i16>:segptr32])
l0800_1CF0:
	bp_262 = Mem256[ss:bp_1029:word16]
	dsOut = ds_232
	return bp_262
fn0800_19EE_exit:
l0800_1CCD:
l0800_1AB1:
	Mem265[ss:sp_182:word16] = ss
	Mem268[ss:sp_182 - 2<i16>:word16] = bp_1029 - 114<i16>
	fn0800_0C93(ds_208, Mem268[ss:sp_182 - 2<i16>:word32])
	Mem283[ss:sp_182:word16] = Mem268[ss:bp_1029 - 6<i16>:word16]
	Mem286[ss:sp_182 - 2<i16>:word16] = Mem283[ss:bp_1029 - 8<i16>:word16]
	ds_291 = fn0800_24FE(ds_208, Mem286[ss:sp_182 - 2<i16>:segptr32])
	Mem306[ss:sp_182:word16] = 0<16>
	es_di_307 = Mem306[ss:bp_1029 - 8<i16>:segptr32]
	es_1105 = SLICE(es_di_307, selector, 16) (alias)
	di_1106 = SLICE(es_di_307, word16, 0) (alias)
	cx_308 = 0xFFFF<16>
l0800_1AD1:
	branch cx_308 == 0<16> l0800_1AD3
l0800_1AD1_1:
	di_1106 = di_1106 + 1<i16>
	cx_308 = cx_308 - 1<16>
	branch Mem306[es_1105:di_1106:byte] == 0<8> l0800_1AD1
l0800_1AD3:
	cx_319 = ~cx_308
	di_1278 = di_1106 - cx_319
	v42_1143 = di_1278 == 0<16>
l0800_1AD9:
	branch cx_319 == 0<16> l0800_1ADB
l0800_1AD9_2:
	v42_1143 = Mem306[es_1105:di_1278:byte] == 0<8>
	di_1278 = di_1278 + 1<i16>
	cx_319 = cx_319 - 1<16>
	branch Mem306[es_1105:di_1278:byte] == 0<8> l0800_1AD9
l0800_1ADB:
	branch v42_1143 l0800_1AE4
l0800_1ADD:
	di_1278 = 1<16>
	es_1105 = 0<16>
l0800_1AE4:
	es_di_365 = Mem306[ss:bp_1029 - 8<i16>:segptr32]
	Mem372[ss:sp_182 - 2<i16>:word16] = CONVERT(Mem306[es_1105:di_1278:byte], int8, int16) << 8<8>
	es_1111 = SLICE(es_di_365, selector, 16) (alias)
	di_1112 = SLICE(es_di_365, word16, 0) (alias)
	cx_377 = 0xFFFF<16>
l0800_1AFB:
	branch cx_377 == 0<16> l0800_1AFD
l0800_1AFB_1:
	di_1112 = di_1112 + 1<i16>
	cx_377 = cx_377 - 1<16>
	branch Mem372[es_1111:di_1112:byte] == 0<8> l0800_1AFB
l0800_1AFD:
	cx_388 = ~cx_377
	di_1280 = di_1112 - cx_388
	v46_1147 = di_1280 == 0<16>
l0800_1B03:
	branch cx_388 == 0<16> l0800_1B05
l0800_1B03_2:
	v46_1147 = Mem372[es_1111:di_1280:byte] == 0<8>
	di_1280 = di_1280 + 1<i16>
	cx_388 = cx_388 - 1<16>
	branch Mem372[es_1111:di_1280:byte] == 0<8> l0800_1B03
l0800_1B05:
	branch v46_1147 l0800_1B0E
l0800_1B07:
	di_1280 = 1<16>
	es_1111 = 0<16>
l0800_1B0E:
	es_di_445 = Mem372[ss:bp_1029 - 8<i16>:segptr32]
	Mem447[ss:sp_182 - 2<i16>:word16] = Mem372[ss:sp_182 - 2<i16>:word16] + CONVERT(Mem372[es_1111:di_1280 + 1<16>:byte], uint8, uint16)
	Mem449[ss:sp_182 - 4<i16>:word16] = 0<16>
	es_1117 = SLICE(es_di_445, selector, 16) (alias)
	di_1118 = SLICE(es_di_445, word16, 0) (alias)
	cx_450 = 0xFFFF<16>
l0800_1B26:
	branch cx_450 == 0<16> l0800_1B28
l0800_1B26_1:
	di_1118 = di_1118 + 1<i16>
	cx_450 = cx_450 - 1<16>
	branch Mem449[es_1117:di_1118:byte] == 0<8> l0800_1B26
l0800_1B28:
	cx_461 = ~cx_450
	di_1282 = di_1118 - cx_461
	v50_1151 = di_1282 == 0<16>
l0800_1B2E:
	branch cx_461 == 0<16> l0800_1B30
l0800_1B2E_2:
	v50_1151 = Mem449[es_1117:di_1282:byte] == 0<8>
	di_1282 = di_1282 + 1<i16>
	cx_461 = cx_461 - 1<16>
	branch Mem449[es_1117:di_1282:byte] == 0<8> l0800_1B2E
l0800_1B30:
	branch v50_1151 l0800_1B39
l0800_1B32:
	di_1282 = 1<16>
	es_1117 = 0<16>
l0800_1B39:
	es_di_507 = Mem449[ss:bp_1029 - 8<i16>:segptr32]
	Mem514[ss:sp_182 - 6<i16>:word16] = CONVERT(Mem449[es_1117:di_1282 + 2<16>:byte], int8, int16) << 8<8>
	es_1123 = SLICE(es_di_507, selector, 16) (alias)
	di_1124 = SLICE(es_di_507, word16, 0) (alias)
	cx_519 = 0xFFFF<16>
l0800_1B50:
	branch cx_519 == 0<16> l0800_1B52
l0800_1B50_1:
	di_1124 = di_1124 + 1<i16>
	cx_519 = cx_519 - 1<16>
	branch Mem514[es_1123:di_1124:byte] == 0<8> l0800_1B50
l0800_1B52:
	cx_530 = ~cx_519
	di_1284 = di_1124 - cx_530
	v54_1155 = di_1284 == 0<16>
l0800_1B58:
	branch cx_530 == 0<16> l0800_1B5A
l0800_1B58_2:
	v54_1155 = Mem514[es_1123:di_1284:byte] == 0<8>
	di_1284 = di_1284 + 1<i16>
	cx_530 = cx_530 - 1<16>
	branch Mem514[es_1123:di_1284:byte] == 0<8> l0800_1B58
l0800_1B5A:
	branch v54_1155 l0800_1B63
l0800_1B5C:
	di_1284 = 1<16>
	es_1123 = 0<16>
l0800_1B63:
	dx_ax_1142 = Mem514[ss:sp_182 - 4<i16>:ui32] + CONVERT(Mem514[ss:sp_182 - 6<i16>:word16] + CONVERT(Mem514[es_1123:di_1284 + 3<16>:byte], uint8, uint16), uint16, uint32)
	Mem588[ss:sp_182 - 2<i16>:word16] = SLICE(dx_ax_1142, word16, 16)
	Mem590[ss:sp_182 - 4<i16>:word16] = SLICE(dx_ax_1142, word16, 0)
	Mem613[ss:sp_182 - 6<i16>:word16] = Mem590[ds_291:0x29D1<16>:word16]
	Mem616[ss:sp_182 - 8<i16>:word16] = Mem613[ds_291:0x29CF<16>:word16]
	fn0800_ACB3(ds_291, Mem616[ss:sp_182 - 8<i16>:segptr32], Mem616[ss:sp_182 - 4<i16>:ui32], Mem616[ss:sp_182:word16], out cx_1269)
	branch Mem616[ds_291:0x2A25<16>:word16] != 7<16> l0800_1B92
l0800_1B92:
	Mem631[ss:sp_182:word16] = ds_291
	es_632 = Mem631[ss:sp_182:selector]
	Mem636[ss:sp_182:word16] = es_632
	Mem638[ss:sp_182 - 2<i16>:word16] = 0x44DC<16>
	di_1285 = 0x427E<16>
	cx_644 = 0xFFFF<16>
l0800_1BA1:
	branch cx_644 == 0<16> l0800_1BA3
l0800_1BA1_1:
	di_1285 = di_1285 + 1<i16>
	cx_644 = cx_644 - 1<16>
	branch Mem638[es_632:di_1285:byte] == 0<8> l0800_1BA1
l0800_1BA3:
	di_666 = Mem638[ss:sp_182 - 2<i16>:word16]
	es_670 = Mem638[ss:sp_182:selector]
	Mem675[ss:sp_182:word16] = ds_291
	cx_655 = ~cx_644
	di_657 = di_1285 - cx_655
	size_677 = (cx_655 >>u 1<16>) *u32 2<16>
	memcpy(es_670:di_666, es_632:di_657, size_677)
	memcpy(es_670:di_666 + SLICE(size_677, word16, 0), es_632:di_657 + SLICE(size_677, word16, 0), CONVERT(SLICE(cond(cx_655 >>u 1<16>), bool, 1), bool, uint32))
	ds_687 = Mem675[ss:sp_182:selector]
	branch Mem675[ds_687:0x2A25<16>:word16] != 8<16> l0800_1C29
l0800_1BC0:
	branch Mem675[ds_687:0x427E<16>:byte] == 0<8> l0800_1BFC
l0800_1BC7:
	branch Mem675[ss:bp_1029 - 114<i16>:byte] != 0x5C<8> l0800_1BFC
l0800_1BFC:
	Mem705[ss:sp_182:word16] = ss
	Mem709[ss:sp_182 - 2<i16>:word16] = bp_1029 - 114<i16>
	Mem712[ss:sp_182 - 4<i16>:word16] = ds_687
	es_713 = Mem712[ss:sp_182 - 4<i16>:selector]
	di_1286 = 0x44DC<16>
	cx_720 = 0xFFFF<16>
l0800_1C0B:
	branch cx_720 == 0<16> l0800_1C0D
l0800_1C0B_1:
	di_1286 = di_1286 + 1<i16>
	cx_720 = cx_720 - 1<16>
	branch Mem712[es_713:di_1286:byte] == 0<8> l0800_1C0B
l0800_1C0D:
	cx_731 = ~cx_720
	di_1287 = di_1286 - cx_731
	v58_1159 = di_1287 == 0<16>
l0800_1C13:
	branch cx_731 == 0<16> l0800_1C15
l0800_1C13_2:
	v58_1159 = Mem712[es_713:di_1287:byte] == 0<8>
	di_1287 = di_1287 + 1<i16>
	cx_731 = cx_731 - 1<16>
	branch Mem712[es_713:di_1287:byte] == 0<8> l0800_1C13
l0800_1C15:
	branch v58_1159 l0800_1C1E
l0800_1C17:
	di_1287 = 1<16>
	es_713 = 0<16>
l0800_1C1E:
	Mem772[ss:sp_182 - 4<i16>:word16] = es_713
	Mem774[ss:sp_182 - 6<i16>:word16] = di_1287 - 1<16>
	fn0800_3509(Mem774[ss:sp_182 - 6<i16>:word16], Mem774[ss:sp_182 - 4<i16>:selector], Mem774[ss:sp_182 - 2<i16>:word32], out bx_1275)
l0800_1BCD:
	Mem788[ss:sp_182:word16] = ss
	Mem791[ss:sp_182 - 2<i16>:word16] = bp_1029 - 113<i16>
	Mem793[ss:sp_182 - 4<i16>:word16] = ds_687
	es_794 = Mem793[ss:sp_182 - 4<i16>:selector]
	di_1288 = 0x44DC<16>
	cx_801 = 0xFFFF<16>
l0800_1BDC:
	branch cx_801 == 0<16> l0800_1BDE
l0800_1BDC_2:
	di_1288 = di_1288 + 1<i16>
	cx_801 = cx_801 - 1<16>
	branch Mem793[es_794:di_1288:byte] == 0<8> l0800_1BDC
l0800_1BDE:
	cx_812 = ~cx_801
	di_1289 = di_1288 - cx_812
	v62_1163 = di_1289 == 0<16>
l0800_1BE4:
	branch cx_812 == 0<16> l0800_1BE6
l0800_1BE4_3:
	v62_1163 = Mem793[es_794:di_1289:byte] == 0<8>
	di_1289 = di_1289 + 1<i16>
	cx_812 = cx_812 - 1<16>
	branch Mem793[es_794:di_1289:byte] == 0<8> l0800_1BE4
l0800_1BE6:
	branch v62_1163 l0800_1BEF
l0800_1BE8:
	di_1289 = 1<16>
	es_794 = 0<16>
l0800_1BEF:
	Mem853[ss:sp_182 - 4<i16>:word16] = es_794
	Mem855[ss:sp_182 - 6<i16>:word16] = di_1289 - 1<16>
	fn0800_3509(Mem855[ss:sp_182 - 6<i16>:word16], Mem855[ss:sp_182 - 4<i16>:selector], Mem855[ss:sp_182 - 2<i16>:word32], out bx_1274)
l0800_1C29:
	sp_869 = sp_1102 - 2<i16>
	Mem882[ss:sp_869:word16] = ds_687
	Mem885[ss:sp_869 - 2<i16>:word16] = 0x44DC<16>
	fn0800_3678(ds_687, Mem885[ss:sp_869 - 2<i16>:segptr32], out dx_1272, out si_1273, out ds_291)
	Mem899[ss:sp_869:word16] = ss
	Mem913[ss:sp_869 - 2<i16>:word16] = bp_1029 - 114<i16>
	Mem915[ss:sp_869 - 4<i16>:word16] = ds_291
	es_916 = Mem915[ss:sp_869 - 4<i16>:selector]
	di_1290 = 0x44DC<16>
	cx_923 = 0xFFFF<16>
l0800_1C43:
	branch cx_923 == 0<16> l0800_1C45
l0800_1C43_1:
	di_1290 = di_1290 + 1<i16>
	cx_923 = cx_923 - 1<16>
	branch Mem915[es_916:di_1290:byte] == 0<8> l0800_1C43
l0800_1C45:
	cx_934 = ~cx_923
	di_1291 = di_1290 - cx_934
	v66_1167 = di_1291 == 0<16>
l0800_1C4B:
	branch cx_934 == 0<16> l0800_1C4D
l0800_1C4B_2:
	v66_1167 = Mem915[es_916:di_1291:byte] == 0<8>
	di_1291 = di_1291 + 1<i16>
	cx_934 = cx_934 - 1<16>
	branch Mem915[es_916:di_1291:byte] == 0<8> l0800_1C4B
l0800_1C4D:
	branch v66_1167 l0800_1C56
l0800_1C4F:
	di_1291 = 1<16>
	es_916 = 0<16>
l0800_1C56:
	Mem975[ss:sp_869 - 4<i16>:word16] = es_916
	Mem977[ss:sp_869 - 6<i16>:word16] = di_1291 - 1<16>
	fn0800_35A3(Mem977[ss:sp_869 - 6<i16>:word16], Mem977[ss:sp_869 - 4<i16>:selector], Mem977[ss:sp_869 - 2<i16>:word32], out dx_1276)
l0800_1B8F:
l0800_1C61:
	sp_991 = sp_1102 - 2<i16>
	Mem999[ss:sp_991:word16] = ds_291
	Mem1002[ss:sp_991 - 2<i16>:word16] = 0x9A8<16>
	Mem1004[ss:sp_991 - 4<i16>:word16] = ds_291
	Mem1007[ss:sp_991 - 6<i16>:word16] = 0x44DC<16>
	ax_1008 = fn0800_4234(ds_291, Mem1007[ss:sp_991 - 6<i16>:word32], Mem1007[ss:sp_991 - 2<i16>:word32], out cx_1270, out dx_1012, out si_1271, out ds_1011)
	Mem1022[ds_1011:0x29E1<16>:word16] = dx_1012
	Mem1023[ds_1011:0x29DF<16>:word16] = ax_1008
	dx_1025 = Mem1023[ds_1011:0x29CF<16>:word16]
	Mem1026[ds_1011:0x29E5<16>:word16] = Mem1023[ds_1011:0x29D1<16>:word16]
	Mem1027[ds_1011:0x29E3<16>:word16] = dx_1025
	ax_1028 = fn0800_5374(ds_1011, out bp_1029, out ds_1033)
	sp_1037 = <invalid>
	Mem1045[ss:sp_1037 - 2<i16>:word16] = Mem1027[ds_1033:0x29E1<16>:word16]
	Mem1048[ss:sp_1037 - 4<i16>:word16] = Mem1045[ds_1033:0x29DF<16>:word16]
	fn0800_A614(ds_1033, Mem1048[ss:sp_1037 - 4<i16>:segptr32], out ds_1054)
	si_1061 = ax_1028
	branch ax_1028 == 0<16> l0800_1CA8
l0800_1C9D:
	Mem1067[ss:sp_1037 - 2<i16>:word16] = ds_1054
	Mem1070[ss:sp_1037 - 4<i16>:word16] = 0x44DC<16>
	fn0800_8F7F(ds_1054, Mem1070[ss:sp_1037 - 4<i16>:segptr32])
l0800_1CA8:
	Mem1082[ss:sp_1037 - 2<i16>:word16] = ss
	Mem1086[ss:sp_1037 - 4<i16>:word16] = bp_1029 - 114<i16>
	Mem1089[ss:sp_1037 - 6<i16>:word16] = ax_1028
	cx_1093 = fn0800_0ABC(ds_1054, Mem1089[ss:sp_1037 - 4<i16>:word32], out dx_1095)
	sp_1102 = sp_1037


word16 fn0800_1CF6(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_18D9
//      fn0800_19EE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: bp:[0..15]-fn0800_19EE cx:[0..15]-fn0800_19EE ds:[0..15]-fn0800_19EE dx:[0..15]-fn0800_19EE si:[0..15]-fn0800_19EE sp:[0..15]-fn0800_19EE
// Trashed: SCZOP ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_1CF6_entry:
l0800_1CF6:
	Mem19[ds:0x45A8<16>:word16] = 0<16>
	Mem20[ds:0x45A6<16>:word16] = 0<16>
	Mem21[ds:0x29ED<16>:word16] = 0<16>
	Mem22[ds:0x29EB<16>:word16] = 0<16>
	fn0800_ACB3(ds, Mem31[ds:0x29CF<16>:word32], 0xFFFFFFFC<32>, 2<16>, out cx_513)
	dx_ax_514 = fn0800_3E5D(ds, Mem37[ds:0x29CF<16>:word32], out ds_60)
	Mem69[ds_60:0x29ED<16>:word16] = SLICE(dx_ax_514, word16, 16)
	Mem70[ds_60:0x29EB<16>:word16] = SLICE(dx_ax_514, word16, 0)
	branch fn0800_4194(ds_60, Mem70[ds_60:0x29CF<16>:word32]) >=u Mem76[ds_60:0x29EB<16>:word32] l0800_1D69
l0800_1D5A:
	fn0800_0D24(ds_60, 0xB<16>, SEQ(ds_60, 0x4348<16>), out cx_517, out dx_518, out bx_519, out si_520, out di_521, out ds_108)
l0800_1D69:
	fn0800_ACB3(ds_127, Mem133[ds_127:0x29CF<16>:word32], Mem126[ds_127:0x29EB<16>:word32], 0<16>, out cx_515)
	dx_ax_516 = fn0800_3E5D(ds_127, Mem139[ds_127:0x29CF<16>:word32], out ds_162)
	ax_158 = SLICE(dx_ax_516, word16, 0) (alias)
	branch SLICE(dx_ax_516, word16, 16) != 0x524E<16> l0800_1D9B
l0800_1D96:
	branch ax_158 == 0x4341<16> l0800_1DAA
l0800_1D9B:
	fn0800_0D24(ds_162, 0xB<16>, SEQ(ds_162, 0x4348<16>), out cx_522, out dx_523, out bx_524, out si_525, out di_526, out ds_189)
l0800_1DAA:
	ax_210 = fn0800_3E27(ds_200, Mem201[ds_200:0x29CF<16>:word32], out cx_527, out di_528, out ds_214)
	fn0800_3E27(ds_214, Mem209[ds_214:0x29CF<16>:word32], out cx_529, out di_530, out ds_234)
	branch wArg02 == 0<16> l0800_1DE4
l0800_1DE4:
	sp_267 = <invalid>
	ax_258 = fn0800_4311(ds_234, 0xFFF0<32>, out dx_264, out bp_259, out si_266, out ds_263)
	Mem274[ds_263:0x2E53<16>:word16] = dx_264
	Mem275[ds_263:0x2E51<16>:word16] = ax_258
	sp_272 = sp_267 + 4<16>
l0800_1DD1:
	ax_284 = fn0800_4311(ds_234, CONVERT(ax_210, uint16, uint32), out dx_290, out bp_285, out si_292, out ds_289)
	Mem300[ds_289:0x2E53<16>:word16] = dx_290
	Mem301[ds_289:0x2E51<16>:word16] = ax_284
	sp_293 = <invalid>
	sp_298 = sp_293 + 4<16>
l0800_1DF8:
	sp_307 = sp_306 - 2<i16>
	Mem309[ss:sp_307:word16] = 0<16>
	Mem313[ss:sp_307 - 2<i16>:word16] = Mem309[ds_310:0x29ED<16>:word16]
	Mem316[ss:sp_307 - 4<i16>:word16] = Mem313[ds_310:0x29EB<16>:word16]
	Mem319[ss:sp_307 - 6<i16>:word16] = Mem316[ds_310:0x29D1<16>:word16]
	Mem322[ss:sp_307 - 8<i16>:word16] = Mem319[ds_310:0x29CF<16>:word16]
	fn0800_ACB3(ds_310, Mem322[ss:sp_307 - 8<i16>:segptr32], Mem322[ss:sp_307 - 4<i16>:ui32], Mem322[ss:sp_307:word16], out cx_531)
	Mem336[ss:sp_307:word16] = Mem322[ds_310:0x29D1<16>:word16]
	Mem339[ss:sp_307 - 2<i16>:word16] = Mem336[ds_310:0x29CF<16>:word16]
	Mem345[ss:sp_307 - 4<i16>:word16] = 0<16>
	Mem348[ss:sp_307 - 6<i16>:word16] = si_347
	Mem351[ss:sp_307 - 8<i16>:word16] = Mem348[ds_310:0x2E53<16>:word16]
	Mem354[ss:sp_307 - 10<i16>:word16] = Mem351[ds_310:0x2E51<16>:word16]
	ch_483 = SLICE(CONVERT(fn0800_4110(ds_310, Mem354[ss:sp_307 - 10<i16>:word32], Mem354[ss:sp_307 - 6<i16>:word16], Mem354[ss:sp_307 - 4<i16>:word16], Mem354[ss:sp_307 - 2<i16>:word32], out si_362, out di_532, out ds_359), uint8, uint16), byte, 8) (alias)
	Mem370[ss:sp_307:word16] = 0<16>
	Mem374[ss:sp_307 - 2<i16>:word16] = si_362 - 8<16>
	ax_375 = Mem374[ds_359:0x2E51<16>:word16]
	Mem380[ss:sp_307 - 4<i16>:word16] = Mem374[ds_359:0x2E53<16>:word16]
	Mem382[ss:sp_307 - 6<i16>:word16] = ax_375 + 8<16>
	cx_484 = SEQ(ch_483, cl_385) (alias)
	branch fn0800_2CCF(ds_359, Mem382[ss:sp_307 - 6<i16>:segptr32], Mem382[ss:sp_307 - 2<i16>:word16], Mem382[ss:sp_307:word16], out cl_385, out dx_386) == Mem382[ss:bp_393 - 2<i16>:word16] l0800_1E59
l0800_1E4A:
	Mem397[ss:sp_307:word16] = ds_359
	Mem400[ss:sp_307 - 2<i16>:word16] = 0x4348<16>
	Mem403[ss:sp_307 - 4<i16>:word16] = 0xD<16>
	fn0800_0D24(ds_359, Mem403[ss:sp_307 - 4<i16>:word16], Mem403[ss:sp_307 - 2<i16>:segptr32], out cx_406, out dx_409, out bx_533, out si_534, out di_535, out ds_408)
l0800_1E59:
	si_422 = Mem421[ss:sp_306:word16]
	bp_425 = Mem421[ss:bp_393:word16]
	dxOut = dx_492
	bpOut = bp_425
	siOut = si_422
	dsOut = ds_491
	return cx_482
fn0800_1CF6_exit:


word16 fn0800_1E5E(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_18D9
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: bp:[0..15]-fn0800_18D9 ds:[0..15]-fn0800_18D9
// Trashed: SCZOP ax bp bx cx di ds dx es Top
// Preserved: D si sp
fn0800_1E5E_entry:
l0800_1E5E:
	es_bx_9 = Mem7[ds:0x2E51<16>:segptr32]
	ax_20 = (CONVERT(Mem7[es_bx_9 + 4<i16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem7[es_bx_9 + 5<i16>:byte], uint8, uint16)
	ax_37 = fn0800_2CCF(ds, SEQ(Mem28[ds:0x2E53<16>:word16], Mem28[ds:0x2E51<16>:word16] + 8<16>), ax_20 - 8<16>, 0<16>, out cl_340, out dx_341)
	es_bx_50 = Mem36[ds:0x2E51<16>:segptr32]
	Mem54[es_bx_50 + 6<i16>:byte] = SLICE(ax_37 >>u 8<8>, byte, 0)
	Mem56[es_bx_50 + 7<i16>:byte] = SLICE(ax_37, byte, 0)
	dx_61 = Mem59[ds:0x29EB<16>:word16]
	fn0800_ACB3(ds, Mem70[ds:0x29CF<16>:word32], SEQ(SLICE(SEQ(Mem59[ds:0x29ED<16>:word16], dx_61) + 4<32>, word16, 16), dx_61 + 4<16>), 0<16>, out cx_342)
	si_142 = ax_20
	ax_95 = fn0800_3E27(ds, Mem76[ds:0x29CF<16>:word32], out cx_97, out di_343, out ds_139)
	branch ax_20 <=u ax_95 l0800_1EF7
l0800_1EF7:
	branch ax_20 >=u ax_95 l0800_1F19
l0800_1EFB:
	fn0800_3C99(ds_139, Mem127[ds_139:0x29CF<16>:word32], Mem124[ds_139:0x29EB<16>:word16], Mem121[ds_139:0x29ED<16>:word16], out bp, out si_142, out ds_139)
l0800_1ED7:
	bp = fn0800_3BC3(cx_97, 0<16>, ds_139, Mem167[ds_139:0x29CF<16>:word32], Mem161[ds_139:0x29EB<16>:word32], out si_142, out ds_139)
l0800_1F19:
	fn0800_ACB3(ds_139, Mem206[ds_139:0x29CF<16>:word32], Mem199[ds_139:0x29EB<16>:word32], 0<16>, out cx_344)
	fn0800_4152(ds_139, Mem238[ds_139:0x2E51<16>:word32], si_142, 0<16>, Mem212[ds_139:0x29CF<16>:word32], out si_345, out ds_249)
	fn0800_4346(ds_249, Mem244[ds_249:0x2E53<16>:word16], out cx_346, out dx_347, out bx_348, out ds_268)
	dsOut = ds_268
	return bp
fn0800_1E5E_exit:


word16 fn0800_1F5C(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_12E2 ds:[0..15]-fn0800_12E2 dx:[0..15]-fn0800_12E2
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_1F5C_entry:
l0800_1F5C:
	es_340 = SLICE(ptrArg02, selector, 16) (alias)
	di_25 = SLICE(ptrArg02, word16, 0) (alias)
	cx_21 = 0xFFFF<16>
l0800_1F6C:
	branch cx_21 == 0<16> l0800_1F6E
l0800_1F6C_1:
	di_25 = di_25 + 1<i16>
	cx_21 = cx_21 - 1<16>
	branch Mem15[es_340:di_25:byte] == 0<8> l0800_1F6C
l0800_1F6E:
	cx_32 = ~cx_21
	di_35 = di_25 - cx_32
	v33_359 = di_35 == 0<16>
l0800_1F75:
	branch cx_32 == 0<16> l0800_1F77
l0800_1F75_2:
	v33_359 = Mem15[es_340:di_35:byte] == 0x3A<8>
	di_35 = di_35 + 1<i16>
	cx_32 = cx_32 - 1<16>
	branch Mem15[es_340:di_35:byte] == 0x3A<8> l0800_1F75
l0800_1F77:
	branch v33_359 l0800_1F80
l0800_1F79:
	di_35 = 1<16>
	es_340 = 0<16>
l0800_1F80:
	branch (di_35 - 1<16> | es_340) == 0<16> l0800_1FAD
l0800_1F87:
	es_116 = SLICE(ptrArg02, selector, 16) (alias)
	di_347 = SLICE(ptrArg02, word16, 0) (alias)
	cx_83 = 0xFFFF<16>
l0800_1F8F:
	branch cx_83 == 0<16> l0800_1F91
l0800_1F8F_1:
	di_347 = di_347 + 1<i16>
	cx_83 = cx_83 - 1<16>
	branch Mem15[es_116:di_347:byte] == 0<8> l0800_1F8F
l0800_1F91:
	cx_106 = ~cx_83
	di_102 = di_347 - cx_106
	v37_363 = di_102 == 0<16>
l0800_1F98:
	branch cx_106 == 0<16> l0800_1F9A
l0800_1F98_2:
	v37_363 = Mem15[es_116:di_102:byte] == 0x3A<8>
	di_102 = di_102 + 1<i16>
	cx_106 = cx_106 - 1<16>
	branch Mem15[es_116:di_102:byte] == 0x3A<8> l0800_1F98
l0800_1F9A:
	branch v37_363 l0800_1FA3
l0800_1F9C:
	di_102 = 1<16>
	es_116 = 0<16>
l0800_1FA3:
	ptrArg02 = SEQ(es_116, di_102) (alias)
l0800_1FAD:
	es_bx_150 = Mem149[ds:0x2E51<16>:segptr32]
	ax_161 = (CONVERT(Mem149[es_bx_150 + 4<i16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem149[es_bx_150 + 5<i16>:byte], uint8, uint16)
	wArg04_392 = SLICE(ptrArg02, word16, 16) (alias)
	wArg02_395 = SLICE(ptrArg02, word16, 0) (alias)
	bLoc08_404 = SLICE(ax_161, byte, 0) (alias)
	ax_165 = Mem164[ds:0x2E53<16>:word16]
	dx_167 = Mem164[ds:0x2E51<16>:word16] + ax_161
	es_352 = SLICE(ptrArg02, selector, 16) (alias)
	di_179 = SLICE(ptrArg02, word16, 0) (alias)
	cx_175 = 0xFFFF<16>
l0800_1FDE:
	branch cx_175 == 0<16> l0800_1FE0
l0800_1FDE_1:
	di_179 = di_451 + 1<i16>
	cx_175 = cx_175 - 1<16>
	di_451 = di_179
	branch Mem169[es_352:di_451:byte] == 0<8> l0800_1FDE
l0800_1FE0:
	cx_186 = ~cx_175
	dx_ax_357 = CONVERT(dx_167 - Mem193[ds:0x2E51<16>:word16] + (cx_186 + 3<16>), word16, uint32)
	ptrLoc06_388 = SEQ(ax_165, dx_167) (alias)
	Mem221[ptrLoc06_388:byte] = SLICE(fn0800_8C8A(SLICE(dx_ax_357, word16, 0), 8<8>, SLICE(dx_ax_357, word16, 16), out cl_445, out dx_446), byte, 0)
	bLoc0A_389 = SLICE(cx_186, byte, 0) + 3<8> (alias)
	Mem230[ptrLoc06_388 + 1<i16>:byte] = SLICE(dx_167, byte, 0) - Mem221[ds:0x2E51<16>:byte] + bLoc0A_389
	sp_212 = <invalid>
	Mem234[ss:sp_212 - 2<i16>:word16] = ax_165
	Mem237[ss:sp_212 - 4<i16>:word16] = dx_167 + 2<16>
	di_238 = wArg02_395
	cx_243 = 0xFFFF<16>
l0800_202C:
	branch cx_243 == 0<16> l0800_202E
l0800_202C_2:
	di_238 = di_238 + 1<i16>
	cx_243 = cx_243 - 1<16>
	branch Mem237[wArg04_392:di_238:byte] == 0<8> l0800_202C
l0800_202E:
	di_265 = Mem237[ss:sp_212 - 4<i16>:word16]
	es_269 = Mem237[ss:sp_212 - 2<i16>:selector]
	Mem274[ss:sp_212 - 2<i16>:word16] = ds
	cx_254 = ~cx_243
	di_256 = di_238 - cx_254
	size_276 = (cx_254 >>u 1<16>) *u32 2<16>
	memcpy(es_269:di_265, wArg04_392:di_256, size_276)
	memcpy(es_269:di_265 + SLICE(size_276, word16, 0), wArg04_392:di_256 + SLICE(size_276, word16, 0), CONVERT(SLICE(cond(cx_254 >>u 1<16>), bool, 1), bool, uint32))
	ds_286 = Mem274[ss:sp_212 - 2<i16>:selector]
	Mem294[ax_165:dx_167 + (cx_186 + 3<16>) - 1<i16>:byte] = 0<8>
	es_bx_299 = Mem294[ds_286:0x2E51<16>:segptr32]
	Mem303[es_bx_299 + 4<i16>:byte] = SLICE(ax_161 + (cx_186 + 3<16>) >>u 8<8>, byte, 0)
	Mem306[es_bx_299 + 5<i16>:byte] = bLoc08_404 + bLoc0A_389
	Mem312[ss:sp_212 - 2<i16>:word16] = 0<16>
	Mem314[ss:sp_212 - 4<i16>:word16] = 0<16>
	Mem316[ss:sp_212 - 6<i16>:word16] = 0<16>
	Mem319[ss:sp_212 - 8<i16>:word16] = cx_186 + 3<16>
	fn0800_2688(ds_286, Mem319[ss:sp_212 - 8<i16>:ui32], Mem319[ss:sp_212 - 4<i16>:word32])
	dxOut = ax_165
	dsOut = ds_286
	return dx_167
fn0800_1F5C_exit:


byte fn0800_2085(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx:[8..15]-fn0800_12E2
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_2085_entry:
	psegArg04_554 = SLICE(ptrArg02, selector, 16) (alias)
	wArg02_558 = SLICE(ptrArg02, word16, 0) (alias)
l0800_2085:
	es_bx_17 = Mem15[ds:0x2E51<16>:segptr32]
	ax_28 = (CONVERT(Mem15[es_bx_17 + 4<i16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem15[es_bx_17 + 5<i16>:byte], uint8, uint16)
	bLoc0C_627 = SLICE(ax_28, byte, 0) (alias)
	dx_32 = Mem29[ds:0x2E51<16>:word16] + ax_28
	es_484 = SLICE(ptrArg02, selector, 16) (alias)
	di_44 = SLICE(ptrArg02, word16, 0) (alias)
	cx_40 = 0xFFFF<16>
l0800_20BE:
	branch cx_40 == 0<16> l0800_20C0
l0800_20BE_1:
	di_44 = di_796 + 1<i16>
	cx_40 = cx_40 - 1<16>
	di_796 = di_44
	branch Mem34[es_484:di_796:byte] == 0<8> l0800_20BE
l0800_20C0:
	cx_51 = ~cx_40
	bx_74 = Mem58[ds:0x2E51<16>:word16] + ((CONVERT(Mem58[ptrArg06:byte], int8, int16) << 8<8>) + CONVERT(Mem58[ptrArg06 + 1<i16>:byte], uint8, uint16))
	dx_72 = Mem58[ds:0x2E53<16>:word16]
	fn0800_B0F3(SEQ(Mem92[ds:0x2E53<16>:word16], bx_74 - 1<16> + (cx_51 + 4<16>)), SEQ(Mem87[ds:0x2E53<16>:word16], bx_74 - 1<16>), dx_32 - (bx_74 - 1<16>))
	bLoc0E_628 = SLICE(cx_51, byte, 0) + 4<8> (alias)
	di_121 = wArg02_558
	cx_126 = 0xFFFF<16>
l0800_211F:
	branch cx_126 == 0<16> l0800_2121
l0800_211F_2:
	di_121 = di_121 + 1<i16>
	cx_126 = cx_126 - 1<16>
	branch Mem120[psegArg04_554:di_121:byte] == 0<8> l0800_211F
l0800_2121:
	cx_137 = ~cx_126
	di_139 = di_121 - cx_137
	size_159 = (cx_137 >>u 1<16>) *u32 2<16>
	memcpy(dx_72:bx_74 - 1<16>, psegArg04_554:di_139, size_159)
	memcpy(dx_72:bx_74 - 1<16> + SLICE(size_159, word16, 0), psegArg04_554:di_139 + SLICE(size_159, word16, 0), CONVERT(SLICE(cond(cx_137 >>u 1<16>), bool, 1), bool, uint32))
	es_209 = dx_72 (alias)
	di_180 = bx_74 - 1<16> (alias)
	cx_176 = 0xFFFF<16>
l0800_213F:
	branch cx_176 == 0<16> l0800_2141
l0800_213F_3:
	di_180 = di_180 + 1<i16>
	cx_176 = cx_176 - 1<16>
	branch Mem157[dx_72:di_180:byte] == 0<8> l0800_213F
l0800_2141:
	cx_187 = ~cx_176
	di_190 = di_180 - cx_187
	v37_512 = di_190 == 0<16>
l0800_2147:
	branch cx_187 == 0<16> l0800_2149
l0800_2147_4:
	v37_512 = Mem157[dx_72:di_190:byte] == 0<8>
	di_190 = di_190 + 1<i16>
	cx_187 = cx_187 - 1<16>
	branch Mem157[dx_72:di_190:byte] == 0<8> l0800_2147
l0800_2149:
	branch v37_512 l0800_2152
l0800_214B:
	di_190 = 1<16>
	es_209 = 0<16>
l0800_2152:
	Mem217[es_209:di_190:byte] = 0<8>
	es_266 = dx_72 (alias)
	di_237 = bx_74 - 1<16> (alias)
	cx_233 = 0xFFFF<16>
l0800_2164:
	branch cx_233 == 0<16> l0800_2166
l0800_2164_1:
	di_237 = di_237 + 1<i16>
	cx_233 = cx_233 - 1<16>
	branch Mem217[dx_72:di_237:byte] == 0<8> l0800_2164
l0800_2166:
	cx_244 = ~cx_233
	di_247 = di_237 - cx_244
	v41_516 = di_247 == 0<16>
l0800_216C:
	branch cx_244 == 0<16> l0800_216E
l0800_216C_2:
	v41_516 = Mem217[dx_72:di_247:byte] == 0<8>
	di_247 = di_247 + 1<i16>
	cx_244 = cx_244 - 1<16>
	branch Mem217[dx_72:di_247:byte] == 0<8> l0800_216C
l0800_216E:
	branch v41_516 l0800_2177
l0800_2170:
	di_247 = 1<16>
	es_266 = 0<16>
l0800_2177:
	Mem274[es_266:di_247 + 1<16>:byte] = 0<8>
	es_323 = dx_72 (alias)
	di_294 = bx_74 - 1<16> (alias)
	cx_290 = 0xFFFF<16>
l0800_2189:
	branch cx_290 == 0<16> l0800_218B
l0800_2189_1:
	di_294 = di_294 + 1<i16>
	cx_290 = cx_290 - 1<16>
	branch Mem274[dx_72:di_294:byte] == 0<8> l0800_2189
l0800_218B:
	cx_301 = ~cx_290
	di_304 = di_294 - cx_301
	v45_520 = di_304 == 0<16>
l0800_2191:
	branch cx_301 == 0<16> l0800_2193
l0800_2191_2:
	v45_520 = Mem274[dx_72:di_304:byte] == 0<8>
	di_304 = di_304 + 1<i16>
	cx_301 = cx_301 - 1<16>
	branch Mem274[dx_72:di_304:byte] == 0<8> l0800_2191
l0800_2193:
	branch v45_520 l0800_219C
l0800_2195:
	di_304 = 1<16>
	es_323 = 0<16>
l0800_219C:
	Mem331[es_323:di_304 + 2<16>:byte] = 0<8>
	es_380 = dx_72 (alias)
	di_351 = bx_74 - 1<16> (alias)
	cx_347 = 0xFFFF<16>
l0800_21AE:
	branch cx_347 == 0<16> l0800_21B0
l0800_21AE_1:
	di_351 = di_351 + 1<i16>
	cx_347 = cx_347 - 1<16>
	branch Mem331[dx_72:di_351:byte] == 0<8> l0800_21AE
l0800_21B0:
	cx_358 = ~cx_347
	di_361 = di_351 - cx_358
	v49_524 = di_361 == 0<16>
l0800_21B6:
	ch_721 = SLICE(cx_358, byte, 8) (alias)
	branch cx_358 == 0<16> l0800_21B8
l0800_21B6_2:
	cx_358 = cx_358 - 1<16>
	v49_524 = Mem331[dx_72:di_361:byte] == 0<8>
	di_361 = di_361 + 1<i16>
	ch_721 = SLICE(cx_358, byte, 8) (alias)
	branch Mem331[dx_72:di_361:byte] == 0<8> l0800_21B6
l0800_21B8:
	branch v49_524 l0800_21C1
l0800_21BA:
	di_361 = 1<16>
	es_380 = 0<16>
l0800_21C1:
	Mem388[es_380:di_361 + 3<16>:byte] = 0<8>
	es_bx_423 = Mem388[ds:0x2E51<16>:segptr32]
	Mem427[es_bx_423 + 4<i16>:byte] = SLICE(ax_28 + (cx_51 + 4<16>) >>u 8<8>, byte, 0)
	Mem430[es_bx_423 + 5<i16>:byte] = bLoc0C_627 + bLoc0E_628
	return ch_721
fn0800_2085_exit:


void fn0800_2201(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_18D9
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di sp
fn0800_2201_entry:
	wArg02_242 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_246 = SLICE(ptrArg02, word16, 16) (alias)
l0800_2201:
	es_bx_14 = Mem12[ds:0x2E51<16>:segptr32]
	dx_45 = Mem31[ds:0x2E51<16>:word16] + ((CONVERT(Mem31[ptrArg02:byte], int8, int16) << 8<8>) + CONVERT(Mem31[ptrArg02 + 1<i16>:byte], uint8, uint16)) - wArg02_242 (alias)
	ax_25 = (CONVERT(Mem12[es_bx_14 + 4<i16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem12[es_bx_14 + 5<i16>:byte], uint8, uint16)
	ax_51 = wArg02_242 + dx_45
	fn0800_B0F3(ptrArg02, SEQ(wArg04_246, ax_51), Mem26[ds:0x2E51<16>:word16] + ax_25 - ax_51)
	es_bx_89 = Mem72[ds:0x2E51<16>:segptr32]
	Mem93[es_bx_89 + 4<i16>:byte] = SLICE(ax_25 - dx_45 >>u 8<8>, byte, 0)
	Mem96[es_bx_89 + 5<i16>:byte] = SLICE(ax_25 - dx_45, byte, 0)
	fn0800_2688(ds, -CONVERT(dx_45, word16, uint32), 0<32>)
	dx_124 = Mem112[ds:0x45AE<16>:word16]
	branch Mem112[ds:0x45B0<16>:word16] != wArg04_246 l0800_22EA
l0800_22B7:
	branch dx_124 != wArg02_242 l0800_22EA
l0800_22EA:
	branch Mem112[ds:0x45AE<16>:word16] <=u wArg02_242 l0800_22F9
l0800_22F2:
	Mem138[ds:0x45AA<16>:word16] = Mem112[ds:0x45AA<16>:word16] - dx_45
l0800_22F9:
	return
l0800_22BC:
	es_189 = SLICE(ptrArg02, selector, 16) (alias)
	di_151 = SLICE(ptrArg02, word16, 0) + 2<16>
	cx_156 = 0xFFFF<16>
l0800_22C7:
	branch cx_156 == 0<16> l0800_22C9
l0800_22C7_1:
	di_151 = di_151 + 1<i16>
	cx_156 = cx_156 - 1<16>
	branch Mem112[es_189:di_151:byte] == 0<8> l0800_22C7
l0800_22C9:
	cx_167 = ~cx_156
	di_170 = di_151 - cx_167
	v38_232 = di_170 == 0<16>
l0800_22CF:
	branch cx_167 == 0<16> l0800_22D1
l0800_22CF_2:
	v38_232 = Mem112[es_189:di_170:byte] == 0<8>
	di_170 = di_170 + 1<i16>
	cx_167 = cx_167 - 1<16>
	branch Mem112[es_189:di_170:byte] == 0<8> l0800_22CF
l0800_22D1:
	branch v38_232 l0800_22DA
l0800_22D3:
	di_170 = 1<16>
	es_189 = 0<16>
l0800_22DA:
	Mem203[ds:0x45AC<16>:word16] = es_189
	Mem204[ds:0x45AA<16>:word16] = di_170
	return
fn0800_2201_exit:


void fn0800_22FE(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_18D9
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di sp
fn0800_22FE_entry:
	wArg02_236 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_250 = SLICE(ptrArg02, word16, 16) (alias)
l0800_22FE:
	es_bx_14 = Mem12[ds:0x2E51<16>:segptr32]
	ax_25 = (CONVERT(Mem12[es_bx_14 + 4<i16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem12[es_bx_14 + 5<i16>:byte], uint8, uint16)
	bLoc08_262 = SLICE(ax_25, byte, 0) (alias)
	dx_29 = Mem26[ds:0x2E51<16>:word16] + ax_25
	es_213 = SLICE(ptrArg02, selector, 16) (alias)
	di_214 = SLICE(ptrArg02, word16, 0) (alias)
	cx_37 = 0xFFFF<16>
l0800_2336:
	branch cx_37 == 0<16> l0800_2338
l0800_2336_1:
	di_214 = di_214 + 1<i16>
	cx_37 = cx_37 - 1<16>
	branch Mem31[es_213:di_214:byte] == 0<8> l0800_2336
l0800_2338:
	cx_48 = ~cx_37
	di_326 = di_214 - cx_48
	v38_221 = di_326 == 0<16>
l0800_233E:
	branch cx_48 == 0<16> l0800_2340
l0800_233E_2:
	v38_221 = Mem31[es_213:di_326:byte] == 0<8>
	di_326 = di_326 + 1<i16>
	cx_48 = cx_48 - 1<16>
	branch Mem31[es_213:di_326:byte] == 0<8> l0800_233E
l0800_2340:
	branch v38_221 l0800_2349
l0800_2342:
	di_326 = 1<16>
l0800_2349:
	di_91 = di_326 + 4<16> - wArg02_236 (alias)
	ax_97 = wArg02_236 + di_91
	fn0800_B0F3(ptrArg02, SEQ(wArg04_250, ax_97), dx_29 - ax_97)
	es_bx_145 = Mem123[ds:0x2E51<16>:segptr32]
	Mem149[es_bx_145 + 4<i16>:byte] = SLICE(ax_25 - di_91 >>u 8<8>, byte, 0)
	Mem152[es_bx_145 + 5<i16>:byte] = bLoc08_262 - SLICE(di_91, byte, 0)
	fn0800_2688(ds, -CONVERT(di_91, word16, uint32), 0<32>)
	Mem182[ds:0x45AC<16>:word16] = wArg04_250
	dx_181 = wArg02_236 + di_91
	Mem183[ds:0x45AA<16>:word16] = dx_181
	branch (dx_181 | wArg04_250) == 0<16> l0800_23D8
l0800_23D8:
	branch Mem183[ds:0x45AA<16>:word16] <=u wArg02_236 l0800_23E7
l0800_23E0:
	Mem194[ds:0x45AA<16>:word16] = Mem183[ds:0x45AA<16>:word16] - di_91
l0800_23E7:
	return
l0800_23C6:
	Mem206[ds:0x45AC<16>:word16] = wArg04_250
	Mem207[ds:0x45AA<16>:word16] = wArg02_236
	return
fn0800_22FE_exit:


byte fn0800_23EC(selector ds, segptr32 ptrArg02, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_18D9
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: bp:[0..15]-fn0800_18D9 cx:[8..15]-fn0800_12E2 ds:[0..15]-fn0800_18D9 si:[0..15]-fn0800_18D9 sp:[0..15]-fn0800_18D9
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_23EC_entry:
	wArg04 = SLICE(ptrArg02, word16, 16)
	wArg02 = SLICE(ptrArg02, word16, 0)
l0800_23EC:
	ds_25 = fn0800_24FE(ds, ptrArg02)
	es_420 = wArg04 (alias)
	di_421 = wArg02 (alias)
	cx_42 = 0xFFFF<16>
l0800_240D:
	branch cx_42 == 0<16> l0800_240F
l0800_240D_1:
	di_421 = di_421 + 1<i16>
	cx_42 = cx_42 - 1<16>
	branch Mem36[wArg04:di_421:byte] == 0<8> l0800_240D
l0800_240F:
	cx_53 = ~cx_42
	di_56 = di_421 - cx_53
	v38_449 = di_56 == 0<16>
l0800_2415:
	branch cx_53 == 0<16> l0800_2417
l0800_2415_2:
	v38_449 = Mem36[wArg04:di_56:byte] == 0<8>
	di_56 = di_56 + 1<i16>
	cx_53 = cx_53 - 1<16>
	branch Mem36[wArg04:di_56:byte] == 0<8> l0800_2415
l0800_2417:
	branch v38_449 l0800_2420
l0800_2419:
	di_56 = 1<16>
	es_420 = 0<16>
l0800_2420:
	ax_86 = CONVERT(Mem36[es_420:di_56:byte], int8, int16)
	es_144 = wArg04 (alias)
	di_115 = wArg02 (alias)
	cx_111 = 0xFFFF<16>
l0800_2437:
	branch cx_111 == 0<16> l0800_2439
l0800_2437_1:
	di_115 = di_115 + 1<i16>
	cx_111 = cx_111 - 1<16>
	branch Mem106[wArg04:di_115:byte] == 0<8> l0800_2437
l0800_2439:
	cx_122 = ~cx_111
	di_125 = di_115 - cx_122
	v42_453 = di_125 == 0<16>
l0800_243F:
	branch cx_122 == 0<16> l0800_2441
l0800_243F_2:
	v42_453 = Mem106[wArg04:di_125:byte] == 0<8>
	di_125 = di_125 + 1<i16>
	cx_122 = cx_122 - 1<16>
	branch Mem106[wArg04:di_125:byte] == 0<8> l0800_243F
l0800_2441:
	branch v42_453 l0800_244A
l0800_2443:
	di_125 = 1<16>
	es_144 = 0<16>
l0800_244A:
	dx_169 = (ax_86 << 8<8>) + CONVERT(Mem106[es_144:di_125 + 1<16>:byte], uint8, uint16)
	es_217 = wArg04 (alias)
	di_188 = wArg02 (alias)
	cx_184 = 0xFFFF<16>
l0800_2462:
	branch cx_184 == 0<16> l0800_2464
l0800_2462_1:
	di_188 = di_188 + 1<i16>
	cx_184 = cx_184 - 1<16>
	branch Mem183[wArg04:di_188:byte] == 0<8> l0800_2462
l0800_2464:
	cx_195 = ~cx_184
	di_198 = di_188 - cx_195
	v46_457 = di_198 == 0<16>
l0800_246A:
	branch cx_195 == 0<16> l0800_246C
l0800_246A_2:
	v46_457 = Mem183[wArg04:di_198:byte] == 0<8>
	di_198 = di_198 + 1<i16>
	cx_195 = cx_195 - 1<16>
	branch Mem183[wArg04:di_198:byte] == 0<8> l0800_246A
l0800_246C:
	branch v46_457 l0800_2475
l0800_246E:
	di_198 = 1<16>
	es_217 = 0<16>
l0800_2475:
	ax_228 = CONVERT(Mem183[es_217:di_198 + 2<16>:byte], int8, int16)
	es_286 = wArg04 (alias)
	di_257 = wArg02 (alias)
	cx_253 = 0xFFFF<16>
l0800_248C:
	branch cx_253 == 0<16> l0800_248E
l0800_248C_1:
	di_257 = di_257 + 1<i16>
	cx_253 = cx_253 - 1<16>
	branch Mem248[wArg04:di_257:byte] == 0<8> l0800_248C
l0800_248E:
	cx_264 = ~cx_253
	di_267 = di_257 - cx_264
	v50_461 = di_267 == 0<16>
l0800_2494:
	branch cx_264 == 0<16> l0800_2496
l0800_2494_2:
	v50_461 = Mem248[wArg04:di_267:byte] == 0<8>
	di_267 = di_267 + 1<i16>
	cx_264 = cx_264 - 1<16>
	branch Mem248[wArg04:di_267:byte] == 0<8> l0800_2494
l0800_2496:
	branch v50_461 l0800_249F
l0800_2498:
	di_267 = 1<16>
	es_286 = 0<16>
l0800_249F:
	ax_dx_446 = SEQ(dx_169, 0<16>) + CONVERT((ax_228 << 8<8>) + CONVERT(Mem248[es_286:di_267 + 3<16>:byte], uint8, uint16), uint16, uint32) - Mem332[ds_25:0x45A6<16>:ui32]
	ch_574 = SLICE(CONVERT(fn0800_3C99(ds_25, Mem363[ds_25:0x29CF<16>:word32], SLICE(ax_dx_446, word16, 0), SLICE(ax_dx_446, word16, 16), out bp_371, out si_378, out ds_375), uint8, uint16), byte, 8) (alias)
	sp_379 = <invalid>
	Mem389[ss:sp_379 + 0xA<16>:word16] = Mem369[ss:bp_371 - 2<i16>:word16]
	Mem392[ss:sp_379 + 8<16>:word16] = Mem389[ss:bp_371 - 4<i16>:word16]
	ax_dx_448 = -Mem392[ss:bp_371 - 8<i16>:ui32]
	Mem401[ss:sp_379 + 6<16>:word16] = SLICE(ax_dx_448, word16, 16)
	Mem403[ss:sp_379 + 4<16>:word16] = SLICE(ax_dx_448, word16, 0)
	fn0800_2688(ds_375, Mem403[ss:sp_379 + 4<16>:ui32], Mem403[ss:sp_379 + 8<16>:word32])
	bpOut = Mem403[ss:bp_371:word16]
	siOut = si_378
	dsOut = ds_375
	return ch_574
fn0800_23EC_exit:


selector fn0800_24FE(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_19EE
//      fn0800_23EC
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ds:[0..15]-fn0800_19EE
// Trashed: SCZOP ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_24FE_entry:
l0800_24FE:
	es_51 = SLICE(ptrArg02, selector, 16) (alias)
	di_22 = SLICE(ptrArg02, word16, 0) (alias)
	cx_18 = 0xFFFF<16>
l0800_250D:
	branch cx_18 == 0<16> l0800_250F
l0800_250D_1:
	di_22 = di_22 + 1<i16>
	cx_18 = cx_18 - 1<16>
	branch Mem12[es_51:di_22:byte] == 0<8> l0800_250D
l0800_250F:
	cx_29 = ~cx_18
	di_32 = di_22 - cx_29
	v42_553 = di_32 == 0<16>
l0800_2515:
	branch cx_29 == 0<16> l0800_2517
l0800_2515_2:
	v42_553 = Mem12[es_51:di_32:byte] == 0<8>
	di_32 = di_32 + 1<i16>
	cx_29 = cx_29 - 1<16>
	branch Mem12[es_51:di_32:byte] == 0<8> l0800_2515
l0800_2517:
	branch v42_553 l0800_2520
l0800_2519:
	di_32 = 1<16>
	es_51 = 0<16>
l0800_2520:
	ax_62 = CONVERT(Mem12[es_51:di_32:byte], int8, int16)
	es_120 = SLICE(ptrArg02, selector, 16) (alias)
	di_100 = SLICE(ptrArg02, word16, 0) (alias)
	cx_87 = 0xFFFF<16>
l0800_2537:
	branch cx_87 == 0<16> l0800_2539
l0800_2537_1:
	di_100 = di_100 + 1<i16>
	cx_87 = cx_87 - 1<16>
	branch Mem82[es_120:di_100:byte] == 0<8> l0800_2537
l0800_2539:
	cx_103 = ~cx_87
	di_101 = di_100 - cx_103
	v46_557 = di_101 == 0<16>
l0800_253F:
	branch cx_103 == 0<16> l0800_2541
l0800_253F_2:
	v46_557 = Mem82[es_120:di_101:byte] == 0<8>
	di_101 = di_101 + 1<i16>
	cx_103 = cx_103 - 1<16>
	branch Mem82[es_120:di_101:byte] == 0<8> l0800_253F
l0800_2541:
	branch v46_557 l0800_254A
l0800_2543:
	di_101 = 1<16>
	es_120 = 0<16>
l0800_254A:
	dx_145 = (ax_62 << 8<8>) + CONVERT(Mem82[es_120:di_101 + 1<16>:byte], uint8, uint16)
	es_193 = SLICE(ptrArg02, selector, 16) (alias)
	di_164 = SLICE(ptrArg02, word16, 0) (alias)
	cx_160 = 0xFFFF<16>
l0800_2562:
	branch cx_160 == 0<16> l0800_2564
l0800_2562_1:
	di_164 = di_164 + 1<i16>
	cx_160 = cx_160 - 1<16>
	branch Mem159[es_193:di_164:byte] == 0<8> l0800_2562
l0800_2564:
	cx_171 = ~cx_160
	di_174 = di_164 - cx_171
	v50_561 = di_174 == 0<16>
l0800_256A:
	branch cx_171 == 0<16> l0800_256C
l0800_256A_2:
	v50_561 = Mem159[es_193:di_174:byte] == 0<8>
	di_174 = di_174 + 1<i16>
	cx_171 = cx_171 - 1<16>
	branch Mem159[es_193:di_174:byte] == 0<8> l0800_256A
l0800_256C:
	branch v50_561 l0800_2575
l0800_256E:
	di_174 = 1<16>
	es_193 = 0<16>
l0800_2575:
	ax_204 = CONVERT(Mem159[es_193:di_174 + 2<16>:byte], int8, int16)
	es_262 = SLICE(ptrArg02, selector, 16) (alias)
	di_233 = SLICE(ptrArg02, word16, 0) (alias)
	cx_229 = 0xFFFF<16>
l0800_258C:
	branch cx_229 == 0<16> l0800_258E
l0800_258C_1:
	di_233 = di_233 + 1<i16>
	cx_229 = cx_229 - 1<16>
	branch Mem224[es_262:di_233:byte] == 0<8> l0800_258C
l0800_258E:
	cx_240 = ~cx_229
	di_243 = di_233 - cx_240
	v54_565 = di_243 == 0<16>
l0800_2594:
	branch cx_240 == 0<16> l0800_2596
l0800_2594_2:
	v54_565 = Mem224[es_262:di_243:byte] == 0<8>
	di_243 = di_243 + 1<i16>
	cx_240 = cx_240 - 1<16>
	branch Mem224[es_262:di_243:byte] == 0<8> l0800_2594
l0800_2596:
	branch v54_565 l0800_259F
l0800_2598:
	di_243 = 1<16>
	es_262 = 0<16>
l0800_259F:
	fn0800_ACB3(ds, Mem339[ds:0x29CF<16>:word32], SEQ(dx_145, 0<16>) + CONVERT((ax_204 << 8<8>) + CONVERT(Mem224[es_262:di_243 + 3<16>:byte], uint8, uint16), uint16, uint32) - Mem224[ds:0x45A6<16>:ui32], 0<16>, out cx_755)
	dx_ax_756 = fn0800_3E5D(ds, Mem345[ds:0x29CF<16>:word32], out ds_368)
	ax_364 = SLICE(dx_ax_756, word16, 0) (alias)
	ax_380 = fn0800_8C8A(ax_364, 8<8>, SLICE(dx_ax_756, word16, 16), out cl_757, out dx_383)
	sp_384 = <invalid>
	branch dx_383 != 0x52<16> l0800_25FC
l0800_25F7:
	branch ax_380 == 0x4E43<16> l0800_260B
l0800_25FC:
	Mem397[ss:sp_384 - 2<i16>:word16] = ds_368
	Mem400[ss:sp_384 - 4<i16>:word16] = 0x4348<16>
	Mem403[ss:sp_384 - 6<i16>:word16] = 0xC<16>
	fn0800_0D24(ds_368, Mem403[ss:sp_384 - 6<i16>:word16], Mem403[ss:sp_384 - 4<i16>:segptr32], out cx_758, out dx_759, out bx_760, out si_761, out di_762, out ds_368)
l0800_260B:
	branch (ax_364 & 0xFF<16>) == 0<16> l0800_2655
l0800_2655:
	Mem434[ss:sp_384 - 2<i16>:word16] = Mem422[ds_368:0x29D1<16>:word16]
	Mem437[ss:sp_384 - 4<i16>:word16] = Mem434[ds_368:0x29CF<16>:word16]
	dx_ax_754 = fn0800_3E5D(ds_368, Mem437[ss:sp_384 - 4<i16>:word32], out ds_442)
	dx_443 = SLICE(dx_ax_754, word16, 16) (alias)
	Mem450[ds_442:0x2A05<16>:word16] = dx_443
	ax_438 = SLICE(dx_ax_754, word16, 0) (alias)
	Mem451[ds_442:0x2A03<16>:word16] = ax_438
	Mem452[ds_442:0x2A09<16>:word16] = dx_443
	Mem453[ds_442:0x2A07<16>:word16] = ax_438
l0800_2616:
	Mem463[ss:sp_384 - 2<i16>:word16] = Mem422[ds_368:0x29D1<16>:word16]
	Mem466[ss:sp_384 - 4<i16>:word16] = Mem463[ds_368:0x29CF<16>:word16]
	dx_ax_763 = fn0800_3E5D(ds_368, Mem466[ss:sp_384 - 4<i16>:word32], out ds_471)
	Mem480[ds_471:0x2A09<16>:word16] = SLICE(dx_ax_763, word16, 16)
	Mem481[ds_471:0x2A07<16>:word16] = SLICE(dx_ax_763, word16, 0)
	Mem484[ss:sp_384 - 2<i16>:word16] = Mem481[ds_471:0x29D1<16>:word16]
	Mem487[ss:sp_384 - 4<i16>:word16] = Mem484[ds_471:0x29CF<16>:word16]
	dx_ax_764 = fn0800_3E5D(ds_471, Mem487[ss:sp_384 - 4<i16>:word32], out ds_442)
	Mem500[ds_442:0x2A05<16>:word16] = SLICE(dx_ax_764, word16, 16)
	Mem501[ds_442:0x2A03<16>:word16] = SLICE(dx_ax_764, word16, 0)
l0800_267D:
	return ds_442
fn0800_24FE_exit:


byte fn0800_2688(selector ds, ui32 dwArg02, word32 dwArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_1F5C
//      fn0800_2085
//      fn0800_2201
//      fn0800_22FE
//      fn0800_23EC
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cl:[0..7]-fn0800_1F5C
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp sp
fn0800_2688_entry:
	wArg02 = SLICE(dwArg02, word16, 0)
l0800_2688:
	es_bx_11 = Mem7[ds:0x2E51<16>:segptr32]
	sp_9 = fp - 0x12<16>
	cl_16 = 8<8>
	dx_23 = Mem7[ds:0x2E53<16>:word16]
	bx_24 = SLICE(es_bx_11, word16, 0) + ((CONVERT(Mem7[es_bx_11 + 4<i16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem7[es_bx_11 + 5<i16>:byte], uint8, uint16))
	ptrLoc06_391 = SEQ(Mem26[ds:0x2E53<16>:word16], Mem26[ds:0x2E51<16>:word16] + 8<16>) (alias)
l0800_27B3:
	wLoc06_269 = SLICE(ptrLoc06_393, word16, 0) (alias)
	wLoc04_268 = SLICE(ptrLoc06_393, word16, 16) (alias)
	branch wLoc04_268 == dx_23 l0800_27C1
l0800_27C1:
	branch wLoc06_269 == bx_24 l0800_27C9
l0800_27C9:
	branch dwArg06 != 0<16> l0800_27DF
l0800_27D1:
	Mem56[ds:0x45A6<16>:ui32] = Mem52[ds:0x45A6<16>:ui32] + dwArg02
l0800_27DF:
	return cl_356
fn0800_2688_exit:
l0800_27C6:
l0800_27BE:
l0800_26C3:
	ptrLoc06_330 = SEQ(wLoc04_268, wLoc06_269 + 2<16>) (alias)
l0800_26D3:
	ptrLoc06_332 = SEQ(wLoc04_331, wLoc06_284 + 1<16>) (alias)
	wLoc06_284 = SLICE(ptrLoc06_283, word16, 0) (alias)
	wLoc04_331 = SLICE(ptrLoc06_283, word16, 16) (alias)
	branch Mem79[ptrLoc06_283:byte] != 0<8> l0800_26D3
l0800_26DF:
l0800_277D:
	bArg02_304 = SLICE(wArg02, byte, 0) (alias)
	wLoc06_287 = SLICE(ptrLoc06_286, word16, 0) (alias)
	wLoc04_308 = SLICE(ptrLoc06_286, word16, 16) (alias)
	branch Mem86[ptrLoc06_286:byte] == 0<8> l0800_2789
l0800_2789:
	dx_ax_253 = CONVERT(wLoc06_287 + 1<16> - Mem93[ds:0x2E51<16>:word16], word16, uint32)
	Mem116[ptrLoc06_393:byte] = SLICE(fn0800_8C8A(SLICE(dx_ax_253, word16, 0), 8<8>, SLICE(dx_ax_253, word16, 16), out cl_105, out dx_395), byte, 0)
	Mem125[ptrLoc06_393 + 1<i16>:byte] = SLICE(wLoc06_287, byte, 0) + 1<8> - Mem116[ds:0x2E51<16>:byte]
	sp_107 = <invalid>
	ptrLoc06_392 = SEQ(wLoc04_308, wLoc06_287 + 1<16>) (alias)
l0800_2786:
l0800_26E2:
	wLoc06_291 = SLICE(ptrLoc06_290, word16, 0) (alias)
	wLoc04_293 = SLICE(ptrLoc06_290, word16, 16) (alias)
	ptrLoc06_294 = SEQ(wLoc04_293, wLoc06_291 + 1<16>) (alias)
	branch Mem131[ptrLoc06_290:byte] != 0<8> l0800_26E2
l0800_26EE:
	sp_150 = sp_149 - 2<i16>
	Mem151[ss:sp_150:word16] = (CONVERT(Mem131[ptrLoc06_294:byte], int8, int16) << 8<8>) + CONVERT(Mem131[ptrLoc06_294 + 1<i16>:byte], uint8, uint16)
	ax_dx_256 = SEQ(Mem151[ss:sp_150:word16], 0<16>) + CONVERT((CONVERT(Mem151[ptrLoc06_294 + 2<i16>:byte], int8, int16) << 8<8>) + CONVERT(Mem151[ptrLoc06_294 + 3<i16>:byte], uint8, uint16), uint16, uint32)
	sp_162 = sp_150 + 2<i16>
	bLoc12_303 = SLICE(ax_dx_256, byte, 0) (alias)
	branch ax_dx_256 <u dwArg06 l0800_2779
l0800_272E:
	dx_ax_183 = CONVERT(SLICE(ax_dx_256 + dwArg02, word16, 16), int16, int32)
	Mem200[ptrLoc06_294:byte] = SLICE(fn0800_8C8A(SLICE(dx_ax_183, word16, 0), 8<8>, SLICE(dx_ax_183, word16, 16), out cl_396, out dx_397), byte, 0)
	Mem209[ptrLoc06_294 + 1<i16>:byte] = SLICE(ax_dx_256 + dwArg02, byte, 16)
	dx_ax_262 = ax_dx_256 + dwArg02
	Mem231[ptrLoc06_294 + 2<i16>:byte] = SLICE(fn0800_8C8A(SLICE(dx_ax_262, word16, 0), 8<8>, SLICE(dx_ax_262, word16, 16), out cl_398, out dx_399), byte, 0)
	Mem235[ptrLoc06_294 + 3<i16>:byte] = bLoc12_303 + bArg02_304
	sp_222 = <invalid>
l0800_2779:
	ptrLoc06_335 = SEQ(wLoc04_293, wLoc06_291 + 5<16>) (alias)


word16 fn0800_283D(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_12E2 dx:[0..15]-fn0800_12E2
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_283D_entry:
l0800_283D:
	es_293 = SLICE(ptrArg02, selector, 16) (alias)
	di_25 = SLICE(ptrArg02, word16, 0) (alias)
	cx_21 = 0xFFFF<16>
l0800_284D:
	branch cx_21 == 0<16> l0800_284F
l0800_284D_1:
	di_25 = di_25 + 1<i16>
	cx_21 = cx_21 - 1<16>
	branch Mem15[es_293:di_25:byte] == 0<8> l0800_284D
l0800_284F:
	cx_32 = ~cx_21
	di_35 = di_25 - cx_32
	v30_318 = di_35 == 0<16>
l0800_2856:
	branch cx_32 == 0<16> l0800_2858
l0800_2856_2:
	v30_318 = Mem15[es_293:di_35:byte] == 0x3A<8>
	di_35 = di_35 + 1<i16>
	cx_32 = cx_32 - 1<16>
	branch Mem15[es_293:di_35:byte] == 0x3A<8> l0800_2856
l0800_2858:
	branch v30_318 l0800_2861
l0800_285A:
	di_35 = 1<16>
	es_293 = 0<16>
l0800_2861:
	branch (di_35 - 1<16> | es_293) == 0<16> l0800_288E
l0800_2868:
	es_116 = SLICE(ptrArg02, selector, 16) (alias)
	di_300 = SLICE(ptrArg02, word16, 0) (alias)
	cx_83 = 0xFFFF<16>
l0800_2870:
	branch cx_83 == 0<16> l0800_2872
l0800_2870_1:
	di_300 = di_300 + 1<i16>
	cx_83 = cx_83 - 1<16>
	branch Mem15[es_116:di_300:byte] == 0<8> l0800_2870
l0800_2872:
	cx_106 = ~cx_83
	di_102 = di_300 - cx_106
	v34_322 = di_102 == 0<16>
l0800_2879:
	branch cx_106 == 0<16> l0800_287B
l0800_2879_2:
	v34_322 = Mem15[es_116:di_102:byte] == 0x3A<8>
	di_102 = di_102 + 1<i16>
	cx_106 = cx_106 - 1<16>
	branch Mem15[es_116:di_102:byte] == 0x3A<8> l0800_2879
l0800_287B:
	branch v34_322 l0800_2884
l0800_287D:
	di_102 = 1<16>
	es_116 = 0<16>
l0800_2884:
	ptrArg02 = SEQ(es_116, di_102) (alias)
l0800_288E:
	es_bx_150 = Mem149[ds:0x2E51<16>:segptr32]
	dx_162 = Mem149[ds:0x2E53<16>:word16]
	bx_163 = SLICE(es_bx_150, word16, 0) + ((CONVERT(Mem149[es_bx_150 + 4<i16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem149[es_bx_150 + 5<i16>:byte], uint8, uint16))
	ptrLoc0A_480 = SEQ(Mem167[ds:0x2E53<16>:word16], Mem167[ds:0x2E51<16>:word16] + 8<16>) (alias)
l0800_2917:
	wLoc0A_342 = SLICE(ptrLoc0A_480, word16, 0) (alias)
	wLoc08_341 = SLICE(ptrLoc0A_480, word16, 16) (alias)
	branch wLoc08_341 != dx_162 l0800_28C2
l0800_2922:
	branch wLoc0A_342 != bx_163 l0800_28C2
l0800_28C2:
	es_316 = SLICE(ptrArg02, selector, 16) (alias)
	di_204 = SLICE(ptrArg02, word16, 0) (alias)
	cx_200 = 0xFFFF<16>
l0800_28D4:
	branch cx_200 == 0<16> l0800_28D6
l0800_28D4_1:
	di_204 = di_204 + 1<i16>
	cx_200 = cx_200 - 1<16>
	branch Mem193[es_316:di_204:byte] == 0<8> l0800_28D4
l0800_28D6:
	cx_211 = ~cx_200
	ax_230 = 0<16>
	cmpResult_219 = memcmp(ptrLoc0A_480 + 2<32>, es_316:di_204 - cx_211, CONVERT(cx_211, word16, uint32))
	branch cmpResult_219 == 0<16> l0800_28E3
l0800_28DE:
	ax_227 = 0<16> - CONVERT(cmpResult_219 <u 0<16>, bool, word16)
	ax_230 = ax_227 - 0xFFFF<16> - CONVERT(ax_227 <u 0<16>, bool, word16)
l0800_28E3:
	branch ax_230 != 0<16> l0800_28F4
l0800_28F4:
	ptrLoc0A_480 = SEQ(Mem193[ds:0x2E53<16>:word16], Mem193[ds:0x2E51<16>:word16] + ((CONVERT(Mem193[ptrLoc0A_480:byte], int8, int16) << 8<8>) + CONVERT(Mem193[ptrLoc0A_480 + 1<i16>:byte], uint8, uint16))) (alias)
l0800_28E8:
	dxOut = wLoc08_341
	return wLoc0A_342
l0800_2927:
	dxOut = 0<16>
	return 0<16>
fn0800_283D_exit:


word16 fn0800_2931(segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax:[0..15]-fn0800_12E2 dx:[0..15]-fn0800_12E2
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_2931_entry:
l0800_2931:
	es_230 = SLICE(ptrArg06, selector, 16) (alias)
	di_17 = SLICE(ptrArg06, word16, 0) + 2<16>
	cx_22 = 0xFFFF<16>
l0800_2941:
	branch cx_22 == 0<16> l0800_2943
l0800_2941_1:
	di_17 = di_17 + 1<i16>
	cx_22 = cx_22 - 1<16>
	branch Mem14[es_230:di_17:byte] == 0<8> l0800_2941
l0800_2943:
	cx_33 = ~cx_22
	di_36 = di_17 - cx_33
	v27_264 = di_36 == 0<16>
l0800_2949:
	branch cx_33 == 0<16> l0800_294B
l0800_2949_2:
	v27_264 = Mem14[es_230:di_36:byte] == 0<8>
	di_36 = di_36 + 1<i16>
	cx_33 = cx_33 - 1<16>
	branch Mem14[es_230:di_36:byte] == 0<8> l0800_2949
l0800_294B:
	branch v27_264 l0800_2954
l0800_294D:
	di_36 = 1<16>
	es_230 = 0<16>
l0800_2954:
	ptrArg06_278 = SEQ(es_230, di_36) (alias)
l0800_29B4:
	branch Mem78[ptrArg06_278:byte] != 0<8> l0800_2960
l0800_2960:
	es_256 = SLICE(ptrArg02, selector, 16) (alias)
	di_102 = SLICE(ptrArg02, word16, 0) (alias)
	cx_103 = 0xFFFF<16>
	wArg08_292 = SLICE(ptrArg06_278, word16, 16) (alias)
	wArg06_293 = SLICE(ptrArg06_278, word16, 0) (alias)
l0800_296F:
	branch cx_103 == 0<16> l0800_2971
l0800_296F_1:
	di_102 = di_102 + 1<i16>
	cx_103 = cx_103 - 1<16>
	branch Mem88[es_256:di_102:byte] == 0<8> l0800_296F
l0800_2971:
	cx_106 = ~cx_103
	ax_125 = 0<16>
	cmpResult_114 = memcmp(ptrArg06_278, es_256:di_102 - cx_106, CONVERT(cx_106, word16, uint32))
	branch cmpResult_114 == 0<16> l0800_297E
l0800_2979:
	ax_122 = 0<16> - CONVERT(cmpResult_114 <u 0<16>, bool, word16)
	ax_125 = ax_122 - 0xFFFF<16> - CONVERT(ax_122 <u 0<16>, bool, word16)
l0800_297E:
	branch ax_125 != 0<16> l0800_298D
l0800_298D:
	es_189 = SLICE(ptrArg06_278, selector, 16) (alias)
	di_160 = SLICE(ptrArg06_278, word16, 0) (alias)
	cx_156 = 0xFFFF<16>
l0800_2995:
	branch cx_156 == 0<16> l0800_2997
l0800_2995_1:
	di_160 = di_160 + 1<i16>
	cx_156 = cx_156 - 1<16>
	branch Mem88[es_189:di_160:byte] == 0<8> l0800_2995
l0800_2997:
	cx_167 = ~cx_156
	di_170 = di_160 - cx_167
	v31_268 = di_170 == 0<16>
l0800_299D:
	branch cx_167 == 0<16> l0800_299F
l0800_299D_2:
	v31_268 = Mem88[es_189:di_170:byte] == 0<8>
	di_170 = di_170 + 1<i16>
	cx_167 = cx_167 - 1<16>
	branch Mem88[es_189:di_170:byte] == 0<8> l0800_299D
l0800_299F:
	branch v31_268 l0800_29A8
l0800_29A1:
	di_170 = 1<16>
	es_189 = 0<16>
l0800_29A8:
	ptrArg06_278 = SEQ(es_189, di_170 + 4<16>) (alias)
l0800_2983:
	dxOut = wArg08_292
	return wArg06_293
l0800_29BD:
	dxOut = 0<16>
	return 0<16>
fn0800_2931_exit:


word16 fn0800_29C5(word16 cx, word16 dx, word16 si, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_18D9
//      fn0800_19EE
//      fn0800_29C5
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut: ax:[0..15]-fn0800_29C5 ds:[0..15]-fn0800_19EE
// Trashed: SCZDOP ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_29C5_entry:
	wArg0C = SLICE(ptrArg0A, word16, 16)
	wArg0A = SLICE(ptrArg0A, word16, 0)
	wArg06 = SLICE(ptrArg06, word16, 0)
	wArg02 = SLICE(ptrArg02, word16, 0)
l0800_29C5:
	branch (Mem15[ds:0x45AE<16>:word16] | Mem15[ds:0x45B0<16>:word16]) != 0<16> l0800_2A07
l0800_29D6:
	branch (Mem15[ds:0x45AA<16>:word16] | Mem15[ds:0x45AC<16>:word16]) != 0<16> l0800_2A07
l0800_29DF:
	branch fn0800_2DE2(cx, dx, si, ds, SEQ(ds, 0x4541<16>), out cx_1394, out dx_1395, out si, out ds) != 0<16> l0800_29F6
l0800_29F6:
	dx_57 = Mem33[ds:0x2E51<16>:word16]
	Mem60[ds:0x45B0<16>:word16] = Mem33[ds:0x2E53<16>:word16]
	Mem61[ds:0x45AE<16>:word16] = dx_57 + 8<16>
l0800_2A07:
	fn0800_3509(fp - 108<i16>, ss, SEQ(ds, 0x4541<16>), out bx_1392)
	ch_818 = SLICE(CONVERT(fn0800_35A3(fp - 122<i16>, ss, SEQ(ds, 0x4541<16>), out dx_1393), uint8, uint16), byte, 8) (alias)
	es_bx_109 = Mem97[ds:0x2E51<16>:segptr32]
	dx_121 = Mem97[ds:0x2E53<16>:word16]
	bx_122 = SLICE(es_bx_109, word16, 0) + ((CONVERT(Mem97[es_bx_109 + 4<i16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem97[es_bx_109 + 5<i16>:byte], uint8, uint16))
	cx_166 = SEQ(ch_818, 8<8>) (alias)
l0800_2C53:
	dx_129 = Mem127[ds:0x45AE<16>:word16]
	branch Mem127[ds:0x45B0<16>:word16] == dx_121 l0800_2C62
l0800_2C62:
	branch dx_129 == bx_122 l0800_2C6A
l0800_2C6A:
	Mem141[ds:0x45AC<16>:word16] = 0<16>
	Mem142[ds:0x45AA<16>:word16] = 0<16>
	Mem143[ds:0x45B0<16>:word16] = 0<16>
	Mem144[ds:0x45AE<16>:word16] = 0<16>
	ax_169 = fn0800_29C5(cx_166, 0<16>, si, ds, wArg02, wArg06, wArg0A, out ds_1396)
	dsOut = ds
	return ax_169
l0800_2C67:
l0800_2C5F:
l0800_2A4C:
	branch (Mem127[ds:0x45AA<16>:word16] | Mem127[ds:0x45AC<16>:word16]) != 0<16> l0800_2A58
l0800_2A58:
l0800_2B54:
	branch Mem192[Mem192[ds:0x45AA<16>:segptr32]:byte] == 0<8> l0800_2B61
l0800_2B61:
	es_bx_198 = Mem192[ds:0x45AE<16>:segptr32]
	bx_211 = Mem192[ds:0x2E51<16>:word16] + ((CONVERT(Mem192[es_bx_198:byte], int8, int16) << 8<8>) + CONVERT(Mem192[es_bx_198 + 1<i16>:byte], uint8, uint16))
	Mem213[ds:0x45B0<16>:word16] = Mem192[ds:0x2E53<16>:word16]
	Mem214[ds:0x45AE<16>:word16] = bx_211
l0800_2B5E:
l0800_2A5B:
	branch fn0800_4357(Mem222[ds:0x45AA<16>:word32], SEQ(ss, fp - 122<i16>)) != 0<16> l0800_2A75
l0800_2A75:
	dx_245 = Mem228[ds:0x45AE<16>:word16]
	Mem248[ptrArg02 + 2<i16>:word16] = Mem228[ds:0x45B0<16>:word16]
	Mem249[ptrArg02:word16] = dx_245
	dx_252 = Mem249[ds:0x45AA<16>:word16]
	Mem255[ptrArg06 + 2<i16>:word16] = Mem249[ds:0x45AC<16>:word16]
	Mem256[ptrArg06:word16] = dx_252
	es_di_257 = Mem256[ds:0x45AE<16>:segptr32]
	es_261 = SLICE(es_di_257, selector, 16) (alias)
	di_1397 = SLICE(es_di_257, word16, 0) + 2<16>
	cx_281 = 0xFFFF<16>
l0800_2AB3:
	branch cx_281 == 0<16> l0800_2AB5
l0800_2AB3_1:
	di_1397 = di_1397 + 1<i16>
	cx_281 = cx_281 - 1<16>
	branch Mem276[es_261:di_1397:byte] == 0<8> l0800_2AB3
l0800_2AB5:
	cx_292 = ~cx_281
	di_294 = di_1397 - cx_292
	size_314 = (cx_292 >>u 1<16>) *u32 2<16>
	memcpy(ptrArg0A, es_261:di_294, size_314)
	memcpy(ptrArg0A + SLICE(size_314, word16, 0), es_261:di_294 + SLICE(size_314, word16, 0), CONVERT(SLICE(cond(cx_292 >>u 1<16>), bool, 1), bool, uint32))
	es_330 = Mem329[ds:0x45AC<16>:selector]
	di_1398 = Mem333[ds:0x45AA<16>:word16]
	cx_339 = 0xFFFF<16>
l0800_2ADD:
	branch cx_339 == 0<16> l0800_2ADF
l0800_2ADD_2:
	di_1398 = di_1398 + 1<i16>
	cx_339 = cx_339 - 1<16>
	branch Mem333[es_330:di_1398:byte] == 0<8> l0800_2ADD
l0800_2ADF:
	cx_350 = ~cx_339
	di_352 = di_1398 - cx_350
	di_1399 = wArg0A
	cx_371 = 0xFFFF<16>
l0800_2AF3:
	branch cx_371 == 0<16> l0800_2AF5
l0800_2AF3_3:
	di_1399 = di_1399 + 1<i16>
	cx_371 = cx_371 - 1<16>
	branch Mem370[wArg0C:di_1399:byte] == 0<8> l0800_2AF3
l0800_2AF5:
	memcpy(wArg0C:di_1399 - 1<16>, es_330:di_352, CONVERT(cx_350, word16, uint32))
	es_di_405 = Mem370[ds:0x45AA<16>:segptr32]
	es_439 = SLICE(es_di_405, selector, 16) (alias)
	di_1400 = SLICE(es_di_405, word16, 0) (alias)
	cx_406 = 0xFFFF<16>
l0800_2B02:
	branch cx_406 == 0<16> l0800_2B04
l0800_2B02_4:
	di_1400 = di_1400 + 1<i16>
	cx_406 = cx_406 - 1<16>
	branch Mem370[es_439:di_1400:byte] == 0<8> l0800_2B02
l0800_2B04:
	cx_417 = ~cx_406
	di_1401 = di_1400 - cx_417
	v47_888 = di_1401 == 0<16>
l0800_2B0A:
	branch cx_417 == 0<16> l0800_2B0C
l0800_2B0A_5:
	v47_888 = Mem370[es_439:di_1401:byte] == 0<8>
	di_1401 = di_1401 + 1<i16>
	cx_417 = cx_417 - 1<16>
	branch Mem370[es_439:di_1401:byte] == 0<8> l0800_2B0A
l0800_2B0C:
	branch v47_888 l0800_2B15
l0800_2B0E:
	di_1401 = 1<16>
	es_439 = 0<16>
l0800_2B15:
	Mem453[ds:0x45AC<16>:word16] = es_439
	Mem454[ds:0x45AA<16>:word16] = di_1401 + 4<16>
	dsOut = ds
	return 1<16>
l0800_2A72:
l0800_2B2B:
	es_di_481 = Mem228[ds:0x45AA<16>:segptr32]
	es_519 = SLICE(es_di_481, selector, 16) (alias)
	di_1402 = SLICE(es_di_481, word16, 0) (alias)
	cx_486 = 0xFFFF<16>
l0800_2B34:
	branch cx_486 == 0<16> l0800_2B36
l0800_2B34_1:
	di_1402 = di_1402 + 1<i16>
	cx_486 = cx_486 - 1<16>
	branch Mem228[es_519:di_1402:byte] == 0<8> l0800_2B34
l0800_2B36:
	cx_497 = ~cx_486
	di_1403 = di_1402 - cx_497
	v51_892 = di_1403 == 0<16>
l0800_2B3C:
	branch cx_497 == 0<16> l0800_2B3E
l0800_2B3C_2:
	v51_892 = Mem228[es_519:di_1403:byte] == 0<8>
	di_1403 = di_1403 + 1<i16>
	cx_497 = cx_497 - 1<16>
	branch Mem228[es_519:di_1403:byte] == 0<8> l0800_2B3C
l0800_2B3E:
	branch v51_892 l0800_2B47
l0800_2B40:
	di_1403 = 1<16>
	es_519 = 0<16>
l0800_2B47:
	Mem533[ds:0x45AC<16>:word16] = es_519
	Mem534[ds:0x45AA<16>:word16] = di_1403 + 4<16>
l0800_2A55:
l0800_2C12:
	dx_538 = Mem536[ds:0x45AE<16>:word16]
	branch Mem536[ds:0x45B0<16>:word16] == dx_121 l0800_2C21
l0800_2C21:
	branch dx_538 == bx_122 l0800_2C29
l0800_2C26:
l0800_2C1E:
l0800_2B8A:
	branch Mem536[ds:0x2A1B<16>:word16] == 0<16> l0800_2BBB
l0800_2B91:
	di_557 = fp - 108<i16>
	cx_562 = 0xFFFF<16>
l0800_2B9B:
	branch cx_562 == 0<16> l0800_2B9D
l0800_2B9B_1:
	di_557 = di_1404 + 1<i16>
	cx_562 = cx_562 - 1<16>
	di_1404 = di_557
	branch Mem553[ss:di_1404:byte] == 0<8> l0800_2B9B
l0800_2B9D:
	branch fn0800_BFE6(SEQ(Mem587[ds:0x45B0<16>:word16], Mem587[ds:0x45AE<16>:word16] + 2<16>), SEQ(ss, fp - 108<i16>), -cx_562) == 0<16> l0800_2C29
l0800_2BBB:
	branch Mem615[ds:0x2A1B<16>:word16] != 0<16> l0800_2BEC
l0800_2BC2:
	si_618 = Mem615[ds:0x45AE<16>:word16]
	ds_624 = Mem623[ds:0x45B0<16>:selector]
	di_1405 = fp - 108<i16>
	cx_635 = 0xFFFF<16>
l0800_2BD8:
	branch cx_635 == 0<16> l0800_2BDA
l0800_2BD8_2:
	di_1405 = di_1405 + 1<i16>
	cx_635 = cx_635 - 1<16>
	branch Mem626[ss:di_1405:byte] == 0<8> l0800_2BD8
l0800_2BDA:
	cx_646 = ~cx_635
	di_648 = di_1405 - cx_646
	cmpResult_654 = memcmp(ds_624:si_618 + 2<16>, ss:di_648, CONVERT(cx_646, word16, uint32))
	ax_665 = 0<16>
	si = si_618 + 2<16> + __find_first_difference__(ds_624:si_618 + 2<16>, ss:di_648)
	branch cmpResult_654 == 0<16> l0800_2BE7
l0800_2BE2:
	ax_662 = 0<16> - CONVERT(cmpResult_654 <u 0<16>, bool, word16)
	ax_665 = ax_662 - 0xFFFF<16> - CONVERT(ax_662 <u 0<16>, bool, word16)
l0800_2BE7:
	branch ax_665 == 0<16> l0800_2C29
l0800_2C29:
	es_di_690 = Mem689[ds:0x45AE<16>:segptr32]
	es_730 = SLICE(es_di_690, selector, 16) (alias)
	di_1406 = SLICE(es_di_690, word16, 0) + 2<16>
	cx_697 = 0xFFFF<16>
l0800_2C35:
	branch cx_697 == 0<16> l0800_2C37
l0800_2C35_1:
	di_1406 = di_1406 + 1<i16>
	cx_697 = cx_697 - 1<16>
	branch Mem689[es_730:di_1406:byte] == 0<8> l0800_2C35
l0800_2C37:
	cx_166 = ~cx_697
	di_1407 = di_1406 - cx_166
	v55_896 = di_1407 == 0<16>
l0800_2C3D:
	branch cx_166 == 0<16> l0800_2C3F
l0800_2C3D_2:
	v55_896 = Mem689[es_730:di_1407:byte] == 0<8>
	di_1407 = di_1407 + 1<i16>
	cx_166 = cx_166 - 1<16>
	branch Mem689[es_730:di_1407:byte] == 0<8> l0800_2C3D
l0800_2C3F:
	branch v55_896 l0800_2C48
l0800_2C41:
	di_1407 = 1<16>
	es_730 = 0<16>
l0800_2C48:
	Mem744[ds:0x45AC<16>:word16] = es_730
	Mem745[ds:0x45AA<16>:word16] = di_1407
l0800_2BEC:
	es_bx_748 = Mem747[ds:0x45AE<16>:segptr32]
	bx_761 = Mem747[ds:0x2E51<16>:word16] + ((CONVERT(Mem747[es_bx_748:byte], int8, int16) << 8<8>) + CONVERT(Mem747[es_bx_748 + 1<i16>:byte], uint8, uint16))
	Mem763[ds:0x45B0<16>:word16] = Mem747[ds:0x2E53<16>:word16]
	Mem764[ds:0x45AE<16>:word16] = bx_761
l0800_29EE:
	dsOut = ds
	return 0<16>
fn0800_29C5_exit:


word16 fn0800_2C9A(selector ds, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  ds:[0..15]
// LiveOut: bx:[0..15]-main cx:[0..15]-main dx:[0..15]-main
// Trashed: SCZOP ax bx cx dx Top
// Preserved: si sp
fn0800_2C9A_entry:
l0800_2C9A:
	cx_13 = 0<16>
	si_12 = 0x2A29<16>
l0800_2CA0:
	dx_14 = cx_13
	bx_15 = 8<16>
l0800_2CBD:
	branch bx_15 != 0<16> l0800_2CA7
l0800_2CA7:
	branch (dx_14 & 1<16>) == 0<16> l0800_2CB6
l0800_2CB6:
	ax_28 = dx_14 >>u 1<16>
l0800_2CAD:
	ax_28 = dx_14 >>u 1<16> ^ 0xA001<16>
l0800_2CBA:
	dx_14 = ax_28
	bx_15 = bx_15 - 1<16>
l0800_2CC1:
	Mem47[ds:si_12:word16] = dx_14
	si_12 = si_12 + 2<16>
	cx_13 = cx_13 + 1<16>
	branch cx_13 <u 0x100<16> l0800_2CA0
l0800_2CCD:
	dxOut = dx_14
	bxOut = bx_15
	return cx_13
fn0800_2C9A_exit:


word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_1CF6
//      fn0800_1E5E
//      fn0800_2D0A
// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax:[0..15]-fn0800_2D0A cl:[0..7]-fn0800_1CF6 dx:[0..15]-fn0800_1CF6
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp si sp
fn0800_2CCF_entry:
l0800_2CCF:
	si_12 = wArg06
	ax_39 = wArg08 (alias)
l0800_2CFD:
	bArg08_56 = SLICE(ax_39, byte, 0) (alias)
	wArg02_60 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_65 = SLICE(ptrArg02, word16, 16) (alias)
	si_12 = si_12 - 1<16>
	branch si_12 != 0<16> l0800_2CD8
l0800_2CD8:
	cl = 8<8>
	dx = ax_39 >>u 8<8>
	ax_39 = Mem23[ds:((CONVERT(bArg08_56 ^ Mem23[ptrArg02:byte], uint8, uint16) & 0xFF<16>) << 1<16>) + 0x2A29<16>:word16] ^ ax_39 >>u 8<8>
	ptrArg02 = SEQ(wArg04_65, wArg02_60 + 1<16>) (alias)
l0800_2D04:
	clOut = cl
	dxOut = dx
	return ax_39
fn0800_2CCF_exit:


word16 fn0800_2D0A(selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_5374
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_5374 bp:[0..15]-fn0800_5374 ds:[0..15]-fn0800_5374 sp:[0..15]-fn0800_5374
// Trashed: SCZOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_2D0A_entry:
l0800_2D0A:
	ax_23 = fn0800_4311(ds, 0xFFF0<32>, out dx_29, out bp_24, out si_241, out ds_118)
	Mem39[ss:bp_24 - 2<i16>:word16] = dx_29
	Mem40[ss:bp_24 - 4<i16>:word16] = ax_23
	sp_32 = <invalid>
	Mem43[ss:sp_32 + 2<16>:word16] = Mem40[ss:bp_24 + 6<i16>:word16]
	Mem46[ss:sp_32:word16] = Mem43[ss:bp_24 + 4<i16>:word16]
	dx_ax_242 = fn0800_AD2F(ds_118, Mem46[ss:sp_32:segptr32])
	Mem57[ss:bp_24 - 10<i16>:word16] = SLICE(dx_ax_242, word16, 16)
	Mem58[ss:bp_24 - 12<i16>:word16] = SLICE(dx_ax_242, word16, 0)
	si_155 = 0<16>
l0800_2D8F:
	branch (Mem65[ss:bp_24 + 8<i16>:word16] | Mem65[ss:bp_24 + 10<i16>:word16]) != 0<16> l0800_2D3A
l0800_2D3A:
	branch Mem65[ss:bp_24 + 8<i16>:word32] <=u 0xFFF0<32> l0800_2D4F
l0800_2D4F:
	dx_80 = Mem65[ss:bp_24 + 10<i16>:word16]
	ax_81 = Mem65[ss:bp_24 + 8<i16>:word16]
l0800_2D48:
	dx_80 = 0<16>
	ax_81 = 0xFFF0<16>
l0800_2D55:
	Mem92[ss:bp_24 - 6<i16>:word16] = dx_80
	Mem94[ss:bp_24 - 8<i16>:word16] = ax_81
	Mem101[ss:sp_32 + 2<16>:word16] = Mem94[ss:bp_24 + 6<i16>:word16]
	Mem104[ss:sp_32:word16] = Mem101[ss:bp_24 + 4<i16>:word16]
	Mem107[ss:sp_32 - 2<16>:word16] = Mem104[ss:bp_24 - 6<i16>:word16]
	Mem109[ss:sp_32 - 4<16>:word16] = ax_81
	Mem112[ss:sp_32 - 6<16>:word16] = Mem109[ss:bp_24 - 2<i16>:word16]
	Mem115[ss:sp_32 - 8<16>:word16] = Mem112[ss:bp_24 - 4<i16>:word16]
	fn0800_4110(ds_118, Mem115[ss:sp_32 - 8<16>:word32], Mem115[ss:sp_32 - 4<16>:word16], Mem115[ss:sp_32 - 2<16>:word16], Mem115[ss:sp_32:word32], out si_127, out di_247, out ds_118)
	Mem135[ss:sp_32 + 2<16>:word16] = si_127
	Mem138[ss:sp_32:word16] = Mem135[ss:bp_24 - 8<i16>:word16]
	Mem141[ss:sp_32 - 2<16>:word16] = Mem138[ss:bp_24 - 2<i16>:word16]
	Mem144[ss:sp_32 - 4<16>:word16] = Mem141[ss:bp_24 - 4<i16>:word16]
	si_155 = fn0800_2CCF(ds_118, Mem144[ss:sp_32 - 4<16>:segptr32], Mem144[ss:sp_32:word16], Mem144[ss:sp_32 + 2<16>:word16], out cl_248, out dx_249)
	Mem163[ss:bp_24 + 8<i16>:ui32] = Mem144[ss:bp_24 + 8<i16>:ui32] - Mem144[ss:bp_24 - 8<i16>:ui32]
l0800_2D97:
	Mem170[ss:sp_32 + 2<16>:word16] = 0<16>
	Mem173[ss:sp_32:word16] = Mem170[ss:bp_24 - 10<i16>:word16]
	Mem176[ss:sp_32 - 2<16>:word16] = Mem173[ss:bp_24 - 12<i16>:word16]
	Mem179[ss:sp_32 - 4<16>:word16] = Mem176[ss:bp_24 + 6<i16>:word16]
	Mem182[ss:sp_32 - 6<16>:word16] = Mem179[ss:bp_24 + 4<i16>:word16]
	fn0800_ACB3(ds_118, Mem182[ss:sp_32 - 6<16>:segptr32], Mem182[ss:sp_32 - 2<16>:ui32], Mem182[ss:sp_32 + 2<16>:word16], out cx_243)
	Mem197[ss:sp_32 + 2<16>:word16] = Mem182[ss:bp_24 - 2<i16>:word16]
	Mem200[ss:sp_32:word16] = Mem197[ss:bp_24 - 4<i16>:word16]
	fn0800_4346(ds_118, Mem200[ss:sp_32 + 2<16>:word16], out cx_244, out dx_245, out bx_246, out ds_204)
	bpOut = Mem200[ss:bp_24:word16]
	dsOut = ds_204
	return si_155
fn0800_2D0A_exit:


void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      fn0800_12E2
//      fn0800_18D9
//      fn0800_19EE
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: ax Top
// Preserved: bp sp
fn0800_2DBF_entry:
l0800_2DBF:
	Mem10[ds:0x4656<16>:word16] = 0xFFFF<16>
	Mem11[ds:0x4654<16>:word16] = 0<16>
	Mem13[ds:0x4652<16>:word16] = Mem11[ds:0x2A27<16>:word16]
	Mem15[ds:0x4650<16>:word16] = wArg02
	Mem17[ds:0x464E<16>:word16] = wArg04
	return
fn0800_2DBF_exit:


word16 fn0800_2DE2(word16 cx, word16 dx, word16 si, selector ds, segptr32 ptrArg02, ptr16 & cxOut, ptr16 & dxOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_29C5
//      fn0800_2DE2
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_2DE2 cx:[0..15]-fn0800_2DE2 ds:[0..15]-fn0800_112D dx:[0..15]-fn0800_2DE2 si:[0..15]-fn0800_29C5
// Trashed: SCZDOP ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_2DE2_entry:
	wArg04_1434 = SLICE(ptrArg02, word16, 16) (alias)
	wArg02_1436 = SLICE(ptrArg02, word16, 0) (alias)
l0800_2DE2:
	branch Mem15[ds:0x4654<16>:word16] != 0<16> l0800_2E11
l0800_2DF1:
	branch Mem15[ds:0x4652<16>:word16] != Mem15[ds:0x4656<16>:word16] l0800_2E11
l0800_2DFA:
	branch Mem15[ds:0x464E<16>:word16] == 0<16> l0800_2E11
l0800_2E01:
	si = fn0800_3479(ds, SEQ(ss, fp - 18<i16>), 0<16>, out cx, out dx)
l0800_2E11:
	branch Mem50[ds:0x4654<16>:word16] != 0<16> l0800_2E1B
l0800_2E1B:
	Mem53[ds:0x4617<16>:word16] = 0<16>
	branch (fn0800_A77D(ds, SEQ(ds, 0x45B2<16>), 0x65<16>, Mem53[ds:0x461B<16>:word32], out dx_73) | dx_73) != 0<16> l0800_2E3F
l0800_2E3F:
	es_128 = ds
	di_102 = 0x45B2<16>
	cx_103 = 0xFFFF<16>
l0800_2E49:
	branch cx_103 == 0<16> l0800_2E4B
l0800_2E49_1:
	di_102 = di_102 + 1<i16>
	cx_103 = cx_103 - 1<16>
	branch Mem87[ds:di_102:byte] == 0<8> l0800_2E49
l0800_2E4B:
	cx_106 = ~cx_103
	di_109 = di_102 - cx_106
	v65_1328 = di_109 == 0<16>
l0800_2E52:
	branch cx_106 == 0<16> l0800_2E54
l0800_2E52_2:
	v65_1328 = Mem87[ds:di_109:byte] == 0xD<8>
	di_109 = di_109 + 1<i16>
	cx_106 = cx_106 - 1<16>
	branch Mem87[ds:di_109:byte] == 0xD<8> l0800_2E52
l0800_2E54:
	branch v65_1328 l0800_2E5D
l0800_2E56:
	di_109 = 1<16>
	es_128 = 0<16>
l0800_2E5D:
	branch (di_109 - 1<16> | es_128) == 0<16> l0800_2E8B
l0800_2E64:
	es_157 = ds
	di_159 = 0x45B2<16>
	cx_164 = 0xFFFF<16>
l0800_2E6E:
	branch cx_164 == 0<16> l0800_2E70
l0800_2E6E_1:
	di_159 = di_159 + 1<i16>
	cx_164 = cx_164 - 1<16>
	branch Mem156[ds:di_159:byte] == 0<8> l0800_2E6E
l0800_2E70:
	cx_175 = ~cx_164
	di_178 = di_159 - cx_175
	v69_1332 = di_178 == 0<16>
l0800_2E77:
	branch cx_175 == 0<16> l0800_2E79
l0800_2E77_2:
	v69_1332 = Mem156[ds:di_178:byte] == 0xD<8>
	di_178 = di_178 + 1<i16>
	cx_175 = cx_175 - 1<16>
	branch Mem156[ds:di_178:byte] == 0xD<8> l0800_2E77
l0800_2E79:
	branch v69_1332 l0800_2E82
l0800_2E7B:
	di_178 = 1<16>
	es_157 = 0<16>
l0800_2E82:
	Mem206[es_157:di_178 - 1<16>:byte] = 0<8>
l0800_2E8B:
	branch CONVERT(Mem213[ds:0x45B2<16>:byte], int8, int16) != 0<16> l0800_2EA5
l0800_2EA5:
	di_239 = 0x45B2<16>
	cx_244 = 0xFFFF<16>
l0800_2EAF:
	branch cx_244 == 0<16> l0800_2EB1
l0800_2EAF_1:
	di_239 = di_1823 + 1<i16>
	cx_244 = cx_244 - 1<16>
	di_1823 = di_239
	branch Mem236[ds:di_1823:byte] == 0<8> l0800_2EAF
l0800_2EB1:
	Mem260[ds:0x4619<16>:word16] = -cx_244
	dx_272 = fn0800_0C6C(ds, SEQ(ds, 0x45B2<16>))
	branch Mem269[ds:0x464E<16>:word16] != 0<16> l0800_2EFE
l0800_2EFE:
	si = fn0800_33CD(ds, SEQ(ss, fp - 18<i16>), 0<16>, SEQ(ds, 0x45B2<16>), out cx, out dx)
	Mem325[ds:0x4654<16>:word16] = 0<16>
l0800_2ECA:
	di_1824 = 0x45B2<16>
	cx_342 = 0xFFFF<16>
l0800_2ED9:
	branch cx_342 == 0<16> l0800_2EDB
l0800_2ED9_2:
	di_1824 = di_1824 + 1<i16>
	cx_342 = cx_342 - 1<16>
	branch Mem336[ds:di_1824:byte] == 0<8> l0800_2ED9
l0800_2EDB:
	cx_353 = ~cx_342
	di_355 = di_1824 - cx_353
	size_375 = (cx_353 >>u 1<16>) *u32 2<16>
	memcpy(ptrArg02, ds:di_355, size_375)
	memcpy(ptrArg02 + SLICE(size_375, word16, 0), ds:di_355 + SLICE(size_375, word16, 0), CONVERT(SLICE(cond(cx_353 >>u 1<16>), bool, 1), bool, uint32))
	Mem387[ds:0x4617<16>:word16] = Mem373[ds:0x4617<16>:word16] + 1<16>
	cxOut = 0<16>
	dxOut = dx_272
	siOut = <invalid>
	dsOut = ds
	return 1<16>
l0800_2E93:
	ax_430 = fn0800_2DE2(cx_432, dx_431, si, ds, wArg02_1436, out cx_432, out dx_431, out si_1814, out ds_1815)
	cxOut = cx_432
	dxOut = dx_431
	siOut = <invalid>
	dsOut = ds
	return ax_430
l0800_2E3C:
l0800_2F1B:
	fn0800_A614(ds, Mem69[ds:0x461B<16>:word32], out ds_455)
	Mem463[ds_455:0x4654<16>:word16] = 0<16>
	Mem464[ds_455:0x461D<16>:word16] = 0<16>
	Mem465[ds_455:0x461B<16>:word16] = 0<16>
	Mem467[ds_455:0x4652<16>:word16] = Mem465[ds_455:0x4652<16>:word16] + 1<16>
	ax_477 = fn0800_2DE2(cx_479, dx_478, si, ds_455, wArg02_1436, out cx_479, out dx_478, out si_1806, out ds_1807)
	cxOut = cx_479
	dxOut = dx_478
	siOut = <invalid>
	dsOut = ds_455
	return ax_477
l0800_2E18:
l0800_2F51:
	ax_493 = Mem492[ds:0x4652<16>:word16]
	branch ax_493 != Mem492[ds:0x4656<16>:word16] l0800_2F5D
l0800_2F5D:
	branch ax_493 != Mem492[ds:0x269A<16>:word16] l0800_2F6B
l0800_2F6B:
	es_bx_501 = Mem492[ds:0x269C<16>:segptr32]
	es_505 = SLICE(es_bx_501, selector, 16) (alias)
	bx_503 = SLICE(es_bx_501, word16, 0) + (Mem492[ds:0x4652<16>:word16] << 2<16>)
	fn0800_BF9E(SEQ(ds, 0x45B2<16>), Mem492[es_505:bx_503:word32])
	di_533 = 0x45B2<16>
	cx_538 = 0xFFFF<16>
l0800_2F94:
	branch cx_538 == 0<16> l0800_2F96
l0800_2F94_1:
	di_533 = di_1825 + 1<i16>
	cx_538 = cx_538 - 1<16>
	di_1825 = di_533
	branch Mem530[ds:di_1825:byte] == 0<8> l0800_2F94
l0800_2F96:
	Mem554[ds:0x4619<16>:word16] = -cx_538
	fn0800_0C6C(ds, SEQ(ds, 0x45B2<16>))
	ax_573 = Mem563[ds:0x4652<16>:word16]
	Mem574[ds:0x4656<16>:word16] = ax_573
	Mem575[ds:0x4617<16>:word16] = 0<16>
	branch Mem575[Mem575[ds:Mem575[ds:0x269C<16>:word16] + (ax_573 << 2<16>):segptr32]:byte] != 0x40<8> l0800_3007
l0800_3007:
	dx_594 = fn0800_335C(ds, SEQ(ds, 0x45B2<16>))
	branch Mem590[ds:0x464E<16>:word16] != 0<16> l0800_3051
l0800_3051:
	si = fn0800_33CD(ds, SEQ(ss, fp - 18<i16>), 0<16>, SEQ(ds, 0x45B2<16>), out cx, out dx)
l0800_3019:
	di_1826 = 0x45B2<16>
	cx_654 = 0xFFFF<16>
l0800_3028:
	branch cx_654 == 0<16> l0800_302A
l0800_3028_1:
	di_1826 = di_1826 + 1<i16>
	cx_654 = cx_654 - 1<16>
	branch Mem648[ds:di_1826:byte] == 0<8> l0800_3028
l0800_302A:
	cx_665 = ~cx_654
	di_667 = di_1826 - cx_665
	size_687 = (cx_665 >>u 1<16>) *u32 2<16>
	memcpy(ptrArg02, ds:di_667, size_687)
	memcpy(ptrArg02 + SLICE(size_687, word16, 0), ds:di_667 + SLICE(size_687, word16, 0), CONVERT(SLICE(cond(cx_665 >>u 1<16>), bool, 1), bool, uint32))
	Mem699[ds:0x4617<16>:word16] = Mem685[ds:0x4617<16>:word16] + 1<16>
	Mem701[ds:0x4652<16>:word16] = Mem699[ds:0x4652<16>:word16] + 1<16>
	cxOut = 0<16>
	dxOut = dx_594
	siOut = <invalid>
	dsOut = ds
	return 1<16>
l0800_2FC7:
	es_bx_720 = Mem716[ds:0x269C<16>:segptr32]
	es_724 = SLICE(es_bx_720, selector, 16) (alias)
	bx_722 = SLICE(es_bx_720, word16, 0) + (Mem716[ds:0x4652<16>:word16] << 2<16>)
	ax_733 = fn0800_4234(ds, SEQ(Mem716[es_724:bx_722 + 2<i16>:word16], Mem716[es_724:bx_722:word16] + 1<16>), SEQ(ds, 0xA13<16>), out cx_1816, out dx_737, out si_740, out ds_736)
	Mem747[ds_736:0x461D<16>:word16] = dx_737
	Mem748[ds_736:0x461B<16>:word16] = ax_733
	Mem749[ds_736:0x4654<16>:word16] = 1<16>
	ax_762 = fn0800_2DE2(cx_764, dx_763, si_740, ds_736, wArg02_1436, out cx_764, out dx_763, out si_1817, out ds_1818)
	cxOut = cx_764
	dxOut = dx_763
	siOut = <invalid>
	dsOut = ds_736
	return ax_762
l0800_2F63:
	cxOut = cx
	dxOut = dx
	siOut = <invalid>
	dsOut = ds
	return 0<16>
l0800_2F5A:
l0800_3066:
	si_788 = si
	branch si != 0<16> l0800_306D
l0800_306D:
	branch Mem794[ds:0x2A1B<16>:word16] == 0<16> l0800_309E
l0800_3074:
l0800_309A:
	branch si_788 != 0<16> l0800_3076
l0800_3076:
	branch fn0800_31B4(ds, SEQ(ds, 0x45B2<16>), out cx, out dx) == 0<16> l0800_309E
l0800_3085:
	si_788 = fn0800_33CD(ds, SEQ(ss, fp - 18<i16>), 0<16>, SEQ(ds, 0x45B2<16>), out cx, out dx)
l0800_309E:
	si_860 = si_788
	branch si_788 == 0<16> l0800_30F0
l0800_30A2:
	bx_868 = Mem866[ds:0x4619<16>:word16]
	Mem869[ds:bx_868 + 0x45B2<16>:byte] = 0<8>
	branch Mem869[ds:0x4617<16>:word16] != 0<16> l0800_30C9
l0800_30B2:
	branch Mem869[ds:0x4650<16>:word16] == 0<16> l0800_30C9
l0800_30B9:
	si_860 = fn0800_B2EF(cx, dx, bx_868, ds, SEQ(ds, 0xA17<16>), out di_1811)
l0800_30C9:
	branch (Mem911[ds:0x461B<16>:word16] | Mem911[ds:0x461D<16>:word16]) == 0<16> l0800_30DA
l0800_30DA:
	Mem919[ds:0x4652<16>:word16] = Mem911[ds:0x4652<16>:word16] + 1<16>
l0800_30D2:
	Mem921[ds:0x4654<16>:word16] = 1<16>
l0800_30DE:
	ax_958 = fn0800_2DE2(cx, dx, si_860, ds, wArg02_1436, out cx_960, out dx_959, out si_1812, out ds_1813)
	cxOut = cx_960
	dxOut = dx_959
	siOut = <invalid>
	dsOut = ds
	return ax_958
l0800_306A:
l0800_30F0:
	fn0800_3509(wArg02_1436, wArg04_1434, SEQ(ds, 0x45B2<16>), out bx_1808)
	di_1010 = fp - 18<i16>
	cx_1023 = 0xFFFF<16>
l0800_311B:
	branch cx_1023 == 0<16> l0800_311D
l0800_311B_1:
	di_1010 = di_1010 + 1<i16>
	cx_1023 = cx_1023 - 1<16>
	branch Mem1018[ss:di_1010:byte] == 0<8> l0800_311B
l0800_311D:
	cx_1034 = ~cx_1023
	di_1036 = di_1010 - cx_1034
	di_1043 = wArg02_1436
	cx_1057 = 0xFFFF<16>
l0800_3132:
	branch cx_1057 == 0<16> l0800_3134
l0800_3132_2:
	di_1043 = di_1043 + 1<i16>
	cx_1057 = cx_1057 - 1<16>
	branch Mem1056[wArg04_1434:di_1043:byte] == 0<8> l0800_3132
l0800_3134:
	memcpy(wArg04_1434:di_1043 - 1<16>, ss:di_1036, CONVERT(cx_1034, word16, uint32))
	dx_1101 = fn0800_0C6C(ds, ptrArg02)
	di_1114 = 0x4348<16>
	cx_1122 = 0xFFFF<16>
l0800_315A:
	branch cx_1122 == 0<16> l0800_315C
l0800_315A_3:
	di_1114 = di_1114 + 1<i16>
	cx_1122 = cx_1122 - 1<16>
	branch Mem1116[ds:di_1114:byte] == 0<8> l0800_315A
l0800_315C:
	cx_1133 = ~cx_1122
	di_1135 = di_1114 - cx_1133
	cmpResult_1141 = memcmp(ptrArg02, ds:di_1135, CONVERT(cx_1133, word16, uint32))
	firstDifference_1142 = __find_first_difference__(ptrArg02, ds:di_1135)
	ax_1152 = 0<16>
	cx_1143 = cx_1133 - firstDifference_1142
	si_1144 = wArg02_1436 + firstDifference_1142
	branch cmpResult_1141 == 0<16> l0800_3169
l0800_3164:
	ax_1149 = 0<16> - CONVERT(cmpResult_1141 <u 0<16>, bool, word16)
	ax_1152 = ax_1149 - 0xFFFF<16> - CONVERT(ax_1149 <u 0<16>, bool, word16)
l0800_3169:
	branch ax_1152 == 0<16> l0800_3195
l0800_316E:
	di_1184 = 0x4477<16>
	cx_1192 = 0xFFFF<16>
l0800_3181:
	branch cx_1192 == 0<16> l0800_3183
l0800_3181_1:
	di_1184 = di_1184 + 1<i16>
	cx_1192 = cx_1192 - 1<16>
	branch Mem1186[ds:di_1184:byte] == 0<8> l0800_3181
l0800_3183:
	cx_1203 = ~cx_1192
	di_1205 = di_1184 - cx_1203
	cmpResult_1211 = memcmp(ptrArg02, ds:di_1205, CONVERT(cx_1203, word16, uint32))
	firstDifference_1212 = __find_first_difference__(ptrArg02, ds:di_1205)
	ax_1222 = 0<16>
	cx_1143 = cx_1203 - firstDifference_1212
	si_1144 = wArg02_1436 + firstDifference_1212
	branch cmpResult_1211 == 0<16> l0800_3190
l0800_318B:
	ax_1219 = 0<16> - CONVERT(cmpResult_1211 <u 0<16>, bool, word16)
	ax_1222 = ax_1219 - 0xFFFF<16> - CONVERT(ax_1219 <u 0<16>, bool, word16)
l0800_3190:
	branch ax_1222 != 0<16> l0800_31A7
l0800_31A7:
	Mem1246[ds:0x4617<16>:word16] = Mem1186[ds:0x4617<16>:word16] + 1<16>
	cxOut = cx_1143
	dxOut = dx_1101
	siOut = <invalid>
	dsOut = ds
	return 1<16>
l0800_3195:
	ax_1298 = fn0800_2DE2(cx_1143, dx_1101, si_1144, ds, wArg02_1436, out cx_1300, out dx_1299, out si_1809, out ds_1810)
	cxOut = cx_1300
	dxOut = dx_1299
	siOut = <invalid>
	dsOut = ds
	return ax_1298
fn0800_2DE2_exit:


word16 fn0800_31B4(selector ds, word32 dwArg02, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_2DE2
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_2DE2 cx:[0..15]-fn0800_2DE2 dx:[0..15]-fn0800_2DE2
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_31B4_entry:
	wArg04 = SLICE(dwArg02, word16, 16)
	wArg02 = SLICE(dwArg02, word16, 0)
l0800_31B4:
l0800_31BD:
	fn0800_3509(fp - 0x84<16>, ss, dwArg02, out bx_456)
	fn0800_35A3(fp - 16<i16>, ss, dwArg02, out dx_457)
	branch fn0800_32CD(ds, SEQ(ss, fp - 30<i16>), fp - 0x84<16>, ss, Mem54[ds:(Mem54[ds:0x9AC<16>:word16] << 1<16>) + 0x9AE<16>:word16], out cx_85, out dx_86) != 0<16> l0800_323E
l0800_323E:
	branch Mem82[ds:0x9AC<16>:word16] != 0<16> l0800_3253
l0800_3253:
	di_106 = fp - 0x84<16>
	cx_111 = 0xFFFF<16>
l0800_325E:
	branch cx_111 == 0<16> l0800_3260
l0800_325E_1:
	di_106 = di_458 + 1<i16>
	cx_111 = cx_111 - 1<16>
	di_458 = di_106
	branch Mem103[ss:di_458:byte] == 0<8> l0800_325E
l0800_3260:
	Mem133[ss:~cx_111 - 2<16> + (fp - 0x84<16>):byte] = 0<8>
	fn0800_3509(wArg02, wArg04, SEQ(ss, fp - 0x84<16>), out bx_455)
	di_169 = fp - 16<i16>
	cx_182 = 0xFFFF<16>
l0800_3298:
	branch cx_182 == 0<16> l0800_329A
l0800_3298_2:
	di_169 = di_169 + 1<i16>
	cx_182 = cx_182 - 1<16>
	branch Mem177[ss:di_169:byte] == 0<8> l0800_3298
l0800_329A:
	cx_193 = ~cx_182
	di_195 = di_169 - cx_193
	di_202 = wArg02
	cx_216 = 0xFFFF<16>
l0800_32AE:
	branch cx_216 == 0<16> l0800_32B0
l0800_32AE_3:
	di_202 = di_202 + 1<i16>
	cx_216 = cx_216 - 1<16>
	branch Mem215[wArg04:di_202:byte] == 0<8> l0800_32AE
l0800_32B0:
	memcpy(wArg04:di_202 - 1<16>, ss:di_195, CONVERT(cx_193, word16, uint32))
	Mem252[ds:0x9AC<16>:word16] = Mem215[ds:0x9AC<16>:word16] - 1<16>
	bx_253 = Mem252[ds:0x9AC<16>:word16]
	Mem257[ds:(bx_253 << 1<16>) + 0x9AE<16>:word16] = Mem252[ds:(bx_253 << 1<16>) + 0x9AE<16>:word16] + 1<16>
l0800_3245:
	Mem259[ds:0x9AE<16>:word16] = 0<16>
	cxOut = <invalid>
	dxOut = <invalid>
	return 0<16>
l0800_31FF:
	fn0800_BEA2(cx_85, dx_86, ds, dwArg02, SEQ(ds, 0xA27<16>), out di_454)
	Mem313[ds:0x9AC<16>:word16] = Mem300[ds:0x9AC<16>:word16] + 1<16>
	Mem317[ds:(Mem313[ds:0x9AC<16>:word16] << 1<16>) + 0x9AE<16>:word16] = 0<16>
	cxOut = <invalid>
	dxOut = <invalid>
	return 1<16>
fn0800_31B4_exit:


word16 fn0800_32CD(selector ds, word32 dwArg02, word16 wArg06, selector psegArg08, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_31B4
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax:[0..15]-fn0800_31B4 cx:[0..15]-fn0800_31B4 dx:[0..15]-fn0800_31B4
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_32CD_entry:
l0800_32CD:
	di_26 = wArg06
	cx_31 = 0xFFFF<16>
l0800_32E7:
	branch cx_31 == 0<16> l0800_32E9
l0800_32E7_1:
	di_26 = di_26 + 1<i16>
	cx_31 = cx_31 - 1<16>
	branch Mem25[psegArg08:di_26:byte] == 0<8> l0800_32E7
l0800_32E9:
	cx_42 = ~cx_31
	di_44 = di_26 - cx_42
	size_65 = (cx_42 >>u 1<16>) *u32 2<16>
	memcpy(ss:fp - 104<i16>, psegArg08:di_44, size_65)
	memcpy(ss:fp - 104<i16> + SLICE(size_65, word16, 0), psegArg08:di_44 + SLICE(size_65, word16, 0), CONVERT(SLICE(cond(cx_42 >>u 1<16>), bool, 1), bool, uint32))
	di_314 = fp - 104<i16>
	cx_82 = 0xFFFF<16>
l0800_330C:
	branch cx_82 == 0<16> l0800_330E
l0800_330C_2:
	di_314 = di_314 + 1<i16>
	cx_82 = cx_82 - 1<16>
	branch Mem75[ss:di_314:byte] == 0<8> l0800_330C
l0800_330E:
	memcpy(ss:di_314 - 1<16>, ds:0xA32<16>, 4<u32>)
	branch fn0800_33CD(ds, dwArg02, 0x10<16>, SEQ(ss, fp - 104<i16>), out cx_131, out dx_132) == 0<16> l0800_334D
l0800_334D:
	branch wArg0A != 0<16> l0800_3336
l0800_3336:
	branch fn0800_3479(ds, dwArg02, 0x10<16>, out cx_131, out dx_132) != 0<16> l0800_3353
l0800_334A:
	wArg0A = wArg0A - 1<16>
l0800_3353:
	cxOut = cx_131
	dxOut = dx_132
	return wArg0A
l0800_332D:
	cxOut = cx_131
	dxOut = dx_132
	return 1<16>
fn0800_32CD_exit:


word16 fn0800_335C(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_2DE2
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: dx:[0..15]-fn0800_2DE2
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_335C_entry:
	wArg04 = SLICE(ptrArg02, word16, 16)
	wArg02 = SLICE(ptrArg02, word16, 0)
l0800_335C:
	branch fn0800_33CD(ds, SEQ(ss, fp - 16<i16>), 0x10<16>, ptrArg02, out cx_289, out dx_260) != 0<16> l0800_33C7
l0800_337D:
	fn0800_35A3(fp - 30<i16>, ss, ptrArg02, out dx_260)
	di_290 = fp - 30<i16>
	cx_85 = 0xFFFF<16>
l0800_33A0:
	branch cx_85 == 0<16> l0800_33A2
l0800_33A0_1:
	di_290 = di_290 + 1<i16>
	cx_85 = cx_85 - 1<16>
	branch Mem77[ss:di_290:byte] == 0<8> l0800_33A0
l0800_33A2:
	cx_96 = ~cx_85
	ax_115 = 0<16>
	cmpResult_104 = memcmp(ss:fp - 16<i16>, ss:di_290 - cx_96, CONVERT(cx_96, word16, uint32))
	branch cmpResult_104 == 0<16> l0800_33AF
l0800_33AA:
	ax_112 = 0<16> - CONVERT(cmpResult_104 <u 0<16>, bool, word16)
	ax_115 = ax_112 - 0xFFFF<16> - CONVERT(ax_112 <u 0<16>, bool, word16)
l0800_33AF:
	branch ax_115 != 0<16> l0800_33C7
l0800_33B4:
	di_151 = wArg02 (alias)
	cx_143 = 0xFFFF<16>
l0800_33BF:
	branch cx_143 == 0<16> l0800_33C1
l0800_33BF_1:
	di_151 = di_151 + 1<i16>
	cx_143 = cx_143 - 1<16>
	branch Mem77[wArg04:di_151:byte] == 0<8> l0800_33BF
l0800_33C1:
	memcpy(wArg04:di_151 - 1<16>, ds:0xA36<16>, 5<u32>)
l0800_33C7:
	return dx_260
fn0800_335C_exit:


word16 fn0800_33CD(selector ds, segptr32 ptrArg02, word16 wArg06, word32 dwArg08, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_2DE2
//      fn0800_32CD
//      fn0800_335C
//      fn0800_3678
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax:[0..15]-fn0800_3678 cx:[0..15]-fn0800_32CD dx:[0..15]-fn0800_32CD
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_33CD_entry:
l0800_33CD:
	branch fn0800_A817(0x23<8>, ds, dwArg08, SEQ(ds, 0x4623<16>), wArg06, out cx_33, out dx_34) == 0<16> l0800_33F1
l0800_33F1:
	ax_55 = 0<16>
	cmpResult_56 = memcmp(ds:0x4641<16>, ds:0xA3B<16>, 2<u32>)
	branch cmpResult_56 == 0<16> l0800_3407
l0800_3402:
	ax_64 = 0<16> - CONVERT(cmpResult_56 <u 0<16>, bool, word16)
	ax_55 = ax_64 - 0xFFFF<16> - CONVERT(ax_64 <u 0<16>, bool, word16)
l0800_3407:
	branch ax_55 == 0<16> l0800_3431
l0800_340B:
	cmpResult_86 = memcmp(ds:0x4641<16>, ds:0xA3D<16>, 3<u32>)
	ax_85 = 0<16>
	cx_179 = 3<16> - __find_first_difference__(ds:0x4641<16>, ds:0xA3D<16>)
	branch cmpResult_86 == 0<16> l0800_3421
l0800_341C:
	ax_94 = 0<16> - CONVERT(cmpResult_86 <u 0<16>, bool, word16)
	ax_85 = ax_94 - 0xFFFF<16> - CONVERT(ax_94 <u 0<16>, bool, word16)
l0800_3421:
	branch ax_85 == 0<16> l0800_3431
l0800_3425:
	branch (CONVERT(Mem79[ds:0x4638<16>:byte], int8, int16) & wArg06) == wArg06 l0800_3444
l0800_3444:
	branch ptrArg02 == 0<16> l0800_3473
l0800_344C:
	di_133 = 0x4641<16>
	cx_138 = 0xFFFF<16>
l0800_345B:
	branch cx_138 == 0<16> l0800_345D
l0800_345B_1:
	di_133 = di_133 + 1<i16>
	cx_138 = cx_138 - 1<16>
	branch Mem132[ds:di_133:byte] == 0<8> l0800_345B
l0800_345D:
	cx_149 = ~cx_138
	di_151 = di_133 - cx_149
	size_171 = (cx_149 >>u 1<16>) *u32 2<16>
	memcpy(ptrArg02, ds:di_151, size_171)
	memcpy(ptrArg02 + SLICE(size_171, word16, 0), ds:di_151 + SLICE(size_171, word16, 0), CONVERT(SLICE(cond(cx_149 >>u 1<16>), bool, 1), bool, uint32))
	cx_179 = 0<16>
l0800_3473:
	cxOut = cx_179
	dxOut = dx_34
	return 0<16>
l0800_3431:
	ax_212 = fn0800_3479(ds, ptrArg02, wArg06, out cx_214, out dx_215)
	cxOut = cx_214
	dxOut = dx_215
	return ax_212
l0800_33EA:
	cxOut = cx_33
	dxOut = dx_34
	return 1<16>
fn0800_33CD_exit:


word16 fn0800_3479(selector ds, segptr32 ptrArg02, word16 wArg06, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_2DE2
//      fn0800_32CD
//      fn0800_33CD
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut: ax:[0..15]-fn0800_33CD cx:[0..15]-fn0800_33CD dx:[0..15]-fn0800_33CD
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_3479_entry:
l0800_3479:
l0800_347E:
	branch fn0800_A84A(0x23<8>, ds, SEQ(ds, 0x4623<16>), out cx_26, out dx_27) == 0<16> l0800_3494
l0800_3494:
	ax_48 = 0<16>
	cmpResult_49 = memcmp(ds:0x4641<16>, ds:0xA3B<16>, 2<u32>)
	branch cmpResult_49 == 0<16> l0800_34AA
l0800_34A5:
	ax_57 = 0<16> - CONVERT(cmpResult_49 <u 0<16>, bool, word16)
	ax_48 = ax_57 - 0xFFFF<16> - CONVERT(ax_57 <u 0<16>, bool, word16)
l0800_34AA:
	branch ax_48 == 0<16> l0800_347E
l0800_34AE:
	cmpResult_79 = memcmp(ds:0x4641<16>, ds:0xA3D<16>, 3<u32>)
	ax_78 = 0<16>
	cx_173 = 3<16> - __find_first_difference__(ds:0x4641<16>, ds:0xA3D<16>)
	branch cmpResult_79 == 0<16> l0800_34C4
l0800_34BF:
	ax_87 = 0<16> - CONVERT(cmpResult_79 <u 0<16>, bool, word16)
	ax_78 = ax_87 - 0xFFFF<16> - CONVERT(ax_87 <u 0<16>, bool, word16)
l0800_34C4:
	branch ax_78 == 0<16> l0800_347E
l0800_34C8:
	branch (CONVERT(Mem72[ds:0x4638<16>:byte], int8, int16) & wArg06) != wArg06 l0800_347E
l0800_34D4:
	branch ptrArg02 == 0<16> l0800_3503
l0800_34DC:
	di_127 = 0x4641<16>
	cx_132 = 0xFFFF<16>
l0800_34EB:
	branch cx_132 == 0<16> l0800_34ED
l0800_34EB_1:
	di_127 = di_127 + 1<i16>
	cx_132 = cx_132 - 1<16>
	branch Mem126[ds:di_127:byte] == 0<8> l0800_34EB
l0800_34ED:
	cx_143 = ~cx_132
	di_145 = di_127 - cx_143
	size_165 = (cx_143 >>u 1<16>) *u32 2<16>
	memcpy(ptrArg02, ds:di_145, size_165)
	memcpy(ptrArg02 + SLICE(size_165, word16, 0), ds:di_145 + SLICE(size_165, word16, 0), CONVERT(SLICE(cond(cx_143 >>u 1<16>), bool, 1), bool, uint32))
	cx_173 = 0<16>
l0800_3503:
	cxOut = cx_173
	dxOut = <invalid>
	return 0<16>
l0800_348D:
	cxOut = cx_26
	dxOut = <invalid>
	return 1<16>
fn0800_3479_exit:


word16 fn0800_3509(word16 wArg02, selector psegArg04, word32 dwArg06, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0C93
//      fn0800_12E2
//      fn0800_19EE
//      fn0800_29C5
//      fn0800_2DE2
//      fn0800_31B4
//      fn0800_3764
//      fn0800_37DF
//      fn0800_3992
//      fn0800_3C99
// MayUse:  ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: bx:[0..15]-fn0800_0C93 dx:[0..15]-fn0800_0C93
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_3509_entry:
l0800_3509:
	bx_44 = fn0800_BE3B(dwArg06, SEQ(ss, fp - 6<i16>), SEQ(ss, fp - 90<i16>), SEQ(ss, fp - 16<i16>), SEQ(ss, fp - 22<i16>))
	di_333 = fp - 6<i16>
	cx_81 = 0xFFFF<16>
l0800_354B:
	branch cx_81 == 0<16> l0800_354D
l0800_354B_1:
	di_333 = di_333 + 1<i16>
	cx_81 = cx_81 - 1<16>
	branch Mem76[ss:di_333:byte] == 0<8> l0800_354B
l0800_354D:
	cx_92 = ~cx_81
	di_94 = di_333 - cx_92
	size_115 = (cx_92 >>u 1<16>) *u32 2<16>
	memcpy(psegArg04:wArg02, ss:di_94, size_115)
	memcpy(psegArg04:wArg02 + SLICE(size_115, word16, 0), ss:di_94 + SLICE(size_115, word16, 0), CONVERT(SLICE(cond(cx_92 >>u 1<16>), bool, 1), bool, uint32))
	di_139 = fp - 90<i16>
	cx_152 = 0xFFFF<16>
l0800_357D:
	branch cx_152 == 0<16> l0800_357F
l0800_357D_2:
	di_139 = di_139 + 1<i16>
	cx_152 = cx_152 - 1<16>
	branch Mem147[ss:di_139:byte] == 0<8> l0800_357D
l0800_357F:
	cx_163 = ~cx_152
	di_165 = di_139 - cx_163
	di_172 = wArg02
	cx_186 = 0xFFFF<16>
l0800_3594:
	branch cx_186 == 0<16> l0800_3596
l0800_3594_3:
	di_172 = di_172 + 1<i16>
	cx_186 = cx_186 - 1<16>
	branch Mem185[psegArg04:di_172:byte] == 0<8> l0800_3594
l0800_3596:
	memcpy(psegArg04:di_172 - 1<16>, ss:di_165, CONVERT(cx_163, word16, uint32))
	bxOut = bx_44
	return psegArg04
fn0800_3509_exit:


byte fn0800_35A3(word16 wArg02, selector psegArg04, word32 dwArg06, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0ABC
//      fn0800_12E2
//      fn0800_19EE
//      fn0800_29C5
//      fn0800_31B4
//      fn0800_335C
//      fn0800_37DF
//      fn0800_3992
// MayUse:  ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: cx:[8..15]-fn0800_29C5 dx:[0..15]-fn0800_335C
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_35A3_entry:
l0800_35A3:
	fn0800_BE3B(dwArg06, SEQ(ss, fp - 6<i16>), SEQ(ss, fp - 90<i16>), SEQ(ss, fp - 16<i16>), SEQ(ss, fp - 22<i16>))
	di_333 = fp - 16<i16>
	cx_81 = 0xFFFF<16>
l0800_35E5:
	branch cx_81 == 0<16> l0800_35E7
l0800_35E5_1:
	di_333 = di_333 + 1<i16>
	cx_81 = cx_81 - 1<16>
	branch Mem76[ss:di_333:byte] == 0<8> l0800_35E5
l0800_35E7:
	cx_92 = ~cx_81
	di_94 = di_333 - cx_92
	size_115 = (cx_92 >>u 1<16>) *u32 2<16>
	memcpy(psegArg04:wArg02, ss:di_94, size_115)
	memcpy(psegArg04:wArg02 + SLICE(size_115, word16, 0), ss:di_94 + SLICE(size_115, word16, 0), CONVERT(SLICE(cond(cx_92 >>u 1<16>), bool, 1), bool, uint32))
	di_139 = fp - 22<i16>
	cx_152 = 0xFFFF<16>
l0800_3617:
	branch cx_152 == 0<16> l0800_3619
l0800_3617_2:
	di_139 = di_139 + 1<i16>
	cx_152 = cx_152 - 1<16>
	branch Mem147[ss:di_139:byte] == 0<8> l0800_3617
l0800_3619:
	cx_163 = ~cx_152
	di_165 = di_139 - cx_163
	di_172 = wArg02
	cx_186 = 0xFFFF<16>
l0800_362E:
	branch cx_186 == 0<16> l0800_3630
l0800_362E_3:
	di_172 = di_172 + 1<i16>
	cx_186 = cx_186 - 1<16>
	branch Mem185[psegArg04:di_172:byte] == 0<8> l0800_362E
l0800_3630:
	memcpy(psegArg04:di_172 - 1<16>, ss:di_165, CONVERT(cx_163, word16, uint32))
	dxOut = psegArg04
	return 0<8>
fn0800_35A3_exit:


word16 fn0800_363D(selector ds, segptr32 ptrArg02, word32 dwArg06, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_388C
//      fn0800_3992
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx:[0..15]-fn0800_388C dx:[0..15]-fn0800_388C
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_363D_entry:
l0800_363D:
	branch fn0800_A817(SLICE(fp, byte, 0) - 0x2E<8>, ds, dwArg06, SEQ(ss, fp - 46<i16>), 0<16>, out cx_31, out dx_32) == 0<16> l0800_3662
l0800_3662:
	Mem50[ptrArg02:word16] = wLoc18
	Mem52[ptrArg02 + 2<i16>:word16] = wLoc16
	return
l0800_365B:
	return
fn0800_363D_exit:


word16 fn0800_3678(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_19EE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: cx:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D dx:[0..15]-fn0800_112D si:[0..15]-fn0800_112D
// Trashed: SCZO ax bx cx ds dx es si Top
// Preserved: DP bp di sp
fn0800_3678_entry:
	wArg04 = SLICE(ptrArg02, word16, 16)
	wArg02 = SLICE(ptrArg02, word16, 0)
l0800_3678:
	es_283 = wArg04 (alias)
	di_26 = wArg02 (alias)
	cx_22 = 0xFFFF<16>
	ptrLoc06_346 = ptrArg02 (alias)
l0800_3693:
	branch cx_22 == 0<16> l0800_3695
l0800_3693_1:
	di_26 = di_26 + 1<i16>
	cx_22 = cx_22 - 1<16>
	branch Mem16[wArg04:di_26:byte] == 0<8> l0800_3693
l0800_3695:
	cx_33 = ~cx_22
	di_36 = di_26 - cx_33
	v33_311 = di_36 == 0<16>
l0800_369C:
	branch cx_33 == 0<16> l0800_369E
l0800_369C_2:
	v33_311 = Mem16[wArg04:di_36:byte] == 0x5C<8>
	di_36 = di_36 + 1<i16>
	cx_33 = cx_33 - 1<16>
	branch Mem16[wArg04:di_36:byte] == 0x5C<8> l0800_369C
l0800_369E:
	branch v33_311 l0800_36A7
l0800_36A0:
	di_36 = 1<16>
	es_283 = 0<16>
l0800_36A7:
	di_58 = di_36 - 1<16>
	branch (di_58 | es_283) == 0<16> l0800_3732
l0800_36B6:
	ptrLoc0A_339 = SEQ(es_283, di_58) (alias)
	branch es_283 != wArg04 l0800_36C6
l0800_36C1:
	branch di_58 == wArg02 l0800_36D0
l0800_36C6:
	branch Mem73[ptrLoc0A_339 - 1<i16>:byte] != 0x3A<8> l0800_3732
l0800_36D0:
	ptrLoc06_346 = SEQ(es_283, di_58 + 1<16>) (alias)
l0800_3732:
	es_144 = SLICE(ptrLoc06_346, selector, 16) (alias)
	di_115 = SLICE(ptrLoc06_346, word16, 0) (alias)
	cx_111 = 0xFFFF<16>
l0800_373A:
	branch cx_111 == 0<16> l0800_373C
l0800_373A_1:
	di_115 = di_115 + 1<i16>
	cx_111 = cx_111 - 1<16>
	branch Mem105[es_144:di_115:byte] == 0<8> l0800_373A
l0800_373C:
	cx_122 = ~cx_111
	di_125 = di_115 - cx_122
	v37_315 = di_125 == 0<16>
l0800_3743:
	branch cx_122 == 0<16> l0800_3745
l0800_3743_2:
	v37_315 = Mem105[es_144:di_125:byte] == 0x5C<8>
	di_125 = di_125 + 1<i16>
	cx_122 = cx_122 - 1<16>
	branch Mem105[es_144:di_125:byte] == 0x5C<8> l0800_3743
l0800_3745:
	branch v37_315 l0800_374E
l0800_3747:
	di_125 = 1<16>
	es_144 = 0<16>
l0800_374E:
	di_147 = di_125 - 1<16>
	dx_164 = di_147 | es_144
	ptrLoc0A_349 = SEQ(es_144, di_147) (alias)
	branch dx_164 != 0<16> l0800_36DF
l0800_36DF:
	Mem172[ptrLoc0A_349:byte] = 0<8>
	branch fn0800_33CD(ds, 0<32>, 0x10<16>, ptrArg02, out cx_504, out dx_505) == 0<16> l0800_371E
l0800_36FE:
	branch fn0800_8E52(ds, ptrArg02) == 0<16> l0800_371E
l0800_370E:
	fn0800_0D24(ds, 0xE<16>, ptrArg02, out cx_506, out dx_507, out bx_508, out si, out di_509, out ds)
l0800_371E:
	Mem267[ptrLoc0A_349:byte] = 0x5C<8>
	ptrLoc06_346 = SEQ(es_144, di_147 + 1<16>) (alias)
l0800_375D:
	dxOut = dx_164
	siOut = si
	dsOut = ds
	return cx_122
fn0800_3678_exit:


void fn0800_3764(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D di ds si sp
fn0800_3764_entry:
l0800_3764:
	branch Mem10[ds:0x427E<16>:byte] == 0<8> l0800_3796
l0800_3796:
	fn0800_3509(0x44DC<16>, ds, SEQ(ds, 0x4541<16>), out bx_201)
l0800_376D:
	di_202 = 0x427E<16>
	cx_50 = 0xFFFF<16>
l0800_377C:
	branch cx_50 == 0<16> l0800_377E
l0800_377C_1:
	di_202 = di_202 + 1<i16>
	cx_50 = cx_50 - 1<16>
	branch Mem44[ds:di_202:byte] == 0<8> l0800_377C
l0800_377E:
	cx_61 = ~cx_50
	di_63 = di_202 - cx_61
	size_83 = (cx_61 >>u 1<16>) *u32 2<16>
	memcpy(ds:0x44DC<16>, ds:di_63, size_83)
	memcpy(ds:SLICE(size_83, word16, 0) + 0x44DC<16>, ds:di_63 + SLICE(size_83, word16, 0), CONVERT(SLICE(cond(cx_61 >>u 1<16>), bool, 1), bool, uint32))
l0800_37A6:
	di_103 = 0x44DC<16>
	cx_105 = 0xFFFF<16>
l0800_37B3:
	branch cx_105 == 0<16> l0800_37B5
l0800_37B3_1:
	di_103 = di_103 + 1<i16>
	cx_105 = cx_105 - 1<16>
	branch Mem100[ds:di_103:byte] == 0<8> l0800_37B3
l0800_37B5:
	memcpy(ds:di_103 - 1<16>, ds:0xA40<16>, 0xD<u32>)
	return
fn0800_3764_exit:


word16 fn0800_37BE(word16 cx, word16 dx, selector ds, word32 dwArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_12E2
//      fn0800_19EE
//      fn0800_3BC3
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: si:[0..15]-fn0800_19EE
// Trashed: SCZDO ax bx di es si Top
// Preserved: bp sp
fn0800_37BE_entry:
l0800_37BE:
	return fn0800_BEA2(cx, dx, ds, dwArg02, SEQ(ds, 0xA2B<16>), out di_68)
fn0800_37BE_exit:


word16 fn0800_37DF(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds:[0..15]-fn0800_112D si:[0..15]-fn0800_112D
// Trashed: SCZDO ax bx cx ds dx es si Top
// Preserved: P bp di sp
fn0800_37DF_entry:
l0800_37DF:
	fn0800_3509(fp - 108<i16>, ss, SEQ(ds, 0x44DC<16>), out bx_373)
	es_43 = ss
	di_380 = fp - 108<i16>
	cx_50 = 0xFFFF<16>
	dwLoc72_285 = SEQ(ds, 0x4541<16>) (alias)
l0800_3805:
	branch cx_50 == 0<16> l0800_3807
l0800_3805_1:
	di_380 = di_380 + 1<i16>
	cx_50 = cx_50 - 1<16>
	branch Mem42[ss:di_380:byte] == 0<8> l0800_3805
l0800_3807:
	cx_61 = ~cx_50
	di_381 = di_380 - cx_61
	v27_264 = di_381 == 0<16>
l0800_380D:
	branch cx_61 == 0<16> l0800_380F
l0800_380D_2:
	v27_264 = Mem42[ss:di_381:byte] == 0<8>
	di_381 = di_381 + 1<i16>
	cx_61 = cx_61 - 1<16>
	branch Mem42[ss:di_381:byte] == 0<8> l0800_380D
l0800_380F:
	branch v27_264 l0800_3818
l0800_3811:
	di_381 = 1<16>
	es_43 = 0<16>
l0800_3818:
	fn0800_35A3(di_381 - 1<16>, es_43, dwLoc72_285, out dx_374)
	dx_ax_371 = fn0800_AA7E(ds, SEQ(ss, fp - 108<i16>), SEQ(ds, 0xA4D<16>), out cx_375, out ds_140)
	branch dx_ax_371 == 0<16> l0800_3863
l0800_383D:
	fn0800_A614(ds_140, dx_ax_371, out ds_140)
	fn0800_A4F6(ds_140, 0x180<16>)
	fn0800_8F7F(ds_140, SEQ(ss, fp - 108<i16>))
l0800_3863:
	branch fn0800_BA4A(ds_140, SEQ(ds_140, 0x44DC<16>), SEQ(ss, fp - 108<i16>)) != 0xFFFF<16> l0800_3887
l0800_3878:
	fn0800_0D24(ds_140, 0xA<16>, SEQ(ds_140, 0x44DC<16>), out cx_376, out dx_377, out bx_378, out si, out di_379, out ds_140)
l0800_3887:
	dsOut = ds_140
	return si
fn0800_37DF_exit:


word16 fn0800_388C(selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_112D cx:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D dx:[0..15]-fn0800_112D si:[0..15]-fn0800_112D
// Trashed: SCZDOP ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_388C_entry:
l0800_388C:
	ax_22 = fn0800_4234(ds, SEQ(ds, 0x4541<16>), SEQ(ds, 0xA13<16>), out cx_324, out dx_26, out si_325, out ds_25)
	Mem36[ds_25:0x29E5<16>:word16] = dx_26
	Mem37[ds_25:0x29E3<16>:word16] = ax_22
	ax_48 = fn0800_4234(ds_25, SEQ(ds_25, 0x44DC<16>), SEQ(ds_25, 0xA50<16>), out cx_326, out dx_52, out si_55, out ds_51)
	Mem62[ds_51:0x29E1<16>:word16] = dx_52
	Mem63[ds_51:0x29DF<16>:word16] = ax_48
	cx_76 = fn0800_363D(ds_51, SEQ(ss, fp - 6<i16>), SEQ(ds_51, 0x44DC<16>), out dx_77)
	branch Mem73[ds_51:0xA12<16>:byte] != 0<8> l0800_38EF
l0800_38EF:
	cx_100 = fn0800_363D(ds_51, SEQ(ss, fp - 10<i16>), SEQ(ds_51, 0x4541<16>), out dx_101)
	branch fn0800_395B(SEQ(ss, fp - 10<i16>), SEQ(ds_51, 0x461F<16>)) < 0<16> l0800_3927
l0800_3913:
	branch fn0800_395B(SEQ(ss, fp - 10<i16>), SEQ(ss, fp - 6<i16>)) <= 0<16> l0800_392E
l0800_392E:
	fn0800_A614(ds_51, Mem144[ds_51:0x29E3<16>:word32], out ds_169)
	cx_186 = fn0800_A614(ds_169, Mem163[ds_169:0x29DF<16>:word32], out ds_188)
	dx_202 = fn0800_8F7F(ds_188, SEQ(ds_188, 0x44DC<16>))
	cxOut = cx_186
	dxOut = dx_202
	siOut = <invalid>
	dsOut = ds_188
	return 0<16>
l0800_3927:
	cxOut = cx_100
	dxOut = dx_101
	siOut = <invalid>
	dsOut = ds_51
	return 1<16>
l0800_38D7:
	Mem223[ds_51:0x4621<16>:word16] = wLoc04
	Mem225[ds_51:0x461F<16>:word16] = wLoc06
	Mem226[ds_51:0xA12<16>:byte] = 1<8>
	cxOut = cx_76
	dxOut = dx_77
	siOut = <invalid>
	dsOut = ds_51
	return 1<16>
fn0800_388C_exit:


word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_388C
//      fn0800_3992
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax:[0..15]-fn0800_388C
// Trashed: SCZO ax bx es Top
// Preserved: bp sp
fn0800_395B_entry:
l0800_395B:
	ax_13 = Mem7[ptrArg02 + 2<i16>:word16]
	branch ax_13 != Mem14[ptrArg06 + 2<i16>:word16] l0800_3984
l0800_3984:
	return ax_13 - Mem14[ptrArg06 + 2<i16>:word16]
l0800_3974:
	return Mem14[ptrArg02:word16] - Mem14[ptrArg06:word16]
fn0800_395B_exit:


word16 fn0800_3992(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_0DE8 ds:[0..15]-fn0800_0DE8
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: DP bp sp
fn0800_3992_entry:
l0800_3992:
	branch Mem12[ds:0x427E<16>:byte] == 0<8> l0800_39AE
l0800_39A0:
	branch Mem12[ds:0x2A23<16>:word16] != 1<16> l0800_39AE
l0800_39A7:
	branch Mem12[ds:0x2A17<16>:word16] != 0<16> l0800_39B5
l0800_39B5:
	fn0800_3509(fp - 116<i16>, ss, SEQ(ds, 0x44DC<16>), out bx_641)
	es_48 = ss
	di_50 = fp - 116<i16>
	cx_55 = 0xFFFF<16>
	dwLoc7A_531 = SEQ(ds, 0x4541<16>) (alias)
l0800_39D4:
	branch cx_55 == 0<16> l0800_39D6
l0800_39D4_1:
	di_50 = di_50 + 1<i16>
	cx_55 = cx_55 - 1<16>
	branch Mem47[ss:di_50:byte] == 0<8> l0800_39D4
l0800_39D6:
	cx_66 = ~cx_55
	di_651 = di_50 - cx_66
	v46_510 = di_651 == 0<16>
l0800_39DC:
	branch cx_66 == 0<16> l0800_39DE
l0800_39DC_2:
	v46_510 = Mem47[ss:di_651:byte] == 0<8>
	di_651 = di_651 + 1<i16>
	cx_66 = cx_66 - 1<16>
	branch Mem47[ss:di_651:byte] == 0<8> l0800_39DC
l0800_39DE:
	branch v46_510 l0800_39E7
l0800_39E0:
	di_651 = 1<16>
	es_48 = 0<16>
l0800_39E7:
	fn0800_35A3(di_651 - 1<16>, es_48, dwLoc7A_531, out dx_642)
	dx_ax_638 = fn0800_AA7E(ds, SEQ(ss, fp - 116<i16>), SEQ(ds, 0xA4D<16>), out cx_643, out ds_145)
	dx_146 = SLICE(dx_ax_638, word16, 16) (alias)
	ax_142 = SLICE(dx_ax_638, word16, 0) (alias)
	branch dx_ax_638 != 0<16> l0800_3A13
l0800_3A13:
	dx_ax_644 = fn0800_4194(ds_145, dx_ax_638)
	ax_166 = SLICE(dx_ax_644, word16, 0) (alias)
	dx_169 = SLICE(dx_ax_644, word16, 16) (alias)
	branch dx_169 >u 0<16> l0800_3A3D
l0800_3A23:
	branch dx_169 != 0<16> l0800_3A2A
l0800_3A25:
	branch ax_166 >u 0x12<16> l0800_3A3D
l0800_3A3D:
	dx_ax_645 = fn0800_3E5D(ds_145, dx_ax_638, out ds_201)
	dx_ax_646 = fn0800_8CAA(SLICE(dx_ax_645, word16, 0), 8<8>, SLICE(dx_ax_645, word16, 16))
	sp_215 = <invalid>
	ax_211 = SLICE(dx_ax_646, word16, 0) (alias)
	branch SLICE(dx_ax_646, word16, 16) != 0x52<16> l0800_3A58
l0800_3A53:
	branch ax_211 == 0x4E43<16> l0800_3A6B
l0800_3A6B:
	Mem226[ss:sp_215 - 2<i16>:word16] = dx_146
	Mem229[ss:sp_215 - 4<i16>:word16] = ax_142
	dx_ax_647 = fn0800_3E5D(ds_201, Mem229[ss:sp_215 - 4<i16>:word32], out ds_234)
	ax_230 = SLICE(dx_ax_647, word16, 0) (alias)
	branch SLICE(dx_ax_647, word16, 16) != Mem229[ds_234:0x2A09<16>:word16] l0800_3A83
l0800_3A7D:
	branch ax_230 == Mem229[ds_234:0x2A07<16>:word16] l0800_3A96
l0800_3A96:
	Mem247[ss:sp_215 - 2<i16>:word16] = ss
	Mem250[ss:sp_215 - 4<i16>:word16] = fp - 116<i16>
	Mem252[ss:sp_215 - 6<i16>:word16] = ss
	Mem255[ss:sp_215 - 8<i16>:word16] = fp - 14<i16>
	fn0800_363D(ds_234, Mem255[ss:sp_215 - 8<i16>:segptr32], Mem255[ss:sp_215 - 4<i16>:word32], out dx_648)
	Mem270[ss:sp_215 - 2<i16>:word16] = ds_234
	Mem273[ss:sp_215 - 4<i16>:word16] = 0x4541<16>
	Mem275[ss:sp_215 - 6<i16>:word16] = ss
	Mem278[ss:sp_215 - 8<i16>:word16] = fp - 10<i16>
	fn0800_363D(ds_234, Mem278[ss:sp_215 - 8<i16>:segptr32], Mem278[ss:sp_215 - 4<i16>:word32], out dx_649)
	Mem293[ss:sp_215 - 2<i16>:word16] = ss
	Mem296[ss:sp_215 - 4<i16>:word16] = fp - 10<i16>
	Mem298[ss:sp_215 - 6<i16>:word16] = ss
	Mem301[ss:sp_215 - 8<i16>:word16] = fp - 14<i16>
	branch fn0800_395B(Mem301[ss:sp_215 - 8<i16>:segptr32], Mem301[ss:sp_215 - 4<i16>:segptr32]) >= 0<16> l0800_3ADD
l0800_3ADD:
	Mem318[ss:sp_215 - 2<i16>:word16] = dx_146
	Mem321[ss:sp_215 - 4<i16>:word16] = ax_142
	dx_ax_639 = fn0800_3E5D(ds_234, Mem321[ss:sp_215 - 4<i16>:word32], out ds_326)
	Mem339[ds_326:0x2A05<16>:word16] = SLICE(dx_ax_639 + 0x12<32>, word16, 16)
	Mem340[ds_326:0x2A03<16>:word16] = SLICE(dx_ax_639, word16, 0) + 0x12<16>
	Mem343[ss:sp_215 - 2<i16>:word16] = dx_146
	Mem346[ss:sp_215 - 4<i16>:word16] = ax_142
	fn0800_A614(ds_326, Mem346[ss:sp_215 - 4<i16>:segptr32], out ds_352)
	dsOut = ds_352
	return 1<16>
l0800_3ACA:
	Mem367[ss:sp_215 - 2<i16>:word16] = dx_146
	Mem370[ss:sp_215 - 4<i16>:word16] = ax_142
	fn0800_A614(ds_234, Mem370[ss:sp_215 - 4<i16>:segptr32], out ds_376)
	dsOut = ds_376
	return 0<16>
l0800_3A83:
	Mem397[ss:sp_215 - 2<i16>:word16] = dx_146
	Mem400[ss:sp_215 - 4<i16>:word16] = ax_142
	fn0800_A614(ds_234, Mem400[ss:sp_215 - 4<i16>:segptr32], out ds_407)
	dsOut = ds_407
	return 0<16>
l0800_3A58:
	Mem428[ss:sp_215 - 2<i16>:word16] = dx_146
	Mem431[ss:sp_215 - 4<i16>:word16] = ax_142
	fn0800_A614(ds_201, Mem431[ss:sp_215 - 4<i16>:segptr32], out ds_438)
	dsOut = ds_438
	return 0<16>
l0800_3A2A:
	fn0800_A614(ds_145, dx_ax_638, out ds_469)
	dsOut = ds_469
	return 0<16>
l0800_3A0C:
	dsOut = ds_145
	return 0<16>
l0800_39AE:
	dsOut = ds
	return 0<16>
fn0800_3992_exit:


word16 fn0800_3B0A(selector ds, word16 wArg0A, word16 wArg0C, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_12E2
//      fn0800_3BC3
//      fn0800_3C99
//      fn0800_46FE
//      fn0800_4BB1
//      fn0800_4F2C
//      fn0800_51A9
//      fn0800_5374
//      fn0800_5E64
//      fn0800_67BF
//      fn0800_6F20
//      fn0800_741D
// MayUse:  ds:[0..15] ss:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: bp:[0..15]-fn0800_51A9 ds:[0..15]-fn0800_51A9 si:[0..15]-fn0800_3BC3 sp:[0..15]-fn0800_51A9
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3B0A_entry:
l0800_3B0A:
	bp_198 = fp - 2<i16>
	branch (wArg0A | wArg0C) != 0<16> l0800_3B1B
l0800_3B1B:
	branch wArg0C < 0<16> l0800_3B31
l0800_3B21:
	branch wArg0C > 0<16> l0800_3B2A
l0800_3B23:
	branch wArg0A <=u 0xFDE8<16> l0800_3B31
l0800_3B31:
	dx_ax_267 = SEQ(wArg0C, wArg0A) (alias)
l0800_3B2A:
	dx_ax_267 = 0xFDE8<32> (alias)
l0800_3B37:
	ax_51 = fn0800_4311(ds, dx_ax_267, out dx_57, out bp_198, out si, out ds_124)
	Mem67[ss:bp_198 - 2<i16>:word16] = dx_57
	Mem68[ss:bp_198 - 4<i16>:word16] = ax_51
	sp_60 = <invalid>
l0800_3BAB:
	branch (Mem71[ss:bp_198 + 12<i16>:word16] | Mem71[ss:bp_198 + 14<i16>:word16]) != 0<16> l0800_3B4F
l0800_3B4F:
	branch Mem71[ss:bp_198 + 14<i16>:word16] < 0<16> l0800_3B65
l0800_3B55:
	branch Mem71[ss:bp_198 + 14<i16>:word16] > 0<16> l0800_3B5E
l0800_3B57:
	branch Mem71[ss:bp_198 + 12<i16>:word16] <=u 0xFDE8<16> l0800_3B65
l0800_3B65:
	dx_86 = Mem71[ss:bp_198 + 14<i16>:word16]
	ax_87 = Mem71[ss:bp_198 + 12<i16>:word16]
l0800_3B5E:
	dx_86 = 0<16>
	ax_87 = 0xFDE8<16>
l0800_3B6B:
	Mem98[ss:bp_198 - 6<i16>:word16] = dx_86
	Mem100[ss:bp_198 - 8<i16>:word16] = ax_87
	Mem107[ss:sp_60 + 2<16>:word16] = Mem100[ss:bp_198 + 6<i16>:word16]
	Mem110[ss:sp_60:word16] = Mem107[ss:bp_198 + 4<i16>:word16]
	Mem113[ss:sp_60 - 2<16>:word16] = Mem110[ss:bp_198 - 6<i16>:word16]
	Mem115[ss:sp_60 - 4<16>:word16] = ax_87
	Mem118[ss:sp_60 - 6<16>:word16] = Mem115[ss:bp_198 - 2<i16>:word16]
	Mem121[ss:sp_60 - 8<16>:word16] = Mem118[ss:bp_198 - 4<i16>:word16]
	fn0800_4110(ds_124, Mem121[ss:sp_60 - 8<16>:word32], Mem121[ss:sp_60 - 4<16>:word16], Mem121[ss:sp_60 - 2<16>:word16], Mem121[ss:sp_60:word32], out si_275, out di_276, out ds_130)
	Mem142[ss:sp_60 + 2<16>:word16] = Mem121[ss:bp_198 + 10<i16>:word16]
	Mem145[ss:sp_60:word16] = Mem142[ss:bp_198 + 8<i16>:word16]
	Mem148[ss:sp_60 - 2<16>:word16] = Mem145[ss:bp_198 - 6<i16>:word16]
	Mem151[ss:sp_60 - 4<16>:word16] = Mem148[ss:bp_198 - 8<i16>:word16]
	Mem154[ss:sp_60 - 6<16>:word16] = Mem151[ss:bp_198 - 2<i16>:word16]
	Mem157[ss:sp_60 - 8<16>:word16] = Mem154[ss:bp_198 - 4<i16>:word16]
	fn0800_4152(ds_130, Mem157[ss:sp_60 - 8<16>:word32], Mem157[ss:sp_60 - 4<16>:word16], Mem157[ss:sp_60 - 2<16>:word16], Mem157[ss:sp_60:word32], out si, out ds_124)
	Mem178[ss:bp_198 + 12<i16>:ui32] = Mem157[ss:bp_198 + 12<i16>:ui32] - Mem157[ss:bp_198 - 8<i16>:ui32]
l0800_3BB3:
	Mem182[ss:sp_60 + 2<16>:word16] = Mem71[ss:bp_198 - 2<i16>:word16]
	Mem185[ss:sp_60:word16] = Mem182[ss:bp_198 - 4<i16>:word16]
	fn0800_4346(ds_124, Mem185[ss:sp_60 + 2<16>:word16], out cx_272, out dx_273, out bx_274, out ds)
l0800_3B18:
l0800_3BBF:
	bp_202 = Mem201[ss:bp_198:word16]
	siOut = si
	dsOut = ds
	return bp_202
fn0800_3B0A_exit:


word16 fn0800_3BC3(word16 cx, word16 dx, selector ds, word32 dwArg02, ui32 dwArg06, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_1E5E
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: bp:[0..15]-fn0800_1E5E ds:[0..15]-fn0800_1E5E si:[0..15]-fn0800_1E5E
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3BC3_entry:
l0800_3BC3:
	fn0800_37BE(cx, dx, ds, SEQ(ds, 0x43AD<16>))
	ax_46 = fn0800_4234(ds, SEQ(ds, 0x43AD<16>), SEQ(ds, 0xA61<16>), out cx_314, out dx_50, out si_315, out ds_49)
	Mem60[ds_49:0x29D5<16>:word16] = dx_50
	Mem61[ds_49:0x29D3<16>:word16] = ax_46
	dx_ax_268 = fn0800_4194(ds_49, dwArg02) - dwArg06
	fn0800_ACB3(ds_49, dwArg02, dwArg06, 0<16>, out cx_316)
	bp_134 = fn0800_3B0A(ds_49, SLICE(dx_ax_268, word16, 0), SLICE(dx_ax_268, word16, 16), out si_317, out ds_138)
	sp_142 = <invalid>
	Mem151[ss:sp_142 + 0xA<16>:word16] = Mem132[ds_138:0x29D5<16>:word16]
	Mem154[ss:sp_142 + 8<16>:word16] = Mem151[ds_138:0x29D3<16>:word16]
	fn0800_BA67(ds_138, Mem154[ss:sp_142 + 8<16>:segptr32])
	Mem168[ss:sp_142 + 0xA<16>:word16] = 0<16>
	ax_dx_270 = Mem168[ss:bp_134 + 8<i16>:ui32] + Mem168[ss:bp_134 + 12<i16>:ui32]
	Mem177[ss:sp_142 + 8<16>:word16] = SLICE(ax_dx_270, word16, 16)
	Mem179[ss:sp_142 + 6<16>:word16] = SLICE(ax_dx_270, word16, 0)
	Mem182[ss:sp_142 + 4<16>:word16] = Mem179[ss:bp_134 + 6<i16>:word16]
	Mem185[ss:sp_142 + 2<16>:word16] = Mem182[ss:bp_134 + 4<i16>:word16]
	fn0800_ACB3(ds_138, Mem185[ss:sp_142 + 2<16>:segptr32], Mem185[ss:sp_142 + 6<16>:ui32], Mem185[ss:sp_142 + 0xA<16>:word16], out cx_318)
	Mem200[ss:sp_142 + 0xA<16>:word16] = Mem185[ss:bp_134 - 2<i16>:word16]
	Mem203[ss:sp_142 + 8<16>:word16] = Mem200[ss:bp_134 - 4<i16>:word16]
	Mem206[ss:sp_142 + 6<16>:word16] = Mem203[ss:bp_134 + 6<i16>:word16]
	Mem209[ss:sp_142 + 4<16>:word16] = Mem206[ss:bp_134 + 4<i16>:word16]
	Mem212[ss:sp_142 + 2<16>:word16] = Mem209[ds_138:0x29D5<16>:word16]
	Mem215[ss:sp_142:word16] = Mem212[ds_138:0x29D3<16>:word16]
	bp_217 = fn0800_3B0A(ds_138, Mem215[ss:sp_142 + 8<i16>:word16], Mem215[ss:sp_142 + 10<i16>:word16], out si_224, out ds_221)
	sp_225 = <invalid>
	Mem234[ss:sp_225 + 0xA<16>:word16] = Mem215[ds_221:0x29D5<16>:word16]
	Mem237[ss:sp_225 + 8<16>:word16] = Mem234[ds_221:0x29D3<16>:word16]
	fn0800_A614(ds_221, Mem237[ss:sp_225 + 8<16>:segptr32], out ds_243)
	Mem252[ss:sp_225 + 0xA<16>:word16] = ds_243
	Mem255[ss:sp_225 + 8<16>:word16] = 0x43AD<16>
	fn0800_8F7F(ds_243, Mem255[ss:sp_225 + 8<16>:segptr32])
	bp_265 = Mem255[ss:bp_217:word16]
	siOut = si_224
	dsOut = ds_243
	return bp_265
fn0800_3BC3_exit:


byte fn0800_3C99(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_1E5E
//      fn0800_23EC
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp:[0..15]-fn0800_1E5E cx:[8..15]-fn0800_23EC ds:[0..15]-fn0800_1E5E si:[0..15]-fn0800_1E5E sp:[0..15]-fn0800_23EC
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3C99_entry:
l0800_3C99:
	fn0800_3509(fp - 108<i16>, ss, SEQ(ds, 0x4348<16>), out bx_473)
	di_43 = fp - 108<i16>
	cx_45 = 0xFFFF<16>
l0800_3CBE:
	branch cx_45 == 0<16> l0800_3CC0
l0800_3CBE_1:
	di_43 = di_43 + 1<i16>
	cx_45 = cx_45 - 1<16>
	branch Mem40[ss:di_43:byte] == 0<8> l0800_3CBE
l0800_3CC0:
	memcpy(ss:di_43 - 1<16>, ds:0xA54<16>, 0xD<u32>)
	fn0800_4234(ds, SEQ(ss, fp - 108<i16>), SEQ(ds, 0xA61<16>), out cx_474, out dx_475, out si_476, out ds_91)
	fn0800_ACB3(ds_91, dwArg02, 0<32>, 0<16>, out cx_477)
	bp_150 = fn0800_3B0A(ds_91, wArg06, wArg08, out si_478, out ds_154)
	sp_158 = <invalid>
	Mem166[ss:sp_158 + 0xA<16>:word16] = 0<16>
	ax_dx_409 = Mem166[ss:bp_150 + 8<i16>:ui32] + Mem166[ss:bp_150 + 12<i16>:ui32]
	Mem175[ss:sp_158 + 8<16>:word16] = SLICE(ax_dx_409, word16, 16)
	Mem177[ss:sp_158 + 6<16>:word16] = SLICE(ax_dx_409, word16, 0)
	Mem180[ss:sp_158 + 4<16>:word16] = Mem177[ss:bp_150 + 6<i16>:word16]
	Mem183[ss:sp_158 + 2<16>:word16] = Mem180[ss:bp_150 + 4<i16>:word16]
	fn0800_ACB3(ds_154, Mem183[ss:sp_158 + 2<16>:segptr32], Mem183[ss:sp_158 + 6<16>:ui32], Mem183[ss:sp_158 + 0xA<16>:word16], out cx_479)
	Mem198[ss:sp_158 + 0xA<16>:word16] = Mem183[ss:bp_150 + 6<i16>:word16]
	Mem201[ss:sp_158 + 8<16>:word16] = Mem198[ss:bp_150 + 4<i16>:word16]
	dx_ax_414 = fn0800_4194(ds_154, Mem201[ss:sp_158 + 8<16>:word32]) - (Mem201[ss:bp_150 + 8<i16>:ui32] + Mem201[ss:bp_150 + 12<i16>:ui32])
	Mem224[ss:bp_150 + 14<i16>:word16] = SLICE(dx_ax_414, word16, 16)
	ax_219 = SLICE(dx_ax_414, word16, 0) (alias)
	Mem225[ss:bp_150 + 12<i16>:word16] = ax_219
	Mem228[ss:sp_158 + 0xA<16>:word16] = Mem225[ss:bp_150 + 14<i16>:word16]
	Mem230[ss:sp_158 + 8<16>:word16] = ax_219
	Mem233[ss:sp_158 + 6<16>:word16] = Mem230[ss:bp_150 - 2<i16>:word16]
	Mem236[ss:sp_158 + 4<16>:word16] = Mem233[ss:bp_150 - 4<i16>:word16]
	Mem239[ss:sp_158 + 2<16>:word16] = Mem236[ss:bp_150 + 6<i16>:word16]
	Mem242[ss:sp_158:word16] = Mem239[ss:bp_150 + 4<i16>:word16]
	bp_244 = fn0800_3B0A(ds_154, Mem242[ss:sp_158 + 8<i16>:word16], Mem242[ss:sp_158 + 10<i16>:word16], out si_480, out ds_248)
	sp_252 = <invalid>
	Mem261[ss:sp_252 + 0xA<16>:word16] = Mem242[ss:bp_244 - 2<i16>:word16]
	Mem264[ss:sp_252 + 8<16>:word16] = Mem261[ss:bp_244 - 4<i16>:word16]
	fn0800_A614(ds_248, Mem264[ss:sp_252 + 8<16>:segptr32], out ds_270)
	Mem280[ss:sp_252 + 0xA<16>:word16] = Mem264[ds_270:0x29D1<16>:word16]
	Mem283[ss:sp_252 + 8<16>:word16] = Mem280[ds_270:0x29CF<16>:word16]
	fn0800_A614(ds_270, Mem283[ss:sp_252 + 8<16>:segptr32], out ds_289)
	Mem299[ss:sp_252 + 0xA<16>:word16] = 0x180<16>
	Mem301[ss:sp_252 + 8<16>:word16] = ds_289
	Mem304[ss:sp_252 + 6<16>:word16] = 0x4348<16>
	fn0800_A4F6(ds_289, Mem304[ss:sp_252 + 0xA<16>:word16])
	Mem316[ss:sp_252 + 0xA<16>:word16] = ds_289
	Mem319[ss:sp_252 + 8<16>:word16] = 0x4348<16>
	fn0800_8F7F(ds_289, Mem319[ss:sp_252 + 8<16>:segptr32])
	Mem329[ss:sp_252 + 0xA<16>:word16] = ds_289
	Mem332[ss:sp_252 + 8<16>:word16] = 0x4348<16>
	Mem334[ss:sp_252 + 6<16>:word16] = ss
	Mem337[ss:sp_252 + 4<16>:word16] = bp_244 - 106<i16>
	branch fn0800_BA4A(ds_289, Mem337[ss:sp_252 + 4<16>:segptr32], Mem337[ss:sp_252 + 8<16>:segptr32]) != 0xFFFF<16> l0800_3DB2
l0800_3DA3:
	Mem349[ss:sp_252 + 0xA<16>:word16] = ss
	Mem352[ss:sp_252 + 8<16>:word16] = bp_244 - 106<i16>
	Mem355[ss:sp_252 + 6<16>:word16] = 0xA<16>
	fn0800_0D24(ds_289, Mem355[ss:sp_252 + 6<16>:word16], Mem355[ss:sp_252 + 8<16>:segptr32], out cx_482, out dx_483, out bx_484, out si_485, out di_486, out ds_289)
l0800_3DB2:
	Mem375[ss:sp_252 + 0xA<16>:word16] = ds_289
	Mem378[ss:sp_252 + 8<16>:word16] = 0xA65<16>
	Mem380[ss:sp_252 + 6<16>:word16] = ds_289
	Mem383[ss:sp_252 + 4<16>:word16] = 0x4348<16>
	ax_384 = fn0800_4234(ds_289, Mem383[ss:sp_252 + 4<16>:word32], Mem383[ss:sp_252 + 8<16>:word32], out cx_386, out dx_388, out si_481, out ds_387)
	Mem398[ds_387:0x29D1<16>:word16] = dx_388
	Mem399[ds_387:0x29CF<16>:word16] = ax_384
	si_402 = Mem399[ss:sp_252 + 0xE<16>:word16]
	bpOut = Mem399[ss:bp_244:word16]
	siOut = si_402
	dsOut = ds_387
	return SLICE(cx_386, byte, 8)
fn0800_3C99_exit:


word16 fn0800_3DCF(selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_3E27
//      fn0800_3F0A
//      fn0800_3FAD
//      fn0800_46FE
//      fn0800_51A9
//      fn0800_741D
//      fn0800_8359
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_51A9 cx:[8..15]-fn0800_3E27 di:[0..15]-fn0800_3E27 ds:[0..15]-fn0800_51A9
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: DP bp si sp
fn0800_3DCF_entry:
	wArg04_105 = SLICE(ptrArg02, word16, 16) (alias)
	wArg02_107 = SLICE(ptrArg02, word16, 0) (alias)
l0800_3DCF:
	v11_17 = Mem13[ptrArg02:word16] - 1<16>
	Mem18[ptrArg02:word16] = v11_17
	branch v11_17 < 0<16> l0800_3DF3
l0800_3DF3:
	ax_28 = fn0800_AEC2(ds, ptrArg02, out ch_166)
l0800_3DDE:
	ax_40 = Mem18[ptrArg02 + 14<i16>:word16]
	si_41 = Mem18[ptrArg02 + 12<i16>:word16]
	Mem43[ptrArg02 + 12<i16>:word16] = Mem18[ptrArg02 + 12<i16>:word16] + 1<16>
	ax_28 = CONVERT(Mem43[ax_40:si_41:byte], uint8, uint16) (alias)
l0800_3DFF:
	ah_125 = SLICE(ax_28, byte, 8) (alias)
	bLoc04_120 = SLICE(ax_28, byte, 0) (alias)
	branch ax_28 != 0xFFFF<16> l0800_3E1F
l0800_3E07:
	ah_125 = SLICE(CONVERT(fn0800_0D24(ds, 8<16>, fn0800_4271(ds, wArg02_107, wArg04_105), out cx_80, out dx_167, out bx_168, out si_169, out di, out ds), uint8, uint16), byte, 8) (alias)
l0800_3E1F:
	chOut = <invalid>
	diOut = di
	dsOut = ds
	return SEQ(ah_125, bLoc04_120)
fn0800_3DCF_exit:


word16 fn0800_3E27(selector ds, word32 dwArg02, ptr16 & cxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_1CF6
//      fn0800_1E5E
//      fn0800_3E5D
//      fn0800_3F58
//      fn0800_4BB1
//      fn0800_5374
//      fn0800_5DCE
//      fn0800_67BF
//      fn0800_7A02
//      fn0800_7C78
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_3E5D cx:[0..15]-fn0800_1E5E di:[0..15]-fn0800_3F58 ds:[0..15]-fn0800_3E5D
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3E27_entry:
l0800_3E27:
	cx_43 = <invalid>
	ax_60 = (CONVERT(SLICE(fn0800_3DCF(ds, dwArg02, out ch_86, out di_87, out ds_24), byte, 0), uint8, uint16) << 8<8>) + CONVERT(SLICE(fn0800_3DCF(ds_24, dwArg02, out ch_88, out di_46, out ds_47), byte, 0), uint8, uint16)
	cxOut = SEQ(SLICE(cx_43, byte, 8), 8<8>)
	diOut = di_46
	dsOut = ds_47
	return ax_60
fn0800_3E27_exit:


ui32 fn0800_3E5D(selector ds, word32 dwArg02, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_1CF6
//      fn0800_24FE
//      fn0800_3992
//      fn0800_4C55
//      fn0800_4F2C
//      fn0800_51A9
//      fn0800_5374
//      fn0800_67BF
//      fn0800_6AD4
//      fn0800_6F20
//      fn0800_741D
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ds:[0..15]-fn0800_51A9 Sequence dx:ax:[0..31]-fn0800_4C55
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3E5D_entry:
l0800_3E5D:
	dx_ax_64 = SEQ(fn0800_3E27(ds, dwArg02, out cx_84, out di_85, out ds_22), 0<16>) + CONVERT(fn0800_3E27(ds_22, dwArg02, out cx_86, out di_87, out ds_43), uint16, uint32)
	dsOut = ds_43
	return dx_ax_64
fn0800_3E5D_exit:


word16 fn0800_3E9A(selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_51A9
//      fn0800_741D
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_51A9 ds:[0..15]-fn0800_51A9
// Trashed: SCZOP ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_3E9A_entry:
	wArg04_132 = SLICE(ptrArg02, word16, 16) (alias)
	wArg02_134 = SLICE(ptrArg02, word16, 0) (alias)
l0800_3E9A:
	v11_17 = Mem13[ptrArg02:word16] - 1<16>
	Mem18[ptrArg02:word16] = v11_17
	branch v11_17 < 0<16> l0800_3EBE
l0800_3EBE:
	ax_28 = fn0800_AEC2(ds, ptrArg02, out ch_177)
l0800_3EA9:
	ax_40 = Mem18[ptrArg02 + 14<i16>:word16]
	si_41 = Mem18[ptrArg02 + 12<i16>:word16]
	Mem43[ptrArg02 + 12<i16>:word16] = Mem18[ptrArg02 + 12<i16>:word16] + 1<16>
	ax_28 = CONVERT(Mem43[ax_40:si_41:byte], uint8, uint16) (alias)
l0800_3ECA:
	bLoc04_156 = SLICE(ax_28, byte, 0) (alias)
	branch ax_28 != 0xFFFF<16> l0800_3EEA
l0800_3ED2:
	fn0800_0D24(ds, 8<16>, fn0800_4271(ds, wArg02_134, wArg04_132), out cx_179, out dx_180, out bx_181, out si_182, out di_183, out ds)
l0800_3EEA:
	ax_162 = SEQ(SLICE(fn0800_ACB3(ds, ptrArg02, 0xFFFFFFFF<32>, 1<16>, out cx_178), byte, 8), bLoc04_156) (alias)
	dsOut = ds
	return ax_162
fn0800_3E9A_exit:


word16 fn0800_3F0A(selector ds, word32 dwArg02, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_67BF
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D
// Trashed: SCZOP ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3F0A_entry:
l0800_3F0A:
	ax_33 = CONVERT(SLICE(fn0800_3DCF(ds, dwArg02, out ch_118, out di_119, out ds_24), byte, 0), uint8, uint16) (alias)
	ax_56 = CONVERT(SLICE(fn0800_3DCF(ds_24, dwArg02, out ch_120, out di_121, out ds_47), byte, 0), uint8, uint16) (alias)
	fn0800_ACB3(ds_47, dwArg02, 0xFFFFFFFE<32>, 1<16>, out cx_122)
	dsOut = ds_47
	return (ax_33 << 8<8>) + ax_56
fn0800_3F0A_exit:


ui32 fn0800_3F58(selector ds, word32 dwArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_46FE
//      fn0800_4F2C
//      fn0800_51A9
//      fn0800_67BF
//      fn0800_6F20
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: di:[0..15]-fn0800_12E2 ds:[0..15]-fn0800_51A9 Sequence dx:ax:[0..31]-fn0800_67BF
// Trashed: SCZOP ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3F58_entry:
l0800_3F58:
	ax_18 = fn0800_3E27(ds, dwArg02, out cx_120, out di_121, out ds_22)
	ax_39 = fn0800_3E27(ds_22, dwArg02, out cx_122, out di_42, out ds_43)
	fn0800_ACB3(ds_43, dwArg02, 0xFFFFFFFC<32>, 1<16>, out cx_123)
	diOut = di_42
	dsOut = ds_43
	dx_ax_91 = SEQ(ax_18, 0<16>) + CONVERT(ax_39, uint16, uint32)
	return dx_ax_91
fn0800_3F58_exit:


word16 fn0800_3FAD(selector ds, word32 dwArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_46FE
//      fn0800_51A9
//      fn0800_5E64
//      fn0800_741D
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_51A9 di:[0..15]-fn0800_46FE ds:[0..15]-fn0800_51A9
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3FAD_entry:
l0800_3FAD:
	ax_59 = (CONVERT(SLICE(fn0800_3DCF(ds_24, dwArg02, out ch_86, out di_46, out ds_47), byte, 0), uint8, uint16) << 8<8>) + CONVERT(SLICE(fn0800_3DCF(ds, dwArg02, out ch_84, out di_85, out ds_24), byte, 0), uint8, uint16)
	diOut = di_46
	dsOut = ds_47
	return ax_59
fn0800_3FAD_exit:


byte fn0800_401E(selector ds, byte bArg02, word32 dwArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_409C
//      fn0800_46FE
//      fn0800_4BB1
//      fn0800_67BF
//      fn0800_741D
//      fn0800_75EA
//      fn0800_831D
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax:[8..15]-fn0800_75EA bx:[0..15]-fn0800_75EA cx:[0..15]-fn0800_75EA ds:[0..15]-fn0800_409C dx:[0..15]-fn0800_75EA
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_401E_entry:
	bArg02_72 = SLICE(wArg02, byte, 0) (alias)
l0800_401E:
	fn0800_4047(ds, SLICE(wArg02 >>u 8<8>, byte, 0), dwArg04, out cx_85, out dx_86, out bx_87, out di_88, out ds_28)
	ax_46 = CONVERT(fn0800_4047(ds_28, bArg02_72, dwArg04, out cx_48, out dx_49, out bx_47, out di_89, out ds_52), uint8, uint16)
	cxOut = cx_48
	dxOut = dx_49
	bxOut = bx_47
	dsOut = ds_52
	return SLICE(ax_46, byte, 8)
fn0800_401E_exit:


byte fn0800_4047(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_401E
//      fn0800_40BF
//      fn0800_46FE
//      fn0800_51A9
//      fn0800_5E64
//      fn0800_67BF
//      fn0800_6F20
//      fn0800_741D
//      fn0800_75EA
//      fn0800_8624
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax:[8..15]-fn0800_401E bx:[0..15]-fn0800_401E cx:[0..15]-fn0800_401E di:[0..15]-fn0800_40BF ds:[0..15]-fn0800_51A9 dx:[0..15]-fn0800_401E
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: DP bp si sp
fn0800_4047_entry:
	wArg06_109 = SLICE(ptrArg04, word16, 16) (alias)
	wArg04_111 = SLICE(ptrArg04, word16, 0) (alias)
l0800_4047:
	v11_16 = Mem11[ptrArg04:word16] + 1<16>
	Mem17[ptrArg04:word16] = v11_16
	bx_129 = SLICE(ptrArg04, word16, 0) (alias)
	branch v11_16 >= 0<16> l0800_406F
l0800_406F:
	ax_128 = fn0800_B30A(ds, bArg02, ptrArg04, out cx_134, out dx_144, out bx_129)
l0800_4056:
	ax_43 = Mem17[ptrArg04 + 14<i16>:word16]
	si_44 = Mem17[ptrArg04 + 12<i16>:word16]
	Mem46[ptrArg04 + 12<i16>:word16] = Mem17[ptrArg04 + 12<i16>:word16] + 1<16>
	Mem50[ax_43:si_44:byte] = bArg02
	ax_128 = CONVERT(bArg02, uint8, uint16) (alias)
	cx_134 = SEQ(ch, bArg02) (alias)
	dx_144 = SEQ(dh, bArg02) (alias)
l0800_407C:
	branch ax_128 != 0xFFFF<16> l0800_4099
l0800_4081:
	ax_128 = CONVERT(fn0800_0D24(ds, 9<16>, fn0800_4271(ds, wArg04_111, wArg06_109), out cx_134, out dx_144, out bx_129, out si_169, out di, out ds), uint8, uint16)
l0800_4099:
	cxOut = cx_134
	dxOut = dx_144
	bxOut = bx_129
	diOut = di
	dsOut = ds
	return SLICE(ax_128, byte, 8)
fn0800_4047_exit:


selector fn0800_409C(selector ds, word16 wArg02, word16 wArg04, word32 dwArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_12E2
//      fn0800_46FE
//      fn0800_4BB1
//      fn0800_4C55
//      fn0800_4F2C
//      fn0800_51A9
//      fn0800_67BF
//      fn0800_6AD4
//      fn0800_6F20
//      fn0800_73AC
//      fn0800_741D
//      fn0800_75EA
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: ds:[0..15]-fn0800_51A9
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_409C_entry:
l0800_409C:
	fn0800_401E(ds, SLICE(wArg04, byte, 0), dwArg06, out cx_74, out dx_75, out bx_76, out ds_23)
	fn0800_401E(ds_23, SLICE(wArg02, byte, 0), dwArg06, out cx_77, out dx_78, out bx_79, out ds_45)
	return ds_45
fn0800_409C_exit:


word16 fn0800_40BF(selector ds, byte bArg02, word32 dwArg04, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_46FE
//      fn0800_51A9
//      fn0800_5E64
//      fn0800_741D
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: di:[0..15]-fn0800_46FE ds:[0..15]-fn0800_51A9
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_40BF_entry:
	bArg02 = SLICE(wArg02, byte, 0)
l0800_40BF:
	fn0800_4047(ds, bArg02, dwArg04, out cx_93, out dx_94, out bx_95, out di_96, out ds_31)
	fn0800_4047(ds_31, SLICE(wArg02 >>u 8<8>, byte, 0), dwArg04, out cx_97, out dx_98, out bx_99, out di_60, out ds_61)
	dsOut = ds_61
	return di_60
fn0800_40BF_exit:


byte fn0800_4110(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_1CF6
//      fn0800_2D0A
//      fn0800_3B0A
//      fn0800_5B15
//      fn0800_7FDC
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: cx:[8..15]-fn0800_1CF6 di:[0..15]-fn0800_5B15 ds:[0..15]-fn0800_3B0A si:[0..15]-fn0800_2D0A
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4110_entry:
	wArg0C = SLICE(dwArg0A, word16, 16)
	wArg0A = SLICE(dwArg0A, word16, 0)
l0800_4110:
	ax_28 = fn0800_ABA3(ds, dwArg02, 1<16>, wArg06, dwArg0A, out ch_145, out si_134, out di_124)
	cx_121 = <invalid>
	branch wArg08 != 0<16> l0800_4138
l0800_4133:
	branch ax_28 == wArg06 l0800_4150
l0800_4138:
	fn0800_0D24(ds, 8<16>, fn0800_4271(ds, wArg0A, wArg0C), out cx_121, out dx_146, out bx_147, out si_134, out di_124, out ds)
l0800_4150:
	siOut = si_134
	diOut = di_124
	dsOut = ds
	return SLICE(cx_121, byte, 8)
fn0800_4110_exit:


byte fn0800_4152(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_1E5E
//      fn0800_3B0A
//      fn0800_55E8
//      fn0800_579B
//      fn0800_5D2F
//      fn0800_5E64
//      fn0800_669C
//      fn0800_67BF
//      fn0800_6AD4
//      fn0800_73AC
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax:[8..15]-fn0800_5E64 ds:[0..15]-fn0800_3B0A si:[0..15]-fn0800_3B0A
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4152_entry:
	wArg0C = SLICE(dwArg0A, word16, 16)
	wArg0A = SLICE(dwArg0A, word16, 0)
l0800_4152:
	ax_116 = fn0800_AD85(ds, dwArg02, 1<16>, wArg06, dwArg0A, out si_134)
	branch wArg08 != 0<16> l0800_417A
l0800_4175:
	branch ax_116 == wArg06 l0800_4192
l0800_417A:
	ax_116 = CONVERT(fn0800_0D24(ds, 9<16>, fn0800_4271(ds, wArg0A, wArg0C), out cx_144, out dx_145, out bx_146, out si_134, out di_147, out ds), uint8, uint16)
l0800_4192:
	siOut = si_134
	dsOut = ds
	return SLICE(ax_116, byte, 8)
fn0800_4152_exit:


word32 fn0800_4194(selector ds, word32 dwArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_1CF6
//      fn0800_3992
//      fn0800_3BC3
//      fn0800_3C99
//      fn0800_46FE
//      fn0800_4C55
//      fn0800_51A9
//      fn0800_5B15
//      fn0800_5DCE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_5B15
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_4194_entry:
l0800_4194:
	dx_ax_144 = fn0800_AD2F(ds, dwArg02)
	fn0800_ACB3(ds, dwArg02, 0<32>, 2<16>, out cx_145)
	dx_ax_146 = fn0800_AD2F(ds, dwArg02)
	fn0800_ACB3(ds, dwArg02, dx_ax_144, 0<16>, out cx_147)
	return dx_ax_146
fn0800_4194_exit:


word16 fn0800_4234(selector ds, word32 dwArg02, word32 dwArg06, ptr16 & cxOut, ptr16 & dxOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_12E2
//      fn0800_19EE
//      fn0800_2DE2
//      fn0800_388C
//      fn0800_3BC3
//      fn0800_3C99
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax:[0..15]-fn0800_2DE2 cx:[0..15]-fn0800_3C99 ds:[0..15]-fn0800_2DE2 dx:[0..15]-fn0800_2DE2 si:[0..15]-fn0800_2DE2
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4234_entry:
l0800_4234:
	dx_ax_120 = fn0800_AA7E(ds, dwArg02, dwArg06, out cx_26, out ds_102)
	ax_24 = SLICE(dx_ax_120, word16, 0) (alias)
	dx_28 = SLICE(dx_ax_120, word16, 16) (alias)
	branch dx_ax_120 != 0<16> l0800_4267
l0800_4257:
	fn0800_0D24(ds_102, 7<16>, dwArg02, out cx_26, out dx_121, out bx_122, out si, out di_123, out ds_102)
l0800_4267:
	cxOut = cx_26
	dxOut = dx_28
	siOut = si
	dsOut = ds_102
	return ax_24
fn0800_4234_exit:


word32 fn0800_4271(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_3DCF
//      fn0800_3E9A
//      fn0800_4047
//      fn0800_4110
//      fn0800_4152
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_3E9A
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_4271_entry:
l0800_4271:
	branch wArg04 != Mem7[ds:0x29E5<16>:word16] l0800_428D
l0800_4280:
	branch wArg02 != Mem7[ds:0x29E3<16>:word16] l0800_428D
l0800_428D:
	branch wArg04 != Mem7[ds:0x29E1<16>:word16] l0800_42A6
l0800_4299:
	branch wArg02 != Mem7[ds:0x29DF<16>:word16] l0800_42A6
l0800_42A6:
	branch wArg04 != Mem7[ds:0x29D1<16>:word16] l0800_42BF
l0800_42B2:
	branch wArg02 != Mem7[ds:0x29CF<16>:word16] l0800_42BF
l0800_42BF:
	branch wArg04 != Mem7[ds:0x29DD<16>:word16] l0800_42D8
l0800_42CB:
	branch wArg02 != Mem7[ds:0x29DB<16>:word16] l0800_42D8
l0800_42D8:
	branch wArg04 != Mem7[ds:0x29D9<16>:word16] l0800_42F1
l0800_42E4:
	branch wArg02 != Mem7[ds:0x29D7<16>:word16] l0800_42F1
l0800_42F1:
	branch wArg04 != Mem7[ds:0x29D5<16>:word16] l0800_430A
l0800_42FD:
	branch wArg02 != Mem7[ds:0x29D3<16>:word16] l0800_430A
l0800_430A:
	return 0xCAFE0A60<32>
l0800_4303:
	return 0xCAFE43AD<32>
l0800_42EA:
	return 0xCAFE4412<32>
l0800_42D1:
	return 0xCAFE4477<32>
l0800_42B8:
	return 0xCAFE4348<32>
l0800_429F:
	return 0xCAFE44DC<32>
l0800_4286:
	return 0xCAFE4541<32>
fn0800_4271_exit:


word16 fn0800_4311(selector ds, word32 dwArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_09A3
//      fn0800_1CF6
//      fn0800_2D0A
//      fn0800_3B0A
//      fn0800_5374
//      fn0800_5E64
//      fn0800_75EA
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_09A3 bp:[0..15]-fn0800_09A3 ds:[0..15]-fn0800_09A3 dx:[0..15]-fn0800_09A3 si:[0..15]-fn0800_3B0A sp:[0..15]-fn0800_09A3
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_4311_entry:
l0800_4311:
	ax_18 = fn0800_9F89(ds, dwArg02, out dx_24, out bp_19, out si_26, out ds_23)
	Mem32[ss:bp_19 - 2<i16>:word16] = dx_24
	Mem33[ss:bp_19 - 4<i16>:word16] = ax_18
	branch (ax_18 | dx_24) != 0<16> l0800_433C
l0800_432D:
	fn0800_0D24(ds_23, 6<16>, SEQ(ds_23, 0xA6C<16>), out cx_103, out dx_104, out bx_105, out si_26, out di_106, out ds_23)
l0800_433C:
	ax_66 = Mem64[ss:bp_19 - 4<i16>:word16]
	bp_68 = Mem64[ss:bp_19:word16]
	dxOut = Mem64[ss:bp_19 - 2<i16>:word16]
	bpOut = bp_68
	siOut = si_26
	dsOut = ds_23
	return ax_66
fn0800_4311_exit:


byte fn0800_4346(selector ds, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_09A3
//      fn0800_1E5E
//      fn0800_2D0A
//      fn0800_3B0A
//      fn0800_5374
//      fn0800_5E64
//      fn0800_75EA
// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax:[8..15]-fn0800_5E64 bx:[0..15]-fn0800_75EA cx:[0..15]-fn0800_75EA ds:[0..15]-fn0800_09A3 dx:[0..15]-fn0800_75EA
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_4346_entry:
l0800_4346:
	ax_18 = CONVERT(fn0800_9E75(ds, wArg04, out cx_21, out dx_17, out bx_19, out ds_16), uint8, uint16)
	cxOut = cx_21
	dxOut = dx_17
	bxOut = bx_19
	dsOut = ds_16
	return SLICE(ax_18, byte, 8)
fn0800_4346_exit:


word16 fn0800_4357(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_29C5
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax:[0..15]-fn0800_29C5
// Trashed: SCZO ax bx dl es Top
// Preserved: bp sp
fn0800_4357_entry:
l0800_4357:
l0800_43B9:
	wArg02_106 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_130 = SLICE(ptrArg02, word16, 16) (alias)
	wArg06_111 = SLICE(ptrArg06, word16, 0) (alias)
	wArg08_122 = SLICE(ptrArg06, word16, 16) (alias)
	branch Mem11[ptrArg06:byte] != 0<8> l0800_435C
l0800_435C:
	al_20 = Mem11[ptrArg06:byte]
	ax_22 = CONVERT(al_20, int8, int16)
	branch ax_22 == 0x2A<16> l0800_4379
l0800_4379:
	wArg02_103 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_126 = SLICE(ptrArg02, word16, 16) (alias)
	branch Mem27[ptrArg02:byte] == 0x2E<8> l0800_43B6
l0800_4382:
	branch Mem27[ptrArg02:byte] != 0<8> l0800_4376
l0800_4376:
	ptrArg02_127 = SEQ(wArg04_126, wArg02_103 + 1<16>) (alias)
	ptrArg02 = ptrArg02_127
l0800_4388:
	ptrArg02 = ptrArg02_127
l0800_436A:
	branch ax_22 == 0x2E<16> l0800_439E
l0800_439E:
	branch Mem11[ptrArg02:byte] == 0<8> l0800_43B6
l0800_436F:
	branch ax_22 == 0x3F<16> l0800_438A
l0800_438A:
	branch Mem11[ptrArg02:byte] == 0x2E<8> l0800_43B6
l0800_4393:
	branch Mem11[ptrArg02:byte] == 0<8> l0800_43B6
l0800_4399:
	ptrArg02 = SEQ(wArg04_130, wArg02_106 + 1<16>) (alias)
l0800_4374:
l0800_43A7:
	branch al_20 == Mem11[ptrArg02:byte] l0800_43B3
l0800_43B3:
	ptrArg02 = SEQ(wArg04_130, wArg02_106 + 1<16>) (alias)
l0800_43B6:
	ptrArg06 = SEQ(wArg08_122, wArg06_111 + 1<16>) (alias)
l0800_43AF:
	return 0<16>
l0800_43C2:
	branch Mem11[ptrArg02:byte] != 0<8> l0800_43D0
l0800_43D0:
	ax_135 = 0<16>
l0800_43CB:
	ax_135 = 1<16>
l0800_43D2:
	return ax_135
fn0800_4357_exit:


void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_5A24
//      fn0800_7A02
// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx es Top
// Preserved: bp si sp
fn0800_43D4_entry:
l0800_43D4:
	cx_12 = wArg06
	si_18 = wArg02 + wArg06 *s 0xC<16>
l0800_440F:
	si_18 = si_18 - 0xC<16>
	cx_12 = cx_12 - 1<16>
	branch cx_12 != 0<16> l0800_43E9
l0800_43E9:
	Mem34[psegArg04:si_18 + 2<i16>:word16] = 0<16>
	Mem35[psegArg04:si_18:word16] = 0<16>
	Mem36[psegArg04:si_18 + 4<i16>:word16] = 0xFFFF<16>
	Mem37[psegArg04:si_18 + 8<i16>:word16] = 0<16>
	Mem38[psegArg04:si_18 + 6<i16>:word16] = 0<16>
	Mem39[psegArg04:si_18 + 10<i16>:word16] = 0<16>
l0800_4419:
	return
fn0800_43D4_exit:


void fn0800_441C(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7A02
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_441C_entry:
	wArg02 = SLICE(ptrArg02, word16, 0)
	psegArg04 = SLICE(ptrArg02, selector, 16)
l0800_441C:
	di_16 = 0<16>
	cx_17 = 0<16>
	si_23 = wArg02
	branch wArg06 <=u 0<16> l0800_4452
l0800_4439:
	branch (Mem28[psegArg04:si_23:word16] | Mem28[psegArg04:si_23 + 2<i16>:word16]) == 0<16> l0800_4449
l0800_4445:
	di_16 = di_16 + 1<16>
	wLoc04 = cx_17
l0800_4449:
	si_23 = si_23 + 0xC<16>
	cx_17 = cx_17 + 1<16>
	branch cx_17 <u wArg06 l0800_4439
l0800_4452:
	psegArg04_316 = SLICE(ptrArg02, selector, 16) (alias)
	wArg02_317 = SLICE(ptrArg02, word16, 0) (alias)
	branch di_16 != 0<16> l0800_4459
l0800_4459:
	branch di_16 == 1<16> l0800_4461
l0800_4461:
	es_71 = SLICE(ptrArg02, selector, 16) (alias)
	bx_69 = SLICE(ptrArg02, word16, 0) + wLoc04 *s 0xC<16>
	Mem73[es_71:bx_69 + 10<i16>:word16] = Mem62[es_71:bx_69 + 10<i16>:word16] + 1<16>
	return
l0800_445E:
l0800_4525:
	branch fn0800_463B(ds, wArg02_317, psegArg04_316, wArg06) == 0<16> l0800_453B
l0800_453B:
	fn0800_4550(wArg02_317, psegArg04_316, wArg06)
l0800_4538:
l0800_4478:
	ax_133 = Mem96[ds:0x4658<16>:word16]
	ax_146 = Mem145[ds:0x465A<16>:word16]
	bx_140 = wArg02_317 + ax_133 *s 0xC<16>
	bx_154 = wArg02_317 + ax_146 *s 0xC<16>
	Mem164[psegArg04_316:bx_154:ui32] = Mem158[psegArg04_316:bx_154:ui32] + Mem96[psegArg04_316:bx_140:ui32]
	bx_166 = wArg02_317 + ax_133 *s 0xC<16>
	Mem167[psegArg04_316:bx_166 + 2<i16>:word16] = 0<16>
	Mem168[psegArg04_316:bx_166:word16] = 0<16>
	bx_170 = wArg02_317 + ax_146 *s 0xC<16>
	Mem173[psegArg04_316:bx_170 + 10<i16>:word16] = Mem168[psegArg04_316:bx_170 + 10<i16>:word16] + 1<16>
	cx_137 = ax_133 *s 0xC<16>
	dx_152 = ax_146 *s 0xC<16>
l0800_44DD:
	bx_181 = wArg02_317 + dx_152
	branch Mem177[psegArg04_316:bx_181 + 4<i16>:word16] != 0xFFFF<16> l0800_44C3
l0800_44C3:
	ax_187 = Mem177[psegArg04_316:bx_181 + 4<i16>:word16]
	Mem189[ds:0x465A<16>:word16] = ax_187
	bx_195 = wArg02_317 + ax_187 *s 0xC<16>
	Mem198[psegArg04_316:bx_195 + 10<i16>:word16] = Mem189[psegArg04_316:bx_195 + 10<i16>:word16] + 1<16>
	dx_152 = ax_187 *s 0xC<16>
l0800_44EB:
	Mem201[psegArg04_316:bx_181 + 4<i16>:word16] = Mem177[ds:0x4658<16>:word16]
	bx_204 = wArg02_317 + ax_133 *s 0xC<16>
	Mem207[psegArg04_316:bx_204 + 10<i16>:word16] = Mem201[psegArg04_316:bx_204 + 10<i16>:word16] + 1<16>
l0800_4517:
	bx_215 = wArg02_317 + cx_137
	branch Mem211[psegArg04_316:bx_215 + 4<i16>:word16] != 0xFFFF<16> l0800_44FD
l0800_44FD:
	ax_221 = Mem211[psegArg04_316:bx_215 + 4<i16>:word16]
	Mem223[ds:0x4658<16>:word16] = ax_221
	bx_229 = wArg02_317 + ax_221 *s 0xC<16>
	Mem232[psegArg04_316:bx_229 + 10<i16>:word16] = Mem223[psegArg04_316:bx_229 + 10<i16>:word16] + 1<16>
	cx_137 = ax_221 *s 0xC<16>
l0800_4456:
l0800_454A:
	return
fn0800_441C_exit:


void fn0800_4550(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_441C
//      fn0800_5A24
// MayUse:  ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: P bp sp
fn0800_4550_entry:
l0800_4550:
	sp_115 = fp - 0x10<16>
	wLoc0C_133 = 1<16>
	dwLoc0A_220 = 0x80000000<32> (alias)
	dwLoc06_223 = 0<32> (alias)
l0800_45D6:
	wLoc0A_155 = SLICE(dwLoc0A_220, word16, 0) (alias)
	wLoc08_152 = SLICE(dwLoc0A_220, word16, 16) (alias)
	branch wLoc0C_133 <=u 0x10<16> l0800_4573
l0800_4573:
	di_27 = 0<16>
	si_28 = wArg02
	branch wArg06 <=u 0<16> l0800_45C3
l0800_457D:
	wLoc06_142 = SLICE(dwLoc06_223, word16, 0) (alias)
	wLoc04_141 = SLICE(dwLoc06_223, word16, 16) (alias)
	branch Mem33[psegArg04:si_28 + 10<i16>:word16] != wLoc0C_133 l0800_45BA
l0800_4589:
	sp_41 = sp_115 - 2<i16>
	Mem42[ss:sp_41:word16] = wLoc0C_133
	Mem45[ss:sp_41 - 2<i16>:word16] = wLoc08_152
	Mem48[ss:sp_41 - 4<i16>:word16] = wLoc0A_155
	Mem51[ss:sp_41 - 6<i16>:word16] = wLoc04_141
	Mem54[ss:sp_41 - 8<i16>:word16] = wLoc06_142
	dx_ax_232 = fn0800_8BC2(Mem54[ss:sp_41 - 8<i16>:word32], Mem54[ss:sp_41 - 4<i16>:word32], out cx_233, out bx_234)
	sp_59 = <invalid>
	Mem67[ss:sp_59 + 6<16>:word16] = SLICE(dx_ax_232, word16, 16)
	Mem69[ss:sp_59 + 4<16>:word16] = SLICE(dx_ax_232, word16, 0)
	ax_70 = fn0800_45E2(Mem69[ss:sp_59 + 4<16>:word16], Mem69[ss:sp_59 + 6<16>:word16], Mem69[ss:sp_59 + 8<16>:word16], out dx_72)
	Mem79[psegArg04:si_28 + 8<i16>:word16] = dx_72
	Mem80[psegArg04:si_28 + 6<i16>:word16] = ax_70
	sp_115 = sp_59 + 0xA<16>
	dwLoc06_223 = dwLoc06_223 + dwLoc0A_220 (alias)
l0800_45BA:
	si_28 = si_28 + 0xC<16>
	di_27 = di_27 + 1<16>
	branch di_27 <u wArg06 l0800_457D
l0800_45C3:
	wLoc0C_133 = wLoc0C_133 + 1<16>
	dwLoc0A_220 = SEQ(wLoc08_152 >>u 1<16>, __rcr<word16,byte>(wLoc0A_155, 1<8>, SLICE(cond(wLoc08_152 >>u 1<16>), bool, 1))) (alias)
l0800_45DC:
	return
fn0800_4550_exit:


word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_4550
// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax:[0..15]-fn0800_4550 dx:[0..15]-fn0800_4550
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_45E2_entry:
l0800_45E2:
	bx_11 = wArg06
	wLoc04_70 = 0<16>
	wLoc06_71 = 0<16>
l0800_462A:
	bx_11 = bx_11 - 1<16>
	branch bx_11 != 0<16> l0800_45F7
l0800_45F7:
	ax_31 = __rcl<word16,byte>(wLoc04_70, 1<8>, SLICE(cond(wLoc06_71 << 1<16>), bool, 1))
	wLoc06_71 = wLoc06_71 << 1<16>
	branch (wArg02 & 1<16>) == 0<16> l0800_461A
l0800_4612:
	wLoc06_71 = wLoc06_71 | 1<16>
l0800_461A:
	wLoc04_70 = ax_31
	wArg04 = wArg04 >>u 1<16>
	wArg02 = __rcr<word16,byte>(wArg02, 1<8>, SLICE(cond(wArg04 >>u 1<16>), bool, 1))
l0800_4631:
	dxOut = wLoc04_70
	return wLoc06_71
fn0800_45E2_exit:


word16 fn0800_463B(selector ds, word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_441C
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax:[0..15]-fn0800_441C
// Trashed: SCZO ax cx dx Top
// Preserved: bp di es si sp
fn0800_463B_entry:
l0800_463B:
	wLoc0C_157 = 0xFFFF<16>
	wLoc0E_158 = 0xFFFF<16>
	wLoc08_159 = 0xFFFF<16>
	wLoc0A_160 = 0xFFFF<16>
	cx_23 = 0<16>
	si_24 = wArg02
	dwLoc0A_251 = 0xFFFFFFFF<32> (alias)
	dwLoc0E_254 = 0xFFFFFFFF<32> (alias)
	branch wArg06 <=u 0<16> l0800_46D5
l0800_4661:
	ax_32 = Mem29[psegArg04:si_24 + 2<i16>:word16]
	dx_33 = Mem29[psegArg04:si_24:word16]
	branch (dx_33 | ax_32) == 0<16> l0800_46CD
l0800_4675:
	branch SEQ(ax_32, dx_33) >=u dwLoc0A_251 l0800_46AB
l0800_46AB:
	branch SEQ(ax_32, dx_33) >=u dwLoc0E_254 l0800_46CD
l0800_46BD:
	Mem71[ds:0x4658<16>:word16] = cx_23
	dwLoc0E_254 = SEQ(ax_32, dx_33) (alias)
l0800_4687:
	Mem81[ds:0x4658<16>:word16] = Mem78[ds:0x465A<16>:word16]
	Mem87[ds:0x465A<16>:word16] = cx_23
	dwLoc0A_251 = SEQ(ax_32, dx_33) (alias)
	dwLoc0E_254 = dwLoc0A_251 (alias)
l0800_46CD:
	wLoc0E_158 = SLICE(dwLoc0E_254, word16, 0) (alias)
	wLoc0C_157 = SLICE(dwLoc0E_254, word16, 16) (alias)
	wLoc0A_160 = SLICE(dwLoc0A_251, word16, 0) (alias)
	wLoc08_159 = SLICE(dwLoc0A_251, word16, 16) (alias)
	si_24 = si_24 + 0xC<16>
	cx_23 = cx_23 + 1<16>
	branch cx_23 <u wArg06 l0800_4661
l0800_46D5:
	branch wLoc08_159 != 0xFFFF<16> l0800_46E1
l0800_46DB:
	branch wLoc0A_160 == 0xFFFF<16> l0800_46ED
l0800_46E1:
	branch wLoc0C_157 != 0xFFFF<16> l0800_46F5
l0800_46E7:
	branch wLoc0E_158 != 0xFFFF<16> l0800_46F5
l0800_46F5:
	return 1<16>
l0800_46ED:
	return 0<16>
fn0800_463B_exit:


word16 fn0800_46FE(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D sp:[0..15]-fn0800_112D
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: P
fn0800_46FE_entry:
l0800_46FE:
	branch Mem15[ds:0x2A03<16>:word32] >=u 0x2A<32> l0800_471F
l0800_471F:
	fn0800_ACB3(ds, Mem34[ds:0x29E3<16>:word32], 0x28<32>, 0<16>, out cx_1592)
	ax_60 = fn0800_3FAD(ds, Mem41[ds:0x29E3<16>:word32], out di_1593, out ds_64)
	branch Mem59[ds_64:0x2A05<16>:word16] >u 0<16> l0800_4761
l0800_4750:
	branch Mem59[ds_64:0x2A05<16>:word16] <u 0<16> l0800_4758
l0800_4752:
	branch ax_60 + 0x24<16> <=u Mem59[ds_64:0x2A03<16>:word16] l0800_4761
l0800_4761:
	fn0800_ACB3(ds_64, Mem95[ds_64:0x29E3<16>:word32], CONVERT(ax_60 + 0x20<16>, uint16, uint32), 0<16>, out cx_1594)
	dx_ax_1595 = fn0800_3F58(ds_64, Mem102[ds_64:0x29E3<16>:word32], out di_1596, out ds_125)
	dx_ax_1597 = fn0800_8CAA(SLICE(dx_ax_1595, word16, 0), 8<8>, SLICE(dx_ax_1595, word16, 16))
	sp_140 = <invalid>
	ax_136 = SLICE(dx_ax_1597, word16, 0) (alias)
	branch SLICE(dx_ax_1597, word16, 16) != 0x52<16> l0800_4798
l0800_4793:
	branch ax_136 == 0x4E43<16> l0800_47A1
l0800_47A1:
	Mem151[ss:sp_140 - 2<i16>:word16] = Mem120[ds_125:0x29E5<16>:word16]
	Mem154[ss:sp_140 - 4<i16>:word16] = Mem151[ds_125:0x29E3<16>:word16]
	dx_ax_1598 = fn0800_AD2F(ds_125, Mem154[ss:sp_140 - 4<i16>:segptr32])
	Mem174[ss:sp_140 - 2<i16>:word16] = 0<16>
	Mem177[ss:sp_140 - 4<i16>:word16] = 0<16>
	Mem179[ss:sp_140 - 6<i16>:word16] = 2<16>
	Mem182[ss:sp_140 - 8<i16>:word16] = Mem179[ds_125:0x29E5<16>:word16]
	Mem185[ss:sp_140 - 10<i16>:word16] = Mem182[ds_125:0x29E3<16>:word16]
	fn0800_ACB3(ds_125, Mem185[ss:sp_140 - 10<i16>:segptr32], Mem185[ss:sp_140 - 6<i16>:ui32], Mem185[ss:sp_140 - 2<i16>:word16], out cx_1599)
	Mem200[ss:sp_140 - 2<i16>:word16] = Mem185[ds_125:0x29E5<16>:word16]
	Mem203[ss:sp_140 - 4<i16>:word16] = Mem200[ds_125:0x29E3<16>:word16]
	fn0800_3FAD(ds_125, Mem203[ss:sp_140 - 4<i16>:word32], out di_1600, out ds_208)
	Mem220[ss:sp_140 - 2<i16>:word16] = Mem203[ds_208:0x29E5<16>:word16]
	Mem223[ss:sp_140 - 4<i16>:word16] = Mem220[ds_208:0x29E3<16>:word16]
	ax_224 = fn0800_3FAD(ds_208, Mem223[ss:sp_140 - 4<i16>:word32], out di_227, out ds_228)
	ax_155 = SLICE(dx_ax_1598, word16, 0) (alias)
	dx_158 = SLICE(dx_ax_1598, word16, 16) (alias)
	wLoc0C_1477 = ax_224
	branch di_227 == 0<16> l0800_47F3
l0800_47F0:
	wLoc0C_1477 = ax_224 - 1<16>
l0800_47F3:
	fn0800_8C69(wLoc0C_1477, 9<8>, 0<16>)
	sp_258 = <invalid>
	Mem275[ss:sp_258 - 2<i16>:word16] = 0<16>
	Mem278[ss:sp_258 - 4<i16>:word16] = 0<16>
	Mem280[ss:sp_258 - 6<i16>:word16] = 0x16<16>
	Mem284[ss:sp_258 - 8<i16>:word16] = Mem280[ds_228:0x29E5<16>:word16]
	Mem287[ss:sp_258 - 10<i16>:word16] = Mem284[ds_228:0x29E3<16>:word16]
	fn0800_ACB3(ds_228, Mem287[ss:sp_258 - 10<i16>:segptr32], Mem287[ss:sp_258 - 6<i16>:ui32], Mem287[ss:sp_258 - 2<i16>:word16], out cx_1602)
	Mem302[ss:sp_258 - 2<i16>:word16] = Mem287[ds_228:0x29E5<16>:word16]
	Mem305[ss:sp_258 - 4<i16>:word16] = Mem302[ds_228:0x29E3<16>:word16]
	fn0800_3FAD(ds_228, Mem305[ss:sp_258 - 4<i16>:word32], out di_1603, out ds_310)
	Mem321[ss:sp_258 - 2<i16>:word16] = Mem305[ds_310:0x29E5<16>:word16]
	Mem324[ss:sp_258 - 4<i16>:word16] = Mem321[ds_310:0x29E3<16>:word16]
	ax_325 = fn0800_3FAD(ds_310, Mem324[ss:sp_258 - 4<i16>:word32], out di_1604, out ds_329)
	Mem341[ss:sp_258 - 2<i16>:word16] = Mem338[ds_329:0x29E5<16>:word16]
	Mem344[ss:sp_258 - 4<i16>:word16] = Mem341[ds_329:0x29E3<16>:word16]
	ax_345 = fn0800_3FAD(ds_329, Mem344[ss:sp_258 - 4<i16>:word32], out di_1605, out ds_349)
	Mem361[ss:sp_258 - 2<i16>:word16] = Mem358[ds_349:0x29E5<16>:word16]
	Mem364[ss:sp_258 - 4<i16>:word16] = Mem361[ds_349:0x29E3<16>:word16]
	ax_365 = fn0800_3FAD(ds_349, Mem364[ss:sp_258 - 4<i16>:word32], out di_1606, out ds_369)
	Mem381[ss:sp_258 - 2<i16>:word16] = Mem378[ds_369:0x29E5<16>:word16]
	Mem384[ss:sp_258 - 4<i16>:word16] = Mem381[ds_369:0x29E3<16>:word16]
	ax_385 = fn0800_3FAD(ds_369, Mem384[ss:sp_258 - 4<i16>:word32], out di_1607, out ds_389)
	Mem401[ss:sp_258 - 2<i16>:word16] = Mem398[ds_389:0x29E5<16>:word16]
	Mem404[ss:sp_258 - 4<i16>:word16] = Mem401[ds_389:0x29E3<16>:word16]
	ax_405 = fn0800_3FAD(ds_389, Mem404[ss:sp_258 - 4<i16>:word32], out di_1608, out ds_409)
	Mem421[ss:sp_258 - 2<i16>:word16] = Mem418[ds_409:0x29E5<16>:word16]
	Mem424[ss:sp_258 - 4<i16>:word16] = Mem421[ds_409:0x29E3<16>:word16]
	ax_425 = fn0800_3FAD(ds_409, Mem424[ss:sp_258 - 4<i16>:word32], out di_1609, out ds_429)
	Mem441[ss:sp_258 - 2<i16>:word16] = Mem438[ds_429:0x29E5<16>:word16]
	Mem444[ss:sp_258 - 4<i16>:word16] = Mem441[ds_429:0x29E3<16>:word16]
	ax_445 = fn0800_3FAD(ds_429, Mem444[ss:sp_258 - 4<i16>:word32], out di_1610, out ds_449)
	Mem461[ss:sp_258 - 2<i16>:word16] = Mem458[ds_449:0x29E5<16>:word16]
	Mem464[ss:sp_258 - 4<i16>:word16] = Mem461[ds_449:0x29E3<16>:word16]
	ax_465 = fn0800_3FAD(ds_449, Mem464[ss:sp_258 - 4<i16>:word32], out di_1611, out ds_469)
	Mem481[ss:sp_258 - 2<i16>:word16] = Mem478[ds_469:0x29E1<16>:word16]
	Mem484[ss:sp_258 - 4<i16>:word16] = Mem481[ds_469:0x29DF<16>:word16]
	Mem487[ss:sp_258 - 6<i16>:word16] = 0x4D5A<16>
	fn0800_401E(ds_469, Mem487[ss:sp_258 + 6<i16>:byte], Mem487[ss:sp_258 - 4<i16>:word32], out cx_1612, out dx_1613, out bx_1614, out ds_492)
	Mem502[ss:sp_258 - 2<i16>:word16] = Mem487[ds_492:0x29E1<16>:word16]
	Mem505[ss:sp_258 - 4<i16>:word16] = Mem502[ds_492:0x29DF<16>:word16]
	Mem511[ss:sp_258 - 6<i16>:word16] = 0<16>
	Mem513[ss:sp_258 - 8<i16>:word16] = 0<16>
	ds_518 = fn0800_409C(ds_492, Mem513[ss:sp_258 - 8<i16>:word16], Mem513[ss:sp_258 - 6<i16>:word16], Mem513[ss:sp_258 - 4<i16>:word32])
	Mem528[ss:sp_258 - 2<i16>:word16] = Mem513[ds_518:0x29E1<16>:word16]
	Mem531[ss:sp_258 - 4<i16>:word16] = Mem528[ds_518:0x29DF<16>:word16]
	Mem537[ss:sp_258 - 6<i16>:word16] = 0<16>
	Mem539[ss:sp_258 - 8<i16>:word16] = 0<16>
	ds_544 = fn0800_409C(ds_518, Mem539[ss:sp_258 - 8<i16>:word16], Mem539[ss:sp_258 - 6<i16>:word16], Mem539[ss:sp_258 - 4<i16>:word32])
	Mem555[ss:sp_258 - 2<i16>:word16] = Mem539[ds_544:0x29E1<16>:word16]
	Mem558[ss:sp_258 - 4<i16>:word16] = Mem555[ds_544:0x29DF<16>:word16]
	Mem561[ss:sp_258 - 6<i16>:word16] = ax_365
	fn0800_40BF(ds_544, Mem561[ss:sp_258 + 6<i16>:byte], Mem561[ss:sp_258 - 4<i16>:word32], out ds_566)
	Mem577[ss:sp_258 - 2<i16>:word16] = Mem561[ds_566:0x29E1<16>:word16]
	Mem580[ss:sp_258 - 4<i16>:word16] = Mem577[ds_566:0x29DF<16>:word16]
	Mem583[ss:sp_258 - 6<i16>:word16] = ax_385
	fn0800_40BF(ds_566, Mem583[ss:sp_258 + 6<i16>:byte], Mem583[ss:sp_258 - 4<i16>:word32], out ds_588)
	Mem599[ss:sp_258 - 2<i16>:word16] = Mem583[ds_588:0x29E1<16>:word16]
	Mem602[ss:sp_258 - 4<i16>:word16] = Mem599[ds_588:0x29DF<16>:word16]
	Mem605[ss:sp_258 - 6<i16>:word16] = ax_465
	fn0800_40BF(ds_588, Mem605[ss:sp_258 + 6<i16>:byte], Mem605[ss:sp_258 - 4<i16>:word32], out ds_610)
	Mem621[ss:sp_258 - 2<i16>:word16] = Mem605[ds_610:0x29E1<16>:word16]
	Mem624[ss:sp_258 - 4<i16>:word16] = Mem621[ds_610:0x29DF<16>:word16]
	Mem627[ss:sp_258 - 6<i16>:word16] = ax_445
	fn0800_40BF(ds_610, Mem627[ss:sp_258 + 6<i16>:byte], Mem627[ss:sp_258 - 4<i16>:word32], out ds_632)
	Mem642[ss:sp_258 - 2<i16>:word16] = Mem627[ds_632:0x29E1<16>:word16]
	Mem645[ss:sp_258 - 4<i16>:word16] = Mem642[ds_632:0x29DF<16>:word16]
	Mem651[ss:sp_258 - 6<i16>:word16] = 0<16>
	fn0800_401E(ds_632, Mem651[ss:sp_258 + 6<i16>:byte], Mem651[ss:sp_258 - 4<i16>:word32], out cx_1615, out dx_1616, out bx_1617, out ds_656)
	Mem667[ss:sp_258 - 2<i16>:word16] = Mem651[ds_656:0x29E1<16>:word16]
	Mem670[ss:sp_258 - 4<i16>:word16] = Mem667[ds_656:0x29DF<16>:word16]
	Mem673[ss:sp_258 - 6<i16>:word16] = ax_405
	fn0800_40BF(ds_656, Mem673[ss:sp_258 + 6<i16>:byte], Mem673[ss:sp_258 - 4<i16>:word32], out ds_678)
	Mem689[ss:sp_258 - 2<i16>:word16] = Mem673[ds_678:0x29E1<16>:word16]
	Mem692[ss:sp_258 - 4<i16>:word16] = Mem689[ds_678:0x29DF<16>:word16]
	Mem695[ss:sp_258 - 6<i16>:word16] = ax_425
	fn0800_40BF(ds_678, Mem695[ss:sp_258 + 6<i16>:byte], Mem695[ss:sp_258 - 4<i16>:word32], out ds_700)
	Mem711[ss:sp_258 - 2<i16>:word16] = Mem695[ds_700:0x29E1<16>:word16]
	Mem714[ss:sp_258 - 4<i16>:word16] = Mem711[ds_700:0x29DF<16>:word16]
	Mem717[ss:sp_258 - 6<i16>:word16] = 0x1E<16>
	fn0800_40BF(ds_700, Mem717[ss:sp_258 + 6<i16>:byte], Mem717[ss:sp_258 - 4<i16>:word32], out ds_722)
	Mem733[ss:sp_258 - 2<i16>:word16] = Mem717[ds_722:0x29E1<16>:word16]
	Mem736[ss:sp_258 - 4<i16>:word16] = Mem733[ds_722:0x29DF<16>:word16]
	Mem739[ss:sp_258 - 6<i16>:word16] = ax_345
	fn0800_40BF(ds_722, Mem739[ss:sp_258 + 6<i16>:byte], Mem739[ss:sp_258 - 4<i16>:word32], out ds_744)
	Mem754[ss:sp_258 - 2<i16>:word16] = Mem739[ds_744:0x29E1<16>:word16]
	Mem757[ss:sp_258 - 4<i16>:word16] = Mem754[ds_744:0x29DF<16>:word16]
	Mem763[ss:sp_258 - 6<i16>:word16] = 0<16>
	fn0800_401E(ds_744, Mem763[ss:sp_258 + 6<i16>:byte], Mem763[ss:sp_258 - 4<i16>:word32], out cx_1618, out dx_1619, out bx_1620, out ds_1042)
	Mem778[ss:sp_258 - 2<i16>:word16] = 0<16>
	Mem786[ss:sp_258 - 4<i16>:word16] = 0<16>
	Mem788[ss:sp_258 - 6<i16>:word16] = ax_325 + 0x20<16>
	Mem791[ss:sp_258 - 8<i16>:word16] = Mem788[ds_1042:0x29E5<16>:word16]
	Mem794[ss:sp_258 - 10<i16>:word16] = Mem791[ds_1042:0x29E3<16>:word16]
	fn0800_ACB3(ds_1042, Mem794[ss:sp_258 - 10<i16>:segptr32], Mem794[ss:sp_258 - 6<i16>:ui32], Mem794[ss:sp_258 - 2<i16>:word16], out cx_1621)
l0800_49B5:
	Mem814[ss:sp_258 - 2<i16>:word16] = Mem809[ds_1042:0x29E5<16>:word16]
	Mem817[ss:sp_258 - 4<i16>:word16] = Mem814[ds_1042:0x29E3<16>:word16]
	ax_832 = CONVERT(SLICE(fn0800_3DCF(ds_1042, Mem817[ss:sp_258 - 4<i16>:segptr32], out ch_1624, out di_1625, out ds_1042), byte, 0), uint8, uint16) (alias)
	di_834 = ax_832
	branch ax_832 == 0<16> l0800_4A22
l0800_49CB:
	Mem841[ss:sp_258 - 2<i16>:word16] = Mem817[ds_1042:0x29E5<16>:word16]
	Mem844[ss:sp_258 - 4<i16>:word16] = Mem841[ds_1042:0x29E3<16>:word16]
	ax_845 = fn0800_3FAD(ds_1042, Mem844[ss:sp_258 - 4<i16>:word32], out di_834, out ds_1042)
	si_859 = 0<16>
	wLoc0C_1492 = di_834
l0800_4A15:
	wLoc0C_1492 = wLoc0C_1492 - 1<16>
	branch wLoc0C_1492 != 0<16> l0800_49E3
l0800_49E3:
	Mem879[ss:sp_258 - 2<i16>:word16] = Mem869[ds_1042:0x29E5<16>:word16]
	Mem882[ss:sp_258 - 4<i16>:word16] = Mem879[ds_1042:0x29E3<16>:word16]
	si_859 = si_859 + CONVERT(SLICE(fn0800_3DCF(ds_1042, Mem882[ss:sp_258 - 4<i16>:segptr32], out ch_1622, out di_1623, out ds_889), byte, 0), uint8, uint16)
	Mem903[ss:sp_258 - 2<i16>:word16] = Mem882[ds_889:0x29E1<16>:word16]
	Mem906[ss:sp_258 - 4<i16>:word16] = Mem903[ds_889:0x29DF<16>:word16]
	Mem908[ss:sp_258 - 6<i16>:word16] = si_859
	fn0800_40BF(ds_889, Mem908[ss:sp_258 + 6<i16>:byte], Mem908[ss:sp_258 - 4<i16>:word32], out ds_913)
	Mem924[ss:sp_258 - 2<i16>:word16] = Mem908[ds_913:0x29E1<16>:word16]
	Mem927[ss:sp_258 - 4<i16>:word16] = Mem924[ds_913:0x29DF<16>:word16]
	Mem930[ss:sp_258 - 6<i16>:word16] = ax_845
	di_834 = fn0800_40BF(ds_913, Mem930[ss:sp_258 + 6<i16>:byte], Mem930[ss:sp_258 - 4<i16>:word32], out ds_1042)
l0800_4A1F:
l0800_4A22:
	branch di_834 != 0<16> l0800_49B5
l0800_4A26:
	Mem960[ss:sp_258 - 2<i16>:word16] = Mem955[ds_1042:0x29E1<16>:word16]
	Mem963[ss:sp_258 - 4<i16>:word16] = Mem960[ds_1042:0x29DF<16>:word16]
	branch fn0800_AD2F(ds_1042, Mem963[ss:sp_258 - 4<i16>:segptr32]) >= 0x200<32> l0800_4A56
l0800_4A56:
	Mem989[ss:sp_258 - 2<i16>:word16] = Mem963[ds_1042:0x29E1<16>:word16]
	Mem992[ss:sp_258 - 4<i16>:word16] = Mem989[ds_1042:0x29DF<16>:word16]
	di_1009 = 0x10<16> - SLICE(fn0800_AD2F(ds_1042, Mem992[ss:sp_258 - 4<i16>:segptr32]), word16, 0) & 0xF<16>
l0800_4A3F:
	Mem1016[ss:sp_258 - 2<i16>:word16] = Mem963[ds_1042:0x29E1<16>:word16]
	Mem1019[ss:sp_258 - 4<i16>:word16] = Mem1016[ds_1042:0x29DF<16>:word16]
	di_1009 = 0x200<16> - SLICE(fn0800_AD2F(ds_1042, Mem1019[ss:sp_258 - 4<i16>:segptr32]), word16, 0)
l0800_4A81:
	ah_1054 = SLICE(di_1009, byte, 8) (alias)
	branch di_1009 != 0<16> l0800_4A70
l0800_4A70:
	Mem1048[ss:sp_258 - 2<i16>:word16] = Mem1043[ds_1042:0x29E1<16>:word16]
	Mem1051[ss:sp_258 - 4<i16>:word16] = Mem1048[ds_1042:0x29DF<16>:word16]
	Mem1056[ss:sp_258 - 6<i16>:word16] = SEQ(ah_1054, 0<8>)
	fn0800_4047(ds_1042, Mem1056[ss:sp_258 - 6<i16>:byte], Mem1056[ss:sp_258 - 4<i16>:segptr32], out cx_1628, out dx_1629, out bx_1630, out di_1009, out ds_1042)
l0800_4A88:
	Mem1072[ss:sp_258 - 2<i16>:word16] = Mem1043[ds_1042:0x29E1<16>:word16]
	Mem1075[ss:sp_258 - 4<i16>:word16] = Mem1072[ds_1042:0x29DF<16>:word16]
	dx_ax_1631 = fn0800_AD2F(ds_1042, Mem1075[ss:sp_258 - 4<i16>:segptr32])
	fn0800_8C8A(SLICE(dx_ax_1631, word16, 0), 4<8>, SLICE(dx_ax_1631, word16, 16), out cl_1632, out dx_1633)
	sp_1092 = <invalid>
	Mem1107[ss:sp_1092 - 2<i16>:word16] = 0<16>
	Mem1110[ss:sp_1092 - 4<i16>:word16] = dx_158
	Mem1113[ss:sp_1092 - 6<i16>:word16] = ax_155
	Mem1116[ss:sp_1092 - 8<i16>:word16] = Mem1113[ds_1042:0x29E5<16>:word16]
	Mem1119[ss:sp_1092 - 10<i16>:word16] = Mem1116[ds_1042:0x29E3<16>:word16]
	fn0800_ACB3(ds_1042, Mem1119[ss:sp_1092 - 10<i16>:segptr32], Mem1119[ss:sp_1092 - 6<i16>:ui32], Mem1119[ss:sp_1092 - 2<i16>:word16], out cx_1634)
	ax_1132 = fn0800_5374(ds_1042, out bp_1133, out ds_1137)
	sp_1141 = <invalid>
	branch ax_1132 == 0<16> l0800_4AC4
l0800_4AC4:
	Mem1154[ss:sp_1141 - 2<i16>:word16] = Mem1119[ds_1137:0x29E1<16>:word16]
	Mem1157[ss:sp_1141 - 4<i16>:word16] = Mem1154[ds_1137:0x29DF<16>:word16]
	dx_ax_1635 = fn0800_AD2F(ds_1137, Mem1157[ss:sp_1141 - 4<i16>:segptr32])
	Mem1168[ss:bp_1133 - 6<i16>:word16] = SLICE(dx_ax_1635, word16, 16)
	Mem1169[ss:bp_1133 - 8<i16>:word16] = SLICE(dx_ax_1635, word16, 0)
	Mem1175[ss:sp_1141 - 2<i16>:word16] = 0<16>
	Mem1178[ss:sp_1141 - 4<i16>:word16] = Mem1175[ss:bp_1133 - 2<i16>:word16]
	Mem1181[ss:sp_1141 - 6<i16>:word16] = Mem1178[ss:bp_1133 - 4<i16>:word16]
	Mem1184[ss:sp_1141 - 8<i16>:word16] = Mem1181[ds_1137:0x29E5<16>:word16]
	Mem1187[ss:sp_1141 - 10<i16>:word16] = Mem1184[ds_1137:0x29E3<16>:word16]
	fn0800_ACB3(ds_1137, Mem1187[ss:sp_1141 - 10<i16>:segptr32], Mem1187[ss:sp_1141 - 6<i16>:ui32], Mem1187[ss:sp_1141 - 2<i16>:word16], out cx_1636)
	Mem1202[ss:sp_1141 - 2<i16>:word16] = Mem1187[ds_1137:0x29E5<16>:word16]
	Mem1205[ss:sp_1141 - 4<i16>:word16] = Mem1202[ds_1137:0x29E3<16>:word16]
	dx_ax_1451 = fn0800_4194(ds_1137, Mem1205[ss:sp_1141 - 4<i16>:word32]) - Mem1205[ss:bp_1133 - 4<i16>:ui32]
	Mem1223[ss:sp_1141 - 2<i16>:word16] = SLICE(dx_ax_1451, word16, 16)
	Mem1225[ss:sp_1141 - 4<i16>:word16] = SLICE(dx_ax_1451, word16, 0)
	Mem1228[ss:sp_1141 - 6<i16>:word16] = Mem1225[ds_1137:0x29E1<16>:word16]
	Mem1231[ss:sp_1141 - 8<i16>:word16] = Mem1228[ds_1137:0x29DF<16>:word16]
	Mem1234[ss:sp_1141 - 10<i16>:word16] = Mem1231[ds_1137:0x29E5<16>:word16]
	Mem1237[ss:sp_1141 - 12<i16>:word16] = Mem1234[ds_1137:0x29E3<16>:word16]
	bp_1239 = fn0800_3B0A(ds_1137, Mem1237[ss:sp_1141 - 4<i16>:word16], Mem1237[ss:sp_1141 - 2<i16>:word16], out si_1637, out ds_1243)
	di_1253 = Mem1237[ss:bp_1239 - 8<i16>:word16]
	Mem1270[ss:bp_1239 - 10<i16>:word16] = SLICE(fn0800_8CAA(Mem1237[ss:bp_1239 - 8<i16>:word16], 9<8>, Mem1237[ss:bp_1239 - 6<i16>:word16]), word16, 0)
	sp_1265 = <invalid>
	branch (di_1253 & 0x1FF<16>) == 0<16> l0800_4B37
l0800_4B34:
	Mem1277[ss:bp_1239 - 10<i16>:word16] = Mem1270[ss:bp_1239 - 10<i16>:word16] + 1<16>
l0800_4B37:
	Mem1286[ss:sp_1265 - 2<i16>:word16] = 0<16>
	Mem1289[ss:sp_1265 - 4<i16>:word16] = 0<16>
	Mem1291[ss:sp_1265 - 6<i16>:word16] = 2<16>
	Mem1295[ss:sp_1265 - 8<i16>:word16] = Mem1291[ds_1243:0x29E1<16>:word16]
	Mem1298[ss:sp_1265 - 10<i16>:word16] = Mem1295[ds_1243:0x29DF<16>:word16]
	fn0800_ACB3(ds_1243, Mem1298[ss:sp_1265 - 10<i16>:segptr32], Mem1298[ss:sp_1265 - 6<i16>:ui32], Mem1298[ss:sp_1265 - 2<i16>:word16], out cx_1639)
	Mem1313[ss:sp_1265 - 2<i16>:word16] = Mem1298[ds_1243:0x29E1<16>:word16]
	Mem1316[ss:sp_1265 - 4<i16>:word16] = Mem1313[ds_1243:0x29DF<16>:word16]
	Mem1319[ss:sp_1265 - 6<i16>:word16] = di_1253 & 0x1FF<16>
	fn0800_40BF(ds_1243, Mem1319[ss:sp_1265 + 6<i16>:byte], Mem1319[ss:sp_1265 - 4<i16>:word32], out ds_1324)
	Mem1335[ss:sp_1265 - 2<i16>:word16] = Mem1319[ds_1324:0x29E1<16>:word16]
	Mem1338[ss:sp_1265 - 4<i16>:word16] = Mem1335[ds_1324:0x29DF<16>:word16]
	Mem1342[ss:sp_1265 - 6<i16>:word16] = Mem1338[ss:bp_1239 - 10<i16>:word16]
	fn0800_40BF(ds_1324, Mem1342[ss:sp_1265 + 6<i16>:byte], Mem1342[ss:sp_1265 - 4<i16>:word32], out ds_1347)
	Mem1358[ss:sp_1265 - 2<i16>:word16] = Mem1342[ds_1347:0x29E1<16>:word16]
	Mem1361[ss:sp_1265 - 4<i16>:word16] = Mem1358[ds_1347:0x29DF<16>:word16]
	Mem1364[ss:sp_1265 - 6<i16>:word16] = Mem1361[ss:bp_1239 - 12<i16>:word16]
	fn0800_40BF(ds_1347, Mem1364[ss:sp_1265 + 6<i16>:byte], Mem1364[ss:sp_1265 - 4<i16>:word32], out ds_1369)
	Mem1380[ss:sp_1265 - 2<i16>:word16] = Mem1364[ds_1369:0x29E1<16>:word16]
	Mem1383[ss:sp_1265 - 4<i16>:word16] = Mem1380[ds_1369:0x29DF<16>:word16]
	Mem1386[ss:sp_1265 - 6<i16>:word16] = Mem1383[ss:bp_1239 - 14<i16>:word16]
	fn0800_40BF(ds_1369, Mem1386[ss:sp_1265 + 6<i16>:byte], Mem1386[ss:sp_1265 - 4<i16>:word32], out ds_1391)
	dsOut = ds_1391
	return 0<16>
l0800_4ABE:
	dsOut = ds_1137
	return ax_1132
l0800_4798:
	dsOut = ds_125
	return 7<16>
l0800_4758:
	dsOut = ds_64
	return 7<16>
l0800_4716:
	dsOut = ds
	return 7<16>
fn0800_46FE_exit:


word16 fn0800_4B97(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D
// Trashed: SCZOP ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_4B97_entry:
l0800_4B97:
	branch fn0800_5DCE(ds, Mem0[ds:0x29E3<16>:word32], out ds_17) != 0<16> l0800_4BAD
l0800_4BAD:
	ax_31 = fn0800_5374(ds_17, out bp_69, out ds_36)
	dsOut = ds_36
	return ax_31
l0800_4BA9:
	dsOut = ds_17
	return 7<16>
fn0800_4B97_exit:


word16 fn0800_4BB1(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D
// Trashed: SCZOP ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_4BB1_entry:
l0800_4BB1:
	branch fn0800_5DCE(ds, Mem0[ds:0x29E3<16>:word32], out ds_17) != 0<16> l0800_4BC7
l0800_4BC7:
	fn0800_ACB3(ds_17, Mem39[ds_17:0x29E3<16>:word32], 0xFFFFFFEE<32>, 1<16>, out cx_263)
	fn0800_401E(ds_17, 0x1A<8>, Mem45[ds_17:0x29DF<16>:word32], out cx_264, out dx_265, out bx_266, out ds_71)
	fn0800_3B0A(ds_71, 0x10<16>, 0<16>, out si_267, out ds_105)
	sp_109 = <invalid>
	Mem117[ss:sp_109 + 0xA<16>:word16] = Mem99[ds_105:0x29E1<16>:word16]
	Mem120[ss:sp_109 + 8<16>:word16] = Mem117[ds_105:0x29DF<16>:word16]
	Mem126[ss:sp_109 + 6<16>:word16] = 0<16>
	Mem128[ss:sp_109 + 4<16>:word16] = 0<16>
	ds_133 = fn0800_409C(ds_105, Mem128[ss:sp_109 + 4<16>:word16], Mem128[ss:sp_109 + 6<16>:word16], Mem128[ss:sp_109 + 8<16>:word32])
	Mem143[ss:sp_109 + 0xA<16>:word16] = Mem128[ds_133:0x29E1<16>:word16]
	Mem146[ss:sp_109 + 8<16>:word16] = Mem143[ds_133:0x29DF<16>:word16]
	Mem152[ss:sp_109 + 6<16>:word16] = 0<16>
	Mem154[ss:sp_109 + 4<16>:word16] = 0<16>
	ds_159 = fn0800_409C(ds_133, Mem154[ss:sp_109 + 4<16>:word16], Mem154[ss:sp_109 + 6<16>:word16], Mem154[ss:sp_109 + 8<16>:word32])
	Mem170[ss:sp_109 + 0xA<16>:word16] = Mem154[ds_159:0x29E1<16>:word16]
	Mem173[ss:sp_109 + 8<16>:word16] = Mem170[ds_159:0x29DF<16>:word16]
	Mem176[ss:sp_109 + 6<16>:word16] = Mem173[ds_159:0x29E5<16>:word16]
	Mem179[ss:sp_109 + 4<16>:word16] = Mem176[ds_159:0x29E3<16>:word16]
	Mem194[ss:sp_109 + 6<16>:word16] = fn0800_3E27(ds_159, Mem179[ss:sp_109 + 4<16>:word32], out cx_268, out di_269, out ds_184)
	fn0800_401E(ds_184, Mem194[ss:sp_109 + 6<16>:byte], Mem194[ss:sp_109 + 8<16>:word32], out cx_270, out dx_271, out bx_272, out ds_199)
	ax_208 = fn0800_5374(ds_199, out bp_273, out ds_213)
	dsOut = ds_213
	return ax_208
l0800_4BC3:
	dsOut = ds_17
	return 7<16>
fn0800_4BB1_exit:


word16 fn0800_4C55(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D
// Trashed: SCZOP ax bp bx cx di ds dx es Top
// Preserved: sp
fn0800_4C55_entry:
l0800_4C55:
	dx_ax_943 = fn0800_3E5D(ds, Mem7[ds:0x29E3<16>:word32], out ds_22)
	ax_18 = SLICE(dx_ax_943, word16, 0) (alias)
	branch SLICE(dx_ax_943, word16, 16) != 0<16> l0800_4C72
l0800_4C6D:
	branch ax_18 == 0x3F3<16> l0800_4C79
l0800_4C79:
	ds_108 = fn0800_409C(ds_22, 0x3F3<16>, 0<16>, Mem17[ds_22:0x29DF<16>:word32])
l0800_4C8E:
	dx_ax_945 = fn0800_3E5D(ds_108, Mem66[ds_108:0x29E3<16>:word32], out ds_79)
	ax_75 = SLICE(dx_ax_945, word16, 0) (alias)
	dx_80 = SLICE(dx_ax_945, word16, 16) (alias)
	ds_108 = fn0800_409C(ds_79, ax_75, dx_80, Mem92[ds_79:0x29DF<16>:word32])
	dwLoc0A_932 = dx_ax_945 (alias)
l0800_4CDA:
	wLoc0A_730 = SLICE(dwLoc0A_932, word16, 0) (alias)
	v24_126 = SLICE(dwLoc0A_932 - 1<32>, word16, 16) (alias)
	branch dwLoc0A_932 != 0<16> l0800_4CBC
l0800_4CBC:
	v43_134 = Mem127[ds_108:0x29E1<16>:word16]
	v44_138 = Mem137[ds_108:0x29DF<16>:word16]
	dx_ax_944 = fn0800_3E5D(ds_108, Mem140[ds_108:0x29E3<16>:word32], out ds_151)
	ds_108 = fn0800_409C(ds_151, SLICE(dx_ax_944, word16, 0), SLICE(dx_ax_944, word16, 16), SEQ(v43_134, v44_138))
	dwLoc0A_932 = SEQ(v24_126, wLoc0A_730 - 1<16>) (alias)
l0800_4CEC:
	branch dx_ax_945 != 0<16> l0800_4C8E
l0800_4CF4:
	v25_183 = Mem127[ds_108:0x29E1<16>:word16]
	v26_186 = Mem185[ds_108:0x29DF<16>:word16]
	dx_ax_935 = fn0800_3E5D(ds_108, Mem188[ds_108:0x29E3<16>:word32], out ds_199)
	ds_220 = fn0800_409C(ds_199, SLICE(dx_ax_935, word16, 0) - 1<16>, SLICE(dx_ax_935 - 1<32>, word16, 16), SEQ(v25_183, v26_186))
	dx_ax_937 = fn0800_3E5D(ds_220, Mem215[ds_220:0x29E3<16>:word32], out ds_239)
	dx_ax_936 = fn0800_3E5D(ds_239, Mem249[ds_239:0x29E3<16>:word32], out ds_260)
	ds_295 = fn0800_409C(ds_260, SLICE(dx_ax_937, word16, 0), SLICE(dx_ax_937, word16, 16), Mem278[ds_260:0x29DF<16>:word32])
	ds_324 = fn0800_409C(ds_295, SLICE(dx_ax_936, word16, 0) - 1<16>, SLICE(dx_ax_936 - 1<32>, word16, 16), Mem290[ds_295:0x29DF<16>:word32])
	dx_ax_946 = fn0800_AD2F(ds_324, Mem319[ds_324:0x29DF<16>:word32])
	Mem349[ds_324:0x4E8E<16>:word16] = SLICE(dx_ax_946, word16, 16)
	Mem350[ds_324:0x4E8C<16>:word16] = SLICE(dx_ax_946, word16, 0)
	fn0800_ACB3(ds_324, Mem362[ds_324:0x29E3<16>:word32], 4<32>, 1<16>, out cx_947)
	dwLoc06_938 = dx_ax_936 - dx_ax_937 (alias)
l0800_4DE4:
	wLoc06_788 = SLICE(dwLoc06_938, word16, 0) (alias)
	branch dwLoc06_938 != 0<16> l0800_4DBE
l0800_4DBE:
	v54_395 = Mem387[ds_324:0x29E1<16>:word16]
	v55_399 = Mem398[ds_324:0x29DF<16>:word16]
	dx_ax_948 = fn0800_3E5D(ds_324, Mem401[ds_324:0x29E3<16>:word32], out ds_412)
	ds_324 = fn0800_409C(ds_412, SLICE(dx_ax_948, word16, 0), SLICE(dx_ax_948, word16, 16), SEQ(v54_395, v55_399))
	dwLoc06_938 = SEQ(SLICE(dwLoc06_938 - 1<32>, word16, 16), wLoc06_788 - 1<16>) (alias)
l0800_4DEC:
	fn0800_ACB3(ds_324, Mem455[ds_324:0x29E3<16>:word32], 4<32>, 1<16>, out cx_949)
	dx_ax_941 = fn0800_3E5D(ds_324, Mem461[ds_324:0x29E3<16>:word32], out ds_484)
	dx_ax_950 = fn0800_8C69(SLICE(dx_ax_941, word16, 0) + 1<16>, 2<8>, SLICE(dx_ax_941 + 1<32>, word16, 16))
	sp_509 = <invalid>
	Mem515[ss:sp_509 - 2<i16>:word16] = SLICE(dx_ax_950, word16, 16)
	Mem517[ss:sp_509 - 4<i16>:word16] = SLICE(dx_ax_950, word16, 0)
	Mem520[ss:sp_509 - 6<i16>:word16] = Mem517[ds_484:0x29E5<16>:word16]
	Mem523[ss:sp_509 - 8<i16>:word16] = Mem520[ds_484:0x29E3<16>:word16]
	fn0800_ACB3(ds_484, Mem523[ss:sp_509 - 8<i16>:segptr32], Mem523[ss:sp_509 - 4<i16>:ui32], Mem523[ss:sp_509:word16], out cx_951)
l0800_4EDE:
	Mem538[ss:sp_509:word16] = Mem523[ds_484:0x29E5<16>:word16]
	Mem541[ss:sp_509 - 2<i16>:word16] = Mem538[ds_484:0x29E3<16>:word16]
	dx_ax_952 = fn0800_AD2F(ds_484, Mem541[ss:sp_509 - 2<i16>:segptr32])
	Mem554[ss:sp_509:word16] = SLICE(dx_ax_952, word16, 0)
	Mem556[ss:sp_509 - 2<i16>:word16] = SLICE(dx_ax_952, word16, 16)
	Mem559[ss:sp_509 - 4<i16>:word16] = Mem556[ds_484:0x29E5<16>:word16]
	Mem562[ss:sp_509 - 6<i16>:word16] = Mem559[ds_484:0x29E3<16>:word16]
	dx_ax_953 = fn0800_4194(ds_484, Mem562[ss:sp_509 - 6<i16>:word32])
	ax_563 = SLICE(dx_ax_953, word16, 0) (alias)
	dx_566 = SLICE(dx_ax_953, word16, 16) (alias)
	bx_574 = Mem562[ss:sp_509 - 2<16>:word16]
	dx_577 = Mem562[ss:sp_509:word16]
	branch bx_574 >=u dx_566 l0800_4F05
l0800_4F05:
	branch bx_574 != dx_566 l0800_4F0E
l0800_4F07:
	branch dx_577 >=u ax_563 l0800_4F0E
l0800_4F0E:
	dsOut = ds_484
	return 0<16>
l0800_4F0B:
l0800_4F02:
l0800_4E41:
	Mem599[ss:sp_509:word16] = Mem562[ds_484:0x29E5<16>:word16]
	Mem602[ss:sp_509 - 2<i16>:word16] = Mem599[ds_484:0x29E3<16>:word16]
	dx_ax_954 = fn0800_3E5D(ds_484, Mem602[ss:sp_509 - 2<i16>:word32], out ds_607)
	Mem621[ss:sp_509:word16] = Mem618[ds_607:0x29E1<16>:word16]
	Mem624[ss:sp_509 - 2<i16>:word16] = Mem621[ds_607:0x29DF<16>:word16]
	dx_608 = SLICE(dx_ax_954, word16, 16) (alias)
	Mem627[ss:sp_509 - 4<i16>:word16] = dx_608
	ax_603 = SLICE(dx_ax_954, word16, 0) (alias)
	Mem629[ss:sp_509 - 6<i16>:word16] = ax_603
	ds_634 = fn0800_409C(ds_607, Mem629[ss:sp_509 - 6<i16>:word16], Mem629[ss:sp_509 - 4<i16>:word16], Mem629[ss:sp_509 - 2<i16>:word32])
	cx_650 = 4<16>
	bx_651 = 0x4F14<16>
l0800_4E7C:
	branch Mem649[0x800<16>:bx_651:word16] != ax_603 l0800_4E8D
l0800_4E84:
	branch Mem649[0x800<16>:bx_651 + 8<i16>:word16] == (dx_608 & 0x3FFF<16>) l0800_4E94
l0800_4E94:
	call Mem649[0x800<16>:bx_651 + 16<i16>:word16] (retsize: 0;)
		uses: Mem:Mem649
		defs: ax:ax_667
	dsOut = ds_634
	return ax_667
l0800_4E8D:
	bx_651 = bx_651 + 2<16>
	cx_650 = cx_650 - 1<16>
	branch cx_650 != 0<16> l0800_4E7C
l0800_4E92:
l0800_4ED7:
	dsOut = ds_634
	return 9<16>
l0800_4C72:
	dsOut = ds_22
	return 7<16>
fn0800_4C55_exit:


void fn0800_4F2C(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_4F2C_entry:
l0800_4F2C:
	dx_ax_821 = fn0800_3E5D(ds, Mem7[ds:0x29E3<16>:word32], out ds_22)
	dx_ax_819 = fn0800_8C69(SLICE(dx_ax_821, word16, 0), 2<8>, SLICE(dx_ax_821, word16, 16))
	sp_36 = <invalid>
	Mem45[ss:sp_36 - 2<i16>:word16] = Mem42[ds_22:0x29E5<16>:word16]
	Mem48[ss:sp_36 - 4<i16>:word16] = Mem45[ds_22:0x29E3<16>:word16]
	dx_ax_822 = fn0800_AD2F(ds_22, Mem48[ss:sp_36 - 4<i16>:segptr32])
	dx_35 = SLICE(dx_ax_819, word16, 16) (alias)
	ax_32 = SLICE(dx_ax_819, word16, 0) (alias)
	ax_49 = SLICE(dx_ax_822, word16, 0) (alias)
	dx_52 = SLICE(dx_ax_822, word16, 16) (alias)
	branch dx_ax_819 <=u 0x12<32> l0800_4F95
l0800_4F6D:
	Mem72[ss:sp_36 - 2<i16>:word16] = Mem60[ds_22:0x29E5<16>:word16]
	Mem75[ss:sp_36 - 4<i16>:word16] = Mem72[ds_22:0x29E3<16>:word16]
	dx_ax_826 = fn0800_3E5D(ds_22, Mem75[ss:sp_36 - 4<i16>:word32], out ds_80)
	Mem94[ss:sp_36 - 2<i16>:word16] = Mem91[ds_80:0x29E5<16>:word16]
	Mem97[ss:sp_36 - 4<i16>:word16] = Mem94[ds_80:0x29E3<16>:word16]
	dx_ax_827 = fn0800_3E5D(ds_80, Mem97[ss:sp_36 - 4<i16>:word32], out ds_102)
	wLoc16_727 = SLICE(dx_ax_826, word16, 16)
	wLoc18_728 = SLICE(dx_ax_826, word16, 0)
	wLoc0E_729 = SLICE(dx_ax_827, word16, 16)
	wLoc10_730 = SLICE(dx_ax_827, word16, 0)
l0800_4F95:
	Mem119[ss:sp_36 - 2<i16>:word16] = Mem114[ds_113:0x29E5<16>:word16]
	Mem122[ss:sp_36 - 4<i16>:word16] = Mem119[ds_113:0x29E3<16>:word16]
	dx_ax_823 = fn0800_3F58(ds_113, Mem122[ss:sp_36 - 4<i16>:word32], out di_824, out ds_127)
	dx_ax_825 = fn0800_8CAA(SLICE(dx_ax_823, word16, 0), 8<8>, SLICE(dx_ax_823, word16, 16))
	sp_142 = <invalid>
	ax_138 = SLICE(dx_ax_825, word16, 0) (alias)
	branch SLICE(dx_ax_825, word16, 16) != 0x52<16> l0800_4FB5
l0800_4FAD:
	branch ax_138 != 0x4E43<16> l0800_4FB5
l0800_4FB5:
	Mem157[ss:sp_142 - 2<i16>:word16] = Mem122[ds_127:0x29E1<16>:word16]
	Mem160[ss:sp_142 - 4<i16>:word16] = Mem157[ds_127:0x29DF<16>:word16]
	dx_ax_828 = fn0800_8CAA(ax_32, 2<8>, dx_35)
	sp_170 = <invalid>
	Mem176[ss:sp_170 - 2<i16>:word16] = SLICE(dx_ax_828, word16, 16)
	Mem178[ss:sp_170 - 4<i16>:word16] = SLICE(dx_ax_828, word16, 0)
	ds_183 = fn0800_409C(ds_127, Mem178[ss:sp_170 - 4<i16>:word16], Mem178[ss:sp_170 - 2<i16>:word16], Mem178[ss:sp_170:word32])
	Mem196[ss:sp_170 + 2<16>:word16] = 0<16>
	Mem199[ss:sp_170:word16] = dx_52
	Mem202[ss:sp_170 - 2<i16>:word16] = ax_49
	Mem205[ss:sp_170 - 4<i16>:word16] = Mem202[ds_183:0x29E5<16>:word16]
	Mem208[ss:sp_170 - 6<i16>:word16] = Mem205[ds_183:0x29E3<16>:word16]
	fn0800_ACB3(ds_183, Mem208[ss:sp_170 - 6<i16>:segptr32], Mem208[ss:sp_170 - 2<i16>:ui32], Mem208[ss:sp_170 + 2<i16>:word16], out cx_829)
	Mem223[ss:sp_170 + 2<16>:word16] = dx_35
	Mem226[ss:sp_170:word16] = ax_32
	Mem229[ss:sp_170 - 2<i16>:word16] = Mem226[ds_183:0x29E1<16>:word16]
	Mem232[ss:sp_170 - 4<i16>:word16] = Mem229[ds_183:0x29DF<16>:word16]
	Mem235[ss:sp_170 - 6<i16>:word16] = Mem232[ds_183:0x29E5<16>:word16]
	Mem238[ss:sp_170 - 8<i16>:word16] = Mem235[ds_183:0x29E3<16>:word16]
	sp_248 = <invalid>
	bp_240 = fn0800_3B0A(ds_183, Mem238[ss:sp_170:word16], Mem238[ss:sp_170 + 2<i16>:word16], out si_830, out ds_244)
	sp_253 = sp_248 + 0xC<16>
l0800_50BC:
	sp_259 = sp_258 - 2<i16>
	Mem261[ss:sp_259:word16] = Mem256[ds_255:0x29E5<16>:word16]
	Mem264[ss:sp_259 - 2<i16>:word16] = Mem261[ds_255:0x29E3<16>:word16]
	dx_ax_836 = fn0800_3F58(ds_255, Mem264[ss:sp_259 - 2<i16>:word32], out di_837, out ds_269)
	ax_265 = SLICE(dx_ax_836, word16, 0) (alias)
	branch SLICE(dx_ax_836, word16, 16) != 0<16> l0800_50D6
l0800_50CE:
	branch ax_265 != 0x3EC<16> l0800_50D6
l0800_50D6:
	Mem292[ds_269:0x4E8C<16>:ui32] = Mem288[ds_269:0x4E8C<16>:ui32] + 4<32>
	return
l0800_50D3:
l0800_5006:
	Mem305[ss:sp_259:word16] = 1<16>
	Mem312[ss:sp_259 - 2<i16>:word16] = 0<16>
	Mem314[ss:sp_259 - 4<i16>:word16] = 4<16>
	Mem317[ss:sp_259 - 6<i16>:word16] = Mem314[ds_269:0x29E5<16>:word16]
	Mem320[ss:sp_259 - 8<i16>:word16] = Mem317[ds_269:0x29E3<16>:word16]
	fn0800_ACB3(ds_269, Mem320[ss:sp_259 - 8<i16>:segptr32], Mem320[ss:sp_259 - 4<i16>:ui32], Mem320[ss:sp_259:word16], out cx_838)
	Mem334[ss:sp_259:word16] = Mem320[ds_269:0x29E1<16>:word16]
	Mem337[ss:sp_259 - 2<i16>:word16] = Mem334[ds_269:0x29DF<16>:word16]
	Mem344[ss:sp_259 - 4<i16>:word16] = 0<16>
	Mem346[ss:sp_259 - 6<i16>:word16] = 0x3EC<16>
	ds_351 = fn0800_409C(ds_269, Mem346[ss:sp_259 - 6<i16>:word16], Mem346[ss:sp_259 - 4<i16>:word16], Mem346[ss:sp_259 - 2<i16>:word32])
	sp_358 = sp_259 + 2<16>
l0800_5034:
	sp_364 = sp_363 - 2<i16>
	Mem366[ss:sp_364:word16] = Mem361[ds_360:0x29E5<16>:word16]
	Mem369[ss:sp_364 - 2<i16>:word16] = Mem366[ds_360:0x29E3<16>:word16]
	dx_ax_841 = fn0800_3E5D(ds_360, Mem369[ss:sp_364 - 2<i16>:word32], out ds_374)
	Mem384[ss:bp_383 - 4<i16>:word16] = SLICE(dx_ax_841, word16, 16)
	ax_370 = SLICE(dx_ax_841, word16, 0) (alias)
	Mem385[ss:bp_383 - 6<i16>:word16] = ax_370
	Mem388[ss:sp_364:word16] = Mem385[ds_374:0x29E1<16>:word16]
	Mem391[ss:sp_364 - 2<i16>:word16] = Mem388[ds_374:0x29DF<16>:word16]
	Mem394[ss:sp_364 - 4<i16>:word16] = Mem391[ss:bp_383 - 4<i16>:word16]
	Mem396[ss:sp_364 - 6<i16>:word16] = ax_370
	ds_401 = fn0800_409C(ds_374, Mem396[ss:sp_364 - 6<i16>:word16], Mem396[ss:sp_364 - 4<i16>:word16], Mem396[ss:sp_364 - 2<i16>:word32])
	sp_408 = sp_364 + 2<16>
	branch (Mem396[ss:bp_383 - 6<i16>:word16] | Mem396[ss:bp_383 - 4<i16>:word16]) == 0<16> l0800_50B1
l0800_5062:
	Mem417[ss:sp_364:word16] = Mem396[ds_401:0x29E5<16>:word16]
	Mem420[ss:sp_364 - 2<16>:word16] = Mem417[ds_401:0x29E3<16>:word16]
	dx_ax_820 = fn0800_3E5D(ds_401, Mem420[ss:sp_364 - 2<16>:word32], out ds_425)
	Mem438[ss:bp_383 - 8<i16>:word16] = SLICE(dx_ax_820 - 1<32>, word16, 16)
	ax_421 = SLICE(dx_ax_820, word16, 0) (alias)
	Mem439[ss:bp_383 - 10<i16>:word16] = ax_421 - 1<16>
	Mem442[ss:sp_364:word16] = Mem439[ds_425:0x29E1<16>:word16]
	Mem445[ss:sp_364 - 2<16>:word16] = Mem442[ds_425:0x29DF<16>:word16]
	Mem448[ss:sp_364 - 4<16>:word16] = Mem445[ss:bp_383 - 8<i16>:word16]
	Mem450[ss:sp_364 - 6<i16>:word16] = ax_421 - 1<16>
	ds_455 = fn0800_409C(ds_425, Mem450[ss:sp_364 - 6<i16>:word16], Mem450[ss:sp_364 - 4<i16>:word16], Mem450[ss:sp_364 - 2<i16>:word32])
	dx_ax_839 = fn0800_8C69(Mem450[ss:bp_383 - 6<i16>:word16], 2<8>, Mem450[ss:bp_383 - 4<i16>:word16])
	sp_471 = <invalid>
	Mem477[ss:sp_471 - 2<i16>:word16] = SLICE(dx_ax_839, word16, 16)
	Mem479[ss:sp_471 - 4<i16>:word16] = SLICE(dx_ax_839, word16, 0)
	Mem482[ss:sp_471 - 6<i16>:word16] = Mem479[ds_455:0x29E1<16>:word16]
	Mem485[ss:sp_471 - 8<i16>:word16] = Mem482[ds_455:0x29DF<16>:word16]
	Mem488[ss:sp_471 - 10<i16>:word16] = Mem485[ds_455:0x29E5<16>:word16]
	Mem491[ss:sp_471 - 12<i16>:word16] = Mem488[ds_455:0x29E3<16>:word16]
	sp_501 = <invalid>
	bp_493 = fn0800_3B0A(ds_455, Mem491[ss:sp_471 - 4<i16>:word16], Mem491[ss:sp_471 - 2<i16>:word16], out si_840, out ds_497)
	sp_506 = sp_501 + 0xC<16>
l0800_50B1:
	branch (Mem510[ss:bp_509 - 6<i16>:word16] | Mem510[ss:bp_509 - 4<i16>:word16]) == 0<16> l0800_50BC
l0800_50B9:
l0800_4FB2:
l0800_50E6:
	Mem519[ss:sp_142 - 2<i16>:word16] = Mem122[ds_127:0x29E1<16>:word16]
	Mem522[ss:sp_142 - 4<i16>:word16] = Mem519[ds_127:0x29DF<16>:word16]
	dx_ax_831 = fn0800_8CAA(wLoc18_741, 2<8>, wLoc16_739)
	sp_530 = <invalid>
	Mem536[ss:sp_530 - 2<i16>:word16] = SLICE(dx_ax_831, word16, 16)
	Mem538[ss:sp_530 - 4<i16>:word16] = SLICE(dx_ax_831, word16, 0)
	ds_543 = fn0800_409C(ds_127, Mem538[ss:sp_530 - 4<i16>:word16], Mem538[ss:sp_530 - 2<i16>:word16], Mem538[ss:sp_530:word32])
	Mem554[ss:sp_530 + 2<16>:word16] = Mem538[ds_543:0x29E1<16>:word16]
	Mem557[ss:sp_530:word16] = Mem554[ds_543:0x29DF<16>:word16]
	dx_ax_832 = fn0800_AD2F(ds_543, Mem557[ss:sp_530:segptr32])
	Mem575[ss:sp_530 + 2<16>:word16] = 0<16>
	Mem578[ss:sp_530:word16] = Mem575[ds_543:0x4E8E<16>:word16]
	Mem581[ss:sp_530 - 2<i16>:word16] = Mem578[ds_543:0x4E8C<16>:word16]
	Mem584[ss:sp_530 - 4<i16>:word16] = Mem581[ds_543:0x29E1<16>:word16]
	Mem587[ss:sp_530 - 6<i16>:word16] = Mem584[ds_543:0x29DF<16>:word16]
	fn0800_ACB3(ds_543, Mem587[ss:sp_530 - 6<i16>:segptr32], Mem587[ss:sp_530 - 2<i16>:ui32], Mem587[ss:sp_530 + 2<i16>:word16], out cx_833)
	Mem602[ss:sp_530 + 2<16>:word16] = Mem587[ds_543:0x29E1<16>:word16]
	Mem605[ss:sp_530:word16] = Mem602[ds_543:0x29DF<16>:word16]
	Mem608[ss:sp_530 - 2<i16>:word16] = wLoc0E_745
	Mem611[ss:sp_530 - 4<i16>:word16] = wLoc10_747
	ds_616 = fn0800_409C(ds_543, Mem611[ss:sp_530 - 4<i16>:word16], Mem611[ss:sp_530 - 2<i16>:word16], Mem611[ss:sp_530:word32])
	Mem629[ds_616:0x4E8C<16>:ui32] = Mem625[ds_616:0x4E8C<16>:ui32] + 4<32>
	Mem635[ss:sp_530 + 2<16>:word16] = 0<16>
	Mem638[ss:sp_530:word16] = SLICE(dx_ax_832, word16, 16)
	Mem641[ss:sp_530 - 2<i16>:word16] = SLICE(dx_ax_832, word16, 0)
	Mem644[ss:sp_530 - 4<i16>:word16] = Mem641[ds_616:0x29E1<16>:word16]
	Mem647[ss:sp_530 - 6<i16>:word16] = Mem644[ds_616:0x29DF<16>:word16]
	fn0800_ACB3(ds_616, Mem647[ss:sp_530 - 6<i16>:segptr32], Mem647[ss:sp_530 - 2<i16>:ui32], Mem647[ss:sp_530 + 2<i16>:word16], out cx_834)
	Mem674[ss:bp_661 - 2<i16>:word16] = fn0800_5374(ds_616, out bp_661, out ds_665)
	sp_669 = <invalid>
	Mem677[ss:sp_669 - 2<i16>:word16] = 0<16>
	ax_dx_715 = Mem677[ss:bp_661 - 26<i16>:ui32] + Mem677[ss:bp_661 - 18<i16>:ui32]
	Mem686[ss:sp_669 - 4<i16>:word16] = SLICE(ax_dx_715, word16, 16)
	Mem688[ss:sp_669 - 6<i16>:word16] = SLICE(ax_dx_715, word16, 0)
	Mem691[ss:sp_669 - 8<i16>:word16] = Mem688[ds_665:0x29E5<16>:word16]
	Mem694[ss:sp_669 - 10<i16>:word16] = Mem691[ds_665:0x29E3<16>:word16]
	fn0800_ACB3(ds_665, Mem694[ss:sp_669 - 10<i16>:segptr32], Mem694[ss:sp_669 - 6<i16>:ui32], Mem694[ss:sp_669 - 2<i16>:word16], out cx_835)
	return
fn0800_4F2C_exit:


word16 fn0800_518F(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D
// Trashed: SCZOP ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_518F_entry:
l0800_518F:
	branch fn0800_5DCE(ds, Mem0[ds:0x29E3<16>:word32], out ds_17) != 0<16> l0800_51A5
l0800_51A5:
	ax_31 = fn0800_5374(ds_17, out bp_69, out ds_36)
	dsOut = ds_36
	return ax_31
l0800_51A1:
	dsOut = ds_17
	return 7<16>
fn0800_518F_exit:


word16 fn0800_51A9(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_112D
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_112D ds:[0..15]-fn0800_112D sp:[0..15]-fn0800_112D
// Trashed: SCZOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_51A9_entry:
l0800_51A9:
	bp_291 = fp - 2<i16>
	sp_11 = fp - 8<16>
l0800_533D:
	sp_18 = sp_11 - 2<i16>
	Mem20[ss:sp_18:word16] = Mem15[ds:0x29E5<16>:word16]
	Mem23[ss:sp_18 - 2<i16>:word16] = Mem20[ds:0x29E3<16>:word16]
	dx_ax_594 = fn0800_AD2F(ds, Mem23[ss:sp_18 - 2<i16>:segptr32])
	Mem36[ss:sp_18:word16] = SLICE(dx_ax_594, word16, 0)
	Mem38[ss:sp_18 - 2<i16>:word16] = SLICE(dx_ax_594, word16, 16)
	Mem41[ss:sp_18 - 4<i16>:word16] = Mem38[ds:0x29E5<16>:word16]
	Mem44[ss:sp_18 - 6<i16>:word16] = Mem41[ds:0x29E3<16>:word16]
	dx_ax_595 = fn0800_4194(ds, Mem44[ss:sp_18 - 6<i16>:word32])
	ax_45 = SLICE(dx_ax_595, word16, 0) (alias)
	dx_48 = SLICE(dx_ax_595, word16, 16) (alias)
	bx_56 = Mem44[ss:sp_18 - 2<16>:word16]
	dx_59 = Mem44[ss:sp_18:word16]
	branch bx_56 >=u dx_48 l0800_5364
l0800_5364:
	branch bx_56 != dx_48 l0800_536D
l0800_5366:
	branch dx_59 >=u ax_45 l0800_536D
l0800_536D:
	dsOut = ds
	return 0<16>
l0800_536A:
l0800_5361:
l0800_51B3:
	Mem84[ss:sp_18:word16] = Mem44[ds:0x29E5<16>:word16]
	Mem87[ss:sp_18 - 2<i16>:word16] = Mem84[ds:0x29E3<16>:word16]
	ax_88 = fn0800_3E9A(ds, Mem87[ss:sp_18 - 2<i16>:segptr32], out ds)
	branch ax_88 == 0<16> l0800_51D5
l0800_51D5:
	Mem108[ss:sp_18:word16] = Mem87[ds:0x29E1<16>:word16]
	Mem111[ss:sp_18 - 2<i16>:word16] = Mem108[ds:0x29DF<16>:word16]
	Mem114[ss:sp_18 - 4<i16>:word16] = Mem111[ds:0x29E5<16>:word16]
	Mem117[ss:sp_18 - 6<i16>:word16] = Mem114[ds:0x29E3<16>:word16]
	Mem132[ss:sp_18 - 4<16>:word16] = fn0800_3DCF(ds, Mem117[ss:sp_18 - 6<i16>:segptr32], out ch_596, out di_597, out ds_124)
	fn0800_4047(ds_124, Mem132[ss:sp_18 - 4<16>:byte], Mem132[ss:sp_18 - 2<16>:segptr32], out cx_598, out dx_599, out bx_600, out di_601, out ds)
	sp_11 = sp_18 + 2<16>
l0800_51C5:
	branch ax_88 == 1<16> l0800_51F5
l0800_51F5:
	Mem150[ss:sp_18:word16] = Mem87[ds:0x29E1<16>:word16]
	Mem153[ss:sp_18 - 2<i16>:word16] = Mem150[ds:0x29DF<16>:word16]
	Mem156[ss:sp_18 - 4<i16>:word16] = Mem153[ds:0x29E5<16>:word16]
	Mem159[ss:sp_18 - 6<i16>:word16] = Mem156[ds:0x29E3<16>:word16]
	dx_ax_602 = fn0800_3E5D(ds, Mem159[ss:sp_18 - 6<i16>:word32], out ds_164)
	Mem174[ss:sp_18 - 4<16>:word16] = SLICE(dx_ax_602, word16, 16)
	Mem176[ss:sp_18 - 6<16>:word16] = SLICE(dx_ax_602, word16, 0)
	ds_181 = fn0800_409C(ds_164, Mem176[ss:sp_18 - 6<16>:word16], Mem176[ss:sp_18 - 4<16>:word16], Mem176[ss:sp_18 - 2<16>:word32])
	Mem192[ss:sp_18:word16] = Mem176[ds_181:0x29E5<16>:word16]
	Mem195[ss:sp_18 - 2<i16>:word16] = Mem192[ds_181:0x29E3<16>:word16]
	ax_196 = fn0800_3FAD(ds_181, Mem195[ss:sp_18 - 2<i16>:word32], out di_603, out ds_200)
	Mem210[ss:bp_291 - 2<i16>:word16] = 0<16>
	Mem211[ss:bp_291 - 4<i16>:word16] = ax_196
	Mem214[ss:sp_18:word16] = Mem211[ds_200:0x29E1<16>:word16]
	Mem217[ss:sp_18 - 2<i16>:word16] = Mem214[ds_200:0x29DF<16>:word16]
	Mem219[ss:sp_18 - 4<i16>:word16] = ax_196
	fn0800_40BF(ds_200, Mem219[ss:sp_18 + 4<i16>:byte], Mem219[ss:sp_18 - 2<i16>:word32], out ds_224)
	Mem235[ss:sp_18:word16] = Mem219[ds_224:0x29E5<16>:word16]
	Mem238[ss:sp_18 - 2<i16>:word16] = Mem235[ds_224:0x29E3<16>:word16]
	dx_ax_604 = fn0800_3F58(ds_224, Mem238[ss:sp_18 - 2<i16>:word32], out di_605, out ds_243)
	dx_ax_606 = fn0800_8CAA(SLICE(dx_ax_604, word16, 0), 8<8>, SLICE(dx_ax_604, word16, 16))
	sp_258 = <invalid>
	ax_254 = SLICE(dx_ax_606, word16, 0) (alias)
	branch SLICE(dx_ax_606, word16, 16) != 0x52<16> l0800_52BA
l0800_5250:
	branch ax_254 != 0x4E43<16> l0800_52BA
l0800_52BA:
	Mem273[ss:sp_258 - 2<i16>:word16] = Mem238[ss:bp_291 - 2<i16>:word16]
	Mem276[ss:sp_258 - 4<i16>:word16] = Mem273[ss:bp_291 - 4<i16>:word16]
	Mem280[ss:sp_258 - 6<i16>:word16] = Mem276[ds_243:0x29E1<16>:word16]
	Mem283[ss:sp_258 - 8<i16>:word16] = Mem280[ds_243:0x29DF<16>:word16]
	Mem286[ss:sp_258 - 10<i16>:word16] = Mem283[ds_243:0x29E5<16>:word16]
	Mem289[ss:sp_258 - 12<i16>:word16] = Mem286[ds_243:0x29E3<16>:word16]
	sp_299 = <invalid>
	bp_291 = fn0800_3B0A(ds_243, Mem289[ss:sp_258 - 4<i16>:word16], Mem289[ss:sp_258 - 2<i16>:word16], out si_615, out ds)
	sp_11 = sp_299 + 0xC<16>
l0800_5255:
	ax_306 = fn0800_5374(ds_243, out bp_291, out ds_311)
	sp_315 = <invalid>
	branch ax_306 == 0<16> l0800_5263
l0800_5263:
	Mem328[ss:sp_315 - 2<i16>:word16] = 1<16>
	dx_330 = Mem328[ds_311:0x2A07<16>:word16]
	Mem341[ss:sp_315 - 4<i16>:word16] = -SLICE(SEQ(Mem328[ds_311:0x2A09<16>:word16], dx_330) + 2<32>, word16, 16) - (dx_330 != 0xFFFE<16>)
	Mem343[ss:sp_315 - 6<i16>:word16] = -(dx_330 + 2<16>)
	Mem346[ss:sp_315 - 8<i16>:word16] = Mem343[ds_311:0x29E1<16>:word16]
	Mem349[ss:sp_315 - 10<i16>:word16] = Mem346[ds_311:0x29DF<16>:word16]
	fn0800_ACB3(ds_311, Mem349[ss:sp_315 - 10<i16>:segptr32], Mem349[ss:sp_315 - 6<i16>:ui32], Mem349[ss:sp_315 - 2<i16>:word16], out cx_616)
	Mem364[ss:sp_315 - 2<i16>:word16] = Mem349[ds_311:0x29E1<16>:word16]
	Mem367[ss:sp_315 - 4<i16>:word16] = Mem364[ds_311:0x29DF<16>:word16]
	Mem370[ss:sp_315 - 6<i16>:word16] = Mem367[ds_311:0x2A07<16>:word16]
	fn0800_40BF(ds_311, Mem370[ss:sp_315 + 6<i16>:byte], Mem370[ss:sp_315 - 4<i16>:word32], out ds)
	Mem386[ss:sp_315 - 2<i16>:word16] = 1<16>
	Mem389[ss:sp_315 - 4<i16>:word16] = Mem386[ds:0x2A09<16>:word16]
	Mem392[ss:sp_315 - 6<i16>:word16] = Mem389[ds:0x2A07<16>:word16]
	Mem395[ss:sp_315 - 8<i16>:word16] = Mem392[ds:0x29E1<16>:word16]
	Mem398[ss:sp_315 - 10<i16>:word16] = Mem395[ds:0x29DF<16>:word16]
	fn0800_ACB3(ds, Mem398[ss:sp_315 - 10<i16>:segptr32], Mem398[ss:sp_315 - 6<i16>:ui32], Mem398[ss:sp_315 - 2<i16>:word16], out cx_617)
	sp_11 = sp_315
l0800_525E:
	dsOut = ds_311
	return ax_306
fn0800_51A9_exit:
l0800_51CA:
	branch ax_88 != 3<16> l0800_51D2
l0800_51D2:
l0800_5301:
	Mem419[ss:sp_18:word16] = Mem87[ds:0x29E5<16>:word16]
	Mem422[ss:sp_18 - 2<i16>:word16] = Mem419[ds:0x29E3<16>:word16]
	dx_ax_607 = fn0800_4194(ds, Mem422[ss:sp_18 - 2<i16>:word32])
	Mem436[ss:sp_18:word16] = SLICE(dx_ax_607, word16, 0)
	Mem438[ss:sp_18 - 2<i16>:word16] = SLICE(dx_ax_607, word16, 16)
	Mem441[ss:sp_18 - 4<i16>:word16] = Mem438[ds:0x29E5<16>:word16]
	Mem444[ss:sp_18 - 6<i16>:word16] = Mem441[ds:0x29E3<16>:word16]
	bx_cx_553 = SEQ(Mem444[ss:sp_18 - 2<16>:word16], Mem444[ss:sp_18:word16]) - fn0800_AD2F(ds, Mem444[ss:sp_18 - 6<i16>:segptr32])
	Mem465[ss:sp_18:word16] = SLICE(bx_cx_553, word16, 16)
	Mem467[ss:sp_18 - 2<i16>:word16] = SLICE(bx_cx_553, word16, 0)
	Mem470[ss:sp_18 - 4<i16>:word16] = Mem467[ds:0x29E1<16>:word16]
	Mem473[ss:sp_18 - 6<i16>:word16] = Mem470[ds:0x29DF<16>:word16]
	Mem476[ss:sp_18 - 8<i16>:word16] = Mem473[ds:0x29E5<16>:word16]
	Mem479[ss:sp_18 - 10<i16>:word16] = Mem476[ds:0x29E3<16>:word16]
	sp_489 = <invalid>
	bp_291 = fn0800_3B0A(ds, Mem479[ss:sp_18 - 2<i16>:word16], Mem479[ss:sp_18:word16], out si_608, out ds)
	sp_11 = sp_489 + 0xC<16>
l0800_51CF:
l0800_52D8:
	si_496 = 0<16>
l0800_52FA:
	branch si_496 != 3<16> l0800_52DC
l0800_52DC:
	sp_507 = sp_11 - 2<i16>
	Mem509[ss:sp_507:word16] = Mem504[ds:0x29E1<16>:word16]
	Mem512[ss:sp_507 - 2<i16>:word16] = Mem509[ds:0x29DF<16>:word16]
	Mem515[ss:sp_507 - 4<i16>:word16] = Mem512[ds:0x29E5<16>:word16]
	Mem518[ss:sp_507 - 6<i16>:word16] = Mem515[ds:0x29E3<16>:word16]
	Mem533[ss:sp_507 - 4<16>:word16] = fn0800_3DCF(ds, Mem518[ss:sp_507 - 6<i16>:segptr32], out ch_609, out di_610, out ds_525)
	fn0800_4047(ds_525, Mem533[ss:sp_507 - 4<16>:byte], Mem533[ss:sp_507 - 2<16>:segptr32], out cx_611, out dx_612, out bx_613, out di_614, out ds)
	si_496 = si_496 + 1<16>
l0800_52FF:


word16 fn0800_5374(selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_112D
//      fn0800_19EE
//      fn0800_46FE
//      fn0800_4B97
//      fn0800_4BB1
//      fn0800_4F2C
//      fn0800_518F
//      fn0800_51A9
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_51A9 bp:[0..15]-fn0800_51A9 ds:[0..15]-fn0800_51A9 sp:[0..15]-fn0800_51A9
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: P
fn0800_5374_entry:
l0800_5374:
	fn0800_AD2F(ds, Mem13[ds:0x29E3<16>:word32])
	Mem56[ds_44:0x2A21<16>:word16] = SLICE(fn0800_3E5D(ds, Mem33[ds:0x29E3<16>:word32], out ds_44), word16, 0) & 3<16>
	dx_ax_660 = fn0800_3E5D(ds_44, Mem56[ds_44:0x29E3<16>:word32], out ds_67)
	Mem75[ds_67:0x2A09<16>:word16] = SLICE(dx_ax_660, word16, 16)
	ax_63 = SLICE(dx_ax_660, word16, 0) (alias)
	Mem76[ds_67:0x2A07<16>:word16] = ax_63
	branch Mem76[ds_67:0x2A21<16>:word16] != 0<16> l0800_53EF
l0800_53EF:
	dx_ax_661 = fn0800_3E5D(ds_67, Mem76[ds_67:0x29E3<16>:word32], out ds_89)
	Mem98[ds_89:0x2A05<16>:word16] = SLICE(dx_ax_661, word16, 16)
	Mem99[ds_89:0x2A03<16>:word16] = SLICE(dx_ax_661, word16, 0)
	Mem119[ds_110:0x2E4B<16>:word16] = fn0800_3E27(ds_89, Mem99[ds_89:0x29E3<16>:word32], out cx_662, out di_663, out ds_110)
	Mem139[ds_130:0x2E49<16>:word16] = fn0800_3E27(ds_110, Mem119[ds_110:0x29E3<16>:word32], out cx_664, out di_665, out ds_130)
	fn0800_3E27(ds_130, Mem139[ds_130:0x29E3<16>:word32], out cx_666, out di_667, out ds_150)
	sp_180 = <invalid>
	branch fn0800_2D0A(ds_150, out bp_172, out ds_176) == Mem170[ds_176:0x2E49<16>:word16] l0800_5458
l0800_5458:
	Mem192[ss:sp_180 + 6<16>:word16] = 1<16>
	Mem194[ss:sp_180 + 4<16>:word16] = 0xF<16>
	ax_195 = fn0800_4311(ds_176, Mem194[ss:sp_180 + 4<16>:word32], out dx_201, out bp_196, out si_669, out ds_200)
	Mem211[ss:bp_196 - 6<i16>:word16] = dx_201
	Mem212[ss:bp_196 - 8<i16>:word16] = ax_195
	Mem215[ds_200:0x2E73<16>:word16] = dx_201 + 1<16>
	Mem216[ds_200:0x2E71<16>:word16] = 0<16>
	sp_204 = <invalid>
	Mem220[ss:sp_204 + 2<16>:word16] = 1<16>
	Mem222[ss:sp_204:word16] = 0xF<16>
	ax_223 = fn0800_4311(ds_200, Mem222[ss:sp_204:word32], out dx_229, out bp_224, out si_670, out ds_228)
	Mem238[ss:bp_224 - 2<i16>:word16] = dx_229
	Mem239[ss:bp_224 - 4<i16>:word16] = ax_223
	Mem241[ds_228:0x2E5B<16>:word16] = dx_229 + 1<16>
	Mem242[ds_228:0x2E59<16>:word16] = 0<16>
	dx_244 = Mem242[ds_228:0x2E71<16>:word16]
	Mem246[ds_228:0x2E6F<16>:word16] = Mem242[ds_228:0x2E73<16>:word16]
	Mem247[ds_228:0x2E6D<16>:word16] = dx_244 + 0xFFFD<16>
	dx_250 = Mem247[ds_228:0x2E59<16>:word16] + Mem247[ds_228:0x2E31<16>:word16]
	Mem251[ds_228:0x2E57<16>:word16] = Mem247[ds_228:0x2E5B<16>:word16]
	Mem252[ds_228:0x2E55<16>:word16] = dx_250
	Mem253[ds_228:0x2E4D<16>:word16] = 0<16>
	Mem258[ds_228:0x2E45<16>:word16] = 0<16>
	Mem259[ds_228:0x29FD<16>:word16] = 0<16>
	Mem260[ds_228:0x29FB<16>:word16] = 0<16>
	Mem261[ds_228:0x2A01<16>:word16] = 0<16>
	Mem262[ds_228:0x29FF<16>:word16] = 0<16>
	Mem264[ss:bp_224 - 14<i16>:word16] = Mem262[ds_228:0x2E4F<16>:word16]
	sp_232 = <invalid>
	Mem267[ss:sp_232 + 2<16>:word16] = 1<16>
	branch fn0800_5C1A(ds_228, Mem267[ss:sp_232 + 2<16>:word16], out si_275, out ds_272) == 0<16> l0800_5504
l0800_54F3:
	branch Mem267[ds_272:0x2A25<16>:word16] == 2<16> l0800_5504
l0800_54FA:
	branch Mem267[ds_272:0x2A25<16>:word16] == 7<16> l0800_5504
l0800_5501:
	si_275 = 0xA<16>
l0800_5504:
	si_292 = si_275
	branch si_275 != 0<16> l0800_555D
l0800_5508:
	Mem301[ss:sp_232 + 2<16>:word16] = 1<16>
	branch fn0800_5C1A(ds_272, Mem301[ss:sp_232 + 2<16>:word16], out si_292, out ds_272) == 0<16> l0800_5557
l0800_5557:
	Mem321[ds_272:0x2E4F<16>:word16] = 0<16>
l0800_5516:
	branch Mem301[ds_272:0x2A23<16>:word16] == 1<16> l0800_554B
l0800_551D:
	Mem326[ss:sp_232 + 2<16>:word16] = 0x10<16>
	ax_327 = fn0800_5C1A(ds_272, Mem326[ss:sp_232 + 2<16>:word16], out si_292, out ds_272)
	branch Mem326[ds_272:0x2A25<16>:word16] != 2<16> l0800_553B
l0800_5530:
	branch Mem326[ds_272:0x2E4F<16>:word16] != 0<16> l0800_553B
l0800_5537:
	Mem345[ds_272:0x2E4F<16>:word16] = ax_327
l0800_553B:
	branch Mem347[ds_272:0x2E4F<16>:word16] == ax_327 l0800_554B
l0800_5541:
	branch Mem347[ds_272:0x2E4F<16>:word16] == 0<16> l0800_554B
l0800_5548:
	si_292 = 0xC<16>
l0800_554B:
	branch Mem355[ds_272:0x2E4F<16>:word16] != 0<16> l0800_555D
l0800_5552:
	si_292 = 0xB<16>
l0800_555D:
	si_362 = si_292
	branch si_292 != 0<16> l0800_557C
l0800_5561:
	ax_370 = Mem368[ds_272:0x2A21<16>:word16]
	branch ax_370 == 1<16> l0800_5570
l0800_5570:
	si_362 = fn0800_55E8(ds_272, out ds_272)
l0800_5569:
	branch ax_370 == 2<16> l0800_5577
l0800_5577:
	si_362 = fn0800_579B(ds_272, out ds_272)
l0800_556E:
l0800_557C:
	Mem413[ds_272:0x2E4F<16>:word16] = Mem368[ss:bp_224 - 14<i16>:word16]
	Mem420[ss:sp_232 + 2<16>:word16] = Mem413[ss:bp_224 - 6<i16>:word16]
	Mem423[ss:sp_232:word16] = Mem420[ss:bp_224 - 8<i16>:word16]
	fn0800_4346(ds_272, Mem423[ss:sp_232 + 2<16>:word16], out cx_671, out dx_672, out bx_673, out ds_427)
	Mem438[ss:sp_232 + 2<16>:word16] = Mem423[ss:bp_224 - 2<i16>:word16]
	Mem441[ss:sp_232:word16] = Mem438[ss:bp_224 - 4<i16>:word16]
	fn0800_4346(ds_427, Mem441[ss:sp_232 + 2<16>:word16], out cx_674, out dx_675, out bx_676, out ds_445)
	Mem458[ds_445:0x2A03<16>:ui32] = Mem454[ds_445:0x2A03<16>:ui32] + 0x12<32>
	Mem461[ss:sp_232 + 2<16>:word16] = 0<16>
	ax_dx_568 = Mem461[ss:bp_224 - 12<i16>:ui32] + Mem461[ds_445:0x2A03<16>:ui32]
	Mem470[ss:sp_232:word16] = SLICE(ax_dx_568, word16, 16)
	Mem472[ss:sp_232 - 2<16>:word16] = SLICE(ax_dx_568, word16, 0)
	Mem475[ss:sp_232 - 4<16>:word16] = Mem472[ds_445:0x29E5<16>:word16]
	Mem478[ss:sp_232 - 6<16>:word16] = Mem475[ds_445:0x29E3<16>:word16]
	fn0800_ACB3(ds_445, Mem478[ss:sp_232 - 6<16>:segptr32], Mem478[ss:sp_232 - 2<16>:ui32], Mem478[ss:sp_232 + 2<16>:word16], out cx_677)
	branch si_362 == 0<16> l0800_55D0
l0800_55D0:
	branch Mem478[ds_445:0x2E4D<16>:word16] == Mem478[ds_445:0x2E4B<16>:word16] l0800_55E1
l0800_55E1:
	bpOut = Mem478[ss:bp_224:word16]
	dsOut = ds_445
	return 0<16>
l0800_55D9:
	bpOut = Mem478[ss:bp_224:word16]
	dsOut = ds_445
	return 6<16>
l0800_55C9:
	bpOut = Mem478[ss:bp_224:word16]
	dsOut = ds_445
	return si_362
l0800_5450:
	bpOut = Mem170[ss:bp_172:word16]
	dsOut = ds_176
	return 5<16>
l0800_53BF:
	bp_540 = fn0800_3B0A(ds_67, ax_63, Mem76[ds_67:0x2A09<16>:word16], out si_668, out ds_544)
	dx_555 = Mem538[ds_544:0x2A07<16>:word16]
	Mem556[ds_544:0x2A05<16>:word16] = Mem538[ds_544:0x2A09<16>:word16]
	Mem557[ds_544:0x2A03<16>:word16] = dx_555
	bpOut = Mem557[ss:bp_540:word16]
	dsOut = ds_544
	return 0<16>
fn0800_5374_exit:


word16 fn0800_55E8(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_5374
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_5374 ds:[0..15]-fn0800_5374
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: P bp sp
fn0800_55E8_entry:
l0800_55E8:
	sp_154 = fp - 6<16>
l0800_574B:
	ax_13 = Mem12[ds:0x2A01<16>:word16]
	dx_14 = Mem12[ds:0x29FF<16>:word16]
	branch ax_13 >=u Mem12[ds:0x2A09<16>:word16] l0800_575B
l0800_575B:
	branch ax_13 != Mem12[ds:0x2A09<16>:word16] l0800_5766
l0800_575D:
	branch dx_14 >=u Mem12[ds:0x2A07<16>:word16] l0800_5766
l0800_5766:
	sp_25 = sp_154 - 2<i16>
	Mem28[ss:sp_25:word16] = Mem12[ds:0x29E1<16>:word16]
	Mem31[ss:sp_25 - 2<i16>:word16] = Mem28[ds:0x29DF<16>:word16]
	dx_ax_443 = CONVERT(Mem31[ds:0x2E55<16>:word16] - Mem31[ds:0x2E59<16>:word16] - Mem31[ds:0x2E31<16>:word16], word16, uint32)
	Mem43[ss:sp_25 - 4<i16>:word16] = SLICE(dx_ax_443, word16, 16)
	Mem45[ss:sp_25 - 6<i16>:word16] = SLICE(dx_ax_443, word16, 0)
	ax_47 = Mem45[ds:0x2E59<16>:word16] + Mem45[ds:0x2E31<16>:word16]
	Mem51[ss:sp_25 - 8<i16>:word16] = Mem45[ds:0x2E5B<16>:word16]
	Mem53[ss:sp_25 - 10<i16>:word16] = ax_47
	fn0800_4152(ds, Mem53[ss:sp_25 - 10<i16>:word32], Mem53[ss:sp_25 - 6<i16>:word16], Mem53[ss:sp_25 - 4<i16>:word16], Mem53[ss:sp_25 - 2<i16>:word32], out si_558, out ds_58)
	dsOut = ds_58
	return 0<16>
fn0800_55E8_exit:
l0800_5763:
l0800_5758:
l0800_55F1:
	sp_78 = sp_154 - 2<i16>
	Mem80[ss:sp_78:word16] = 0x10<16>
	Mem83[ss:sp_78 - 2<i16>:word16] = ds
	Mem86[ss:sp_78 - 4<i16>:word16] = 0x290F<16>
	ds_90 = fn0800_5A24(ds, Mem86[ss:sp_78 - 4<i16>:word16], Mem86[ss:sp_78 - 2<i16>:word16], Mem86[ss:sp_78:word16])
	Mem101[ss:sp_78:word16] = 0x10<16>
	Mem103[ss:sp_78 - 2<i16>:word16] = ds_90
	Mem106[ss:sp_78 - 4<i16>:word16] = 0x284F<16>
	ds_110 = fn0800_5A24(ds_90, Mem106[ss:sp_78 - 4<i16>:word16], Mem106[ss:sp_78 - 2<i16>:word16], Mem106[ss:sp_78:word16])
	Mem121[ss:sp_78:word16] = 0x10<16>
	Mem123[ss:sp_78 - 2<i16>:word16] = ds_110
	Mem126[ss:sp_78 - 4<i16>:word16] = 0x278F<16>
	ds_130 = fn0800_5A24(ds_110, Mem126[ss:sp_78 - 4<i16>:word16], Mem126[ss:sp_78 - 2<i16>:word16], Mem126[ss:sp_78:word16])
	Mem141[ss:sp_78:word16] = 0x10<16>
	sp_154 = sp_78 + 2<16>
	dwLoc06_552 = CONVERT(fn0800_5C39(ds_130, Mem141[ss:sp_78:word16], out si_556, out di_557, out ds), uint16, uint32) (alias)
l0800_5736:
	wLoc06_460 = SLICE(dwLoc06_552, word16, 0) (alias)
	v13_168 = SLICE(dwLoc06_552 - 1<32>, word16, 16) (alias)
	branch dwLoc06_552 == 0<16> l0800_574B
l0800_5748:
l0800_5633:
	sp_176 = sp_154 - 2<i16>
	Mem178[ss:sp_176:word16] = ds
	Mem181[ss:sp_176 - 2<i16>:word16] = 0x290F<16>
	ax_182 = fn0800_5A8D(ds, Mem181[ss:sp_176 - 2<i16>:word16], Mem181[ss:sp_176:selector], out ds)
	Mem193[ds:0x2E47<16>:word16] = ax_182
	Mem199[ds:0x29FF<16>:ui32] = Mem195[ds:0x29FF<16>:ui32] + CONVERT(ax_182, uint16, uint32)
	sp_154 = sp_176 + 2<16>
	branch Mem199[ds:0x2E47<16>:word16] != 0<16> l0800_5654
l0800_5654:
l0800_5664:
	ax_204 = Mem203[ds:0x2E47<16>:word16]
	Mem206[ds:0x2E47<16>:word16] = Mem203[ds:0x2E47<16>:word16] - 1<16>
	branch ax_204 != 0<16> l0800_5656
l0800_5656:
	ax_213 = fn0800_5B15(ds, out si_559, out di_560, out ds_217)
	sp_231 = sp_154 - 2<i16>
	Mem234[ss:sp_231:word16] = SEQ(SLICE(ax_213, byte, 8), SLICE(ax_213, byte, 0) ^ Mem206[ds_217:0x2E4F<16>:byte])
	ds = fn0800_5D2F(ds_217, Mem234[ss:sp_231:byte])
l0800_566F:
	branch (Mem206[ds:0x2E4F<16>:word16] & 1<16>) == 0<16> l0800_5684
l0800_5684:
	Mem254[ds:0x2E4F<16>:word16] = Mem206[ds:0x2E4F<16>:word16] >>u 1<16>
l0800_5677:
	Mem262[ds:0x2E4F<16>:word16] = Mem206[ds:0x2E4F<16>:word16] >>u 1<16> | 0x8000<16>
l0800_5688:
	es_bx_265 = Mem264[ds:0x2E6D<16>:segptr32]
	sp_271 = sp_154 - 2<i16>
	Mem274[ss:sp_271:word16] = CONVERT(Mem264[es_bx_265 + 2<i16>:byte], uint8, uint16)
	bx_291 = CONVERT(Mem274[es_bx_265:byte], uint8, uint16) (alias)
	Mem294[ss:sp_271 - 2<i16>:int32] = SEQ(Mem274[ss:sp_271:word16], 0<16>) + CONVERT(CONVERT(Mem274[es_bx_265 + 1<i16>:byte], uint8, uint16) << 8<8>, uint16, uint32)
	dx_ax_451 = SEQ(Mem294[ss:sp_271 - 2<i16>:word16], Mem294[ss:sp_271:word16]) + CONVERT(bx_291, int16, int32)
	dx_ax_561 = fn0800_8C69(SLICE(dx_ax_451, word16, 0), Mem294[ds:0x2E45<16>:byte], SLICE(dx_ax_451, word16, 16))
	sp_314 = <invalid>
	Mem320[ss:sp_314 - 2<i16>:word16] = SLICE(dx_ax_561, word16, 0)
	ax_323 = 1<16> << Mem320[ds:0x2E45<16>:byte]
	Mem326[ss:sp_314 - 4<i16>:word16] = SLICE(dx_ax_561, word16, 16)
	dx_ax_327 = CONVERT(ax_323 - 1<16>, int16, int32)
	ax_dx_454 = SEQ(Mem326[ss:sp_314 - 4<i16>:word16], Mem326[ss:sp_314 - 2<i16>:word16]) + (Mem326[ds:0x29FB<16>:ui32] & dx_ax_327)
	Mem343[ds:0x29FD<16>:word16] = SLICE(ax_dx_454, word16, 16)
	Mem344[ds:0x29FB<16>:word16] = SLICE(ax_dx_454, word16, 0)
	sp_154 = sp_314
l0800_5651:
l0800_56E6:
	branch (wLoc06_460 - 1<16> | v13_168) == 0<16> l0800_574B
l0800_56EE:
	sp_357 = sp_154 - 2<i16>
	Mem359[ss:sp_357:word16] = ds
	Mem362[ss:sp_357 - 2<i16>:word16] = 0x284F<16>
	Mem377[ds_366:0x2E2B<16>:word16] = fn0800_5A8D(ds, Mem362[ss:sp_357 - 2<i16>:word16], Mem362[ss:sp_357:selector], out ds_366) + 1<16>
	Mem379[ss:sp_357:word16] = ds_366
	Mem382[ss:sp_357 - 2<i16>:word16] = 0x278F<16>
	ax_383 = fn0800_5A8D(ds_366, Mem382[ss:sp_357 - 2<i16>:word16], Mem382[ss:sp_357:selector], out ds)
	Mem395[ds:0x2E29<16>:word16] = ax_383 + 2<16>
	Mem401[ds:0x29FF<16>:ui32] = Mem397[ds:0x29FF<16>:ui32] + CONVERT(ax_383 + 2<16>, uint16, uint32)
l0800_572B:
	ax_405 = Mem404[ds:0x2E29<16>:word16]
	Mem407[ds:0x2E29<16>:word16] = Mem404[ds:0x2E29<16>:word16] - 1<16>
	ah_421 = SLICE(ax_405, byte, 8) (alias)
	dwLoc06_552 = SEQ(v13_168, wLoc06_460 - 1<16>) (alias)
	branch ax_405 != 0<16> l0800_5719
l0800_5719:
	es_bx_413 = Mem407[ds:0x2E55<16>:segptr32]
	sp_420 = sp_154 - 2<i16>
	Mem424[ss:sp_420:word16] = SEQ(ah_421, Mem407[SLICE(es_bx_413, selector, 16):SLICE(es_bx_413, word16, 0) - Mem407[ds:0x2E2B<16>:word16]:byte])
	ds = fn0800_5D2F(ds, Mem424[ss:sp_420:byte])


word16 fn0800_579B(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_5374
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_5374 ds:[0..15]-fn0800_5374
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: P sp
fn0800_579B_entry:
l0800_579B:
l0800_58F2:
	ax_6 = Mem5[ds:0x2A01<16>:word16]
	dx_7 = Mem5[ds:0x29FF<16>:word16]
	branch ax_6 >=u Mem5[ds:0x2A09<16>:word16] l0800_5902
l0800_5902:
	branch ax_6 != Mem5[ds:0x2A09<16>:word16] l0800_590D
l0800_5904:
	branch dx_7 >=u Mem5[ds:0x2A07<16>:word16] l0800_590D
l0800_590D:
	dx_ax_444 = CONVERT(Mem24[ds:0x2E55<16>:word16] - Mem24[ds:0x2E59<16>:word16] - Mem24[ds:0x2E31<16>:word16], word16, uint32)
	fn0800_4152(ds, SEQ(Mem38[ds:0x2E5B<16>:word16], Mem38[ds:0x2E59<16>:word16] + Mem38[ds:0x2E31<16>:word16]), SLICE(dx_ax_444, word16, 0), SLICE(dx_ax_444, word16, 16), Mem5[ds:0x29DF<16>:word32], out si_573, out ds_51)
	dsOut = ds_51
	return 0<16>
fn0800_579B_exit:
l0800_590A:
l0800_58FF:
l0800_57CF:
	branch fn0800_5CD9(ds, 1<16>) == 0<16> l0800_579E
l0800_579E:
	ds = fn0800_5D2F(ds_86, SLICE(fn0800_5B15(ds, out si_574, out di_575, out ds_86), byte, 0) ^ Mem68[ds_86:0x2E4F<16>:byte])
	branch (Mem102[ds:0x2E4F<16>:word16] & 1<16>) == 0<16> l0800_57C1
l0800_57C1:
	Mem121[ds:0x2E4F<16>:word16] = Mem102[ds:0x2E4F<16>:word16] >>u 1<16>
l0800_57B4:
	Mem129[ds:0x2E4F<16>:word16] = Mem102[ds:0x2E4F<16>:word16] >>u 1<16> | 0x8000<16>
l0800_57C5:
	Mem137[ds:0x29FF<16>:ui32] = Mem133[ds:0x29FF<16>:ui32] + 1<32>
l0800_57DD:
	branch fn0800_5CD9(ds, 1<16>) == 0<16> l0800_5866
l0800_5866:
	fn0800_593F(ds)
	branch Mem141[ds:0x2E29<16>:word16] != 9<16> l0800_58B7
l0800_58B7:
	ds = fn0800_5975(ds)
	Mem180[ds:0x29FF<16>:ui32] = Mem176[ds:0x29FF<16>:ui32] + CONVERT(Mem141[ds:0x2E29<16>:word16], uint16, uint32)
l0800_58DA:
	ax_184 = Mem183[ds:0x2E29<16>:word16]
	Mem186[ds:0x2E29<16>:word16] = Mem183[ds:0x2E29<16>:word16] - 1<16>
	branch ax_184 != 0<16> l0800_58C8
l0800_58C8:
	es_bx_192 = Mem186[ds:0x2E55<16>:segptr32]
	ds = fn0800_5D2F(ds, Mem186[SLICE(es_bx_192, selector, 16):SLICE(es_bx_192, word16, 0) - Mem186[ds:0x2E2B<16>:word16]:byte])
l0800_58E5:
l0800_5870:
	fn0800_5A0F(ds)
	Mem230[ds:0x29FF<16>:ui32] = Mem226[ds:0x29FF<16>:ui32] + CONVERT(Mem141[ds:0x2E47<16>:word16], uint16, uint32)
l0800_588F:
	ax_234 = Mem233[ds:0x2E47<16>:word16]
	Mem236[ds:0x2E47<16>:word16] = Mem233[ds:0x2E47<16>:word16] - 1<16>
	branch ax_234 != 0<16> l0800_5881
l0800_5881:
	ds = fn0800_5D2F(ds_247, SLICE(fn0800_5B15(ds, out si_580, out di_581, out ds_247), byte, 0) ^ Mem236[ds_247:0x2E4F<16>:byte])
l0800_589A:
	branch (Mem236[ds:0x2E4F<16>:word16] & 1<16>) == 0<16> l0800_58B0
l0800_58B0:
	Mem284[ds:0x2E4F<16>:word16] = Mem236[ds:0x2E4F<16>:word16] >>u 1<16>
l0800_58A2:
	Mem292[ds:0x2E4F<16>:word16] = Mem236[ds:0x2E4F<16>:word16] >>u 1<16> | 0x8000<16>
l0800_57EB:
	branch fn0800_5CD9(ds, 1<16>) != 0<16> l0800_580A
l0800_580A:
	branch fn0800_5CD9(ds, 1<16>) != 0<16> l0800_5820
l0800_5820:
	Mem339[ds_327:0x2E29<16>:word16] = CONVERT(SLICE(fn0800_5B15(ds, out si_578, out di_579, out ds_327), byte, 0), uint8, uint16) + 8<16>
	ds = ds_327
	branch Mem339[ds_327:0x2E29<16>:word16] != 8<16> l0800_5835
l0800_5832:
l0800_58E8:
	fn0800_5CD9(ds_327, 1<16>)
	ds = ds_327
l0800_5818:
	Mem353[ds:0x2E29<16>:word16] = 3<16>
l0800_5835:
	ds = fn0800_5975(ds)
l0800_57F9:
	Mem368[ds:0x2E29<16>:word16] = 2<16>
	Mem386[ds_373:0x2E2B<16>:word16] = CONVERT(SLICE(fn0800_5B15(ds, out si_576, out di_577, out ds_373), byte, 0), uint8, uint16) + 1<16>
	ds = ds_373
l0800_5838:
	Mem396[ds:0x29FF<16>:ui32] = Mem392[ds:0x29FF<16>:ui32] + CONVERT(Mem388[ds:0x2E29<16>:word16], uint16, uint32)
l0800_5858:
	ax_400 = Mem399[ds:0x2E29<16>:word16]
	Mem402[ds:0x2E29<16>:word16] = Mem399[ds:0x2E29<16>:word16] - 1<16>
	branch ax_400 != 0<16> l0800_5846
l0800_5846:
	es_bx_408 = Mem402[ds:0x2E55<16>:segptr32]
	ds = fn0800_5D2F(ds, Mem402[SLICE(es_bx_408, selector, 16):SLICE(es_bx_408, word16, 0) - Mem402[ds:0x2E2B<16>:word16]:byte])
l0800_5863:


void fn0800_593F(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_579B
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: sp
fn0800_593F_entry:
l0800_593F:
	Mem18[ds:0x2E29<16>:word16] = fn0800_5CD9(ds, 1<16>) + 4<16>
	branch fn0800_5CD9(ds, 1<16>) == 0<16> l0800_5974
l0800_595D:
	Mem49[ds:0x2E29<16>:word16] = (Mem36[ds:0x2E29<16>:word16] - 1<16> << 1<16>) + fn0800_5CD9(ds, 1<16>)
l0800_5974:
	return
fn0800_593F_exit:


selector fn0800_5975(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_579B
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds:[0..15]-fn0800_579B
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_5975_entry:
l0800_5975:
	Mem5[ds:0x2E2B<16>:word16] = 0<16>
	branch fn0800_5CD9(ds, 1<16>) == 0<16> l0800_59FA
l0800_5989:
	Mem33[ds:0x2E2B<16>:word16] = fn0800_5CD9(ds, 1<16>)
	branch fn0800_5CD9(ds, 1<16>) == 0<16> l0800_59E3
l0800_59E3:
	branch Mem36[ds:0x2E2B<16>:word16] != 0<16> l0800_59FA
l0800_59EA:
	Mem63[ds:0x2E2B<16>:word16] = fn0800_5CD9(ds, 1<16>) + 2<16>
l0800_59A4:
	Mem81[ds:0x2E2B<16>:word16] = (Mem66[ds:0x2E2B<16>:word16] << 1<16>) + fn0800_5CD9(ds, 1<16>) | 4<16>
	branch fn0800_5CD9(ds, 1<16>) != 0<16> l0800_59FA
l0800_59CB:
	Mem111[ds:0x2E2B<16>:word16] = (Mem99[ds:0x2E2B<16>:word16] << 1<16>) + fn0800_5CD9(ds, 1<16>)
l0800_59FA:
	Mem137[ds_118:0x2E2B<16>:word16] = (Mem127[ds_118:0x2E2B<16>:word16] << 8<8>) + CONVERT(SLICE(fn0800_5B15(ds, out si_153, out di_154, out ds_118), byte, 0), uint8, uint16) + 1<16>
	return ds_118
fn0800_5975_exit:


void fn0800_5A0F(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_579B
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: sp
fn0800_5A0F_entry:
l0800_5A0F:
	Mem20[ds:0x2E47<16>:word16] = (fn0800_5CD9(ds, 4<16>) << 2<16>) + 0xC<16>
	return
fn0800_5A0F_exit:


selector fn0800_5A24(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_55E8
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ds:[0..15]-fn0800_55E8
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5A24_entry:
l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	ax_38 = fn0800_5C39(ds, 5<16>, out si_188, out di_189, out ds_173)
	wArg06_141 = ax_38
	branch ax_38 == 0<16> l0800_5A89
l0800_5A49:
	branch ax_38 <=u 0x10<16> l0800_5A54
l0800_5A4F:
	wArg06_141 = 0x10<16>
l0800_5A54:
	branch wArg06_141 <=u 0<16> l0800_5A7A
l0800_5A61:
	Mem89[wArg04:si_75:word16] = fn0800_5C39(ds_173, 4<16>, out si_75, out di_79, out ds_173)
	branch di_79 + 1<16> <u wArg06_141 l0800_5A61
l0800_5A7A:
	fn0800_4550(wArg02, wArg04, wArg06_141)
l0800_5A89:
	return ds_173
fn0800_5A24_exit:


word16 fn0800_5A8D(selector ds, word16 wArg02, selector psegArg04, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_55E8
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax:[0..15]-fn0800_55E8 ds:[0..15]-fn0800_55E8
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5A8D_entry:
l0800_5A8D:
	wLoc04_122 = 0<16>
	di_18 = wArg02
l0800_5AA5:
	bLoc04_132 = SLICE(wLoc04_122, byte, 0) (alias)
	branch Mem21[psegArg04:di_18 + 10<i16>:word16] == 0<16> l0800_5A9F
l0800_5AAF:
	dx_ax_30 = CONVERT((1<16> << Mem21[psegArg04:di_18 + 10<i16>:byte]) - 1<16>, int16, int32)
	cx_35 = Mem21[ds:0x29FB<16>:word16] & SLICE(dx_ax_30, word16, 0)
	branch (Mem21[ds:0x29FD<16>:word16] & SLICE(dx_ax_30, word16, 16)) != Mem21[psegArg04:di_18 + 8<i16>:word16] l0800_5A9F
l0800_5ACC:
	branch cx_35 != Mem21[psegArg04:di_18 + 6<i16>:word16] l0800_5A9F
l0800_5A9F:
	di_18 = di_18 + 0xC<16>
	wLoc04_122 = wLoc04_122 + 1<16>
l0800_5AD2:
	fn0800_5C39(ds, Mem21[psegArg04:wArg02 + wLoc04_122 *s 0xC<16> + 10<i16>:word16], out si_166, out di_167, out ds_69)
	branch wLoc04_122 >=u 2<16> l0800_5AF8
l0800_5AF8:
	ax_100 = fn0800_5C39(ds_69, wLoc04_122 - 1<16>, out si_168, out di_169, out ds_89) | 1<16> << bLoc04_132 - 1<8>
	dsOut = ds_89
	return ax_100
l0800_5AEF:
	dsOut = ds_69
	return wLoc04_122
fn0800_5A8D_exit:


word16 fn0800_5B15(selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_55E8
//      fn0800_579B
//      fn0800_5975
//      fn0800_5C39
//      fn0800_5CD9
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_5CD9 di:[0..15]-fn0800_5CD9 ds:[0..15]-fn0800_5CD9 si:[0..15]-fn0800_5CD9
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: P bp sp
fn0800_5B15_entry:
l0800_5B15:
	ax_11 = Mem7[ds:0x2E73<16>:word16]
	ah_292 = SLICE(ax_11, byte, 8) (alias)
	dx_12 = Mem7[ds:0x2E71<16>:word16]
	branch ax_11 == Mem7[ds:0x2E6F<16>:word16] l0800_5B2E
l0800_5B2E:
	branch dx_12 + 0xFFFD<16> == Mem7[ds:0x2E6D<16>:word16] l0800_5B37
l0800_5B37:
	bx_cx_237 = fn0800_4194(ds, Mem7[ds:0x29E3<16>:word32]) - fn0800_AD2F(ds, Mem39[ds:0x29E3<16>:word32])
	branch bx_cx_237 <=u 0xFFFD<32> l0800_5B76
l0800_5B76:
	dx_ax_328 = bx_cx_237 (alias)
l0800_5B6F:
	dx_ax_328 = 0xFFFD<32> (alias)
l0800_5B7C:
	v26_92 = Mem88[ds:0x29E5<16>:word16]
	v27_98 = Mem97[ds:0x29E3<16>:word16]
	ax_106 = Mem105[ds:0x2E73<16>:word16]
	dx_107 = Mem105[ds:0x2E71<16>:word16]
	Mem108[ds:0x2E6F<16>:word16] = ax_106
	Mem109[ds:0x2E6D<16>:word16] = dx_107
	ax_87 = SLICE(dx_ax_328, word16, 0) (alias)
	fn0800_4110(ds, SEQ(ax_106, dx_107), ax_87, SLICE(dx_ax_328, word16, 16), SEQ(v26_92, v27_98), out si_338, out di_339, out ds_118)
	v30_v29_239 = bx_cx_237 - dx_ax_328
	v29_129 = SLICE(v30_v29_239, word16, 0) (alias)
	v30_134 = SLICE(v30_v29_239, word16, 16) (alias)
	dwLoc06_331 = v30_v29_239 (alias)
	branch Test(ULT,false) l0800_5BCB
l0800_5BBA:
	branch v30_134 >u 0<16> l0800_5BC1
l0800_5BBC:
	dwLoc06_331 = v30_v29_239 (alias)
	branch v29_129 <=u 2<16> l0800_5BCB
l0800_5BC1:
	dwLoc06_331 = 2<32> (alias)
l0800_5BCB:
	fn0800_4110(ds_118, SEQ(Mem167[ds_118:0x2E73<16>:word16], Mem167[ds_118:0x2E71<16>:word16] + ax_87), SLICE(dwLoc06_331, word16, 0), SLICE(dwLoc06_331, word16, 16), Mem151[ds_118:0x29E3<16>:word32], out si, out di, out ds)
	ah_292 = SLICE(fn0800_ACB3(ds, Mem202[ds:0x29E3<16>:word32], -dwLoc06_331, 1<16>, out cx_340), byte, 8) (alias)
l0800_5B34:
l0800_5B2B:
l0800_5C0B:
	es_bx_223 = Mem222[ds:0x2E6D<16>:segptr32]
	Mem225[ds:0x2E6D<16>:word16] = Mem222[ds:0x2E6D<16>:word16] + 1<16>
	ax_295 = SEQ(ah_292, Mem225[es_bx_223:byte]) (alias)
	siOut = si
	diOut = di
	dsOut = ds
	return ax_295
fn0800_5B15_exit:


word16 fn0800_5C1A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_5374
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-fn0800_5374 ds:[0..15]-fn0800_5374 si:[0..15]-fn0800_5374
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5C1A_entry:
l0800_5C1A:
	branch Mem7[ds:0x2A21<16>:word16] != 2<16> l0800_5C30
l0800_5C30:
	ax_15 = fn0800_5C39(ds, wArg02, out si_16, out di_77, out ds_21)
	siOut = si_16
	dsOut = ds_21
	return ax_15
l0800_5C27:
	ax_33 = fn0800_5CD9(ds, wArg02)
	siOut = si
	dsOut = ds
	return ax_33
fn0800_5C1A_exit:


word16 fn0800_5C39(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_55E8
//      fn0800_5A24
//      fn0800_5A8D
//      fn0800_5C1A
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-fn0800_5C1A di:[0..15]-fn0800_5A24 ds:[0..15]-fn0800_5C1A si:[0..15]-fn0800_5C1A
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5C39_entry:
l0800_5C39:
	sp_13 = fp - 0xC<16>
	si_156 = wArg02
	di_129 = 0<16>
	wLoc08_172 = 1<16>
l0800_5CCA:
	si_155 = si_156
	branch si_156 == 0<16> l0800_5CD1
l0800_5CD1:
	di_33 = Mem32[ss:sp_13:word16]
	siOut = Mem32[ss:sp_13 + 2<i16>:word16]
	diOut = di_33
	dsOut = ds
	return di_129
fn0800_5C39_exit:
l0800_5CCE:
l0800_5C4D:
	branch Mem32[ds:0x2E45<16>:word16] != 0<16> l0800_5CA2
l0800_5C54:
	dx_ax_167 = fn0800_8C69(CONVERT(Mem74[Mem74[ds_63:0x2E6D<16>:segptr32] + 1<i16>:byte], uint8, uint16), 0x18<8>, 0<16>) + SEQ(CONVERT(Mem74[Mem74[ds_63:0x2E6D<16>:segptr32]:byte], uint8, uint16), 0<16>) + CONVERT(CONVERT(SLICE(fn0800_5B15(ds_47, out si_155, out di_129, out ds_63), byte, 0), uint8, uint16) << 8<8>, uint16, uint32) + CONVERT(SLICE(fn0800_5B15(ds, out si_206, out di_207, out ds_47), byte, 0), uint8, uint32)
	Mem117[ds_63:0x29FD<16>:word16] = SLICE(dx_ax_167, word16, 16)
	Mem118[ds_63:0x29FB<16>:word16] = SLICE(dx_ax_167, word16, 0)
	Mem119[ds_63:0x2E45<16>:word16] = 0x10<16>
	sp_13 = <invalid>
	ds = ds_63
l0800_5CA2:
	branch (Mem121[ds:0x29FB<16>:word16] & 1<16>) == 0<16> l0800_5CB0
l0800_5CAD:
	di_129 = di_129 | wLoc08_172
l0800_5CB0:
	ax_138 = Mem121[ds:0x29FD<16>:word16]
	dx_144 = __rcr<word16,byte>(Mem121[ds:0x29FB<16>:word16], 1<8>, SLICE(cond(ax_138 >>u 1<16>), bool, 1))
	Mem145[ds:0x29FD<16>:word16] = ax_138 >>u 1<16>
	Mem146[ds:0x29FB<16>:word16] = dx_144
	Mem153[ds:0x2E45<16>:word16] = Mem150[ds:0x2E45<16>:word16] - 1<16>
	wLoc08_172 = wLoc08_172 << 1<16>
	si_156 = si_155 - 1<16>


word16 fn0800_5CD9(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_579B
//      fn0800_593F
//      fn0800_5975
//      fn0800_5A0F
//      fn0800_5C1A
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-fn0800_5C1A
// Trashed: SCZO ax dx Top
// Preserved: bp bx cx di ds es si sp
fn0800_5CD9_entry:
l0800_5CD9:
	di_15 = wArg02
	si_16 = 0<16>
l0800_5D25:
	di_21 = di_15
	branch di_15 != 0<16> l0800_5CE5
l0800_5CE5:
	branch Mem27[ds:0x2E45<16>:word16] != 0<16> l0800_5D00
l0800_5CEC:
	al_45 = SLICE(fn0800_5B15(ds, out si_16, out di_21, out ds), byte, 0) (alias)
	Mem44[ds:0x29FD<16>:word16] = 0<16>
	Mem47[ds:0x29FB<16>:word16] = CONVERT(al_45, uint8, uint16)
	Mem48[ds:0x2E45<16>:word16] = 8<16>
l0800_5D00:
	si_16 = si_16 << 1<16>
	branch (Mem53[ds:0x29FB<16>:word16] & 0x80<16>) == 0<16> l0800_5D0E
l0800_5D0D:
	si_16 = si_16 + 1<16>
l0800_5D0E:
	dx_66 = Mem53[ds:0x29FB<16>:word16]
	Mem73[ds:0x29FD<16>:word16] = __rcl<word16,byte>(Mem53[ds:0x29FD<16>:word16], 1<8>, SLICE(cond(dx_66 << 1<16>), bool, 1))
	Mem74[ds:0x29FB<16>:word16] = dx_66 << 1<16>
	Mem76[ds:0x2E45<16>:word16] = Mem74[ds:0x2E45<16>:word16] - 1<16>
	di_15 = di_21 - 1<16>
l0800_5D29:
	return si_16
fn0800_5CD9_exit:


selector fn0800_5D2F(selector ds, byte bArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_55E8
//      fn0800_579B
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: ds:[0..15]-fn0800_579B
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: DP bp sp
fn0800_5D2F_entry:
l0800_5D2F:
	dx_11 = Mem7[ds:0x2E59<16>:word16]
	branch Mem7[ds:0x2E5B<16>:word16] != Mem7[ds:0x2E57<16>:word16] l0800_5D9E
l0800_5D40:
	branch dx_11 - 1<16> != Mem7[ds:0x2E55<16>:word16] l0800_5D9E
l0800_5D46:
	ax_dx_119 = 0xFFFF<u32> - CONVERT(Mem22[ds:0x2E31<16>:word16], uint16, uint32)
	fn0800_4152(ds, SEQ(Mem32[ds:0x2E5B<16>:word16], Mem32[ds:0x2E59<16>:word16] + Mem32[ds:0x2E31<16>:word16]), SLICE(ax_dx_119, word16, 0), SLICE(ax_dx_119, word16, 16), Mem7[ds:0x29DF<16>:word32], out si_154, out ds)
	fn0800_B0F3(Mem64[ds:0x2E59<16>:word32], SEQ(Mem56[ds:0x2E57<16>:word16], Mem56[ds:0x2E55<16>:word16] - Mem56[ds:0x2E31<16>:word16]), Mem40[ds:0x2E31<16>:word16])
	dx_85 = Mem70[ds:0x2E59<16>:word16] + Mem70[ds:0x2E31<16>:word16]
	Mem87[ds:0x2E57<16>:word16] = Mem70[ds:0x2E5B<16>:word16]
	Mem88[ds:0x2E55<16>:word16] = dx_85
l0800_5D9E:
	Mem97[Mem90[ds:0x2E55<16>:segptr32]:byte] = bArg02
	Mem99[ds:0x2E55<16>:word16] = Mem97[ds:0x2E55<16>:word16] + 1<16>
	Mem115[ds:0x2E4D<16>:word16] = Mem99[ds:((CONVERT(Mem99[ds:0x2E4D<16>:byte] ^ bArg02, uint8, uint16) & 0xFF<16>) << 1<16>) + 0x2A29<16>:word16] ^ Mem99[ds:0x2E4D<16>:word16] >>u 8<8>
	return ds
fn0800_5D2F_exit:


word16 fn0800_5DCE(selector ds, word32 dwArg02, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_4B97
//      fn0800_4BB1
//      fn0800_518F
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_4BB1 ds:[0..15]-fn0800_4BB1
// Trashed: SCZOP ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_5DCE_entry:
l0800_5DCE:
	dx_ax_301 = fn0800_4194(ds, dwArg02)
	ax_19 = SLICE(dx_ax_301, word16, 0) (alias)
	dx_22 = SLICE(dx_ax_301, word16, 16) (alias)
	branch Test(ULT,false) l0800_5DEE
l0800_5DE2:
	branch dx_22 != 0<16> l0800_5DE9
l0800_5DE4:
	branch ax_19 <u 0x400<16> l0800_5DEE
l0800_5DEE:
	ax_59 = SLICE(fn0800_4194(ds, dwArg02), word16, 0) & 0xFFFC<16>
l0800_5DE9:
	ax_59 = 0x400<16>
l0800_5DFD:
	si_146 = ax_59
l0800_5E5B:
	branch si_146 != 0<16> l0800_5E01
l0800_5E01:
	branch fn0800_3E27(ds, dwArg02, out cx_303, out di_304, out ds) != 0x524E<16> l0800_5E58
l0800_5E12:
	branch (fn0800_3E27(ds, dwArg02, out cx_305, out di_306, out ds) & 0xFF00<16>) != 0x4300<16> l0800_5E40
l0800_5E40:
	fn0800_ACB3(ds, dwArg02, 0xFFFFFFFE<32>, 1<16>, out cx_307)
l0800_5E58:
	si_146 = si_146 - 2<16>
l0800_5E26:
	fn0800_ACB3(ds, dwArg02, 0xFFFFFFFC<32>, 1<16>, out cx_308)
l0800_5E5F:
	dsOut = ds
	return si_146
fn0800_5DCE_exit:


word16 fn0800_5E64(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_0DE8 ds:[0..15]-fn0800_0DE8 sp:[0..15]-fn0800_0DE8
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: DP
fn0800_5E64_entry:
l0800_5E64:
	bp_1046 = fp - 2<i16>
	sp_126 = fp - 0x3E<16>
	cx_23 = 4<16>
	branch false l0800_5E80
l0800_5E7E:
	cx_23 = 3<16>
l0800_5E80:
	ax_28 = 0<16>
	cmpResult_34 = memcmp(ds:0x4271<16>, ds:0x2202<16>, CONVERT(cx_23, word16, uint32))
	branch cmpResult_34 == 0<16> l0800_5E8B
l0800_5E86:
	ax_42 = 0<16> - CONVERT(cmpResult_34 <u 0<16>, bool, word16)
	ax_28 = ax_42 - 0xFFFF<16> - CONVERT(ax_42 <u 0<16>, bool, word16)
l0800_5E8B:
	branch ax_28 == 0<16> l0800_5EC3
l0800_5E8F:
	cx_65 = 4<16>
	dx_66 = 0xFFFF<16>
	branch true l0800_5EA5
l0800_5EA1:
	cx_65 = 3<16>
	dx_66 = 0<16>
l0800_5EA5:
	cx_75 = cx_65 >>u 1<16>
	memcpy(ds:0x4271<16>, ds:0x2202<16>, cx_75 *u32 2<16>)
	di_84 = cx_75 *u 2<16> + 0x4271<16>
	memcpy(ds:di_84, ds:cx_75 *u 2<16> + 0x2202<16>, CONVERT(SLICE(cond(cx_75), bool, 1), bool, uint32))
	di_2150 = di_84 + CONVERT(cx_75 <u 0<16>, bool, word16)
	cx_2153 = dx_66
l0800_5EB1:
	branch cx_2153 == 0<16> l0800_5EB3
l0800_5EB3:
	sp_119 = <invalid>
	bp_1046 = fn0800_09A3(ds, out ds)
	sp_126 = sp_119 + 8<16>
l0800_5EC3:
	ax_140 = (CONVERT(Mem129[ds:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem129[ds:0x2E76<16>:byte], uint8, uint16)
	branch Mem129[ds:0x2A09<16>:word16] >u 0<16> l0800_5EED
l0800_5EDC:
	branch Mem129[ds:0x2A09<16>:word16] != 0<16> l0800_5EE4
l0800_5EDE:
	branch ax_140 <u Mem129[ds:0x2A07<16>:word16] l0800_5EED
l0800_5EED:
	branch Mem129[ds:0x2A0B<16>:word32] <=u 0x7FF0<32> l0800_5F0A
l0800_5EFE:
	Mem155[ds:0x2A0D<16>:word16] = 0<16>
	Mem156[ds:0x2A0B<16>:word16] = 0x7FF0<16>
l0800_5F0A:
	sp_165 = sp_126 - 2<i16>
	Mem170[ss:sp_165:word16] = 0<16>
	Mem173[ss:sp_165 - 2<i16>:word16] = 0<16>
	Mem175[ss:sp_165 - 4<i16>:word16] = 2<16>
	Mem179[ss:sp_165 - 6<i16>:word16] = Mem175[ds:0x29E5<16>:word16]
	Mem182[ss:sp_165 - 8<i16>:word16] = Mem179[ds:0x29E3<16>:word16]
	fn0800_ACB3(ds, Mem182[ss:sp_165 - 8<i16>:segptr32], Mem182[ss:sp_165 - 4<i16>:ui32], Mem182[ss:sp_165:word16], out cx_2709)
	Mem197[ss:sp_165:word16] = Mem182[ds:0x29E5<16>:word16]
	Mem200[ss:sp_165 - 2<i16>:word16] = Mem197[ds:0x29E3<16>:word16]
	Mem220[ss:bp_1046 - 34<i16>:word16] = fn0800_3FAD(ds, Mem200[ss:sp_165 - 2<i16>:word32], out di_2710, out ds_205)
	Mem223[ss:sp_165:word16] = Mem220[ds_205:0x29E5<16>:word16]
	Mem226[ss:sp_165 - 2<i16>:word16] = Mem223[ds_205:0x29E3<16>:word16]
	ax_227 = fn0800_3FAD(ds_205, Mem226[ss:sp_165 - 2<i16>:word32], out di_2711, out ds_231)
	di_239 = ax_227
	branch Mem226[ss:bp_1046 - 34<i16>:word16] == 0<16> l0800_5F48
l0800_5F47:
	di_239 = ax_227 - 1<16>
l0800_5F48:
	dx_ax_2159 = fn0800_8C69(di_239, 9<8>, 0<16>) + CONVERT(Mem226[ss:bp_1046 - 34<i16>:word16], uint16, uint32)
	Mem267[ss:bp_1046 - 2<i16>:word16] = SLICE(dx_ax_2159, word16, 16)
	Mem268[ss:bp_1046 - 4<i16>:word16] = SLICE(dx_ax_2159, word16, 0)
	sp_255 = <invalid>
	branch Mem268[ss:bp_1046 - 4<i16>:word32] <=u Mem268[ds_231:0x2A07<16>:word32] l0800_5F7E
l0800_5F71:
	dx_280 = Mem268[ds_231:0x2A07<16>:word16]
	Mem283[ss:bp_1046 - 2<i16>:word16] = Mem268[ds_231:0x2A09<16>:word16]
	Mem284[ss:bp_1046 - 4<i16>:word16] = dx_280
l0800_5F7E:
	Mem292[ss:sp_255 - 2<i16>:word16] = Mem286[ds_231:0x29E5<16>:word16]
	Mem295[ss:sp_255 - 4<i16>:word16] = Mem292[ds_231:0x29E3<16>:word16]
	Mem310[ss:bp_1046 - 36<i16>:word16] = fn0800_3FAD(ds_231, Mem295[ss:sp_255 - 4<i16>:word32], out di_2712, out ds_300)
	Mem313[ss:sp_255 - 2<i16>:word16] = Mem310[ds_300:0x29E5<16>:word16]
	Mem316[ss:sp_255 - 4<i16>:word16] = Mem313[ds_300:0x29E3<16>:word16]
	Mem330[ss:bp_1046 - 38<i16>:word16] = fn0800_3FAD(ds_300, Mem316[ss:sp_255 - 4<i16>:word32], out di_2713, out ds_321)
	Mem333[ss:sp_255 - 2<i16>:word16] = Mem330[ds_321:0x29E5<16>:word16]
	Mem336[ss:sp_255 - 4<i16>:word16] = Mem333[ds_321:0x29E3<16>:word16]
	Mem350[ss:bp_1046 - 40<i16>:word16] = fn0800_3FAD(ds_321, Mem336[ss:sp_255 - 4<i16>:word32], out di_2714, out ds_341)
	Mem353[ss:sp_255 - 2<i16>:word16] = Mem350[ds_341:0x29E5<16>:word16]
	Mem356[ss:sp_255 - 4<i16>:word16] = Mem353[ds_341:0x29E3<16>:word16]
	Mem370[ss:bp_1046 - 42<i16>:word16] = fn0800_3FAD(ds_341, Mem356[ss:sp_255 - 4<i16>:word32], out di_2715, out ds_361)
	Mem373[ss:sp_255 - 2<i16>:word16] = Mem370[ds_361:0x29E5<16>:word16]
	Mem376[ss:sp_255 - 4<i16>:word16] = Mem373[ds_361:0x29E3<16>:word16]
	Mem390[ss:bp_1046 - 44<i16>:word16] = fn0800_3FAD(ds_361, Mem376[ss:sp_255 - 4<i16>:word32], out di_2716, out ds_381)
	Mem393[ss:sp_255 - 2<i16>:word16] = Mem390[ds_381:0x29E5<16>:word16]
	Mem396[ss:sp_255 - 4<i16>:word16] = Mem393[ds_381:0x29E3<16>:word16]
	Mem410[ss:bp_1046 - 46<i16>:word16] = fn0800_3FAD(ds_381, Mem396[ss:sp_255 - 4<i16>:word32], out di_2717, out ds_401)
	Mem413[ss:sp_255 - 2<i16>:word16] = Mem410[ds_401:0x29E5<16>:word16]
	Mem416[ss:sp_255 - 4<i16>:word16] = Mem413[ds_401:0x29E3<16>:word16]
	fn0800_3FAD(ds_401, Mem416[ss:sp_255 - 4<i16>:word32], out di_2718, out ds_421)
	Mem432[ss:sp_255 - 2<i16>:word16] = Mem416[ds_421:0x29E5<16>:word16]
	Mem435[ss:sp_255 - 4<i16>:word16] = Mem432[ds_421:0x29E3<16>:word16]
	Mem449[ss:bp_1046 - 48<i16>:word16] = fn0800_3FAD(ds_421, Mem435[ss:sp_255 - 4<i16>:word32], out di_2719, out ds_440)
	Mem452[ss:sp_255 - 2<i16>:word16] = Mem449[ds_440:0x29E5<16>:word16]
	Mem455[ss:sp_255 - 4<i16>:word16] = Mem452[ds_440:0x29E3<16>:word16]
	Mem469[ss:bp_1046 - 50<i16>:word16] = fn0800_3FAD(ds_440, Mem455[ss:sp_255 - 4<i16>:word32], out di_2720, out ds_460)
	Mem472[ss:sp_255 - 2<i16>:word16] = Mem469[ds_460:0x29E5<16>:word16]
	Mem475[ss:sp_255 - 4<i16>:word16] = Mem472[ds_460:0x29E3<16>:word16]
	Mem489[ss:bp_1046 - 52<i16>:word16] = fn0800_3FAD(ds_460, Mem475[ss:sp_255 - 4<i16>:word32], out di_2721, out ds_480)
	Mem492[ss:sp_255 - 2<i16>:word16] = Mem489[ds_480:0x29E5<16>:word16]
	Mem495[ss:sp_255 - 4<i16>:word16] = Mem492[ds_480:0x29E3<16>:word16]
	fn0800_3FAD(ds_480, Mem495[ss:sp_255 - 4<i16>:word32], out di_2722, out ds_500)
	Mem510[ss:sp_255 - 2<i16>:word16] = Mem495[ds_500:0x29E1<16>:word16]
	Mem513[ss:sp_255 - 4<i16>:word16] = Mem510[ds_500:0x29DF<16>:word16]
	ax_522 = (CONVERT(Mem513[ds_500:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem513[ds_500:0x2E76<16>:byte], uint8, uint16)
	Mem528[ss:sp_255 - 6<i16>:word16] = 0<16>
	Mem530[ss:sp_255 - 8<i16>:word16] = ax_522
	Mem532[ss:sp_255 - 10<i16>:word16] = ds_500
	Mem535[ss:sp_255 - 12<i16>:word16] = 0x2E77<16>
	ah_1007 = SLICE(CONVERT(fn0800_4152(ds_500, Mem535[ss:sp_255 - 12<i16>:word32], Mem535[ss:sp_255 - 8<i16>:word16], Mem535[ss:sp_255 - 6<i16>:word16], Mem535[ss:sp_255 - 4<i16>:word32], out si_2723, out ds_540), uint8, uint16), byte, 8) (alias)
	sp_548 = sp_255
	branch Mem535[ss:bp_1046 - 36<i16>:word16] != 0<16> l0800_6064
l0800_6064:
	Mem557[ss:sp_255 - 2<i16>:word16] = 0<16>
	Mem559[ss:sp_255 - 4<i16>:word16] = 0xFFFF<16>
	ax_560 = fn0800_4311(ds_540, Mem559[ss:sp_255 - 4<i16>:word32], out dx_566, out bp_1046, out si_2724, out ds_565)
	Mem575[ss:bp_1046 - 10<i16>:word16] = dx_566
	Mem576[ss:bp_1046 - 12<i16>:word16] = ax_560
	sp_569 = <invalid>
	Mem582[ss:sp_569 + 2<16>:word16] = 0<16>
	Mem584[ss:sp_569:word16] = 0<16>
	Mem587[ss:sp_569 - 2<i16>:word16] = Mem584[ss:bp_1046 - 52<i16>:word16]
	Mem590[ss:sp_569 - 4<i16>:word16] = Mem587[ds_565:0x29E5<16>:word16]
	Mem593[ss:sp_569 - 6<i16>:word16] = Mem590[ds_565:0x29E3<16>:word16]
	fn0800_ACB3(ds_565, Mem593[ss:sp_569 - 6<i16>:segptr32], Mem593[ss:sp_569 - 2<i16>:ui32], Mem593[ss:sp_569 + 2<i16>:word16], out cx_2725)
	Mem610[ss:bp_1046 - 54<i16>:word16] = Mem593[ss:bp_1046 - 12<i16>:word16]
	sp_604 = sp_569 + 4<16>
	si_605 = 0<16>
l0800_60D6:
	branch si_605 != Mem614[ss:bp_1046 - 36<i16>:word16] l0800_6096
l0800_6096:
	sp_620 = sp_604 - 2<i16>
	Mem621[ss:sp_620:word16] = Mem614[ds_565:0x29E5<16>:word16]
	Mem624[ss:sp_620 - 2<i16>:word16] = Mem621[ds_565:0x29E3<16>:word16]
	Mem638[ss:bp_1046 - 34<i16>:word16] = fn0800_3FAD(ds_565, Mem624[ss:sp_620 - 2<i16>:word32], out di_2730, out ds_629)
	Mem641[ss:sp_620:word16] = Mem638[ds_629:0x29E5<16>:word16]
	Mem644[ss:sp_620 - 2<i16>:word16] = Mem641[ds_629:0x29E3<16>:word16]
	dx_ax_2163 = fn0800_8C69(fn0800_3FAD(ds_629, Mem644[ss:sp_620 - 2<i16>:word32], out di_2731, out ds_565), 4<8>, 0<16>) + CONVERT(Mem644[ss:bp_1046 - 34<i16>:word16], uint16, uint32)
	es_676 = Mem644[ss:bp_1046 - 10<i16>:selector]
	bx_677 = Mem644[ss:bp_1046 - 54<i16>:word16]
	Mem678[es_676:bx_677 + 2<i16>:word16] = SLICE(dx_ax_2163, word16, 16)
	Mem679[es_676:bx_677:word16] = SLICE(dx_ax_2163, word16, 0)
	Mem681[ss:bp_1046 - 54<i16>:word16] = Mem679[ss:bp_1046 - 54<i16>:word16] + 4<16>
	sp_604 = <invalid>
	si_605 = si_605 + 1<16>
l0800_60DB:
	sp_686 = sp_604 - 2<i16>
	Mem687[ss:sp_686:word16] = 0x667B<16>
	Mem690[ss:sp_686 - 2<i16>:word16] = 4<16>
	Mem693[ss:sp_686 - 4<i16>:word16] = Mem690[ss:bp_1046 - 36<i16>:word16]
	Mem696[ss:sp_686 - 6<i16>:word16] = Mem693[ss:bp_1046 - 10<i16>:word16]
	Mem699[ss:sp_686 - 8<i16>:word16] = Mem696[ss:bp_1046 - 12<i16>:word16]
	fn0800_B95E(ds_565, Mem699[ss:sp_686 - 8<i16>:word16], Mem699[ss:sp_686 - 6<i16>:word16], Mem699[ss:sp_686 - 4<i16>:word16], Mem699[ss:sp_686 - 2<i16>:word16], Mem699[ss:sp_686:word16])
	di_713 = Mem699[ss:bp_1046 - 12<i16>:word16]
	Mem720[ss:bp_1046 - 56<i16>:word16] = 0<i16>
	sp_711 = sp_686 + 2<16>
	si_2156 = 0<16>
l0800_620C:
	branch si_2156 == Mem724[ss:bp_1046 - 36<i16>:word16] l0800_6214
l0800_6214:
	sp_729 = sp_711 - 2<i16>
	Mem730[ss:sp_729:word16] = Mem724[ss:bp_1046 - 10<i16>:word16]
	Mem733[ss:sp_729 - 2<i16>:word16] = Mem730[ss:bp_1046 - 12<i16>:word16]
	ah_1007 = SLICE(CONVERT(fn0800_4346(ds_565, Mem733[ss:sp_729:word16], out cx_2741, out dx_2742, out bx_2743, out ds_540), uint8, uint16), byte, 8) (alias)
	sp_548 = sp_729 + 2<16>
l0800_6211:
l0800_6104:
	es_747 = Mem724[ss:bp_1046 - 10<i16>:selector]
	ax_749 = Mem724[es_747:di_713 + 2<i16>:word16]
	dx_750 = Mem724[es_747:di_713:word16]
	Mem751[ss:bp_1046 - 18<i16>:word16] = ax_749
	Mem752[ss:bp_1046 - 20<i16>:word16] = dx_750
	Mem758[ss:bp_1046 - 14<i16>:word16] = ax_749 & 0xF<16>
	Mem759[ss:bp_1046 - 16<i16>:word16] = dx_750 & 0xFFF0<16>
	sp_761 = sp_711 - 2<i16>
	Mem762[ss:sp_761:word16] = Mem759[ds_565:0x29E1<16>:word16]
	Mem765[ss:sp_761 - 2<i16>:word16] = Mem762[ds_565:0x29DF<16>:word16]
	Mem770[ss:sp_761 - 4<i16>:word16] = 0<16>
	fn0800_4047(ds_565, Mem770[ss:sp_761 - 4<i16>:byte], Mem770[ss:sp_761 - 2<i16>:segptr32], out cx_2744, out dx_2745, out bx_2746, out di_2747, out ds_777)
	Mem786[ss:sp_761:word16] = Mem770[ds_777:0x29E1<16>:word16]
	Mem789[ss:sp_761 - 2<i16>:word16] = Mem786[ds_777:0x29DF<16>:word16]
	sp_797 = <invalid>
	Mem803[ss:sp_797 - 2<i16>:word16] = SLICE(fn0800_8CAA(Mem789[ss:bp_1046 - 16<i16>:word16], 4<8>, Mem789[ss:bp_1046 - 14<i16>:word16]), word16, 0)
	di_807 = fn0800_40BF(ds_777, Mem803[ss:sp_797 + 2<i16>:byte], Mem803[ss:sp_797:word32], out ds_808)
	Mem817[ss:bp_1046 - 34<i16>:word16] = 0<16>
l0800_6150:
	es_821 = Mem820[ss:bp_1046 - 10<i16>:selector]
	ax_dx_2183 = Mem820[es_821:di_807:ui32] - Mem820[ss:bp_1046 - 16<i16>:ui32]
	Mem829[ss:bp_1046 - 22<i16>:word16] = SLICE(ax_dx_2183, word16, 16)
	Mem830[ss:bp_1046 - 24<i16>:word16] = SLICE(ax_dx_2183, word16, 0)
	Mem836[ss:bp_1046 - 16<i16>:ui32] = Mem832[ss:bp_1046 - 16<i16>:ui32] + ax_dx_2183
	branch Mem836[ss:bp_1046 - 22<i16>:word16] >u 0<16> l0800_61B9
l0800_6172:
	branch Mem836[ss:bp_1046 - 22<i16>:word16] != 0<16> l0800_617B
l0800_6174:
	branch Mem836[ss:bp_1046 - 24<i16>:word16] >u 0xFF<16> l0800_61B9
l0800_617B:
	ax_dx_2181 = Mem836[ss:bp_1046 - 16<i16>:ui32] - Mem836[ss:bp_1046 - 20<i16>:ui32]
	ax_850 = SLICE(ax_dx_2181, word16, 16) (alias)
	dx_847 = SLICE(ax_dx_2181, word16, 0) (alias)
	ah_879 = SLICE(ax_850, byte, 8) (alias)
	branch ax_850 >u 0<16> l0800_61B9
l0800_618B:
	branch Test(ULT,false) l0800_6192
l0800_618D:
	branch dx_847 >=u 0xFFF0<16> l0800_61B9
l0800_6192:
	branch Mem836[ss:bp_1046 - 34<i16>:word16] == 0xFF<16> l0800_61B9
l0800_6199:
	Mem872[ss:sp_797 + 2<16>:word16] = Mem836[ds_808:0x29E1<16>:word16]
	Mem875[ss:sp_797:word16] = Mem872[ds_808:0x29DF<16>:word16]
	Mem881[ss:sp_797 - 2<16>:word16] = SEQ(ah_879, Mem875[ss:bp_1046 - 24<i16>:byte])
	fn0800_4047(ds_808, Mem881[ss:sp_797 - 2<16>:byte], Mem881[ss:sp_797:segptr32], out cx_2759, out dx_2760, out bx_2761, out di_887, out ds_808)
	Mem895[ss:bp_1046 - 34<i16>:word16] = Mem881[ss:bp_1046 - 34<i16>:word16] + 1<16>
	di_807 = di_887 + 4<16>
	si_2156 = si_2156 + 1<16>
	branch si_2156 != Mem895[ss:bp_1046 - 36<i16>:word16] l0800_6150
l0800_61B9:
	Mem908[ss:sp_797 + 2<16>:word16] = 1<16>
	ax_910 = Mem908[ss:bp_1046 - 34<i16>:word16]
	Mem918[ss:sp_797:word16] = Mem908[ss:bp_1046 - 56<i16>:word16] - (ax_910 != 0xFFFD<16>)
	Mem920[ss:sp_797 - 2<16>:word16] = -(ax_910 + 3<16>)
	Mem924[ss:sp_797 - 4<16>:word16] = Mem920[ds_808:0x29E1<16>:word16]
	Mem927[ss:sp_797 - 6<16>:word16] = Mem924[ds_808:0x29DF<16>:word16]
	ah_948 = SLICE(fn0800_ACB3(ds_808, Mem927[ss:sp_797 - 6<16>:segptr32], Mem927[ss:sp_797 - 2<16>:ui32], Mem927[ss:sp_797 + 2<16>:word16], out cx_2754), byte, 8) (alias)
	Mem942[ss:sp_797 + 2<16>:word16] = Mem927[ds_808:0x29E1<16>:word16]
	Mem945[ss:sp_797:word16] = Mem942[ds_808:0x29DF<16>:word16]
	Mem950[ss:sp_797 - 2<16>:word16] = SEQ(ah_948, Mem945[ss:bp_1046 - 34<i16>:byte])
	fn0800_4047(ds_808, Mem950[ss:sp_797 - 2<16>:byte], Mem950[ss:sp_797:segptr32], out cx_2755, out dx_2756, out bx_2757, out di_713, out ds_565)
	Mem965[ss:sp_797 + 2<16>:word16] = 1<16>
	dx_ax_2179 = CONVERT(Mem965[ss:bp_1046 - 34<i16>:word16], word16, uint32) + 2<32>
	Mem974[ss:sp_797:word16] = SLICE(dx_ax_2179, word16, 16)
	Mem976[ss:sp_797 - 2<16>:word16] = SLICE(dx_ax_2179, word16, 0)
	Mem979[ss:sp_797 - 4<16>:word16] = Mem976[ds_565:0x29E1<16>:word16]
	Mem982[ss:sp_797 - 6<16>:word16] = Mem979[ds_565:0x29DF<16>:word16]
	fn0800_ACB3(ds_565, Mem982[ss:sp_797 - 6<16>:segptr32], Mem982[ss:sp_797 - 2<16>:ui32], Mem982[ss:sp_797 + 2<16>:word16], out cx_2758)
	sp_711 = sp_797 + 4<16>
l0800_6061:
l0800_6220:
	sp_999 = sp_548 - 2<i16>
	Mem1001[ss:sp_999:word16] = Mem996[ds_540:0x29E1<16>:word16]
	Mem1004[ss:sp_999 - 2<i16>:word16] = Mem1001[ds_540:0x29DF<16>:word16]
	Mem1011[ss:sp_999 - 4<i16>:word16] = SEQ(ah_1007, 0<8>)
	fn0800_4047(ds_540, Mem1011[ss:sp_999 - 4<i16>:byte], Mem1011[ss:sp_999 - 2<i16>:segptr32], out cx_2726, out dx_2727, out bx_2728, out di_2729, out ds_1018)
	Mem1027[ss:sp_999:word16] = Mem1011[ds_1018:0x29E1<16>:word16]
	Mem1030[ss:sp_999 - 2<i16>:word16] = Mem1027[ds_1018:0x29DF<16>:word16]
	dx_ax_2706 = fn0800_AD2F(ds_1018, Mem1030[ss:sp_999 - 2<i16>:segptr32])
	Mem1047[ss:bp_1046 - 26<i16>:word16] = SLICE(dx_ax_2706 + 0xFFFFFFE0<32>, word16, 16)
	Mem1048[ss:bp_1046 - 28<i16>:word16] = SLICE(dx_ax_2706, word16, 0) + 0xFFE0<16>
l0800_6266:
	branch (Mem1051[ss:bp_1046 - 28<i16>:word16] & 0xF<16>) != 0<16> l0800_624D
l0800_624D:
	sp_1062 = sp_548 - 2<i16>
	Mem1063[ss:sp_1062:word16] = Mem1051[ds_1018:0x29E1<16>:word16]
	Mem1066[ss:sp_1062 - 2<i16>:word16] = Mem1063[ds_1018:0x29DF<16>:word16]
	Mem1071[ss:sp_1062 - 4<i16>:word16] = 0<16>
	fn0800_4047(ds_1018, Mem1071[ss:sp_1062 - 4<i16>:byte], Mem1071[ss:sp_1062 - 2<i16>:segptr32], out cx_2732, out dx_2733, out bx_2734, out di_2735, out ds_1018)
	Mem1089[ss:bp_1046 - 28<i16>:ui32] = Mem1085[ss:bp_1046 - 28<i16>:ui32] + 1<32>
l0800_6271:
	Mem1099[ss:bp_1046 - 4<i16>:ui32] = Mem1095[ss:bp_1046 - 4<i16>:ui32] - CONVERT(Mem1051[ss:bp_1046 - 38<i16>:word16] << 4<8>, uint16, uint32)
	sp_1101 = sp_548 - 2<i16>
	Mem1102[ss:sp_1101:word16] = 0<16>
	ax_1103 = Mem1102[ss:bp_1046 - 38<i16>:word16]
	Mem1110[ss:sp_1101 - 2<i16>:word16] = 0<16>
	Mem1112[ss:sp_1101 - 4<i16>:word16] = ax_1103 << 4<8>
	Mem1115[ss:sp_1101 - 6<i16>:word16] = Mem1112[ds_1018:0x29E5<16>:word16]
	Mem1118[ss:sp_1101 - 8<i16>:word16] = Mem1115[ds_1018:0x29E3<16>:word16]
	fn0800_ACB3(ds_1018, Mem1118[ss:sp_1101 - 8<i16>:segptr32], Mem1118[ss:sp_1101 - 4<i16>:ui32], Mem1118[ss:sp_1101:word16], out cx_2736)
	Mem1133[ss:sp_1101:word16] = Mem1118[ss:bp_1046 - 2<i16>:word16]
	Mem1136[ss:sp_1101 - 2<i16>:word16] = Mem1133[ss:bp_1046 - 4<i16>:word16]
	Mem1139[ss:sp_1101 - 4<i16>:word16] = Mem1136[ss:bp_1046 - 2<i16>:word16]
	Mem1142[ss:sp_1101 - 6<i16>:word16] = Mem1139[ss:bp_1046 - 4<i16>:word16]
	bp_1144 = fn0800_75EA(ds_1018, Mem1142[ss:sp_1101 - 6<i16>:word16], Mem1142[ss:sp_1101 - 4<i16>:word16], Mem1142[ss:sp_1101 - 2<i16>:word32], out si_2737, out ds_1148)
	sp_1152 = <invalid>
	Mem1163[ss:sp_1152 + 6<16>:word16] = 0<16>
	Mem1166[ss:sp_1152 + 4<16>:word16] = 0<16>
	Mem1168[ss:sp_1152 + 2<16>:word16] = 0x20<16>
	Mem1171[ss:sp_1152:word16] = Mem1168[ds_1148:0x29E1<16>:word16]
	Mem1174[ss:sp_1152 - 2<i16>:word16] = Mem1171[ds_1148:0x29DF<16>:word16]
	fn0800_ACB3(ds_1148, Mem1174[ss:sp_1152 - 2<i16>:segptr32], Mem1174[ss:sp_1152 + 2<i16>:ui32], Mem1174[ss:sp_1152 + 6<i16>:word16], out cx_2738)
	Mem1189[ss:sp_1152 + 6<16>:word16] = Mem1174[ds_1148:0x29E1<16>:word16]
	Mem1192[ss:sp_1152 + 4<16>:word16] = Mem1189[ds_1148:0x29DF<16>:word16]
	Mem1195[ss:sp_1152 + 2<16>:word16] = Mem1192[ss:bp_1144 - 48<i16>:word16]
	fn0800_40BF(ds_1148, Mem1195[ss:sp_1152 + 2<16>:byte], Mem1195[ss:sp_1152 + 4<16>:word32], out ds_1200)
	Mem1211[ss:sp_1152 + 6<16>:word16] = Mem1195[ds_1200:0x29E1<16>:word16]
	Mem1214[ss:sp_1152 + 4<16>:word16] = Mem1211[ds_1200:0x29DF<16>:word16]
	Mem1217[ss:sp_1152 + 2<16>:word16] = Mem1214[ss:bp_1144 - 50<i16>:word16]
	fn0800_40BF(ds_1200, Mem1217[ss:sp_1152 + 2<16>:byte], Mem1217[ss:sp_1152 + 4<16>:word32], out ds_1222)
	Mem1233[ss:sp_1152 + 6<16>:word16] = Mem1217[ds_1222:0x29E1<16>:word16]
	Mem1236[ss:sp_1152 + 4<16>:word16] = Mem1233[ds_1222:0x29DF<16>:word16]
	Mem1239[ss:sp_1152 + 2<16>:word16] = Mem1236[ss:bp_1144 - 46<i16>:word16]
	fn0800_40BF(ds_1222, Mem1239[ss:sp_1152 + 2<16>:byte], Mem1239[ss:sp_1152 + 4<16>:word32], out ds_1244)
	Mem1255[ss:sp_1152 + 6<16>:word16] = Mem1239[ds_1244:0x29E1<16>:word16]
	Mem1258[ss:sp_1152 + 4<16>:word16] = Mem1255[ds_1244:0x29DF<16>:word16]
	Mem1261[ss:sp_1152 + 2<16>:word16] = Mem1258[ss:bp_1144 - 44<i16>:word16]
	fn0800_40BF(ds_1244, Mem1261[ss:sp_1152 + 2<16>:byte], Mem1261[ss:sp_1152 + 4<16>:word32], out ds_1266)
	Mem1277[ss:sp_1152 + 6<16>:word16] = Mem1261[ds_1266:0x29E1<16>:word16]
	Mem1280[ss:sp_1152 + 4<16>:word16] = Mem1277[ds_1266:0x29DF<16>:word16]
	Mem1283[ss:sp_1152 + 2<16>:word16] = Mem1280[ss:bp_1144 - 28<i16>:word16]
	fn0800_40BF(ds_1266, Mem1283[ss:sp_1152 + 2<16>:byte], Mem1283[ss:sp_1152 + 4<16>:word32], out ds_1288)
	Mem1309[ss:bp_1144 - 34<i16>:word16] = SLICE(fn0800_8CAA(Mem1283[ds_1288:0x2A03<16>:word16], 4<8>, Mem1283[ds_1288:0x2A05<16>:word16]), word16, 0)
	sp_1304 = <invalid>
	branch (Mem1309[ds_1288:0x2A03<16>:word16] & 0xF<16>) == 0<16> l0800_6333
l0800_6330:
	Mem1318[ss:bp_1144 - 34<i16>:word16] = Mem1309[ss:bp_1144 - 34<i16>:word16] + 1<16>
l0800_6333:
	Mem1326[ss:sp_1304 - 2<i16>:word16] = Mem1321[ds_1288:0x29E1<16>:word16]
	Mem1329[ss:sp_1304 - 4<i16>:word16] = Mem1326[ds_1288:0x29DF<16>:word16]
	Mem1333[ss:sp_1304 - 6<i16>:word16] = Mem1329[ss:bp_1144 - 34<i16>:word16]
	fn0800_40BF(ds_1288, Mem1333[ss:sp_1304 + 6<i16>:byte], Mem1333[ss:sp_1304 - 4<i16>:word32], out ds_1338)
	Mem1349[ss:sp_1304 - 2<i16>:word16] = Mem1333[ds_1338:0x29E1<16>:word16]
	Mem1352[ss:sp_1304 - 4<i16>:word16] = Mem1349[ds_1338:0x29DF<16>:word16]
	sp_1360 = <invalid>
	Mem1369[ss:sp_1360 - 2<i16>:word16] = Mem1352[ss:bp_1144 - 34<i16>:word16] + SLICE(fn0800_8CAA(Mem1352[ss:bp_1144 - 28<i16>:word16], 4<8>, Mem1352[ss:bp_1144 - 26<i16>:word16]), word16, 0)
	fn0800_40BF(ds_1338, Mem1369[ss:sp_1360 + 2<i16>:byte], Mem1369[ss:sp_1360:word32], out ds_1374)
	ax_dx_2169 = Mem1369[ss:bp_1144 - 4<i16>:ui32] - Mem1369[ds_1374:0x2A03<16>:ui32] + Mem1369[ds_1374:0x4E88<16>:ui32]
	Mem1396[ss:bp_1144 - 6<i16>:word16] = SLICE(ax_dx_2169 + 0x80<32>, word16, 16)
	Mem1397[ss:bp_1144 - 8<i16>:word16] = SLICE(ax_dx_2169, word16, 0) + 0x80<16>
	branch Mem1397[ds_1374:0x2A1D<16>:word16] == 0<16> l0800_6398
l0800_6398:
	branch Mem1397[ds_1374:0x2A21<16>:word16] != 1<16> l0800_63A8
l0800_639F:
	Mem1407[ss:bp_1144 - 8<i16>:ui32] = Mem1403[ss:bp_1144 - 8<i16>:ui32] + 0x180<32>
l0800_638D:
	Mem1414[ss:bp_1144 - 8<i16>:ui32] = Mem1410[ss:bp_1144 - 8<i16>:ui32] + 0x200<32>
l0800_63A8:
	Mem1420[ss:sp_1360 + 2<16>:word16] = 0<16>
	dx_bx_2174 = Mem1420[ss:bp_1144 - 4<i16>:ui32] + CONVERT(Mem1420[ss:bp_1144 - 38<i16>:word16] << 4<8>, uint16, uint32)
	Mem1433[ss:sp_1360:word16] = SLICE(dx_bx_2174, word16, 16)
	Mem1435[ss:sp_1360 - 2<i16>:word16] = SLICE(dx_bx_2174, word16, 0)
	Mem1439[ss:sp_1360 - 4<i16>:word16] = Mem1435[ds_1374:0x29E5<16>:word16]
	Mem1442[ss:sp_1360 - 6<i16>:word16] = Mem1439[ds_1374:0x29E3<16>:word16]
	fn0800_ACB3(ds_1374, Mem1442[ss:sp_1360 - 6<i16>:segptr32], Mem1442[ss:sp_1360 - 2<i16>:ui32], Mem1442[ss:sp_1360 + 2<i16>:word16], out cx_2749)
	Mem1456[ss:sp_1360 + 2<16>:word16] = 2<16>
	Mem1462[ss:sp_1360:word16] = 0<16>
	Mem1464[ss:sp_1360 - 2<i16>:word16] = 0<16>
	Mem1467[ss:sp_1360 - 4<i16>:word16] = Mem1464[ds_1374:0x29E1<16>:word16]
	Mem1470[ss:sp_1360 - 6<i16>:word16] = Mem1467[ds_1374:0x29DF<16>:word16]
	fn0800_ACB3(ds_1374, Mem1470[ss:sp_1360 - 6<i16>:segptr32], Mem1470[ss:sp_1360 - 2<i16>:ui32], Mem1470[ss:sp_1360 + 2<i16>:word16], out cx_2750)
	Mem1485[ss:sp_1360 + 2<16>:word16] = Mem1470[ds_1374:0x29E1<16>:word16]
	Mem1488[ss:sp_1360:word16] = Mem1485[ds_1374:0x29DF<16>:word16]
	dx_ax_2751 = fn0800_AD2F(ds_1374, Mem1488[ss:sp_1360:segptr32])
	Mem1499[ss:bp_1144 - 30<i16>:word16] = SLICE(dx_ax_2751, word16, 16)
	Mem1500[ss:bp_1144 - 32<i16>:word16] = SLICE(dx_ax_2751, word16, 0)
	dx_bx_2178 = Mem1500[ds_1374:0x2A07<16>:ui32] - Mem1500[ss:bp_1144 - 4<i16>:ui32] - CONVERT(Mem1500[ss:bp_1144 - 38<i16>:word16] << 4<8>, uint16, uint32)
	Mem1516[ss:sp_1360 + 2<16>:word16] = SLICE(dx_bx_2178, word16, 16)
	Mem1518[ss:sp_1360:word16] = SLICE(dx_bx_2178, word16, 0)
	Mem1521[ss:sp_1360 - 2<i16>:word16] = Mem1518[ds_1374:0x29E1<16>:word16]
	Mem1524[ss:sp_1360 - 4<i16>:word16] = Mem1521[ds_1374:0x29DF<16>:word16]
	Mem1527[ss:sp_1360 - 6<i16>:word16] = Mem1524[ds_1374:0x29E5<16>:word16]
	Mem1530[ss:sp_1360 - 8<i16>:word16] = Mem1527[ds_1374:0x29E3<16>:word16]
	bp_1532 = fn0800_3B0A(ds_1374, Mem1530[ss:sp_1360:word16], Mem1530[ss:sp_1360 + 2<i16>:word16], out si_2752, out ds_1536)
	Mem1551[ss:bp_1532 - 34<i16>:word16] = Mem1530[ss:bp_1532 - 32<i16>:word16] & 0x1FF<16>
	fn0800_8CAA(Mem1551[ss:bp_1532 - 32<i16>:word16], 9<8>, Mem1551[ss:bp_1532 - 30<i16>:word16])
	sp_1559 = <invalid>
	branch Mem1551[ss:bp_1532 - 34<i16>:word16] == 0<16> l0800_6446
l0800_6445:
l0800_6446:
	Mem1576[ss:sp_1559 - 2<i16>:word16] = 0<16>
	Mem1579[ss:sp_1559 - 4<i16>:word16] = 0<16>
	Mem1581[ss:sp_1559 - 6<i16>:word16] = 2<16>
	Mem1585[ss:sp_1559 - 8<i16>:word16] = Mem1581[ds_1536:0x29E1<16>:word16]
	Mem1588[ss:sp_1559 - 10<i16>:word16] = Mem1585[ds_1536:0x29DF<16>:word16]
	fn0800_ACB3(ds_1536, Mem1588[ss:sp_1559 - 10<i16>:segptr32], Mem1588[ss:sp_1559 - 6<i16>:ui32], Mem1588[ss:sp_1559 - 2<i16>:word16], out cx_2762)
	Mem1603[ss:sp_1559 - 2<i16>:word16] = Mem1588[ds_1536:0x29E1<16>:word16]
	Mem1606[ss:sp_1559 - 4<i16>:word16] = Mem1603[ds_1536:0x29DF<16>:word16]
	Mem1610[ss:sp_1559 - 6<i16>:word16] = Mem1606[ss:bp_1532 - 34<i16>:word16]
	di_1614 = fn0800_40BF(ds_1536, Mem1610[ss:sp_1559 + 6<i16>:byte], Mem1610[ss:sp_1559 - 4<i16>:word32], out ds_1615)
	Mem1626[ss:sp_1559 - 2<i16>:word16] = Mem1610[ds_1615:0x29E1<16>:word16]
	Mem1629[ss:sp_1559 - 4<i16>:word16] = Mem1626[ds_1615:0x29DF<16>:word16]
	Mem1631[ss:sp_1559 - 6<i16>:word16] = di_1614
	fn0800_40BF(ds_1615, Mem1631[ss:sp_1559 + 6<i16>:byte], Mem1631[ss:sp_1559 - 4<i16>:word32], out ds_1636)
	branch Mem1631[ds_1636:0x2A1D<16>:word16] == 0<16> l0800_64B9
l0800_6483:
	Mem1651[ss:sp_1559 - 2<i16>:word16] = 0<16>
	Mem1654[ss:sp_1559 - 4<i16>:word16] = 0<16>
	Mem1656[ss:sp_1559 - 6<i16>:word16] = 0x2E<16>
	Mem1659[ss:sp_1559 - 8<i16>:word16] = Mem1656[ds_1636:0x29E1<16>:word16]
	Mem1662[ss:sp_1559 - 10<i16>:word16] = Mem1659[ds_1636:0x29DF<16>:word16]
	fn0800_ACB3(ds_1636, Mem1662[ss:sp_1559 - 10<i16>:segptr32], Mem1662[ss:sp_1559 - 6<i16>:ui32], Mem1662[ss:sp_1559 - 2<i16>:word16], out cx_2766)
	Mem1677[ss:sp_1559 - 2<i16>:word16] = Mem1662[ds_1636:0x29E1<16>:word16]
	Mem1680[ss:sp_1559 - 4<i16>:word16] = Mem1677[ds_1636:0x29DF<16>:word16]
	Mem1683[ss:sp_1559 - 6<i16>:word16] = Mem1680[ss:bp_1532 - 34<i16>:word16]
	di_1687 = fn0800_40BF(ds_1636, Mem1683[ss:sp_1559 + 6<i16>:byte], Mem1683[ss:sp_1559 - 4<i16>:word32], out ds_1688)
	Mem1699[ss:sp_1559 - 2<i16>:word16] = Mem1683[ds_1688:0x29E1<16>:word16]
	Mem1702[ss:sp_1559 - 4<i16>:word16] = Mem1699[ds_1688:0x29DF<16>:word16]
	Mem1704[ss:sp_1559 - 6<i16>:word16] = di_1687
	fn0800_40BF(ds_1688, Mem1704[ss:sp_1559 + 6<i16>:byte], Mem1704[ss:sp_1559 - 4<i16>:word32], out ds_1636)
l0800_64B9:
	Mem1725[ss:sp_1559 - 2<i16>:word16] = 0<16>
	Mem1728[ss:sp_1559 - 4<i16>:word16] = 0<16>
	Mem1730[ss:sp_1559 - 6<i16>:word16] = 0x18<16>
	Mem1734[ss:sp_1559 - 8<i16>:word16] = Mem1730[ds_1636:0x29E1<16>:word16]
	Mem1737[ss:sp_1559 - 10<i16>:word16] = Mem1734[ds_1636:0x29DF<16>:word16]
	fn0800_ACB3(ds_1636, Mem1737[ss:sp_1559 - 10<i16>:segptr32], Mem1737[ss:sp_1559 - 6<i16>:ui32], Mem1737[ss:sp_1559 - 2<i16>:word16], out cx_2763)
	Mem1751[ss:sp_1559 - 2<i16>:word16] = Mem1737[ds_1636:0x29E1<16>:word16]
	Mem1754[ss:sp_1559 - 4<i16>:word16] = Mem1751[ds_1636:0x29DF<16>:word16]
	Mem1767[ss:sp_1559 - 6<i16>:word16] = (CONVERT(Mem1754[ds_1636:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem1754[ds_1636:0x2E76<16>:byte], uint8, uint16) - 0x20<16>
	fn0800_40BF(ds_1636, Mem1767[ss:sp_1559 + 6<i16>:byte], Mem1767[ss:sp_1559 - 4<i16>:word32], out ds_1772)
	Mem1785[ss:sp_1559 - 2<i16>:word16] = 0<16>
	Mem1788[ss:sp_1559 - 4<i16>:word16] = 0<16>
	Mem1790[ss:sp_1559 - 6<i16>:word16] = 0x1C<16>
	Mem1793[ss:sp_1559 - 8<i16>:word16] = Mem1790[ds_1772:0x29E1<16>:word16]
	Mem1796[ss:sp_1559 - 10<i16>:word16] = Mem1793[ds_1772:0x29DF<16>:word16]
	fn0800_ACB3(ds_1772, Mem1796[ss:sp_1559 - 10<i16>:segptr32], Mem1796[ss:sp_1559 - 6<i16>:ui32], Mem1796[ss:sp_1559 - 2<i16>:word16], out cx_2764)
	Mem1811[ss:sp_1559 - 2<i16>:word16] = Mem1796[ds_1772:0x29E1<16>:word16]
	Mem1814[ss:sp_1559 - 4<i16>:word16] = Mem1811[ds_1772:0x29DF<16>:word16]
	Mem1818[ss:sp_1559 - 6<i16>:word16] = Mem1814[ss:bp_1532 - 40<i16>:word16]
	fn0800_40BF(ds_1772, Mem1818[ss:sp_1559 + 6<i16>:byte], Mem1818[ss:sp_1559 - 4<i16>:word32], out ds_1823)
	Mem1834[ss:sp_1559 - 2<i16>:word16] = Mem1818[ds_1823:0x29E1<16>:word16]
	Mem1837[ss:sp_1559 - 4<i16>:word16] = Mem1834[ds_1823:0x29DF<16>:word16]
	Mem1840[ss:sp_1559 - 6<i16>:word16] = Mem1837[ss:bp_1532 - 42<i16>:word16]
	fn0800_40BF(ds_1823, Mem1840[ss:sp_1559 + 6<i16>:byte], Mem1840[ss:sp_1559 - 4<i16>:word32], out ds_1845)
	Mem1858[ss:sp_1559 - 2<i16>:word16] = 0<16>
	Mem1861[ss:sp_1559 - 4<i16>:word16] = 0<16>
	Mem1863[ss:sp_1559 - 6<i16>:word16] = 0xA<16>
	Mem1866[ss:sp_1559 - 8<i16>:word16] = Mem1863[ds_1845:0x29E1<16>:word16]
	Mem1869[ss:sp_1559 - 10<i16>:word16] = Mem1866[ds_1845:0x29DF<16>:word16]
	fn0800_ACB3(ds_1845, Mem1869[ss:sp_1559 - 10<i16>:segptr32], Mem1869[ss:sp_1559 - 6<i16>:ui32], Mem1869[ss:sp_1559 - 2<i16>:word16], out cx_2765)
	branch Mem1869[ss:bp_1532 - 4<i16>:ui32] + CONVERT(Mem1869[ss:bp_1532 - 40<i16>:word16] << 4<8>, uint16, uint32) <=u (Mem1869[ss:bp_1532 - 32<i16>:ui32] - 0x20<32>) + Mem1869[ss:bp_1532 - 8<i16>:ui32] l0800_659C
l0800_656E:
	Mem1936[ss:bp_1532 - 8<i16>:ui32] = Mem1932[ss:bp_1532 - 8<i16>:ui32] + ((Mem1869[ss:bp_1532 - 4<i16>:ui32] + CONVERT(Mem1869[ss:bp_1532 - 40<i16>:word16] << 4<8>, uint16, uint32)) - ((Mem1869[ss:bp_1532 - 32<i16>:ui32] - 0x20<32>) + Mem1869[ss:bp_1532 - 8<i16>:ui32]))
l0800_659C:
	Mem1953[ss:bp_1532 - 8<i16>:ui32] = Mem1949[ss:bp_1532 - 8<i16>:ui32] + CONVERT(0x10<16> - Mem1942[ss:bp_1532 + 8<i16>:word16] & 0xF<16>, uint16, uint32)
	ax_1958 = SLICE(fn0800_8CAA(Mem1953[ss:bp_1532 - 8<i16>:word16], 4<8>, Mem1953[ss:bp_1532 - 6<i16>:word16]), word16, 0) (alias)
	Mem1967[ss:bp_1532 - 40<i16>:word16] = ax_1958
	sp_1962 = <invalid>
	Mem1972[ss:sp_1962 - 2<i16>:word16] = Mem1967[ds_1845:0x29E1<16>:word16]
	Mem1975[ss:sp_1962 - 4<i16>:word16] = Mem1972[ds_1845:0x29DF<16>:word16]
	Mem1977[ss:sp_1962 - 6<i16>:word16] = ax_1958
	fn0800_40BF(ds_1845, Mem1977[ss:sp_1962 + 6<i16>:byte], Mem1977[ss:sp_1962 - 4<i16>:word32], out ds_1982)
	branch Mem1977[ss:bp_1532 - 42<i16>:word16] >=u Mem1977[ss:bp_1532 - 40<i16>:word16] l0800_65DC
l0800_65D6:
	Mem1994[ss:bp_1532 - 42<i16>:word16] = Mem1977[ss:bp_1532 - 40<i16>:word16]
l0800_65DC:
	Mem2001[ss:sp_1962 - 2<i16>:word16] = Mem1996[ds_1982:0x29E1<16>:word16]
	Mem2004[ss:sp_1962 - 4<i16>:word16] = Mem2001[ds_1982:0x29DF<16>:word16]
	Mem2008[ss:sp_1962 - 6<i16>:word16] = Mem2004[ss:bp_1532 - 42<i16>:word16]
	fn0800_40BF(ds_1982, Mem2008[ss:sp_1962 + 6<i16>:byte], Mem2008[ss:sp_1962 - 4<i16>:word32], out ds_2013)
	dx_ax_2207 = Mem2008[ss:bp_1532 - 4<i16>:ui32] + Mem2008[ds_2013:0x4E88<16>:ui32]
	ax_2033 = SLICE(fn0800_8CAA(SLICE(dx_ax_2207, word16, 0) + 0x20<16>, 4<8>, SLICE(dx_ax_2207 + 0x20<32>, word16, 16)), word16, 0) (alias)
	Mem2042[ss:bp_1532 - 44<i16>:word16] = ax_2033
	sp_2037 = <invalid>
	Mem2045[ss:sp_2037 - 2<i16>:word16] = Mem2042[ds_2013:0x29E1<16>:word16]
	Mem2048[ss:sp_2037 - 4<i16>:word16] = Mem2045[ds_2013:0x29DF<16>:word16]
	Mem2050[ss:sp_2037 - 6<i16>:word16] = ax_2033
	fn0800_40BF(ds_2013, Mem2050[ss:sp_2037 + 6<i16>:byte], Mem2050[ss:sp_2037 - 4<i16>:word32], out ds_2055)
	Mem2065[ss:bp_1532 - 46<i16>:word16] = Mem2050[ss:bp_1532 - 28<i16>:word16] + 0x80<16>
	branch Mem2065[ds_2055:0x2A1D<16>:word16] == 0<16> l0800_662F
l0800_662F:
	branch Mem2065[ds_2055:0x2A21<16>:word16] != 1<16> l0800_663B
l0800_6636:
	Mem2071[ss:bp_1532 - 46<i16>:word16] = Mem2065[ss:bp_1532 - 46<i16>:word16] + 0x180<16>
l0800_6628:
	Mem2074[ss:bp_1532 - 46<i16>:word16] = Mem2065[ss:bp_1532 - 46<i16>:word16] + 0x200<16>
l0800_663B:
	Mem2082[ss:sp_2037 - 2<i16>:word16] = Mem2077[ds_2055:0x29E1<16>:word16]
	Mem2085[ss:sp_2037 - 4<i16>:word16] = Mem2082[ds_2055:0x29DF<16>:word16]
	Mem2089[ss:sp_2037 - 6<i16>:word16] = Mem2085[ss:bp_1532 - 46<i16>:word16]
	fn0800_40BF(ds_2055, Mem2089[ss:sp_2037 + 6<i16>:byte], Mem2089[ss:sp_2037 - 4<i16>:word32], out ds_2094)
	dx_bx_2213 = Mem2089[ds_2094:0x2A07<16>:ui32] - Mem2089[ss:bp_1532 - 4<i16>:ui32] - CONVERT(Mem2089[ss:bp_1532 - 38<i16>:word16] << 4<8>, uint16, uint32)
	branch dx_bx_2213 == 0<16> l0800_6673
l0800_6673:
	dsOut = ds_2094
	return 0<16>
l0800_666A:
	dsOut = ds_2094
	return 1<16>
l0800_5EE4:
	dsOut = ds
	return 3<16>
fn0800_5E64_exit:
l0800_5EB1_1:
	Mem2151[ds:di_2150:byte] = 0<8>
	di_2150 = di_2150 + 1<i16>
	cx_2153 = cx_2153 - 1<16>


word16 fn0800_669C(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_0DE8 ds:[0..15]-fn0800_0DE8 sp:[0..15]-fn0800_0DE8
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: DP
fn0800_669C_entry:
l0800_669C:
	bp_119 = fp - 2<i16>
	branch Mem15[ds:0x2A07<16>:word32] <=u 0xFEFE<32> l0800_66BE
l0800_66BE:
	sp_134 = fp - 0xA<16>
	cx_31 = 4<16>
	branch false l0800_66D2
l0800_66D0:
	cx_31 = 3<16>
l0800_66D2:
	ax_36 = 0<16>
	cmpResult_42 = memcmp(ds:0x4271<16>, ds:0x2206<16>, CONVERT(cx_31, word16, uint32))
	branch cmpResult_42 == 0<16> l0800_66DD
l0800_66D8:
	ax_50 = 0<16> - CONVERT(cmpResult_42 <u 0<16>, bool, word16)
	ax_36 = ax_50 - 0xFFFF<16> - CONVERT(ax_50 <u 0<16>, bool, word16)
l0800_66DD:
	branch ax_36 == 0<16> l0800_6715
l0800_66E1:
	cx_73 = 4<16>
	dx_74 = 0xFFFF<16>
	branch true l0800_66F7
l0800_66F3:
	cx_73 = 3<16>
	dx_74 = 0<16>
l0800_66F7:
	cx_83 = cx_73 >>u 1<16>
	memcpy(ds:0x4271<16>, ds:0x2206<16>, cx_83 *u32 2<16>)
	di_92 = cx_83 *u 2<16> + 0x4271<16>
	memcpy(ds:di_92, ds:cx_83 *u 2<16> + 0x2206<16>, CONVERT(SLICE(cond(cx_83), bool, 1), bool, uint32))
	di_290 = di_92 + CONVERT(cx_83 <u 0<16>, bool, word16)
	cx_104 = dx_74
l0800_6703:
	branch cx_104 == 0<16> l0800_6705
l0800_6705:
	sp_127 = <invalid>
	bp_119 = fn0800_09A3(ds, out ds)
	sp_134 = sp_127 + 8<16>
l0800_6715:
	sp_142 = sp_134 - 2<i16>
	Mem144[ss:sp_142:word16] = Mem137[ds:0x29E1<16>:word16]
	Mem147[ss:sp_142 - 2<i16>:word16] = Mem144[ds:0x29DF<16>:word16]
	ax_156 = (CONVERT(Mem147[ds:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem147[ds:0x2E76<16>:byte], uint8, uint16)
	Mem162[ss:sp_142 - 4<i16>:word16] = 0<16>
	Mem164[ss:sp_142 - 6<i16>:word16] = ax_156
	Mem166[ss:sp_142 - 8<i16>:word16] = ds
	Mem169[ss:sp_142 - 10<i16>:word16] = 0x2E77<16>
	fn0800_4152(ds, Mem169[ss:sp_142 - 10<i16>:word32], Mem169[ss:sp_142 - 6<i16>:word16], Mem169[ss:sp_142 - 4<i16>:word16], Mem169[ss:sp_142 - 2<i16>:word32], out si_407, out ds_174)
	dx_bx_309 = Mem169[ds_174:0x2A07<16>:ui32] + CONVERT((CONVERT(Mem169[ds_174:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem169[ds_174:0x2E76<16>:byte], uint8, uint16), uint16, uint32)
	Mem206[ss:bp_119 - 2<i16>:word16] = SLICE(dx_bx_309 + 0x40<32>, word16, 16)
	Mem207[ss:bp_119 - 4<i16>:word16] = SLICE(dx_bx_309, word16, 0) + 0x40<16>
	branch Mem207[ds_174:0x2A1D<16>:word16] == 0<16> l0800_6779
l0800_6779:
	branch Mem207[ds_174:0x2A21<16>:word16] != 1<16> l0800_6789
l0800_6780:
	Mem217[ss:bp_119 - 4<i16>:ui32] = Mem213[ss:bp_119 - 4<i16>:ui32] + 0x180<32>
l0800_676E:
	Mem224[ss:bp_119 - 4<i16>:ui32] = Mem220[ss:bp_119 - 4<i16>:ui32] + 0x200<32>
l0800_6789:
	branch Mem228[ss:bp_119 - 4<i16>:word32] <=u 0xFEFE<32> l0800_67A1
l0800_67A1:
	Mem242[ss:sp_142:word16] = Mem228[ds_174:0x2A09<16>:word16]
	Mem245[ss:sp_142 - 2<i16>:word16] = Mem242[ds_174:0x2A07<16>:word16]
	Mem248[ss:sp_142 - 4<i16>:word16] = Mem245[ds_174:0x2A09<16>:word16]
	Mem251[ss:sp_142 - 6<i16>:word16] = Mem248[ds_174:0x2A07<16>:word16]
	fn0800_75EA(ds_174, Mem251[ss:sp_142 - 6<i16>:word16], Mem251[ss:sp_142 - 4<i16>:word16], Mem251[ss:sp_142 - 2<i16>:word32], out si_408, out ds_257)
	dsOut = ds_257
	return 0<16>
l0800_6798:
	dsOut = ds_174
	return 3<16>
l0800_6703_1:
	Mem291[ds:di_290:byte] = 0<8>
	di_290 = di_290 + 1<i16>
	cx_104 = cx_104 - 1<16>
l0800_66B5:
	dsOut = ds
	return 3<16>
fn0800_669C_exit:


word16 fn0800_67BF(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_0DE8 ds:[0..15]-fn0800_0DE8 sp:[0..15]-fn0800_0DE8
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: P
fn0800_67BF_entry:
l0800_67BF:
	ax_19 = (CONVERT(Mem7[ds:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem7[ds:0x2E76<16>:byte], uint8, uint16)
	branch Mem20[ds:0x2A09<16>:word16] >u 0<16> l0800_67F0
l0800_67E1:
	branch Mem20[ds:0x2A09<16>:word16] != 0<16> l0800_67E9
l0800_67E3:
	branch ax_19 <u Mem20[ds:0x2A07<16>:word16] l0800_67F0
l0800_67F0:
	fn0800_4152(ds, SEQ(ds, 0x2E77<16>), ax_19, 0<16>, Mem20[ds:0x29DF<16>:word32], out si_1015, out ds_56)
	fn0800_ACB3(ds_56, Mem74[ds_56:0x29DF<16>:word32], 0xFFFFFFEE<32>, 1<16>, out cx_1016)
	branch fn0800_3F0A(ds_56, Mem80[ds_56:0x29E3<16>:word32], out ds_103) == 0x601A<16> l0800_6839
l0800_6839:
	fn0800_ACB3(ds_103, Mem125[ds_103:0x29E3<16>:word32], 2<32>, 1<16>, out cx_1017)
	fn0800_3B0A(ds_103, 0x10<16>, 0<16>, out si_1018, out ds_169)
	sp_173 = <invalid>
	Mem184[ss:sp_173 + 0xA<16>:word16] = 0<16>
	Mem187[ss:sp_173 + 8<16>:word16] = 0<16>
	Mem189[ss:sp_173 + 6<16>:word16] = 0x1A<16>
	Mem192[ss:sp_173 + 4<16>:word16] = Mem189[ds_169:0x29E5<16>:word16]
	Mem195[ss:sp_173 + 2<16>:word16] = Mem192[ds_169:0x29E3<16>:word16]
	fn0800_ACB3(ds_169, Mem195[ss:sp_173 + 2<16>:segptr32], Mem195[ss:sp_173 + 6<16>:ui32], Mem195[ss:sp_173 + 0xA<16>:word16], out cx_1019)
	Mem210[ss:sp_173 + 0xA<16>:word16] = Mem195[ds_169:0x29E1<16>:word16]
	Mem213[ss:sp_173 + 8<16>:word16] = Mem210[ds_169:0x29DF<16>:word16]
	Mem216[ss:sp_173 + 6<16>:word16] = Mem213[ds_169:0x29E5<16>:word16]
	Mem219[ss:sp_173 + 4<16>:word16] = Mem216[ds_169:0x29E3<16>:word16]
	Mem234[ss:sp_173 + 6<16>:word16] = fn0800_3E27(ds_169, Mem219[ss:sp_173 + 4<16>:word32], out cx_1020, out di_1021, out ds_224)
	fn0800_401E(ds_224, Mem234[ss:sp_173 + 6<16>:byte], Mem234[ss:sp_173 + 8<16>:word32], out cx_1022, out dx_1023, out bx_1024, out ds_239)
	dx_248 = Mem234[ds_239:0x2A07<16>:word16]
	Mem254[ss:sp_173 + 0xA<16>:word16] = SLICE(SEQ(Mem234[ds_239:0x2A09<16>:word16], dx_248) - 0x1C<32>, word16, 16)
	Mem256[ss:sp_173 + 8<16>:word16] = dx_248 - 0x1C<16>
	dx_258 = Mem256[ds_239:0x2A07<16>:word16]
	Mem265[ss:sp_173 + 6<16>:word16] = SLICE(SEQ(Mem256[ds_239:0x2A09<16>:word16], dx_258) - 0x1C<32>, word16, 16)
	Mem267[ss:sp_173 + 4<16>:word16] = dx_258 - 0x1C<16>
	bp_269 = fn0800_75EA(ds_239, Mem267[ss:sp_173 + 4<16>:word16], Mem267[ss:sp_173 + 6<16>:word16], Mem267[ss:sp_173 + 8<16>:word32], out si_1025, out ds_273)
	ax_dx_837 = Mem267[ds_273:0x2A07<16>:ui32] - 0x1C<32> - Mem267[ds_273:0x2A03<16>:ui32] + Mem267[ds_273:0x4E88<16>:ui32]
	Mem302[ss:bp_269 - 6<i16>:word16] = SLICE(ax_dx_837 + 0xE<32>, word16, 16)
	Mem303[ss:bp_269 - 8<i16>:word16] = SLICE(ax_dx_837, word16, 0) + 0xE<16>
	sp_277 = <invalid>
	sp_282 = sp_277 + 8<16>
l0800_6836:
l0800_68F1:
	ds_320 = fn0800_409C(ds_103, Mem312[ds_103:0x2A07<16>:word16], Mem309[ds_103:0x2A09<16>:word16], Mem98[ds_103:0x29DF<16>:word32])
	fn0800_ACB3(ds_320, Mem339[ds_320:0x29DF<16>:word32], 0xE<32>, 1<16>, out cx_1026)
	bp_371 = fn0800_75EA(ds_320, Mem366[ds_320:0x2A07<16>:word16], Mem363[ds_320:0x2A09<16>:word16], Mem345[ds_320:0x2A07<16>:word32], out si_1027, out ds_375)
	ax_dx_843 = Mem369[ds_375:0x2A07<16>:ui32] - Mem369[ds_375:0x2A03<16>:ui32] + Mem369[ds_375:0x4E88<16>:ui32]
	Mem400[ss:bp_371 - 6<i16>:word16] = SLICE(ax_dx_843 + 0xE<32>, word16, 16)
	Mem401[ss:bp_371 - 8<i16>:word16] = SLICE(ax_dx_843, word16, 0) + 0xE<16>
	sp_379 = <invalid>
	sp_384 = sp_379 + 8<16>
l0800_6959:
	sp_406 = sp_405 - 2<i16>
	Mem408[ss:sp_406:word16] = Mem403[ds_402:0x29E1<16>:word16]
	Mem411[ss:sp_406 - 2<i16>:word16] = Mem408[ds_402:0x29DF<16>:word16]
	branch (SLICE(fn0800_AD2F(ds_402, Mem411[ss:sp_406 - 2<i16>:segptr32]), word16, 0) & 1<16>) == 0<16> l0800_6988
l0800_696F:
	Mem430[ss:sp_406:word16] = Mem411[ds_402:0x29E1<16>:word16]
	Mem433[ss:sp_406 - 2<i16>:word16] = Mem430[ds_402:0x29DF<16>:word16]
	Mem438[ss:sp_406 - 4<i16>:word16] = 0x90<16>
	fn0800_4047(ds_402, Mem438[ss:sp_406 - 4<i16>:byte], Mem438[ss:sp_406 - 2<i16>:segptr32], out cx_1034, out dx_1035, out bx_1036, out di_1037, out ds_445)
	Mem457[ss:bp_451 - 8<i16>:ui32] = Mem453[ss:bp_451 - 8<i16>:ui32] + 1<32>
l0800_6988:
	sp_463 = sp_405 - 2<i16>
	Mem465[ss:sp_463:word16] = Mem460[ds_459:0x29E1<16>:word16]
	Mem468[ss:sp_463 - 2<i16>:word16] = Mem465[ds_459:0x29DF<16>:word16]
	Mem474[ss:sp_463 - 4<i16>:word16] = 0<16>
	Mem476[ss:sp_463 - 6<i16>:word16] = 0<16>
	ds_481 = fn0800_409C(ds_459, Mem476[ss:sp_463 - 6<i16>:word16], Mem476[ss:sp_463 - 4<i16>:word16], Mem476[ss:sp_463 - 2<i16>:word32])
	Mem492[ss:sp_463:word16] = Mem476[ds_481:0x29E1<16>:word16]
	Mem495[ss:sp_463 - 2<i16>:word16] = Mem492[ds_481:0x29DF<16>:word16]
	dx_ax_1011 = fn0800_AD2F(ds_481, Mem495[ss:sp_463 - 2<i16>:segptr32])
	Mem510[ds_481:0x2A05<16>:word16] = SLICE(dx_ax_1011 + 0xFFFFFFE0<32>, word16, 16)
	Mem511[ds_481:0x2A03<16>:word16] = SLICE(dx_ax_1011, word16, 0) + 0xFFE0<16>
	Mem517[ss:sp_463:word16] = 0<16>
	Mem520[ss:sp_463 - 2<i16>:word16] = 0<16>
	Mem522[ss:sp_463 - 4<i16>:word16] = 2<16>
	Mem525[ss:sp_463 - 6<i16>:word16] = Mem522[ds_481:0x29E1<16>:word16]
	Mem528[ss:sp_463 - 8<i16>:word16] = Mem525[ds_481:0x29DF<16>:word16]
	fn0800_ACB3(ds_481, Mem528[ss:sp_463 - 8<i16>:segptr32], Mem528[ss:sp_463 - 4<i16>:ui32], Mem528[ss:sp_463:word16], out cx_1029)
	Mem543[ss:sp_463:word16] = Mem528[ds_481:0x29E1<16>:word16]
	Mem546[ss:sp_463 - 2<i16>:word16] = Mem543[ds_481:0x29DF<16>:word16]
	Mem566[ss:bp_451 - 8<i16>:ui32] = Mem562[ss:bp_451 - 8<i16>:ui32] - fn0800_3F58(ds_481, Mem546[ss:sp_463 - 2<i16>:word32], out di_1030, out ds_551)
	Mem570[ss:sp_463:word16] = Mem566[ds_551:0x29E1<16>:word16]
	Mem573[ss:sp_463 - 2<i16>:word16] = Mem570[ds_551:0x29DF<16>:word16]
	Mem576[ss:sp_463 - 4<i16>:word16] = Mem573[ds_551:0x2A05<16>:word16]
	Mem579[ss:sp_463 - 6<i16>:word16] = Mem576[ds_551:0x2A03<16>:word16]
	ds_584 = fn0800_409C(ds_551, Mem579[ss:sp_463 - 6<i16>:word16], Mem579[ss:sp_463 - 4<i16>:word16], Mem579[ss:sp_463 - 2<i16>:word32])
	Mem597[ss:sp_463:word16] = 0<16>
	Mem599[ss:sp_463 - 2<i16>:word16] = 0<16>
	Mem601[ss:sp_463 - 4<i16>:word16] = 0<16>
	Mem604[ss:sp_463 - 6<i16>:word16] = Mem601[ds_584:0x29E5<16>:word16]
	Mem607[ss:sp_463 - 8<i16>:word16] = Mem604[ds_584:0x29E3<16>:word16]
	fn0800_ACB3(ds_584, Mem607[ss:sp_463 - 8<i16>:segptr32], Mem607[ss:sp_463 - 4<i16>:ui32], Mem607[ss:sp_463:word16], out cx_1031)
	Mem622[ss:sp_463:word16] = Mem607[ds_584:0x29E5<16>:word16]
	Mem625[ss:sp_463 - 2<i16>:word16] = Mem622[ds_584:0x29E3<16>:word16]
	branch fn0800_3E27(ds_584, Mem625[ss:sp_463 - 2<i16>:word32], out cx_1032, out di_1033, out ds_630) == 0x601A<16> l0800_6A1E
l0800_6A1E:
	Mem642[ss:sp_463:word16] = Mem625[ds_630:0x29E5<16>:word16]
	Mem645[ss:sp_463 - 2<i16>:word16] = Mem642[ds_630:0x29E3<16>:word16]
	dx_ax_1038 = fn0800_3E5D(ds_630, Mem645[ss:sp_463 - 2<i16>:word32], out ds_650)
	Mem660[ss:sp_463:word16] = SLICE(dx_ax_1038, word16, 0)
	Mem662[ss:sp_463 - 2<i16>:word16] = SLICE(dx_ax_1038, word16, 16)
	Mem665[ss:sp_463 - 4<i16>:word16] = Mem662[ds_650:0x29E5<16>:word16]
	Mem668[ss:sp_463 - 6<i16>:word16] = Mem665[ds_650:0x29E3<16>:word16]
	bx_cx_853 = SEQ(Mem668[ss:sp_463 - 2<16>:word16], Mem668[ss:sp_463:word16]) + fn0800_3E5D(ds_650, Mem668[ss:sp_463 - 6<i16>:word32], out ds_673)
	Mem690[ss:bp_451 - 2<i16>:word16] = SLICE(bx_cx_853, word16, 16)
	Mem691[ss:bp_451 - 4<i16>:word16] = SLICE(bx_cx_853, word16, 0)
	Mem694[ss:sp_463:word16] = Mem691[ds_673:0x29E5<16>:word16]
	Mem697[ss:sp_463 - 2<i16>:word16] = Mem694[ds_673:0x29E3<16>:word16]
	dx_ax_1039 = fn0800_3E5D(ds_673, Mem697[ss:sp_463 - 2<i16>:word32], out ds_702)
	Mem710[ss:bp_451 - 10<i16>:word16] = SLICE(dx_ax_1039, word16, 16)
	Mem711[ss:bp_451 - 12<i16>:word16] = SLICE(dx_ax_1039, word16, 0)
	branch Mem711[ss:bp_451 - 4<i16>:ui32] + Mem711[ss:bp_451 - 12<i16>:ui32] <=u Mem711[ds_702:0x2A03<16>:ui32] + Mem711[ss:bp_451 - 8<i16>:ui32] l0800_6AA4
l0800_6A80:
	Mem754[ss:bp_451 - 8<i16>:ui32] = Mem750[ss:bp_451 - 8<i16>:ui32] + ((Mem711[ss:bp_451 - 4<i16>:ui32] + Mem711[ss:bp_451 - 12<i16>:ui32]) - (Mem711[ds_702:0x2A03<16>:ui32] + Mem711[ss:bp_451 - 8<i16>:ui32]))
l0800_6A1B:
l0800_6AA4:
	sp_762 = sp_405 - 2<i16>
	Mem764[ss:sp_762:word16] = 0<16>
	Mem767[ss:sp_762 - 2<i16>:word16] = 0<16>
	Mem769[ss:sp_762 - 4<i16>:word16] = 0xA<16>
	Mem773[ss:sp_762 - 6<i16>:word16] = Mem769[ds_770:0x29E1<16>:word16]
	Mem776[ss:sp_762 - 8<i16>:word16] = Mem773[ds_770:0x29DF<16>:word16]
	fn0800_ACB3(ds_770, Mem776[ss:sp_762 - 8<i16>:segptr32], Mem776[ss:sp_762 - 4<i16>:ui32], Mem776[ss:sp_762:word16], out cx_1040)
	Mem791[ss:sp_762:word16] = Mem776[ds_770:0x29E1<16>:word16]
	Mem794[ss:sp_762 - 2<i16>:word16] = Mem791[ds_770:0x29DF<16>:word16]
	Mem798[ss:sp_762 - 4<i16>:word16] = Mem794[ss:bp_451 - 6<i16>:word16]
	Mem801[ss:sp_762 - 6<i16>:word16] = Mem798[ss:bp_451 - 8<i16>:word16]
	dsOut = fn0800_409C(ds_770, Mem801[ss:sp_762 - 6<i16>:word16], Mem801[ss:sp_762 - 4<i16>:word16], Mem801[ss:sp_762 - 2<i16>:word32])
	return 0<16>
l0800_67E9:
	dsOut = ds
	return 3<16>
fn0800_67BF_exit:


word16 fn0800_6AD4(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_0DE8 ds:[0..15]-fn0800_0DE8
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_6AD4_entry:
l0800_6AD4:
	ax_22 = (CONVERT(Mem12[ds:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem12[ds:0x2E76<16>:byte], uint8, uint16)
	branch Mem12[ds:0x2A09<16>:word16] >u 0<16> l0800_6B04
l0800_6AF4:
	branch Mem12[ds:0x2A09<16>:word16] != 0<16> l0800_6AFC
l0800_6AF6:
	branch ax_22 <u Mem12[ds:0x2A07<16>:word16] l0800_6B04
l0800_6B04:
	dx_ax_938 = fn0800_3E5D(ds, Mem12[ds:0x29E3<16>:word32], out ds_43)
	ax_39 = SLICE(dx_ax_938, word16, 0) (alias)
	branch SLICE(dx_ax_938, word16, 16) != 0<16> l0800_6B1B
l0800_6B16:
	branch ax_39 == 0x3F3<16> l0800_6B23
l0800_6B23:
	ds_129 = fn0800_409C(ds_43, 0x3F3<16>, 0<16>, Mem38[ds_43:0x29DF<16>:word32])
l0800_6B38:
	dx_ax_940 = fn0800_3E5D(ds_129, Mem87[ds_129:0x29E3<16>:word32], out ds_100)
	ax_96 = SLICE(dx_ax_940, word16, 0) (alias)
	dx_101 = SLICE(dx_ax_940, word16, 16) (alias)
	ds_129 = fn0800_409C(ds_100, ax_96, dx_101, Mem113[ds_100:0x29DF<16>:word32])
	dwLoc0A_928 = dx_ax_940 (alias)
l0800_6B84:
	wLoc0A_690 = SLICE(dwLoc0A_928, word16, 0) (alias)
	v30_147 = SLICE(dwLoc0A_928 - 1<32>, word16, 16) (alias)
	branch dwLoc0A_928 != 0<16> l0800_6B66
l0800_6B66:
	v50_155 = Mem148[ds_129:0x29E1<16>:word16]
	v51_159 = Mem158[ds_129:0x29DF<16>:word16]
	dx_ax_939 = fn0800_3E5D(ds_129, Mem161[ds_129:0x29E3<16>:word32], out ds_172)
	ds_129 = fn0800_409C(ds_172, SLICE(dx_ax_939, word16, 0), SLICE(dx_ax_939, word16, 16), SEQ(v50_155, v51_159))
	dwLoc0A_928 = SEQ(v30_147, wLoc0A_690 - 1<16>) (alias)
l0800_6B96:
	branch dx_ax_940 != 0<16> l0800_6B38
l0800_6B9E:
	v31_204 = Mem148[ds_129:0x29E1<16>:word16]
	v32_207 = Mem206[ds_129:0x29DF<16>:word16]
	dx_ax_931 = fn0800_3E5D(ds_129, Mem209[ds_129:0x29E3<16>:word32], out ds_220)
	ds_241 = fn0800_409C(ds_220, SLICE(dx_ax_931, word16, 0) + 1<16>, SLICE(dx_ax_931 + 1<32>, word16, 16), SEQ(v31_204, v32_207))
	dx_ax_933 = fn0800_3E5D(ds_241, Mem236[ds_241:0x29E3<16>:word32], out ds_260)
	dx_ax_932 = fn0800_3E5D(ds_260, Mem270[ds_260:0x29E3<16>:word32], out ds_281)
	ds_320 = fn0800_409C(ds_281, SLICE(dx_ax_933, word16, 0), SLICE(dx_ax_933, word16, 16), Mem303[ds_281:0x29DF<16>:word32])
	ds_349 = fn0800_409C(ds_320, SLICE(dx_ax_932, word16, 0) + 1<16>, SLICE(dx_ax_932 + 1<32>, word16, 16), Mem315[ds_320:0x29DF<16>:word32])
	ds_390 = fn0800_409C(ds_349, (CONVERT(Mem344[ds_349:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem344[ds_349:0x2E76<16>:byte], uint8, uint16) - 0xC<16> >>u 2<16>, 0<16>, Mem370[ds_349:0x29DF<16>:word32])
	dx_ax_941 = fn0800_AD2F(ds_390, Mem385[ds_390:0x29DF<16>:word32])
	Mem416[ds_390:0x4E8E<16>:word16] = SLICE(dx_ax_941, word16, 16)
	Mem417[ds_390:0x4E8C<16>:word16] = SLICE(dx_ax_941, word16, 0)
	ax_dx_662 = dx_ax_932 - dx_ax_933
	dwLoc06_934 = SEQ(SLICE(ax_dx_662 + 1<32>, word16, 16), SLICE(ax_dx_662, word16, 0) + 1<16>) (alias)
l0800_6CAF:
	wLoc06_748 = SLICE(dwLoc06_934, word16, 0) (alias)
	branch dwLoc06_934 != 0<16> l0800_6C89
l0800_6C89:
	v56_432 = Mem424[ds_390:0x29E1<16>:word16]
	v57_436 = Mem435[ds_390:0x29DF<16>:word16]
	dx_ax_942 = fn0800_3E5D(ds_390, Mem438[ds_390:0x29E3<16>:word32], out ds_449)
	ds_390 = fn0800_409C(ds_449, SLICE(dx_ax_942, word16, 0), SLICE(dx_ax_942, word16, 16), SEQ(v56_432, v57_436))
	dwLoc06_934 = SEQ(SLICE(dwLoc06_934 - 1<32>, word16, 16), wLoc06_748 - 1<16>) (alias)
l0800_6CB7:
	fn0800_4152(ds_390, SEQ(ds_390, 0x2E77<16>), (CONVERT(Mem486[ds_390:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem486[ds_390:0x2E76<16>:byte], uint8, uint16), 0<16>, Mem424[ds_390:0x29DF<16>:word32], out si_943, out ds_513)
l0800_6E93:
	dx_ax_944 = fn0800_AD2F(ds_513, Mem508[ds_513:0x29E3<16>:word32])
	ax_532 = SLICE(dx_ax_944, word16, 0) (alias)
	dx_535 = SLICE(dx_ax_944, word16, 16) (alias)
	branch dx_535 >=u Mem531[ds_513:0x2A09<16>:word16] l0800_6EAA
l0800_6EAA:
	branch dx_535 != Mem531[ds_513:0x2A09<16>:word16] l0800_6EB5
l0800_6EAC:
	branch ax_532 >=u Mem531[ds_513:0x2A07<16>:word16] l0800_6EB5
l0800_6EB5:
	dsOut = ds_513
	return 0<16>
l0800_6EB2:
l0800_6EA7:
l0800_6CE4:
	dx_ax_945 = fn0800_3E5D(ds_513, Mem531[ds_513:0x29E3<16>:word32], out ds_573)
	ax_569 = SLICE(dx_ax_945, word16, 0) (alias)
	dx_574 = SLICE(dx_ax_945, word16, 16) (alias)
	cx_592 = 7<16>
	bx_593 = 0x6EBC<16>
l0800_6D0D:
	branch Mem591[0x800<16>:bx_593:word16] != ax_569 l0800_6D1E
l0800_6D15:
	branch Mem591[0x800<16>:bx_593 + 14<i16>:word16] == (dx_574 & 0x3FFF<16>) l0800_6D26
l0800_6D26:
	call Mem591[0x800<16>:bx_593 + 28<i16>:word16] (retsize: 0;)
		uses: bx:bx_612,ch:ch_925,Mem:Mem591
		defs: ax:ax_609,bx:bx_612,cx:cx_610
	dsOut = ds_573
	ch_925 = SLICE(cx_610, byte, 8) (alias)
	return ax_609
l0800_6D1E:
	bx_593 = bx_593 + 2<16>
	cx_592 = cx_592 - 1<16>
	branch cx_592 != 0<16> l0800_6D0D
l0800_6D23:
l0800_6E8B:
	dsOut = ds_573
	return 9<16>
l0800_6B1B:
	dsOut = ds_43
	return 3<16>
l0800_6AFC:
	dsOut = ds
	return 3<16>
fn0800_6AD4_exit:


void fn0800_6EE6(word16 cx, word16 dx, word16 bx, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_6EE6_entry:
l0800_6EE6:
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x2223<16>), out di_53)
	return
fn0800_6EE6_exit:


void fn0800_6EFF(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_6EFF_entry:
l0800_6EFF:
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x2231<16>), out di_75)
	branch wArg02 <=u 9<16> l0800_6F1E
l0800_6F13:
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x223E<16>), out di_76)
l0800_6F1E:
	return
fn0800_6EFF_exit:


void fn0800_6F20(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_6F20_entry:
l0800_6F20:
	dx_ax_1540 = fn0800_3E5D(ds, Mem7[ds:0x29E3<16>:word32], out ds_103)
	dx_ax_1541 = fn0800_8C69(SLICE(dx_ax_1540, word16, 0), 2<8>, SLICE(dx_ax_1540, word16, 16))
	sp_36 = <invalid>
	Mem45[ss:sp_36 - 2<i16>:word16] = Mem42[ds_103:0x29E5<16>:word16]
	Mem48[ss:sp_36 - 4<i16>:word16] = Mem45[ds_103:0x29E3<16>:word16]
	dx_ax_1535 = fn0800_AD2F(ds_103, Mem48[ss:sp_36 - 4<i16>:segptr32])
	Mem64[ss:sp_36 - 2<i16>:word16] = 1<16>
	dx_35 = SLICE(dx_ax_1541, word16, 16) (alias)
	Mem67[ss:sp_36 - 4<i16>:word16] = dx_35
	ax_32 = SLICE(dx_ax_1541, word16, 0) (alias)
	Mem70[ss:sp_36 - 6<i16>:word16] = ax_32
	Mem73[ss:sp_36 - 8<i16>:word16] = Mem70[ds_103:0x29E5<16>:word16]
	Mem76[ss:sp_36 - 10<i16>:word16] = Mem73[ds_103:0x29E3<16>:word16]
	fn0800_ACB3(ds_103, Mem76[ss:sp_36 - 10<i16>:segptr32], Mem76[ss:sp_36 - 6<i16>:ui32], Mem76[ss:sp_36 - 2<i16>:word16], out cx_1542)
	bp_516 = fp - 2<i16>
	dx_52 = SLICE(dx_ax_1535, word16, 16) (alias)
	ax_49 = SLICE(dx_ax_1535, word16, 0) (alias)
	sp_1231 = sp_36
l0800_6FCC:
	sp_93 = sp_1231 - 2<i16>
	Mem95[ss:sp_93:word16] = Mem90[ds_103:0x29E5<16>:word16]
	Mem98[ss:sp_93 - 2<i16>:word16] = Mem95[ds_103:0x29E3<16>:word16]
	dx_ax_1543 = fn0800_3F58(ds_103, Mem98[ss:sp_93 - 2<i16>:word32], out di_1544, out ds_103)
	ax_99 = SLICE(dx_ax_1543, word16, 0) (alias)
	branch SLICE(dx_ax_1543, word16, 16) != 0<16> l0800_6FE3
l0800_6FDE:
	branch ax_99 == 0x3EC<16> l0800_6F6D
l0800_6F6D:
	Mem121[ss:sp_93:word16] = 1<16>
	Mem128[ss:sp_93 - 2<i16>:word16] = 0<16>
	Mem130[ss:sp_93 - 4<i16>:word16] = 4<16>
	Mem133[ss:sp_93 - 6<i16>:word16] = Mem130[ds_103:0x29E5<16>:word16]
	Mem136[ss:sp_93 - 8<i16>:word16] = Mem133[ds_103:0x29E3<16>:word16]
	fn0800_ACB3(ds_103, Mem136[ss:sp_93 - 8<i16>:segptr32], Mem136[ss:sp_93 - 4<i16>:ui32], Mem136[ss:sp_93:word16], out cx_1546)
	sp_1231 = sp_93 + 2<16>
l0800_6F86:
	sp_153 = sp_1231 - 2<i16>
	Mem155[ss:sp_153:word16] = Mem150[ds_103:0x29E5<16>:word16]
	Mem158[ss:sp_153 - 2<i16>:word16] = Mem155[ds_103:0x29E3<16>:word16]
	dx_ax_1572 = fn0800_3E5D(ds_103, Mem158[ss:sp_153 - 2<i16>:word32], out ds_103)
	dx_ax_1538 = fn0800_8C69(SLICE(dx_ax_1572, word16, 0), 2<8>, SLICE(dx_ax_1572, word16, 16))
	ax_173 = SLICE(dx_ax_1538, word16, 0) (alias)
	sp_177 = <invalid>
	branch dx_ax_1538 == 0<16> l0800_6FC4
l0800_6FA4:
	Mem192[ss:sp_177 - 2<i16>:word16] = 1<16>
	Mem201[ss:sp_177 - 4<i16>:word16] = SLICE(dx_ax_1538 + 4<32>, word16, 16)
	Mem203[ss:sp_177 - 6<i16>:word16] = ax_173 + 4<16>
	Mem206[ss:sp_177 - 8<i16>:word16] = Mem203[ds_103:0x29E5<16>:word16]
	Mem209[ss:sp_177 - 10<i16>:word16] = Mem206[ds_103:0x29E3<16>:word16]
	fn0800_ACB3(ds_103, Mem209[ss:sp_177 - 10<i16>:segptr32], Mem209[ss:sp_177 - 6<i16>:ui32], Mem209[ss:sp_177 - 2<i16>:word16], out cx_1568)
l0800_6FC4:
	sp_1231 = sp_177
	branch dx_ax_1538 != 0<16> l0800_6F86
l0800_6FE3:
	Mem237[ss:sp_93:word16] = Mem98[ds_103:0x29E5<16>:word16]
	Mem240[ss:sp_93 - 2<i16>:word16] = Mem237[ds_103:0x29E3<16>:word16]
	dx_ax_1235 = fn0800_AD2F(ds_103, Mem240[ss:sp_93 - 2<i16>:segptr32]) - dx_ax_1535
	dx_256 = SLICE(dx_ax_1235, word16, 16) (alias)
	Mem260[ds_103:0x2A05<16>:word16] = dx_256
	ax_253 = SLICE(dx_ax_1235, word16, 0) (alias)
	Mem261[ds_103:0x2A03<16>:word16] = ax_253
	Mem264[ss:sp_93:word16] = Mem261[ds_103:0x29E1<16>:word16]
	Mem267[ss:sp_93 - 2<i16>:word16] = Mem264[ds_103:0x29DF<16>:word16]
	Mem270[ss:sp_93 - 4<i16>:word16] = wArg04
	Mem273[ss:sp_93 - 6<i16>:word16] = wArg02
	ds_1004 = fn0800_409C(ds_103, Mem273[ss:sp_93 - 6<i16>:word16], Mem273[ss:sp_93 - 4<i16>:word16], Mem273[ss:sp_93 - 2<i16>:word32])
	Mem289[ss:sp_93:word16] = Mem273[ds_1004:0x29E1<16>:word16]
	Mem292[ss:sp_93 - 2<i16>:word16] = Mem289[ds_1004:0x29DF<16>:word16]
	dx_ax_1545 = fn0800_AD2F(ds_1004, Mem292[ss:sp_93 - 2<i16>:segptr32])
	ax_293 = SLICE(dx_ax_1545, word16, 0) (alias)
	dx_296 = SLICE(dx_ax_1545, word16, 16) (alias)
	sp_302 = sp_93 + 2<16>
	branch dx_256 >=u 0<16> l0800_7035
l0800_7035:
	branch dx_256 >u 0<16> l0800_7040
l0800_7037:
	branch ax_253 >u 0x12<16> l0800_7040
l0800_7040:
	Mem317[ss:sp_93:word16] = 0<16>
	Mem321[ss:sp_93 - 2<i16>:word16] = Mem317[ds_1004:0x4E8E<16>:word16]
	Mem324[ss:sp_93 - 4<i16>:word16] = Mem321[ds_1004:0x4E8C<16>:word16]
	Mem327[ss:sp_93 - 6<i16>:word16] = Mem324[ds_1004:0x29E1<16>:word16]
	Mem330[ss:sp_93 - 8<i16>:word16] = Mem327[ds_1004:0x29DF<16>:word16]
	fn0800_ACB3(ds_1004, Mem330[ss:sp_93 - 8<i16>:segptr32], Mem330[ss:sp_93 - 4<i16>:ui32], Mem330[ss:sp_93:word16], out cx_1547)
	Mem345[ss:sp_93:word16] = Mem330[ds_1004:0x29E1<16>:word16]
	Mem348[ss:sp_93 - 2<i16>:word16] = Mem345[ds_1004:0x29DF<16>:word16]
	dx_ax_1548 = fn0800_3E5D(ds_1004, Mem348[ss:sp_93 - 2<i16>:word32], out ds_353)
	Mem369[ss:sp_93:word16] = 0<16>
	Mem372[ss:sp_93 - 2<i16>:word16] = dx_296
	Mem375[ss:sp_93 - 4<i16>:word16] = ax_293
	Mem378[ss:sp_93 - 6<i16>:word16] = Mem375[ds_353:0x29E1<16>:word16]
	Mem381[ss:sp_93 - 8<i16>:word16] = Mem378[ds_353:0x29DF<16>:word16]
	fn0800_ACB3(ds_353, Mem381[ss:sp_93 - 8<i16>:segptr32], Mem381[ss:sp_93 - 4<i16>:ui32], Mem381[ss:sp_93:word16], out cx_1549)
	Mem395[ss:sp_93:word16] = Mem381[ds_353:0x29E1<16>:word16]
	Mem398[ss:sp_93 - 2<i16>:word16] = Mem395[ds_353:0x29DF<16>:word16]
	Mem404[ss:sp_93 - 4<i16>:word16] = 0<16>
	Mem406[ss:sp_93 - 6<i16>:word16] = 0<16>
	ds_411 = fn0800_409C(ds_353, Mem406[ss:sp_93 - 6<i16>:word16], Mem406[ss:sp_93 - 4<i16>:word16], Mem406[ss:sp_93 - 2<i16>:word32])
	Mem422[ss:sp_93:word16] = Mem406[ds_411:0x29E1<16>:word16]
	Mem425[ss:sp_93 - 2<i16>:word16] = Mem422[ds_411:0x29DF<16>:word16]
	Mem428[ss:sp_93 - 4<i16>:word16] = dx_35
	Mem431[ss:sp_93 - 6<i16>:word16] = ax_32
	ds_436 = fn0800_409C(ds_411, Mem431[ss:sp_93 - 6<i16>:word16], Mem431[ss:sp_93 - 4<i16>:word16], Mem431[ss:sp_93 - 2<i16>:word32])
	Mem447[ss:sp_93:word16] = Mem431[ds_436:0x29E1<16>:word16]
	Mem450[ss:sp_93 - 2<i16>:word16] = Mem447[ds_436:0x29DF<16>:word16]
	Mem453[ss:sp_93 - 4<i16>:word16] = SLICE(dx_ax_1548, word16, 16)
	Mem456[ss:sp_93 - 6<i16>:word16] = SLICE(dx_ax_1548, word16, 0)
	ds_461 = fn0800_409C(ds_436, Mem456[ss:sp_93 - 6<i16>:word16], Mem456[ss:sp_93 - 4<i16>:word16], Mem456[ss:sp_93 - 2<i16>:word32])
	Mem474[ss:sp_93:word16] = 0<16>
	Mem477[ss:sp_93 - 2<i16>:word16] = dx_52
	Mem480[ss:sp_93 - 4<i16>:word16] = ax_49
	Mem483[ss:sp_93 - 6<i16>:word16] = Mem480[ds_461:0x29E5<16>:word16]
	Mem486[ss:sp_93 - 8<i16>:word16] = Mem483[ds_461:0x29E3<16>:word16]
	fn0800_ACB3(ds_461, Mem486[ss:sp_93 - 8<i16>:segptr32], Mem486[ss:sp_93 - 4<i16>:ui32], Mem486[ss:sp_93:word16], out cx_1550)
	Mem506[ss:sp_93:word16] = SLICE(dx_ax_1235 - 8<32>, word16, 16)
	Mem508[ss:sp_93 - 2<i16>:word16] = ax_253 - 8<16>
	Mem511[ss:sp_93 - 4<i16>:word16] = dx_256
	Mem514[ss:sp_93 - 6<i16>:word16] = ax_253
	bp_516 = fn0800_75EA(ds_461, Mem514[ss:sp_93 - 6<i16>:word16], Mem514[ss:sp_93 - 4<i16>:word16], Mem514[ss:sp_93 - 2<i16>:word32], out si_1551, out ds_1004)
	Mem535[ds_1004:0x2A03<16>:ui32] = Mem531[ds_1004:0x2A03<16>:ui32] + 8<32>
	sp_524 = <invalid>
	sp_302 = sp_524 + 8<16>
l0800_703D:
l0800_7032:
l0800_70F9:
	ax_539 = Mem538[ds_1004:0x2A05<16>:word16]
	dx_540 = Mem538[ds_1004:0x2A03<16>:word16]
	branch ax_539 >=u Mem538[ss:bp_516 - 22<i16>:word16] l0800_7108
l0800_7108:
	branch ax_539 != Mem538[ss:bp_516 - 22<i16>:word16] l0800_7112
l0800_710A:
	branch dx_540 >=u Mem538[ss:bp_516 - 24<i16>:word16] l0800_7112
l0800_7112:
	sp_554 = sp_302 - 2<i16>
	Mem556[ss:sp_554:word16] = 0<16>
	Mem560[ss:sp_554 - 2<i16>:word16] = Mem556[ss:bp_516 - 2<i16>:word16]
	Mem563[ss:sp_554 - 4<i16>:word16] = Mem560[ss:bp_516 - 4<i16>:word16]
	Mem567[ss:sp_554 - 6<i16>:word16] = Mem563[ds_1004:0x29E1<16>:word16]
	Mem570[ss:sp_554 - 8<i16>:word16] = Mem567[ds_1004:0x29DF<16>:word16]
	fn0800_ACB3(ds_1004, Mem570[ss:sp_554 - 8<i16>:segptr32], Mem570[ss:sp_554 - 4<i16>:ui32], Mem570[ss:sp_554:word16], out cx_1552)
	Mem584[ss:sp_554:word16] = 0<16>
	dx_586 = Mem584[ss:bp_516 - 20<i16>:word16]
	Mem593[ss:sp_554 - 2<i16>:word16] = SLICE(SEQ(Mem584[ss:bp_516 - 18<i16>:word16], dx_586) - 4<32>, word16, 16)
	Mem595[ss:sp_554 - 4<i16>:word16] = dx_586 - 4<16>
	Mem598[ss:sp_554 - 6<i16>:word16] = Mem595[ds_1004:0x29E5<16>:word16]
	Mem601[ss:sp_554 - 8<i16>:word16] = Mem598[ds_1004:0x29E3<16>:word16]
	fn0800_ACB3(ds_1004, Mem601[ss:sp_554 - 8<i16>:segptr32], Mem601[ss:sp_554 - 4<i16>:ui32], Mem601[ss:sp_554:word16], out cx_1553)
	dx_614 = Mem601[ss:bp_516 - 16<i16>:word16]
	Mem621[ss:sp_554:word16] = SLICE(SEQ(Mem601[ss:bp_516 - 14<i16>:word16], dx_614) + 4<32>, word16, 16)
	Mem623[ss:sp_554 - 2<i16>:word16] = dx_614 + 4<16>
	Mem626[ss:sp_554 - 4<i16>:word16] = Mem623[ds_1004:0x29E1<16>:word16]
	Mem629[ss:sp_554 - 6<i16>:word16] = Mem626[ds_1004:0x29DF<16>:word16]
	Mem632[ss:sp_554 - 8<i16>:word16] = Mem629[ds_1004:0x29E5<16>:word16]
	Mem635[ss:sp_554 - 10<i16>:word16] = Mem632[ds_1004:0x29E3<16>:word16]
	bp_637 = fn0800_3B0A(ds_1004, Mem635[ss:sp_554 - 2<i16>:word16], Mem635[ss:sp_554:word16], out si_1554, out ds_641)
	sp_645 = <invalid>
	Mem654[ss:sp_645 + 0xA<16>:word16] = Mem635[ds_641:0x29E5<16>:word16]
	Mem657[ss:sp_645 + 8<16>:word16] = Mem654[ds_641:0x29E3<16>:word16]
	dx_ax_1555 = fn0800_3F58(ds_641, Mem657[ss:sp_645 + 8<16>:word32], out di_1556, out ds_662)
	ax_658 = SLICE(dx_ax_1555, word16, 0) (alias)
	branch SLICE(dx_ax_1555, word16, 16) == 0<16> l0800_7181
l0800_7181:
	branch ax_658 == 0x3EC<16> l0800_7189
l0800_7189:
	Mem680[ss:sp_645 + 0xA<16>:word16] = 1<16>
	Mem687[ss:sp_645 + 8<16>:word16] = 0<16>
	Mem689[ss:sp_645 + 6<16>:word16] = 4<16>
	Mem692[ss:sp_645 + 4<16>:word16] = Mem689[ds_662:0x29E5<16>:word16]
	Mem695[ss:sp_645 + 2<16>:word16] = Mem692[ds_662:0x29E3<16>:word16]
	fn0800_ACB3(ds_662, Mem695[ss:sp_645 + 2<16>:segptr32], Mem695[ss:sp_645 + 6<16>:ui32], Mem695[ss:sp_645 + 0xA<16>:word16], out cx_1567)
	Mem709[ss:sp_645 + 0xA<16>:word16] = Mem695[ds_662:0x29E1<16>:word16]
	Mem712[ss:sp_645 + 8<16>:word16] = Mem709[ds_662:0x29DF<16>:word16]
	Mem719[ss:sp_645 + 6<16>:word16] = 0<16>
	Mem721[ss:sp_645 + 4<16>:word16] = 0x3EC<16>
	ds_662 = fn0800_409C(ds_662, Mem721[ss:sp_645 + 4<16>:word16], Mem721[ss:sp_645 + 6<16>:word16], Mem721[ss:sp_645 + 8<16>:word32])
	sp_1232 = sp_645 + 0xC<16>
l0800_71B7:
	sp_739 = sp_1232 - 2<i16>
	Mem741[ss:sp_739:word16] = Mem736[ds_662:0x29E5<16>:word16]
	Mem744[ss:sp_739 - 2<i16>:word16] = Mem741[ds_662:0x29E3<16>:word16]
	dx_ax_1571 = fn0800_3E5D(ds_662, Mem744[ss:sp_739 - 2<i16>:word32], out ds_749)
	Mem759[ss:bp_637 - 2<i16>:word16] = SLICE(dx_ax_1571, word16, 16)
	ax_745 = SLICE(dx_ax_1571, word16, 0) (alias)
	Mem760[ss:bp_637 - 4<i16>:word16] = ax_745
	Mem763[ss:sp_739:word16] = Mem760[ds_749:0x29E1<16>:word16]
	Mem766[ss:sp_739 - 2<i16>:word16] = Mem763[ds_749:0x29DF<16>:word16]
	Mem769[ss:sp_739 - 4<i16>:word16] = Mem766[ss:bp_637 - 2<i16>:word16]
	Mem771[ss:sp_739 - 6<i16>:word16] = ax_745
	ds_662 = fn0800_409C(ds_749, Mem771[ss:sp_739 - 6<i16>:word16], Mem771[ss:sp_739 - 4<i16>:word16], Mem771[ss:sp_739 - 2<i16>:word32])
	sp_1232 = sp_739 + 2<16>
	branch (Mem771[ss:bp_637 - 4<i16>:word16] | Mem771[ss:bp_637 - 2<i16>:word16]) == 0<16> l0800_7234
l0800_71E5:
	Mem792[ss:sp_739:word16] = Mem771[ds_662:0x29E5<16>:word16]
	Mem795[ss:sp_739 - 2<16>:word16] = Mem792[ds_662:0x29E3<16>:word16]
	dx_ax_1539 = fn0800_3E5D(ds_662, Mem795[ss:sp_739 - 2<16>:word32], out ds_800)
	Mem813[ss:bp_637 - 6<i16>:word16] = SLICE(dx_ax_1539 + 1<32>, word16, 16)
	ax_796 = SLICE(dx_ax_1539, word16, 0) (alias)
	Mem814[ss:bp_637 - 8<i16>:word16] = ax_796 + 1<16>
	Mem817[ss:sp_739:word16] = Mem814[ds_800:0x29E1<16>:word16]
	Mem820[ss:sp_739 - 2<16>:word16] = Mem817[ds_800:0x29DF<16>:word16]
	Mem823[ss:sp_739 - 4<16>:word16] = Mem820[ss:bp_637 - 6<i16>:word16]
	Mem825[ss:sp_739 - 6<i16>:word16] = ax_796 + 1<16>
	ds_830 = fn0800_409C(ds_800, Mem825[ss:sp_739 - 6<i16>:word16], Mem825[ss:sp_739 - 4<i16>:word16], Mem825[ss:sp_739 - 2<i16>:word32])
	dx_ax_1569 = fn0800_8C69(Mem825[ss:bp_637 - 4<i16>:word16], 2<8>, Mem825[ss:bp_637 - 2<i16>:word16])
	sp_846 = <invalid>
	Mem852[ss:sp_846 - 2<i16>:word16] = SLICE(dx_ax_1569, word16, 16)
	Mem854[ss:sp_846 - 4<i16>:word16] = SLICE(dx_ax_1569, word16, 0)
	Mem857[ss:sp_846 - 6<i16>:word16] = Mem854[ds_830:0x29E1<16>:word16]
	Mem860[ss:sp_846 - 8<i16>:word16] = Mem857[ds_830:0x29DF<16>:word16]
	Mem863[ss:sp_846 - 10<i16>:word16] = Mem860[ds_830:0x29E5<16>:word16]
	Mem866[ss:sp_846 - 12<i16>:word16] = Mem863[ds_830:0x29E3<16>:word16]
	sp_876 = <invalid>
	bp_637 = fn0800_3B0A(ds_830, Mem866[ss:sp_846 - 4<i16>:word16], Mem866[ss:sp_846 - 2<i16>:word16], out si_1570, out ds_662)
	sp_1232 = sp_876 + 0xC<16>
l0800_7234:
	branch (Mem885[ss:bp_637 - 4<i16>:word16] | Mem885[ss:bp_637 - 2<i16>:word16]) == 0<16> l0800_723F
l0800_723C:
l0800_7186:
l0800_717E:
l0800_723F:
	Mem900[ds_662:0x4E8C<16>:ui32] = Mem896[ds_662:0x4E8C<16>:ui32] + 4<32>
	return
l0800_710F:
l0800_7105:
l0800_724D:
	ax_dx_1240 = Mem538[ss:bp_516 - 24<i16>:ui32] + Mem538[ds_1004:0x4E88<16>:ui32]
	Mem917[ss:bp_516 - 2<i16>:word16] = SLICE(ax_dx_1240, word16, 16)
	Mem918[ss:bp_516 - 4<i16>:word16] = SLICE(ax_dx_1240, word16, 0)
	branch (Mem918[ds_1004:0x2A03<16>:word16] & 3<16>) == 0<16> l0800_7274
l0800_726C:
	Mem931[ss:bp_516 - 4<i16>:ui32] = Mem927[ss:bp_516 - 4<i16>:ui32] + 2<32>
l0800_7274:
	branch (Mem935[ss:bp_516 - 4<i16>:word16] & 3<16>) == 0<16> l0800_7298
l0800_7298:
	dx_ax_1557 = fn0800_8CAA(Mem935[ss:bp_516 - 4<i16>:word16], 2<8>, Mem935[ss:bp_516 - 2<i16>:word16])
	Mem955[ss:bp_516 - 2<i16>:word16] = SLICE(dx_ax_1557, word16, 16)
	Mem956[ss:bp_516 - 4<i16>:word16] = SLICE(dx_ax_1557, word16, 0)
	sp_1009 = <invalid>
l0800_727F:
	dx_ax_1537 = fn0800_8CAA(Mem935[ss:bp_516 - 4<i16>:word16], 2<8>, Mem935[ss:bp_516 - 2<i16>:word16])
	Mem974[ss:bp_516 - 2<i16>:word16] = SLICE(dx_ax_1537 + 1<32>, word16, 16)
	Mem975[ss:bp_516 - 4<i16>:word16] = SLICE(dx_ax_1537, word16, 0) + 1<16>
	sp_1009 = <invalid>
l0800_72C6:
	branch (Mem977[ds_1004:0x2A03<16>:word16] & 3<16>) != 0<16> l0800_72AB
l0800_72AB:
	sp_987 = sp_1009 - 2<i16>
	Mem989[ss:sp_987:word16] = Mem977[ds_1004:0x29E1<16>:word16]
	Mem992[ss:sp_987 - 2<i16>:word16] = Mem989[ds_1004:0x29DF<16>:word16]
	Mem997[ss:sp_987 - 4<i16>:word16] = 0<16>
	fn0800_4047(ds_1004, Mem997[ss:sp_987 - 4<i16>:byte], Mem997[ss:sp_987 - 2<i16>:segptr32], out cx_1558, out dx_1559, out bx_1560, out di_1561, out ds_1004)
	Mem1015[ds_1004:0x2A03<16>:ui32] = Mem1011[ds_1004:0x2A03<16>:ui32] + 1<32>
	sp_1009 = sp_987 + 2<16>
l0800_72D1:
	sp_1018 = sp_1009 - 2<i16>
	Mem1019[ss:sp_1018:word16] = Mem977[ds_1004:0x29E1<16>:word16]
	Mem1022[ss:sp_1018 - 2<i16>:word16] = Mem1019[ds_1004:0x29DF<16>:word16]
	dx_ax_1562 = fn0800_AD2F(ds_1004, Mem1022[ss:sp_1018 - 2<i16>:segptr32])
	Mem1034[ss:bp_516 - 6<i16>:word16] = SLICE(dx_ax_1562, word16, 16)
	Mem1035[ss:bp_516 - 8<i16>:word16] = SLICE(dx_ax_1562, word16, 0)
	Mem1038[ss:sp_1018:word16] = 1<16>
	ax_dx_1251 = -Mem1038[ds_1004:0x2A03<16>:ui32]
	Mem1051[ss:sp_1018 - 2<i16>:word16] = SLICE(ax_dx_1251 - 4<32>, word16, 16)
	Mem1053[ss:sp_1018 - 4<i16>:word16] = SLICE(ax_dx_1251, word16, 0) - 4<16>
	Mem1056[ss:sp_1018 - 6<i16>:word16] = Mem1053[ds_1004:0x29E1<16>:word16]
	Mem1059[ss:sp_1018 - 8<i16>:word16] = Mem1056[ds_1004:0x29DF<16>:word16]
	fn0800_ACB3(ds_1004, Mem1059[ss:sp_1018 - 8<i16>:segptr32], Mem1059[ss:sp_1018 - 4<i16>:ui32], Mem1059[ss:sp_1018:word16], out cx_1563)
	Mem1074[ss:sp_1018:word16] = Mem1059[ds_1004:0x29E1<16>:word16]
	Mem1077[ss:sp_1018 - 2<i16>:word16] = Mem1074[ds_1004:0x29DF<16>:word16]
	dx_ax_1564 = fn0800_8CAA(Mem1077[ds_1004:0x2A03<16>:word16], 2<8>, Mem1077[ds_1004:0x2A05<16>:word16])
	sp_1085 = <invalid>
	Mem1091[ss:sp_1085 - 2<i16>:word16] = SLICE(dx_ax_1564, word16, 16)
	Mem1093[ss:sp_1085 - 4<i16>:word16] = SLICE(dx_ax_1564, word16, 0)
	ds_1098 = fn0800_409C(ds_1004, Mem1093[ss:sp_1085 - 4<i16>:word16], Mem1093[ss:sp_1085 - 2<i16>:word16], Mem1093[ss:sp_1085:word32])
	ax_1106 = Mem1093[ss:bp_516 - 10<i16>:word16]
	dx_1107 = Mem1093[ss:bp_516 - 12<i16>:word16]
	Mem1109[ss:bp_516 - 26<i16>:word16] = ax_1106 & 0x3FFF<16>
	branch SEQ(ax_1106 & 0x3FFF<16>, dx_1107) <=u Mem1109[ss:bp_516 - 4<i16>:word32] l0800_734D
l0800_7341:
	ax_1118 = Mem1109[ss:bp_516 - 12<i16>:word16]
	Mem1120[ss:bp_516 - 2<i16>:word16] = Mem1109[ss:bp_516 - 26<i16>:word16]
	Mem1121[ss:bp_516 - 4<i16>:word16] = ax_1118
l0800_734D:
	ax_1125 = Mem1124[ss:bp_516 - 10<i16>:word16]
	Mem1128[ss:bp_516 - 4<i16>:word16] = Mem1124[ss:bp_516 - 4<i16>:word16]
	Mem1131[ss:bp_516 - 2<i16>:word16] = Mem1128[ss:bp_516 - 2<i16>:word16] | ax_1125 & 0xC000<16>
	Mem1140[ss:sp_1085 + 2<16>:word16] = 0<16>
	Mem1145[ss:sp_1085:word16] = Mem1140[ds_1098:0x4E8E<16>:word16]
	Mem1148[ss:sp_1085 - 2<i16>:word16] = Mem1145[ds_1098:0x4E8C<16>:word16]
	Mem1151[ss:sp_1085 - 4<i16>:word16] = Mem1148[ds_1098:0x29E1<16>:word16]
	Mem1154[ss:sp_1085 - 6<i16>:word16] = Mem1151[ds_1098:0x29DF<16>:word16]
	fn0800_ACB3(ds_1098, Mem1154[ss:sp_1085 - 6<i16>:segptr32], Mem1154[ss:sp_1085 - 2<i16>:ui32], Mem1154[ss:sp_1085 + 2<i16>:word16], out cx_1565)
	Mem1169[ss:sp_1085 + 2<16>:word16] = Mem1154[ds_1098:0x29E1<16>:word16]
	Mem1172[ss:sp_1085:word16] = Mem1169[ds_1098:0x29DF<16>:word16]
	Mem1175[ss:sp_1085 - 2<i16>:word16] = Mem1172[ss:bp_516 - 2<i16>:word16]
	Mem1178[ss:sp_1085 - 4<i16>:word16] = Mem1175[ss:bp_516 - 4<i16>:word16]
	ds_1183 = fn0800_409C(ds_1098, Mem1178[ss:sp_1085 - 4<i16>:word16], Mem1178[ss:sp_1085 - 2<i16>:word16], Mem1178[ss:sp_1085:word32])
	Mem1196[ss:sp_1085 + 2<16>:word16] = 0<16>
	Mem1199[ss:sp_1085:word16] = Mem1196[ss:bp_516 - 6<i16>:word16]
	Mem1202[ss:sp_1085 - 2<i16>:word16] = Mem1199[ss:bp_516 - 8<i16>:word16]
	Mem1205[ss:sp_1085 - 4<i16>:word16] = Mem1202[ds_1183:0x29E1<16>:word16]
	Mem1208[ss:sp_1085 - 6<i16>:word16] = Mem1205[ds_1183:0x29DF<16>:word16]
	fn0800_ACB3(ds_1183, Mem1208[ss:sp_1085 - 6<i16>:segptr32], Mem1208[ss:sp_1085 - 2<i16>:ui32], Mem1208[ss:sp_1085 + 2<i16>:word16], out cx_1566)
	Mem1225[ds_1183:0x4E8C<16>:ui32] = Mem1221[ds_1183:0x4E8C<16>:ui32] + 4<32>
	return
fn0800_6F20_exit:


word16 fn0800_73AC(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_0DE8 ds:[0..15]-fn0800_0DE8
// Trashed: SCZOP ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_73AC_entry:
l0800_73AC:
	fn0800_4152(ds, SEQ(ds, 0x2E77<16>), (CONVERT(Mem12[ds:0x2E75<16>:byte], uint8, uint16) << 8<8>) + CONVERT(Mem12[ds:0x2E76<16>:byte], uint8, uint16), 0<16>, Mem0[ds:0x29DF<16>:word32], out si_160, out ds_39)
	fn0800_ACB3(ds_39, Mem57[ds_39:0x29DF<16>:word32], 0xFFFFFFFC<32>, 1<16>, out cx_161)
	ds_92 = fn0800_409C(ds_39, Mem84[ds_39:0x2A0F<16>:word16], Mem81[ds_39:0x2A11<16>:word16], Mem63[ds_39:0x29DF<16>:word32])
	fn0800_75EA(ds_92, Mem109[ds_92:0x2A07<16>:word16], Mem106[ds_92:0x2A09<16>:word16], Mem87[ds_92:0x2A07<16>:word32], out si_162, out ds_118)
	dsOut = ds_118
	return 0<16>
fn0800_73AC_exit:


word16 fn0800_741D(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_0DE8
// Trashed: SCZO ax bx cx dx es si Top
// Preserved: P bp di ds sp
fn0800_741D_entry:
l0800_741D:
	bp_223 = fp - 2<i16>
	sp_11 = fp - 8<16>
l0800_75C1:
	sp_18 = sp_11 - 2<i16>
	Mem20[ss:sp_18:word16] = Mem15[ds:0x29E5<16>:word16]
	Mem23[ss:sp_18 - 2<i16>:word16] = Mem20[ds:0x29E3<16>:word16]
	dx_ax_540 = fn0800_AD2F(ds, Mem23[ss:sp_18 - 2<i16>:segptr32])
	ax_24 = SLICE(dx_ax_540, word16, 0) (alias)
	dx_27 = SLICE(dx_ax_540, word16, 16) (alias)
	branch dx_27 >=u Mem23[ds:0x2A09<16>:word16] l0800_75D8
l0800_75D8:
	branch dx_27 != Mem23[ds:0x2A09<16>:word16] l0800_75E3
l0800_75DA:
	branch ax_24 >=u Mem23[ds:0x2A07<16>:word16] l0800_75E3
l0800_75E3:
	return 0<16>
fn0800_741D_exit:
l0800_75E0:
l0800_75D5:
l0800_7427:
	Mem58[ss:sp_18:word16] = Mem23[ds:0x29E5<16>:word16]
	Mem61[ss:sp_18 - 2<i16>:word16] = Mem58[ds:0x29E3<16>:word16]
	ax_62 = fn0800_3E9A(ds, Mem61[ss:sp_18 - 2<i16>:segptr32], out ds)
	branch ax_62 == 0<16> l0800_7449
l0800_7449:
	Mem82[ss:sp_18:word16] = Mem61[ds:0x29E1<16>:word16]
	Mem85[ss:sp_18 - 2<i16>:word16] = Mem82[ds:0x29DF<16>:word16]
	Mem88[ss:sp_18 - 4<i16>:word16] = Mem85[ds:0x29E5<16>:word16]
	Mem91[ss:sp_18 - 6<i16>:word16] = Mem88[ds:0x29E3<16>:word16]
	Mem106[ss:sp_18 - 4<16>:word16] = fn0800_3DCF(ds, Mem91[ss:sp_18 - 6<i16>:segptr32], out ch_541, out di_542, out ds_98)
	fn0800_4047(ds_98, Mem106[ss:sp_18 - 4<16>:byte], Mem106[ss:sp_18 - 2<16>:segptr32], out cx_543, out dx_544, out bx_545, out di_546, out ds)
	sp_11 = sp_18 + 2<16>
l0800_7439:
	branch ax_62 == 1<16> l0800_7469
l0800_7469:
	Mem124[ss:sp_18:word16] = Mem61[ds:0x29E1<16>:word16]
	Mem127[ss:sp_18 - 2<i16>:word16] = Mem124[ds:0x29DF<16>:word16]
	Mem130[ss:sp_18 - 4<i16>:word16] = Mem127[ds:0x29E5<16>:word16]
	Mem133[ss:sp_18 - 6<i16>:word16] = Mem130[ds:0x29E3<16>:word16]
	dx_ax_547 = fn0800_3E5D(ds, Mem133[ss:sp_18 - 6<i16>:word32], out ds_138)
	Mem148[ss:sp_18 - 4<16>:word16] = SLICE(dx_ax_547, word16, 16)
	Mem150[ss:sp_18 - 6<16>:word16] = SLICE(dx_ax_547, word16, 0)
	ds_155 = fn0800_409C(ds_138, Mem150[ss:sp_18 - 6<16>:word16], Mem150[ss:sp_18 - 4<16>:word16], Mem150[ss:sp_18 - 2<16>:word32])
	Mem166[ss:sp_18:word16] = Mem150[ds_155:0x29E5<16>:word16]
	Mem169[ss:sp_18 - 2<i16>:word16] = Mem166[ds_155:0x29E3<16>:word16]
	ax_170 = fn0800_3FAD(ds_155, Mem169[ss:sp_18 - 2<i16>:word32], out di_548, out ds_174)
	Mem183[ss:bp_223 - 2<i16>:word16] = 0<16>
	Mem184[ss:bp_223 - 4<i16>:word16] = ax_170
	Mem187[ss:sp_18:word16] = Mem184[ds_174:0x29E1<16>:word16]
	Mem190[ss:sp_18 - 2<i16>:word16] = Mem187[ds_174:0x29DF<16>:word16]
	Mem196[ss:sp_18 - 4<i16>:word16] = 0<16>
	fn0800_401E(ds_174, Mem196[ss:sp_18 + 4<i16>:byte], Mem196[ss:sp_18 - 2<i16>:word32], out cx_549, out dx_550, out bx_551, out ds_201)
	Mem212[ss:sp_18:word16] = Mem196[ss:bp_223 - 2<i16>:word16]
	Mem215[ss:sp_18 - 2<i16>:word16] = Mem212[ss:bp_223 - 4<i16>:word16]
	Mem218[ss:sp_18 - 4<i16>:word16] = Mem215[ss:bp_223 - 2<i16>:word16]
	Mem221[ss:sp_18 - 6<i16>:word16] = Mem218[ss:bp_223 - 4<i16>:word16]
	bp_223 = fn0800_75EA(ds_201, Mem221[ss:sp_18 - 6<i16>:word16], Mem221[ss:sp_18 - 4<i16>:word16], Mem221[ss:sp_18 - 2<i16>:word32], out si_552, out ds_227)
	sp_231 = <invalid>
	Mem239[ss:sp_231 + 6<16>:word16] = 1<16>
	dx_241 = Mem239[ds_227:0x2A03<16>:word16]
	Mem252[ss:sp_231 + 4<16>:word16] = -SLICE(SEQ(Mem239[ds_227:0x2A05<16>:word16], dx_241) + 2<32>, word16, 16) - (dx_241 != 0xFFFE<16>)
	Mem254[ss:sp_231 + 2<16>:word16] = -(dx_241 + 2<16>)
	Mem257[ss:sp_231:word16] = Mem254[ds_227:0x29E1<16>:word16]
	Mem260[ss:sp_231 - 2<i16>:word16] = Mem257[ds_227:0x29DF<16>:word16]
	fn0800_ACB3(ds_227, Mem260[ss:sp_231 - 2<i16>:segptr32], Mem260[ss:sp_231 + 2<i16>:ui32], Mem260[ss:sp_231 + 6<i16>:word16], out cx_553)
	Mem275[ss:sp_231 + 6<16>:word16] = Mem260[ds_227:0x29E1<16>:word16]
	Mem278[ss:sp_231 + 4<16>:word16] = Mem275[ds_227:0x29DF<16>:word16]
	Mem281[ss:sp_231 + 2<16>:word16] = Mem278[ds_227:0x2A03<16>:word16]
	fn0800_40BF(ds_227, Mem281[ss:sp_231 + 2<16>:byte], Mem281[ss:sp_231 + 4<16>:word32], out ds)
	dx_295 = Mem281[ds:0x2A03<16>:word16]
	branch Mem281[ds:0x2A05<16>:word16] != Mem281[ss:bp_223 - 2<i16>:word16] l0800_754A
l0800_7506:
	branch dx_295 != Mem281[ss:bp_223 - 4<i16>:word16] l0800_754A
l0800_754A:
	Mem304[ss:sp_231 + 6<16>:word16] = 1<16>
	Mem308[ss:sp_231 + 4<16>:word16] = Mem304[ds:0x2A05<16>:word16]
	Mem311[ss:sp_231 + 2<16>:word16] = Mem308[ds:0x2A03<16>:word16]
	Mem314[ss:sp_231:word16] = Mem311[ds:0x29E1<16>:word16]
	Mem317[ss:sp_231 - 2<i16>:word16] = Mem314[ds:0x29DF<16>:word16]
	fn0800_ACB3(ds, Mem317[ss:sp_231 - 2<i16>:segptr32], Mem317[ss:sp_231 + 2<i16>:ui32], Mem317[ss:sp_231 + 6<i16>:word16], out cx_561)
	sp_11 = sp_231 + 8<16>
l0800_750B:
	Mem332[ss:sp_231 + 6<16>:word16] = 1<16>
	ax_dx_515 = -Mem332[ss:bp_223 - 4<i16>:ui32]
	Mem341[ss:sp_231 + 4<16>:word16] = SLICE(ax_dx_515, word16, 16)
	Mem343[ss:sp_231 + 2<16>:word16] = SLICE(ax_dx_515, word16, 0)
	Mem346[ss:sp_231:word16] = Mem343[ds:0x29E5<16>:word16]
	Mem349[ss:sp_231 - 2<i16>:word16] = Mem346[ds:0x29E3<16>:word16]
	fn0800_ACB3(ds, Mem349[ss:sp_231 - 2<i16>:segptr32], Mem349[ss:sp_231 + 2<i16>:ui32], Mem349[ss:sp_231 + 6<i16>:word16], out cx_562)
	Mem364[ss:sp_231 + 6<16>:word16] = Mem349[ss:bp_223 - 2<i16>:word16]
	Mem367[ss:sp_231 + 4<16>:word16] = Mem364[ss:bp_223 - 4<i16>:word16]
	Mem370[ss:sp_231 + 2<16>:word16] = Mem367[ds:0x29E1<16>:word16]
	Mem373[ss:sp_231:word16] = Mem370[ds:0x29DF<16>:word16]
	Mem376[ss:sp_231 - 2<i16>:word16] = Mem373[ds:0x29E5<16>:word16]
	Mem379[ss:sp_231 - 4<i16>:word16] = Mem376[ds:0x29E3<16>:word16]
	sp_389 = <invalid>
	bp_223 = fn0800_3B0A(ds, Mem379[ss:sp_231 + 4<i16>:word16], Mem379[ss:sp_231 + 6<i16>:word16], out si_563, out ds)
	sp_11 = sp_389 + 0xC<16>
l0800_743E:
	branch ax_62 != 3<16> l0800_7446
l0800_7446:
l0800_758F:
	Mem400[ss:sp_18:word16] = Mem61[ds:0x29E5<16>:word16]
	Mem403[ss:sp_18 - 2<i16>:word16] = Mem400[ds:0x29E3<16>:word16]
	bx_cx_513 = Mem403[ds:0x2A07<16>:ui32] - fn0800_AD2F(ds, Mem403[ss:sp_18 - 2<i16>:segptr32])
	Mem422[ss:sp_18:word16] = SLICE(bx_cx_513, word16, 16)
	Mem424[ss:sp_18 - 2<i16>:word16] = SLICE(bx_cx_513, word16, 0)
	Mem427[ss:sp_18 - 4<i16>:word16] = Mem424[ds:0x29E1<16>:word16]
	Mem430[ss:sp_18 - 6<i16>:word16] = Mem427[ds:0x29DF<16>:word16]
	Mem433[ss:sp_18 - 8<i16>:word16] = Mem430[ds:0x29E5<16>:word16]
	Mem436[ss:sp_18 - 10<i16>:word16] = Mem433[ds:0x29E3<16>:word16]
	sp_446 = <invalid>
	bp_223 = fn0800_3B0A(ds, Mem436[ss:sp_18 - 2<i16>:word16], Mem436[ss:sp_18:word16], out si_554, out ds)
	sp_11 = sp_446 + 0xC<16>
l0800_7443:
l0800_7566:
	si_453 = 0<16>
l0800_7588:
	branch si_453 != 3<16> l0800_756A
l0800_756A:
	sp_464 = sp_11 - 2<i16>
	Mem466[ss:sp_464:word16] = Mem461[ds:0x29E1<16>:word16]
	Mem469[ss:sp_464 - 2<i16>:word16] = Mem466[ds:0x29DF<16>:word16]
	Mem472[ss:sp_464 - 4<i16>:word16] = Mem469[ds:0x29E5<16>:word16]
	Mem475[ss:sp_464 - 6<i16>:word16] = Mem472[ds:0x29E3<16>:word16]
	Mem490[ss:sp_464 - 4<16>:word16] = fn0800_3DCF(ds, Mem475[ss:sp_464 - 6<i16>:segptr32], out ch_555, out di_556, out ds_482)
	fn0800_4047(ds_482, Mem490[ss:sp_464 - 4<16>:byte], Mem490[ss:sp_464 - 2<16>:segptr32], out cx_557, out dx_558, out bx_559, out di_560, out ds)
	si_453 = si_453 + 1<16>
l0800_758D:


word16 fn0800_75EA(selector ds, word16 wArg02, word16 wArg04, word32 dwArg06, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_12E2
//      fn0800_5E64
//      fn0800_669C
//      fn0800_67BF
//      fn0800_6F20
//      fn0800_73AC
//      fn0800_741D
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: bp:[0..15]-fn0800_12E2 ds:[0..15]-fn0800_12E2 si:[0..15]-fn0800_12E2 sp:[0..15]-fn0800_12E2
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: DP
fn0800_75EA_entry:
	wArg06 = SLICE(dwArg06, word16, 0)
l0800_75EA:
	Mem16[ds:0x4680<16>:word16] = wArg04
	Mem17[ds:0x467E<16>:word16] = wArg02
	Mem18[ds:0x2A05<16>:word16] = wArg04
	Mem19[ds:0x2A03<16>:word16] = wArg02
	Mem20[ds:0x4678<16>:word16] = wArg04
	Mem21[ds:0x4676<16>:word16] = wArg02
	Mem28[ds:0x4E86<16>:word16] = SLICE(dwArg06 - 0x12<32>, word16, 16)
	Mem29[ds:0x4E84<16>:word16] = wArg06 - 0x12<16>
	bp_177 = fp - 2<i16>
	sp_10 = fp - 0x1A<16>
	branch Mem29[ds:0x4680<16>:word16] >u 0<16> l0800_7634
l0800_7626:
	branch Mem29[ds:0x4680<16>:word16] == 0<16> l0800_762B
l0800_762B:
	branch wArg02 >u 0x12<16> l0800_7634
l0800_7634:
	Mem36[ds:0x2E4B<16>:word16] = 0<16>
	Mem37[ds:0x2E49<16>:word16] = 0<16>
	Mem38[ds:0x465C<16>:word16] = 0<16>
	Mem39[ds:0x4668<16>:word16] = 0<16>
	Mem40[ds:0x4666<16>:word16] = 0<16>
	Mem41[ds:0x2A05<16>:word16] = 0<16>
	Mem42[ds:0x2A03<16>:word16] = 0<16>
	Mem43[ds:0x2A01<16>:word16] = 0<16>
	Mem44[ds:0x29FF<16>:word16] = 0<16>
	Mem45[ds:0x467C<16>:word16] = 0<16>
	Mem46[ds:0x467A<16>:word16] = 0<16>
	Mem47[ds:0x4674<16>:word16] = 0<16>
	Mem48[ds:0x4672<16>:word16] = 0<16>
	Mem49[ds:0x2E43<16>:word16] = 0<16>
	Mem50[ds:0x2E45<16>:word16] = 0<16>
	Mem51[ds:0x4E82<16>:word16] = 0<16>
	Mem52[ds:0x4E8A<16>:word16] = 0<16>
	Mem53[ds:0x4E88<16>:word16] = 0<16>
	Mem54[ds:0x29F9<16>:word16] = 0<16>
	Mem55[ds:0x29F7<16>:word16] = 0<16>
	ax_64 = fn0800_4311(ds, 0x1000F<32>, out dx_70, out bp_65, out si_1078, out ds_69)
	Mem80[ss:bp_65 - 20<i16>:word16] = dx_70
	Mem81[ss:bp_65 - 22<i16>:word16] = ax_64
	Mem84[ds_69:0x2E73<16>:word16] = dx_70 + 1<16>
	Mem85[ds_69:0x2E71<16>:word16] = 0<16>
	sp_73 = <invalid>
	Mem89[ss:sp_73 + 2<16>:word16] = 1<16>
	Mem91[ss:sp_73:word16] = 0x10<16>
	ax_92 = fn0800_4311(ds_69, Mem91[ss:sp_73:word32], out dx_98, out bp_93, out si_1079, out ds_97)
	Mem108[ss:bp_93 - 16<i16>:word16] = dx_98
	Mem109[ss:bp_93 - 18<i16>:word16] = ax_92
	Mem112[ds_97:0x2E39<16>:word16] = dx_98 + 1<16>
	Mem113[ds_97:0x2E37<16>:word16] = 0<16>
	sp_101 = <invalid>
	Mem117[ss:sp_101 + 2<16>:word16] = 1<16>
	Mem119[ss:sp_101:word16] = 0x10<16>
	ax_120 = fn0800_4311(ds_97, Mem119[ss:sp_101:word32], out dx_126, out bp_121, out si_1080, out ds_125)
	Mem136[ss:bp_121 - 12<i16>:word16] = dx_126
	Mem137[ss:bp_121 - 14<i16>:word16] = ax_120
	Mem140[ds_125:0x2E35<16>:word16] = dx_126 + 1<16>
	Mem141[ds_125:0x2E33<16>:word16] = 0<16>
	sp_129 = <invalid>
	Mem145[ss:sp_129 + 2<16>:word16] = 1<16>
	Mem147[ss:sp_129:word16] = 0x10<16>
	ax_148 = fn0800_4311(ds_125, Mem147[ss:sp_129:word32], out dx_154, out bp_149, out si_1081, out ds_153)
	Mem164[ss:bp_149 - 8<i16>:word16] = dx_154
	Mem165[ss:bp_149 - 10<i16>:word16] = ax_148
	Mem168[ds_153:0x2E41<16>:word16] = dx_154 + 1<16>
	Mem169[ds_153:0x2E3F<16>:word16] = 0<16>
	sp_157 = <invalid>
	Mem173[ss:sp_157 + 2<16>:word16] = 1<16>
	Mem175[ss:sp_157:word16] = 0x10<16>
	ax_176 = fn0800_4311(ds_153, Mem175[ss:sp_157:word32], out dx_182, out bp_177, out si_1082, out ds_181)
	Mem192[ss:bp_177 - 4<i16>:word16] = dx_182
	Mem193[ss:bp_177 - 6<i16>:word16] = ax_176
	Mem196[ds_181:0x2E3D<16>:word16] = dx_182 + 1<16>
	Mem197[ds_181:0x2E3B<16>:word16] = 0<16>
	fn0800_87F8(ds_181)
	sp_185 = <invalid>
	Mem208[ss:sp_185 + 2<16>:word16] = Mem197[ds_181:0x29E5<16>:word16]
	Mem211[ss:sp_185:word16] = Mem208[ds_181:0x29E3<16>:word16]
	dx_ax_1083 = fn0800_AD2F(ds_181, Mem211[ss:sp_185:segptr32])
	Mem223[ds_181:0x4664<16>:word16] = SLICE(dx_ax_1083, word16, 16)
	Mem224[ds_181:0x4662<16>:word16] = SLICE(dx_ax_1083, word16, 0)
	Mem227[ss:sp_185 + 2<16>:word16] = Mem224[ds_181:0x29E1<16>:word16]
	Mem230[ss:sp_185:word16] = Mem227[ds_181:0x29DF<16>:word16]
	dx_ax_1084 = fn0800_AD2F(ds_181, Mem230[ss:sp_185:segptr32])
	Mem241[ds_181:0x4660<16>:word16] = SLICE(dx_ax_1084, word16, 16)
	Mem242[ds_181:0x465E<16>:word16] = SLICE(dx_ax_1084, word16, 0)
	Mem245[ss:sp_185 + 2<16>:word16] = Mem242[ds_181:0x29E1<16>:word16]
	Mem248[ss:sp_185:word16] = Mem245[ds_181:0x29DF<16>:word16]
	dx_ax_250 = CONVERT(Mem248[ds_181:0x2A21<16>:word16], int16, int32)
	Mem259[ss:sp_185 - 2<i16>:word16] = SLICE(dx_ax_250 + 0x524E4300<32>, word16, 16)
	Mem261[ss:sp_185 - 4<i16>:word16] = SLICE(dx_ax_250, word16, 0) + 0x4300<16>
	ds_266 = fn0800_409C(ds_181, Mem261[ss:sp_185 - 4<i16>:word16], Mem261[ss:sp_185 - 2<i16>:word16], Mem261[ss:sp_185:word32])
	Mem277[ss:sp_185 + 2<16>:word16] = Mem261[ds_266:0x29E1<16>:word16]
	Mem280[ss:sp_185:word16] = Mem277[ds_266:0x29DF<16>:word16]
	Mem283[ss:sp_185 - 2<i16>:word16] = Mem280[ds_266:0x4680<16>:word16]
	Mem286[ss:sp_185 - 4<i16>:word16] = Mem283[ds_266:0x467E<16>:word16]
	ds_291 = fn0800_409C(ds_266, Mem286[ss:sp_185 - 4<i16>:word16], Mem286[ss:sp_185 - 2<i16>:word16], Mem286[ss:sp_185:word32])
	Mem301[ss:sp_185 + 2<16>:word16] = Mem286[ds_291:0x29E1<16>:word16]
	Mem304[ss:sp_185:word16] = Mem301[ds_291:0x29DF<16>:word16]
	Mem310[ss:sp_185 - 2<i16>:word16] = 0<16>
	Mem312[ss:sp_185 - 4<i16>:word16] = 0<16>
	ds_317 = fn0800_409C(ds_291, Mem312[ss:sp_185 - 4<i16>:word16], Mem312[ss:sp_185 - 2<i16>:word16], Mem312[ss:sp_185:word32])
	Mem327[ss:sp_185 + 2<16>:word16] = Mem312[ds_317:0x29E1<16>:word16]
	Mem330[ss:sp_185:word16] = Mem327[ds_317:0x29DF<16>:word16]
	Mem336[ss:sp_185 - 2<i16>:word16] = 0<16>
	fn0800_401E(ds_317, Mem336[ss:sp_185 + 2<i16>:byte], Mem336[ss:sp_185:word32], out cx_1085, out dx_1086, out bx_1087, out ds_341)
	Mem351[ss:sp_185 + 2<16>:word16] = Mem336[ds_341:0x29E1<16>:word16]
	Mem354[ss:sp_185:word16] = Mem351[ds_341:0x29DF<16>:word16]
	Mem360[ss:sp_185 - 2<i16>:word16] = 0<16>
	fn0800_401E(ds_341, Mem360[ss:sp_185 + 2<i16>:byte], Mem360[ss:sp_185:word32], out cx_1088, out dx_1089, out bx_1090, out ds_365)
	Mem375[ss:sp_185 + 2<16>:word16] = Mem360[ds_365:0x29E1<16>:word16]
	Mem378[ss:sp_185:word16] = Mem375[ds_365:0x29DF<16>:word16]
	Mem384[ss:sp_185 - 2<i16>:word16] = 0<16>
	fn0800_401E(ds_365, Mem384[ss:sp_185 + 2<i16>:byte], Mem384[ss:sp_185:word32], out cx_387, out dx_390, out bx_386, out ds_389)
	Mem399[ss:sp_185 + 2<16>:word16] = ds_389
	Mem402[ss:sp_185:word16] = 0x2240<16>
	fn0800_B2EF(cx_387, dx_390, bx_386, ds_389, Mem402[ss:sp_185:word32], out di_1091)
	Mem413[ss:bp_177 - 2<i16>:word16] = Mem402[ds_389:0x2E4F<16>:word16]
	Mem416[ss:sp_185 + 2<16>:word16] = 1<16>
	ax_414 = 1<16>
	branch Mem416[ds_389:0x2A1F<16>:word16] == 0<16> l0800_7808
l0800_7808:
	ax_414 = 0<16>
l0800_7806:
l0800_780A:
	Mem427[ss:sp_185:word16] = ax_414
	fn0800_8465(ds_389, Mem427[ss:sp_185:word16], Mem427[ss:sp_185 + 2<i16>:word16])
	Mem439[ss:sp_185 + 2<16>:word16] = 1<16>
	ax_437 = 1<16>
	branch Mem439[ds_389:0x2E4F<16>:word16] == 0<16> l0800_781E
l0800_781E:
	ax_437 = 0<16>
l0800_781C:
l0800_7820:
	Mem450[ss:sp_185:word16] = ax_437
	fn0800_8465(ds_389, Mem450[ss:sp_185:word16], Mem450[ss:sp_185 + 2<i16>:word16])
	branch Mem450[ds_389:0x2A23<16>:word16] == 1<16> l0800_7843
l0800_782E:
	branch Mem450[ds_389:0x2E4F<16>:word16] == 0<16> l0800_7843
l0800_7835:
	Mem466[ss:sp_185 + 2<16>:word16] = 0x10<16>
	Mem469[ss:sp_185:word16] = Mem466[ds_389:0x2E4F<16>:word16]
	fn0800_8465(ds_389, Mem469[ss:sp_185:word16], Mem469[ss:sp_185 + 2<i16>:word16])
l0800_7843:
	ax_481 = Mem480[ds_389:0x2A21<16>:word16]
	ah_524 = SLICE(ax_481, byte, 8) (alias)
	branch ax_481 == 1<16> l0800_7852
l0800_7852:
	ah_524 = SLICE(CONVERT(fn0800_7A02(ds_389, out ds_389), uint8, uint16), byte, 8) (alias)
l0800_784B:
	branch ax_481 == 2<16> l0800_7857
l0800_7857:
	ah_524 = SLICE(CONVERT(fn0800_7C78(ds_389, out ds_389), uint8, uint16), byte, 8) (alias)
l0800_7850:
l0800_785A:
	si_509 = 0x4682<16>
l0800_7870:
	branch Mem514[ds_389:0x4E82<16>:word16] != 0<16> l0800_785E
l0800_785E:
	Mem527[ss:sp_185 + 2<16>:word16] = SEQ(ah_524, Mem514[ds_389:si_509 + 0<16>:byte])
	ah_524 = SLICE(CONVERT(fn0800_8624(ds_389, Mem527[ss:sp_185 + 2<16>:byte], out di_1092, out ds_389), uint8, uint16), byte, 8) (alias)
	Mem542[ds_389:0x4E82<16>:word16] = Mem527[ds_389:0x4E82<16>:word16] - 1<16>
	si_509 = si_509 + 1<16>
l0800_7877:
	Mem550[ds_389:0x2E4F<16>:word16] = Mem514[ss:bp_177 - 2<i16>:word16]
	branch Mem550[ds_389:0x467E<16>:ui32] - Mem550[ds_389:0x2A03<16>:ui32] >=u Mem550[ds_389:0x4E88<16>:word32] l0800_78B3
l0800_78B3:
	Mem563[ds_389:0x4E8A<16>:word16] = 0<16>
	Mem564[ds_389:0x4E88<16>:word16] = 0<16>
l0800_789A:
	Mem578[ds_389:0x4E88<16>:ui32] = Mem574[ds_389:0x4E88<16>:ui32] - (Mem550[ds_389:0x467E<16>:ui32] - Mem550[ds_389:0x2A03<16>:ui32])
l0800_78BF:
	branch Mem581[ds_389:0x2A21<16>:word16] != 2<16> l0800_78D0
l0800_78C6:
	Mem589[ds_389:0x4E88<16>:ui32] = Mem585[ds_389:0x4E88<16>:ui32] + 2<32>
l0800_78D0:
	Mem603[ss:sp_185 + 2<16>:word16] = Mem592[ds_389:0x29E1<16>:word16]
	Mem606[ss:sp_185:word16] = Mem603[ds_389:0x29DF<16>:word16]
	dx_ax_976 = fn0800_AD2F(ds_389, Mem606[ss:sp_185:segptr32]) - Mem606[ds_389:0x465E<16>:ui32]
	Mem621[ds_389:0x2A05<16>:word16] = SLICE(dx_ax_976, word16, 16)
	Mem622[ds_389:0x2A03<16>:word16] = SLICE(dx_ax_976, word16, 0)
	Mem625[ss:sp_185 + 2<16>:word16] = 0<16>
	dx_627 = Mem625[ds_389:0x465E<16>:word16]
	Mem634[ss:sp_185:word16] = SLICE(SEQ(Mem625[ds_389:0x4660<16>:word16], dx_627) + 8<32>, word16, 16)
	Mem636[ss:sp_185 - 2<16>:word16] = dx_627 + 8<16>
	Mem639[ss:sp_185 - 4<16>:word16] = Mem636[ds_389:0x29E1<16>:word16]
	Mem642[ss:sp_185 - 6<16>:word16] = Mem639[ds_389:0x29DF<16>:word16]
	fn0800_ACB3(ds_389, Mem642[ss:sp_185 - 6<16>:segptr32], Mem642[ss:sp_185 - 2<16>:ui32], Mem642[ss:sp_185 + 2<16>:word16], out cx_1093)
	Mem656[ss:sp_185 + 2<16>:word16] = Mem642[ds_389:0x29E1<16>:word16]
	Mem659[ss:sp_185:word16] = Mem656[ds_389:0x29DF<16>:word16]
	dx_661 = Mem659[ds_389:0x2A03<16>:word16]
	Mem668[ss:sp_185 - 2<16>:word16] = SLICE(SEQ(Mem659[ds_389:0x2A05<16>:word16], dx_661) - 0x12<32>, word16, 16)
	Mem670[ss:sp_185 - 4<16>:word16] = dx_661 - 0x12<16>
	ds_675 = fn0800_409C(ds_389, Mem670[ss:sp_185 - 4<16>:word16], Mem670[ss:sp_185 - 2<16>:word16], Mem670[ss:sp_185:word32])
	Mem686[ss:sp_185 + 2<16>:word16] = Mem670[ds_675:0x29E1<16>:word16]
	Mem689[ss:sp_185:word16] = Mem686[ds_675:0x29DF<16>:word16]
	Mem692[ss:sp_185 - 2<16>:word16] = Mem689[ds_675:0x2E4B<16>:word16]
	fn0800_401E(ds_675, Mem692[ss:sp_185 + 2<16>:byte], Mem692[ss:sp_185:word32], out cx_1094, out dx_1095, out bx_1096, out ds_697)
	Mem708[ss:sp_185 + 2<16>:word16] = Mem692[ds_697:0x29E1<16>:word16]
	Mem711[ss:sp_185:word16] = Mem708[ds_697:0x29DF<16>:word16]
	Mem714[ss:sp_185 - 2<16>:word16] = Mem711[ds_697:0x2E49<16>:word16]
	ah_736 = SLICE(CONVERT(fn0800_401E(ds_697, Mem714[ss:sp_185 + 2<16>:byte], Mem714[ss:sp_185:word32], out cx_1097, out dx_1098, out bx_1099, out ds_719), uint8, uint16), byte, 8) (alias)
	Mem730[ss:sp_185 + 2<16>:word16] = Mem714[ds_719:0x29E1<16>:word16]
	Mem733[ss:sp_185:word16] = Mem730[ds_719:0x29DF<16>:word16]
	Mem738[ss:sp_185 - 2<16>:word16] = SEQ(ah_736, Mem733[ds_719:0x4E88<16>:byte])
	ah_760 = SLICE(CONVERT(fn0800_4047(ds_719, Mem738[ss:sp_185 - 2<16>:byte], Mem738[ss:sp_185:segptr32], out cx_1100, out dx_1101, out bx_1102, out di_1103, out ds_745), uint8, uint16), byte, 8) (alias)
	Mem754[ss:sp_185 + 2<16>:word16] = Mem738[ds_745:0x29E1<16>:word16]
	Mem757[ss:sp_185:word16] = Mem754[ds_745:0x29DF<16>:word16]
	Mem762[ss:sp_185 - 2<16>:word16] = SEQ(ah_760, Mem757[ds_745:0x29F7<16>:byte])
	fn0800_4047(ds_745, Mem762[ss:sp_185 - 2<16>:byte], Mem762[ss:sp_185:segptr32], out cx_1104, out dx_1105, out bx_1106, out di_1107, out ds_769)
	Mem777[ss:sp_185 + 2<16>:word16] = 0<16>
	ax_dx_982 = Mem777[ds_769:0x465E<16>:ui32] + Mem777[ds_769:0x2A03<16>:ui32]
	Mem786[ss:sp_185:word16] = SLICE(ax_dx_982, word16, 16)
	Mem788[ss:sp_185 - 2<16>:word16] = SLICE(ax_dx_982, word16, 0)
	Mem791[ss:sp_185 - 4<16>:word16] = Mem788[ds_769:0x29E1<16>:word16]
	Mem794[ss:sp_185 - 6<16>:word16] = Mem791[ds_769:0x29DF<16>:word16]
	fn0800_ACB3(ds_769, Mem794[ss:sp_185 - 6<16>:segptr32], Mem794[ss:sp_185 - 2<16>:ui32], Mem794[ss:sp_185 + 2<16>:word16], out cx_1108)
	Mem808[ss:sp_185 + 2<16>:word16] = 0<16>
	ax_dx_984 = Mem808[ds_769:0x4662<16>:ui32] + Mem808[ds_769:0x467E<16>:ui32]
	Mem817[ss:sp_185:word16] = SLICE(ax_dx_984, word16, 16)
	Mem819[ss:sp_185 - 2<16>:word16] = SLICE(ax_dx_984, word16, 0)
	Mem822[ss:sp_185 - 4<16>:word16] = Mem819[ds_769:0x29E5<16>:word16]
	Mem825[ss:sp_185 - 6<16>:word16] = Mem822[ds_769:0x29E3<16>:word16]
	fn0800_ACB3(ds_769, Mem825[ss:sp_185 - 6<16>:segptr32], Mem825[ss:sp_185 - 2<16>:ui32], Mem825[ss:sp_185 + 2<16>:word16], out cx_1109)
	Mem844[ss:sp_185 + 2<16>:word16] = Mem825[ss:bp_177 - 20<i16>:word16]
	Mem847[ss:sp_185:word16] = Mem844[ss:bp_177 - 22<i16>:word16]
	fn0800_4346(ds_769, Mem847[ss:sp_185 + 2<16>:word16], out cx_1110, out dx_1111, out bx_1112, out ds_851)
	Mem862[ss:sp_185 + 2<16>:word16] = Mem847[ss:bp_177 - 16<i16>:word16]
	Mem865[ss:sp_185:word16] = Mem862[ss:bp_177 - 18<i16>:word16]
	fn0800_4346(ds_851, Mem865[ss:sp_185 + 2<16>:word16], out cx_1113, out dx_1114, out bx_1115, out ds_869)
	Mem880[ss:sp_185 + 2<16>:word16] = Mem865[ss:bp_177 - 12<i16>:word16]
	Mem883[ss:sp_185:word16] = Mem880[ss:bp_177 - 14<i16>:word16]
	fn0800_4346(ds_869, Mem883[ss:sp_185 + 2<16>:word16], out cx_1116, out dx_1117, out bx_1118, out ds_887)
	Mem898[ss:sp_185 + 2<16>:word16] = Mem883[ss:bp_177 - 8<i16>:word16]
	Mem901[ss:sp_185:word16] = Mem898[ss:bp_177 - 10<i16>:word16]
	fn0800_4346(ds_887, Mem901[ss:sp_185 + 2<16>:word16], out cx_1119, out dx_1120, out bx_1121, out ds_905)
	Mem916[ss:sp_185 + 2<16>:word16] = Mem901[ss:bp_177 - 4<i16>:word16]
	Mem919[ss:sp_185:word16] = Mem916[ss:bp_177 - 6<i16>:word16]
	fn0800_4346(ds_905, Mem919[ss:sp_185 + 2<16>:word16], out cx_922, out dx_924, out bx_921, out ds)
	Mem933[ss:sp_185 + 2<16>:word16] = ds
	Mem936[ss:sp_185:word16] = 0x223C<16>
	fn0800_B2EF(cx_922, dx_924, bx_921, ds, Mem936[ss:sp_185:word32], out di_1122)
	sp_10 = sp_185 + 4<16>
l0800_7631:
l0800_7628:
l0800_79FD:
	bp_953 = Mem949[ss:bp_177:word16]
	siOut = Mem949[ss:sp_10:word16]
	dsOut = ds
	return bp_953
fn0800_75EA_exit:


byte fn0800_7A02(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_75EA
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[8..15]-fn0800_75EA ds:[0..15]-fn0800_75EA
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: P bp si sp
fn0800_7A02_entry:
l0800_7A02:
	dwLoc06_1015 = Mem13[ds:0x4662<16>:word32] (alias)
l0800_7C1A:
	ax_21 = Mem20[ds:0x467C<16>:word16]
	dx_22 = Mem20[ds:0x467A<16>:word16]
	branch ax_21 >=u Mem20[ds:0x4680<16>:word16] l0800_7C2A
l0800_7C2A:
	branch ax_21 != Mem20[ds:0x4680<16>:word16] l0800_7C35
l0800_7C2C:
	branch dx_22 >=u Mem20[ds:0x467E<16>:word16] l0800_7C35
l0800_7C35:
	Mem33[ds:0x2E43<16>:word16] = Mem20[ds:0x2E43<16>:word16] >>u 0x10<8> - Mem20[ds:0x2E45<16>:byte]
	ax_53 = ax_21 (alias)
	branch Mem33[ds:0x2E45<16>:word16] != 0<16> l0800_7C4D
l0800_7C46:
	branch Mem33[ds:0x4E82<16>:word16] == 0<16> l0800_7C57
l0800_7C4D:
	ax_53 = CONVERT(fn0800_8624(ds, Mem33[ds:0x2E43<16>:byte], out di_1022, out ds), uint8, uint16)
l0800_7C57:
	branch Mem67[ds:0x2E45<16>:word16] >u 8<16> l0800_7C65
l0800_7C5E:
	branch Mem67[ds:0x4E82<16>:word16] == 0<16> l0800_7C73
l0800_7C65:
	ax_53 = CONVERT(fn0800_8624(ds, SLICE(Mem67[ds:0x2E43<16>:word16] >>u 8<8>, byte, 0), out di_1024, out ds), uint8, uint16)
l0800_7C73:
	dsOut = ds
	return SLICE(ax_53, byte, 8)
fn0800_7A02_exit:
l0800_7C32:
l0800_7C27:
l0800_7A19:
	fn0800_43D4(0x284F<16>, ds, 0x10<16>)
	fn0800_43D4(0x278F<16>, ds, 0x10<16>)
	fn0800_43D4(0x290F<16>, ds, 0x10<16>)
	ds = fn0800_7FDC(ds)
	fn0800_ACB3(ds, Mem192[ds:0x29E3<16>:word32], dwLoc06_1015, 0<16>, out cx_1019)
	fn0800_441C(ds, SEQ(ds, 0x290F<16>), 0x10<16>)
	fn0800_441C(ds, SEQ(ds, 0x284F<16>), 0x10<16>)
	fn0800_441C(ds, SEQ(ds, 0x278F<16>), 0x10<16>)
	fn0800_83A1(ds, SEQ(ds, 0x290F<16>), 0x10<16>)
	fn0800_83A1(ds, SEQ(ds, 0x284F<16>), 0x10<16>)
	fn0800_83A1(ds, SEQ(ds, 0x278F<16>), 0x10<16>)
	fn0800_8489(ds, Mem324[ds:0x466A<16>:word16], 0x10<16>)
l0800_7BC0:
	ax_337 = Mem336[ds:0x466A<16>:word16]
	dx_338 = Mem336[ds:0x466C<16>:word16]
	Mem344[ds:0x466A<16>:ui32] = Mem340[ds:0x466A<16>:ui32] - 1<32>
	branch (ax_337 | dx_338) == 0<16> l0800_7BD8
l0800_7BD8:
	branch Mem344[ds:0x2E45<16>:word16] != 0<16> l0800_7BFC
l0800_7BDF:
	si_352 = 0x4682<16>
l0800_7BF5:
	branch Mem357[ds:0x4E82<16>:word16] != 0<16> l0800_7BE3
l0800_7BE3:
	fn0800_8624(ds, Mem357[ds:si_352 + 0<16>:byte], out di_1025, out ds)
	Mem385[ds:0x4E82<16>:word16] = Mem370[ds:0x4E82<16>:word16] - 1<16>
	si_352 = si_352 + 1<16>
l0800_7BFC:
	Mem394[ds:0x29F7<16>:ui32] = Mem390[ds:0x29F7<16>:ui32] + 1<32>
	dx_ax_1023 = fn0800_AD2F(ds, Mem394[ds:0x29E3<16>:word32])
	dwLoc06_1015 = dx_ax_1023 (alias)
l0800_7BD5:
l0800_7ACB:
	ax_428 = fn0800_3E27(ds, Mem344[ds:0x29DB<16>:word32], out cx_1020, out di_1021, out ds)
	Mem440[ds:0x2E47<16>:word16] = ax_428
	Mem446[ds:0x467A<16>:ui32] = Mem442[ds:0x467A<16>:ui32] + CONVERT(ax_428, uint16, uint32)
	fn0800_8407(ds, Mem452[ds:0x2E47<16>:word16], SEQ(ds, 0x290F<16>))
	branch Mem455[ds:0x2E47<16>:word16] == 0<16> l0800_7B56
l0800_7AFB:
	branch Mem455[ds:0x2E45<16>:word16] == 0<16> l0800_7B32
l0800_7B32:
	ax_472 = Mem471[ds:0x2E47<16>:word16]
	Mem474[ds:0x2E47<16>:word16] = Mem471[ds:0x2E47<16>:word16] - 1<16>
	branch ax_472 != 0<16> l0800_7B24
l0800_7B24:
	fn0800_8624(ds_485, fn0800_8359(ds, out ds_485) ^ Mem474[ds_485:0x2E4F<16>:byte], out di_1030, out ds)
l0800_7B02:
l0800_7B17:
	ax_517 = Mem516[ds:0x2E47<16>:word16]
	Mem519[ds:0x2E47<16>:word16] = Mem516[ds:0x2E47<16>:word16] - 1<16>
	branch ax_517 != 0<16> l0800_7B04
l0800_7B04:
	Mem541[ds_530:Mem519[ds_530:0x4E82<16>:word16] + 0x4682<16>:byte] = fn0800_8359(ds, out ds_530) ^ Mem519[ds_530:0x2E4F<16>:byte]
	Mem543[ds_530:0x4E82<16>:word16] = Mem541[ds_530:0x4E82<16>:word16] + 1<16>
	ds = ds_530
l0800_7B22:
l0800_7B3D:
	branch (Mem546[ds:0x2E4F<16>:word16] & 1<16>) == 0<16> l0800_7B52
l0800_7B52:
	Mem552[ds:0x2E4F<16>:word16] = Mem546[ds:0x2E4F<16>:word16] >>u 1<16>
l0800_7B45:
	Mem560[ds:0x2E4F<16>:word16] = Mem546[ds:0x2E4F<16>:word16] >>u 1<16> | 0x8000<16>
l0800_7B56:
	branch (Mem562[ds:0x466A<16>:word16] | Mem562[ds:0x466C<16>:word16]) == 0<16> l0800_7BC0
l0800_7B5F:
	Mem593[ds_584:0x2E29<16>:word16] = fn0800_3E27(ds, Mem562[ds:0x29DB<16>:word32], out cx_1026, out di_1027, out ds_584)
	Mem613[ds_604:0x2E2B<16>:word16] = fn0800_3E27(ds_584, Mem593[ds_584:0x29DB<16>:word32], out cx_1028, out di_1029, out ds_604)
	fn0800_8407(ds_604, Mem618[ds_604:0x2E2B<16>:word16], SEQ(ds_604, 0x284F<16>))
	fn0800_8407(ds_604, Mem637[ds_604:0x2E29<16>:word16], SEQ(ds_604, 0x278F<16>))
	Mem652[ds_604:0x2E29<16>:word16] = Mem640[ds_604:0x2E29<16>:word16] + 2<16>
	Mem659[ds_604:0x467A<16>:ui32] = Mem655[ds_604:0x467A<16>:ui32] + CONVERT(Mem652[ds_604:0x2E29<16>:word16], uint16, uint32)
	ds = ds_604
l0800_7BB5:
	ax_663 = Mem662[ds:0x2E29<16>:word16]
	Mem665[ds:0x2E29<16>:word16] = Mem662[ds:0x2E29<16>:word16] - 1<16>
	branch ax_663 != 0<16> l0800_7BB2
l0800_7BB2:
	fn0800_8359(ds, out ds)


byte fn0800_7C78(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_75EA
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[8..15]-fn0800_75EA ds:[0..15]-fn0800_75EA
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: P bp si sp
fn0800_7C78_entry:
l0800_7C78:
	dwLoc06_830 = Mem13[ds:0x4662<16>:word32] (alias)
l0800_7E6D:
	ax_21 = Mem20[ds:0x467C<16>:word16]
	dx_22 = Mem20[ds:0x467A<16>:word16]
	branch ax_21 >=u Mem20[ds:0x4680<16>:word16] l0800_7E7D
l0800_7E7D:
	branch ax_21 != Mem20[ds:0x4680<16>:word16] l0800_7E88
l0800_7E7F:
	branch dx_22 >=u Mem20[ds:0x467E<16>:word16] l0800_7E88
l0800_7E88:
	Mem33[ds:0x2E43<16>:word16] = Mem20[ds:0x2E43<16>:word16] << 8<8> - Mem20[ds:0x2E45<16>:byte]
	ax_53 = ax_21 (alias)
	branch Mem33[ds:0x2E45<16>:word16] != 0<16> l0800_7EA0
l0800_7E99:
	branch Mem33[ds:0x4E82<16>:word16] == 0<16> l0800_7EAA
l0800_7EA0:
	ax_53 = CONVERT(fn0800_8624(ds, Mem33[ds:0x2E43<16>:byte], out di_837, out ds), uint8, uint16)
l0800_7EAA:
	dsOut = ds
	return SLICE(ax_53, byte, 8)
fn0800_7C78_exit:
l0800_7E85:
l0800_7E7A:
l0800_7C8F:
	ds_124 = fn0800_7FDC(ds)
	fn0800_ACB3(ds_124, Mem105[ds_124:0x29E3<16>:word32], dwLoc06_830, 0<16>, out cx_834)
l0800_7DCD:
	ax_126 = Mem125[ds_124:0x466A<16>:word16]
	dx_127 = Mem125[ds_124:0x466C<16>:word16]
	Mem133[ds_124:0x466A<16>:ui32] = Mem129[ds_124:0x466A<16>:ui32] - 1<32>
	branch (ax_126 | dx_127) == 0<16> l0800_7DE5
l0800_7DE5:
	fn0800_854B(ds_124, 0xF<16>, 4<16>)
	fn0800_8600(ds_124, 0<8>, out ds)
	branch Mem159[ds:0x467A<16>:word32] >=u Mem159[ds:0x467E<16>:word32] l0800_7E1E
l0800_7E1E:
	fn0800_854B(ds, 0<16>, 1<16>)
l0800_7E11:
	fn0800_854B(ds, 1<16>, 1<16>)
l0800_7E2B:
	branch Mem216[ds:0x2E45<16>:word16] != 0<16> l0800_7E4F
l0800_7E32:
	si_219 = 0x4682<16>
l0800_7E48:
	branch Mem224[ds:0x4E82<16>:word16] != 0<16> l0800_7E36
l0800_7E36:
	fn0800_8624(ds, Mem224[ds:si_219 + 0<16>:byte], out di_843, out ds)
	Mem252[ds:0x4E82<16>:word16] = Mem237[ds:0x4E82<16>:word16] - 1<16>
	si_219 = si_219 + 1<16>
l0800_7E4F:
	Mem261[ds:0x29F7<16>:ui32] = Mem257[ds:0x29F7<16>:ui32] + 1<32>
	dx_ax_842 = fn0800_AD2F(ds, Mem261[ds:0x29E3<16>:word32])
	dwLoc06_830 = dx_ax_842 (alias)
l0800_7DE2:
l0800_7CAC:
	ax_298 = fn0800_3E27(ds_124, Mem133[ds_124:0x29DB<16>:word32], out cx_835, out di_836, out ds_124)
	Mem310[ds_124:0x2E47<16>:word16] = ax_298
	Mem316[ds_124:0x467A<16>:ui32] = Mem312[ds_124:0x467A<16>:ui32] + CONVERT(ax_298, uint16, uint32)
	fn0800_7EAF(ds_124, ax_298)
	branch (Mem319[ds_124:0x466A<16>:word16] | Mem319[ds_124:0x466C<16>:word16]) != 0<16> l0800_7CD9
l0800_7CD9:
	Mem350[ds_341:0x2E29<16>:word16] = fn0800_3E27(ds_124, Mem319[ds_124:0x29DB<16>:word32], out cx_838, out di_839, out ds_341)
	Mem369[ds_361:0x2E2B<16>:word16] = fn0800_3E27(ds_341, Mem350[ds_341:0x29DB<16>:word32], out cx_840, out di_841, out ds_361)
	branch Mem369[ds_361:0x2E29<16>:word16] != 0<16> l0800_7D1D
l0800_7D1D:
	branch Mem369[ds_361:0x2E29<16>:word16] >=u 7<16> l0800_7D68
l0800_7D68:
	fn0800_854B(ds_361, 0xF<16>, 4<16>)
	fn0800_8600(ds_361, Mem379[ds_361:0x2E29<16>:byte] - 6<8>, out ds_398)
	bx_406 = Mem393[ds_398:0x2E2B<16>:word16]
	fn0800_854B(ds_398, CONVERT(Mem415[ds_398:(bx_406 >>u 8<8>) + 0x21E2<16>:byte], uint8, uint16), CONVERT(Mem393[ds_398:(bx_406 >>u 8<8>) + 0x21F2<16>:byte], uint8, uint16))
	fn0800_8600(ds_398, Mem420[ds_398:0x2E2B<16>:byte], out ds_124)
l0800_7D24:
	bx_450 = Mem369[ds_361:0x2E29<16>:word16]
	fn0800_854B(ds_361, CONVERT(Mem455[ds_361:bx_450 + 0x21D4<16>:byte], uint8, uint16), CONVERT(Mem369[ds_361:bx_450 + 0x21DB<16>:byte], uint8, uint16))
	bx_468 = Mem460[ds_361:0x2E2B<16>:word16]
	fn0800_854B(ds_361, CONVERT(Mem477[ds_361:(bx_468 >>u 8<8>) + 0x21E2<16>:byte], uint8, uint16), CONVERT(Mem460[ds_361:(bx_468 >>u 8<8>) + 0x21F2<16>:byte], uint8, uint16))
	fn0800_8600(ds_361, Mem482[ds_361:0x2E2B<16>:byte], out ds_124)
l0800_7D02:
	fn0800_854B(ds_361, 6<16>, 3<16>)
	fn0800_8600(ds_361, Mem517[ds_361:0x2E2B<16>:byte], out ds_124)
l0800_7DAC:
	Mem547[ds_124:0x2E29<16>:word16] = Mem545[ds_124:0x2E29<16>:word16] + 2<16>
	Mem554[ds_124:0x467A<16>:ui32] = Mem550[ds_124:0x467A<16>:ui32] + CONVERT(Mem547[ds_124:0x2E29<16>:word16], uint16, uint32)
l0800_7DC2:
	ax_558 = Mem557[ds_124:0x2E29<16>:word16]
	Mem560[ds_124:0x2E29<16>:word16] = Mem557[ds_124:0x2E29<16>:word16] - 1<16>
	branch ax_558 != 0<16> l0800_7DBF
l0800_7DBF:
	fn0800_8359(ds_124, out ds_124)
l0800_7CD6:


void fn0800_7EAF(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7C78
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO Top
// Preserved: P ax bp bx cx di ds dx es si sp
fn0800_7EAF_entry:
l0800_7EAF:
	si_141 = wArg02
l0800_7FD1:
	si_105 = si_141
	branch si_141 == 0<16> l0800_7FD8
l0800_7FD8:
	return
fn0800_7EAF_exit:
l0800_7FD5:
l0800_7EBA:
	branch si_141 >=u 0xC<16> l0800_7F32
l0800_7F32:
	branch (si_105 & 3<16>) != 0<16> l0800_7EFD
l0800_7EFD:
	fn0800_854B(ds, 0<16>, 1<16>)
	fn0800_8600(ds_62, fn0800_8359(ds, out ds_62) ^ Mem48[ds_62:0x2E4F<16>:byte], out ds)
	branch (Mem77[ds:0x2E4F<16>:word16] & 1<16>) == 0<16> l0800_7F2D
l0800_7F2D:
	Mem95[ds:0x2E4F<16>:word16] = Mem77[ds:0x2E4F<16>:word16] >>u 1<16>
l0800_7F20:
	Mem103[ds:0x2E4F<16>:word16] = Mem77[ds:0x2E4F<16>:word16] >>u 1<16> | 0x8000<16>
l0800_7F31:
	si_105 = si_105 - 1<16>
l0800_7F38:
	fn0800_854B(ds, 0x17<16>, 5<16>)
	branch si_105 <u 0x48<16> l0800_7F8F
l0800_7F8F:
	fn0800_854B(ds, si_105 - 0xC<16> >>u 2<16>, 4<16>)
l0800_7FB4:
	si_141 = si_105
	branch si_105 != 0<16> l0800_7FA5
l0800_7FA5:
	fn0800_8600(ds_152, fn0800_8359(ds, out ds_152) ^ Mem160[ds_152:0x2E4F<16>:byte], out ds)
	si_105 = si_105 - 1<16>
l0800_7FB8:
	branch (Mem160[ds:0x2E4F<16>:word16] & 1<16>) == 0<16> l0800_7FCD
l0800_7FCD:
	Mem190[ds:0x2E4F<16>:word16] = Mem160[ds:0x2E4F<16>:word16] >>u 1<16>
l0800_7FC0:
	Mem198[ds:0x2E4F<16>:word16] = Mem160[ds:0x2E4F<16>:word16] >>u 1<16> | 0x8000<16>
l0800_7F4B:
	fn0800_854B(ds, 0xF<16>, 4<16>)
	di_212 = 0<16>
l0800_7F6C:
	branch di_212 != 0x48<16> l0800_7F5D
l0800_7F5D:
	di_212 = fn0800_8600(ds_225, fn0800_8359(ds, out ds_225) ^ Mem233[ds_225:0x2E4F<16>:byte], out ds) + 1<16>
l0800_7F71:
	branch (Mem233[ds:0x2E4F<16>:word16] & 1<16>) == 0<16> l0800_7F86
l0800_7F86:
	Mem263[ds:0x2E4F<16>:word16] = Mem233[ds:0x2E4F<16>:word16] >>u 1<16>
l0800_7F79:
	Mem271[ds:0x2E4F<16>:word16] = Mem233[ds:0x2E4F<16>:word16] >>u 1<16> | 0x8000<16>
l0800_7F8A:
	si_141 = si_105 - 0x48<16>
l0800_7EBF:
l0800_7EF6:
	si_141 = si_105
	branch si_105 != 0<16> l0800_7EC1
l0800_7EC1:
	fn0800_854B(ds, 0<16>, 1<16>)
	fn0800_8600(ds_306, fn0800_8359(ds, out ds_306) ^ Mem292[ds_306:0x2E4F<16>:byte], out ds)
	branch (Mem321[ds:0x2E4F<16>:word16] & 1<16>) == 0<16> l0800_7EF1
l0800_7EF1:
	Mem339[ds:0x2E4F<16>:word16] = Mem321[ds:0x2E4F<16>:word16] >>u 1<16>
l0800_7EE4:
	Mem347[ds:0x2E4F<16>:word16] = Mem321[ds:0x2E4F<16>:word16] >>u 1<16> | 0x8000<16>
l0800_7EF5:
	si_105 = si_105 - 1<16>
l0800_7EFA:


selector fn0800_7FDC(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7A02
//      fn0800_7C78
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds:[0..15]-fn0800_7A02
// Trashed: SCZOP ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_7FDC_entry:
l0800_7FDC:
	Mem11[ds:0x466C<16>:word16] = 0<16>
	Mem12[ds:0x466A<16>:word16] = 0<16>
	Mem13[ds:0x2E47<16>:word16] = 0<16>
	dx_15 = Mem13[ds:0x2A0B<16>:word16]
	Mem16[ds:0x4670<16>:word16] = Mem13[ds:0x2A0D<16>:word16]
	Mem17[ds:0x466E<16>:word16] = dx_15
	fn0800_ACB3(ds, Mem35[ds:0x29E3<16>:word32], Mem20[ds:0x4662<16>:ui32] + Mem20[ds:0x467A<16>:ui32] + Mem20[ds:0x4672<16>:ui32], 0<16>, out cx_921)
	fn0800_ACB3(ds, Mem62[ds:0x29DB<16>:word32], 0<32>, 0<16>, out cx_922)
	sp_138 = fp - 6<16>
l0800_82A1:
	branch (Mem82[ds:0x4676<16>:word16] | Mem82[ds:0x4678<16>:word16]) == 0<16> l0800_82AD
l0800_82AD:
	branch (Mem82[ds:0x4672<16>:word16] | Mem82[ds:0x4674<16>:word16]) == 0<16> l0800_82B9
l0800_82B6:
l0800_82AA:
l0800_8042:
	ax_dx_643 = 0xFFFF<u32> - CONVERT(Mem82[ds:0x2E31<16>:word16], uint16, uint32) - Mem82[ds:0x4672<16>:ui32]
	dwLoc06_918 = ax_dx_643 (alias)
	branch Mem112[ds:0x4676<16>:word32] >=u ax_dx_643 l0800_807C
l0800_806F:
	dwLoc06_918 = Mem112[ds:0x4676<16>:word32] (alias)
l0800_807C:
	dx_132 = Mem129[ds:0x2E71<16>:word16] + Mem129[ds:0x2E31<16>:word16]
	Mem133[ds:0x2E6F<16>:word16] = Mem129[ds:0x2E73<16>:word16]
	Mem134[ds:0x2E6D<16>:word16] = dx_132
	sp_140 = sp_138 - 2<i16>
	Mem142[ss:sp_140:word16] = Mem134[ds:0x29E5<16>:word16]
	Mem145[ss:sp_140 - 2<i16>:word16] = Mem142[ds:0x29E3<16>:word16]
	Mem149[ss:sp_140 - 4<i16>:word16] = SLICE(dwLoc06_918, word16, 16)
	Mem152[ss:sp_140 - 6<i16>:word16] = SLICE(dwLoc06_918, word16, 0)
	ax_154 = Mem152[ds:0x2E6D<16>:word16] + Mem152[ds:0x4672<16>:word16]
	Mem158[ss:sp_140 - 8<i16>:word16] = Mem152[ds:0x2E73<16>:word16]
	Mem160[ss:sp_140 - 10<i16>:word16] = ax_154
	fn0800_4110(ds, Mem160[ss:sp_140 - 10<i16>:word32], Mem160[ss:sp_140 - 6<i16>:word16], Mem160[ss:sp_140 - 4<i16>:word16], Mem160[ss:sp_140 - 2<i16>:word32], out si_923, out di_924, out ds)
	Mem181[ds:0x4676<16>:ui32] = Mem177[ds:0x4676<16>:ui32] - dwLoc06_918
	Mem187[ds:0x4672<16>:ui32] = Mem183[ds:0x4672<16>:ui32] + dwLoc06_918
	ax_188 = Mem187[ds:0x2E6F<16>:word16]
	dx_190 = Mem187[ds:0x2E6D<16>:word16] + Mem187[ds:0x4672<16>:word16]
	Mem191[ds:0x2E67<16>:word16] = ax_188
	Mem192[ds:0x2E65<16>:word16] = dx_190
	Mem193[ds:0x2E6B<16>:word16] = ax_188
	Mem194[ds:0x2E69<16>:word16] = dx_190
	sp_173 = sp_140 + 2<16>
	ax_195 = Mem194[ds:0x4670<16>:word16]
	dx_196 = Mem194[ds:0x466E<16>:word16]
	branch ax_195 <=u Mem194[ds:0x4674<16>:word16] l0800_80ED
l0800_80ED:
	branch ax_195 <u Mem194[ds:0x4674<16>:word16] l0800_80F8
l0800_80EF:
	branch dx_196 <u Mem194[ds:0x4672<16>:word16] l0800_80F8
l0800_80F8:
	dx_206 = Mem194[ds:0x2E6D<16>:word16] + Mem194[ds:0x466E<16>:word16]
	Mem208[ds:0x2E67<16>:word16] = Mem194[ds:0x2E6F<16>:word16]
	Mem209[ds:0x2E65<16>:word16] = dx_206
l0800_80F5:
l0800_80EA:
l0800_81E9:
	branch Mem211[ds:0x2E65<16>:word16] - 1<16> <=u Mem211[ds:0x2E6D<16>:word16] l0800_8209
l0800_81F3:
	branch Mem211[ds:0x466C<16>:word16] >=u 0<16> l0800_81FD
l0800_81FD:
	branch Mem211[ds:0x466C<16>:word16] != 0<16> l0800_8209
l0800_81FF:
	branch Mem211[ds:0x466A<16>:word16] >=u 0xFFFE<16> l0800_8209
l0800_8206:
l0800_81FA:
l0800_810D:
	fn0800_8832(ds)
	branch Mem211[ds:0x2E29<16>:word16] <u 2<16> l0800_8193
l0800_8193:
	sp_238 = sp_930 - 2<i16>
	Mem241[ss:sp_238:word16] = 1<16>
	fn0800_89A8(ds, Mem241[ss:sp_238:word16])
	Mem255[ds:0x2E47<16>:word16] = Mem241[ds:0x2E47<16>:word16] + 1<16>
	Mem257[ds:0x465C<16>:word16] = Mem255[ds:0x465C<16>:word16] + 1<16>
l0800_8117:
	branch Mem211[ds:0x2E6D<16>:word16] + Mem211[ds:0x2E29<16>:word16] <=u Mem211[ds:0x2E65<16>:word16] l0800_813F
l0800_8124:
	branch (Mem211[ds:0x466A<16>:word16] | Mem211[ds:0x466C<16>:word16]) == 0<16> l0800_8130
l0800_8130:
	Mem276[ds:0x2E29<16>:word16] = Mem211[ds:0x2E65<16>:word16] - Mem211[ds:0x2E6D<16>:word16]
l0800_813F:
	sp_278 = sp_930 - 2<i16>
	Mem281[ss:sp_278:word16] = ds
	Mem284[ss:sp_278 - 2<i16>:word16] = 0x290F<16>
	Mem287[ss:sp_278 - 4<i16>:word16] = Mem284[ds:0x2E47<16>:word16]
	ds_292 = fn0800_831D(ds, Mem287[ss:sp_278 - 4<i16>:word16], Mem287[ss:sp_278 - 2<i16>:segptr32])
	Mem301[ss:sp_278:word16] = ds_292
	Mem304[ss:sp_278 - 2<i16>:word16] = 0x278F<16>
	Mem309[ss:sp_278 - 4<i16>:word16] = Mem304[ds_292:0x2E29<16>:word16] - 2<16>
	ds_314 = fn0800_831D(ds_292, Mem309[ss:sp_278 - 4<i16>:word16], Mem309[ss:sp_278 - 2<i16>:segptr32])
	Mem324[ss:sp_278:word16] = ds_314
	Mem327[ss:sp_278 - 2<i16>:word16] = 0x284F<16>
	Mem332[ss:sp_278 - 4<i16>:word16] = Mem327[ds_314:0x2E2B<16>:word16] - 1<16>
	ds = fn0800_831D(ds_314, Mem332[ss:sp_278 - 4<i16>:word16], Mem332[ss:sp_278 - 2<i16>:segptr32])
	Mem348[ss:sp_278:word16] = Mem332[ds:0x2E29<16>:word16]
	fn0800_89A8(ds, Mem348[ss:sp_278:word16])
	Mem365[ds:0x466A<16>:ui32] = Mem361[ds:0x466A<16>:ui32] + 1<32>
	Mem366[ds:0x2E47<16>:word16] = 0<16>
	Mem369[ds:0x465C<16>:word16] = Mem366[ds:0x465C<16>:word16] + Mem366[ds:0x2E29<16>:word16]
l0800_81A5:
	sp_173 = sp_930
	sp_930 = sp_173
	branch Mem372[ds:0x465C<16>:word16] <u 0x400<16> l0800_81E9
l0800_81AD:
	Mem381[ds:0x4666<16>:ui32] = Mem377[ds:0x4666<16>:ui32] + CONVERT(Mem372[ds:0x465C<16>:word16], uint16, uint32)
	sp_384 = sp_930 - 2<i16>
	Mem386[ss:sp_384:word16] = Mem381[ds:0x4680<16>:word16]
	Mem389[ss:sp_384 - 2<i16>:word16] = Mem386[ds:0x467E<16>:word16]
	dx_ax_926 = fn0800_8F18(0x63<16>, Mem389[ds:0x4668<16>:word16], 0<16>, Mem389[ds:0x4666<16>:word16], out ch_927)
	Mem406[ss:sp_384 - 4<i16>:word16] = SLICE(dx_ax_926, word16, 16)
	Mem408[ss:sp_384 - 6<i16>:word16] = SLICE(dx_ax_926, word16, 0)
	dx_ax_928 = fn0800_8BC2(Mem408[ss:sp_384 - 6<i16>:word32], Mem408[ss:sp_384 - 2<i16>:word32], out cx_411, out bx_410)
	sp_413 = <invalid>
	dx_412 = SLICE(dx_ax_928, word16, 16) (alias)
	Mem421[ss:sp_413 + 6<16>:word16] = dx_412
	Mem423[ss:sp_413 + 4<16>:word16] = SLICE(dx_ax_928, word16, 0)
	Mem425[ss:sp_413 + 2<16>:word16] = ds
	Mem428[ss:sp_413:word16] = 0x2244<16>
	fn0800_B2EF(cx_411, dx_412, bx_410, ds, Mem428[ss:sp_413:word32], out di_929)
	Mem439[ds:0x465C<16>:word16] = 0<16>
	sp_173 = sp_413 + 8<16>
l0800_812D:
l0800_8209:
	dx_ax_649 = CONVERT(Mem211[ds:0x2E69<16>:word16] - Mem211[ds:0x2E6D<16>:word16], word16, uint32)
	Mem448[ds:0x4674<16>:word16] = SLICE(dx_ax_649, word16, 16)
	Mem449[ds:0x4672<16>:word16] = SLICE(dx_ax_649, word16, 0)
	dx_ax_652 = CONVERT(Mem449[ds:0x2E6D<16>:word16] - Mem449[ds:0x2E71<16>:word16] - Mem449[ds:0x2E31<16>:word16], word16, uint32)
	ax_470 = Mem468[ds:0x2E71<16>:word16] + SLICE(dx_ax_652, word16, 0)
	sp_481 = sp_930 - 2<i16>
	Mem482[ss:sp_481:word16] = Mem468[ds:0x2E6D<16>:word16] - ax_470 + Mem468[ds:0x4672<16>:word16]
	Mem485[ss:sp_481 - 2<i16>:word16] = Mem482[ds:0x2E73<16>:word16]
	Mem487[ss:sp_481 - 4<i16>:word16] = ax_470
	Mem490[ss:sp_481 - 6<i16>:word16] = Mem487[ds:0x2E73<16>:word16]
	Mem493[ss:sp_481 - 8<i16>:word16] = Mem490[ds:0x2E71<16>:word16]
	fn0800_B0F3(Mem493[ss:sp_481 - 8<i16>:word32], Mem493[ss:sp_481 - 4<i16>:word32], Mem493[ss:sp_481:word16])
	sp_138 = sp_481 + 2<16>
	branch Mem493[ds:0x2E65<16>:word16] <u Mem493[ds:0x2E69<16>:word16] l0800_82B9
l0800_8269:
	dx_510 = Mem493[ds:0x2E65<16>:word16]
	branch Mem493[ds:0x2E67<16>:word16] != Mem493[ds:0x2E6B<16>:word16] l0800_8285
l0800_8276:
	branch dx_510 != Mem493[ds:0x2E69<16>:word16] l0800_8285
l0800_827C:
	branch (Mem493[ds:0x4676<16>:word16] | Mem493[ds:0x4678<16>:word16]) == 0<16> l0800_82B9
l0800_8285:
	branch Mem493[ds:0x466C<16>:word16] != 0<16> l0800_8293
l0800_828C:
	branch Mem493[ds:0x466A<16>:word16] == 0xFFFE<16> l0800_82B9
l0800_82B9:
	dx_530 = Mem528[ds:0x2E65<16>:word16]
	branch Mem528[ds:0x2E67<16>:word16] != Mem528[ds:0x2E6B<16>:word16] l0800_82ED
l0800_82C6:
	branch dx_530 != Mem528[ds:0x2E69<16>:word16] l0800_82ED
l0800_82CC:
	branch (Mem528[ds:0x4676<16>:word16] | Mem528[ds:0x4678<16>:word16]) != 0<16> l0800_82ED
l0800_82D5:
	branch Mem528[ds:0x466C<16>:word16] != 0<16> l0800_82E3
l0800_82DC:
	branch Mem528[ds:0x466A<16>:word16] == 0xFFFE<16> l0800_82ED
l0800_82E3:
	Mem550[ds:0x2E47<16>:word16] = Mem528[ds:0x2E47<16>:word16] + Mem528[ds:0x4672<16>:word16]
l0800_82ED:
	sp_555 = sp_138 - 2<i16>
	Mem561[ss:sp_555:word16] = ds
	Mem564[ss:sp_555 - 2<i16>:word16] = 0x290F<16>
	Mem567[ss:sp_555 - 4<i16>:word16] = Mem564[ds:0x2E47<16>:word16]
	ds_572 = fn0800_831D(ds, Mem567[ss:sp_555 - 4<i16>:word16], Mem567[ss:sp_555 - 2<i16>:segptr32])
	Mem585[ds_572:0x466A<16>:ui32] = Mem581[ds_572:0x466A<16>:ui32] + 1<32>
	Mem591[ss:sp_555:word16] = 0<16>
	Mem593[ss:sp_555 - 2<i16>:word16] = 0<16>
	Mem595[ss:sp_555 - 4<i16>:word16] = 0<16>
	Mem598[ss:sp_555 - 6<i16>:word16] = Mem595[ds_572:0x29DD<16>:word16]
	Mem601[ss:sp_555 - 8<i16>:word16] = Mem598[ds_572:0x29DB<16>:word16]
	fn0800_ACB3(ds_572, Mem601[ss:sp_555 - 8<i16>:segptr32], Mem601[ss:sp_555 - 4<i16>:ui32], Mem601[ss:sp_555:word16], out cx_925)
	return ds_572
fn0800_7FDC_exit:
l0800_8293:
	Mem632[ds:0x466E<16>:ui32] = Mem628[ds:0x466E<16>:ui32] - dx_ax_652


selector fn0800_831D(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7FDC
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ds:[0..15]-fn0800_7FDC
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_831D_entry:
l0800_831D:
	branch wArg02 <=u 1<16> l0800_8332
l0800_8332:
	ax_15 = wArg02
l0800_8329:
	ax_15 = fn0800_0C08(wArg02)
l0800_8334:
	es_38 = SLICE(ptrArg04, selector, 16) (alias)
	bx_37 = SLICE(ptrArg04, word16, 0) + ax_15 *s 0xC<16>
	Mem44[es_38:bx_37:ui32] = Mem40[es_38:bx_37:ui32] + 1<32>
	fn0800_401E(ds, SLICE(wArg02, byte, 0), Mem44[ds:0x29DB<16>:word32], out cx_97, out dx_98, out bx_99, out ds_62)
	return ds_62
fn0800_831D_exit:


byte fn0800_8359(selector ds, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7A02
//      fn0800_7C78
//      fn0800_7EAF
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax:[0..7]-fn0800_7A02 ds:[0..15]-fn0800_7A02
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8359_entry:
l0800_8359:
	al_30 = SLICE(fn0800_3DCF(ds, Mem7[ds:0x29E3<16>:word32], out ch_73, out di_74, out ds_24), byte, 0) (alias)
	ax_43 = Mem31[ds_24:((CONVERT(Mem31[ds_24:0x2E4B<16>:byte] ^ al_30, uint8, uint16) & 0xFF<16>) << 1<16>) + 0x2A29<16>:word16] ^ Mem31[ds_24:0x2E4B<16>:word16] >>u 8<8>
	Mem44[ds_24:0x2E4B<16>:word16] = ax_43
	Mem50[ds_24:0x29FF<16>:ui32] = Mem46[ds_24:0x29FF<16>:ui32] + 1<32>
	dsOut = ds_24
	return al_30
fn0800_8359_exit:


void fn0800_83A1(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7A02
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp di si sp
fn0800_83A1_entry:
	psegArg04_132 = SLICE(ptrArg02, selector, 16) (alias)
l0800_83A1:
	di_17 = wArg06
	si_18 = wArg06
l0800_83C4:
	wArg02_111 = SLICE(ptrArg02, word16, 0) (alias)
	si_18 = si_18 - 1<16>
	branch si_18 != 0<16> l0800_83B0
l0800_83B0:
	branch Mem16[SLICE(ptrArg02, selector, 16):SLICE(ptrArg02, word16, 0) + si_18 *s 0xC<16> + 10<i16>:word16] != 0<16> l0800_83CB
l0800_83C3:
	di_17 = di_17 - 1<16>
l0800_83CB:
	fn0800_8489(ds, di_17, 5<16>)
	si_61 = 0<16>
	wLoc04_112 = wArg02_111 + 0xA<16>
	branch di_17 <=u 0<16> l0800_8401
l0800_83E5:
	fn0800_8489(ds, Mem72[psegArg04_132:wLoc04_112:word16], 4<16>)
	wLoc04_112 = wLoc04_112 + 0xC<16>
	si_61 = si_61 + 1<16>
	branch si_61 <u di_17 l0800_83E5
l0800_8401:
	return
fn0800_83A1_exit:


void fn0800_8407(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7A02
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_8407_entry:
l0800_8407:
	branch wArg02 <=u 1<16> l0800_8420
l0800_8420:
	ax_19 = wArg02
l0800_8417:
	ax_19 = fn0800_0C08(wArg02)
l0800_8422:
	es_44 = SLICE(ptrArg04, selector, 16) (alias)
	bx_41 = SLICE(ptrArg04, word16, 0) + ax_19 *s 0xC<16>
	fn0800_8489(ds, Mem48[es_44:bx_41 + 6<i16>:word16], Mem35[es_44:bx_41 + 10<i16>:word16])
	bLoc04_104 = SLICE(ax_19, byte, 0) (alias)
	branch ax_19 <=u 1<16> l0800_845F
l0800_8445:
	fn0800_8489(ds, wArg02 - (1<16> << bLoc04_104 - 1<8>), ax_19 - 1<16>)
l0800_845F:
	return
fn0800_8407_exit:


void fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_75EA
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_8465_entry:
l0800_8465:
	branch Mem7[ds:0x2A21<16>:word16] != 2<16> l0800_847F
l0800_847F:
	fn0800_8489(ds, wArg02, wArg04)
	return
l0800_8475:
	fn0800_854B(ds, wArg02, wArg04)
	return
fn0800_8465_exit:


void fn0800_8489(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7A02
//      fn0800_83A1
//      fn0800_8407
//      fn0800_8465
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: P bp bx cx di ds dx es si sp
fn0800_8489_entry:
l0800_8489:
	di_116 = wArg02
l0800_853A:
	wArg04 = wArg04 - 1<16>
	branch wArg04 == 0<16> l0800_8547
l0800_8547:
	return
fn0800_8489_exit:
l0800_8544:
l0800_8494:
	Mem36[ds:0x2E43<16>:word16] = Mem21[ds:0x2E43<16>:word16] >>u 1<16>
	branch (di_116 & 1<16>) == 0<16> l0800_84A4
l0800_849E:
	Mem43[ds:0x2E43<16>:word16] = Mem36[ds:0x2E43<16>:word16] | 0x8000<16>
l0800_84A4:
	Mem52[ds:0x2E45<16>:word16] = Mem50[ds:0x2E45<16>:word16] + 1<16>
	di_116 = di_116 >>u 1<16>
	branch Mem52[ds:0x2E45<16>:word16] == 0x10<16> l0800_84B5
l0800_84B5:
	fn0800_8624(ds, Mem52[ds:0x2E43<16>:byte], out di_246, out ds_68)
	fn0800_8624(ds_68, SLICE(Mem62[ds_68:0x2E43<16>:word16] >>u 8<8>, byte, 0), out di_116, out ds)
	si_101 = 0x4682<16>
l0800_84E3:
	branch Mem98[ds:0x4E82<16>:word16] != 0<16> l0800_84D1
l0800_84D1:
	fn0800_8624(ds, Mem98[ds:si_101 + 0<16>:byte], out di_116, out ds)
	Mem126[ds:0x4E82<16>:word16] = Mem111[ds:0x4E82<16>:word16] - 1<16>
	si_101 = si_101 + 1<16>
l0800_84EA:
	branch Mem98[ds:0x29FF<16>:word32] <=u Mem98[ds:0x2A03<16>:word32] l0800_8532
l0800_84FF:
	branch Mem98[ds:0x29FF<16>:ui32] - Mem98[ds:0x2A03<16>:ui32] <=u Mem98[ds:0x4E88<16>:word32] l0800_8532
l0800_851C:
	ax_dx_187 = Mem98[ds:0x29FF<16>:ui32] - Mem98[ds:0x2A03<16>:ui32]
	Mem157[ds:0x4E8A<16>:word16] = SLICE(ax_dx_187, word16, 16)
	Mem158[ds:0x4E88<16>:word16] = SLICE(ax_dx_187, word16, 0)
l0800_8532:
	Mem164[ds:0x2E45<16>:word16] = 0<16>
	Mem165[ds:0x2E43<16>:word16] = 0<16>
l0800_84B2:


void fn0800_854B(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7C78
//      fn0800_7EAF
//      fn0800_8465
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax cx Top
// Preserved: P bp bx di ds dx es si sp
fn0800_854B_entry:
	bArg04 = SLICE(wArg04, byte, 0)
l0800_854B:
	di_100 = 1<16> << bArg04 - 1<8>
	wArg04_176 = wArg04 (alias)
l0800_85EF:
	wArg04_176 = wArg04_176 - 1<16>
	branch wArg04_176 == 0<16> l0800_85FC
l0800_85FC:
	return
fn0800_854B_exit:
l0800_85F9:
l0800_855D:
	Mem40[ds:0x2E43<16>:word16] = Mem25[ds:0x2E43<16>:word16] << 1<16>
	branch (wArg02 & di_100) == 0<16> l0800_856A
l0800_8566:
	Mem47[ds:0x2E43<16>:word16] = Mem40[ds:0x2E43<16>:word16] + 1<16>
l0800_856A:
	Mem54[ds:0x2E45<16>:word16] = Mem52[ds:0x2E45<16>:word16] + 1<16>
	di_100 = di_100 >>u 1<16>
	branch Mem54[ds:0x2E45<16>:word16] != 8<16> l0800_85EF
l0800_8578:
	fn0800_8624(ds, Mem54[ds:0x2E43<16>:byte], out di_100, out ds)
	si_77 = 0x4682<16>
l0800_8598:
	branch Mem82[ds:0x4E82<16>:word16] != 0<16> l0800_8586
l0800_8586:
	fn0800_8624(ds, Mem82[ds:si_77 + 0<16>:byte], out di_100, out ds)
	Mem110[ds:0x4E82<16>:word16] = Mem95[ds:0x4E82<16>:word16] - 1<16>
	si_77 = si_77 + 1<16>
l0800_859F:
	branch Mem82[ds:0x29FF<16>:word32] <=u Mem82[ds:0x2A03<16>:word32] l0800_85E7
l0800_85B4:
	branch Mem82[ds:0x29FF<16>:ui32] - Mem82[ds:0x2A03<16>:ui32] <=u Mem82[ds:0x4E88<16>:word32] l0800_85E7
l0800_85D1:
	ax_dx_171 = Mem82[ds:0x29FF<16>:ui32] - Mem82[ds:0x2A03<16>:ui32]
	Mem141[ds:0x4E8A<16>:word16] = SLICE(ax_dx_171, word16, 16)
	Mem142[ds:0x4E88<16>:word16] = SLICE(ax_dx_171, word16, 0)
l0800_85E7:
	Mem148[ds:0x2E45<16>:word16] = 0<16>
	Mem149[ds:0x2E43<16>:word16] = 0<16>


word16 fn0800_8600(selector ds, byte bArg02, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7C78
//      fn0800_7EAF
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: di:[0..15]-fn0800_7EAF ds:[0..15]-fn0800_7C78
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8600_entry:
l0800_8600:
	branch Mem7[ds:0x2E45<16>:word16] == 0<16> l0800_861B
l0800_861B:
	fn0800_8624(ds, bArg02, out di_21, out ds_22)
	dsOut = ds_22
	return di_21
l0800_860D:
	Mem33[ds:Mem7[ds:0x4E82<16>:word16] + 0x4682<16>:byte] = bArg02
	Mem35[ds:0x4E82<16>:word16] = Mem33[ds:0x4E82<16>:word16] + 1<16>
	dsOut = ds
	return di
fn0800_8600_exit:


byte fn0800_8624(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_75EA
//      fn0800_7A02
//      fn0800_7C78
//      fn0800_8489
//      fn0800_854B
//      fn0800_8600
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: ax:[8..15]-fn0800_7A02 di:[0..15]-fn0800_854B ds:[0..15]-fn0800_854B
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8624_entry:
l0800_8624:
	ax_10 = Mem7[ds:0x2A05<16>:word16]
	branch SEQ(ax_10, Mem7[ds:0x2A03<16>:word16]) >=u Mem7[ds:0x4E84<16>:word32] l0800_8678
l0800_863C:
	fn0800_4047(ds, bArg02, Mem7[ds:0x29DF<16>:word32], out cx_111, out dx_112, out bx_113, out di, out ds)
	ax_10 = Mem33[ds:((CONVERT(Mem33[ds:0x2E49<16>:byte] ^ bArg02, uint8, uint16) & 0xFF<16>) << 1<16>) + 0x2A29<16>:word16] ^ Mem33[ds:0x2E49<16>:word16] >>u 8<8>
	Mem58[ds:0x2E49<16>:word16] = ax_10
	Mem64[ds:0x2A03<16>:ui32] = Mem60[ds:0x2A03<16>:ui32] + 1<32>
l0800_8678:
	diOut = di
	dsOut = ds
	return SLICE(ax_10, byte, 8)
fn0800_8624_exit:


void fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_09A3
// MayUse:  Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_867A_entry:
l0800_867A:
	si_28 = fn0800_87EF(SEQ(psegArg06, wArg04 + 4<16>))
	ds_20 = psegArg06
	di_200 = wArg08
	es_22 = psegArg0A
	ah_250 = SLICE(ax_26, byte, 8) (alias)
	si_101 = si_28 + 0xB<16>
	al_115 = (Mem32[psegArg06:si_28 + 0xA<16>:byte] * 2<8> + true) * 2<8>
l0800_8745:
	al_41 = al_115 * 2<8>
	v33_542 = al_41 == 0<8>
	al_115 = al_41
	branch al_41 <u 0<8> l0800_8751
l0800_8749:
	Mem50[es_22:di_200:byte] = Mem46[ds_20:si_101:byte]
	si_101 = si_101 + 1<i16>
	di_200 = di_200 + 1<i16>
	al_115 = al_41 * 2<8>
	v33_542 = al_41 * 2<8> == 0<8>
	branch al_41 * 2<8> >=u 0<8> l0800_8744
l0800_8751:
	branch v33_542 l0800_873C
l0800_873C:
	si_101 = si_101 + 1<i16>
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_41 <u 0<8>, bool, byte)
	branch al_115 <u 0<8> l0800_8753
l0800_8741:
l0800_8744:
	Mem76[es_22:di_200:byte] = Mem70[ds_20:si_101:byte]
	si_101 = si_101 + 1<i16>
	di_200 = di_200 + 1<i16>
l0800_8753:
	al_83 = al_115 * 2<8>
	bh_167 = 0<8>
	v36_545 = al_83 >=u 0<8>
	branch al_83 == 0<8> l0800_879B
l0800_879B:
	al_83 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_83 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	v36_545 = al_83 >=u 0<8>
l0800_875C:
l0800_875F:
	cx_145 = 2<16> (alias)
	branch v36_545 l0800_86E6
l0800_86E6:
	al_106 = al_83 * 2<8>
	C_105 = SLICE(cond(al_106), bool, 1) (alias)
	branch al_106 == 0<8> l0800_86BC
l0800_86BC:
	al_106 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_106 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	C_105 = SLICE(cond(al_106), bool, 1) (alias)
l0800_86EA:
	al_115 = al_106 * 2<8>
	v39_548 = al_115 >=u 0<8>
	cx_145 = CONVERT(C_105 + 4<8>, uint8, uint16) (alias)
	branch al_115 == 0<8> l0800_86C2
l0800_86C2:
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_115 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	v39_548 = al_115 >=u 0<8>
l0800_86F0:
	branch v39_548 l0800_8701
l0800_86F2:
	al_129 = al_115 * 2<8>
	al_115 = al_129
	branch al_129 == 0<8> l0800_86C8
l0800_86C8:
	si_101 = si_101 + 1<i16>
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_129 <u 0<8>, bool, byte)
l0800_86F9:
	ch_458 = SLICE(cx_145 - 1<16>, byte, 8) (alias)
	cl_150 = (SLICE(cx_145, byte, 0) - 1<8>) * 2<8> + CONVERT(al_129 <u 0<8>, bool, byte)
	cx_145 = SEQ(ch_458, cl_150) (alias)
	branch cl_150 == 9<8> l0800_86A7
l0800_86A7:
	cx_173 = SEQ(ch_458, 4<8>) (alias)
l0800_86A9:
	al_155 = al_115 * 2<8>
	al_115 = al_155
	branch al_155 == 0<8> l0800_86A1
l0800_86A1:
	si_101 = si_101 + 1<i16>
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_155 <u 0<8>, bool, byte)
l0800_86AD:
	cx_173 = cx_173 - 1<16>
	bh_167 = bh_167 * 2<8> + CONVERT(al_155 <u 0<8>, bool, byte)
	ch_179 = SLICE(cx_173, byte, 8) (alias)
	branch cx_173 != 0<16> l0800_86A9
l0800_86B1:
	cx_180 = SEQ(ch_179, (bh_167 + 3<8>) * 2<8>) (alias)
	memcpy(es_22:di_200, ds_20:si_101, cx_180 *u32 2<16>)
	si_101 = si_101 + cx_180 *u 2<16>
	di_200 = di_200 + cx_180 *u 2<16>
l0800_8761:
	al_115 = al_83 * 2<8>
	v42_551 = al_115 >=u 0<8>
	branch al_115 == 0<8> l0800_87A0
l0800_87A0:
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_115 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	v42_551 = al_115 >=u 0<8>
l0800_8765:
l0800_8768:
	branch v42_551 l0800_8728
l0800_876A:
	al_215 = al_115 * 2<8>
	v45_554 = al_215 >=u 0<8>
	ax_245 = SEQ(ah_250, al_215) (alias)
	branch al_215 == 0<8> l0800_87A5
l0800_87A5:
	al_224 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_215 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	v45_554 = al_224 >=u 0<8>
	ax_245 = SEQ(ah_250, al_224) (alias)
l0800_876F:
l0800_8772:
	al_115 = SLICE(ax_245, byte, 0) (alias)
	ah_250 = SLICE(ax_245, byte, 8) (alias)
	cx_145 = 3<16> (alias)
	branch v45_554 l0800_8701
l0800_8774:
	cl_231 = Mem61[ds_20:si_101:byte]
	si_101 = si_101 + 1<16>
	cx_309 = CONVERT(cl_231, uint8, uint16) (alias)
	branch cl_231 == 0<8> l0800_87B4
l0800_87B4:
	ax_277 = ds_20 + (si_101 >>u 4<8>)
	al_281 = SLICE(ax_245, byte, 0) (alias)
	di_200 = (di_200 & 0xF<16>) + 0x8000<16>
	es_22 = es_22 + (di_200 >>u 4<8>) - 0x800<16>
	si_101 = si_101 & 0xF<16>
	ds_20 = ax_277
	ah_250 = SLICE(ax_245, byte, 8) (alias)
	al_115 = al_281 * 2<8>
	v48_557 = al_281 * 2<8> >=u 0<8>
	branch al_281 * 2<8> != 0<8> l0800_87E3
l0800_87DD:
	al_115 = Mem259[ax_277:si_101 & 0xF<16>:byte] * 2<8> + CONVERT(al_281 * 2<8> <u 0<8>, bool, byte)
	si_101 = (si_101 & 0xF<16>) + 1<i16>
	v48_557 = al_115 >=u 0<8>
l0800_87E3:
	branch v48_557 l0800_87E8
l0800_87E8:
	return
fn0800_867A_exit:
l0800_87E5:
l0800_877B:
	cx_145 = cx_309 + 8<16>
l0800_8701:
	al_115 = al_115 * 2<8>
	v51_560 = al_115 >=u 0<8>
	branch al_115 == 0<8> l0800_86CE
l0800_86CE:
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_115 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	v51_560 = al_115 >=u 0<8>
l0800_8705:
	branch v51_560 l0800_8728
l0800_8707:
	al_332 = al_115 * 2<8>
	C_340 = SLICE(cond(al_332), bool, 1) (alias)
	branch al_332 == 0<8> l0800_86D4
l0800_86D4:
	al_332 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_332 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	C_340 = SLICE(cond(al_332), bool, 1) (alias)
l0800_870E:
	al_115 = al_332 * 2<8>
	bh_354 = CONVERT(C_340, bool, byte)
	v54_563 = al_115 <u 0<8>
	branch al_115 == 0<8> l0800_86DA
l0800_86DA:
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_115 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	v54_563 = al_115 <u 0<8>
l0800_8714:
	branch v54_563 l0800_8784
l0800_8784:
	al_370 = al_115 * 2<8>
	branch al_370 == 0<8> l0800_87AA
l0800_87AA:
	si_101 = si_101 + 1<i16>
	al_379 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_370 <u 0<8>, bool, byte)
l0800_8788:
	al_379 = al_370
l0800_878B:
	al_115 = al_379 * 2<8>
	bh_167 = bh_354 * 2<8> + CONVERT(al_370 <u 0<8>, bool, byte) | 4<8>
	v57_566 = al_115 <u 0<8>
	branch al_115 == 0<8> l0800_87AF
l0800_87AF:
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_115 <u 0<8>, bool, byte)
	si_101 = si_101 + 1<i16>
	v57_566 = al_115 <u 0<8>
l0800_8794:
l0800_8797:
	branch v57_566 l0800_8728
l0800_8799:
l0800_8716:
	bh_167 = bh_354
	branch bh_354 != 0<8> l0800_8728
l0800_871D:
	bh_167 = bh_354 + 1<8>
l0800_8722:
	al_410 = al_115 * 2<8>
	al_115 = al_410
	branch al_410 == 0<8> l0800_86E0
l0800_86E0:
	si_101 = si_101 + 1<i16>
	al_115 = Mem61[ds_20:si_101:byte] * 2<8> + CONVERT(al_410 <u 0<8>, bool, byte)
l0800_8726:
	bh_167 = bh_167 * 2<8> + CONVERT(al_410 <u 0<8>, bool, byte)
l0800_8728:
	si_453 = di_200 - 1<16> - SEQ(bh_167, Mem61[ds_20:si_101:byte])
	__cli()
	size_469 = CONVERT(cx_145, word16, uint32)
	memcpy(es_22:di_200, es_22:si_453, size_469)
	__sti()
	di_200 = di_200 + SLICE(size_469, word16, 0)
	si_101 = si_101 + 1<16>


word16 fn0800_87EF(segptr32 ds_si)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_867A
// MayUse:  Sequence ds:si:[0..31]
// LiveOut: si:[0..15]-fn0800_867A
// Trashed: ax bx si Top
// Preserved: ds sp
fn0800_87EF_entry:
	ds = SLICE(ds_si, selector, 16)
l0800_87EF:
	si_8 = fn0800_87F4(ds_si)
l0800_87F2_thunk_fn0800_87F4:
	return fn0800_87F4(SEQ(ds, si_8))
fn0800_87EF_exit:


word16 fn0800_87F4(segptr32 ds_si)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_87EF
// MayUse:  Sequence ds:si:[0..31]
// LiveOut: si:[0..15]-fn0800_87EF
// Trashed: ax si Top
// Preserved: sp
fn0800_87F4_entry:
	si = SLICE(ds_si, word16, 0)
l0800_87F4:
	return si + 2<i16>
fn0800_87F4_exit:


void fn0800_87F8(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_75EA
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx es Top
// Preserved: di sp
fn0800_87F8_entry:
l0800_87F8:
	es_di_10 = Mem7[ds:0x2E37<16>:segptr32]
	es_82 = SLICE(es_di_10, selector, 16) (alias)
	di_68 = SLICE(es_di_10, word16, 0) (alias)
	ax_11 = Mem7[ds:0x2E31<16>:word16]
	cx_12 = 0x8000<16>
l0800_8804:
	branch cx_12 == 0<16> l0800_8806
l0800_8806:
	es_di_16 = Mem15[ds:0x2E33<16>:segptr32]
	es_80 = SLICE(es_di_16, selector, 16) (alias)
	di_62 = SLICE(es_di_16, word16, 0) (alias)
	ax_17 = Mem15[ds:0x2E31<16>:word16]
	cx_18 = 0x8000<16>
l0800_8810:
	branch cx_18 == 0<16> l0800_8812
l0800_8812:
	es_di_22 = Mem21[ds:0x2E3B<16>:segptr32]
	es_78 = SLICE(es_di_22, selector, 16) (alias)
	di_56 = SLICE(es_di_22, word16, 0) (alias)
	cx_23 = Mem21[ds:0x2E31<16>:word16]
l0800_881C:
	branch cx_23 == 0<16> l0800_881E
l0800_881E:
	es_di_31 = Mem30[ds:0x2E3F<16>:segptr32]
	es_72 = SLICE(es_di_31, selector, 16) (alias)
	di_39 = SLICE(es_di_31, word16, 0) (alias)
	ax_32 = 0<16>
	cx_36 = Mem30[ds:0x2E31<16>:word16]
l0800_8828:
	Mem40[es_72:di_39:word16] = ax_32
	di_39 = di_39 + 2<i16>
	ax_32 = ax_32 + 1<16>
	cx_36 = cx_36 - 1<16>
	branch cx_36 != 0<16> l0800_8828
l0800_882C:
	Mem47[ds:0x2E2D<16>:word16] = cx_36
	return
fn0800_87F8_exit:
l0800_881C_1:
	Mem57[es_78:di_56:word16] = 0<16>
	di_56 = di_56 + 2<i16>
	cx_23 = cx_23 - 1<16>
l0800_8810_1:
	Mem63[es_80:di_62:word16] = ax_17
	di_62 = di_62 + 2<i16>
	cx_18 = cx_18 - 1<16>
l0800_8804_1:
	Mem69[es_82:di_68:word16] = ax_11
	di_68 = di_68 + 2<i16>
	cx_12 = cx_12 - 1<16>


void fn0800_8832(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7FDC
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di si sp
fn0800_8832_entry:
l0800_8832:
	fn0800_889A(ds)
	branch Mem10[ds:0x2E29<16>:word16] <u 2<16> l0800_8897
l0800_883E:
	branch Mem10[ds:0x2E65<16>:word16] - Mem10[ds:0x2E6D<16>:word16] <u 3<16> l0800_8897
l0800_884D:
	ax_30 = Mem10[ds:0x2E2D<16>:word16]
	si_28 = Mem10[ds:0x2E29<16>:word16]
	di_29 = Mem10[ds:0x2E2B<16>:word16]
	ax_33 = ax_30 + 1<16>
	branch ax_30 + 1<16> != Mem32[ds:0x2E31<16>:word16] l0800_8865
l0800_8863:
	ax_33 = 0<16>
l0800_8865:
	Mem42[ds:0x2E2D<16>:word16] = ax_33
	Mem44[ds:0x2E6D<16>:word16] = Mem42[ds:0x2E6D<16>:word16] + 1<16>
	fn0800_889A(ds)
	Mem57[ds:0x2E6D<16>:word16] = Mem44[ds:0x2E6D<16>:word16] - 1<16>
	Mem60[ds:0x2E2D<16>:word16] = ax_30
	branch Mem60[ds:0x2E29<16>:word16] <=u si_28 l0800_888F
l0800_888F:
	Mem65[ds:0x2E29<16>:word16] = si_28
	Mem67[ds:0x2E2B<16>:word16] = di_29
l0800_887D:
	Mem68[ds:0x2E29<16>:word16] = 1<16>
	Mem69[ds:0x2E2B<16>:word16] = 0<16>
l0800_8897:
	return
fn0800_8832_exit:


void fn0800_889A(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8832
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di ds si sp
fn0800_889A_entry:
l0800_889A:
	Mem13[ds:0x2E2B<16>:word16] = 0<16>
	Mem14[ds:0x2E29<16>:word16] = 1<16>
	es_di_15 = Mem14[ds:0x2E6D<16>:segptr32]
	ax_18 = Mem14[es_di_15:word16]
	Mem19[ds:0x4E90<16>:word16] = ax_18
	di_17 = SLICE(es_di_15, word16, 0) (alias)
	dx_22 = Mem19[ds:0x2E69<16>:word16] - (di_17 + 1<16>)
	es_16 = SLICE(es_di_15, selector, 16) (alias)
	al_180 = SLICE(ax_18, byte, 0) (alias)
	di_20 = di_17 + 1<16>
	v25_196 = dx_22 != 0<16>
	cx_24 = dx_22
l0800_88BC:
	branch cx_24 == 0<16> l0800_88BE
l0800_88BC_1:
	v25_196 = al_180 != Mem19[es_16:di_280:byte]
	di_20 = di_280 + 1<i16>
	cx_24 = cx_24 - 1<16>
	di_280 = di_20
	branch al_180 != Mem19[es_16:di_280:byte] l0800_88BC
l0800_88BE:
	branch v25_196 l0800_88C1
l0800_88C0:
	cx_24 = cx_24 - 1<16>
l0800_88C1:
	Mem54[ds:0x4E94<16>:word16] = Mem19[ds:0x2E69<16>:word16] - Mem19[ds:0x2E6D<16>:word16]
	dx_44 = dx_22 - cx_24
	ax_166 = Mem54[Mem54[ds:0x2E39<16>:selector]:Mem54[ds:0x4E90<16>:word16] << 1<16>:word16]
l0800_88DC:
	branch ax_166 != Mem62[ds:0x2E31<16>:word16] l0800_88E5
l0800_88E5:
	Mem69[ds:0x4E92<16>:word16] = Mem62[Mem62[ds:0x2E41<16>:selector]:ax_166 << 1<16>:word16]
	bx_70 = Mem69[ds:0x2E2D<16>:word16]
	branch bx_70 >u ax_166 l0800_8903
l0800_88FC:
	bx_70 = bx_70 + Mem69[ds:0x2E31<16>:word16]
l0800_8903:
	es_si_80 = Mem69[ds:0x2E6D<16>:segptr32]
	bx_110 = bx_70 - ax_166
	branch Mem69[ds:0x4E90<16>:word16] != Mem69[SLICE(es_si_80, selector, 16):SLICE(es_si_80, word16, 0) - bx_110:word16] l0800_897E
l0800_8914:
	cx_100 = Mem69[Mem69[ds:0x2E3D<16>:selector]:ax_166 << 1<16>:word16]
	branch cx_100 <=u bx_110 l0800_892D
l0800_892D:
	branch cx_100 <=u dx_44 l0800_893A
l0800_8931:
	bx_110 = bx_110 - (cx_100 - dx_44)
	cx_100 = dx_44
l0800_893A:
	branch cx_100 != dx_44 l0800_8963
l0800_893E:
	es_di_106 = Mem69[ds:0x2E6D<16>:segptr32]
	di_108 = SLICE(es_di_106, word16, 0) + cx_100
	es_124 = SLICE(es_di_106, selector, 16) (alias)
	si_111 = di_108 - bx_110
	ax_113 = Mem69[ds:0x4E94<16>:word16] - cx_100
	ds_123 = Mem122[ds:0x2E6F<16>:selector]
	cmpResult_125 = memcmp(ds_123:si_111, es_124:di_108, CONVERT(ax_113, word16, uint32))
	cx_127 = ax_113 - __find_first_difference__(ds_123:si_111, es_124:di_108)
	branch cmpResult_125 == 0<16> l0800_895C
l0800_895B:
	cx_127 = cx_127 + 1<16>
l0800_895C:
	cx_100 = dx_44 + (ax_113 - cx_127)
l0800_8922:
	bx_110 = 1<16>
	cx_100 = dx_44
l0800_8963:
	branch cx_100 <=u Mem150[ds:0x2E2F<16>:word16] l0800_896D
l0800_8969:
	cx_100 = Mem150[ds:0x2E2F<16>:word16]
l0800_896D:
	branch cx_100 <u Mem150[ds:0x2E29<16>:word16] l0800_897E
l0800_8973:
	Mem159[ds:0x2E29<16>:word16] = cx_100
	Mem163[ds:0x2E2B<16>:word16] = bx_110
l0800_897E:
	ax_166 = Mem165[ds:0x4E92<16>:word16]
l0800_88E2:
l0800_8984:
	branch Mem62[ds:0x2E29<16>:word16] != 2<16> l0800_89A5
l0800_898B:
	branch Mem62[ds:0x2E2B<16>:word16] <=u 0x100<16> l0800_89A5
l0800_8996:
	Mem171[ds:0x2E29<16>:word16] = 1<16>
	Mem172[ds:0x2E2B<16>:word16] = 0<16>
l0800_89A5:
	return
fn0800_889A_exit:


void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_7FDC
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_89A8_entry:
l0800_89A8:
	dx_13 = Mem11[ds:0x2E31<16>:word16]
l0800_89B1:
	di_17 = Mem16[ds:0x2E2D<16>:word16]
	es_19 = Mem16[ds:0x2E41<16>:selector]
	ax_20 = Mem16[es_19:di_17 << 1<16>:word16]
	Mem22[es_19:di_17 << 1<16>:word16] = dx_13
	branch Mem22[ds:0x2E2D<16>:word16] == ax_20 l0800_89EA
l0800_89C7:
	es_di_25 = Mem22[ds:0x2E6D<16>:segptr32]
	di_29 = Mem22[SLICE(es_di_25, selector, 16):SLICE(es_di_25, word16, 0) - dx_13:word16]
	Mem32[Mem22[ds:0x2E39<16>:selector]:di_29 << 1<16>:word16] = ax_20
	branch ax_20 != dx_13 l0800_89EA
l0800_89E0:
	Mem36[Mem32[ds:0x2E35<16>:selector]:di_29 << 1<16>:word16] = dx_13
l0800_89EA:
	di_42 = Mem38[Mem38[ds:0x2E6D<16>:segptr32]:word16]
	ax_44 = Mem38[ds:0x2E2D<16>:word16]
	es_45 = Mem38[ds:0x2E39<16>:selector]
	branch Mem38[es_45:di_42 << 1<16>:word16] != dx_13 l0800_8A08
l0800_8A08:
	Mem54[Mem38[ds:0x2E41<16>:selector]:Mem38[Mem38[ds:0x2E35<16>:selector]:di_42 << 1<16>:word16] << 1<16>:word16] = ax_44
l0800_89FF:
	Mem55[es_45:di_42 << 1<16>:word16] = ax_44
l0800_8A18:
	Mem61[Mem57[ds:0x2E35<16>:selector]:di_42 << 1<16>:word16] = ax_44
	es_di_62 = Mem61[ds:0x2E6D<16>:segptr32]
	di_64 = SLICE(es_di_62, word16, 0) (alias)
	bx_68 = Mem61[ds:0x2E69<16>:word16] - (di_64 + 1<16>)
	es_63 = SLICE(es_di_62, selector, 16) (alias)
	al_65 = Mem61[es_di_62:byte]
	di_66 = di_64 + 1<16>
	v27_182 = bx_68 != 0<16>
	cx_70 = bx_68
l0800_8A2F:
	branch cx_70 == 0<16> l0800_8A31
l0800_8A2F_1:
	v27_182 = al_65 != Mem61[es_63:di_238:byte]
	di_66 = di_238 + 1<i16>
	cx_70 = cx_70 - 1<16>
	di_238 = di_66
	branch al_65 != Mem61[es_63:di_238:byte] l0800_8A2F
l0800_8A31:
	branch v27_182 l0800_8A34
l0800_8A33:
	cx_70 = cx_70 - 1<16>
l0800_8A34:
	bx_132 = bx_68 - cx_70
	Mem100[Mem61[ds:0x2E3D<16>:selector]:Mem61[ds:0x2E2D<16>:word16] << 1<16>:word16] = bx_132
l0800_8A86:
	ax_103 = Mem102[ds:0x2E2D<16>:word16]
	ax_104 = ax_103 + 1<16>
	branch ax_103 + 1<16> != dx_13 l0800_8A90
l0800_8A8E:
	ax_104 = 0<16>
l0800_8A90:
	Mem114[ds:0x2E2D<16>:word16] = ax_104
	Mem116[ds:0x2E6D<16>:word16] = Mem114[ds:0x2E6D<16>:word16] + 1<16>
	v23_121 = wArg02 - 1<16>
	wArg02 = v23_121
	branch v23_121 == 0<16> l0800_8AA8
l0800_8AA8:
	return
fn0800_89A8_exit:
l0800_8A9C:
	bx_132 = bx_132 - 1<16>
	branch bx_132 >u 1<16> l0800_8A46
l0800_8A46:
	di_136 = Mem122[ds:0x2E2D<16>:word16]
	Mem139[Mem122[ds:0x2E3D<16>:selector]:di_136 << 1<16>:word16] = bx_132
	es_140 = Mem139[ds:0x2E41<16>:selector]
	v25_142 = Mem139[es_140:di_136 << 1<16>:word16]
	Mem143[es_140:di_136 << 1<16>:word16] = Mem139[ds:0x2E2D<16>:word16]
	branch Mem143[ds:0x2E2D<16>:word16] == v25_142 l0800_8A86
l0800_8A63:
	es_di_147 = Mem143[ds:0x2E6D<16>:segptr32]
	di_152 = Mem143[SLICE(es_di_147, selector, 16):SLICE(es_di_147, word16, 0) - dx_13:word16]
	Mem155[Mem143[ds:0x2E39<16>:selector]:di_152 << 1<16>:word16] = v25_142
	branch v25_142 != dx_13 l0800_8A86
l0800_8A7C:
	Mem159[Mem155[ds:0x2E35<16>:selector]:di_152 << 1<16>:word16] = dx_13
l0800_8AA5:


void fn0800_8ACF(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_8ACF_entry:
l0800_8ACF:
	branch msdos_get_file_attributes(ptrArg02, out cx_19, out ax_20) l0800_8AE9
l0800_8AE9:
	fn0800_8D64(ds, ax_20)
l0800_8ADF:
	Mem35[ptrArg06:word16] = cx_19
l0800_8AED:
	return
fn0800_8ACF_exit:


byte fn0800_8B0D(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 8; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8B5A
//      fn0800_8B69
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax:[8..15]-fn0800_8B5A dx:[0..15]-fn0800_8B5A
// Trashed: SCZO ax dx Top
// Preserved: bp bx cx es si sp
fn0800_8B0D_entry:
l0800_8B0D:
	branch wArg06 != 0<16> l0800_8B36
l0800_8B18:
l0800_8B28:
	branch Mem19[ds:0x224E<16>:word16] != 0<16> l0800_8B1A
l0800_8B1A:
	Mem23[ds:0x224E<16>:word16] = Mem19[ds:0x224E<16>:word16] - 1<16>
	bx_24 = Mem23[ds:0x224E<16>:word16]
	call 0x800<16>:Mem23[ds:(bx_24 << 1<16>) + 0x4E96<16>:word16] (retsize: 2;)
		uses: bx:bx_24 << 1<16>,cx:cx_33,Mem:Mem23
		defs: cx:cx_33
l0800_8B2F:
	fn0800_0150()
	call 0x800<16>:Mem19[ds:0x2352<16>:word16] (retsize: 2;)
		uses: bx:bx_47,cx:cx_46,Mem:Mem19
		defs: bx:bx_47,cx:cx_46
l0800_8B36:
	ax_54 = CONVERT(fn0800_01B9(ds, out dx_55), uint8, uint16)
	fn0800_0163()
	sp_67 = fp - 4<i16>
	branch wArg04 != 0<16> l0800_8B55
l0800_8B55:
	dxOut = dx_55
	return SLICE(ax_54, byte, 8)
fn0800_8B0D_exit:
l0800_8B42:
	branch wArg06 != 0<16> l0800_8B4E
l0800_8B46:
	call 0x800<16>:Mem58[ds:0x2354<16>:word16] (retsize: 2;)
		uses: bx:bx_78,cx:cx_77,Mem:Mem58,Stack +0008:wArg02,Stack +000A:wArg04,Stack +000C:wArg06
	call 0x800<16>:Mem58[ds:0x2356<16>:word16] (retsize: 2;)
		uses: bx:bx_78,cx:cx_77,Mem:Mem58
		defs: bx:bx_78,cx:cx_77,sp:sp_76
l0800_8B4E:
	sp_88 = sp_67 - 2<i16>
	Mem89[ss:sp_88:word16] = wArg02
	fn0800_0164(Mem89[ss:sp_88:byte])


byte fn0800_8B5A(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0D24
//      fn0800_0DCE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[8..15]-fn0800_0D24 dx:[0..15]-fn0800_0D24
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_8B5A_entry:
l0800_8B5A:
	ax_21 = CONVERT(fn0800_8B0D(ds, wArg02, 0<16>, 0<16>, out dx_22), uint8, uint16)
	dxOut = dx_22
	return SLICE(ax_21, byte, 8)
fn0800_8B5A_exit:


void fn0800_8B69(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_8B69_entry:
l0800_8B69:
	fn0800_8B0D(ds, wArg02, 0<16>, 1<16>, out dx_36)
	return
fn0800_8B69_exit:


void fn0800_8B95(segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9764
// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah bx cx dx es Top
// Preserved: bp sp
fn0800_8B95_entry:
l0800_8B95:
	dl_12 = msdos_get_system_date(out dh_10, out cx_11)
	Mem16[ptrArg02:word16] = cx_11
	Mem18[ptrArg02 + 2<i16>:word16] = SEQ(dh_10, dl_12)
	return
fn0800_8B95_exit:


void fn0800_8BA8(segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9764
// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah bx cx dx es Top
// Preserved: bp sp
fn0800_8BA8_entry:
l0800_8BA8:
	cl_13 = msdos_get_system_time(out ch_10, out dh_11, out dl_12)
	Mem18[ptrArg02:word16] = SEQ(ch_10, cl_13)
	Mem20[ptrArg02 + 2<i16>:word16] = SEQ(dh_11, dl_12)
	return
fn0800_8BA8_exit:


int32 fn0800_8BBB(word32 dwArg02, word32 dwArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      fn0800_B6D6
//      fn0800_C177
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx:[0..15]-main Sequence dx:ax:[0..31]-fn0800_C177 sp:[0..15]-main
// Trashed: SCZOP ax bx cx dx sp Top
// Preserved:
fn0800_8BBB_entry:
l0800_8BBB:
l0800_8BC0_thunk_fn0800_8BD8:
	ax_17 = fn0800_8BD8(0<16>, dwArg02, dwArg06, out cx_19, out dx_20, out bx_32)
	cxOut = cx_19
	return SEQ(dx_20, ax_17)
fn0800_8BBB_exit:


word32 fn0800_8BC2(word32 dwArg02, word32 dwArg06, ptr16 & cxOut, ptr16 & bxOut)
// stackDelta: 12; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0B79
//      fn0800_4550
//      fn0800_7FDC
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: bx:[0..15]-fn0800_7FDC cx:[0..15]-fn0800_7FDC Sequence dx:ax:[0..31]-fn0800_0B79 sp:[0..15]-fn0800_0B79
// Trashed: SCZOP ax bx cx dx sp Top
// Preserved:
fn0800_8BC2_entry:
l0800_8BC2:
l0800_8BC8_thunk_fn0800_8BD8:
	ax_14 = fn0800_8BD8(1<16>, dwArg02, dwArg06, out cx_16, out dx_17, out bx_15)
	cxOut = cx_16
	bxOut = bx_15
	return SEQ(dx_17, ax_14)
fn0800_8BC2_exit:


int32 fn0800_8BCA(word32 dwArg02, word32 dwArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      fn0800_C177
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_C177 sp:[0..15]-main
// Trashed: SCZOP ax bx cx dx sp Top
// Preserved:
fn0800_8BCA_entry:
l0800_8BCA:
l0800_8BD0_thunk_fn0800_8BD8:
	return SEQ(dx_17, fn0800_8BD8(2<16>, dwArg02, dwArg06, out cx_28, out dx_17, out bx_29))
fn0800_8BCA_exit:


word16 fn0800_8BD8(word16 cx, word32 dwArg04, word32 dwArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8BBB
//      fn0800_8BC2
//      fn0800_8BCA
// MayUse:  cx:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ax:[0..15]-fn0800_8BCA bx:[0..15]-fn0800_8BC2 cx:[0..15]-fn0800_8BC2 dx:[0..15]-fn0800_8BCA
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp di si sp
fn0800_8BD8_entry:
	wArg06 = SLICE(dwArg04, word16, 16)
	wArg08 = SLICE(dwArg08, word16, 0)
	wArg0A = SLICE(dwArg08, word16, 16)
l0800_8BD8:
	di_100 = cx
	cx_145 = wArg0A
	branch wArg0A != 0<16> l0800_8BF7
l0800_8BEF:
	branch wArg06 == 0<16> l0800_8C5C
l0800_8BF3:
	branch wArg08 == 0<16> l0800_8C5C
l0800_8C5C:
	bx_157 = wArg08
	dx_41 = dwArg04 %u wArg08
	ax_178 = dwArg04 /u wArg08
	branch (cx & 2<16>) == 0<16> l0800_8C65
l0800_8C64:
	ax_178 = dx_41
l0800_8C65:
	dx_174 = 0<16>
l0800_8BF7:
	cx_bx_212 = dwArg08 (alias)
	dx_ax_307 = dwArg04 (alias)
	branch (cx & 1<16>) != 0<16> l0800_8C19
l0800_8BFD:
	dx_ax_210 = dwArg04 (alias)
	branch wArg06 >= 0<16> l0800_8C0B
l0800_8C01:
	dx_ax_210 = -dwArg04
	di_100 = cx | 0xC<16>
l0800_8C0B:
	cx_bx_212 = dwArg08 (alias)
	dx_ax_307 = dx_ax_210 (alias)
	branch wArg0A >= 0<16> l0800_8C19
l0800_8C0F:
	cx_bx_212 = -dwArg08
	di_100 = di_100 ^ 4<16>
	dx_ax_307 = dx_ax_210 (alias)
l0800_8C19:
	bx_207 = SLICE(cx_bx_212, word16, 0) (alias)
	cx_93 = SLICE(cx_bx_212, word16, 16) (alias)
	cx_145 = 0x20<16>
	di_105 = 0<16>
	si_106 = 0<16>
	dx_ax_298 = dx_ax_307 (alias)
l0800_8C23:
	v33_220 = dx_ax_298 << 1<8>
	si_106 = __rcl<word16,byte>(si_106, 1<8>, (SLICE(dx_ax_298, word16, 16) & 0x8000<16>) != 0<16>)
	ax_111 = SLICE(v33_220, word16, 0)
	dx_117 = SLICE(v33_220, word16, 16)
	di_105 = __rcl<word16,byte>(di_105, 1<8>, (si_106 & 0x8000<16>) != 0<16>)
	branch di_105 <u cx_93 l0800_8C3A
l0800_8C2F:
	branch di_105 >u cx_93 l0800_8C35
l0800_8C31:
	branch si_106 <u bx_207 l0800_8C3A
l0800_8C35:
	di_si_215 = SEQ(di_105, si_106) - cx_bx_212
	si_106 = SLICE(di_si_215, word16, 0) (alias)
	di_105 = SLICE(di_si_215, word16, 16) (alias)
	ax_111 = ax_111 + 1<16>
l0800_8C3A:
	cx_145 = cx_145 - 1<16>
	dx_ax_298 = SEQ(dx_117, ax_111) (alias)
	branch cx_145 != 0<16> l0800_8C23
l0800_8C3C:
	bx_157 = di_100
	dx_ax_304 = SEQ(dx_117, ax_111) (alias)
	branch (di_100 & 2<16>) == 0<16> l0800_8C49
l0800_8C43:
	bx_157 = di_100 >>u 1<16>
	dx_ax_304 = SEQ(di_105, si_106) (alias)
l0800_8C49:
	ax_178 = SLICE(dx_ax_304, word16, 0) (alias)
	dx_174 = SLICE(dx_ax_304, word16, 16) (alias)
	branch (bx_157 & 4<16>) == 0<16> l0800_8C56
l0800_8C4F:
	dx_ax_217 = -dx_ax_304
	ax_178 = SLICE(dx_ax_217, word16, 0)
	dx_174 = SLICE(dx_ax_217, word16, 16)
l0800_8C56:
	cxOut = cx_145
	dxOut = dx_174
	bxOut = bx_157
	return ax_178
fn0800_8BD8_exit:


ui32 fn0800_8C69(word16 ax, byte cl, word16 dx)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_46FE
//      fn0800_4C55
//      fn0800_4F2C
//      fn0800_55E8
//      fn0800_5C39
//      fn0800_5E64
//      fn0800_6F20
//      fn0800_A215
// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_A215 sp:[0..15]-fn0800_5C39
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8C69_entry:
l0800_8C69:
	branch cl >=u 0x10<8> l0800_8C81
l0800_8C81:
	return SEQ(ax << cl - 0x10<8>, 0<16>)
l0800_8C71:
	return SEQ(dx << cl | ax >>u -cl + 0x10<8>, ax << cl)
fn0800_8C69_exit:


word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_1F5C
//      fn0800_24FE
//      fn0800_2688
//      fn0800_46FE
// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax:[0..15]-fn0800_24FE cl:[0..7]-fn0800_2688 dx:[0..15]-fn0800_24FE sp:[0..15]-fn0800_46FE
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8C8A_entry:
l0800_8C8A:
	branch cl >=u 0x10<8> l0800_8CA2
l0800_8CA2:
	clOut = cl - 0x10<8>
	dx_ax_20 = CONVERT(dx, int16, int32)
	dxOut = SLICE(dx_ax_20, word16, 16)
	return SLICE(dx_ax_20, word16, 0) >> cl - 0x10<8>
l0800_8C92:
	cl_28 = -cl
	clOut = cl_28 + 0x10<8>
	dxOut = dx >> cl
	return ax >>u cl | dx << cl_28 + 0x10<8>
fn0800_8C8A_exit:


ui32 fn0800_8CAA(word16 ax, byte cl, word16 dx)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_3992
//      fn0800_46FE
//      fn0800_4F2C
//      fn0800_51A9
//      fn0800_5E64
//      fn0800_6F20
// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_6F20 sp:[0..15]-fn0800_51A9
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8CAA_entry:
l0800_8CAA:
	branch cl >=u 0x10<8> l0800_8CC2
l0800_8CC2:
	return CONVERT(dx >>u cl - 0x10<8>, uint16, uint32)
l0800_8CB2:
	return SEQ(dx >>u cl, ax >>u cl | dx << -cl + 0x10<8>)
fn0800_8CAA_exit:


word16 fn0800_8CCB(ui32 cx_bx, word16 ax, word16 dx, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A215
//      fn0800_ABA3
//      fn0800_AD85
// MayUse:  ax:[0..15] dx:[0..15] Sequence cx:bx:[0..31]
// LiveOut: ax:[0..15]-fn0800_A215 cx:[8..15]-fn0800_ABA3 dx:[0..15]-fn0800_A215 sp:[0..15]-fn0800_A215
// Trashed: SCZO ax bx cx dx es sp Top
// Preserved:
fn0800_8CCB_entry:
	cx = SLICE(cx_bx, word16, 16)
	bx = SLICE(cx_bx, word16, 0)
	dh_33 = SLICE(dx, byte, 8) (alias)
	dl_44 = SLICE(dx, byte, 0) (alias)
l0800_8CCB:
	cl_29 = SLICE(cx, byte, 0) (alias)
	branch cx >= 0<16> l0800_8CDE
l0800_8CDE:
	ax_22 = ax + bx
	al_38 = SLICE(ax_22, byte, 0) (alias)
	branch ax_22 >=u 0<16> l0800_8CE6
l0800_8CE2:
	dh_33 = SLICE(dx + 0x1000<16>, byte, 8) (alias)
	dl_44 = SLICE(dx, byte, 0) (alias)
l0800_8CE6:
	chOut = <invalid>
	dxOut = SEQ(dh_33 + (cl_29 << 4<8>), dl_44) + (ax_22 >>u 4<8>)
	return SEQ(SLICE(ax_22 >>u 4<8>, byte, 8), al_38) & 0xF<16>
l0800_8CD2:
	cx_bx_92 = ~cx_bx
	bx_58 = SLICE(cx_bx_92, word16, 0) + 1<16> (alias)
	cl_69 = SLICE(cx_bx_92 + 1<32>, byte, 16) (alias)
l0800_8D0D:
	ax_63 = ax - bx_58
	al_78 = SLICE(ax_63, byte, 0) (alias)
	branch ax_63 >=u 0<16> l0800_8D15
l0800_8D11:
	dx = dx - 0x1000<16>
l0800_8D15:
	chOut = <invalid>
	dxOut = dx - SEQ(cl_69 << 4<8>, 0<8>) + (ax_63 >>u 4<8>)
	return SEQ(SLICE(ax_63 >>u 4<8>, byte, 8), al_78) & 0xF<16>
fn0800_8CCB_exit:


word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8D64
//      fn0800_8E29
//      fn0800_8E52
//      fn0800_8F50
//      fn0800_8F7F
//      fn0800_97F8
//      fn0800_A2A3
//      fn0800_A401
//      fn0800_A53C
//      fn0800_A559
//      fn0800_A57F
//      fn0800_A59D
//      fn0800_A817
//      fn0800_A84A
//      fn0800_B113
//      fn0800_B140
//      fn0800_B2A0
//      fn0800_B97F
//      fn0800_BA4A
//      fn0800_C632
//      fn0800_C779
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-fn0800_C632
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_8D2B_entry:
l0800_8D2B:
	si_13 = wArg02
	branch wArg02 < 0<16> l0800_8D4B
l0800_8D4B:
	si_19 = -wArg02
	branch si_19 > 0x23<16> l0800_8D3B
l0800_8D52:
	Mem23[ds:0x2516<16>:word16] = 0xFFFF<16>
l0800_8D36:
	branch wArg02 <= 0x58<16> l0800_8D3E
l0800_8D3B:
	si_13 = 0x57<16>
l0800_8D3E:
	Mem30[ds:0x2516<16>:word16] = si_13
	si_19 = CONVERT(Mem30[ds:si_13 + 0x2518<16>:byte], int8, int16)
l0800_8D58:
	Mem36[ds:0x7F<16>:word16] = si_19
	return 0xFFFF<16>
fn0800_8D2B_exit:


void fn0800_8D64(selector ds, word16 wArg02)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8ACF
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_8D64_entry:
l0800_8D64:
	fn0800_8D2B(ds, wArg02)
	return
fn0800_8D64_exit:


word16 fn0800_8D76(word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A96D
// MayUse:  Stack +0002:[0..15]
// LiveOut: ax:[0..15]-fn0800_A96D
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_8D76_entry:
l0800_8D76:
	msdos_ioctl_get_device_info(wArg02, out dx_11)
	return dx_11 & 0x80<16>
fn0800_8D76_exit:


void fn0800_8D87(byte bArg02, byte bArg04, word16 wArg06, segptr32 ptrArg08, word32 dwArg0C)
// stackDelta: 16; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8E09
//      fn0800_9828
// MayUse:  ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..7] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx Top
// Preserved: bp di es si sp ss
fn0800_8D87_entry:
	wArg0C = SLICE(dwArg0C, word16, 0)
	wArg0E = SLICE(dwArg0C, word16, 16)
l0800_8D87:
	es_36 = SLICE(ptrArg08, selector, 16) (alias)
	di_124 = SLICE(ptrArg08, word16, 0) (alias)
	bl_23 = SLICE(wArg06, byte, 0) (alias)
	branch wArg06 >u 0x24<16> l0800_8DF7
l0800_8D9B:
	branch bl_23 <u 2<8> l0800_8DF7
l0800_8DA0:
	ax_26 = wArg0C
	cx_28 = wArg0E
	branch wArg0E >= 0<16> l0800_8DBC
l0800_8DAA:
	branch bArg04 == 0<8> l0800_8DBC
l0800_8DB0:
	Mem38[ptrArg08:byte] = 0x2D<8>
	cx_ax_166 = -dwArg0C
	di_124 = di_124 + 1<16>
	ax_26 = SLICE(cx_ax_166, word16, 0)
	cx_28 = SLICE(cx_ax_166, word16, 16)
l0800_8DBC:
	si_107 = fp - 36<i16>
	branch cx_28 == 0<16> l0800_8DD1
l0800_8DC1:
	dx_ax_54 = CONVERT(cx_28, uint16, uint32) (alias)
	dx_ax_62 = SEQ(dx_ax_54 %u wArg06, ax_26) (alias)
	Mem70[ss:si_107:byte] = SLICE(dx_ax_62 %u wArg06, byte, 0)
	ax_58 = dx_ax_54 /u wArg06
	cx_28 = ax_58
	ax_26 = dx_ax_62 /u wArg06
	si_107 = si_107 + 1<16>
	branch ax_58 == 0<16> l0800_8DD9
l0800_8DD9:
	branch ax_26 != 0<16> l0800_8DD1
l0800_8DD1:
	dx_ax_82 = CONVERT(ax_26, uint16, uint32) (alias)
	Mem96[ss:si_107:byte] = SLICE(dx_ax_82 %u wArg06, byte, 0)
	ax_26 = dx_ax_82 /u wArg06
	si_107 = si_107 + 1<16>
l0800_8DDD:
	cx_104 = 36<i16> - fp + si_107
l0800_8DE5:
	si_107 = si_107 - 1<16>
	al_111 = Mem110[ss:si_107:byte]
	branch al_111 >=u 0xA<8> l0800_8DF1
l0800_8DF1:
	al_116 = al_111 - 0xA<8> + bArg02
l0800_8DED:
	al_116 = al_111 + 0x30<8>
l0800_8DF4:
	Mem125[es_36:di_124:byte] = al_116
	di_124 = di_124 + 1<i16>
	cx_104 = cx_104 - 1<16>
	branch cx_104 != 0<16> l0800_8DE5
l0800_8DF7:
	Mem133[es_36:di_124:byte] = 0<8>
	return
fn0800_8D87_exit:
l0800_8DCF:


void fn0800_8E09(word32 dwArg02, word16 wArg06)
// stackDelta: 8; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8E6A
// MayUse:  ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx Top
// Preserved: bp sp
fn0800_8E09_entry:
l0800_8E09:
	fn0800_8D87(0x61<8>, 0<8>, 0xA<16>, dwArg02, CONVERT(wArg06, uint16, uint32))
	return
fn0800_8E09_exit:


word16 fn0800_8E29(selector ds, word16 wArg02, word32 dwArg04, byte bArg08, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_97B6
//      fn0800_ACB3
//      fn0800_B324
//      fn0800_B4BE
//      fn0800_B97F
//      fn0800_C632
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..7]
// LiveOut: ax:[0..15]-fn0800_ACB3 cx:[0..15]-fn0800_ACB3 dx:[0..15]-fn0800_ACB3
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_8E29_entry:
	wArg06 = SLICE(dwArg04, word16, 16)
l0800_8E29:
	Mem13[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] = Mem7[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 0xFDFF<16>
	ax_25 = SLICE(dx_ax_22, word16, 0) (alias)
	dx_51 = SLICE(dx_ax_22, word16, 16) (alias)
	branch msdos_set_file_position(wArg02, dwArg04, bArg08, out dx_ax_22) l0800_8E4B
l0800_8E4B:
	dx_ax_33 = CONVERT(fn0800_8D2B(ds, ax_25), int16, int32 *)
	ax_25 = SLICE(dx_ax_33, word16, 0) (alias)
	dx_51 = SLICE(dx_ax_33, word16, 16) (alias)
l0800_8E49:
l0800_8E50:
	cxOut = wArg06
	dxOut = dx_51
	return ax_25
fn0800_8E29_exit:


word16 fn0800_8E52(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_3678
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_3678
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_8E52_entry:
l0800_8E52:
	branch msdos_mkdir(ptrArg02, out ax_16) l0800_8E64
l0800_8E64:
	ax_22 = fn0800_8D2B(ds, ax_16)
l0800_8E60:
	ax_22 = 0<16>
l0800_8E68:
	return ax_22
fn0800_8E52_exit:


word32 fn0800_8E6A(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word32 dwArg08)
// stackDelta: 12; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A614
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_A614
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_8E6A_entry:
l0800_8E6A:
	dwArg08_144 = dwArg08 (alias)
	branch dwArg08 != 0<16> l0800_8E7D
l0800_8E75:
	dwArg08_144 = SEQ(ds, 0x4ED6<16>) (alias)
l0800_8E7D:
	branch (wArg04 | wArg06) != 0<16> l0800_8E8F
l0800_8E8F:
	dx_ax_147 = SEQ(wArg06, wArg04) (alias)
l0800_8E88:
	dx_ax_147 = SEQ(ds, 0x2572<16>) (alias)
l0800_8E95:
	fn0800_8E09(fn0800_9CE6(dwArg08_144, dx_ax_147), wArg02)
	fn0800_BF5F(dwArg08_144, SEQ(ds, 0x2576<16>))
	return dwArg08_144
fn0800_8E6A_exit:


word32 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & chOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0B79
//      fn0800_7FDC
//      fn0800_ABA3
//      fn0800_AD85
//      fn0800_C04F
//      fn0800_C379
// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: cx:[8..15]-fn0800_ABA3 Sequence dx:ax:[0..31]-fn0800_C04F
// Trashed: SCZOP ax cx dx Top
// Preserved: si sp
fn0800_8F18_entry:
l0800_8F18:
	ax_15 = dx
	branch dx == 0<16> l0800_8F21
l0800_8F1F:
	ax_15 = bx *u dx (alias)
l0800_8F21:
	branch cx == 0<16> l0800_8F28
l0800_8F23:
	ax_15 = ax *u cx + ax_15
l0800_8F28:
	chOut = <invalid>
	dx_ax_43 = bx *u32 ax
	return SEQ(SLICE(dx_ax_43, word16, 16) + ax_15, SLICE(dx_ax_43, word16, 0))
fn0800_8F18_exit:


word32 fn0800_8F2F(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A1D6
//      fn0800_A215
//      fn0800_B0A1
// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: CZ-fn0800_A1D6 bx:[0..15]-fn0800_A1D6 cx:[0..15]-fn0800_A1D6 dx:[0..15]-fn0800_A1D6
// Trashed: SCZO ax bx cx dx Top
// Preserved: sp
fn0800_8F2F_entry:
	al = SLICE(ax, byte, 0)
	bl = SLICE(bx, byte, 0)
l0800_8F2F:
	dx_15 = dx + (ax >>u 4<8>)
	cx_24 = cx + (bx >>u 4<8>)
	bx_29 = SEQ(SLICE(bx >>u 4<8>, byte, 8), bl) (alias)
	SCZO_31 = cond(dx_15 - cx_24)
	ax_26 = SEQ(bl, al) (alias)
	Z_32 = SLICE(SCZO_31, bool, 2) (alias)
	C_37 = SLICE(SCZO_31, bool, 1) (alias)
	branch dx_15 != cx_24 l0800_8F4F
l0800_8F4D:
	SCZO_33 = cond((ax_26 & 0xF<16>) - (bx_29 & 0xF<16>))
	C_37 = SLICE(SCZO_33, bool, 1) (alias)
	Z_32 = SLICE(SCZO_33, bool, 2) (alias)
l0800_8F4F:
	cxOut = cx_24
	dxOut = dx_15
	bxOut = bx_29 & 0xF<16>
	return C_37 | Z_32
fn0800_8F2F_exit:


word16 fn0800_8F50(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & chOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AAB3
//      fn0800_B97F
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax:[0..15]-fn0800_B97F cx:[8..15]-fn0800_AAB3
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp ds sp
fn0800_8F50_entry:
l0800_8F50:
	branch (Mem7[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 2<16>) == 0<16> l0800_8F66
l0800_8F66:
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_24) l0800_8F79
l0800_8F79:
	wLoc04_53 = ax_24
l0800_8F77:
l0800_8F60:
	wLoc04_53 = 5<16>
l0800_8F7A:
	ax_24 = fn0800_8D2B(ds, wLoc04_53)
l0800_8F7D:
	chOut = <invalid>
	return ax_24
fn0800_8F50_exit:


word16 fn0800_8F7F(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DA9
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_19EE
//      fn0800_37DF
//      fn0800_388C
//      fn0800_3BC3
//      fn0800_3C99
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: dx:[0..15]-fn0800_0DA9
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_8F7F_entry:
l0800_8F7F:
	dx_15 = SLICE(ptrArg02, word16, 0) (alias)
	branch msdos_delete_file(ptrArg02, out ax_16) l0800_8F91
l0800_8F91:
	fn0800_8D2B(ds, ax_16)
l0800_8F8D:
l0800_8F95:
	return dx_15
fn0800_8F7F_exit:


word16 fn0800_8F97(word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, selector psegArg0C)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_BF18
// MayUse:  di:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: di:[0..15]-fn0800_BF18
// Trashed: SCZDOP ax bp bx cx di dx es si Top
// Preserved: sp ss
l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_6)
	return di_6
l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_18)
	return di_18
fn0800_8F97_entry:
	def fp
	def ss
	def di
	def ds
	def wArg0A
	def psegArg0C
	def wLoc0A
	def wArg08
	def wArg06
	def wArg02
	def wArg04
l0800_8F97:
	wLoc08_1155 = 0<16>
l0800_8FC6:
l0800_8FC8:
	wLoc08_1424 = PHI((wLoc08_1155, l0800_8FC6), (wLoc08_1256, l0800_911C), (wLoc08_1431, l0800_92AB), (wLoc08_1432, l0800_9391), (wLoc08_1256, l0800_91F1), (wLoc08_1256, l0800_91FD))
	wArg0A_1157 = PHI((wArg0A, l0800_8FC6), (wArg0A_1161, l0800_911C), (wArg0A_1161, l0800_92AB), (wArg0A_1169, l0800_9391), (wArg0A_1161, l0800_91F1), (wArg0A_1161, l0800_91FD))
	di_1109 = PHI((di, l0800_8FC6), (di_1110, l0800_911C), (di_1112, l0800_92AB), (di_1113, l0800_9391), (di_558, l0800_91F1), (di_91, l0800_91FD))
	Mem49 = PHI((Mem45, l0800_8FC6), (Mem1062, l0800_911C), (Mem1063, l0800_92AB), (Mem1064, l0800_9391), (Mem591, l0800_91F1), (Mem529, l0800_91FD))
	si_50 = wArg0A_1157
l0800_8FCB:
	wArg0A_1698 = PHI((wArg0A_1697, l0800_9019), (wArg0A_1697, l0800_902B), (wArg0A_1157, l0800_8FC8))
	wLoc08_1256 = PHI((wLoc08_1279, l0800_9019), (wLoc08_1257, l0800_902B), (wLoc08_1424, l0800_8FC8))
	di_871 = PHI((di_913, l0800_9019), (di_913, l0800_902B), (di_1109, l0800_8FC8))
	si_55 = PHI((si_889, l0800_9019), (si_889, l0800_902B), (si_50, l0800_8FC8))
	Mem53 = PHI((Mem1014, l0800_9019), (Mem888, l0800_902B), (Mem49, l0800_8FC8))
	al_56 = Mem53[psegArg0C:si_55:byte]
	si_57 = si_55 + 1<i16>
	al_58 = al_56
	branch al_56 == 0<8> l0800_9042
l0800_9042:
l0800_9042_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_66)
	return di_66
l0800_8FD4:
	branch al_56 == 0x25<8> l0800_9045
l0800_9045:
	wLoc0C_1159 = 0xFFFF<16>
	es_76 = psegArg0C
	bLoc03_1160 = 0x20<8>
l0800_9051:
	wLoc0C_1200 = PHI((wLoc0C_1159, l0800_9045), (wLoc0C_1200, l0800_9078), (wLoc0C_1200, l0800_9092), (wLoc0C_1200, l0800_90AA), (wLoc0C_1200, l0800_90A4), (wLoc0C_1200, l0800_90BB), (wLoc0C_1200, l0800_909E), (wLoc0C_1200, l0800_9098), (wLoc0C_1252, l0800_907E), (wLoc0C_1253, l0800_9088))
	bLoc03_1162 = PHI((bLoc03_1160, l0800_9045), (bLoc03_1254, l0800_9078), (bLoc03_1199, l0800_9092), (bLoc03_1163, l0800_90AA), (bLoc03_1164, l0800_90A4), (bLoc03_1162, l0800_90BB), (bLoc03_1198, l0800_909E), (bLoc03_1197, l0800_9098), (bLoc03_1162, l0800_907E), (bLoc03_1162, l0800_9088))
	di_87 = PHI((di_871, l0800_9045), (di_91, l0800_9078), (di_91, l0800_9092), (di_91, l0800_90AA), (di_91, l0800_90A4), (di_91, l0800_90BB), (di_91, l0800_909E), (di_91, l0800_9098), (di_827, l0800_907E), (di_827, l0800_9088))
	Mem80 = PHI((Mem77, l0800_9045), (Mem840, l0800_9078), (Mem497, l0800_9092), (Mem117, l0800_90AA), (Mem122, l0800_90A4), (Mem86, l0800_90BB), (Mem492, l0800_909E), (Mem487, l0800_9098), (Mem825, l0800_907E), (Mem837, l0800_9088))
	si_79 = PHI((si_57, l0800_9045), (si_82, l0800_9078), (si_82, l0800_9092), (si_82, l0800_90AA), (si_82, l0800_90A4), (si_82, l0800_90BB), (si_82, l0800_909E), (si_82, l0800_9098), (si_82, l0800_907E), (si_82, l0800_9088))
	si_82 = si_79 + 1<i16>
	ax_83 = CONVERT(Mem80[psegArg0C:si_79:byte], int8, int16)
	wArg0A_1161 = si_82
	di_91 = ax_83
	branch ax_83 < 0<16> l0800_9075
l0800_9075:
l0800_9075_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_100)
	return di_100
l0800_905C:
	bx_110 = CONVERT(Mem86[ds:ax_83 + 0x257C<16>:byte], uint8, uint16) (alias)
	branch bx_110 <=u 0x15<16> l0800_906A
l0800_906A:
	switch (bx_110) { l0800_93BE l0800_93BE l0800_93BE l0800_9071 l0800_9078 l0800_907E l0800_926F l0800_90C2 l0800_90C2 l0800_90CC l0800_91A1 l0800_9092 l0800_909E l0800_9098 l0800_90BD l0800_920B l0800_92B1 l0800_90B0 l0800_90C7 l0800_9127 l0800_90A4 l0800_90AA }
l0800_90AA:
	bLoc03_1163 = bLoc03_1162 | 0x20<8>
l0800_90A4:
	bLoc03_1164 = bLoc03_1162 & 0xDF<8>
l0800_9127:
	bp_128 = fn0800_912A(SEQ(ss, fp - 2<i16>), ds, out di_1715)
l0800_9127_thunk_fn0800_912A:
	fn0800_912A(SEQ(ss, bp_128), ds, out di_143)
	return di_143
l0800_90C7:
	si_150 = 0x10<16>
l0800_90B0:
	ax_151 = wLoc08_1256
	dx_152 = 0<16>
	branch (bLoc03_1162 & 1<8>) == 0<8> l0800_9110
l0800_90BB:
l0800_92B1:
	di_167 = fp - 44<i16>
	cx_168 = 0x10<16>
l0800_92BD:
	di_457 = PHI((di_167, l0800_92B1), (di_459, l0800_92BD_1))
	Mem172 = PHI((Mem164, l0800_92B1), (Mem458, l0800_92BD_1))
	cx_169 = PHI((cx_168, l0800_92B1), (cx_460, l0800_92BD_1))
	branch cx_169 == 0<16> l0800_92BF
l0800_92BF:
	v53_179 = bLoc03_1162 & 0xEF<8>
	al_176 = Mem172[psegArg0C:si_82:byte]
	si_177 = si_82 + 1<i16>
	bLoc03_1167 = v53_179
	branch al_176 != 0x5E<8> l0800_92D0
l0800_92CA:
	bLoc03_1168 = v53_179 | 0x10<8>
	al_189 = Mem185[psegArg0C:si_82 + 1<i16>:byte]
	si_190 = si_82 + 2<i16>
l0800_92D0:
	bLoc03_1336 = PHI((bLoc03_1167, l0800_92BF), (bLoc03_1168, l0800_92CA))
	si_1075 = PHI((si_177, l0800_92BF), (si_190, l0800_92CA))
	Mem1070 = PHI((Mem180, l0800_92BF), (Mem185, l0800_92CA))
	al_1065 = PHI((al_176, l0800_92BF), (al_189, l0800_92CA))
l0800_92D2:
	si_1074 = PHI((si_1075, l0800_92D0), (si_216, l0800_92EE), (si_216, l0800_92F2), (si_216, l0800_92F7))
	Mem206 = PHI((Mem1070, l0800_92D0), (Mem214, l0800_92EE), (Mem214, l0800_92F2), (Mem214, l0800_92F7))
	al_192 = PHI((al_1065, l0800_92D0), (al_215, l0800_92EE), (al_215, l0800_92F2), (al_215, l0800_92F7))
	ax_195 = CONVERT(al_192, uint8, uint16) (alias)
	ch_203 = 1<8> << (al_192 & 7<8>)
	Mem208[ss:fp - 44<i16> + (ax_195 >>u 3<8>):byte] = Mem206[ss:fp - 44<i16> + (ax_195 >>u 3<8>):byte] | ch_203
	dl_193 = al_192
	di_198 = ax_195 >>u 3<8>
l0800_92E4:
	ch_1095 = PHI((ch_203, l0800_92D2), (ch_1095, l0800_92FD), (ch_441, l0800_9311))
	di_1087 = PHI((di_198, l0800_92D2), (di_1087, l0800_92FD), (di_443, l0800_9311))
	dl_427 = PHI((dl_193, l0800_92D2), (dl_427, l0800_92FD), (dl_437, l0800_9311))
	Mem214 = PHI((Mem208, l0800_92D2), (Mem214, l0800_92FD), (Mem448, l0800_9311))
	si_213 = PHI((si_1074, l0800_92D2), (si_433, l0800_92FD), (si_433, l0800_9311))
	al_215 = Mem214[psegArg0C:si_213:byte]
	si_216 = si_213 + 1<i16>
	branch al_215 == 0<8> l0800_9313
l0800_9313:
l0800_9313_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2<i16>), out di_224)
	return di_224
l0800_92EA:
	branch al_215 == 0x5D<8> l0800_9316
l0800_9316:
	v68_231 = wLoc0C_1200 & 0x7FFF<16>
	wArg0A_1169 = si_216
	si_234 = v68_231
	es_di_1708 = SEQ(psegArg0C, di_1087) (alias)
	branch (bLoc03_1336 & 1<8>) != 0<8> l0800_932A
l0800_9327:
	es_di_1709 = fn0800_8FAB(SEQ(ss, fp - 2<i16>), ds) (alias)
l0800_932A:
	es_di_1712 = PHI((es_di_1708, l0800_9316), (es_di_1709, l0800_9327), (es_di_1710, l0800_9364), (es_di_1711, l0800_936A))
	wLoc08_1173 = PHI((wLoc08_1256, l0800_9316), (wLoc08_1256, l0800_9327), (wLoc08_1174, l0800_9364), (wLoc08_1174, l0800_936A))
	Mem254 = PHI((Mem232, l0800_9316), (Mem232, l0800_9327), (Mem267, l0800_9364), (Mem373, l0800_936A))
	si_248 = PHI((si_234, l0800_9316), (si_234, l0800_9327), (si_348, l0800_9364), (si_348, l0800_936A))
	di_268 = SLICE(es_di_1712, word16, 0) (alias)
	es_260 = SLICE(es_di_1712, selector, 16) (alias)
	si_249 = si_248 - 1<16>
	branch si_249 < 0<16> l0800_9385
l0800_932D:
	v72_255 = wLoc08_1173 + 1<16>
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: bx:bx_273,cx:wArg08,dx:dx_274,Mem:Mem267,Stack +0000:v72_255,Stack +0002:wArg06,Stack +0004:wArg08,Stack +0006:es_260,Stack +000A:wArg02,Stack +000C:wArg04,Stack +000E:wArg06,Stack +0010:wArg08,Stack +0012:si_216,Stack +0014:psegArg0C
		defs: ax:ax_271,bx:bx_273,dx:dx_274
	wLoc08_1174 = v72_255
	branch ax_271 < 0<16> l0800_9394
l0800_9394:
	branch si_249 + 1<16> >= v68_231 l0800_9398_thunk_fn0800_93A6
l0800_9398_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_295)
	return di_295
l0800_939A:
	branch (bLoc03_1336 & 1<8>) != 0<8> l0800_939E_thunk_fn0800_93A6
l0800_939E_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_309)
	return di_309
l0800_93A0:
	Mem317[es_di_1712:byte] = 0<8>
l0800_93A3_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_325)
	return di_325
l0800_9341:
	si_348 = si_249
	al_370 = SLICE(ax_271, byte, 0) (alias)
	branch (Mem267[ss:fp - 44<i16> + (ax_271 >>u 3<8>):byte] & 1<8> << (SLICE(ax_271, byte, 0) & 7<8>)) == 0<8> l0800_935E
l0800_935E:
	branch (bLoc03_1336 & 0x10<8>) == 0<8> l0800_936D
l0800_9356:
	branch (bLoc03_1336 & 0x10<8>) == 0<8> l0800_9364
l0800_9364:
	es_di_1710 = es_di_1712 (alias)
	branch (bLoc03_1336 & 1<8>) != 0<8> l0800_932A
l0800_936A:
	Mem373[es_di_1712:byte] = al_370
	es_di_1711 = SEQ(es_260, di_268 + 1<i16>) (alias)
l0800_935C:
l0800_936D:
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: bx:bx_396,cx:cx_395,dx:dx_397,Mem:Mem389,Stack +0000:wLoc0A,Stack +0002:ax_271,Stack +0004:wArg06,Stack +0006:wArg08,Stack +0008:es_260,Stack +000C:wArg02,Stack +000E:wArg04,Stack +0010:wArg06,Stack +0012:wArg08,Stack +0014:si_216,Stack +0016:psegArg0C
		defs: bx:bx_396,cx:cx_395,dx:dx_397,sp:sp_393
	es_401 = Mem389[ss:sp_393 + 6<16>:selector]
	branch si_249 + 1<16> >= v68_231 l0800_938E
l0800_9385:
	es_420 = PHI((es_260, l0800_932A), (es_401, l0800_936D))
	Mem410 = PHI((Mem254, l0800_932A), (Mem404, l0800_936D))
	branch (bLoc03_1336 & 1<8>) != 0<8> l0800_9391
l0800_938B:
l0800_938E:
	es_419 = PHI((es_401, l0800_936D), (es_420, l0800_938B))
	Mem423[es_419:di_268:byte] = 0<8>
	di_424 = di_268 + 1<i16>
l0800_9391:
	di_1113 = PHI((di_268, l0800_9385), (di_424, l0800_938E))
	Mem1064 = PHI((Mem410, l0800_9385), (Mem423, l0800_938E))
	wLoc08_1432 = wLoc08_1173
l0800_92EE:
	branch al_215 != 0x2D<8> l0800_92D2
l0800_92F2:
	branch dl_427 >u Mem214[psegArg0C:si_216:byte] l0800_92D2
l0800_92F7:
	branch Mem214[psegArg0C:si_216:byte] == 0x5D<8> l0800_92D2
l0800_92FD:
	si_433 = si_216 + 1<i16>
	al_434 = Mem214[psegArg0C:si_216:byte] - dl_427
	branch al_434 == 0<8> l0800_92E4
l0800_9303:
	dl_437 = dl_427 + al_434
l0800_9305:
	al_451 = PHI((al_434, l0800_9303), (al_452, l0800_9305))
	Mem446 = PHI((Mem214, l0800_9303), (Mem448, l0800_9305))
	di_442 = PHI((di_1087, l0800_9303), (di_443, l0800_9305))
	ch_439 = PHI((ch_1095, l0800_9303), (ch_441, l0800_9305))
	ch_441 = __rol<byte,byte>(ch_439, 1<8>)
	di_443 = di_442 + CONVERT((ch_439 & 0x80<8>) != 0<8>, bool, word16)
	Mem448[ss:fp - 44<i16> + di_443:byte] = Mem446[ss:fp - 44<i16> + di_443:byte] | ch_441
	al_452 = al_451 - 1<8>
	branch al_452 != 0<8> l0800_9305
l0800_9311:
l0800_92BD_1:
	Mem458[ss:di_457:word16] = 0<16>
	di_459 = di_457 + 2<i16>
	cx_460 = cx_169 - 1<16>
l0800_920B:
	bp_463 = fn0800_920E(SEQ(ss, fp - 2<i16>), ds, out di_1714)
l0800_920B_thunk_fn0800_920E:
	fn0800_920E(SEQ(ss, bp_463), ds, out di_478)
	return di_478
l0800_90BD:
	si_485 = 8<16>
l0800_9098:
	bLoc03_1197 = bLoc03_1162 | 4<8>
l0800_909E:
	bLoc03_1198 = bLoc03_1162 | 2<8>
l0800_9092:
	bLoc03_1199 = bLoc03_1162 | 8<8>
l0800_91A1:
	fn0800_A2D0(ds)
	branch wLoc0A <= 0<16> l0800_9203
l0800_9203:
	fn0800_A2D8(ds)
	branch wLoc0A < 0<16> l0800_919E
l0800_919E:
l0800_919E_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_537)
	return di_537
l0800_9208:
l0800_9208_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2<i16>), out di_547)
	return di_547
l0800_91CA:
	branch (CONVERT(bLoc03_1162, int8, int16) & 1<16>) != 0<16> l0800_91FD
l0800_91FD:
	fn0800_A2D8(ds)
l0800_91D3:
	di_558 = SLICE(fn0800_8FAB(SEQ(ss, fp - 2<i16>), ds), word16, 0) (alias)
	branch (bLoc03_1162 & 4<8>) == 0<8> l0800_91E4
l0800_91E4:
	branch (bLoc03_1162 & 8<8>) == 0<8> l0800_91EF
l0800_91EF:
l0800_91EA:
l0800_91DF:
l0800_91F1:
	fn0800_A2D4(ds)
l0800_90CC:
	si_595 = 0<16>
l0800_90C2:
	si_599 = 0xA<16>
l0800_90CE:
	si_643 = PHI((si_150, l0800_90C7), (si_485, l0800_90BD), (si_599, l0800_90C2), (si_595, l0800_90CC))
	branch (ax_83 & 0x20<16>) != 0<16> l0800_90DD
l0800_90D4:
	branch ax_83 == 0x58<16> l0800_90DD
l0800_90D9:
	bLoc03_1210 = bLoc03_1162 | 4<8>
l0800_90DD:
	bLoc03_1229 = PHI((bLoc03_1162, l0800_90CE), (bLoc03_1162, l0800_90D4), (bLoc03_1210, l0800_90D9))
	ax_660 = fn0800_94B0(ds, wArg02, wArg04, wArg06, wArg08, si_643, wLoc0C_1200 & 0x7FFF<16>, SEQ(ss, fp - 8<i16>), SEQ(ss, fp - 10<i16>), out dx_664, out di_663)
	branch wLoc0A <= 0<16> l0800_911F
l0800_911F:
	branch wLoc0A < 0<16> l0800_9124
l0800_9124:
l0800_9124_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_679)
	return di_679
l0800_9121:
l0800_9121_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2<i16>), out di_689)
	return di_689
l0800_9107:
	branch (bLoc03_1229 & 1<8>) != 0<8> l0800_911C
l0800_910D:
l0800_9110:
	bLoc03_1234 = PHI((bLoc03_1162, l0800_90B0), (bLoc03_1229, l0800_910D))
	dx_718 = PHI((dx_152, l0800_90B0), (dx_664, l0800_910D))
	ax_711 = PHI((ax_151, l0800_90B0), (ax_660, l0800_910D))
	es_di_1707 = fn0800_8FAB(SEQ(ss, fp - 2<i16>), ds)
	Mem712[es_di_1707:word16] = ax_711
	di_704 = SLICE(es_di_1707, word16, 0) (alias)
	di_713 = di_704 + 2<i16>
	branch (bLoc03_1234 & 4<8>) == 0<8> l0800_911C
l0800_911A:
	Mem722[es_di_1707 + 2<i32>:word16] = dx_718
	di_723 = di_704 + 4<i16>
l0800_911C:
	di_1110 = PHI((di_713, l0800_9110), (di_723, l0800_911A), (di_663, l0800_9107))
	Mem1062 = PHI((Mem712, l0800_9110), (Mem722, l0800_911A), (Mem656, l0800_9107))
l0800_926F:
	branch (bLoc03_1162 & 1<8>) != 0<8> l0800_9278
l0800_9275:
	es_di_1716 = fn0800_8FAB(SEQ(ss, fp - 2<i16>), ds)
	di_729 = SLICE(es_di_1716, word16, 0) (alias)
	es_730 = SLICE(es_di_1716, selector, 16) (alias)
l0800_9278:
	di_1104 = PHI((di_91, l0800_926F), (di_729, l0800_9275))
	es_1100 = PHI((es_76, l0800_926F), (es_730, l0800_9275))
	si_740 = wLoc0C_1200
	branch wLoc0C_1200 >= 0<16> l0800_9282
l0800_927F:
	si_746 = 1<16>
l0800_9282:
	si_1102 = PHI((si_740, l0800_9278), (si_746, l0800_927F))
	branch wLoc0C_1200 == 0<16> l0800_92A2
l0800_9284:
	wLoc08_1236 = PHI((wLoc08_1256, l0800_9282), (wLoc08_1237, l0800_929F))
	di_766 = PHI((di_1104, l0800_9282), (di_1105, l0800_929F))
	si_765 = PHI((si_1102, l0800_9282), (si_805, l0800_929F))
	v69_752 = wLoc08_1236 + 1<16>
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: bx:bx_771,cx:wArg08,dx:dx_772,Mem:Mem764,Stack +0000:v69_752,Stack +0002:wArg06,Stack +0004:wArg08,Stack +0006:es_1100,Stack +000A:wArg02,Stack +000C:wArg04,Stack +000E:wArg06,Stack +0010:wArg08,Stack +0012:si_82,Stack +0014:psegArg0C
		defs: ax:ax_769,bx:bx_771,dx:dx_772
	wLoc08_1237 = v69_752
	al_801 = SLICE(ax_769, byte, 0) (alias)
	branch ax_769 < 0<16> l0800_92AE
l0800_92AE:
l0800_92AE_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_790)
	return di_790
l0800_9298:
	branch (bLoc03_1162 & 1<8>) != 0<8> l0800_929F
l0800_929E:
	Mem802[es_1100:di_766:byte] = al_801
	di_803 = di_766 + 1<i16>
l0800_929F:
	di_1105 = PHI((di_766, l0800_9298), (di_803, l0800_929E))
	Mem815 = PHI((Mem764, l0800_9298), (Mem802, l0800_929E))
	si_805 = si_765 - 1<16>
	branch si_805 > 0<16> l0800_9284
l0800_92A2:
	wLoc08_1431 = PHI((wLoc08_1256, l0800_9282), (wLoc08_1237, l0800_929F))
	di_1112 = PHI((di_1104, l0800_9282), (di_1105, l0800_929F))
	Mem813 = PHI((Mem86, l0800_9282), (Mem815, l0800_929F))
	branch (bLoc03_1162 & 1<8>) != 0<8> l0800_92AB
l0800_92A8:
l0800_92AB:
	Mem1063 = PHI((Mem813, l0800_92A2), (Mem821, l0800_92A8))
l0800_907E:
	wLoc0C_1252 = ax_83 - 0x30<16>
	di_827 = wLoc0C_1200
	branch wLoc0C_1200 < 0<16> l0800_9051
l0800_9088:
	wLoc0C_1253 = ax_83 - 0x30<16> + wLoc0C_1200 *u 0xA<16>
l0800_9078:
	bLoc03_1254 = bLoc03_1162 | 1<8>
l0800_9071:
	di_845 = di_87
	al_868 = SLICE(ax_83, byte, 0) (alias)
l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_850)
	return di_850
l0800_9067:
l0800_9067_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_860)
	return di_860
l0800_8FD8:
	wArg0A_1697 = PHI((wArg0A_1698, l0800_8FD4), (wArg0A_1161, l0800_9071))
	si_889 = PHI((si_57, l0800_8FD4), (si_82, l0800_9071))
	di_870 = PHI((di_871, l0800_8FD4), (di_845, l0800_9071))
	al_867 = PHI((al_58, l0800_8FD4), (al_868, l0800_9071))
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: ax:di_870,bx:bx_897,cx:cx_903,dx:dx_898,Mem:Mem888,Stack +0002:wArg06,Stack +0004:wArg08,Stack +0008:wArg02,Stack +000A:wArg04,Stack +000C:wArg06,Stack +000E:wArg08,Stack +0010:wArg0A_1697,Stack +0012:psegArg0C
		defs: ax:ax_895,bx:bx_897,dx:dx_898,sp:sp_894
	ax_869 = CONVERT(al_867, int8, int16)
	wLoc08_1257 = wLoc08_1256 + 1<16>
	cx_903 = Mem888[ss:sp_894 + 2<i16>:word16]
	sp_904 = sp_894 + 4<i16>
	al_911 = SLICE(ax_895, byte, 0) (alias)
	branch ax_895 < 0<16> l0800_9016
l0800_8FEC:
	ax_912 = CONVERT(al_911, int8, int16)
	di_913 = ax_869
	branch ax_869 < 0<16> l0800_902B
l0800_8FF1:
	branch Mem888[ds:ax_869 + 0x257C<16>:byte] != 1<8> l0800_902B
l0800_902B:
	branch ax_912 == ax_869 l0800_8FCB
l0800_902F:
	Mem932[ss:sp_894 + 2<i16>:word16] = wArg08
	Mem935[ss:sp_894:word16] = wArg06
	Mem937[ss:sp_894 - 2<i16>:word16] = ax_912
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: bx:bx_944,cx:cx_943,dx:dx_945,Mem:Mem937
		defs: bx:bx_944,cx:cx_943,dx:dx_945
l0800_903F_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_956)
	return di_956
l0800_8FF8:
	wLoc08_1278 = PHI((wLoc08_1257, l0800_8FF1), (wLoc08_1280, l0800_9004))
	sp_987 = PHI((sp_904, l0800_8FF1), (sp_1035, l0800_9004))
	Mem977 = PHI((Mem888, l0800_8FF1), (Mem1024, l0800_9004))
	ax_965 = PHI((ax_912, l0800_8FF1), (ax_1036, l0800_9004))
	branch SLICE(ax_965, byte, 0) < 0<8> l0800_9019
l0800_8FFD:
	branch Mem977[ds:ax_965 + 0x257C<16>:byte] != 1<8> l0800_9019
l0800_9019:
	sp_988 = sp_987 - 2<i16>
	Mem989[ss:sp_988:word16] = wArg08
	Mem992[ss:sp_988 - 2<i16>:word16] = wArg06
	Mem995[ss:sp_988 - 4<i16>:word16] = ax_965
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: bx:bx_1007,cx:cx_1006,dx:dx_1008,Mem:Mem995
		defs: bx:bx_1007,cx:cx_1006,dx:dx_1008
	wLoc08_1279 = wLoc08_1278 - 1<16>
l0800_9004:
	sp_1020 = sp_987 - 2<i16>
	Mem1021[ss:sp_1020:word16] = wArg08
	Mem1024[ss:sp_1020 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: bx:bx_1028,cx:cx_1034,dx:dx_1029,Mem:Mem1024
		defs: ax:ax_1026,bx:bx_1028,dx:dx_1029,sp:sp_1025
	wLoc08_1280 = wLoc08_1278 + 1<16>
	cx_1034 = Mem1024[ss:sp_1025 + 2<i16>:word16]
	sp_1035 = sp_1025 + 4<i16>
	ax_1036 = ax_1026
	branch ax_1026 > 0<16> l0800_8FF8
l0800_9016:
l0800_9016_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2<i16>), out di_1046)
	return di_1046
fn0800_8F97_exit:


ptr32 fn0800_8FAB(segptr32 ss_bp, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: Sequence es:di:[0..31]-fn0800_8F97
// Trashed: SCZOP di es Top
// Preserved: sp
fn0800_8FAB_entry:
l0800_8FAB:
	es_di_7 = Mem0[ss_bp + 16<i32>:segptr32]
	di_13 = SLICE(es_di_7, word16, 0) (alias)
	branch (Mem0[ss_bp - 1<i32>:byte] & 0x20<8>) == 0<8> l0800_8FBC
l0800_8FBC:
	di_14 = Mem0[es_di_7:word16]
	Mem21[ss_bp + 16<i32>:word16] = Mem17[ss_bp + 16<i32>:word16] + 2<16>
	return SEQ(ds, di_14)
l0800_8FB4:
	es_di_23 = Mem0[ds:di_13:segptr32]
	Mem25[ss_bp + 16<i32>:word16] = Mem0[ss_bp + 16<i32>:word16] + 4<16>
	return es_di_23
fn0800_8FAB_exit:


word16 fn0800_912A(segptr32 ss_bp, selector ds, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-fn0800_8F97 di:[0..15]-fn0800_8F97
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp ss
fn0800_912A_entry:
l0800_912A:
l0800_912A_thunk_fn0800_93C5:
	bp_11 = fn0800_93C5(ss_bp, ds, out di_12)
	diOut = di_12
	return bp_11
fn0800_912A_exit:


void fn0800_9145(segptr32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp ss
fn0800_9145_entry:
l0800_9145:
l0800_9145_thunk_fn0800_93EF:
	fn0800_93EF(ss_bp)
	return
fn0800_9145_exit:


void fn0800_9169(segptr32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp ss
fn0800_9169_entry:
l0800_9169:
l0800_9169_thunk_fn0800_93EF:
	fn0800_93EF(ss_bp)
	return
fn0800_9169_exit:


word16 fn0800_920E(segptr32 ss_bp, selector ds, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-fn0800_8F97 di:[0..15]-fn0800_8F97
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp ss
fn0800_920E_entry:
l0800_920E:
l0800_920E_thunk_fn0800_93C5:
	bp_11 = fn0800_93C5(ss_bp, ds, out di_12)
	diOut = di_12
	return bp_11
fn0800_920E_exit:


word16 fn0800_93A6(segptr32 ss_bp, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
//      fn0800_912A
//      fn0800_93EF
// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-fn0800_93C5 di:[0..15]-fn0800_93C5
// Trashed: SCZO ax bp di es si Top
// Preserved: sp ss
fn0800_93A6_entry:
l0800_93A6:
	call 0x800<16>:Mem15[ss_bp + 6<i32>:word16] (retsize: 2;)
		uses: ax:0xFFFF<16>,Mem:Mem15,Stack +0002:0xFFFF<16>,Stack +0004:Mem9[ss_bp + 8<i32>:word16],Stack +0006:Mem0[ss_bp + 10<i32>:word16]
	Mem24[ss_bp - 4<i32>:word16] = Mem15[ss_bp - 4<i32>:word16] - CONVERT(Mem15[ss_bp - 4<i32>:word16] <u 1<16>, bool, word16)
l0800_93BA_thunk_fn0800_93BE:
	bp_28 = fn0800_93BE(ss_bp, out di_29)
	diOut = di_29
	return bp_28
fn0800_93A6_exit:


word16 fn0800_93BE(segptr32 ss_bp, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
//      fn0800_93A6
// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-fn0800_93A6 di:[0..15]-fn0800_8F97
// Trashed: ax bp di es si sp Top
// Preserved:
fn0800_93BE_entry:
l0800_93BE:
l0800_9453:
	bp_14 = Mem0[ss_bp:word16]
	diOut = wArg02
	return bp_14
fn0800_93BE_exit:


word16 fn0800_93C5(segptr32 ss_bp, selector ds, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_912A
//      fn0800_920E
// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp:[0..15]-fn0800_920E di:[0..15]-fn0800_920E
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp ss
fn0800_93C5_entry:
	ss = SLICE(ss_bp, selector, 16)
	bp = SLICE(ss_bp, word16, 0)
	sp_11 = fp
l0800_93C5:
	Mem8[ss_bp - 6<i16>:word16] = Mem6[ss_bp - 6<i16>:word16] + 1<16>
	sp_12 = sp_11 - 2<i16>
	Mem13[ss:sp_12:word16] = Mem8[ss_bp + 10<i16>:word16]
	Mem16[ss:sp_12 - 2<i16>:word16] = Mem13[ss_bp + 8<i16>:word16]
	call 0x800<16>:Mem16[ss_bp + 4<i16>:word16] (retsize: 2;)
		uses: Mem:Mem16
		defs: ax:ax_21
	sp_11 = fp - 2<i16>
	al_46 = SLICE(ax_21, byte, 0) (alias)
	branch ax_21 <= 0<16> l0800_93EA
l0800_93EA:
	branch ax_21 == 0<16> l0800_93E4
l0800_93EC:
l0800_93ED_thunk_fn0800_93A6:
	bp_38 = fn0800_93A6(ss_bp, out di_39)
	diOut = di_39
	return bp_38
l0800_93D7:
	branch al_46 < 0<8> l0800_93E4
l0800_93DB:
	branch Mem16[ds:ax_21 + 0x257C<16>:byte] == 1<8> l0800_93C5
l0800_93E4:
	call wLoc02 + 3<16> (retsize: 0;)
		uses: cx:wLoc02 + 3<16>,Mem:Mem16
	diOut = di
	return bp
fn0800_93C5_exit:


void fn0800_93EF(segptr32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9145
//      fn0800_9169
// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp ss
fn0800_93EF_entry:
	ss = SLICE(ss_bp, selector, 16)
	sp_16 = fp
l0800_93EF:
	dx_129 = 0<16>
	cx_132 = 4<16>
l0800_93F4:
	v9_10 = Mem9[ss_bp - 10<i16>:word16] - 1<16>
	Mem11[ss_bp - 10<i16>:word16] = v9_10
	cl_52 = SLICE(cx_132, byte, 0) (alias)
	branch v9_10 < 0<16> l0800_9442
l0800_9442:
l0800_93F9:
	sp_17 = sp_16 - 2<i16>
	Mem19[ss:sp_17:word16] = dx_129
	Mem22[ss:sp_17 - 2<i16>:word16] = cx_132
	Mem24[ss_bp - 6<i16>:word16] = Mem22[ss_bp - 6<i16>:word16] + 1<16>
	Mem28[ss:sp_17 - 4<i16>:word16] = Mem24[ss_bp + 10<i16>:word16]
	Mem31[ss:sp_17 - 6<i16>:word16] = Mem28[ss_bp + 8<i16>:word16]
	call 0x800<16>:Mem31[ss_bp + 4<i16>:word16] (retsize: 2;)
		uses: Mem:Mem31
		defs: ax:ax_36,sp:sp_33
	cl_52 = Mem31[ss:sp_33 + 4<i16>:byte] (alias)
	dx_45 = Mem31[ss:sp_33 + 6<i16>:word16]
	sp_16 = sp_33 + 8<i16>
	al_56 = SLICE(ax_36, byte, 0) (alias)
	branch ax_36 <= 0<16> l0800_9444
l0800_940F:
	cl_52 = cl_52 - 1<8>
	branch cl_52 < 1<8> l0800_9444
l0800_9413:
	ch_105 = al_56 - 0x30<8>
	branch al_56 <u 0x30<8> l0800_9444
l0800_941A:
	branch al_56 <u 0x3A<8> l0800_9436
l0800_941F:
	ch_104 = al_56 - 0x41<8>
	branch al_56 <u 0x41<8> l0800_9444
l0800_9424:
	branch al_56 <u 0x47<8> l0800_9433
l0800_9429:
	ch_104 = al_56 - 0x61<8>
	branch al_56 <u 0x61<8> l0800_9444
l0800_942E:
	branch al_56 >=u 0x67<8> l0800_9444
l0800_9444:
	branch cl_52 == 4<8> l0800_944F
l0800_944F:
l0800_9450_thunk_fn0800_93A6:
	fn0800_93A6(ss_bp, out di_178)
	return
l0800_9449:
	call wLoc02 + 3<16> (retsize: 0;)
		uses: cx:wLoc02 + 3<16>,Mem:Mem79
	return
fn0800_93EF_exit:
l0800_9433:
	ch_105 = ch_104 + 0xA<8>
l0800_9436:
	dx_129 = SEQ(SLICE(dx_45 << 4<16>, byte, 8), (SLICE(dx_45, byte, 0) << 4<8>) + ch_105) (alias)
	cx_132 = SEQ(ch_105, cl_52 - 1<8>) (alias)


bool fn0800_9485(byte cl, byte bl, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_94B0
// MayUse:  bx:[0..7] cl:[0..7]
// LiveOut: C-fn0800_94B0 bx:[0..15]-fn0800_94B0
// Trashed: SCZO bx Top
// Preserved: sp
fn0800_9485_entry:
	bl_8 = SLICE(bx, byte, 0) (alias)
l0800_9485:
	bl_16 = bl_8 - 0x30<8>
	branch bl_8 <u 0x30<8> l0800_94AD
l0800_948B:
	branch bl_8 <=u 0x39<8> l0800_94A2
l0800_9490:
	branch bl_8 >u 0x5A<8> || bl_8 <u 0x30<8> l0800_949A
l0800_949A:
	bl_16 = bl_8 - 0x57<8>
l0800_9495:
	bl_16 = bl_8 - 0x37<8>
l0800_949D:
	branch bl_16 <=u 9<8> l0800_94AD
l0800_94A2:
	branch bl_16 >=u cl l0800_94AD
l0800_94AD:
	bx_38 = bx
	C_40 = true
l0800_94A6:
	C_40 = false
	bx_38 = CONVERT(bl_16, uint8, uint16) (alias)
l0800_94AF:
	bxOut = bx_38
	return C_40
fn0800_9485_exit:


word16 fn0800_94B0(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, segptr32 ptrArg0E, segptr32 ptrArg12, ptr16 & dxOut, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: ax:[0..15]-fn0800_8F97 di:[0..15]-fn0800_8F97 dx:[0..15]-fn0800_8F97
// Trashed: SCZOP ax bx cx di dx es si Top
// Preserved: bp ds sp ss
fn0800_94B0_entry:
l0800_94B0:
	sp_123 = fp - 0xC<16>
	bLoc03_548 = 0<8>
	wLoc06_549 = 0<16>
l0800_94C6:
	v9_23 = wLoc06_549 + 1<16>
	sp_28 = sp_123 - 2<i16>
	Mem29[ss:sp_28:word16] = wArg08
	Mem32[ss:sp_28 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem32
		defs: ax:ax_38,sp:sp_36
	wLoc06_549 = v9_23
	sp_123 = sp_36 + 4<i16>
	ax_124 = ax_38
	al_53 = SLICE(ax_38, byte, 0) (alias)
	branch ax_38 < 0<16> l0800_9549
l0800_94D8:
	ax_115 = CONVERT(al_53, int8, int16)
	branch (SLICE(ax_115, byte, 0) & 0x80<8>) != 0<8> l0800_94E7
l0800_94DF:
	branch (Mem32[ds:ax_115 + 0x2251<16>:byte] & 1<8>) != 0<8> l0800_94C6
l0800_94E7:
	ax_124 = ax_115
	al_81 = SLICE(ax_115, byte, 0) (alias)
	wArg0C_559 = wArg0C - 1<16>
	branch wArg0C < 1<16> l0800_9550
l0800_94ED:
	branch al_81 == 0x2B<8> l0800_94F8
l0800_94F1:
	branch al_81 != 0x2D<8> l0800_950F
l0800_94F5:
	bLoc03_548 = 1<8>
l0800_94F8:
	wArg0C_559 = wArg0C - 2<16>
	branch wArg0C < 2<16> l0800_9550
l0800_94FD:
	Mem103[ss:sp_36 + 2<i16>:word16] = wArg08
	Mem106[ss:sp_36:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem106
		defs: ax:ax_115,sp:sp_113
	wLoc06_549 = v9_23 + 1<16>
	sp_123 = sp_113 + 4<i16>
	ax_124 = ax_115
	branch ax_115 < 0<16> l0800_9549
l0800_9549:
	wLoc08_576 = 0xFFFF<16>
l0800_950F:
	al_140 = SLICE(ax_115, byte, 0) (alias)
	cl_182 = SLICE(wArg0A, byte, 0) (alias)
	branch wArg0A == 0<16> l0800_956E
l0800_956E:
	wArg0A = 0xA<16>
	branch al_140 != 0x30<8> l0800_959E
l0800_9577:
	v74_145 = wArg0C_559 - 1<16>
	wArg0C_559 = v74_145
	branch v74_145 < 0<16> l0800_956B
l0800_957C:
	sp_154 = sp_123 - 2<i16>
	Mem155[ss:sp_154:word16] = wArg08
	Mem158[ss:sp_154 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem158
		defs: ax:ax_162,sp:sp_160
	wLoc06_549 = wLoc06_549 + 1<16>
	al_172 = SLICE(ax_162, byte, 0) (alias)
	sp_123 = sp_160 + 4<i16>
	wArg0A = 8<16>
	branch al_172 == 0x78<8> l0800_9597
l0800_9593:
	di_si_537 = 0<32> (alias)
	branch al_172 != 0x58<8> l0800_95C8
l0800_9597:
	wArg0A = 0x10<16>
l0800_9518:
	ax_124 = ax_115 (alias)
	branch wArg0A >u 0x24<16> l0800_9550
l0800_951D:
	ax_124 = ax_115 (alias)
	branch cl_182 <u 2<8> l0800_9550
l0800_9522:
	branch al_140 != 0x30<8> l0800_959E
l0800_959E:
	ax_124 = bx_203
	branch fn0800_9485(SLICE(wArg0A, byte, 0), SLICE(ax_115, byte, 0), out bx_203) l0800_9550
l0800_9550:
	wLoc08_576 = 0<16>
l0800_9555:
	sp_222 = sp_123 - 2<i16>
	Mem223[ss:sp_222:word16] = wArg08
	Mem226[ss:sp_222 - 2<i16>:word16] = wArg06
	Mem234[ss:sp_222 - 4<i16>:word16] = ax_124
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: Mem:Mem234
		defs: sp:sp_247
	sp_123 = sp_247 + 6<16>
	wLoc06_549 = wLoc06_549 - 1<16>
	ax_496 = 0<16> (alias)
	dx_408 = 0<16> (alias)
l0800_95A8:
	di_si_537 = CONVERT(bx_203, uint16, uint32) (alias)
l0800_9526:
	branch cl_182 != 0x10<8> l0800_959C
l0800_952B:
	v35_265 = wArg0C_559 - 1<16>
	wArg0C_559 = v35_265
	branch v35_265 < 0<16> l0800_956B
l0800_956B:
	di_si_811 = 0<32> (alias)
l0800_9530:
	sp_273 = sp_123 - 2<i16>
	Mem274[ss:sp_273:word16] = wArg08
	Mem277[ss:sp_273 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem277
		defs: ax:ax_280,sp:sp_278
	wLoc06_549 = wLoc06_549 + 1<16>
	al_289 = SLICE(ax_162, byte, 0) (alias)
	sp_123 = sp_278 + 4<i16>
	branch al_289 == 0x78<8> l0800_959C
l0800_9542:
	branch al_289 == 0x58<8> l0800_959C
l0800_959C:
	di_si_537 = 0<32> (alias)
l0800_9546:
	di_si_537 = 0<32> (alias)
l0800_95C8:
	di_320 = SLICE(di_si_537, word16, 16) (alias)
	si_312 = SLICE(di_si_537, word16, 0) (alias)
	ax_311 = bx_304
	branch fn0800_9485(SLICE(wArg0A, byte, 0), SLICE(ax_162, byte, 0), out bx_304) l0800_95AB
l0800_95AB:
	di_si_537 = SEQ(di_320, bx_304) + wArg0A *u32 si_312
	branch SLICE(di_si_537, word16, 16) != 0<16> l0800_95E5
l0800_95E5:
	v58_329 = wArg0C_559 - 1<16>
	di_344 = SLICE(di_si_537, word16, 16) (alias)
	si_343 = SLICE(di_si_537, word16, 0) (alias)
	wArg0C_559 = v58_329
	di_si_811 = di_si_537 (alias)
	branch v58_329 < 0<16> l0800_9612
l0800_95EA:
	sp_338 = sp_123 - 2<i16>
	Mem339[ss:sp_338:word16] = wArg08
	Mem342[ss:sp_338 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem342
		defs: ax:ax_348,sp:sp_346
	wLoc06_549 = wLoc06_549 + 1<16>
	sp_123 = sp_346 + 4<i16>
	ax_311 = bx_362
	di_si_819 = di_si_537 (alias)
	branch fn0800_9485(SLICE(wArg0A, byte, 0), SLICE(ax_348, byte, 0), out bx_362) l0800_95D4
l0800_95D4:
	dx_ax_382 = wArg0A *u32 di_344
	ax_si_542 = SEQ(SLICE(dx_ax_382, word16, 0), bx_362) + wArg0A *u32 si_343
	di_si_537 = ax_si_542 (alias)
	branch SLICE(dx_ax_382, byte, 16) + SLICE(dx_ax_382, byte, 24) + CONVERT(SLICE(ax_si_542, word16, 16) <u 0<16>, bool, byte) != 0<8> l0800_9636
l0800_9636:
	ah_al_544 = CONVERT(bLoc03_548, uint8, uint16) + 0xFFFF<16>
	dx_408 = SLICE(cond(SLICE(ah_al_544, byte, 8)), bool, 1) + 0x7FFF<16>
	wLoc08_576 = 2<16>
	ax_496 = ah_al_544 (alias)
l0800_95B5:
	v48_417 = wArg0C_559 - 1<16>
	wArg0C_559 = v48_417
	di_si_811 = di_si_537 (alias)
	branch v48_417 < 0<16> l0800_9612
l0800_95BA:
	sp_429 = sp_123 - 2<i16>
	Mem430[ss:sp_429:word16] = wArg08
	Mem433[ss:sp_429 - 2<i16>:word16] = wArg06
	call 0x800<16>:wArg02 (retsize: 2;)
		uses: Mem:Mem433
		defs: ax:ax_446,sp:sp_444
	wLoc06_549 = wLoc06_549 + 1<16>
	sp_123 = sp_444 + 4<i16>
l0800_95D2:
	di_si_819 = di_si_537 (alias)
l0800_9602:
	sp_460 = sp_123 - 2<i16>
	Mem461[ss:sp_460:word16] = wArg08
	Mem464[ss:sp_460 - 2<i16>:word16] = wArg06
	Mem467[ss:sp_460 - 4<i16>:word16] = ax_311
	call 0x800<16>:wArg04 (retsize: 2;)
		uses: Mem:Mem467
		defs: sp:sp_471
	sp_123 = sp_471 + 6<16>
	wLoc06_549 = wLoc06_549 - 1<16>
	di_si_811 = di_si_819 (alias)
l0800_9612:
	wLoc08_576 = 1<16>
	dx_408 = SLICE(di_si_811, word16, 16)
	ax_496 = SLICE(di_si_811, word16, 0)
	branch bLoc03_548 == 0<8> l0800_9622
l0800_961B:
	dx_ax_539 = -di_si_811
	ax_496 = SLICE(dx_ax_539, word16, 0)
	dx_408 = SLICE(dx_ax_539, word16, 16)
l0800_9622:
	Mem518[ptrArg0E:word16] = Mem512[ptrArg0E:word16] + wLoc06_549
	Mem524[ptrArg12:word16] = wLoc08_576
l0800_964C:
	di_528 = Mem524[ss:sp_123:word16]
	dxOut = dx_408
	diOut = di_528
	return ax_496
fn0800_94B0_exit:


void fn0800_9652(segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah al cx dx es Top
// Preserved: bp si sp
fn0800_9652_entry:
l0800_9652:
	dx_17 = Mem11[ptrArg02 + 2<i16>:word16]
	msdos_set_system_date(Mem11[ptrArg02:word16], SLICE(dx_17, byte, 8), SLICE(dx_17, byte, 0))
	return
fn0800_9652_exit:


void fn0800_9667(segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah al cx dx es Top
// Preserved: bp si sp
fn0800_9667_entry:
l0800_9667:
	cx_16 = Mem11[ptrArg02:word16]
	dx_17 = Mem11[ptrArg02 + 2<i16>:word16]
	msdos_get_system_time(SLICE(cx_16, byte, 0), SLICE(cx_16, byte, 8), SLICE(dx_17, byte, 8), SLICE(dx_17, byte, 0))
	return
fn0800_9667_exit:


word32 fn0800_9764(selector ds, segptr32 ptrArg02, ptr16 & cxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: cx:[0..15]-main Sequence dx:ax:[0..31]-main
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_9764_entry:
l0800_9764:
	fn0800_8B95(SEQ(ss, fp - 6<i16>))
	fn0800_8BA8(SEQ(ss, fp - 10<i16>))
	ax_50 = fn0800_C04F(ds, SEQ(ss, fp - 6<i16>), SEQ(ss, fp - 10<i16>), out cx_52, out dx_53)
	branch ptrArg02 == 0<16> l0800_97AC
l0800_979C:
	Mem75[ptrArg02 + 2<i16>:word16] = dx_53
	Mem76[ptrArg02:word16] = ax_50
l0800_97AC:
	cxOut = cx_52
	return SEQ(dx_53, ax_50)
fn0800_9764_exit:


int32 fn0800_97B6(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AD2F
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_AD2F
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_97B6_entry:
l0800_97B6:
	return SEQ(dx_27, fn0800_8E29(ds, wArg02, 0<32>, 1<8>, out cx_48, out dx_27))
fn0800_97B6_exit:


byte fn0800_97CC(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0C29
//      fn0800_0C6C
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..7]-fn0800_0C29 dx:[0..15]-fn0800_0C6C
// Trashed: SCZOP ax bx dx Top
// Preserved: bp sp
fn0800_97CC_entry:
l0800_97CC:
	dl_12 = SLICE(wArg02, byte, 0) (alias)
	branch wArg02 != 0xFFFF<16> l0800_97DC
l0800_97DC:
	branch (Mem7[ds:CONVERT(dl_12, uint8, uint16) + 0x2251<16>:byte] & 8<8>) == 0<8> l0800_97F2
l0800_97F2:
	ax_27 = CONVERT(dl_12, uint8, uint16) (alias)
l0800_97E9:
	ax_27 = CONVERT(dl_12, uint8, uint16) + 0xFFE0<16>
l0800_97D7:
	ax_27 = 0xFFFF<16>
l0800_97F6:
	dxOut = wArg02
	return SLICE(ax_27, byte, 0)
fn0800_97CC_exit:


void fn0800_97F8(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A614
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_97F8_entry:
l0800_97F8:
	branch msdos_delete_file(ptrArg02, out ax_16) l0800_980A
l0800_980A:
	fn0800_8D2B(ds, ax_16)
l0800_9806:
l0800_980E:
	return
fn0800_97F8_exit:


word16 fn0800_9810(segptr32 es_di, byte dh, byte dl)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9828
// MayUse:  dh:[0..7] dl:[0..7] Sequence es:di:[0..31]
// LiveOut: di:[0..15]-fn0800_9828
// Trashed: SCZO ax di Top
// Preserved: es sp
fn0800_9810_entry:
	es = SLICE(es_di, selector, 16)
l0800_9810:
	di_10 = fn0800_9817(es_di, dh)
l0800_9815_thunk_fn0800_9817:
	return fn0800_9817(SEQ(es, di_10), dl)
fn0800_9810_exit:


word16 fn0800_9817(segptr32 es_di, byte al)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9810
// MayUse:  al:[0..7] Sequence es:di:[0..31]
// LiveOut: di:[0..15]-fn0800_9810
// Trashed: SCZO ax di Top
// Preserved: es sp
fn0800_9817_entry:
	es = SLICE(es_di, selector, 16)
l0800_9817:
	ax_5 = __aam(al)
	al_6 = SLICE(ax_5, byte, 0) (alias)
	di_15 = fn0800_9820(es_di, SLICE(ax_5, byte, 8))
l0800_981E_thunk_fn0800_9820:
	return fn0800_9820(SEQ(es, di_15), al_6)
fn0800_9817_exit:


word16 fn0800_9820(segptr32 es_di, byte al)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9817
// MayUse:  al:[0..7] Sequence es:di:[0..31]
// LiveOut: di:[0..15]-fn0800_9817
// Trashed: SCZO al di Top
// Preserved: sp
fn0800_9820_entry:
	di = SLICE(es_di, word16, 0)
l0800_9820:
	Mem12[es_di:byte] = al + 0xD0<8> + CONVERT(__daa(al + 0x90<8>, &(al + 0x90<8>)), bool, byte)
	return di + 1<i16>
fn0800_9820_exit:


word16 fn0800_9828(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & diOut)
// stackDelta: 14; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B2EF
//      fn0800_BEA2
// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: di:[0..15]-fn0800_B2EF si:[0..15]-fn0800_B2EF
// Trashed: SCZDO ax di si Top
// Preserved: P bp bx cx dx es sp ss
fn0800_9828_entry:
l0800_9828:
	bLoc16_1808 = 0x50<8> (alias)
l0800_988C:
	sp_20 = fp - 0x9E<16>
	wLoc06_1324 = fp - 0x98<16>
l0800_9895:
	di_29 = wLoc06_1325
l0800_9898:
	psegArg06_1805 = SLICE(ptrArg04_1326, selector, 16) (alias)
	es_1125 = SLICE(ptrArg04_1326, selector, 16) (alias)
	si_1127 = SLICE(ptrArg04_1326, word16, 0) (alias)
l0800_989B:
	al_37 = Mem36[es_1125:si_35:byte]
	si_38 = si_35 + 1<i16>
	al_39 = al_37
	branch al_37 == 0<8> l0800_98B3
l0800_98B3:
l0800_98A1:
	branch al_37 == 0x25<8> l0800_98B6
l0800_98B6:
	al_49 = Mem48[es_1125:si_38:byte]
	si_50 = si_38 + 1<i16>
	branch al_49 == 0x25<8> l0800_98A5
l0800_98BF:
	wLoc06_1328 = di_53
	ch_1220 = 0<8> (alias)
	wLoc10_1329 = 0<16>
	wLoc04_1330 = 0x20<16>
	bLoc0D_1331 = 0<8>
	wLoc0A_1332 = 0xFFFF<16>
	wLoc0C_1333 = 0xFFFF<16>
l0800_98DD:
	ax_67 = CONVERT(al_66, uint8, uint16) (alias)
	bl_70 = SLICE(ax_67, byte, 0) (alias)
	bh_75 = SLICE(ax_67, byte, 8) (alias)
	ah_65 = 0<8>
	dx_68 = ax_67
	dl_140 = SLICE(ax_67, byte, 0) (alias)
	bx_76 = SEQ(bh_75, bl_70 - 0x20<8>) (alias)
	cx_1248 = SEQ(ch_845, 0<8>) (alias)
	branch bl_70 >=u 0x80<8> l0800_98FE
l0800_98EB:
	bl_78 = Mem77[ds:bx_76 + 0x2605<16>:byte]
	bx_79 = SEQ(bh_75, bl_78) (alias)
	cx_1245 = SEQ(ch_845, 0<8>) (alias)
	branch bx_79 <=u 0x17<16> l0800_98F7
l0800_98F7:
	bx_83 = bx_79 << 1<16>
	cx_1246 = SEQ(ch_845, 0<8>) (alias)
	switch (bx_79) { l0800_9917 l0800_9901 l0800_994C l0800_990C l0800_997A l0800_9987 l0800_99C5 l0800_99CC l0800_99D1 l0800_9935 l0800_99FA l0800_99D8 l0800_99DC l0800_99E0 l0800_9A55 l0800_9B02 l0800_9AA5 l0800_9AC5 l0800_9C46 l0800_9C82 l0800_9C82 l0800_9C82 l0800_9927 l0800_992D }
l0800_992D:
	wLoc04_1335 = wLoc04_1334 | 0x20<16>
l0800_9927:
	wLoc04_1336 = wLoc04_1334 & 0xFFDF<16>
l0800_9C46:
	ptrArg04_1641 = SEQ(psegArg06_1805, si_97) (alias)
	branch (wLoc04_1334 & 0x20<16>) != 0<16> l0800_9C5E
l0800_9C5E:
	es_di_104 = Mem98[ds:wArg02_1338:segptr32]
	es_127 = SLICE(es_di_104, selector, 16) (alias)
	di_129 = SLICE(es_di_104, word16, 0) (alias)
	wArg02_1339 = wArg02_1338 + 4<16>
l0800_9C53:
	di_108 = Mem98[ss:wArg02_1338:word16]
	sp_113 = sp_1284 - 2<i16>
	Mem114[ss:sp_113:word16] = ds
	wArg02_1340 = wArg02_1338 + 2<16>
	es_115 = Mem114[ss:sp_113:selector]
l0800_9C65:
	Mem130[es_126:di_128:word16] = CONVERT(0x50<8> - bLoc16_1583, uint8, uint16)
	sp_1287 = sp_1284
	branch (wLoc04_1334 & 0x10<16>) == 0<16> l0800_9C7F
l0800_9C78:
	Mem138[es_126:di_128 + 2<16>:word16] = 0<16>
l0800_9C7F:
l0800_9AC5:
	ptrArg04_1653 = SEQ(psegArg06_1805, si_97) (alias)
	branch (wLoc04_1334 & 0x20<16>) != 0<16> l0800_9AE2
l0800_9AE2:
	es_di_147 = Mem141[ds:wArg02_1338:segptr32]
	es_150 = SLICE(es_di_147, selector, 16) (alias)
	di_152 = SLICE(es_di_147, word16, 0) (alias)
	wArg02_1348 = wArg02_1338 + 4<16>
	v75_1316 = es_di_147 != 0<16>
l0800_9AD5:
	di_157 = Mem141[ss:wArg02_1338:word16]
	sp_160 = sp_1284 - 2<i16>
	Mem161[ss:sp_160:word16] = ds
	wArg02_1349 = wArg02_1338 + 2<16>
	es_162 = Mem161[ss:sp_160:selector]
	di_164 = di_157
	v74_1315 = di_157 != 0<16>
l0800_9AED:
	branch v73_1314 l0800_9AF4
l0800_9AEF:
	sp_172 = sp_1284 - 2<i16>
	Mem175[ss:sp_172:word16] = ds
	es_176 = Mem175[ss:sp_172:selector]
	di_178 = 0x25FE<16>
l0800_9AF4:
	sp_1296 = sp_1284
	cx_184 = fn0800_9842(di_179, es_181)
	branch cx_184 <=u wLoc0C_1352 l0800_9AFF
l0800_9AFC:
	cx_196 = wLoc0C_1352
l0800_9AFF:
l0800_9AA5:
	sp_203 = sp_1284 - 2<i16>
	Mem204[ss:sp_203:word16] = ss
	wArg02_1355 = wArg02_1338 + 2<16>
	es_205 = Mem204[ss:sp_203:selector]
	sp_206 = sp_203 + 2<i16>
	di_207 = fp - 71<i16>
	cx_215 = 1<16>
	ptrArg04_1649 = SEQ(psegArg06_1805, si_97) (alias)
l0800_9B02:
	cx_220 = wLoc0C_1352
	ptrArg04_1661 = SEQ(psegArg06_1805, si_97) (alias)
	branch wLoc0C_1352 >= 0<16> l0800_9B15
l0800_9B12:
	cx_226 = 6<16>
l0800_9B15:
	sp_228 = sp_1284 - 2<i16>
	Mem230[ss:sp_228:word16] = ss
	Mem233[ss:sp_228 - 2<i16>:word16] = wArg02_1338
	Mem236[ss:sp_228 - 4<i16>:word16] = cx_235
	Mem238[ss:sp_228 - 6<i16>:word16] = ss
	Mem242[ss:sp_228 - 8<i16>:word16] = fp - 71<i16>
	Mem245[ss:sp_228 - 10<i16>:word16] = ax_67
	Mem249[ss:sp_228 - 12<i16>:word16] = wLoc04_1334 & 1<16>
	branch (wLoc04_1334 & 0x100<16>) == 0<16> l0800_9B36
l0800_9B36:
	wArg02_1361 = wArg02_1338 + 8<16>
	ax_258 = 6<16>
l0800_9B2D:
	ax_259 = 8<16>
	wArg02_1362 = wArg02_1338 + 0xA<16>
l0800_9B3D:
	Mem267[ss:sp_228 - 14<i16>:word16] = ax_265
	fn0800_A2CC(ds)
	Mem271[ss:sp_228 - 16<i16>:word16] = ss
	sp_273 = sp_228 - 14<i16>
	es_di_2109 = SEQ(Mem271[ss:sp_228 - 16<i16>:selector], fp - 71<i16>) (alias)
l0800_9A55:
	sp_281 = sp_1284 - 2<i16>
	Mem282[ss:sp_281:word16] = Mem277[ss:wArg02_1338:word16]
	di_278 = fp - 72<i16>
	wArg02_1365 = wArg02_1338 + 2<16>
	ptrArg04_1664 = SEQ(psegArg06_1805, si_97) (alias)
	branch (wLoc04_1334 & 0x20<16>) == 0<16> l0800_9A80
l0800_9A70:
	dx_290 = Mem285[ss:wArg02_1338 + 2<16>:word16]
	Mem296[ss:sp_281 - 2<i16>:word16] = ss
	es_297 = Mem296[ss:sp_281 - 2<i16>:selector]
	di_303 = fn0800_9810(SEQ(es_297, fp - 72<i16>), SLICE(dx_290, byte, 8), SLICE(dx_290, byte, 0))
	Mem309[es_297:di_303:byte] = 0x3A<8>
	wArg02_1366 = wArg02_1338 + 4<16>
	di_310 = di_303 + 1<i16>
l0800_9A80:
	Mem314[ss:sp_281 - 2<i16>:word16] = ss
	dx_317 = Mem314[ss:sp_281:word16]
	es_315 = Mem314[ss:sp_281 - 2<i16>:selector]
	di_324 = fn0800_9810(SEQ(es_315, di_319), SLICE(dx_317, byte, 8), SLICE(dx_317, byte, 0))
	Mem329[ss:di_324:byte] = 0<8>
	sp_318 = sp_281 + 2<i16>
	wLoc04_1369 = wLoc04_1334 & 0xFFFB<16>
	di_336 = di_324 - (fp - 72<i16>)
	dx_340 = wLoc0C_1352
	branch wLoc0C_1352 > di_336 l0800_9AA2
l0800_9AA0:
	dx_343 = di_336
l0800_9AA2:
	es_di_2110 = SEQ(es_315, fp - 72<i16>) (alias)
l0800_99E0:
	bx_2113 = SEQ(0x10<8>, dl_140 + 0xE9<8>) (alias)
l0800_99DC:
	bx_2106 = SEQ(0xA<8>, bl_78 << 1<8>) (alias)
l0800_99D8:
	bx_2112 = SEQ(8<8>, bl_78 << 1<8>) (alias)
l0800_99E6:
	bLoc0D_1371 = 0<8>
	bx_2105 = bx_2114 (alias)
l0800_99EA:
	dx_358 = 0<16>
	bLoc08_1373 = 0<8>
	ax_365 = Mem363[ss:wArg02_1338:word16]
	bx_2099 = bx_2107 (alias)
l0800_99FA:
	dx_ax_371 = CONVERT(Mem368[ss:wArg02_1338:word16], int16, int32)
	bLoc08_1376 = 1<8>
	ax_396 = SLICE(dx_ax_371, word16, 0) (alias)
	dx_404 = SLICE(dx_ax_371, word16, 16) (alias)
	bx_2100 = SEQ(0xA<8>, bl_78 << 1<8>) (alias)
l0800_9A0A:
	di_373 = wArg02_1338 + 1<16>
	bh_443 = SLICE(bx_2101, byte, 8) (alias)
	di_374 = di_373 + 1<16>
	ptrArg04_1638 = SEQ(psegArg06_1805, si_97) (alias)
	branch (wLoc04_1334 & 0x10<16>) == 0<16> l0800_9A1B
l0800_9A16:
	dx_385 = Mem380[ss:di_373 + 1<16>:word16]
	di_387 = di_373 + 3<16>
l0800_9A1B:
	wArg02_1382 = di_389
	branch ax_395 != 0<16> l0800_9A32
l0800_9A25:
	dx_405 = dx_402
	branch dx_402 != 0<16> l0800_9A32
l0800_9A32:
	wLoc04_1385 = wLoc04_1334 | 4<16>
l0800_9A29:
	bx_1262 = bx_2101 (alias)
	branch wLoc0C_1352 != 0<16> l0800_9A36
l0800_9A36:
	sp_426 = sp_1284 - 2<i16>
	Mem430[ss:sp_426:word16] = dx_402
	Mem434[ss:sp_426 - 2<i16>:word16] = ax_395
	Mem436[ss:sp_426 - 4<i16>:word16] = ss
	Mem440[ss:sp_426 - 6<i16>:word16] = fp - 71<i16>
	ax_448 = CONVERT(bh_443, int8, int16)
	Mem450[ss:sp_426 - 8<i16>:word16] = ax_448
	Mem456[ss:sp_426 - 10<i16>:word16] = SEQ(SLICE(ax_448, byte, 8), bLoc08_1392)
	Mem466[ss:sp_426 - 12<i16>:word16] = bx_2101
	fn0800_8D87(Mem466[ss:sp_426 - 12<i16>:byte], Mem466[ss:sp_426 - 10<i16>:byte], Mem466[ss:sp_426 - 8<i16>:word16], Mem466[ss:sp_426 - 6<i16>:segptr32], Mem466[ss:sp_426 - 2<i16>:word32])
	Mem478[ss:sp_426:word16] = ss
	es_479 = Mem478[ss:sp_426:selector]
	sp_480 = sp_426 + 2<i16>
	dx_482 = wLoc0C_1352
	branch wLoc0C_1352 >= 0<16> l0800_9A52
l0800_9A52:
	es_di_2103 = SEQ(es_479, fp - 71<i16>) (alias)
l0800_9A4F:
	es_di_2108 = SEQ(es_479, fp - 71<i16>) (alias)
l0800_9B46:
	es_508 = SLICE(es_di_2111, selector, 16) (alias)
	di_505 = SLICE(es_di_2111, word16, 0) (alias)
	branch (wLoc04_1396 & 8<16>) == 0<16> l0800_9B65
l0800_9B4D:
	dx_499 = wLoc0A_1406
	es_di_2102 = es_di_2111 (alias)
	branch wLoc0A_1406 <= 0<16> l0800_9B65
l0800_9B54:
	es_507 = SLICE(es_di_2104, selector, 16) (alias)
	di_504 = SLICE(es_di_2104, word16, 0) (alias)
	cx_511 = fn0800_9842(di_504, es_507)
	branch Mem516[es_di_2104:byte] != 0x2D<8> l0800_9B5E
l0800_9B5D:
	cx_519 = cx_511 - 1<16>
l0800_9B5E:
	dx_524 = dx_522 - cx_523
	branch dx_524 <= 0<16> l0800_9B65
l0800_9B62:
	wLoc10_1412 = dx_524
l0800_9B65:
	branch Mem536[es_532:di_534:byte] == 0x2D<8> l0800_9B76
l0800_9B6B:
	branch bLoc0D_1413 == 0<8> l0800_9B86
l0800_9B72:
	di_548 = di_534 - 1<16>
	Mem550[es_532:di_548:byte] = bLoc0D_1413
l0800_9B76:
	branch wLoc10_1428 <= 0<16> l0800_9B86
l0800_9B7C:
	branch wLoc0C_1352 >= 0<16> l0800_9B86
l0800_9B83:
	wLoc10_1451 = wLoc10_1428 - 1<16>
l0800_9B86:
	cx_571 = fn0800_9842(di_566, es_532)
l0800_9B89:
	ax_591 = wLoc04_1482 & 5<16>
	si_578 = di_576
	di_588 = di_53
	bx_589 = wLoc0A_1406
	branch ax_591 != 5<16> l0800_9BAF
l0800_9B9C:
	branch dl_140 != 0x6F<8> l0800_9BB1
l0800_9BB1:
	branch dl_140 == 0x78<8> l0800_9BBB
l0800_9BB6:
	branch dl_140 != 0x58<8> l0800_9BCC
l0800_9BBB:
	v45_610 = wLoc10_1512 - 2<16>
	wLoc04_1510 = wLoc04_1482 | 0x40<16>
	bx_609 = wLoc0A_1406 - 2<16>
	wLoc10_1517 = v45_610
	branch v45_610 >= 0<16> l0800_9BCC
l0800_9BC7:
	wLoc10_1518 = 0<16>
l0800_9BA4:
	branch wLoc10_1512 > 0<16> l0800_9BAF
l0800_9BAA:
	wLoc10_1519 = 1<16>
l0800_9BAF:
l0800_9BCC:
	cx_629 = cx_619 + wLoc10_1520
	branch (wLoc04_1522 & 2<16>) != 0<16> l0800_9BE2
l0800_9BD6:
l0800_9BDE:
	branch bx_634 > cx_629 l0800_9BD8
l0800_9BD8:
	fn0800_984F(SEQ(ss, fp - 2<i16>), 0x20<8>, cx_629, dx_679, bx_634, di_644, out di_647)
	bx_651 = bx_634 - 1<16>
l0800_9BE2:
	branch (wLoc04_1522 & 0x40<16>) == 0<16> l0800_9BF4
l0800_9BE9:
	fn0800_984F(SEQ(ss, fp - 2<i16>), dl_140, cx_629, dx_679, bx_673, di_692, out di_701)
l0800_9BF4:
	dx_709 = wLoc10_1520
	branch wLoc10_1520 <= 0<16> l0800_9C22
l0800_9BFB:
	cx_715 = cx_629 - wLoc10_1520
	bx_717 = bx_673 - wLoc10_1520
	al_732 = Mem627[es_721:di_576:byte]
	branch al_732 == 0x2D<8> l0800_9C0E
l0800_9C06:
	branch al_732 == 0x20<8> l0800_9C0E
l0800_9C0A:
	branch al_732 != 0x2B<8> l0800_9C15
l0800_9C0E:
	si_743 = di_576 + 1<i16>
	fn0800_984F(SEQ(ss, fp - 2<i16>), Mem627[es_721:di_576:byte], cx_715, wLoc10_1520, bx_717, di_752, out di_757)
	cx_761 = cx_715 - 1<16>
	bx_762 = bx_717 - 1<16>
l0800_9C15:
	cx_768 = wLoc10_1520
	branch wLoc10_1520 == 0<16> l0800_9C20
l0800_9C19:
	fn0800_984F(SEQ(ss, fp - 2<i16>), 0x30<8>, cx_777, cx_766, bx_793, di_775, out di_780)
	cx_784 = cx_777 - 1<16>
	branch cx_784 != 0<16> l0800_9C19
l0800_9C20:
	dx_788 = cx_787
	cx_789 = cx_766
l0800_9C22:
	branch cx_790 == 0<16> l0800_9C36
l0800_9C24:
	bx_794 = bx_791 - cx_790
l0800_9C26:
	Mem803[ss:di_802:byte] = Mem798[es_721:si_797:byte]
	v50_806 = bLoc16_1534 - 1<8>
	si_800 = si_797 + 1<i16>
	di_804 = di_802 + 1<16>
	bLoc16_1535 = v50_806
	branch v50_806 > 0<8> l0800_9C34
l0800_9C31:
	fn0800_9858(SEQ(ss, fp - 2<i16>), cx_811, dx_1210, bx_794, di_804, out di_814)
l0800_9C34:
	cx_820 = cx_811 - 1<16>
	branch cx_820 != 0<16> l0800_9C26
l0800_9C36:
	bx_823 = bx_821
	branch bx_821 <= 0<16> l0800_9C43
l0800_9C3A:
	cx_828 = bx_821
l0800_9C3C:
	fn0800_984F(SEQ(ss, fp - 2<i16>), 0x20<8>, cx_837, dx_1210, bx_821, di_835, out di_840)
	cx_844 = cx_837 - 1<16>
	branch cx_844 != 0<16> l0800_9C3C
l0800_9C43:
l0800_9A2F:
l0800_9935:
	branch ch_845 >u 0<8> l0800_9987
l0800_993A:
	branch (wLoc04_1334 & 2<16>) != 0<16> l0800_996A
l0800_9941:
	wLoc04_1536 = wLoc04_1334 | 8<16>
	ch_857 = 1<8>
l0800_99CC:
	wLoc04_1537 = wLoc04_1334 | 0x100<16>
l0800_99D1:
	wLoc04_1539 = wLoc04_1538 & 0xFFEF<16>
l0800_99C5:
	wLoc04_1540 = wLoc04_1334 | 0x10<16>
l0800_9931:
	ch_876 = 5<8>
l0800_9987:
	ax_884 = CONVERT(SLICE(ax_67, byte, 0) - 0x30<8>, int8, int16)
	ah_1228 = SLICE(ax_884, byte, 8) (alias)
	branch ch_845 >u 2<8> l0800_99A9
l0800_99A9:
	cx_1255 = SEQ(ch_845, 0<8>) (alias)
	branch ch_845 != 4<8> l0800_9949
l0800_99AE:
	wLoc0C_1542 = ax_884
	branch wLoc0C_1352 == 0<16> l0800_996A
l0800_99B5:
	wLoc0C_1543 = ax_884 + wLoc0C_1352 * 0xA<16>
l0800_9990:
	ch_909 = 2<8>
	wLoc0A_1545 = ax_884
	branch wLoc0A_1406 < 0<16> l0800_996A
l0800_9999:
	wLoc0A_1546 = ax_884 + wLoc0A_1406 * 0xA<16>
l0800_997A:
	cx_1253 = SEQ(ch_845, 0<8>) (alias)
	branch ch_845 >=u 4<8> l0800_9949
l0800_997F:
	ch_929 = 4<8>
	wLoc0C_1547 = wLoc0C_1352 + 1<16>
l0800_990C:
	cx_1249 = SEQ(ch_845, 0<8>) (alias)
	branch ch_845 >u 0<8> l0800_98FE
l0800_9911:
	wLoc04_1548 = wLoc04_1334 | 2<16>
l0800_994C:
	ax_941 = Mem77[ss:wArg02_1338:word16]
	ah_1227 = SLICE(ax_941, byte, 8) (alias)
	wArg02_1549 = wArg02_1338 + 2<16>
	branch ch_845 >=u 2<8> l0800_996D
l0800_996D:
	cx_1254 = SEQ(ch_845, 0<8>) (alias)
	branch ch_845 != 4<8> l0800_9949
l0800_9949:
l0800_9972:
	wLoc0C_1550 = ax_941
	ch_949 = ch_845 + 1<8>
l0800_995B:
	ax_951 = ax_941
	branch ax_941 >= 0<16> l0800_9965
l0800_995F:
	ax_956 = -ax_941
	wLoc04_1551 = wLoc04_1334 | 2<16>
l0800_9965:
	wLoc0A_1552 = ax_962
	ch_966 = 3<8>
l0800_996A:
l0800_9901:
	cx_1250 = SEQ(ch_845, 0<8>) (alias)
	branch ch_845 >u 0<8> l0800_98FE
l0800_9906:
	wLoc04_1553 = wLoc04_1334 | 1<16>
l0800_9917:
	cx_1251 = SEQ(ch_845, 0<8>) (alias)
	branch ch_845 >u 0<8> l0800_98FE
l0800_98FE:
l0800_991C:
	branch bLoc0D_1419 == 0x2B<8> l0800_9925
l0800_9922:
	bLoc0D_1554 = dl_140
l0800_9925:
l0800_98DB:
	al_998 = Mem994[es_1125:si_97:byte]
	si_999 = si_97 + 1<i16>
l0800_98F4:
l0800_9C82:
	dx_1256 = ax_67
	si_1009 = si_38
	di_1011 = di_53
	ax_1229 = SEQ(ah_1224, 0x25<8>) (alias)
l0800_9C8D:
	ax_1231 = SEQ(ah_1230, al_1029) (alias)
	ah_1230 = SLICE(CONVERT(fn0800_984F(SEQ(ss, fp - 2<i16>), SLICE(ax_1013, byte, 0), cx_1236, ax_67, bx_1232, di_1017, out di_1022), uint8, uint16), byte, 8) (alias)
	al_1029 = Mem1006[psegArg06_1805:si_1027:byte]
	si_1030 = si_1027 + 1<i16>
	branch al_1029 != 0<8> l0800_9C8D
l0800_9C96:
	branch bLoc16_1583 >= 0x50<8> l0800_9C9F
l0800_9C9C:
	fn0800_9858(SEQ(ss, fp - 2<i16>), cx_1044, dx_1046, bx_1042, di_1048, out di_2116)
l0800_9C9F:
	sp_1066 = sp_1284 + 2<i16>
	branch true l0800_9CAB
l0800_9CAB:
l0800_9CA6:
l0800_9CAE:
	si_1077 = Mem1038[ss:sp_1066 + 2<i16>:word16]
	diOut = Mem1038[ss:sp_1066:word16]
	return si_1077
fn0800_9828_exit:
l0800_98A5:
	Mem1085[ss:di_53:byte] = al_1082
	v18_1088 = bLoc16_1583 - 1<8>
	di_1086 = di_53 + 1<16>
	bLoc16_1629 = v18_1088
	branch v18_1088 > 0<8> l0800_989B
l0800_98AE:
	fn0800_9858(SEQ(ss, fp - 2<i16>), cx_1266, dx_1277, bx_1259, di_1086, out di_1096)


word16 fn0800_9842(word16 di, selector es)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9828
// MayUse:  di:[0..15] es:[0..15]
// LiveOut: cx:[0..15]-fn0800_9828
// Trashed: SCZO al cx Top
// Preserved: di sp
fn0800_9842_entry:
l0800_9842:
	cx_13 = 0xFFFF<16>
l0800_9848:
	branch cx_13 == 0<16> l0800_984A
l0800_9848_1:
	di = di_46 + 1<i16>
	cx_13 = cx_13 - 1<16>
	di_46 = di
	branch Mem7[es:di_46:byte] == 0<8> l0800_9848
l0800_984A:
	return -cx_13
fn0800_9842_exit:


byte fn0800_984F(segptr32 ss_bp, byte al, word16 cx, word16 dx, word16 bx, word16 di, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9828
// MayUse:  ax:[0..7] bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax:[8..15]-fn0800_9828 di:[0..15]-fn0800_9828
// Trashed: SZO ax di Top
// Preserved: C bp sp ss
fn0800_984F_entry:
	al = SLICE(ax, byte, 0)
	ss = SLICE(ss_bp, selector, 16)
l0800_984F:
	Mem7[ss:di:byte] = al
	v9_10 = Mem7[ss_bp - 20<i32>:byte] - 1<8>
	Mem11[ss_bp - 20<i32>:byte] = v9_10
	branch v9_10 != 0<8> l0800_988B_in_fn0800_984F
l0800_988B_in_fn0800_984F:
	diOut = di + 1<16>
	return SLICE(ax, byte, 8)
l0800_9856_thunk_fn0800_9858:
	ax_18 = CONVERT(fn0800_9858(ss_bp, cx, dx, bx, di + 1<16>, out di_19), uint8, uint16)
	diOut = di_19
	return SLICE(ax_18, byte, 8)
fn0800_984F_exit:


byte fn0800_9858(segptr32 ss_bp, word16 cx, word16 dx, word16 bx, word16 di, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9828
//      fn0800_984F
// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax:[8..15]-fn0800_984F di:[0..15]-fn0800_9828
// Trashed: SCZO ax di Top
// Preserved: bx cx dx es sp
fn0800_9858_entry:
	bp = SLICE(ss_bp, word16, 0)
l0800_9858:
	di_20 = di - (bp - 0x96<16>)
	call 0x800<16>:Mem34[ss_bp + 14<i32>:word16] (retsize: 2;)
		uses: ax:bp - 0x96<16>,bx:bx,cx:cx,dx:dx,Mem:Mem34,Stack +0002:Mem31[ss_bp + 10<i32>:word16],Stack +0004:Mem28[ss_bp + 12<i32>:word16],Stack +0006:di_20,Stack +0008:bp - 0x96<16>,Stack +000E:dx,Stack +0010:cx,Stack +0012:bx
		defs: ax:ax_39
	branch ax_39 != 0<16> l0800_987B
l0800_9876:
	Mem47[ss_bp - 22<i32>:word16] = 1<16>
l0800_987B:
	Mem50[ss_bp - 20<i32>:word16] = 0x50<16>
	Mem53[ss_bp - 18<i32>:word16] = Mem50[ss_bp - 18<i32>:word16] + di_20
l0800_988B:
	diOut = bp - 0x96<16>
	return SLICE(ax_39, byte, 8)
fn0800_9858_exit:


word32 fn0800_9CE6(word32 dwArg02, word32 dwArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8E6A
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_8E6A
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp si sp
fn0800_9CE6_entry:
	wArg04 = SLICE(dwArg02, word16, 16)
	wArg02 = SLICE(dwArg02, word16, 0)
l0800_9CE6:
	ax_18 = fn0800_BFC7(dwArg06, out cx_87)
	fn0800_B03B(dwArg02, dwArg06, ax_18 + 1<16>)
	return SEQ(wArg04, wArg02 + ax_18)
fn0800_9CE6_exit:


byte fn0800_9D41(word16 dx, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9E75
// MayUse:  dx:[0..15]
// LiveOut: ax:[8..15]-fn0800_9E75 bx:[0..15]-fn0800_9E75 cx:[0..15]-fn0800_9E75 dx:[0..15]-fn0800_9E75
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9D41_entry:
l0800_9D41:
	branch dx == Mem0[0800:9D35:word16] l0800_9D7F
l0800_9D48:
	ds_9 = Mem0[dx:2<16>:selector]
	branch Mem0[ds_9:2<16>:word16] == 0<16> l0800_9D5C
l0800_9D5C:
	branch ds_9 == Mem0[0800:9D35:word16] l0800_9D7A
l0800_9D7A:
	dx = Mem0[0800:9D35:word16]
l0800_9D7F:
	Mem16[0800:9D35:word16] = 0<16>
	Mem17[0800:9D37:word16] = 0<16>
	Mem18[0800:9D39:word16] = 0<16>
l0800_9D65:
	Mem20[0800:9D37:word16] = Mem0[ds_9:8<16>:word16]
	fn0800_9E15(ds_9)
	wLoc02_69 = ds_9
	ds_36 = Mem29[0800:9D3B:selector]
l0800_9D55:
	Mem37[0800:9D37:word16] = ds_9
l0800_9D94:
	ds_36 = Mem38[0800:9D3B:selector]
	wLoc02_69 = dx
l0800_9D9D:
	ax_58 = CONVERT(fn0800_A1D6(ds_36, 0<16>, wLoc02_69, out cx_60, out dx_61, out bx_59), uint8, uint16)
	cxOut = cx_60
	dxOut = dx_61
	bxOut = bx_59
	return SLICE(ax_58, byte, 8)
fn0800_9D41_exit:


byte fn0800_9DA4(word16 dx, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9E75
// MayUse:  dx:[0..15]
// LiveOut: ax:[8..15]-fn0800_9E75 bx:[0..15]-fn0800_9E75
// Trashed: SCZO ax bx ds es Top
// Preserved: DP cx dx sp
fn0800_9DA4_entry:
l0800_9DA4:
	es_9 = Mem8[dx:2<16>:selector]
	Mem10[dx:2<16>:word16] = 0<16>
	Mem11[dx:8<16>:word16] = es_9
	wLoc02_68 = dx
	branch dx == Mem11[0800:9D35:word16] l0800_9DEA
l0800_9DBC:
	branch Mem11[es_9:2<16>:word16] != 0<16> l0800_9DEA
l0800_9DEA:
	bx_18 = fn0800_9E3E(dx)
l0800_9DC4:
	ax_26 = Mem11[dx:0<16>:word16]
	Mem32[es_9:0<16>:word16] = Mem30[es_9:0<16>:word16] + ax_26
	bx_18 = dx
	wLoc02_68 = es_9
	dx_34 = dx + ax_26
	branch Mem32[dx_34:2<16>:word16] != 0<16> l0800_9DE3
l0800_9DE3:
	Mem38[dx_34:2<16>:word16] = es_9
l0800_9DDC:
	Mem39[dx_34:8<16>:word16] = es_9
l0800_9DED:
	ax_49 = wLoc02_68 + Mem44[wLoc02_68:0<16>:word16]
	branch Mem44[ax_49:2<16>:word16] == 0<16> l0800_9DFF
l0800_9DFF:
	Mem55[wLoc02_68:0<16>:word16] = Mem44[wLoc02_68:0<16>:word16] + Mem44[ax_49:0<16>:word16]
	Mem61[ax_49 + Mem55[ax_49:0<16>:word16]:2<16>:word16] = wLoc02_68
l0800_9E11_thunk_fn0800_9E15:
	bxOut = fn0800_9E15(ax_49)
	return SLICE(wLoc02_68, byte, 8)
l0800_9DFE:
	bxOut = bx_18
	return SLICE(ax_49, byte, 8)
fn0800_9DA4_exit:


word16 fn0800_9E15(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9D41
//      fn0800_9DA4
//      fn0800_9F89
// MayUse:  ds:[0..15]
// LiveOut: bx:[0..15]-fn0800_9DA4
// Trashed: SCZO bx es Top
// Preserved: ds sp
fn0800_9E15_entry:
l0800_9E15:
	branch ds == Mem0[ds:6<16>:word16] l0800_9E36
l0800_9E36:
	Mem9[0800:9D39:word16] = 0<16>
	return
l0800_9E1D:
	es_10 = Mem0[ds:6<16>:selector]
	ds_11 = Mem0[ds:4<16>:selector]
	Mem12[ds_11:6<16>:word16] = es_10
	Mem13[es_10:4<16>:word16] = ds_11
	Mem14[0800:9D39:word16] = ds_11
	return
fn0800_9E15_exit:


word16 fn0800_9E3E(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9DA4
// MayUse:  ds:[0..15]
// LiveOut: bx:[0..15]-fn0800_9DA4
// Trashed: SCZDOP ax bx es Top
// Preserved: sp ss
fn0800_9E3E_entry:
l0800_9E3E:
	ax_5 = Mem0[0800:9D39:word16]
	branch ax_5 == 0<16> l0800_9E67
l0800_9E67:
	Mem12[0800:9D39:word16] = ds
	Mem13[ds:4<16>:word16] = ds
	Mem14[ds:6<16>:word16] = ds
	return bx
l0800_9E46:
	__cli()
	es_23 = Mem21[ax_5:6<16>:selector]
	Mem24[ax_5:6<16>:word16] = ds
	Mem25[ds:4<16>:word16] = ax_5
	Mem29[es_23:4<16>:word16] = ds
	Mem30[ds:6<16>:word16] = es_23
	return ss
fn0800_9E3E_exit:


byte fn0800_9E75(selector ds, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_4346
//      fn0800_A006
//      fn0800_A080
//      fn0800_A614
//      fn0800_BA89
// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax:[8..15]-fn0800_4346 bx:[0..15]-fn0800_4346 cx:[0..15]-fn0800_4346 ds:[0..15]-fn0800_A614 dx:[0..15]-fn0800_4346
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_9E75_entry:
l0800_9E75:
	Mem16[0800:9D3B:word16] = ds
	dx_18 = wArg04
	branch wArg04 == 0<16> l0800_9E95
l0800_9E86:
	branch wArg04 != Mem16[0800:9D37:word16] l0800_9E92
l0800_9E92:
	ax = CONVERT(fn0800_9DA4(wArg04, out bx), uint8, uint16)
l0800_9E8D:
	ax = CONVERT(fn0800_9D41(wArg04, out cx, out dx_18, out bx), uint8, uint16)
l0800_9E95:
	ds_44 = Mem16[0800:9D3B:selector]
	cxOut = cx
	dxOut = dx_18
	bxOut = bx
	dsOut = ds_44
	return SLICE(ax, byte, 8)
fn0800_9E75_exit:


word16 fn0800_9E9E(word16 ax, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9F89
// MayUse:  ax:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_9F9F dx:[0..15]-fn0800_9F9F
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9E9E_entry:
l0800_9E9E:
	ax_17 = fn0800_A215(Mem7[0800:9D3B:selector], 0<32>, out dx_133)
	branch (ax_17 & 0xF<16>) == 0<16> l0800_9EC7
l0800_9EB3:
	fn0800_A215(Mem16[0800:9D3B:selector], CONVERT(0x10<16> - (ax_17 & 0xF<16>), uint16, uint32), out dx_134)
l0800_9EC7:
	branch fn0800_A215(Mem60[0800:9D3B:selector], SEQ(CONVERT(SLICE(ax, byte, 8), uint8, uint16) >>u 4<8>, ax << 4<8>), out dx_78) == 0xFFFF<16> l0800_9EFE
l0800_9EFE:
	dxOut = 0<16>
	return 0<16>
l0800_9EE6:
	Mem94[0800:9D35:word16] = dx_78
	Mem95[0800:9D37:word16] = dx_78
	Mem97[dx_78:0<16>:word16] = ax
	Mem98[dx_78:2<16>:word16] = dx_78
	dxOut = dx_78
	return 4<16>
fn0800_9E9E_exit:


word16 fn0800_9F02(word16 ax, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9F89
// MayUse:  ax:[0..15] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_9F9F dx:[0..15]-fn0800_9F9F
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9F02_entry:
	ah_9 = SLICE(ax, byte, 8) (alias)
l0800_9F02:
	ds_17 = Mem7[0800:9D3B:selector]
	ax_22 = fn0800_A215(ds_17, SEQ(CONVERT(ah_9, uint8, uint16) >>u 4<8>, ax << 4<8>), out dx_25)
	branch ax_22 == 0xFFFF<16> l0800_9F58
l0800_9F20:
	branch (ax_22 & 0xF<16>) != 0<16> l0800_9F3D
l0800_9F3D:
	branch fn0800_A215(ds_17, CONVERT(-(ax_22 & 0xF<16>) + 0x10<16>, uint16, uint32), out dx_131) == 0xFFFF<16> l0800_9F58
l0800_9F58:
	dxOut = 0<16>
	return 0<16>
l0800_9F55:
	dx_25 = dx_25 + 1<16>
l0800_9F25:
	cx_79 = Mem78[0800:9D37:word16]
	Mem81[0800:9D37:word16] = dx_25
	Mem84[dx_25:0<16>:word16] = ax
	Mem85[dx_25:2<16>:word16] = cx_79
	dxOut = dx_25
	return 4<16>
fn0800_9F02_exit:


word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9F89
// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15]
// LiveOut: ax:[0..15]-fn0800_9F9F dx:[0..15]-fn0800_9F9F
// Trashed: SCZO ax bx ds dx Top
// Preserved: sp
fn0800_9F5C_entry:
l0800_9F5C:
	Mem10[ds:0<16>:word16] = Mem0[ds:0<16>:word16] - ax
	dx_11 = dx + Mem10[ds:0<16>:word16]
	Mem13[dx_11:0<16>:word16] = ax
	Mem14[dx_11:2<16>:word16] = dx
	Mem19[dx_11 + Mem14[dx_11:0<16>:word16]:2<16>:word16] = dx_11
	dxOut = dx_11
	return 4<16>
fn0800_9F5C_exit:


word16 fn0800_9F7F(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_BA89
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-fn0800_BA89 bp:[0..15]-fn0800_BA89 di:[0..15]-fn0800_BA89 ds:[0..15]-fn0800_BA89 dx:[0..15]-fn0800_BA89 si:[0..15]-fn0800_BA89
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_9F7F_entry:
l0800_9F7F:
l0800_9F87_thunk_fn0800_9F92:
	ax_20 = fn0800_9F92(CONVERT(wArg02, uint16, uint32), ds, out dx_23, out bp_16, out si_25, out di_22, out ds_18)
	dxOut = dx_23
	bpOut = bp_16
	siOut = si_25
	diOut = di_22
	dsOut = ds_18
	return ax_20
fn0800_9F7F_exit:


word16 fn0800_9F89(selector ds, word32 dwArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_4311
//      fn0800_A006
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_4311 bp:[0..15]-fn0800_4311 ds:[0..15]-fn0800_4311 dx:[0..15]-fn0800_4311 si:[0..15]-fn0800_4311
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_9F89_entry:
l0800_9F89:
l0800_9F8F_thunk_fn0800_9F92:
	ax_17 = fn0800_9F92(dwArg02, ds, out dx_20, out bp_13, out si_22, out di_35, out ds_15)
	dxOut = dx_20
	bpOut = bp_13
	siOut = si_22
	dsOut = ds_15
	return ax_17
fn0800_9F89_exit:


word16 fn0800_9F92(int32 dx_ax, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9F7F
//      fn0800_9F89
// MayUse:  ds:[0..15] Sequence dx:ax:[0..31] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_9F7F bp:[0..15]-fn0800_9F7F di:[0..15]-fn0800_9F7F ds:[0..15]-fn0800_9F7F dx:[0..15]-fn0800_9F7F si:[0..15]-fn0800_9F7F
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: P
fn0800_9F92_entry:
	ax = SLICE(dx_ax, word16, 0)
	dx = SLICE(dx_ax, word16, 16)
l0800_9F92:
	Mem57[0800:9D3B:word16] = ds
	branch dx_ax == 0<16> l0800_9FFD_in_fn0800_9F92
l0800_9FFD_in_fn0800_9F92:
	ds_59 = Mem57[0800:9D3B:selector]
	dxOut = dx
	bpOut = wArg00
	siOut = si
	diOut = di
	dsOut = ds_59
	return ax
l0800_9F9D_thunk_fn0800_9F9F:
	ax_67 = fn0800_9F9F(dx_ax, out dx_72, out bp_68, out si_73, out di_70, out ds_71)
	dxOut = dx_72
	bpOut = bp_68
	siOut = si_73
	diOut = di_70
	dsOut = ds_71
	return ax_67
fn0800_9F92_exit:


word16 fn0800_9F9F(int32 dx_ax, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9F89
//      fn0800_9F92
// MayUse:  Sequence dx:ax:[0..31] ss:[0..15]
// LiveOut: ax:[0..15]-fn0800_9F92 bp:[0..15]-fn0800_9F92 di:[0..15]-fn0800_9F92 ds:[0..15]-fn0800_9F92 dx:[0..15]-fn0800_9F92 si:[0..15]-fn0800_9F92
// Trashed: SCZOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_9F9F_entry:
	ax = SLICE(dx_ax, word16, 0)
l0800_9F9F:
	dx_9 = SLICE(dx_ax + 0x13<32>, word16, 16) (alias)
	branch dx_9 <u 0<16> l0800_9FE8
l0800_9FA7:
	branch (dx_9 & 0xFFF0<16>) != 0<16> l0800_9FE8
l0800_9FE8:
	ax_128 = 0<16> (alias)
	dx_142 = 0<16> (alias)
l0800_9FAD:
	ax_35 = SEQ(SLICE(ax + 0x13<16> >>u 4<8>, byte, 8) | SLICE(dx_9, byte, 0) << 4<8>, SLICE(ax + 0x13<16> >>u 4<8>, byte, 0)) (alias)
	branch Mem0[0800:9D35:word16] == 0<16> l0800_9FDE
l0800_9FDE:
	ax_128 = fn0800_9E9E(ax_35, out dx_142)
l0800_9FBE:
	dx_47 = Mem0[0800:9D39:word16]
	dx_142 = dx_47
	branch dx_47 == 0<16> l0800_9FD9
l0800_9FC7:
l0800_9FC9:
	branch Mem0[dx_142:0<16>:word16] >=u ax_35 l0800_9FED
l0800_9FED:
	branch Mem0[dx_142:0<16>:word16] >u ax_35 l0800_9FE3
l0800_9FE3:
	ax_128 = fn0800_9F5C(ax_35, dx_142, dx_142, out dx_142)
l0800_9FEF:
	fn0800_9E15(dx_142)
	Mem76[dx_142:2<16>:word16] = Mem0[dx_142:8<16>:word16]
	ax_128 = 4<16>
l0800_9FD1:
	dx_142 = Mem0[dx_142:6<16>:word16]
	branch dx_142 != dx_47 l0800_9FC9
l0800_9FD9:
	ax_128 = fn0800_9F02(ax_35, out dx_142)
l0800_9FFD:
	ds_98 = Mem95[0800:9D3B:selector]
	dxOut = dx_142
	bpOut = wArg04
	siOut = wArg02
	diOut = wArg00
	dsOut = ds_98
	return ax_128
fn0800_9F9F_exit:


void fn0800_A006(word16 bx, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_A006_entry:
l0800_A006:
	fn0800_9F89(ds, SEQ(Mem7[0800:9D3D:word16], Mem10[0800:9D3F:word16]), out dx_21, out bp_170, out si_171, out ds_172)
	branch dx_21 != 0<16> l0800_A01F
l0800_A01F:
	dx_43 = Mem42[bx:0<16>:word16]
	memcpy(dx_21:4<16>, bx:4<16>, 0xC<u32>)
	dx_53 = dx_43 - 1<16>
	branch dx_43 == 1<16> l0800_A070
l0800_A039:
	es_117 = dx_21 + 1<16>
	ds_121 = bx + 1<16>
l0800_A043:
	cx_68 = dx_53
	branch dx_53 <=u 0x1000<16> l0800_A052
l0800_A04F:
	cx_68 = 0x1000<16>
l0800_A052:
	memcpy(es_117:0<16>, ds_121:0<16>, (cx_68 << 3<16>) *u32 2<16>)
	dx_53 = dx_53 - 0x1000<16>
	branch dx_53 <=u 0<16> l0800_A070
l0800_A070:
	fn0800_9E75(Mem42[0800:9D3B:selector], bx, out cx_173, out dx_174, out bx_175, out ds_176)
	return
l0800_A060:
	es_117 = es_117 + 0x1000<16>
	ds_121 = ds_121 + 0x1000<16>
l0800_A01D:
	return
fn0800_A006_exit:


void fn0800_A080(word16 ax, word16 cx, word16 bx, selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_A080_entry:
l0800_A080:
	branch bx == Mem0[0800:9D37:word16] l0800_A0CB
l0800_A0CB:
	Mem13[bx:0<16>:word16] = ax
	fn0800_A1D6(ds, 0<16>, bx + ax, out cx_111, out dx_112, out bx_113)
	return
l0800_A087:
	di_39 = bx + ax
	Mem44[di_39:0<16>:word16] = cx - ax
	Mem45[di_39:2<16>:word16] = bx
	Mem51[bx:0<16>:word16] = ax
	dx_53 = bx + cx
	branch Mem51[dx_53:2<16>:word16] == 0<16> l0800_A0B8
l0800_A0B8:
	Mem57[dx_53:8<16>:word16] = di_39
l0800_A0B1:
	Mem58[dx_53:2<16>:word16] = di_39
l0800_A0BD:
	fn0800_9E75(ds, di_39, out cx_114, out dx_115, out bx_116, out ds_117)
	return
fn0800_A080_exit:


word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 6; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A1D6
//      fn0800_A215
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax:[0..15]-fn0800_A1D6 bx:[0..15]-fn0800_A1D6 cx:[0..15]-fn0800_A1D6 dx:[0..15]-fn0800_A1D6
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_A162_entry:
l0800_A162:
	si_15 = wArg04 + 1<16> - Mem11[ds:0x7B<16>:word16]
	cx_108 = SEQ(ch, 6<8>) (alias)
	branch si_15 + 0x3F<16> >>u 6<8> != Mem11[ds:0x2698<16>:word16] l0800_A18D
l0800_A18D:
	si_22 = __align(si_15 + 0x3F<16>, 64<i32>)
	dx_23 = Mem11[ds:0x91<16>:word16]
	ax_25 = __align(si_15 + 0x3F<16>, 64<i32>) + Mem11[ds:0x7B<16>:word16]
	al_41 = SLICE(ax_25, byte, 0) (alias)
	branch ax_25 <=u dx_23 l0800_A1A5
l0800_A19F:
	si_22 = dx_23 - Mem11[ds:0x7B<16>:word16]
l0800_A1A5:
	ax_42 = fn0800_A401(al_41, ds, Mem35[ds:0x7B<16>:word16], si_22, out bx)
	cx_108 = si_22
	ch_112 = SLICE(si_22, byte, 8) (alias)
	dx_114 = ax_42
	branch ax_42 != 0xFFFF<16> l0800_A1C1
l0800_A1C1:
	Mem55[ds:0x91<16>:word16] = Mem39[ds:0x7B<16>:word16] + ax_42
	Mem56[ds:0x8F<16>:word16] = 0<16>
	ax_100 = 0<16>
l0800_A1B6:
	Mem65[ds:0x2698<16>:word16] = si_22 >>u 6<8>
	cx_108 = SEQ(ch_112, 6<8>) (alias)
l0800_A17B:
	Mem73[ds:0x8D<16>:word16] = wArg04
	Mem74[ds:0x8B<16>:word16] = wArg02
	dx_114 = wArg02
	ax_100 = 1<16>
l0800_A1D1:
	cxOut = cx_108
	dxOut = dx_114
	bxOut = bx
	return ax_100
fn0800_A162_exit:


byte fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9D41
//      fn0800_A080
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax:[8..15]-fn0800_9D41 bx:[0..15]-fn0800_9D41 cx:[0..15]-fn0800_9D41 dx:[0..15]-fn0800_9D41
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_A1D6_entry:
l0800_A1D6:
	fn0800_8F2F(wArg02, Mem7[ds:0x89<16>:word16], wArg04, Mem7[ds:0x87<16>:word16], out cx_16, out dx_17, out bx_15)
	C_19 = <invalid>
	branch C_19 l0800_A20C
l0800_A1EC:
	fn0800_8F2F(wArg02, Mem7[ds:0x91<16>:word16], wArg04, Mem7[ds:0x8F<16>:word16], out cx_16, out dx_17, out bx_15)
	Z_32 = <invalid>
	C_31 = <invalid>
	branch Z_32 | C_31 l0800_A20C
l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out cx_16, out dx_17, out bx_15) != 0<16> l0800_A211
l0800_A211:
	ax_56 = 0<16>
l0800_A20C:
	ax_56 = 0xFFFF<16>
l0800_A213:
	cxOut = cx_16
	dxOut = dx_17
	bxOut = bx_15
	return SLICE(ax_56, byte, 8)
fn0800_A1D6_exit:


word16 fn0800_A215(selector ds, ui32 dwArg02, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9E9E
//      fn0800_9F02
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_9F02 dx:[0..15]-fn0800_9F02
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_A215_entry:
l0800_A215:
	dx_ax_125 = fn0800_8C69(Mem7[ds:0x8D<16>:word16], 4<8>, 0<16>) + CONVERT(Mem7[ds:0x8B<16>:word16], uint16, uint32) + dwArg02
	ax_30 = SLICE(dx_ax_125, word16, 0) (alias)
	dx_33 = SLICE(dx_ax_125, word16, 16) (alias)
	branch dx_33 < 0xF<16> l0800_A246
l0800_A237:
	branch dx_33 > 0xF<16> l0800_A23E
l0800_A239:
	branch ax_30 <=u 0xFFFF<16> l0800_A246
l0800_A246:
	ax_48 = fn0800_8CCB(dwArg02, Mem7[ds:0x8B<16>:word16], Mem7[ds:0x8D<16>:word16], out ch_172, out dx_50)
	fn0800_8F2F(ax_48, Mem59[ds:0x89<16>:word16], dx_50, Mem59[ds:0x87<16>:word16], out cx_173, out dx_174, out bx_175)
	sp_52 = <invalid>
	C_68 = <invalid>
	branch C_68 l0800_A23E
l0800_A26C:
	fn0800_8F2F(ax_48, Mem59[ds:0x91<16>:word16], dx_50, Mem59[ds:0x8F<16>:word16], out cx_176, out dx_177, out bx_178)
	Z_81 = <invalid>
	C_80 = <invalid>
	branch Z_81 | C_80 l0800_A23E
l0800_A27F:
	ax_84 = Mem59[ds:0x8D<16>:word16]
	dx_85 = Mem59[ds:0x8B<16>:word16]
	Mem90[ss:sp_52 - 2<i16>:word16] = dx_50
	Mem93[ss:sp_52 - 4<i16>:word16] = ax_48
	branch fn0800_A162(ds, Mem93[ss:sp_52 - 4<i16>:word16], Mem93[ss:sp_52 - 2<i16>:word16], out cx_179, out dx_180, out bx_181) == 0<16> l0800_A23E
l0800_A299:
	dx_109 = ax_84
	ax_110 = dx_85
l0800_A23E:
	dx_109 = 0xFFFF<16>
	ax_110 = 0xFFFF<16>
l0800_A29F:
	dxOut = dx_109
	return ax_110
fn0800_A215_exit:


word16 fn0800_A2A3(selector ds, word16 wArg04, ptr16 & cxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B140
// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax:[0..15]-fn0800_B140 cx:[0..15]-fn0800_B140
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_A2A3_entry:
	bArg04 = SLICE(wArg04, byte, 0)
l0800_A2A3:
	msdos_unknown_2144()
	dx_31 = SLICE(ptrArg06, word16, 0) (alias)
	ax_21 = SEQ(0x44<8>, bArg04) (alias)
	branch C l0800_A2C6
l0800_A2C6:
	ax_21 = fn0800_8D2B(ds, ax_21)
l0800_A2BA:
	branch wArg04 != 0<16> l0800_A2C4
l0800_A2C4:
l0800_A2C0:
	ax_21 = dx_31
l0800_A2CA:
	cxOut = wArg0A
	return ax_21
fn0800_A2A3_exit:


void fn0800_A2CC(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9828
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_A2CC_entry:
l0800_A2CC:
	call Mem0[ds:0x26F4<16>:word16] (retsize: 0;)
		uses: Mem:Mem0
	return
fn0800_A2CC_exit:


void fn0800_A2D0(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_A2D0_entry:
l0800_A2D0:
	call Mem0[ds:0x26F6<16>:word16] (retsize: 0;)
		uses: Mem:Mem0
	return
fn0800_A2D0_exit:


void fn0800_A2D4(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_A2D4_entry:
l0800_A2D4:
	call Mem0[ds:0x26F8<16>:word16] (retsize: 0;)
		uses: Mem:Mem0
	return
fn0800_A2D4_exit:


void fn0800_A2D8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8F97
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_A2D8_entry:
l0800_A2D8:
	call Mem0[ds:0x26FA<16>:word16] (retsize: 0;)
		uses: Mem:Mem0
	return
fn0800_A2D8_exit:


void fn0800_A36D(segptr32 ds_si, segptr32 es_di, word16 ax, word16 cx)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cx:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31]
// LiveOut:
// Trashed: SCZO ax cx si Top
// Preserved: bx di dx sp
fn0800_A36D_entry:
l0800_A36D:
	al_12 = SLICE(ax, byte, 0) (alias)
	branch ax == 0<16> l0800_A378
l0800_A371:
	Mem15[es_di:byte] = al_12
	branch al_12 != 0<8> l0800_A378
l0800_A377:
l0800_A378:
	branch cx == 0<16> l0800_A394
l0800_A37F:
	al_43 = Mem41[ds_si:byte]
	branch al_43 == 0x22<8> l0800_A394
l0800_A385:
	branch al_43 != 0x5C<8> l0800_A392
l0800_A38B:
	branch Mem41[ds_si + 1<i32>:byte] != 0x22<8> l0800_A392
l0800_A390:
l0800_A392:
l0800_A394:
	return
fn0800_A36D_exit:


word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A162
// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax:[0..15]-fn0800_A162 bx:[0..15]-fn0800_A162
// Trashed: C ax bx es Top
// Preserved: SZO bp sp
fn0800_A401_entry:
l0800_A401:
	ax_18 = SEQ(0x4A<8>, al) (alias)
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_12) l0800_A415
l0800_A415:
	fn0800_8D2B(ds, ax_18)
	ax_27 = bx_12
l0800_A410:
	ax_27 = 0xFFFF<16>
l0800_A41B:
	bxOut = bx_12
	return ax_27
fn0800_A401_exit:


word16 fn0800_A471(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_C379
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_C379 dx:[0..15]-fn0800_C379
// Trashed: SCZDOP ax bx cx dx Top
// Preserved: bp di es si sp ss
fn0800_A471_entry:
l0800_A471:
	es_163 = SLICE(ptrArg02, selector, 16) (alias)
	si_164 = SLICE(ptrArg02, word16, 0) (alias)
l0800_A487:
	bl_31 = Mem19[es_163:si_164:byte]
	si_164 = si_164 + 1<16>
	branch (Mem19[ds:CONVERT(bl_31, uint8, uint16) + 0x2251<16>:byte] & 1<8>) != 0<8> l0800_A487
l0800_A490:
	bp_120 = 0<16>
	dx_ax_263 = 0<32> (alias)
	branch bl_31 == 0x2B<8> l0800_A49E
l0800_A498:
	dx_ax_258 = 0<32> (alias)
	branch bl_31 != 0x2D<8> l0800_A4A2
l0800_A49D:
	bp_120 = 1<16>
	dx_ax_263 = 0<32> (alias)
l0800_A49E:
	bl_31 = Mem19[es_163:si_164:byte]
	si_164 = si_164 + 1<16>
	dx_ax_258 = dx_ax_263 (alias)
l0800_A4A2:
	Mem152 = Mem19 (alias)
	ax_63 = SLICE(dx_ax_258, word16, 0) (alias)
	dx_ax_253 = dx_ax_258 (alias)
	branch bl_31 >u 0x39<8> l0800_A4D6
l0800_A4A7:
	bl_57 = bl_31 - 0x30<8>
	bx_71 = CONVERT(bl_57, uint8, uint16) (alias)
	dx_ax_253 = dx_ax_258 (alias)
	branch bl_57 <u 0<8> l0800_A4D6
l0800_A4AC:
	dh_75 = SLICE(ax_63 *u32 0xA<16>, byte, 24) (alias)
	dl_ax_170 = SLICE(ax_63 *u32 0xA<16>, word24, 0) + SEQ(dh_75, bx_71)
	dl_77 = SLICE(dl_ax_170, byte, 16) (alias)
	ax_72 = SLICE(dl_ax_170, word16, 0) (alias)
	dx_131 = SEQ(dh_75, dl_77) (alias)
	dx_ax_263 = SEQ(dx_131, ax_72) (alias)
	branch dl_77 == 0<8> l0800_A49E
l0800_A4B4:
	dx_ax_175 = SEQ(dx_131, ax_72) (alias)
l0800_A4C8:
	ax_93 = SLICE(dx_ax_175, word16, 0) (alias)
	dx_90 = SLICE(dx_ax_175, word16, 16) (alias)
	bl_83 = Mem152[es_163:si_164:byte]
	si_164 = si_164 + 1<16>
	dx_ax_253 = dx_ax_175 (alias)
	branch bl_83 >u 0x39<8> l0800_A4D6
l0800_A4D1:
	bx_113 = CONVERT(bl_83 - 0x30<8>, uint8, uint16) (alias)
	dx_ax_253 = dx_ax_175 (alias)
	branch bl_83 >=u 0x30<8> l0800_A4B6
l0800_A4B6:
	dx_ax_175 = SEQ(dx_90 *u 0xA<16>, ax_93 *u 0xA<16>) + SEQ(SLICE(ax_93 *u32 0xA<16>, word16, 16), bx_113)
l0800_A4D6:
	ax_133 = SLICE(dx_ax_253, word16, 0) (alias)
	dx_126 = SLICE(dx_ax_253, word16, 16) (alias)
	branch bp_120 < 1<16> l0800_A4E0
l0800_A4D9:
	dx_ax_172 = -dx_ax_253
	ax_133 = SLICE(dx_ax_172, word16, 0)
	dx_126 = SLICE(dx_ax_172, word16, 16)
l0800_A4E0:
	dxOut = dx_126
	return ax_133
fn0800_A471_exit:


void fn0800_A4F6(selector ds, word16 wArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_37DF
//      fn0800_3C99
// MayUse:  ds:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZOP ax cx dx Top
// Preserved: bp sp
fn0800_A4F6_entry:
l0800_A4F6:
	branch fn0800_A53C(ds, 0<8>, out cx_121) != 0xFFFF<16> l0800_A513
l0800_A513:
	branch (wArg06 & 0x80<16>) != 0<16> l0800_A520
l0800_A51D:
l0800_A520:
	branch fn0800_A53C(ds, 1<8>, out cx_122) == 0xFFFF<16> l0800_A50F
l0800_A538:
l0800_A50F:
l0800_A53A:
	return
fn0800_A4F6_exit:


word16 fn0800_A53C(selector ds, byte bArg06, ptr16 & cxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A4F6
//      fn0800_B140
// MayUse:  ds:[0..15] Stack +0006:[0..7]
// LiveOut: ax:[0..15]-fn0800_B140 cx:[0..15]-fn0800_B140
// Trashed: ax cx dx Top
// Preserved: SCZO bp ds sp
fn0800_A53C_entry:
l0800_A53C:
	__syscall<byte>(0x21<8>)
	cx_12 = wArg08
	ax_20 = SEQ(0x43<8>, bArg06) (alias)
	branch C l0800_A553
l0800_A553:
	ax_22 = fn0800_8D2B(ds, ax_20)
l0800_A550:
	cx_12 = ax_20
	ax_22 = wArg08
l0800_A557:
	cxOut = cx_12
	return ax_22
fn0800_A53C_exit:


void fn0800_A559(byte al, selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A614
// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_A559_entry:
l0800_A559:
	branch wArg02 <u Mem7[ds:0x24E8<16>:word16] l0800_A56E
l0800_A56E:
	Mem16[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] = 0<16>
	fn0800_A57F(al, ds, wArg02)
l0800_A565:
	fn0800_8D2B(ds, 6<16>)
l0800_A57D:
	return
fn0800_A559_exit:


void fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A559
//      fn0800_B140
// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp sp
fn0800_A57F_entry:
l0800_A57F:
	ax_14 = SEQ(0x3E<8>, al) (alias)
	branch msdos_close_file(wArg02) l0800_A597
l0800_A597:
	fn0800_8D2B(ds, ax_14)
l0800_A58B:
	Mem24[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] = 0<16>
l0800_A59B:
	return
fn0800_A57F_exit:


word16 fn0800_A59D(selector ds, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AED6
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax:[0..15]-fn0800_AED6
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp sp
fn0800_A59D_entry:
l0800_A59D:
	branch wArg02 <u Mem7[ds:0x24E8<16>:word16] l0800_A5B2
l0800_A5B2:
	branch (Mem7[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 0x200<16>) == 0<16> l0800_A5C4
l0800_A5C4:
	ax_20 = 0x4400<16>
	dl_24 = SLICE(dx_22, byte, 0) (alias)
	branch msdos_ioctl_get_device_info(wArg02, out dx_22) l0800_A60C
l0800_A5CE:
	branch (dl_24 & 0x80<8>) != 0<8> l0800_A608
l0800_A5D3:
	ax_20 = SLICE(dx_ax_36, word16, 0) (alias)
	branch msdos_set_file_position(wArg02, null, 1<8>, out dx_ax_36) l0800_A60C
l0800_A5DE:
	ax_20 = SLICE(dx_ax_51, word16, 0) (alias)
	dx_55 = SLICE(dx_ax_51, word16, 16) (alias)
	branch msdos_set_file_position(wArg02, null, 2<8>, out dx_ax_51) l0800_A60C
l0800_A5F3:
	ax_20 = SLICE(dx_ax_64, word16, 0) (alias)
	dx_72 = SLICE(dx_ax_64, word16, 16) (alias)
	branch msdos_set_file_position(wArg02, dx_ax_36, 0<8>, out dx_ax_64) l0800_A60C
l0800_A60C:
	wLoc08_120 = ax_20
l0800_A5FA:
	branch dx_72 <u dx_55 l0800_A608
l0800_A5FF:
	branch dx_72 >u dx_55 l0800_A606
l0800_A601:
	branch ax_20 <u ax_20 l0800_A608
l0800_A608:
	ax_129 = 0<16>
l0800_A606:
l0800_A5BF:
	ax_129 = 1<16>
l0800_A5AC:
	wLoc08_120 = 6<16>
l0800_A60D:
	ax_129 = fn0800_8D2B(ds, wLoc08_120)
l0800_A610:
	return ax_129
fn0800_A59D_exit:


word16 fn0800_A614(selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DA9
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_18D9
//      fn0800_19EE
//      fn0800_2DE2
//      fn0800_37DF
//      fn0800_388C
//      fn0800_3992
//      fn0800_3BC3
//      fn0800_3C99
//      fn0800_A96D
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: cx:[0..15]-fn0800_0DA9 ds:[0..15]-fn0800_0DA9
// Trashed: SCZOP ax bx cx ds dx es Top
// Preserved: D bp si sp
fn0800_A614_entry:
	wArg02_183 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_184 = SLICE(ptrArg02, word16, 16) (alias)
l0800_A614:
	branch Mem11[ptrArg02 + 18<i16>:word16] == wArg02_183 l0800_A62A
l0800_A62A:
	branch Mem11[ptrArg02 + 6<i16>:word16] == 0<16> l0800_A65F
l0800_A634:
	branch Mem11[ptrArg02:word16] >= 0<16> l0800_A647
l0800_A63A:
	cx = wArg04_184
	branch fn0800_A6B7(ds, ptrArg02, out dx_252, out bx_253) != 0<16> l0800_A6B2
l0800_A647:
	branch (Mem53[ptrArg02 + 2<i16>:word16] & 4<16>) == 0<16> l0800_A65F
l0800_A652:
	v20_61 = Mem53[ptrArg02 + 10<i16>:word16]
	fn0800_9E75(ds, v20_61, out cx_254, out dx_255, out bx_256, out ds)
	cx = v20_61
l0800_A65F:
	branch Mem85[ptrArg02 + 4<i16>:byte] < 0<8> l0800_A675
l0800_A669:
	ax_92 = CONVERT(Mem85[ptrArg02 + 4<i16>:byte], int8, int16)
	fn0800_A559(SLICE(ax_92, byte, 0), ds, ax_92)
	cx = ax_92
l0800_A675:
	Mem115[ptrArg02 + 2<i16>:word16] = 0<16>
	Mem116[ptrArg02 + 6<i16>:word16] = 0<16>
	Mem117[ptrArg02:word16] = 0<16>
	Mem118[ptrArg02 + 4<i16>:byte] = 0xFF<8>
	branch Mem118[ptrArg02 + 16<i16>:word16] == 0<16> l0800_A6B2
l0800_A695:
	dx_ax_250 = fn0800_8E6A(ds, Mem133[ptrArg02 + 16<i16>:word16], 0<16>, 0<16>, 0<32>)
	fn0800_97F8(ds, dx_ax_250)
	Mem167[ptrArg02 + 16<i16>:word16] = 0<16>
	cx = SLICE(dx_ax_250, word16, 16)
l0800_A627:
l0800_A6B2:
	dsOut = ds
	return cx
fn0800_A614_exit:


word16 fn0800_A6B7(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A614
//      fn0800_A877
//      fn0800_ACB3
//      fn0800_AE10
//      fn0800_B324
//      fn0800_B4BE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_A614 bx:[0..15]-fn0800_A877 dx:[0..15]-fn0800_B324
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp si sp
fn0800_A6B7_entry:
	wArg02 = SLICE(ptrArg02, word16, 0)
	wArg04 = SLICE(ptrArg02, word16, 16)
l0800_A6B7:
	branch ptrArg02 != 0<16> l0800_A6C9
l0800_A6C9:
	branch Mem11[ptrArg02 + 18<i16>:word16] == wArg02 l0800_A6DB
l0800_A6DB:
	bx_111 = wArg02 (alias)
	branch Mem11[ptrArg02:word16] < 0<16> l0800_A732
l0800_A732:
	ax_33 = Mem11[ptrArg02 + 6<i16>:word16] + Mem11[ptrArg02:word16]
	Mem37[ptrArg02:word16] = Mem11[ptrArg02:word16] - (ax_33 + 1<16>)
	ax_41 = Mem40[ptrArg02 + 10<i16>:word16]
	dx_42 = Mem40[ptrArg02 + 8<i16>:word16]
	Mem43[ptrArg02 + 14<i16>:word16] = ax_41
	Mem44[ptrArg02 + 12<i16>:word16] = dx_42
	branch fn0800_C632(ds, CONVERT(Mem48[ptrArg02 + 4<i16>:byte], int8, int16), SEQ(ax_41, dx_42), ax_33 + 1<16>, out dx, out bx_111) == ax_33 + 1<16> l0800_A778
l0800_A765:
	bx_111 = wArg02 (alias)
	branch (Mem52[ptrArg02 + 2<i16>:word16] & 0x200<16>) != 0<16> l0800_A778
l0800_A770:
	Mem75[ptrArg02 + 2<i16>:word16] = Mem52[ptrArg02 + 2<i16>:word16] | 0x10<16>
l0800_A6E4:
	branch (Mem11[ptrArg02 + 2<i16>:word16] & 8<16>) != 0<16> l0800_A701
l0800_A6EC:
	dx = wArg02 + 5<16>
	branch Mem11[ptrArg02 + 14<i16>:word16] != wArg04 l0800_A778
l0800_A6FB:
	branch Mem11[ptrArg02 + 12<i16>:word16] != wArg02 + 5<16> l0800_A778
l0800_A701:
	Mem96[ptrArg02:word16] = 0<16>
	bx_111 = wArg02 (alias)
	dx = wArg02 + 5<16>
	branch Mem96[ptrArg02 + 14<i16>:word16] != wArg04 l0800_A778
l0800_A718:
	branch Mem96[ptrArg02 + 12<i16>:word16] != wArg02 + 5<16> l0800_A778
l0800_A71E:
	dx = Mem96[ptrArg02 + 8<i16>:word16]
	Mem106[ptrArg02 + 14<i16>:word16] = Mem96[ptrArg02 + 10<i16>:word16]
	Mem107[ptrArg02 + 12<i16>:word16] = dx
l0800_A6D5:
	bx_111 = wArg02
	ax_108 = 0xFFFF<16>
l0800_A6C3:
	dx = fn0800_A877(ds, out bx_111)
l0800_A778:
	ax_108 = 0<16>
l0800_A77A:
	dxOut = dx
	bxOut = bx_111
	return ax_108
fn0800_A6B7_exit:


word16 fn0800_A77D(selector ds, word32 dwArg02, word16 wArg06, segptr32 ptrArg08, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_2DE2
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax:[0..15]-fn0800_2DE2 dx:[0..15]-fn0800_2DE2
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_A77D_entry:
	wArg04 = SLICE(dwArg02, word16, 16)
	wArg02 = SLICE(dwArg02, word16, 0)
l0800_A77D:
	di_16 = wArg06
	cx_17 = 0<16>
	ptrLoc06_156 = dwArg02 (alias)
l0800_A7A1:
	wLoc06_157 = SLICE(ptrLoc06_156, word16, 0) (alias)
	wLoc04_160 = SLICE(ptrLoc06_156, word16, 16) (alias)
	branch cx_17 == 0xA<16> l0800_A7D8
l0800_A7A6:
	di_16 = di_16 - 1<16>
	branch di_16 <= 0<16> l0800_A7D8
l0800_A7A9:
	v20_37 = Mem33[ptrArg08:word16] - 1<16>
	Mem38[ptrArg08:word16] = v20_37
	branch v20_37 < 0<16> l0800_A7C6
l0800_A7C6:
	ax_49 = fn0800_AEC2(ds, ptrArg08, out ch_230)
l0800_A7B1:
	ax_63 = Mem38[ptrArg08 + 14<i16>:word16]
	si_64 = Mem38[ptrArg08 + 12<i16>:word16]
	Mem66[ptrArg08 + 12<i16>:word16] = Mem38[ptrArg08 + 12<i16>:word16] + 1<16>
	ax_49 = CONVERT(Mem66[ax_63:si_64:byte], uint8, uint16) (alias)
l0800_A7D1:
	cx_17 = ax_49
	cl_80 = SLICE(ax_49, byte, 0) (alias)
	branch ax_49 != 0xFFFF<16> l0800_A798
l0800_A798:
	Mem83[ptrLoc06_156:byte] = cl_80
	ptrLoc06_156 = SEQ(wLoc04_160, wLoc06_157 + 1<16>) (alias)
l0800_A7D8:
	branch cx_17 != 0xFFFF<16> l0800_A7F3
l0800_A7DD:
	branch wLoc04_160 != wArg04 l0800_A7F3
l0800_A7E8:
	branch wLoc06_157 != wArg02 l0800_A7F3
l0800_A7F3:
	Mem105[ptrLoc06_156:byte] = 0<8>
	branch (Mem105[ptrArg08 + 2<i16>:word16] & 0x10<16>) == 0<16> l0800_A80B
l0800_A80B:
	dx_113 = wArg04
	ax_114 = wArg02
l0800_A805:
	dx_113 = 0<16>
	ax_114 = 0<16>
l0800_A7ED:
	dx_113 = 0<16>
	ax_114 = 0<16>
l0800_A811:
	dxOut = dx_113
	return ax_114
fn0800_A77D_exit:


word16 fn0800_A817(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_33CD
//      fn0800_363D
// MayUse:  al:[0..7] ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax:[0..15]-fn0800_33CD cx:[0..15]-fn0800_33CD dx:[0..15]-fn0800_33CD
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_A817_entry:
l0800_A817:
	es_bx_12 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(ptrArg06)
	cx_33 = SLICE(msdos_find_first_file(wArg0A, ptrArg02) | SCZDOP, word16, 0)
	msdos_set_DTA(es_bx_12)
	ax_37 = SEQ(0x4E<8>, al) (alias)
	dx_41 = SLICE(es_bx_12, word16, 0)
	branch Test(ULT,Mem47[ss:fp + 6<i16>:bool]) l0800_A844
l0800_A844:
	ax_55 = fn0800_8D2B(ds, ax_37)
l0800_A840:
	ax_55 = 0<16>
l0800_A848:
	cxOut = cx_33
	dxOut = dx_41
	return ax_55
fn0800_A817_exit:


word16 fn0800_A84A(byte al, selector ds, segptr32 ptrArg02, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_3479
// MayUse:  al:[0..7] ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_3479 cx:[0..15]-fn0800_3479 dx:[0..15]-fn0800_3479
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_A84A_entry:
l0800_A84A:
	es_bx_12 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(ptrArg02)
	cx_29 = SLICE(msdos_find_next_file() | SCZDOP, word16, 0)
	msdos_set_DTA(es_bx_12)
	ax_33 = SEQ(0x4F<8>, al) (alias)
	dx_37 = SLICE(es_bx_12, word16, 0)
	branch Test(ULT,Mem43[ss:fp + 6<i16>:bool]) l0800_A871
l0800_A871:
	ax_51 = fn0800_8D2B(ds, ax_33)
l0800_A86D:
	ax_51 = 0<16>
l0800_A875:
	cxOut = cx_29
	dxOut = dx_37
	return ax_51
fn0800_A84A_exit:


word16 fn0800_A877(selector ds, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A6B7
// MayUse:  ds:[0..15]
// LiveOut: bx:[0..15]-fn0800_A6B7 dx:[0..15]-fn0800_A6B7
// Trashed: SCZOP ax bx cx di es si Top
// Preserved: bp sp
fn0800_A877_entry:
l0800_A877:
	si_21 = Mem15[ds:0x24E8<16>:word16]
	ptrLoc06_86 = SEQ(ds, 0x2358<16>) (alias)
l0800_A8A8:
	wLoc04_87 = SLICE(ptrLoc06_86, word16, 16) (alias)
	wLoc06_89 = SLICE(ptrLoc06_86, word16, 0) (alias)
	si_21 = si_21 - 1<16>
	branch si_21 != 0<16> l0800_A88F
l0800_A88F:
	bx = SLICE(ptrLoc06_86, word16, 0) (alias)
	branch (Mem34[ptrLoc06_86 + 2<i16>:word16] & 3<16>) == 0<16> l0800_A8A4
l0800_A89A:
	fn0800_A6B7(ds, bx, out dx_120, out bx)
l0800_A8A4:
	ptrLoc06_86 = SEQ(wLoc04_87, wLoc06_89 + 0x14<16>) (alias)
l0800_A8AF:
	bxOut = bx
	return <invalid>
fn0800_A877_exit:


word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, ptr16 & clOut)
// stackDelta: 14; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A96D
// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut: ax:[0..15]-fn0800_A96D cl:[0..7]-fn0800_A96D
// Trashed: SCZOP ax bx cl dx es Top
// Preserved: bp di si sp
fn0800_A8B7_entry:
	wArg0A_168 = SLICE(ptrArg0A, word16, 0) (alias)
	wArg0C_171 = SLICE(ptrArg0A, word16, 16) (alias)
l0800_A8B7:
	di_140 = 0<16>
	cl_21 = Mem18[ptrArg0A:byte]
	ptrArg0A_172 = SEQ(wArg0C_171, wArg0A_168 + 1<16>) (alias)
	branch cl_21 != 0x72<8> l0800_A8D5
l0800_A8D5:
	branch cl_21 != 0x77<8> l0800_A8DF
l0800_A8DF:
	branch cl_21 != 0x61<8> l0800_A8EF
l0800_A8EF:
	ax_147 = 0<16>
l0800_A8E4:
	dx_33 = 0x902<16>
l0800_A8DA:
	dx_33 = 0x302<16>
l0800_A8E7:
	di_140 = 0x80<16>
	si_111 = 2<16>
l0800_A8CD:
	dx_33 = 1<16>
	si_111 = 1<16>
l0800_A8F3:
	cl_21 = Mem18[ptrArg0A_172:byte]
	ptrArg0A_177 = SEQ(wArg0C_171, wArg0A_168 + 2<16>) (alias)
	branch cl_21 == 0x2B<8> l0800_A914
l0800_A901:
	branch Mem50[ptrArg0A_177:byte] != 0x2B<8> l0800_A92B
l0800_A90A:
	branch cl_21 == 0x74<8> l0800_A914
l0800_A90F:
	branch cl_21 != 0x62<8> l0800_A92B
l0800_A914:
	branch cl_21 != 0x2B<8> l0800_A91F
l0800_A919:
	cl_21 = Mem50[ptrArg0A_177:byte]
l0800_A91F:
	dx_33 = dx_33 & 0xFFFC<16> | 4<16>
	di_140 = 0x180<16>
	si_111 = 3<16>
l0800_A92B:
	branch cl_21 != 0x74<8> l0800_A936
l0800_A936:
	branch cl_21 != 0x62<8> l0800_A941
l0800_A941:
	dx_100 = dx_33 | Mem50[ds:0x2512<16>:word16] & 0xC000<16>
	branch (dx_100 & 0x8000<16>) == 0<16> l0800_A953
l0800_A93B:
	dx_100 = dx_33 | 0x8000<16>
l0800_A950:
	si_111 = si_111 | 0x40<16>
l0800_A930:
	dx_100 = dx_33 | 0x4000<16>
l0800_A953:
	Mem123[ds:0x2354<16>:word16] = 0xC7B5<16>
	Mem137[ptrArg06:word16] = dx_100
	Mem145[ptrArg02:word16] = di_140
	ax_147 = si_111
l0800_A967:
	clOut = cl_21
	return ax_147
fn0800_A8B7_exit:


word16 fn0800_A96D(selector ds, word16 wArg02, word32 dwArg04, word32 dwArg08, segptr32 ptrArg0C, ptr16 & cxOut, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 16; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AA7E
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ax:[0..15]-fn0800_AA7E cx:[0..15]-fn0800_AA7E ds:[0..15]-fn0800_AA7E dx:[0..15]-fn0800_AA7E
// Trashed: SCZOP ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_A96D_entry:
	wArg0E_258 = SLICE(ptrArg0C, word16, 16) (alias)
l0800_A96D:
	ax_28 = fn0800_A8B7(ds, SEQ(ss, fp - 6<i16>), SEQ(ss, fp - 4<i16>), dwArg04, out cl_30)
	Mem42[ptrArg0C + 2<i16>:word16] = ax_28
	cx_165 = SEQ(ch, cl_30) (alias)
	branch ax_28 == 0<16> l0800_A9B9
l0800_A991:
	branch Mem42[ptrArg0C + 4<i16>:byte] >= 0<8> l0800_A9CD
l0800_A998:
	al_77 = fn0800_B140(ds, dwArg08, wLoc04 | wArg02, wLoc06, out cx_165) (alias)
	Mem80[ptrArg0C + 4<i16>:byte] = al_77
	branch al_77 >= 0<8> l0800_A9CD
l0800_A9CD:
	branch fn0800_8D76(CONVERT(Mem89[ptrArg0C + 4<i16>:byte], int8, int16)) == 0<16> l0800_A9E7
l0800_A9DE:
	Mem116[ptrArg0C + 2<i16>:word16] = Mem97[ptrArg0C + 2<i16>:word16] | 0x200<16>
l0800_A9E7:
	branch (Mem124[ptrArg0C + 2<i16>:word16] & 0x200<16>) == 0<16> l0800_A9FB
l0800_A9FB:
	ax_133 = 0<16>
l0800_A9F6:
	ax_133 = 1<16>
l0800_A9FD:
	wArg0E_266 = SLICE(ptrArg0C, word16, 16) (alias)
	wArg0C_267 = SLICE(ptrArg0C, word16, 0) (alias)
	branch fn0800_BA89(ds, ptrArg0C, 0<16>, 0<16>, ax_133, 0x200<16>, out cx_165, out ds) == 0<16> l0800_AA1F
l0800_AA1F:
	Mem181[ptrArg0C + 16<i16>:word16] = 0<16>
	dx_182 = wArg0E_266
	ax_183 = wArg0C_267
l0800_AA12:
	fn0800_A614(ds, ptrArg0C, out ds)
	cx_165 = wArg0E_258
l0800_A9B9:
	Mem211[ptrArg0C + 4<i16>:byte] = 0xFF<8>
	Mem212[ptrArg0C + 2<i16>:word16] = 0<16>
l0800_A9C7:
	dx_182 = 0<16>
	ax_183 = 0<16>
l0800_AA2E:
	cxOut = cx_165
	dxOut = dx_182
	dsOut = ds
	return ax_183
fn0800_A96D_exit:


word32 fn0800_AA34(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AA7E
// MayUse:  ds:[0..15]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_AA7E
// Trashed: SCZO ax bx dx es Top
// Preserved: bp sp
fn0800_AA34_entry:
l0800_AA34:
	ptrLoc06_62 = SEQ(ds, 0x2358<16>) (alias)
l0800_AA42:
	wLoc06_63 = SLICE(ptrLoc06_62, word16, 0) (alias)
	wLoc04_67 = SLICE(ptrLoc06_62, word16, 16) (alias)
	branch Mem16[ptrLoc06_62 + 4<i16>:byte] < 0<8> l0800_AA64
l0800_AA4C:
	ptrLoc06_62 = SEQ(wLoc04_67, wLoc06_63 + 0x14<16>) (alias)
	branch wLoc06_63 <u Mem27[ds:0x24E8<16>:word16] *s 0x14<16> + 0x2358<16> l0800_AA42
l0800_AA64:
	wLoc04_69 = SLICE(ptrLoc06_62, word16, 16) (alias)
	wLoc06_70 = SLICE(ptrLoc06_62, word16, 0) (alias)
	branch Mem40[ptrLoc06_62 + 4<i16>:byte] < 0<8> l0800_AA74
l0800_AA74:
	dx_46 = wLoc04_69
	ax_47 = wLoc06_70
l0800_AA6E:
	dx_46 = 0<16>
	ax_47 = 0<16>
l0800_AA7A:
	return SEQ(dx_46, ax_47)
fn0800_AA34_exit:


word32 fn0800_AA7E(selector ds, word32 dwArg02, word32 dwArg06, ptr16 & cxOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_18D9
//      fn0800_19EE
//      fn0800_37DF
//      fn0800_3992
//      fn0800_4234
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx:[0..15]-fn0800_4234 ds:[0..15]-fn0800_4234 Sequence dx:ax:[0..31]-fn0800_37DF
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: P bp sp
fn0800_AA7E_entry:
l0800_AA7E:
	dx_ax_110 = fn0800_AA34(ds)
	branch dx_ax_110 != 0<16> l0800_AA97
l0800_AA97:
	ax_51 = fn0800_A96D(ds, 0<16>, dwArg06, dwArg02, dx_ax_110, out cx, out dx_54, out ds)
l0800_AA91:
	dx_54 = 0<16>
	ax_51 = 0<16>
l0800_AAAF:
	cxOut = cx
	dsOut = ds
	return SEQ(dx_54, ax_51)
fn0800_AA7E_exit:


word16 fn0800_AAB3(word16 dx, selector ds, segptr32 ptrArg02, word16 wArg06, segptr32 ptrArg08, ptr16 & chOut)
// stackDelta: 12; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_ABA3
// MayUse:  ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax:[0..15]-fn0800_ABA3 cx:[8..15]-fn0800_ABA3
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_AAB3_entry:
l0800_AAB3:
	ptrArg08_238 = ptrArg08 (alias)
l0800_AB91:
	wArg08_252 = SLICE(ptrArg08_238, word16, 0) (alias)
	wArg0A_248 = SLICE(ptrArg08_238, word16, 16) (alias)
	branch wArg06 == 0<16> l0800_AB9A
l0800_AB97:
l0800_AABB:
	v11_20 = wArg06 + 1<16>
	wArg06 = v11_20
	branch Mem21[ptrArg02 + 6<i16>:word16] <=u v11_20 l0800_AACF
l0800_AACF:
	ax_31 = Mem21[ptrArg02 + 6<i16>:word16]
l0800_AACA:
	ax_31 = v11_20
l0800_AAD6:
	di_34 = ax_31
	branch (Mem21[ptrArg02 + 2<i16>:word16] & 0x40<16>) == 0<16> l0800_AB50
l0800_AAE3:
	branch Mem21[ptrArg02 + 6<i16>:word16] == 0<16> l0800_AB50
l0800_AAEA:
	branch Mem21[ptrArg02 + 6<i16>:word16] >=u v11_20 l0800_AB50
l0800_AAF3:
	branch Mem21[ptrArg02:word16] != 0<16> l0800_AB50
l0800_AB50:
	v22_55 = wArg06 - 1<16>
	wArg08_239 = SLICE(ptrArg08_238, word16, 0) (alias)
	wArg0A_293 = SLICE(ptrArg08_238, word16, 16) (alias)
	wArg06 = v22_55
	branch v22_55 == 0<16> l0800_AB8C
l0800_AB5A:
	di_34 = di_34 - 1<16>
	branch di_34 == 0<16> l0800_AB8C
l0800_AB5D:
	v23_70 = Mem56[ptrArg02:word16] - 1<16>
	Mem71[ptrArg02:word16] = v23_70
	branch v23_70 < 0<16> l0800_AB7A
l0800_AB7A:
	ax_104 = fn0800_AEC2(ds, ptrArg02, out ch_351)
l0800_AB65:
	ax_96 = Mem71[ptrArg02 + 14<i16>:word16]
	si_97 = Mem71[ptrArg02 + 12<i16>:word16]
	Mem99[ptrArg02 + 12<i16>:word16] = Mem71[ptrArg02 + 12<i16>:word16] + 1<16>
	ax_104 = CONVERT(Mem99[ax_96:si_97:byte], uint8, uint16) (alias)
l0800_AB85:
	dx = ax_104
	dl_113 = SLICE(ax_104, byte, 0) (alias)
	branch ax_104 != 0xFFFF<16> l0800_AB47
l0800_AB47:
	Mem116[ptrArg08_238:byte] = dl_113
	ptrArg08_238 = SEQ(wArg0A_293, wArg08_239 + 1<16>) (alias)
l0800_AB8C:
	branch dx == 0xFFFF<16> l0800_AB3D
l0800_AAF9:
	wArg06 = v11_20 - 1<16>
	di_128 = 0<16>
l0800_AB0E:
	branch Mem134[ptrArg02 + 6<i16>:word16] <=u wArg06 l0800_AB00
l0800_AB00:
	di_128 = di_128 + Mem134[ptrArg02 + 6<i16>:word16]
	wArg06 = wArg06 - Mem134[ptrArg02 + 6<i16>:word16]
l0800_AB1A:
	ax_168 = fn0800_8F50(ds, CONVERT(Mem160[ptrArg02 + 4<i16>:byte], int8, int16), ptrArg08_238, di_128, out ch_352)
	dx = ax_168
	ptrArg08_238 = SEQ(wArg0A_248, wArg08_252 + ax_168) (alias)
	branch ax_168 == di_128 l0800_AB91
l0800_AB36:
	wArg06 = wArg06 + (di_128 - ax_168)
l0800_AB3D:
	Mem198[ptrArg02 + 2<i16>:word16] = Mem192[ptrArg02 + 2<i16>:word16] | 0x20<16>
l0800_AB9A:
	chOut = <invalid>
	return wArg06
fn0800_AAB3_exit:


word16 fn0800_ABA3(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & chOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_4110
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax:[0..15]-fn0800_4110 cx:[8..15]-fn0800_4110 di:[0..15]-fn0800_4110 si:[0..15]-fn0800_4110
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: P bp sp
fn0800_ABA3_entry:
	wArg04 = SLICE(dwArg02, word16, 16)
	wArg02 = SLICE(dwArg02, word16, 0)
	wArg0C = SLICE(dwArg0A, word16, 16)
	wArg0A = SLICE(dwArg0A, word16, 0)
l0800_ABA3:
	sp_109 = fp - 0xA<16>
	branch wArg06 != 0<16> l0800_ABB6
l0800_ABB6:
	dx_ax_279 = fn0800_8F18(wArg08, 0<16>, 0<16>, wArg06, out ch_280)
	ax_29 = SLICE(dx_ax_279, word16, 0) (alias)
	dx_30 = SLICE(dx_ax_279, word16, 16) (alias)
	branch dx_30 >u 1<16> l0800_ABF2
l0800_ABCD:
	branch dx_30 <u 1<16> l0800_ABD3
l0800_ABCF:
	branch Test(UGE,false) l0800_ABF2
l0800_ABF2:
	si_50 = wArg08 + 1<16>
l0800_AC0B:
	si_50 = si_50 - 1<16>
	branch si_50 == 0<16> l0800_AC26
l0800_AC12:
	sp_65 = sp_109 - 2<i16>
	Mem66[ss:sp_65:word16] = wArg04
	Mem69[ss:sp_65 - 2<i16>:word16] = wArg02
	Mem72[ss:sp_65 - 4<i16>:word16] = wArg06
	Mem75[ss:sp_65 - 6<i16>:word16] = wArg0C
	Mem78[ss:sp_65 - 8<i16>:word16] = wArg0A
	branch fn0800_AAB3(dx_30, ds, Mem78[ss:sp_65 - 8<i16>:segptr32], Mem78[ss:sp_65 - 4<i16>:word16], Mem78[ss:sp_65 - 2<i16>:segptr32], out ch_282) == 0<16> l0800_ABF8
l0800_ABF8:
	sp_109 = <invalid>
	wArg04 = dx_107
	wArg02 = fn0800_8CCB(CONVERT(wArg06, uint16, uint32), wArg02, wArg04, out ch_283, out dx_107)
	dx_30 = dx_107
l0800_AC26:
	ax_122 = wArg08 - si_50
l0800_ABD3:
	sp_109 = fp - 0xA<16>
	ax_122 = CONVERT(ax_29 - fn0800_AAB3(dx_30, ds, dwArg0A, ax_29, dwArg02, out ch_281), uint16, uint32) /u wArg06
l0800_ABB2:
	ax_122 = 0<16>
l0800_AC2B:
	di_178 = Mem177[ss:sp_109:word16]
	si_180 = Mem177[ss:sp_109 + 2<i16>:word16]
	chOut = <invalid>
	siOut = si_180
	diOut = di_178
	return ax_122
fn0800_ABA3_exit:


word16 fn0800_AC31(segptr32 ptrArg02)
// stackDelta: 6; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_ACB3
//      fn0800_AD2F
// MayUse:  Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_ACB3
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp si sp
fn0800_AC31_entry:
l0800_AC31:
	branch Mem12[ptrArg02:word16] >= 0<16> l0800_AC4D
l0800_AC4D:
	dx_ax_22 = CONVERT(Mem12[ptrArg02:word16], int16, int32)
	dx_24 = SLICE(dx_ax_22, word16, 16) (alias)
	ax_26 = (SLICE(dx_ax_22, word16, 0) ^ dx_24) - dx_24
	cx_111 = ax_26
	si_29 = ax_26
l0800_AC41:
	cx_31 = Mem12[ptrArg02 + 6<i16>:word16] + Mem12[ptrArg02:word16]
	cx_111 = cx_31 + 1<16>
	si_29 = cx_31 + 1<16>
l0800_AC5C:
	branch (Mem12[ptrArg02 + 2<i16>:word16] & 0x40<16>) != 0<16> l0800_ACAA
l0800_AC67:
	dx_50 = Mem12[ptrArg02 + 12<i16>:word16]
	ax_49 = Mem12[ptrArg02 + 14<i16>:word16]
	wLoc06_117 = dx_50
	ptrLoc06_118 = SEQ(ax_49, dx_50) (alias)
	branch Mem52[ptrArg02:word16] >= 0<16> l0800_ACA3
l0800_ACA3:
	wLoc06_119 = SLICE(ptrLoc06_163, word16, 0) (alias)
	wLoc04_134 = SLICE(ptrLoc06_163, word16, 16) (alias)
	cx_111 = cx_111 - 1<16>
	branch cx_111 != 0<16> l0800_AC96
l0800_AC96:
	ptrLoc06_118 = SEQ(wLoc04_134, wLoc06_119 + 1<16>) (alias)
	ptrLoc06_163 = ptrLoc06_118
	branch Mem68[ptrLoc06_163:byte] != 0xA<8> l0800_ACA3
l0800_ACA2:
	si_29 = si_29 + 1<16>
l0800_AC7E:
l0800_AC8D:
	cx_111 = cx_111 - 1<16>
	branch cx_111 != 0<16> l0800_AC80
l0800_AC80:
	v22_87 = wLoc06_117 - 1<16>
	wLoc06_117 = v22_87
	branch Mem88[SEQ(ax_49, v22_87):byte] != 0xA<8> l0800_AC8D
l0800_AC8C:
	si_29 = si_29 + 1<16>
l0800_AC94:
l0800_ACAA:
	return si_29
fn0800_AC31_exit:


word16 fn0800_ACB3(selector ds, segptr32 ptrArg02, ui32 dwArg06, word16 wArg0A, ptr16 & cxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_19EE
//      fn0800_1CF6
//      fn0800_1E5E
//      fn0800_24FE
//      fn0800_2D0A
//      fn0800_3BC3
//      fn0800_3C99
//      fn0800_3E9A
//      fn0800_3F0A
//      fn0800_3F58
//      fn0800_4194
//      fn0800_46FE
//      fn0800_4BB1
//      fn0800_4C55
//      fn0800_4F2C
//      fn0800_51A9
//      fn0800_5374
//      fn0800_5B15
//      fn0800_5DCE
//      fn0800_5E64
//      fn0800_67BF
//      fn0800_6F20
//      fn0800_73AC
//      fn0800_741D
//      fn0800_75EA
//      fn0800_7A02
//      fn0800_7C78
//      fn0800_7FDC
//      fn0800_BA67
//      fn0800_BA89
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax:[0..15]-fn0800_3E9A cx:[0..15]-fn0800_BA89
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp si sp
fn0800_ACB3_entry:
	wArg04 = SLICE(ptrArg02, word16, 16)
l0800_ACB3:
	cx_105 = wArg04
	branch fn0800_A6B7(ds, ptrArg02, out dx_206, out bx_207) == 0<16> l0800_ACCE
l0800_ACCE:
	branch wArg0A != 1<16> l0800_ACEA
l0800_ACD3:
	branch Mem18[ptrArg02:word16] <= 0<16> l0800_ACEA
l0800_ACDC:
	dwArg06 = dwArg06 - CONVERT(fn0800_AC31(ptrArg02), int16, int32) (alias)
l0800_ACEA:
	Mem79[ptrArg02 + 2<i16>:word16] = Mem74[ptrArg02 + 2<i16>:word16] & 0xFE5F<16>
	Mem83[ptrArg02:word16] = 0<16>
	dx_85 = Mem83[ptrArg02 + 8<i16>:word16]
	Mem86[ptrArg02 + 14<i16>:word16] = Mem83[ptrArg02 + 10<i16>:word16]
	Mem87[ptrArg02 + 12<i16>:word16] = dx_85
	ax_103 = fn0800_8E29(ds, CONVERT(Mem97[ptrArg02 + 4<i16>:byte], int8, int16), dwArg06, SLICE(wArg0A, byte, 0), out cx_105, out dx_106)
	branch dx_106 != 0xFFFF<16> l0800_AD2A
l0800_AD20:
	branch ax_103 != 0xFFFF<16> l0800_AD2A
l0800_AD2A:
	ax_116 = 0<16>
l0800_AD25:
	ax_116 = 0xFFFF<16>
l0800_ACC9:
	ax_116 = 0xFFFF<16>
l0800_AD2C:
	cxOut = cx_105
	return ax_116
fn0800_ACB3_exit:


int32 fn0800_AD2F(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_12E2
//      fn0800_2D0A
//      fn0800_4194
//      fn0800_46FE
//      fn0800_4C55
//      fn0800_4F2C
//      fn0800_51A9
//      fn0800_5374
//      fn0800_5B15
//      fn0800_5E64
//      fn0800_67BF
//      fn0800_6AD4
//      fn0800_6F20
//      fn0800_741D
//      fn0800_75EA
//      fn0800_7A02
//      fn0800_7C78
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_4194
// Trashed: SCZO ax bx cx dx es Top
// Preserved: P bp sp
fn0800_AD2F_entry:
l0800_AD2F:
	dx_ax_169 = fn0800_97B6(ds, CONVERT(Mem7[ptrArg02 + 4<i16>:byte], int8, int16))
	dx_22 = SLICE(dx_ax_169, word16, 16) (alias)
	ax_19 = SLICE(dx_ax_169, word16, 0) (alias)
	wLoc04_123 = dx_22 (alias)
	wLoc06_122 = ax_19 (alias)
	branch dx_22 != 0xFFFF<16> l0800_AD52
l0800_AD4D:
	branch ax_19 == 0xFFFF<16> l0800_AD7B
l0800_AD52:
	branch Mem30[ptrArg02:word16] >= 0<16> l0800_AD6B
l0800_AD6B:
	v24_v23_106 = dx_ax_169 - CONVERT(fn0800_AC31(ptrArg02), int16, int32)
	wLoc06_122 = SLICE(v24_v23_106, word16, 0)
	wLoc04_123 = SLICE(v24_v23_106, word16, 16)
l0800_AD5B:
	v20_v18_108 = dx_ax_169 + CONVERT(fn0800_AC31(ptrArg02), int16, int32)
	wLoc06_122 = SLICE(v20_v18_108, word16, 0)
	wLoc04_123 = SLICE(v20_v18_108, word16, 16)
l0800_AD7B:
	return SEQ(wLoc04_123, wLoc06_122)
fn0800_AD2F_exit:


word16 fn0800_AD85(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_4152
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax:[0..15]-fn0800_4152 si:[0..15]-fn0800_4152
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: P bp sp
fn0800_AD85_entry:
	wArg04 = SLICE(dwArg02, word16, 16)
	wArg02 = SLICE(dwArg02, word16, 0)
	wArg0C = SLICE(dwArg0A, word16, 16)
	wArg0A = SLICE(dwArg0A, word16, 0)
l0800_AD85:
	sp_103 = fp - 0xA<16>
	branch wArg06 == 0<16> l0800_AE07
l0800_AD94:
	dx_ax_282 = fn0800_8F18(wArg08, 0<16>, 0<16>, wArg06, out ch_283)
	ax_29 = SLICE(dx_ax_282, word16, 0) (alias)
	dx_30 = SLICE(dx_ax_282, word16, 16) (alias)
	branch dx_30 >u 1<16> l0800_ADC9
l0800_ADAB:
	branch dx_30 <u 1<16> l0800_ADB1
l0800_ADAD:
	branch Test(UGE,false) l0800_ADC9
l0800_ADC9:
	si_111 = 0<16>
	branch wArg08 <=u 0<16> l0800_AE07
l0800_ADD0:
	sp_57 = sp_103 - 2<i16>
	Mem58[ss:sp_57:word16] = wArg04
	Mem61[ss:sp_57 - 2<i16>:word16] = wArg02
	Mem64[ss:sp_57 - 4<i16>:word16] = wArg06
	Mem67[ss:sp_57 - 6<i16>:word16] = wArg0C
	Mem70[ss:sp_57 - 8<i16>:word16] = wArg0A
	ax_72 = fn0800_B4BE(ds, Mem70[ss:sp_57 - 8<i16>:segptr32], Mem70[ss:sp_57 - 4<i16>:word16], Mem70[ss:sp_57 - 2<i16>:segptr32])
	sp_103 = sp_57 + 2<16>
	branch false l0800_ADEA
l0800_ADE6:
	branch ax_72 == wArg06 l0800_ADEE
l0800_ADEE:
	sp_103 = <invalid>
	wArg04 = dx_101
	wArg02 = fn0800_8CCB(CONVERT(wArg06, uint16, uint32), wArg02, wArg04, out ch_284, out dx_101)
	si_111 = si_111 + 1<16>
	branch si_111 <u wArg08 l0800_ADD0
l0800_AE07:
	ax_118 = wArg08
l0800_ADEA:
	ax_118 = si_111
l0800_ADB1:
	sp_103 = fp - 0xA<16>
	ax_118 = CONVERT(fn0800_B4BE(ds, dwArg0A, ax_29, dwArg02), uint16, uint32) /u wArg06
l0800_AE0A:
	siOut = Mem166[ss:sp_103 + 2<i16>:word16]
	return ax_118
fn0800_AD85_exit:


void fn0800_AE10(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AE4C
//      fn0800_AED6
// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: P bp si sp
fn0800_AE10_entry:
l0800_AE10:
	si_14 = 0x14<16>
	ptrLoc06_74 = SEQ(ds, 0x2358<16>) (alias)
l0800_AE40:
	wLoc04_75 = SLICE(ptrLoc06_74, word16, 16) (alias)
	wLoc06_80 = SLICE(ptrLoc06_74, word16, 0) (alias)
	si_14 = si_14 - 1<16>
	branch si_14 != 0<16> l0800_AE24
l0800_AE24:
	branch (Mem28[ptrLoc06_74 + 2<i16>:word16] & 0x300<16>) != 0x300<16> l0800_AE3C
l0800_AE33:
	fn0800_A6B7(ds, ptrLoc06_74, out dx_107, out bx_108)
l0800_AE3C:
	ptrLoc06_74 = SEQ(wLoc04_75, wLoc06_80 + 0x14<16>) (alias)
l0800_AE47:
	return
fn0800_AE10_exit:


word16 fn0800_AE4C(selector ds, segptr32 ptrArg02)
// stackDelta: 6; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AED6
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_AED6
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_AE4C_entry:
l0800_AE4C:
	branch (Mem7[ptrArg02 + 2<i16>:word16] & 0x200<16>) == 0<16> l0800_AE5D
l0800_AE5A:
	fn0800_AE10(ds)
l0800_AE5D:
	v13_32 = Mem7[ptrArg02 + 6<i16>:word16]
	ax_36 = Mem35[ptrArg02 + 10<i16>:word16]
	dx_37 = Mem35[ptrArg02 + 8<i16>:word16]
	Mem38[ptrArg02 + 14<i16>:word16] = ax_36
	Mem39[ptrArg02 + 12<i16>:word16] = dx_37
	ax_49 = fn0800_B97F(ds, CONVERT(Mem43[ptrArg02 + 4<i16>:byte], int8, int16), SEQ(ax_36, dx_37), v13_32)
	Mem64[ptrArg02:word16] = ax_49
	branch ax_49 <= 0<16> l0800_AE95
l0800_AE95:
	branch Mem64[ptrArg02:word16] != 0<16> l0800_AEAE
l0800_AEAE:
	Mem78[ptrArg02:word16] = 0<16>
	Mem80[ptrArg02 + 2<i16>:word16] = Mem78[ptrArg02 + 2<i16>:word16] | 0x10<16>
l0800_AE9E:
	Mem90[ptrArg02 + 2<i16>:word16] = Mem64[ptrArg02 + 2<i16>:word16] & 0xFE7F<16> | 0x20<16>
l0800_AEBB:
	ax_118 = 0xFFFF<16>
l0800_AE8C:
	Mem93[ptrArg02 + 2<i16>:word16] = Mem64[ptrArg02 + 2<i16>:word16] & 0xFFDF<16>
	ax_118 = 0<16>
l0800_AEBE:
	return ax_118
fn0800_AE4C_exit:


word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, ptr16 & chOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_3DCF
//      fn0800_3E9A
//      fn0800_A77D
//      fn0800_AAB3
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_A77D cx:[8..15]-fn0800_3DCF
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_AEC2_entry:
l0800_AEC2:
	Mem13[ptrArg02:word16] = Mem7[ptrArg02:word16] + 1<16>
	ax_21 = fn0800_AED6(ds, ptrArg02)
	chOut = <invalid>
	return ax_21
fn0800_AEC2_exit:


word16 fn0800_AED6(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AEC2
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_AEC2
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_AED6_entry:
l0800_AED6:
	branch ptrArg02 != 0<16> l0800_AEE8
l0800_AEE8:
	branch Mem11[ptrArg02:word16] <= 0<16> l0800_AF0B
l0800_AF0B:
	branch Mem11[ptrArg02:word16] < 0<16> l0800_AF7F
l0800_AF14:
	branch (Mem11[ptrArg02 + 2<i16>:word16] & 0x110<16>) != 0<16> l0800_AF7F
l0800_AF1C:
	branch (Mem11[ptrArg02 + 2<i16>:word16] & 1<16>) == 0<16> l0800_AF7F
l0800_AF24:
	Mem40[ptrArg02 + 2<i16>:word16] = Mem11[ptrArg02 + 2<i16>:word16] | 0x80<16>
	branch Mem40[ptrArg02 + 6<i16>:word16] == 0<16> l0800_AF43
l0800_AF43:
	branch (Mem46[ptrArg02 + 2<i16>:word16] & 0x200<16>) == 0<16> l0800_AF51
l0800_AF4E:
	fn0800_AE10(ds)
l0800_AF51:
	branch fn0800_B97F(ds, CONVERT(Mem75[ptrArg02 + 4<i16>:byte], int8, int16), SEQ(ds, 0x4EE4<16>), 1<16>) != 0<16> l0800_AF9E
l0800_AF9E:
	branch Mem83[ds:0x4EE4<16>:byte] != 0xD<8> l0800_AFB0
l0800_AFA5:
	branch (Mem83[ptrArg02 + 2<i16>:word16] & 0x40<16>) == 0<16> l0800_AF43
l0800_AFB0:
	Mem117[ptrArg02 + 2<i16>:word16] = Mem83[ptrArg02 + 2<i16>:word16] & 0xFFDF<16>
	al_122 = Mem117[ds:0x4EE4<16>:byte]
l0800_AF6D:
	branch fn0800_A59D(ds, CONVERT(Mem83[ptrArg02 + 4<i16>:byte], int8, int16)) == 1<16> l0800_AF8A
l0800_AF8A:
	Mem152[ptrArg02 + 2<i16>:word16] = Mem129[ptrArg02 + 2<i16>:word16] & 0xFE7F<16> | 0x20<16>
l0800_AF7F:
	Mem160[ptrArg02 + 2<i16>:word16] = Mem155[ptrArg02 + 2<i16>:word16] | 0x10<16>
l0800_AF34:
	branch fn0800_AE4C(ds, ptrArg02) == 0<16> l0800_AEF1
l0800_AF3F:
l0800_AEF1:
	Mem194[ptrArg02:word16] = Mem189[ptrArg02:word16] - 1<16>
	ax_195 = Mem194[ptrArg02 + 14<i16>:word16]
	si_196 = Mem194[ptrArg02 + 12<i16>:word16]
	Mem198[ptrArg02 + 12<i16>:word16] = Mem194[ptrArg02 + 12<i16>:word16] + 1<16>
	al_122 = Mem198[ax_195:si_196:byte]
l0800_AFBB:
	ax_203 = CONVERT(al_122, uint8, uint16) (alias)
l0800_AEE2:
	ax_203 = 0xFFFF<16>
l0800_AFBD:
	return ax_203
fn0800_AED6_exit:


word32 fn0800_AFCB(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_C379
// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: Sequence dx:ax:[0..31]-fn0800_C379
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_AFCB_entry:
l0800_AFCB:
	es_17 = SLICE(ptrArg02, selector, 16) (alias)
	di_19 = SLICE(ptrArg02, word16, 0) (alias)
	branch ptrArg02 == 0<16> l0800_AFFC
l0800_AFDC:
	ah_26 = Mem15[ptrArg02:byte]
	cx_27 = 0xFFFF<16>
l0800_AFE5:
	branch cx_27 == 0<16> l0800_AFE7
l0800_AFE5_1:
	di_19 = di_219 + 1<i16>
	cx_27 = cx_27 - 1<16>
	di_219 = di_19
	branch Mem15[es_17:di_219:byte] == 0<8> l0800_AFE5
l0800_AFE7:
	cx_39 = ~cx_27
	branch cx_39 == 1<16> l0800_AFFC
l0800_AFEC:
	es_di_47 = Mem15[ds:0x26AA<16>:segptr32]
	di_140 = SLICE(es_di_47, word16, 0) (alias)
	wLoc06_151 = di_140
	branch es_di_47 != 0<16> l0800_B009
l0800_B009:
	es_di_65 = Mem64[ds:di_140:segptr32]
	es_66 = SLICE(es_di_65, selector, 16) (alias)
	di_68 = SLICE(es_di_65, word16, 0) (alias)
	branch es_di_65 == 0<16> l0800_AFFC
l0800_B012:
	al_74 = Mem64[es_di_65:byte]
	branch al_74 == 0<8> l0800_AFFC
l0800_B019:
	branch ah_26 != al_74 l0800_B002
l0800_B01D:
	branch Mem64[es_66:cx_39 - 1<16> + di_68:byte] != 0x3D<8> l0800_B002
l0800_B025:
	cmpResult_95 = memcmp(ptrArg02, es_di_65, CONVERT(cx_39 - 1<16>, word16, uint32))
	di_99 = di_68 + __find_first_difference__(ptrArg02, es_di_65)
	branch cmpResult_95 != 0<16> l0800_B002
l0800_B002:
	v28_110 = wLoc06_151 + 4<16>
	wLoc06_151 = v28_110
	di_140 = v28_110 (alias)
l0800_B030:
	ax_116 = di_99 + 1<16>
	dx_117 = es_66
l0800_AFFC:
	dx_117 = 0<16>
	ax_116 = 0<16>
l0800_B035:
	return SEQ(dx_117, ax_116)
fn0800_AFCB_exit:


void fn0800_B03B(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9CE6
//      fn0800_B4BE
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_B03B_entry:
l0800_B03B:
	size_23 = (wArg0A >>u 1<16>) *u32 2<16>
	memcpy(ptrArg02, ptrArg06, size_23)
	es_24 = SLICE(ptrArg02, selector, 16) (alias)
	ds_26 = SLICE(ptrArg06, selector, 16) (alias)
	si_29 = SLICE(ptrArg06 + size_23, word16, 0)
	di_30 = SLICE(ptrArg02 + size_23, word16, 0)
	branch wArg0A >>u 1<16> >=u 0<16> l0800_B053
l0800_B052:
	Mem33[es_24:di_30:byte] = Mem14[ds_26:si_29:byte]
l0800_B053:
	return
fn0800_B03B_exit:


void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, byte bArg08)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B083
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..7]
// LiveOut:
// Trashed: SCZDOP ax cx es Top
// Preserved: bp di sp
fn0800_B05F_entry:
l0800_B05F:
	di_17 = SLICE(ptrArg02, word16, 0) (alias)
	es_22 = SLICE(ptrArg02, selector, 16) (alias)
	cx_13 = wArg06
	branch (di_17 & 1<16>) == 0<16> l0800_B079
l0800_B075:
	branch wArg06 == 0<16> l0800_B080
l0800_B077:
	Mem23[ptrArg02:byte] = bArg08
	di_17 = di_17 + 1<i16>
	cx_13 = wArg06 - 1<16>
l0800_B079:
	cx_28 = cx_13 >>u 1<16>
	cx_30 = cx_28
l0800_B07B:
	ax_48 = SEQ(bArg08, bArg08) (alias)
	branch cx_30 == 0<16> l0800_B07D
l0800_B07D:
	branch cx_28 >=u 0<16> l0800_B080
l0800_B07F:
	Mem35[es_22:di_17:byte] = bArg08
l0800_B080:
	return
fn0800_B05F_exit:
l0800_B07B_1:
	Mem49[es_22:di_17:word16] = ax_48
	di_17 = di_17 + 2<i16>
	cx_30 = cx_30 - 1<16>


void fn0800_B083(word32 dwArg02, byte bArg06, word16 wArg08)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_C379
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..7] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZDOP ax cx dx es Top
// Preserved: bp sp
fn0800_B083_entry:
l0800_B083:
	fn0800_B05F(dwArg02, wArg08, bArg06)
	return
fn0800_B083_exit:


void fn0800_B0A1(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B0F3
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_B0A1_entry:
	wArg08 = SLICE(ptrArg06, word16, 16)
	wArg06 = SLICE(ptrArg06, word16, 0)
	wArg04 = SLICE(ptrArg02, word16, 16)
	wArg02 = SLICE(ptrArg02, word16, 0)
l0800_B0A1:
	fn0800_8F2F(wArg02, wArg08, wArg04, wArg06, out cx_178, out dx_179, out bx_180)
	C_27 = <invalid>
	branch C_27 l0800_B0BE
l0800_B0BE:
	ax_31 = 0<16>
l0800_B0B8:
	ax_31 = 1<16>
l0800_B0C1:
	si_49 = wArg02 (alias)
	di_52 = wArg06 (alias)
	cx_42 = wArg0A
	branch ax_31 == 0<16> l0800_B0D4
l0800_B0CE:
	si_49 = wArg02 + wArg0A - 1<16>
	di_52 = wArg06 + wArg0A - 1<16>
l0800_B0D4:
	branch (di_52 & 1<16>) == 0<16> l0800_B0DE
l0800_B0DA:
	branch wArg0A == 0<16> l0800_B0ED
l0800_B0DC:
	Mem70[wArg08:di_52:byte] = Mem17[wArg04:si_49:byte]
	si_49 = si_49 + 1<i16>
	di_52 = di_52 + 1<i16>
	cx_42 = wArg0A - 1<16>
l0800_B0DE:
	si_78 = si_49 - ax_31
	di_80 = di_52 - ax_31
	cx_82 = cx_42 >>u 1<16>
	memcpy(wArg08:di_80, wArg04:si_78, cx_82 *u32 2<16>)
	si_88 = si_78 + cx_82 *u 2<16>
	di_89 = di_80 + cx_82 *u 2<16>
	branch cx_82 >=u 0<16> l0800_B0ED
l0800_B0E8:
	Mem96[wArg08:di_89 + ax_31:byte] = Mem94[wArg04:si_88 + ax_31:byte]
l0800_B0ED:
	return
fn0800_B0A1_exit:


void fn0800_B0F3(word32 dwArg02, word32 dwArg06, word16 wArg0A)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_09A3
//      fn0800_2085
//      fn0800_2201
//      fn0800_22FE
//      fn0800_5D2F
//      fn0800_7FDC
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_B0F3_entry:
l0800_B0F3:
	fn0800_B0A1(dwArg06, dwArg02, wArg0A)
	return
fn0800_B0F3_exit:


word16 fn0800_B113(selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & cxOut)
// stackDelta: 8; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B140
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax:[0..15]-fn0800_B140 cx:[0..15]-fn0800_B140
// Trashed: C ax cx dx Top
// Preserved: SZO bp ds sp
fn0800_B113_entry:
l0800_B113:
	branch msdos_create_truncate_file(ptrArg04, wArg02, out ax_17) l0800_B126
l0800_B126:
	ax_17 = fn0800_8D2B(ds, ax_17)
l0800_B124:
l0800_B12A:
	cxOut = wArg02
	return ax_17
fn0800_B113_exit:


word16 fn0800_B12E(selector ds, word16 wArg02)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B140
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: cx:[0..15]-fn0800_B140
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_B12E_entry:
l0800_B12E:
	msdos_write_file(wArg02, 0<16>, SEQ(ds, 0<16>), out ax_16)
	return 0<16>
fn0800_B12E_exit:


byte fn0800_B140(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & cxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A96D
// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax:[0..7]-fn0800_A96D cx:[0..15]-fn0800_A96D
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp di si sp
fn0800_B140_entry:
l0800_B140:
	si_16 = wArg06
	branch (wArg06 & 0xC000<16>) != 0<16> l0800_B15C
l0800_B154:
	si_16 = wArg06 | Mem15[ds:0x2512<16>:word16] & 0xC000<16>
l0800_B15C:
	ax_45 = fn0800_A53C(ds, 0<8>, out cx_119)
	wLoc04_400 = ax_45
	branch (si_16 & 0x100<16>) == 0<16> l0800_B1F2
l0800_B174:
	di_56 = wArg08 & Mem49[ds:0x2514<16>:word16]
	branch (di_56 & 0x180<16>) != 0<16> l0800_B186
l0800_B17F:
	fn0800_8D2B(ds, 1<16>)
l0800_B186:
	branch ax_45 != 0xFFFF<16> l0800_B1AF
l0800_B1AF:
	branch (si_16 & 0x400<16>) == 0<16> l0800_B1F2
l0800_B1B5:
	wLoc0C_403 = 0x50<16>
l0800_B18C:
	branch Mem73[ds:0x2516<16>:word16] == 2<16> l0800_B19D
l0800_B19D:
	branch (di_56 & 0x80<16>) == 0<16> l0800_B1A7
l0800_B1A7:
	ax_93 = 1<16>
l0800_B1A3:
	ax_93 = 0<16>
l0800_B1AA:
	wLoc04_400 = ax_93
l0800_B1BB:
	branch (si_16 & 0xF0<16>) == 0<16> l0800_B1DD
l0800_B1DD:
	ax_118 = fn0800_B113(ds, ax_93, dwArg02, out cx_119)
	di_123 = ax_118
	branch ax_118 >= 0<16> l0800_B265
l0800_B1EF:
l0800_B1C1:
	ax_142 = fn0800_B113(ds, 0<16>, dwArg02, out cx_119)
	di_123 = ax_142
	al_156 = SLICE(ax_142, byte, 0) (alias)
	branch ax_142 >= 0<16> l0800_B1D6
l0800_B1D6:
	fn0800_A57F(al_156, ds, ax_142)
l0800_B1F2:
	ax_178 = fn0800_B2A0(ds, dwArg02, si_16, out cx_119)
	di_123 = ax_178
	branch ax_178 < 0<16> l0800_B265
l0800_B205:
	cx_119 = 0<16>
	branch (fn0800_A2A3(ds, 0<16>, out cx_548) & 0x80<16>) == 0<16> l0800_B237
l0800_B237:
	branch (si_16 & 0x200<16>) == 0<16> l0800_B241
l0800_B23D:
	cx_119 = fn0800_B12E(ds, ax_178)
l0800_B216:
	si_16 = si_16 | 0x2000<16>
	branch (si_16 & 0x8000<16>) == 0<16> l0800_B241
l0800_B220:
	fn0800_A2A3(ds, 1<16>, out cx_119)
l0800_B241:
	branch (wLoc04_400 & 1<16>) == 0<16> l0800_B265
l0800_B248:
	branch (si_16 & 0x100<16>) == 0<16> l0800_B265
l0800_B24E:
	branch (si_16 & 0xF0<16>) == 0<16> l0800_B265
l0800_B254:
	fn0800_A53C(ds, 1<8>, out cx_119)
l0800_B265:
	branch di_123 < 0<16> l0800_B298
l0800_B269:
	branch (si_16 & 0x300<16>) == 0<16> l0800_B274
l0800_B274:
	ax_312 = 0<16>
l0800_B26F:
	ax_312 = 0x1000<16>
l0800_B276:
	dx_321 = si_16 & 0xF8FF<16> | ax_312
	branch (wLoc04_400 & 1<16>) == 0<16> l0800_B28A
l0800_B28A:
	ax_334 = 0x100<16>
l0800_B286:
	ax_334 = 0<16>
l0800_B28D:
	Mem354[ds:(di_123 << 1<16>) + 0x24EA<16>:word16] = dx_321 | ax_334
l0800_B1D3:
l0800_B298:
	ax_356 = di_123
l0800_B193:
	wLoc0C_403 = Mem73[ds:0x2516<16>:word16]
l0800_B197:
	ax_356 = fn0800_8D2B(ds, wLoc0C_403)
l0800_B29A:
	cxOut = cx_119
	return SLICE(ax_356, byte, 0)
fn0800_B140_exit:


word16 fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06, ptr16 & cxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B140
// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut: ax:[0..15]-fn0800_B140 cx:[0..15]-fn0800_B140
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp ds sp
fn0800_B2A0_entry:
	bArg06_72 = SLICE(wArg06, byte, 0) (alias)
l0800_B2A0:
	al_10 = 1<8>
	ch_88 = SLICE(wArg06, byte, 8) (alias)
	branch (wArg06 & 2<16>) != 0<16> l0800_B2BB
l0800_B2B1:
	al_10 = 2<8>
	branch (wArg06 & 4<16>) != 0<16> l0800_B2BB
l0800_B2B9:
	al_10 = 0<8>
l0800_B2BB:
	cx_89 = SEQ(ch_88, bArg06_72 & 0xF0<8>) (alias)
	branch msdos_open_file(ptrArg02, al_10 | bArg06_72 & 0xF0<8>, out ax_39) l0800_B2E7
l0800_B2E7:
	ax_45 = fn0800_8D2B(ds, ax_39)
l0800_B2CD:
	Mem58[ds:(ax_39 << 1<16>) + 0x24EA<16>:word16] = wArg06 & 0xB8FF<16> | 0x8000<16>
	ax_45 = ax_39
l0800_B2EB:
	cxOut = cx_89
	return ax_45
fn0800_B2A0_exit:


word16 fn0800_B2EF(word16 cx, word16 dx, word16 bx, selector ds, word32 dwArg02, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      fn0800_0ABC
//      fn0800_0C93
//      fn0800_0D24
//      fn0800_0DCE
//      fn0800_0DE8
//      fn0800_112D
//      fn0800_12E2
//      fn0800_18D9
//      fn0800_19EE
//      fn0800_2DE2
//      fn0800_6EE6
//      fn0800_6EFF
//      fn0800_75EA
//      fn0800_7FDC
// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: di:[0..15]-main si:[0..15]-fn0800_0DCE
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_B2EF_entry:
l0800_B2EF:
	si_32 = fn0800_9828(cx, dx, bx, ds, fp + 6<i16>, dwArg02, out di_31)
	diOut = di_31
	return si_32
fn0800_B2EF_exit:


word16 fn0800_B30A(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_4047
//      fn0800_B4BE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax:[0..15]-fn0800_4047 bx:[0..15]-fn0800_4047 cx:[0..15]-fn0800_4047 dx:[0..15]-fn0800_4047
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_B30A_entry:
l0800_B30A:
	Mem13[ptrArg04:word16] = Mem7[ptrArg04:word16] - 1<16>
	ax_25 = fn0800_B324(ds, bArg02, ptrArg04, out cx_29, out dx_27, out bx_26)
	cxOut = cx_29
	dxOut = dx_27
	bxOut = bx_26
	return ax_25
fn0800_B30A_exit:


word16 fn0800_B324(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B30A
//      fn0800_B4BE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax:[0..15]-fn0800_B30A bx:[0..15]-fn0800_B30A cx:[0..15]-fn0800_B30A dx:[0..15]-fn0800_B30A
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp si sp
fn0800_B324_entry:
	dh = SLICE(dx, byte, 8)
	wArg04_324 = SLICE(ptrArg04, word16, 0) (alias)
	wArg06_329 = SLICE(ptrArg04, word16, 16) (alias)
l0800_B324:
	Mem14[ds:0x4EE6<16>:byte] = bArg02
	bx_134 = SLICE(ptrArg04, word16, 0) (alias)
	branch Mem14[ptrArg04:word16] >= 0xFFFF<16> l0800_B389
l0800_B389:
	dx_105 = dx (alias)
	branch (Mem14[ptrArg04 + 2<i16>:word16] & 0x90<16>) != 0<16> l0800_B39C
l0800_B394:
	dx_105 = dx (alias)
	branch (Mem14[ptrArg04 + 2<i16>:word16] & 2<16>) != 0<16> l0800_B3A6
l0800_B3A6:
	Mem35[ptrArg04 + 2<i16>:word16] = Mem14[ptrArg04 + 2<i16>:word16] | 0x100<16>
	branch Mem35[ptrArg04 + 6<i16>:word16] == 0<16> l0800_B421
l0800_B421:
	branch (Mem35[ds:(CONVERT(Mem35[ptrArg04 + 4<i16>:byte], int8, int16) << 1<16>) + 0x24EA<16>:word16] & 0x800<16>) == 0<16> l0800_B44C
l0800_B435:
	fn0800_8E29(ds, CONVERT(Mem60[ptrArg04 + 4<i16>:byte], int8, int16), 0<32>, 2<8>, out cx_460, out dx_461)
	wArg06_347 = SLICE(ptrArg04, word16, 16) (alias)
l0800_B44C:
	branch Mem77[ds:0x4EE6<16>:byte] != 0xA<8> l0800_B478
l0800_B453:
	branch (Mem77[ptrArg04 + 2<i16>:word16] & 0x40<16>) != 0<16> l0800_B478
l0800_B45E:
	branch fn0800_C779(ds, CONVERT(Mem97[ptrArg04 + 4<i16>:byte], int8, int16), SEQ(ds, 0x26AE<16>), 1<16>, out cx, out dx_105, out bx_462) != 1<16> l0800_B495
l0800_B478:
	branch fn0800_C779(ds, CONVERT(Mem124[ptrArg04 + 4<i16>:byte], int8, int16), SEQ(ds, 0x4EE6<16>), 1<16>, out cx, out dx_105, out bx_134) == 1<16> l0800_B4A3
l0800_B495:
	bx_134 = SLICE(ptrArg04, word16, 0) (alias)
	branch (Mem147[ptrArg04 + 2<i16>:word16] & 0x200<16>) != 0<16> l0800_B4A3
l0800_B4A0:
l0800_B3B6:
	branch Mem35[ptrArg04:word16] == 0<16> l0800_B3C9
l0800_B3BC:
	dh = SLICE(dx_105, byte, 8) (alias)
	cx = wArg06_329
	branch fn0800_A6B7(ds, ptrArg04, out dx_105, out bx_134) != 0<16> l0800_B380
l0800_B3C9:
	Mem189[ptrArg04:word16] = -Mem183[ptrArg04 + 6<i16>:word16]
	ax_190 = Mem189[ptrArg04 + 14<i16>:word16]
	si_191 = Mem189[ptrArg04 + 12<i16>:word16]
	Mem193[ptrArg04 + 12<i16>:word16] = Mem189[ptrArg04 + 12<i16>:word16] + 1<16>
	dl_195 = Mem193[ds:0x4EE6<16>:byte]
	Mem197[ax_190:si_191:byte] = dl_195
	bx_134 = wArg04_324 (alias)
	dx_105 = SEQ(dh, dl_195) (alias)
	branch (Mem197[ptrArg04 + 2<i16>:word16] & 8<16>) != 0<16> l0800_B3F8
l0800_B3F8:
	branch Mem197[ds:0x4EE6<16>:byte] == 0xA<8> l0800_B409
l0800_B3FF:
	branch Mem197[ds:0x4EE6<16>:byte] == 0xD<8> l0800_B409
l0800_B409:
	cx = wArg06_347
	branch fn0800_A6B7(ds, ptrArg04, out dx_105, out bx_134) != 0<16> l0800_B41B
l0800_B41B:
l0800_B418:
l0800_B406:
l0800_B3F5:
l0800_B39C:
	Mem245[ptrArg04 + 2<i16>:word16] = Mem240[ptrArg04 + 2<i16>:word16] | 0x10<16>
	bx_134 = SLICE(ptrArg04, word16, 0) (alias)
l0800_B337:
	Mem250[ptrArg04:word16] = Mem14[ptrArg04:word16] + 1<16>
	ax_251 = Mem250[ptrArg04 + 14<i16>:word16]
	si_252 = Mem250[ptrArg04 + 12<i16>:word16]
	Mem254[ptrArg04 + 12<i16>:word16] = Mem250[ptrArg04 + 12<i16>:word16] + 1<16>
	dl_255 = Mem254[ds:0x4EE6<16>:byte]
	Mem257[ax_251:si_252:byte] = dl_255
	dx_105 = SEQ(dh, dl_255) (alias)
	branch (Mem257[ptrArg04 + 2<i16>:word16] & 8<16>) != 0<16> l0800_B35D
l0800_B35D:
	branch Mem257[ds:0x4EE6<16>:byte] == 0xA<8> l0800_B36E
l0800_B364:
	branch Mem257[ds:0x4EE6<16>:byte] == 0xD<8> l0800_B36E
l0800_B36E:
	cx = wArg06_329
	branch fn0800_A6B7(ds, ptrArg04, out dx_105, out bx_134) != 0<16> l0800_B380
l0800_B380:
	ax_297 = 0xFFFF<16>
l0800_B37D:
l0800_B36B:
l0800_B35A:
l0800_B4A3:
	ax_297 = CONVERT(Mem300[ds:0x4EE6<16>:byte], uint8, uint16) (alias)
l0800_B4A8:
	cxOut = cx
	dxOut = dx_105
	bxOut = bx_134
	return ax_297
fn0800_B324_exit:


word16 fn0800_B4BE(selector ds, segptr32 ptrArg02, word16 wArg06, segptr32 ptrArg08)
// stackDelta: 12; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AD85
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax:[0..15]-fn0800_AD85
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: D bp di si sp
fn0800_B4BE_entry:
l0800_B4BE:
	di_16 = wArg06
	branch (Mem17[ptrArg02 + 2<i16>:word16] & 8<16>) == 0<16> l0800_B504
l0800_B504:
	branch (Mem17[ptrArg02 + 2<i16>:word16] & 0x40<16>) != 0<16> l0800_B512
l0800_B512:
	branch Mem17[ptrArg02 + 6<i16>:word16] != 0<16> l0800_B51C
l0800_B51C:
	branch Mem17[ptrArg02 + 6<i16>:word16] >=u wArg06 l0800_B583
l0800_B583:
	branch Mem17[ptrArg02:word16] + wArg06 < 0<16> l0800_B5B1
l0800_B58D:
	branch Mem17[ptrArg02:word16] != 0<16> l0800_B59F
l0800_B59F:
	branch fn0800_A6B7(ds, ptrArg02, out dx_703, out bx_704) == 0<16> l0800_B5B1
l0800_B5AE:
l0800_B593:
	Mem74[ptrArg02:word16] = 0xFFFF<16> - Mem17[ptrArg02 + 6<i16>:word16]
l0800_B5B1:
	fn0800_B03B(Mem86[ptrArg02 + 12<i32>:word32], ptrArg08, wArg06)
	Mem111[ptrArg02:word16] = Mem95[ptrArg02:word16] + wArg06
	Mem113[ptrArg02 + 12<i16>:word16] = Mem111[ptrArg02 + 12<i16>:word16] + wArg06
l0800_B522:
	branch Mem17[ptrArg02:word16] == 0<16> l0800_B535
l0800_B528:
	branch fn0800_A6B7(ds, ptrArg02, out dx_696, out bx_697) != 0<16> l0800_B4F5
l0800_B535:
	branch (Mem143[ds:(CONVERT(Mem143[ptrArg02 + 4<i16>:byte], int8, int16) << 1<16>) + 0x24EA<16>:word16] & 0x800<16>) == 0<16> l0800_B560
l0800_B549:
	fn0800_8E29(ds, CONVERT(Mem167[ptrArg02 + 4<i16>:byte], int8, int16), 0<32>, 2<8>, out cx_701, out dx_702)
l0800_B560:
	branch fn0800_C779(ds, CONVERT(Mem195[ptrArg02 + 4<i16>:byte], int8, int16), ptrArg08, wArg06, out cx_698, out dx_699, out bx_700) <u wArg06 l0800_B57D
l0800_B57D:
l0800_B57A:
l0800_B519:
l0800_B5DB:
	branch (Mem17[ds:(CONVERT(Mem17[ptrArg02 + 4<i16>:byte], int8, int16) << 1<16>) + 0x24EA<16>:word16] & 0x800<16>) == 0<16> l0800_B606
l0800_B5EF:
	fn0800_8E29(ds, CONVERT(Mem237[ptrArg02 + 4<i16>:byte], int8, int16), 0<32>, 2<8>, out cx_694, out dx_695)
l0800_B606:
	branch fn0800_C779(ds, CONVERT(Mem264[ptrArg02 + 4<i16>:byte], int8, int16), ptrArg08, wArg06, out cx_691, out dx_692, out bx_693) >=u wArg06 l0800_B69D
l0800_B620:
l0800_B50F:
l0800_B625:
	ptrArg08_528 = ptrArg08 (alias)
	branch Mem17[ptrArg02 + 6<i16>:word16] == 0<16> l0800_B680
l0800_B680:
	branch fn0800_C632(ds, CONVERT(Mem297[ptrArg02 + 4<i16>:byte], int8, int16), ptrArg08, wArg06, out dx_686, out bx_687) >=u wArg06 l0800_B69D
l0800_B69A:
l0800_B62F:
l0800_B677:
	wArg08_529 = SLICE(ptrArg08_528, word16, 0) (alias)
	wArg0A_587 = SLICE(ptrArg08_528, word16, 16) (alias)
	di_16 = di_16 - 1<16>
	branch di_16 != 0<16> l0800_B631
l0800_B631:
	v23_332 = Mem328[ptrArg02:word16] + 1<16>
	Mem333[ptrArg02:word16] = v23_332
	branch v23_332 >= 0<16> l0800_B659
l0800_B659:
	ax_355 = fn0800_B30A(ds, Mem345[ptrArg08_528:byte], ptrArg02, out cx_688, out dx_689, out bx_690)
	ptrArg08_528 = SEQ(wArg0A_587, wArg08_529 + 1<16>) (alias)
l0800_B639:
	ax_367 = Mem333[ptrArg02 + 14<i16>:word16]
	si_368 = Mem333[ptrArg02 + 12<i16>:word16]
	Mem370[ptrArg02 + 12<i16>:word16] = Mem333[ptrArg02 + 12<i16>:word16] + 1<16>
	dl_377 = Mem373[ptrArg08_528:byte]
	Mem379[ax_367:si_368:byte] = dl_377
	ax_355 = CONVERT(dl_377, uint8, uint16) (alias)
	ptrArg08_528 = SEQ(wArg0A_587, wArg08_529 + 1<16>) (alias)
l0800_B66F:
	branch ax_355 != 0xFFFF<16> l0800_B677
l0800_B674:
l0800_B67E:
l0800_B4D7:
l0800_B4FA:
	wArg08_540 = SLICE(ptrArg08_705, word16, 0) (alias)
	wArg0A_590 = SLICE(ptrArg08_705, word16, 16) (alias)
	di_16 = di_16 - 1<16>
	branch di_16 != 0<16> l0800_B4D9
l0800_B4D9:
	ptrArg08_528 = SEQ(wArg0A_590, wArg08_540 + 1<16>) (alias)
	ptrArg08_705 = ptrArg08_528
	branch fn0800_B324(ds, Mem406[ptrArg08_705:byte], ptrArg02, out cx_683, out dx_684, out bx_685) != 0xFFFF<16> l0800_B4FA
l0800_B4F5:
	ax_428 = 0<16>
l0800_B501:
l0800_B69D:
	ax_428 = wArg06
l0800_B6A0:
	return ax_428
fn0800_B4BE_exit:


void fn0800_B6A8(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 10; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B6D6
// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDO ax cx es Top
// Preserved: bp di ds si sp
fn0800_B6A8_entry:
l0800_B6A8:
	cx_19 = Mem17[ds:0x4EE8<16>:word16]
	es_25 = SLICE(ptrArg02, selector, 16) (alias)
	di_26 = SLICE(ptrArg02, word16, 0) (alias)
	ds_28 = SLICE(ptrArg06, selector, 16) (alias)
	si_29 = SLICE(ptrArg06, word16, 0) (alias)
	cx_22 = cx_19 >>u 1<16>
	branch cx_19 >>u 1<16> >=u 0<16> l0800_B6C6
l0800_B6BD:
	al_27 = Mem17[ptrArg02:byte]
	Mem31[ptrArg02:byte] = Mem17[ptrArg06:byte]
	Mem34[ptrArg06:byte] = al_27
	si_29 = si_29 + 1<i16>
	di_26 = di_26 + 1<i16>
	branch cx_19 >>u 1<16> == 0<16> l0800_B6CF
l0800_B6C6:
	ax_39 = Mem38[es_25:di_26:word16]
	Mem43[es_25:di_26:word16] = Mem38[ds_28:si_29:word16]
	si_29 = si_29 + 2<i16>
	Mem46[ds_28:si_29 - 2<i16>:word16] = ax_39
	di_26 = di_26 + 2<i16>
	cx_22 = cx_22 - 1<16>
	branch cx_22 != 0<16> l0800_B6C6
l0800_B6CF:
	return
fn0800_B6A8_exit:


void fn0800_B6D6(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 8; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B6D6
//      fn0800_B95E
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_B6D6_entry:
l0800_B6D6:
	sp_14 = fp - 0x1A<16>
	si_17 = wArg02
l0800_B6E1:
	branch si_17 >u 2<16> l0800_B726
l0800_B726:
	bx_31 = wArg04 + Mem24[ds:0x4EE8<16>:word16] *s (si_17 - 1<16>)
	ax_39 = Mem33[ds:0x4EE8<16>:word16] *s (si_17 >>u 1<16>) (alias)
	sp_46 = sp_14 - 2<i16>
	Mem47[ss:sp_46:word16] = wArg06
	Mem50[ss:sp_46 - 2<i16>:word16] = bx_31
	Mem53[ss:sp_46 - 4<i16>:word16] = wArg06
	bx_40 = wArg04 + ax_39
	Mem55[ss:sp_46 - 6<i16>:word16] = bx_40
	call 0x800<16>:Mem55[ds:0x4EEA<16>:word16] (retsize: 2;)
		uses: ax:ax_39,bx:bx_40,cx:cx_668,dx:wArg06,Mem:Mem55
		defs: ax:ax_59,cx:cx_668,sp:sp_58
	wLoc0A_665 = bx_31
	branch ax_59 <= 0<16> l0800_B775
l0800_B766:
	Mem72[ss:sp_58 + 6<16>:word16] = wArg06
	Mem75[ss:sp_58 + 4<16>:word16] = bx_40
	Mem78[ss:sp_58 + 2<16>:word16] = wArg06
	Mem81[ss:sp_58:word16] = bx_31
	fn0800_B6A8(ds, Mem81[ss:sp_58:segptr32], Mem81[ss:sp_58 + 4<i16>:segptr32])
l0800_B775:
	Mem97[ss:sp_58 + 6<16>:word16] = wArg06
	Mem100[ss:sp_58 + 4<16>:word16] = wArg04
	Mem103[ss:sp_58 + 2<16>:word16] = wArg06
	Mem106[ss:sp_58:word16] = bx_40
	call 0x800<16>:Mem106[ds:0x4EEA<16>:word16] (retsize: 2;)
		uses: ax:ax_112,bx:bx_114,cx:cx_116,dx:dx_113,Mem:Mem106
		defs: ax:ax_112,bx:bx_114,cx:cx_116,dx:dx_113,sp:sp_111
	branch ax_112 <= 0<16> l0800_B79A
l0800_B79A:
	Mem126[ss:sp_111 + 6<16>:word16] = wArg06
	Mem129[ss:sp_111 + 4<16>:word16] = bx_31
	Mem132[ss:sp_111 + 2<16>:word16] = wArg06
	Mem135[ss:sp_111:word16] = wArg04
	call 0x800<16>:Mem135[ds:0x4EEA<16>:word16] (retsize: 2;)
		uses: ax:ax_137,bx:bx_139,cx:cx_141,dx:dx_138,Mem:Mem135
		defs: ax:ax_137,bx:bx_139,cx:cx_141,dx:dx_138,sp:sp_136
	sp_143 = sp_136 + 8<16>
	branch ax_137 <= 0<16> l0800_B7C0
l0800_B7B1:
	Mem151[ss:sp_136 + 6<16>:word16] = wArg06
	Mem154[ss:sp_136 + 4<16>:word16] = wArg04
	Mem157[ss:sp_136 + 2<16>:word16] = wArg06
	Mem160[ss:sp_136:word16] = bx_31
	sp_159 = sp_136
l0800_B78C:
	Mem163[ss:sp_111 + 6<16>:word16] = wArg06
	Mem166[ss:sp_111 + 4<16>:word16] = bx_40
	Mem169[ss:sp_111 + 2<16>:word16] = wArg06
	Mem172[ss:sp_111:word16] = wArg04
	sp_159 = sp_111
l0800_B7BD:
	fn0800_B6A8(ds, Mem176[ss:sp_159:segptr32], Mem176[ss:sp_159 + 4<i16>:segptr32])
	sp_143 = sp_159 + 8<16>
l0800_B7C0:
	branch si_17 != 3<16> l0800_B7D4
l0800_B7D4:
	dx_197 = wArg04 + Mem193[ds:0x4EE8<16>:word16]
	wLoc0E_683 = dx_197
	wLoc06_685 = dx_197
l0800_B813:
	sp_208 = sp_143 - 2<i16>
	Mem209[ss:sp_208:word16] = wArg06
	Mem212[ss:sp_208 - 2<i16>:word16] = wArg04
	Mem215[ss:sp_208 - 4<i16>:word16] = wArg06
	Mem218[ss:sp_208 - 6<i16>:word16] = wLoc06_685
	call 0x800<16>:Mem218[ds:0x4EEA<16>:word16] (retsize: 2;)
		uses: ax:ax_224,bx:bx_226,cx:cx_228,dx:dx_225,Mem:Mem218
		defs: ax:ax_224,bx:bx_226,cx:cx_228,dx:dx_225,sp:sp_223
	sp_143 = sp_223 + 8<16>
	branch ax_224 <= 0<16> l0800_B7EC
l0800_B7EC:
	branch ax_224 != 0<16> l0800_B805
l0800_B7F0:
	Mem244[ss:sp_223 + 6<16>:word16] = wArg06
	Mem247[ss:sp_223 + 4<16>:word16] = wLoc06_685
	Mem250[ss:sp_223 + 2<16>:word16] = wArg06
	Mem253[ss:sp_223:word16] = wLoc0E_683
	fn0800_B6A8(ds, Mem253[ss:sp_223:segptr32], Mem253[ss:sp_223 + 4<i16>:segptr32])
	wLoc0E_683 = wLoc0E_683 + Mem253[ds:0x4EE8<16>:word16]
l0800_B805:
	sp_143 = sp_223 + 8<16>
	branch wLoc06_685 >=u wLoc0A_665 l0800_B883
l0800_B80D:
	wLoc06_685 = wLoc06_685 + Mem269[ds:0x4EE8<16>:word16]
l0800_B82C:
	branch wLoc06_685 >=u wLoc0A_665 l0800_B87B
l0800_B834:
	sp_286 = sp_143 - 2<i16>
	Mem287[ss:sp_286:word16] = wArg06
	Mem290[ss:sp_286 - 2<i16>:word16] = wLoc0A_665
	Mem293[ss:sp_286 - 4<i16>:word16] = wArg06
	Mem296[ss:sp_286 - 6<i16>:word16] = wArg04
	call 0x800<16>:Mem296[ds:0x4EEA<16>:word16] (retsize: 2;)
		uses: ax:ax_302,bx:bx_304,cx:cx_306,dx:dx_303,Mem:Mem296
		defs: ax:ax_302,bx:bx_304,cx:cx_306,dx:dx_303,sp:sp_301
	sp_143 = sp_301 + 8<16>
	branch ax_302 >= 0<16> l0800_B855
l0800_B855:
	Mem318[ss:sp_301 + 6<16>:word16] = wArg06
	Mem321[ss:sp_301 + 4<16>:word16] = wLoc06_685
	Mem324[ss:sp_301 + 2<16>:word16] = wArg06
	Mem327[ss:sp_301:word16] = wLoc0A_665
	fn0800_B6A8(ds, Mem327[ss:sp_301:segptr32], Mem327[ss:sp_301 + 4<i16>:segptr32])
	sp_143 = sp_301 + 8<16>
	branch ax_302 == 0<16> l0800_B87B
l0800_B868:
	ax_342 = Mem327[ds:0x4EE8<16>:word16]
	wLoc06_685 = wLoc06_685 + ax_342
	wLoc0A_665 = wLoc0A_665 - ax_342
l0800_B84D:
	v62_349 = wLoc0A_665 - Mem296[ds:0x4EE8<16>:word16]
	wLoc0A_665 = v62_349
l0800_B873:
	branch wLoc06_685 <u v62_349 l0800_B834
l0800_B87B:
	branch wLoc06_685 <u wLoc0A_665 l0800_B813
l0800_B883:
	sp_368 = sp_143 - 2<i16>
	Mem369[ss:sp_368:word16] = wArg06
	Mem372[ss:sp_368 - 2<i16>:word16] = wArg04
	Mem375[ss:sp_368 - 4<i16>:word16] = wArg06
	Mem378[ss:sp_368 - 6<i16>:word16] = wLoc06_685
	call 0x800<16>:Mem378[ds:0x4EEA<16>:word16] (retsize: 2;)
		uses: ax:ax_391,bx:bx_393,cx:cx_395,dx:dx_392,Mem:Mem378
		defs: ax:ax_391,bx:bx_393,cx:cx_395,dx:dx_392,sp:sp_390
	branch ax_391 > 0<16> l0800_B8AA
l0800_B89A:
	wLoc06_685 = wLoc06_685 + Mem378[ds:0x4EE8<16>:word16]
l0800_B8AA:
	wLoc16_726 = wLoc06_685 - Mem411[ds:0x4EE8<16>:word16]
	wLoc12_730 = wArg04
l0800_B8E0:
	branch wLoc12_730 >=u wLoc0E_683 l0800_B8F0
l0800_B8E8:
	branch wLoc16_726 >=u wLoc0E_683 l0800_B8C8
l0800_B8C8:
	Mem435[ss:sp_390 + 6<16>:word16] = wArg06
	Mem438[ss:sp_390 + 4<16>:word16] = wLoc12_730
	Mem441[ss:sp_390 + 2<16>:word16] = wArg06
	Mem444[ss:sp_390:word16] = wLoc16_726
	fn0800_B6A8(ds, Mem444[ss:sp_390:segptr32], Mem444[ss:sp_390 + 4<16>:segptr32])
	ax_455 = Mem444[ds:0x4EE8<16>:word16]
	wLoc12_730 = wLoc12_730 + ax_455
	wLoc16_726 = wLoc16_726 - ax_455
l0800_B8F0:
	Mem465[ss:sp_390 + 6<16>:word16] = 0<16>
	Mem469[ss:sp_390 + 4<16>:word16] = Mem465[ds:0x4EE8<16>:word16]
	dx_ax_656 = CONVERT(wLoc06_685 - wLoc0E_683, word16, uint32)
	Mem479[ss:sp_390 + 2<16>:word16] = SLICE(dx_ax_656, word16, 16)
	Mem481[ss:sp_390:word16] = SLICE(dx_ax_656, word16, 0)
	sp_486 = <invalid>
	ax_482 = SLICE(fn0800_8BBB(Mem481[ss:sp_390:word32], Mem481[ss:sp_390 + 4<16>:word32], out cx_857), word16, 0) (alias)
	Mem495[ss:sp_486 - 2<i16>:word16] = 0<16>
	Mem498[ss:sp_486 - 4<i16>:word16] = Mem495[ds:0x4EE8<16>:word16]
	ax_dx_657 = CONVERT(wArg04 + Mem498[ds:0x4EE8<16>:word16] *s si_17 - wLoc06_685, word16, uint32)
	Mem514[ss:sp_486 - 6<i16>:word16] = SLICE(ax_dx_657, word16, 16)
	Mem516[ss:sp_486 - 8<i16>:word16] = SLICE(ax_dx_657, word16, 0)
	ax_517 = SLICE(fn0800_8BBB(Mem516[ss:sp_486 - 8<i16>:word32], Mem516[ss:sp_486 - 4<i16>:word32], out cx_859), word16, 0) (alias)
	sp_521 = <invalid>
	si_17 = ax_517
	branch ax_517 >=u ax_482 l0800_B93D
l0800_B93D:
	Mem532[ss:sp_521 - 2<i16>:word16] = wArg06
	Mem535[ss:sp_521 - 4<i16>:word16] = wArg04
	Mem537[ss:sp_521 - 6<i16>:word16] = ax_482
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg2 = <invalid>
	stackArg4 = <invalid>
	stackArg6 = <invalid>
	fn0800_B6D6(ds, stackArg2, stackArg4, stackArg6)
	sp_14 = sp_521
	wArg04 = wLoc06_685
l0800_B92E:
	Mem555[ss:sp_521 - 2<i16>:word16] = wArg06
	Mem558[ss:sp_521 - 4<i16>:word16] = wLoc06_685
	Mem560[ss:sp_521 - 6<i16>:word16] = ax_517
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg2 = <invalid>
	stackArg4 = <invalid>
	stackArg6 = <invalid>
	fn0800_B6D6(ds, stackArg2, stackArg4, stackArg6)
	sp_14 = sp_521
	si_17 = ax_482
l0800_B7C5:
	sp_572 = sp_143 - 2<i16>
	Mem573[ss:sp_572:word16] = wArg06
	Mem576[ss:sp_572 - 2<i16>:word16] = wArg04
	Mem579[ss:sp_572 - 4<i16>:word16] = wArg06
	Mem582[ss:sp_572 - 6<i16>:word16] = bx_40
	sp_581 = sp_572 - 6<i16>
l0800_B6E6:
	branch si_17 == 2<16> l0800_B6EE
l0800_B6EE:
	dx_587 = wArg04 + Mem24[ds:0x4EE8<16>:word16]
	sp_591 = sp_14 - 2<i16>
	Mem592[ss:sp_591:word16] = wArg06
	Mem594[ss:sp_591 - 2<i16>:word16] = dx_587
	Mem597[ss:sp_591 - 4<i16>:word16] = wArg06
	Mem600[ss:sp_591 - 6<i16>:word16] = wArg04
	call 0x800<16>:Mem600[ds:0x4EEA<16>:word16] (retsize: 2;)
		uses: ax:wArg06,bx:bx_604,cx:cx_606,dx:dx_587,Mem:Mem600
		defs: ax:ax_602,bx:bx_604,cx:cx_606,sp:sp_601
	branch ax_602 > 0<16> l0800_B714
l0800_B714:
	Mem616[ss:sp_601 + 6<16>:word16] = wArg06
	Mem619[ss:sp_601 + 4<16>:word16] = wArg04
	Mem622[ss:sp_601 + 2<16>:word16] = wArg06
	Mem625[ss:sp_601:word16] = dx_587
	sp_581 = sp_601
l0800_B720:
	fn0800_B6A8(ds, Mem629[ss:sp_581:segptr32], Mem629[ss:sp_581 + 4<i16>:segptr32])
l0800_B711:
l0800_B6EB:
l0800_B956:
	return
fn0800_B6D6_exit:


void fn0800_B95E(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_5E64
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: DP bp sp
fn0800_B95E_entry:
l0800_B95E:
	Mem11[ds:0x4EE8<16>:word16] = wArg08
	branch wArg08 == 0<16> l0800_B97D
l0800_B96B:
	Mem18[ds:0x4EEA<16>:word16] = wArg0A
	fn0800_B6D6(ds, wArg06, wArg02, wArg04)
l0800_B97D:
	return
fn0800_B95E_exit:


word16 fn0800_B97F(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_AE4C
//      fn0800_AED6
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax:[0..15]-fn0800_AE4C
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_B97F_entry:
	wArg06 = SLICE(ptrArg04, word16, 16)
	wArg04 = SLICE(ptrArg04, word16, 0)
l0800_B97F:
	branch wArg02 <u Mem15[ds:0x24E8<16>:word16] l0800_B99A
l0800_B99A:
	branch wArg08 <u 1<16> l0800_B9B0
l0800_B9A3:
	branch (Mem15[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 0x200<16>) == 0<16> l0800_B9B5
l0800_B9B5:
	ax_47 = fn0800_8F50(ds, wArg02, ptrArg04, wArg08, out ch_358)
	branch ax_47 <u 1<16> l0800_B9DD
l0800_B9D0:
	branch (Mem57[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 0x4000<16>) != 0<16> l0800_B9E2
l0800_B9E2:
	cx_122 = ax_47
	si_69 = wArg04 (alias)
	di_155 = wArg04
l0800_B9ED:
	al_76 = Mem75[wArg06:si_69:byte]
	si_69 = si_69 + 1<i16>
	branch al_76 == 0x1A<8> l0800_BA21
l0800_BA21:
	fn0800_8E29(ds, wArg02, SEQ(0<16> - CONVERT(cx_122 != 0<16>, bool, word16), -cx_122), 1<8>, out cx_359, out dx_360)
	Mem114[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] = Mem100[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] | 0x200<16>
l0800_B9F3:
	branch al_76 == 0xD<8> l0800_B9FC
l0800_B9FC:
	cx_122 = cx_122 - 1<16>
	branch cx_122 != 0<16> l0800_B9ED
l0800_B9FE:
	fn0800_8F50(ds, wArg02, SEQ(ss, fp - 5<i16>), 1<16>, out ch_361)
	Mem156[wArg06:di_155:byte] = bLoc05
	di_155 = di_155 + 1<i16>
l0800_B9F7:
	Mem158[wArg06:di_155:byte] = al_76
	di_155 = di_155 + 1<i16>
	cx_122 = cx_122 - 1<16>
	branch cx_122 != 0<16> l0800_B9ED
l0800_B9FA:
l0800_BA19:
	branch di_155 != wArg04 l0800_BA1F
l0800_BA1F:
l0800_BA41:
	ax_178 = di_155 - wArg04
l0800_BA1D:
l0800_B9DD:
	ax_178 = ax_47
l0800_B9B0:
	ax_178 = 0<16>
l0800_B990:
	ax_178 = fn0800_8D2B(ds, 6<16>)
l0800_BA44:
	return ax_178
fn0800_B97F_exit:


word16 fn0800_BA4A(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_37DF
//      fn0800_3C99
// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax:[0..15]-fn0800_37DF
// Trashed: SCZO ax dx es Top
// Preserved: bp di ds sp
fn0800_BA4A_entry:
l0800_BA4A:
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_22) l0800_BA60
l0800_BA60:
	ax_28 = fn0800_8D2B(ds, ax_22)
l0800_BA5C:
	ax_28 = 0<16>
l0800_BA64:
	return ax_28
fn0800_BA4A_exit:


void fn0800_BA67(selector ds, segptr32 ptrArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0DE8
//      fn0800_12E2
//      fn0800_3BC3
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_BA67_entry:
l0800_BA67:
	branch fn0800_ACB3(ds, ptrArg02, 0<32>, 0<16>, out cx_82) != 0<16> l0800_BA87
l0800_BA7F:
	Mem46[ptrArg02 + 2<i16>:word16] = Mem24[ptrArg02 + 2<i16>:word16] & 0xFFEF<16>
l0800_BA87:
	return
fn0800_BA67_exit:


word16 fn0800_BA89(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & cxOut, ptr16 & dsOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A96D
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax:[0..15]-fn0800_A96D cx:[0..15]-fn0800_A96D ds:[0..15]-fn0800_A96D
// Trashed: SCZOP ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_BA89_entry:
	wArg02_236 = SLICE(ptrArg02, word16, 0) (alias)
l0800_BA89:
	bp_158 = fp - 2<i16>
	di_15 = wArg0A
	branch Mem14[ptrArg02 + 18<i16>:word16] != wArg02_236 l0800_BAAB
l0800_BAA0:
	branch wArg0A > 2<16> l0800_BAAB
l0800_BAA5:
	branch wArg0C <=u 0x7FFF<16> l0800_BAB1
l0800_BAB1:
	branch Mem14[ds:0x26B2<16>:word16] != 0<16> l0800_BAC7
l0800_BAB8:
	branch wArg02_236 != 0x236C<16> l0800_BAC7
l0800_BAC7:
	branch Mem14[ds:0x26B0<16>:word16] != 0<16> l0800_BADB
l0800_BACE:
	branch wArg02_236 != 0x2358<16> l0800_BADB
l0800_BAD5:
	Mem40[ds:0x26B0<16>:word16] = 1<16>
l0800_BABF:
	Mem41[ds:0x26B2<16>:word16] = 1<16>
l0800_BADB:
	branch Mem44[ptrArg02:word16] == 0<16> l0800_BAF6
l0800_BAE4:
	fn0800_ACB3(ds, ptrArg02, 0<32>, 1<16>, out cx)
l0800_BAF6:
	wArg04_255 = SLICE(ptrArg02, word16, 16) (alias)
	wArg02_256 = SLICE(ptrArg02, word16, 0) (alias)
	branch (Mem83[ptrArg02 + 2<i16>:word16] & 4<16>) == 0<16> l0800_BB0E
l0800_BB01:
	v22_91 = Mem83[ptrArg02 + 10<i16>:word16]
	fn0800_9E75(ds, v22_91, out cx_355, out dx_356, out bx_357, out ds)
	cx = v22_91
l0800_BB0E:
	Mem120[ptrArg02 + 2<i16>:word16] = Mem115[ptrArg02 + 2<i16>:word16] & 0xFFF3<16>
	Mem122[ptrArg02 + 6<i16>:word16] = 0<16>
	Mem126[ptrArg02 + 10<i16>:word16] = wArg04_255
	Mem127[ptrArg02 + 8<i16>:word16] = wArg02_256 + 5<16>
	Mem128[ptrArg02 + 14<i16>:word16] = wArg04_255
	Mem129[ptrArg02 + 12<i16>:word16] = wArg02_256 + 5<16>
	branch wArg0A == 2<16> l0800_BB92
l0800_BB3A:
	si_140 = wArg0C
	branch wArg0C <=u 0<16> l0800_BB92
l0800_BB3E:
	Mem147[ds:0x2352<16>:word16] = 0xC7F0<16>
	branch (wArg06 | wArg08) != 0<16> l0800_BB6B
l0800_BB4C:
	ax_157 = fn0800_9F7F(ds, wArg0C, out dx_163, out bp_158, out si_140, out di_15, out ds)
	Mem172[ss:bp_158 + 10<i16>:word16] = dx_163
	Mem173[ss:bp_158 + 8<i16>:word16] = ax_157
	cx = wArg0C
	branch (ax_157 | dx_163) != 0<16> l0800_BB5E
l0800_BB5E:
	es_bx_179 = Mem173[ss:bp_158 + 4<i16>:segptr32]
	Mem183[es_bx_179 + 2<i16>:word16] = Mem173[es_bx_179 + 2<i16>:word16] | 4<16>
l0800_BB6B:
	es_bx_190 = Mem189[ss:bp_158 + 4<i16>:segptr32]
	ax_191 = Mem189[ss:bp_158 + 10<i16>:word16]
	dx_192 = Mem189[ss:bp_158 + 8<i16>:word16]
	Mem195[es_bx_190 + 14<i16>:word16] = ax_191
	Mem196[es_bx_190 + 12<i16>:word16] = dx_192
	Mem197[es_bx_190 + 10<i16>:word16] = ax_191
	Mem198[es_bx_190 + 8<i16>:word16] = dx_192
	Mem200[es_bx_190 + 6<i16>:word16] = si_140
	branch di_15 != 1<16> l0800_BB92
l0800_BB8D:
	Mem205[es_bx_190 + 2<i16>:word16] = Mem200[es_bx_190 + 2<i16>:word16] | 8<16>
l0800_BB92:
	ax_209 = 0<16>
l0800_BB5B:
l0800_BAAB:
	ax_209 = 0xFFFF<16>
l0800_BB94:
	cxOut = cx
	dsOut = ds
	return ax_209
fn0800_BA89_exit:


void fn0800_BB98(word16 wArg02, word32 dwArg04, segptr32 ptrArg08)
// stackDelta: 12; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_BB98_entry:
l0800_BB98:
	branch ptrArg08 == 0<16> l0800_BBE4
l0800_BBA7:
	branch fn0800_BFC7(dwArg04, out cx_152) <u wArg02 l0800_BBD2
l0800_BBD2:
	fn0800_BF9E(ptrArg08, dwArg04)
l0800_BBB6:
	fn0800_C01E(ptrArg08, dwArg04, wArg02)
	Mem91[ptrArg08 + wArg02:byte] = 0<8>
l0800_BBE4:
	return
fn0800_BB98_exit:


void fn0800_BBE9(segptr32 ptrArg02)
// stackDelta: 6; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO ax bp bx cx es Top
// Preserved: sp
fn0800_BBE9_entry:
	wArg02_62 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_67 = SLICE(ptrArg02, word16, 16) (alias)
l0800_BBE9:
	branch Mem7[ptrArg02 - 1<i16>:byte] != 0x2E<8> l0800_BBFC
l0800_BBF9:
	wArg02_62 = wArg02_62 - 1<16>
l0800_BBFC:
	ptrArg02_68 = SEQ(wArg04_67, wArg02_62 - 1<16>) (alias)
	ax_28 = CONVERT(Mem22[ptrArg02_68:byte], int8, int16)
	cx_30 = 4<16>
	bx_31 = 0xBC39<16>
l0800_BC0F:
	branch Mem29[0x800<16>:bx_31:word16] == ax_28 l0800_BC1E
l0800_BC1E:
	call Mem29[0x800<16>:bx_31 + 8<i16>:word16] (retsize: 0;)
		uses: Mem:Mem29,Stack +0006:ptrArg02_68
	return
l0800_BC17:
	bx_31 = bx_31 + 2<16>
	cx_30 = cx_30 - 1<16>
	branch cx_30 != 0<16> l0800_BC0F
l0800_BC1C:
l0800_BC31:
	return
fn0800_BBE9_exit:


word16 fn0800_BC49(segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, segptr32 ptrArg0E, segptr32 ptrArg12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_BE3B
// MayUse:  ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: bx:[0..15]-fn0800_BE3B
// Trashed: SCZDO ax bp bx cx di dx es si Top
// Preserved: sp
fn0800_BC49_entry:
	wArg06 = SLICE(ptrArg06, word16, 0)
	wArg08 = SLICE(ptrArg06, word16, 16)
	wArg0A = SLICE(ptrArg0A, word16, 0)
	wArg0C = SLICE(ptrArg0A, word16, 16)
	wArg0E = SLICE(ptrArg0E, word16, 0)
	wArg10 = SLICE(ptrArg0E, word16, 16)
	wArg12 = SLICE(ptrArg12, word16, 0)
	wArg14 = SLICE(ptrArg12, word16, 16)
l0800_BC49:
	branch ptrArg06 == 0<16> l0800_BC62
l0800_BC5B:
	Mem26[ptrArg06:byte] = 0<8>
l0800_BC62:
	branch ptrArg0A == 0<16> l0800_BC71
l0800_BC6A:
	Mem39[ptrArg0A:byte] = 0<8>
l0800_BC71:
	branch ptrArg0E == 0<16> l0800_BC80
l0800_BC79:
	Mem52[ptrArg0E:byte] = 0<8>
l0800_BC80:
	branch ptrArg12 == 0<16> l0800_BC8F
l0800_BC88:
	Mem65[ptrArg12:byte] = 0<8>
l0800_BC8F:
	ptrLoc06_245 = SEQ(ss, fp - 90<i16>) (alias)
l0800_BC9D:
	wArg02_237 = SLICE(ptrArg02, word16, 0) (alias)
	wArg04_239 = SLICE(ptrArg02, word16, 16) (alias)
	branch Mem73[ptrArg02:byte] == 0x20<8> l0800_BC9A
l0800_BC9A:
	ptrArg02_279 = SEQ(wArg04_239, wArg02_237 + 1<16>) (alias)
	ptrArg02 = ptrArg02_279
l0800_BCA6:
	ax_92 = fn0800_BFC7(ptrArg02, out cx_348)
	si_104 = ax_92
	branch ax_92 <= 0x50<16> l0800_BCB9
l0800_BCB6:
	si_104 = 0x50<16>
l0800_BCB9:
	Mem114[ptrLoc06_245:byte] = 0<8>
	fn0800_C01E(SEQ(ss, fp - 0x59<16>), ptrArg02, si_104)
	v26_145 = fp - 0x59<16> + si_104
	Mem150[SEQ(ss, v26_145):byte] = 0<8>
	wLoc06_258 = v26_145
l0800_BCE2:
	v27_158 = wLoc06_258 - 1<16>
	wLoc06_258 = v27_158
	ax_165 = CONVERT(Mem159[SEQ(ss, v27_158):byte], int8, int16)
	cx_167 = 7<16>
	bx_168 = 0xBE1F<16>
l0800_BCF5:
	branch Mem166[0x800<16>:bx_168:word16] == ax_165 l0800_BD04
l0800_BD04:
	call Mem166[0x800<16>:bx_168 + 14<i16>:word16] (retsize: 0;)
		uses: Mem:Mem166,Stack +0060:ptrArg02_279,Stack +0064:wArg06,Stack +0066:wArg08,Stack +0068:wArg0A,Stack +006A:wArg0C,Stack +006C:wArg0E,Stack +006E:wArg10,Stack +0070:wArg12,Stack +0072:wArg14
		defs: bx:bx_182
	return bx_182
fn0800_BC49_exit:
l0800_BCFD:
	bx_168 = bx_168 + 2<16>
	cx_167 = cx_167 - 1<16>
	branch cx_167 != 0<16> l0800_BCF5
l0800_BD02:


word16 fn0800_BE3B(word32 dwArg02, word32 dwArg06, word32 dwArg0A, word32 dwArg0E, word32 dwArg12)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_3509
//      fn0800_35A3
// MayUse:  ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: bx:[0..15]-fn0800_3509
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_BE3B_entry:
l0800_BE3B:
	return fn0800_BC49(dwArg02, dwArg06, dwArg0A, dwArg0E, dwArg12)
fn0800_BE3B_exit:


word16 fn0800_BEA2(word16 cx, word16 dx, selector ds, segptr32 ptrArg02, word32 dwArg06, ptr16 & diOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0541
//      fn0800_31B4
//      fn0800_37BE
// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: di:[0..15]-fn0800_0541 si:[0..15]-fn0800_37BE
// Trashed: SCZDO ax bx di es si Top
// Preserved: bp sp
fn0800_BEA2_entry:
l0800_BEA2:
	Mem12[ptrArg02:byte] = 0<8>
	si_35 = fn0800_9828(cx, dx, SLICE(ptrArg02, word16, 0), ds, fp + 10<i16>, dwArg06, out di_34)
	diOut = di_34
	return si_35
fn0800_BEA2_exit:


word16 fn0800_BF18(word16 di, selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0541
// MayUse:  di:[0..15] ds:[0..15] ss:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: di:[0..15]-fn0800_0541
// Trashed: SCZDOP ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_BF18_entry:
l0800_BF18:
	return fn0800_8F97(di, ds, 0xBEE5<16>, 0xBF0D<16>, fp + 2<i16>, ss, wArg06, wArg08)
fn0800_BF18_exit:


void fn0800_BF5F(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_8E6A
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDOP ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_BF5F_entry:
l0800_BF5F:
	di_191 = SLICE(ptrArg02, word16, 0) (alias)
	es_128 = SLICE(ptrArg02, selector, 16) (alias)
	cx_26 = 0xFFFF<16>
l0800_BF70:
	branch cx_26 == 0<16> l0800_BF72
l0800_BF70_1:
	di_191 = di_191 + 1<i16>
	cx_26 = cx_26 - 1<16>
	branch Mem18[es_128:di_191:byte] == 0<8> l0800_BF70
l0800_BF72:
	si_44 = di_191 - 1<i16>
	es_130 = SLICE(ptrArg06, selector, 16) (alias)
	di_131 = SLICE(ptrArg06, word16, 0) (alias)
	cx_48 = 0xFFFF<16>
l0800_BF7C:
	branch cx_48 == 0<16> l0800_BF7E
l0800_BF7C_2:
	di_131 = di_131 + 1<i16>
	cx_48 = cx_48 - 1<16>
	branch Mem42[es_130:di_131:byte] == 0<8> l0800_BF7C
l0800_BF7E:
	cx_59 = ~cx_48
	di_61 = di_131 - cx_59
	di_76 = si_44
	si_77 = di_61
	branch (di_61 & 1<16>) == 0<16> l0800_BF8F
l0800_BF8D:
	Mem83[es_128:si_44:byte] = Mem68[es_130:di_61:byte]
	si_77 = di_61 + 1<i16>
	di_76 = si_44 + 1<i16>
	cx_59 = cx_59 - 1<16>
l0800_BF8F:
	cx_89 = cx_59 >>u 1<16>
	memcpy(es_128:di_76, es_130:si_77, cx_89 *u32 2<16>)
	si_97 = si_77 + cx_89 *u 2<16>
	di_98 = di_76 + cx_89 *u 2<16>
	branch cx_89 >=u 0<16> l0800_BF96
l0800_BF95:
	Mem102[es_128:di_98:byte] = Mem100[es_130:si_97:byte]
l0800_BF96:
	return
fn0800_BF5F_exit:


void fn0800_BF9E(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0402
//      fn0800_2DE2
//      fn0800_BB98
//      fn0800_C379
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_BF9E_entry:
l0800_BF9E:
	di_17 = SLICE(ptrArg06, word16, 0) (alias)
	es_66 = SLICE(ptrArg06, selector, 16) (alias)
	cx_23 = 0xFFFF<16>
l0800_BFAE:
	branch cx_23 == 0<16> l0800_BFB0
l0800_BFAE_1:
	di_17 = di_100 + 1<i16>
	cx_23 = cx_23 - 1<16>
	di_100 = di_17
	branch Mem14[es_66:di_100:byte] == 0<8> l0800_BFAE
l0800_BFB0:
	memcpy(ptrArg02, ptrArg06, CONVERT(~cx_23, word16, uint32))
	return
fn0800_BF9E_exit:


word16 fn0800_BFC7(segptr32 ptrArg02, ptr16 & cxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_0402
//      fn0800_0541
//      fn0800_9CE6
//      fn0800_BB98
//      fn0800_BC49
//      fn0800_C379
// MayUse:  Stack +0002:[0..31]
// LiveOut: ax:[0..15]-fn0800_0402 cx:[0..15]-fn0800_0402
// Trashed: SCZDO ax cx es Top
// Preserved: bp di sp
fn0800_BFC7_entry:
	wArg04_66 = SLICE(ptrArg02, word16, 16) (alias)
l0800_BFC7:
	di_16 = SLICE(ptrArg02, word16, 0) (alias)
	es_60 = SLICE(ptrArg02, selector, 16) (alias)
	ax_13 = 0<16>
	branch wArg04_66 != 0<16> l0800_BFD9
l0800_BFD5:
	branch di_16 == 0<16> l0800_BFE3
l0800_BFD9:
	cx_20 = 0xFFFF<16>
l0800_BFDD:
	branch cx_20 == 0<16> l0800_BFDF
l0800_BFDD_1:
	di_16 = di_104 + 1<i16>
	cx_20 = cx_20 - 1<16>
	di_104 = di_16
	branch Mem11[es_60:di_104:byte] == 0<8> l0800_BFDD
l0800_BFDF:
	cx = 0<16>
	ax_13 = -cx_20
l0800_BFE3:
	cxOut = cx
	return ax_13
fn0800_BFC7_exit:


word16 fn0800_BFE6(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_29C5
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax:[0..15]-fn0800_29C5
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_BFE6_entry:
l0800_BFE6:
	di_19 = SLICE(ptrArg06, word16, 0) (alias)
	es_82 = SLICE(ptrArg06, selector, 16) (alias)
	ax_100 = wArg0A
	cx_22 = wArg0A
	branch wArg0A == 0<16> l0800_C018
l0800_BFFA:
	di_31 = di_19
l0800_BFFE:
	branch cx_22 == 0<16> l0800_C000
l0800_BFFE_1:
	di_31 = di_123 + 1<i16>
	cx_22 = cx_22 - 1<16>
	di_123 = di_31
	branch Mem14[es_82:di_123:byte] == 0<8> l0800_BFFE
l0800_C000:
	memcmp(ptrArg02, ptrArg06, CONVERT(wArg0A - cx_22, word16, uint32))
	firstDifference_55 = __find_first_difference__(ptrArg02, ptrArg06)
	ax_100 = CONVERT(Mem14[SLICE(ptrArg02, selector, 16):SLICE(ptrArg02, word16, 0) + firstDifference_55 - 1<i16>:byte] - Mem14[es_82:(di_19 + firstDifference_55) - 1<i16>:byte], uint8, uint16)
l0800_C018:
	return ax_100
fn0800_BFE6_exit:


void fn0800_C01E(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_BB98
//      fn0800_BC49
//      fn0800_C379
// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_C01E_entry:
l0800_C01E:
	di_17 = SLICE(ptrArg06, word16, 0) (alias)
	es_86 = SLICE(ptrArg06, selector, 16) (alias)
	cx_24 = wArg0A
l0800_C030:
	branch cx_24 == 0<16> l0800_C032
l0800_C030_1:
	di_17 = di_126 + 1<i16>
	cx_24 = cx_24 - 1<16>
	di_126 = di_17
	branch Mem14[es_86:di_126:byte] == 0<8> l0800_C030
l0800_C032:
	size_57 = CONVERT(wArg0A - cx_24, word16, uint32)
	memcpy(ptrArg02, ptrArg06, size_57)
	es_58 = SLICE(ptrArg02, selector, 16) (alias)
	di_63 = SLICE(ptrArg02 + size_57, word16, 0)
	cx_64 = cx_24
l0800_C042:
	branch cx_64 == 0<16> l0800_C044
l0800_C044:
	return
fn0800_C01E_exit:
l0800_C042_2:
	Mem83[es_58:di_63:byte] = 0<8>
	di_63 = di_63 + 1<i16>
	cx_64 = cx_64 - 1<16>


word16 fn0800_C04F(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_9764
// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax:[0..15]-fn0800_9764 cx:[0..15]-fn0800_9764 dx:[0..15]-fn0800_9764
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp si sp
fn0800_C04F_entry:
l0800_C04F:
	fn0800_C379(ds)
	si_37 = Mem33[ptrArg02:word16]
	dx_27 = Mem13[ds:0x26E2<16>:word16]
	dx_ax_44 = CONVERT(si_37 + 0xF844<16> >> 2<16>, int16, int32)
	dx_ax_76 = CONVERT(si_37 + 0xF844<16> & 3<16>, int16, int32)
	v23_v22_325 = SEQ(SLICE(SEQ(Mem13[ds:0x26E4<16>:word16], dx_27) + 0x12CEA600<32>, word16, 16), dx_27 + 0xA600<16>) + fn0800_8F18(0x1F80<16>, SLICE(dx_ax_44, word16, 16), 0x786<16>, SLICE(dx_ax_44, word16, 0), out ch_458) + fn0800_8F18(0x3380<16>, SLICE(dx_ax_76, word16, 16), 0x1E1<16>, SLICE(dx_ax_76, word16, 0), out ch_459)
	dwLoc06_349 = v23_v22_325 (alias)
	branch (si_37 + 0xF844<16> & 3<16>) == 0<16> l0800_C0B9
l0800_C0B0:
	dwLoc06_349 = v23_v22_325 + 0x15180<32> (alias)
l0800_C0B9:
	cx_114 = 0<16>
	si_126 = CONVERT(Mem118[ptrArg02 + 3<i16>:byte], int8, int16) - 1<16>
l0800_C0D0:
	branch si_126 > 0<16> l0800_C0C8
l0800_C0C8:
	si_126 = si_126 - 1<16>
	cx_114 = cx_114 + CONVERT(Mem118[ds:si_126 + 0x26B4<16>:byte], int8, int16)
l0800_C0D4:
	cx_149 = cx_114 + (CONVERT(Mem118[ptrArg02 + 2<i16>:byte], int8, int16) - 1<16>)
	branch Mem118[ptrArg02 + 3<i16>:byte] <= 2<8> l0800_C0EE
l0800_C0E6:
	branch (Mem118[ptrArg02:word16] & 3<16>) != 0<16> l0800_C0EE
l0800_C0ED:
	cx_149 = cx_149 + 1<16>
l0800_C0EE:
	ax_179 = cx_149 *s 0x18<16> + CONVERT(Mem118[ptrArg06 + 1<i16>:byte], uint8, uint16)
	si_180 = ax_179
	branch Mem171[ds:0x26E6<16>:word16] == 0<16> l0800_C128
l0800_C10B:
	branch fn0800_C553(ds, Mem193[ptrArg02:word16] + 0xF84E<16>, 0<16>, cx_149, Mem171[ptrArg06 + 1<i16>:byte]) == 0<16> l0800_C128
l0800_C127:
	si_180 = ax_179 - 1<16>
l0800_C128:
	dx_ax_221 = CONVERT(si_180, int16, int32)
	v32_v31_328 = dwLoc06_349 + fn0800_8F18(0xE10<16>, SLICE(dx_ax_221, word16, 16), 0<16>, SLICE(dx_ax_221, word16, 0), out ch_460)
	dx_ax_260 = CONVERT(Mem253[ptrArg06:byte], uint8, int32)
	bx_cx_331 = fn0800_8F18(0x3C<16>, SLICE(dx_ax_260, word16, 16), 0<16>, SLICE(dx_ax_260, word16, 0), out ch_461) + CONVERT(Mem266[ptrArg06 + 3<i16>:byte], uint8, int32)
	cxOut = SLICE(bx_cx_331, word16, 0)
	v36_v35_333 = v32_v31_328 + bx_cx_331
	dxOut = SLICE(v36_v35_333, word16, 16)
	return SLICE(v36_v35_333, word16, 0)
fn0800_C04F_exit:


void fn0800_C177(selector ds, ui32 dwArg02, segptr32 ptrArg06, segptr32 ptrArg0A)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut:
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_C177_entry:
l0800_C177:
	fn0800_C379(ds)
	v12_v11_564 = dwArg02 - (Mem7[ds:0x26E2<16>:ui32] + 0x12CEA600<32>)
	Mem36[ptrArg0A + 2<i16>:byte] = 0<8>
	Mem66[ptrArg0A + 3<i16>:byte] = SLICE(fn0800_8BCA(v12_v11_564, 0x3C<32>), byte, 0)
	sp_56 = <invalid>
	Mem73[ss:sp_56 - 2<i16>:word16] = 0<16>
	Mem75[ss:sp_56 - 4<i16>:word16] = 0x3C<16>
	Mem78[ss:sp_56 - 6<i16>:word16] = SLICE(v12_v11_564, word16, 16)
	Mem81[ss:sp_56 - 8<i16>:word16] = SLICE(v12_v11_564, word16, 0)
	dx_ax_790 = fn0800_8BBB(Mem81[ss:sp_56 - 8<i16>:word32], Mem81[ss:sp_56 - 4<i16>:word32], out cx_791)
	sp_86 = <invalid>
	Mem100[ss:sp_86 - 2<i16>:word16] = 0<16>
	Mem102[ss:sp_86 - 4<i16>:word16] = 0x3C<16>
	dx_85 = SLICE(dx_ax_790, word16, 16) (alias)
	Mem105[ss:sp_86 - 6<i16>:word16] = dx_85
	ax_82 = SLICE(dx_ax_790, word16, 0) (alias)
	Mem108[ss:sp_86 - 8<i16>:word16] = ax_82
	Mem123[ptrArg0A:byte] = SLICE(fn0800_8BCA(Mem108[ss:sp_86 - 8<i16>:word32], Mem108[ss:sp_86 - 4<i16>:word32]), byte, 0)
	sp_113 = <invalid>
	Mem130[ss:sp_113 - 2<i16>:word16] = 0<16>
	Mem132[ss:sp_113 - 4<i16>:word16] = 0x3C<16>
	Mem135[ss:sp_113 - 6<i16>:word16] = dx_85
	Mem138[ss:sp_113 - 8<i16>:word16] = ax_82
	dx_ax_793 = fn0800_8BBB(Mem138[ss:sp_113 - 8<i16>:word32], Mem138[ss:sp_113 - 4<i16>:word32], out cx_794)
	sp_143 = <invalid>
	Mem157[ss:sp_143 - 2<i16>:word16] = 0<16>
	Mem159[ss:sp_143 - 4<i16>:word16] = 0x88F8<16>
	dx_142 = SLICE(dx_ax_793, word16, 16) (alias)
	Mem162[ss:sp_143 - 6<i16>:word16] = dx_142
	ax_139 = SLICE(dx_ax_793, word16, 0) (alias)
	Mem165[ss:sp_143 - 8<i16>:word16] = ax_139
	Mem182[ptrArg06:word16] = (SLICE(fn0800_8BBB(Mem165[ss:sp_143 - 8<i16>:word32], Mem165[ss:sp_143 - 4<i16>:word32], out cx_796), word16, 0) << 2<16>) + 0x7BC<16>
	sp_170 = <invalid>
	Mem189[ss:sp_170 - 2<i16>:word16] = 0<16>
	Mem191[ss:sp_170 - 4<i16>:word16] = 0x88F8<16>
	Mem194[ss:sp_170 - 6<i16>:word16] = dx_142
	Mem197[ss:sp_170 - 8<i16>:word16] = ax_139
	dx_ax_776 = fn0800_8BCA(Mem197[ss:sp_170 - 8<i16>:word32], Mem197[ss:sp_170 - 4<i16>:word32])
	sp_202 = <invalid>
	ax_198 = SLICE(dx_ax_776, word16, 0) (alias)
	dwArg02_778 = dx_ax_776 (alias)
	branch dx_ax_776 <u 0x2250<32> l0800_C26F
l0800_C234:
	Mem228[ptrArg06:word16] = Mem223[ptrArg06:word16] + 1<16>
	Mem236[ss:sp_202 - 2<i16>:word16] = 0<16>
	Mem238[ss:sp_202 - 4<i16>:word16] = 0x2238<16>
	v34_222 = SLICE(dx_ax_776 - 0x2250<32>, word16, 16) (alias)
	Mem241[ss:sp_202 - 6<i16>:word16] = v34_222
	Mem244[ss:sp_202 - 8<i16>:word16] = ax_198 - 0x2250<16>
	Mem259[ptrArg06:word16] = Mem244[ptrArg06:word16] + SLICE(fn0800_8BBB(Mem244[ss:sp_202 - 8<i16>:word32], Mem244[ss:sp_202 - 4<i16>:word32], out cx_798), word16, 0)
	sp_249 = <invalid>
	Mem266[ss:sp_249 - 2<i16>:word16] = 0<16>
	Mem268[ss:sp_249 - 4<i16>:word16] = 0x2238<16>
	Mem271[ss:sp_249 - 6<i16>:word16] = v34_222
	Mem274[ss:sp_249 - 8<i16>:word16] = ax_198 - 0x2250<16>
	dx_ax_799 = fn0800_8BCA(Mem274[ss:sp_249 - 8<i16>:word32], Mem274[ss:sp_249 - 4<i16>:word32])
	sp_279 = <invalid>
	dwArg02_779 = dx_ax_799 (alias)
l0800_C26F:
	wArg02_595 = SLICE(dwArg02_780, word16, 0) (alias)
	wArg04_594 = SLICE(dwArg02_780, word16, 16) (alias)
	branch Mem289[ds:0x26E6<16>:word16] == 0<16> l0800_C2B4
l0800_C276:
	sp_298 = sp_297 - 2<i16>
	Mem300[ss:sp_298:word16] = 0<16>
	Mem302[ss:sp_298 - 2<i16>:word16] = 0x18<16>
	Mem306[ss:sp_298 - 4<i16>:word16] = wArg04_594
	Mem309[ss:sp_298 - 6<i16>:word16] = wArg02_595
	sp_314 = <invalid>
	Mem321[ss:sp_314 - 2<i16>:word16] = SLICE(fn0800_8BCA(Mem309[ss:sp_298 - 6<i16>:word32], Mem309[ss:sp_298 - 2<i16>:word32]), word16, 0)
	Mem328[ss:sp_314 - 4<i16>:word16] = 0<16>
	Mem330[ss:sp_314 - 6<i16>:word16] = 0x18<16>
	Mem333[ss:sp_314 - 8<i16>:word16] = wArg04_594
	Mem336[ss:sp_314 - 10<i16>:word16] = wArg02_595
	sp_341 = <invalid>
	Mem348[ss:sp_341 - 2<i16>:word16] = SLICE(fn0800_8BBB(Mem336[ss:sp_314 - 10<i16>:word32], Mem336[ss:sp_314 - 6<i16>:word32], out cx_804), word16, 0)
	Mem351[ss:sp_341 - 4<i16>:word16] = 0<16>
	Mem359[ss:sp_341 - 6<i16>:word16] = Mem351[ptrArg06:word16] + 0xF84E<16>
	sp_369 = sp_341 + 2<16>
	branch fn0800_C553(ds, Mem359[ss:sp_341 - 6<i16>:word16], Mem359[ss:sp_341 - 4<i16>:word16], Mem359[ss:sp_341 - 2<i16>:word16], Mem359[ss:sp_341:byte]) == 0<16> l0800_C2B4
l0800_C2AC:
	wArg02_598 = wArg02_595 + 1<16>
	wArg04_599 = SLICE(dwArg02_780 + 1<32>, word16, 16)
l0800_C2B4:
	sp_388 = sp_387 - 2<i16>
	Mem390[ss:sp_388:word16] = 0<16>
	Mem392[ss:sp_388 - 2<i16>:word16] = 0x18<16>
	Mem396[ss:sp_388 - 4<i16>:word16] = wArg04_600
	Mem399[ss:sp_388 - 6<i16>:word16] = wArg02_601
	Mem414[ptrArg0A + 1<i16>:byte] = SLICE(fn0800_8BCA(Mem399[ss:sp_388 - 6<i16>:word32], Mem399[ss:sp_388 - 2<i16>:word32]), byte, 0)
	sp_404 = <invalid>
	Mem421[ss:sp_404 - 2<i16>:word16] = 0<16>
	Mem423[ss:sp_404 - 4<i16>:word16] = 0x18<16>
	Mem426[ss:sp_404 - 6<i16>:word16] = wArg04_600
	Mem429[ss:sp_404 - 8<i16>:word16] = wArg02_601
	dx_ax_777 = fn0800_8BBB(Mem429[ss:sp_404 - 8<i16>:word32], Mem429[ss:sp_404 - 4<i16>:word32], out cx_801)
	ax_430 = SLICE(dx_ax_777, word16, 0) (alias)
	v53_446 = SLICE(dx_ax_777 + 1<32>, word16, 16) (alias)
	dwArg02_784 = SEQ(v53_446, ax_430 + 1<16>) (alias)
	branch (Mem447[ptrArg06:word16] & 3<16>) != 0<16> l0800_C326
l0800_C2F3:
	branch v53_446 < 0<16> l0800_C30B
l0800_C2F9:
	branch v53_446 > 0<16> l0800_C301
l0800_C2FB:
	branch ax_430 <=u 0x3B<16> l0800_C30B
l0800_C30B:
	dwArg02_786 = SEQ(v53_446, ax_430 + 1<16>) (alias)
	branch v53_446 != 0<16> l0800_C326
l0800_C311:
	dwArg02_787 = SEQ(v53_446, ax_430 + 1<16>) (alias)
	branch ax_430 != 0x3B<16> l0800_C326
l0800_C317:
	Mem470[ptrArg06 + 3<i16>:byte] = 2<8>
	Mem471[ptrArg06 + 2<i16>:byte] = 0x1D<8>
l0800_C301:
	dwArg02_785 = dx_ax_777 (alias)
l0800_C326:
	Mem488[ptrArg06 + 3<i16>:byte] = 0<8>
	dwArg02_781 = dwArg02_788 (alias)
l0800_C34D:
	bArg02_626 = SLICE(dwArg02_783, byte, 0) (alias)
	branch CONVERT(Mem491[ds:CONVERT(Mem491[ptrArg06 + 3<i16>:byte], int8, int16) + 0x26B4<16>:byte], int8, int32) <u dwArg02_783 l0800_C330
l0800_C330:
	v61_v60_570 = dwArg02_783 - CONVERT(Mem491[ds:CONVERT(Mem491[ptrArg06 + 3<i16>:byte], int8, int16) + 0x26B4<16>:byte], int8, int32)
	Mem533[ptrArg06 + 3<i16>:byte] = Mem529[ptrArg06 + 3<i16>:byte] + 1<8>
	dwArg02_782 = v61_v60_570 (alias)
l0800_C369:
	Mem542[ptrArg06 + 3<i16>:byte] = Mem491[ptrArg06 + 3<i16>:byte] + 1<8>
	Mem545[ptrArg06 + 2<i16>:byte] = bArg02_626
l0800_C377:
	return
fn0800_C177_exit:


void fn0800_C379(selector ds)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_C04F
//      fn0800_C177
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp si sp
fn0800_C379_entry:
l0800_C379:
	dx_ax_524 = fn0800_AFCB(ds, SEQ(ds, 0x26E8<16>))
	dx_21 = SLICE(dx_ax_524, word16, 16) (alias)
	ax_20 = SLICE(dx_ax_524, word16, 0) (alias)
	branch dx_ax_524 != 0<16> l0800_C397
l0800_C397:
	branch fn0800_BFC7(dx_ax_524, out cx_525) >=u 4<16> l0800_C3AA
l0800_C3AA:
	branch (CONVERT(Mem46[ds:CONVERT(Mem46[dx_ax_524:byte], int8, int16) + 0x2251<16>:byte], int8, int16) & 0xC<16>) == 0<16> l0800_C42C
l0800_C3BD:
	branch (CONVERT(Mem46[ds:CONVERT(Mem46[dx_ax_524 + 1<i32>:byte], int8, int16) + 0x2251<16>:byte], int8, int16) & 0xC<16>) == 0<16> l0800_C42C
l0800_C3D1:
	branch (CONVERT(Mem46[ds:CONVERT(Mem46[dx_ax_524 + 2<i32>:byte], int8, int16) + 0x2251<16>:byte], int8, int16) & 0xC<16>) == 0<16> l0800_C42C
l0800_C3E5:
	branch Mem46[dx_ax_524 + 3<i32>:byte] == 0x2D<8> l0800_C404
l0800_C3EF:
	branch Mem46[dx_ax_524 + 3<i32>:byte] == 0x2B<8> l0800_C404
l0800_C3F6:
	branch (Mem46[ds:CONVERT(Mem46[dx_ax_524 + 3<i32>:byte], int8, int16) + 0x2251<16>:byte] & 2<8>) == 0<8> l0800_C42C
l0800_C404:
	branch (CONVERT(Mem46[ds:CONVERT(Mem46[dx_ax_524 + 3<i16>:byte], int8, int16) + 0x2251<16>:byte], int8, int16) & 2<16>) != 0<16> l0800_C467
l0800_C418:
	branch (CONVERT(Mem46[ds:CONVERT(Mem46[dx_ax_524 + 4<i32>:byte], int8, int16) + 0x2251<16>:byte], int8, int16) & 2<16>) != 0<16> l0800_C467
l0800_C467:
	fn0800_B083(Mem142[ds:0x26DE<16>:word32], 0<8>, 4<16>)
	fn0800_C01E(Mem171[ds:0x26DA<16>:word32], dx_ax_524, 3<16>)
	Mem192[Mem177[ds:0x26DA<16>:segptr32] + 3<i16>:byte] = 0<8>
	dx_ax_526 = fn0800_8F18(0xE10<16>, dx_204, 0<16>, fn0800_A471(ds, SEQ(dx_21, ax_20 + 3<16>), out dx_204), out ch_527)
	Mem236[ds:0x26E4<16>:word16] = SLICE(dx_ax_526, word16, 16)
	Mem237[ds:0x26E2<16>:word16] = SLICE(dx_ax_526, word16, 0)
	Mem238[ds:0x26E6<16>:word16] = 0<16>
	si_239 = 3<16>
l0800_C542:
	branch Mem238[dx_ax_524 + si_239:byte] == 0<8> l0800_C54E
l0800_C54B:
l0800_C4CA:
	branch (Mem238[ds:CONVERT(Mem238[dx_ax_524 + si_239:byte], int8, int16) + 0x2251<16>:byte] & 0xC<8>) == 0<8> l0800_C541
l0800_C541:
	si_239 = si_239 + 1<16>
l0800_C4DA:
	branch fn0800_BFC7(SEQ(dx_21, ax_20 + si_239), out cx_528) <u 3<16> l0800_C54E
l0800_C4ED:
	branch (CONVERT(Mem270[ds:CONVERT(Mem270[dx_21:ax_20 + 1<i16> + si_239:byte], int8, int16) + 0x2251<16>:byte], int8, int16) & 0xC<16>) == 0<16> l0800_C54E
l0800_C501:
	branch (CONVERT(Mem270[ds:CONVERT(Mem270[dx_21:ax_20 + 2<i16> + si_239:byte], int8, int16) + 0x2251<16>:byte], int8, int16) & 0xC<16>) == 0<16> l0800_C54E
l0800_C515:
	fn0800_C01E(Mem317[ds:0x26DE<16>:word32], SEQ(dx_21, ax_20 + si_239), 3<16>)
	Mem339[Mem323[ds:0x26DE<16>:segptr32] + 3<i16>:byte] = 0<8>
	Mem340[ds:0x26E6<16>:word16] = 1<16>
l0800_C3A7:
l0800_C394:
l0800_C42C:
	Mem342[ds:0x26E6<16>:word16] = 1<16>
	Mem343[ds:0x26E4<16>:word16] = 0<16>
	Mem344[ds:0x26E2<16>:word16] = 0x4650<16>
	fn0800_BF9E(Mem351[ds:0x26DA<16>:word32], SEQ(ds, 0x26EB<16>))
	fn0800_BF9E(Mem373[ds:0x26DE<16>:word32], SEQ(ds, 0x26EF<16>))
l0800_C54E:
	return
fn0800_C379_exit:


word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 10; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_C04F
//      fn0800_C177
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..7]
// LiveOut: ax:[0..15]-fn0800_C04F
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp si sp
fn0800_C553_entry:
l0800_C553:
	branch wArg04 != 0<16> l0800_C589
l0800_C589:
	branch wArg04 <u 3<16> l0800_C59A
l0800_C58F:
	branch (wArg02 + 0x46<16> & 3<16>) == 0<16> l0800_C59D
l0800_C59A:
	wArg06 = wArg06 - 1<16>
l0800_C59D:
	wArg06 = wArg06 + Mem30[ds:(wArg04 - 1<16> << 1<16>) + 0x26C0<16>:word16]
l0800_C55D:
	si_171 = wArg06
	branch wArg06 <u 0x3B<16> l0800_C572
l0800_C566:
	branch (wArg02 + 0x46<16> & 3<16>) != 0<16> l0800_C572
l0800_C571:
	si_171 = wArg06 - 1<16>
l0800_C572:
	wArg04 = 0<16>
l0800_C57C:
	branch Mem57[ds:(wArg04 << 1<16>) + 0x26C0<16>:word16] <=u si_171 l0800_C579
l0800_C579:
	wArg04 = wArg04 + 1<16>
l0800_C587:
l0800_C5AA:
	branch wArg04 <u 4<16> l0800_C62B
l0800_C5B0:
	branch wArg04 == 4<16> l0800_C5BA
l0800_C5B2:
	branch wArg04 >u 0xA<16> l0800_C62B
l0800_C5B8:
	branch wArg04 != 0xA<16> l0800_C626
l0800_C5BA:
	branch wArg02 <= 0x10<16> l0800_C5D4
l0800_C5C5:
	branch wArg04 != 4<16> l0800_C5D4
l0800_C5D4:
	cx_106 = Mem69[ds:(wArg04 << 1<16>) + 0x26C0<16>:word16]
l0800_C5CB:
	cx_106 = Mem69[ds:(wArg04 << 1<16>) + 0x26BE<16>:word16] + 7<16>
l0800_C5D8:
	branch (SLICE(wArg02, byte, 0) + 0xB2<8> & 3<8>) == 0<8> l0800_C5E5
l0800_C5E4:
	cx_106 = cx_106 - 1<16>
l0800_C5E5:
	cx_129 = cx_106 - CONVERT((wArg02 *u 0x16D<16> + ((wArg02 + 1<16> >> 2<16>) + cx_106)) + 4<16>, uint16, uint32) %u 7<16>
	branch wArg04 != 4<16> l0800_C61A
l0800_C61A:
	branch wArg06 <u cx_129 l0800_C626
l0800_C61E:
	branch wArg06 != cx_129 l0800_C62B
l0800_C620:
	branch bArg08 >u 1<8> l0800_C62B
l0800_C60C:
	branch wArg06 >u cx_129 l0800_C626
l0800_C610:
	branch wArg06 != cx_129 l0800_C62B
l0800_C612:
	branch bArg08 <u 2<8> l0800_C62B
l0800_C62B:
	ax_143 = 0<16>
l0800_C618:
l0800_C626:
	ax_143 = 1<16>
l0800_C62D:
	return ax_143
fn0800_C553_exit:


word16 fn0800_C632(selector ds, word16 wArg02, word32 dwArg04, word16 wArg08, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_A6B7
//      fn0800_B4BE
// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax:[0..15]-fn0800_A6B7 bx:[0..15]-fn0800_A6B7 dx:[0..15]-fn0800_A6B7
// Trashed: SCZOP ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_C632_entry:
l0800_C632:
	branch wArg02 <u Mem15[ds:0x24E8<16>:word16] l0800_C64E
l0800_C64E:
	branch wArg08 >=u 1<16> l0800_C65C
l0800_C65C:
	branch (Mem15[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 0x800<16>) == 0<16> l0800_C677
l0800_C668:
	fn0800_8E29(ds, wArg02, 0<32>, 2<8>, out cx_481, out dx_482)
l0800_C677:
	branch (Mem57[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 0x4000<16>) != 0<16> l0800_C696
l0800_C696:
	Mem65[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] = Mem57[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 0xFDFF<16>
	bx = wArg02 << 1<16>
	wLoc08_310 = wArg08
	ptrLoc0E_323 = dwArg04 (alias)
l0800_C727:
	ptrLoc06_476 = SEQ(ss, fp - 0x90<16>) (alias)
l0800_C731:
	wLoc04_327 = SLICE(ptrLoc06_476, word16, 16) (alias)
	wLoc0E_324 = SLICE(ptrLoc0E_323, word16, 0) (alias)
	wLoc0C_382 = SLICE(ptrLoc0E_323, word16, 16) (alias)
	wLoc06_314 = SLICE(ptrLoc06_476, word16, 0) (alias)
	ptrLoc06_328 = ptrLoc06_476 (alias)
	branch wLoc08_310 == 0<16> l0800_C73A
l0800_C73A:
	dx_si_289 = CONVERT(wLoc06_314 - (fp - 0x90<16>), word16, uint32)
	si_183 = SLICE(dx_si_289, word16, 0) (alias)
	dx = SLICE(dx_si_289, word16, 16) (alias)
	branch si_183 <=u 0<16> l0800_C770
l0800_C74E:
	ax_113 = fn0800_C779(ds, wArg02, SEQ(ss, fp - 0x90<16>), si_183, out cx_484, out dx_485, out bx)
	dx = ax_113
	branch ax_113 == si_183 l0800_C770
l0800_C770:
	ax_129 = wArg08
l0800_C762:
	branch ax_113 == 0xFFFF<16> l0800_C71A
l0800_C767:
	ax_132 = wArg08
l0800_C737:
l0800_C6B4:
	v24_133 = wLoc08_310 - 1<16>
	wLoc08_310 = v24_133
	al_140 = Mem137[ptrLoc0E_323:byte]
	ptrLoc0E_323 = SEQ(wLoc0C_382, wLoc0E_324 + 1<16>) (alias)
	branch al_140 != 0xA<8> l0800_C6D1
l0800_C6C7:
	Mem147[ptrLoc06_476:byte] = 0xD<8>
	ptrLoc06_328 = SEQ(wLoc04_327, wLoc06_314 + 1<16>) (alias)
l0800_C6D1:
	Mem158[ptrLoc06_328:byte] = al_140
	wLoc06_335 = SLICE(ptrLoc06_328, word16, 0) (alias)
	bx_dx_290 = CONVERT(wLoc06_335 + 1<16> - (fp - 0x90<16>), word16, uint32)
	bx = SLICE(bx_dx_290, word16, 16)
	ptrLoc06_476 = SEQ(SLICE(ptrLoc06_328, word16, 16), wLoc06_335 + 1<16>) (alias)
	branch bx_dx_290 <u 0x80<32> l0800_C731
l0800_C6F7:
	si_183 = wLoc06_335 + 1<16> - (fp - 0x90<16>) (alias)
	ax_202 = fn0800_C779(ds, wArg02, SEQ(ss, fp - 0x90<16>), si_183, out cx_486, out dx_487, out bx)
	dx = ax_202
	branch ax_202 == si_183 l0800_C727
l0800_C715:
	branch ax_202 != 0xFFFF<16> l0800_C71F
l0800_C71F:
	ax_132 = wArg08 - v24_133
l0800_C76A:
	ax_129 = ax_132 + dx - si_183
l0800_C71A:
	ax_129 = 0xFFFF<16>
l0800_C76E:
l0800_C683:
	ax_129 = fn0800_C779(ds, wArg02, dwArg04, wArg08, out cx_483, out dx, out bx)
l0800_C657:
	ax_129 = 0<16>
l0800_C644:
	ax_129 = fn0800_8D2B(ds, 6<16>)
l0800_C773:
	dxOut = dx
	bxOut = bx
	return ax_129
fn0800_C632_exit:


word16 fn0800_C779(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0800_B324
//      fn0800_B4BE
//      fn0800_C632
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax:[0..15]-fn0800_C632 bx:[0..15]-fn0800_C632 cx:[0..15]-fn0800_B324 dx:[0..15]-fn0800_C632
// Trashed: SCZOP ax bx cx dx Top
// Preserved: bp ds sp
fn0800_C779_entry:
l0800_C779:
	bx_10 = wArg02 << 1<16>
	branch (Mem7[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] & 1<16>) == 0<16> l0800_C78F
l0800_C78F:
	bx_10 = wArg02
	cx = wArg08
	dx = SLICE(ptrArg04, word16, 0) (alias)
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_24) l0800_C7AF
l0800_C7AF:
	wLoc04_64 = ax_24
l0800_C7A0:
	Mem35[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] = Mem31[ds:(wArg02 << 1<16>) + 0x24EA<16>:word16] | 0x1000<16>
	bx_10 = wArg02 << 1<16>
	ax_39 = ax_24
l0800_C789:
	wLoc04_64 = 5<16>
l0800_C7B0:
	ax_39 = fn0800_8D2B(ds, wLoc04_64)
l0800_C7B3:
	cxOut = cx
	dxOut = dx
	bxOut = bx_10
	return ax_39
fn0800_C779_exit:


