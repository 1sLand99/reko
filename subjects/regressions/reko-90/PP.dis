void fn0800_0150(byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: di si sp
fn0800_0150_entry:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0150:
	fn0800_01E6(al, 0x2714, 0x2714, Mem0[0x0800:0x025A:selector])
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0150_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> si:si di:di ah:<invalid> dx:<invalid> bx:<invalid> -4(fp):di -2(fp):si



void fn0800_0163()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_0163_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0163:
	return
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0163_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_0164(byte al, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0002(8)
// Terminates process
fn0800_0164_entry:
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(8)

l0800_0164:
	msdos_terminate(bArg02)
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn0800_0164_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



byte fn0800_01B9(selector ds, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al dl
// Trashed: ah al ax dh dl ds dx eax edx rax rdx
// Preserved: ds sp
fn0800_01B9_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01B9:
	msdos_set_interrupt_vector(0x00, Mem0[ds:0x005B:segptr32])
	msdos_set_interrupt_vector(0x04, Mem0[ds:0x005F:segptr32])
	msdos_set_interrupt_vector(0x05, Mem0[ds:0x0063:segptr32])
	ptr32 ds_dx_30 = Mem0[ds:0x0067:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_30)
	*dlOut = (byte) ds_dx_30
	return 0x06
// DataOut: al di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01B9_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2506 Sequence ds:dx:<invalid> ds:ds -2(fp):ds



void fn0800_01E6(byte al, word16 si, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es si
// LiveOut:
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: es sp
fn0800_01E6_entry:
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01E6:
	byte ah_116
	branch si == 0x26FC l0800_01F0
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01F0:
	ah_116 = 0xFF
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01EC:
	ah_116 = 0x00
	SZO = cond(0x00)
	C = false
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01F2:
	word16 dx_34 = di
	word16 bx_35 = si
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01F6:
	branch bx_35 == di l0800_021D
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_021D:
	branch dx_34 == di l0800_023C
// DataOut: al di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_023C:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es

fn0800_01E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es

l0800_0221:
	byte SCZO_77 = cond(Mem0[es:dx_34:byte])
	Mem79[es:dx_34:byte] = 0xFF
	branch Mem0[es:dx_34:byte] == 0x00 l0800_0235
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16) Local -0002(16)

l0800_0235:
	call SEQ(cs, Mem79[es:dx_34 + 0x0002:word16]) (retsize: 2; depth: 4)
		uses: ah_39,al_15,C_37,cs_16,CZ_38,di_18,dx_40,dx_40,es_20,es_20,fp - 0x0002,SCZO_77,SCZO_77,si_19,ss_17,SZO_36
		defs: ah_103,al_113,bx_108,C_105,cs_112,CZ_111,di_107,dx_106,es_109,SCZO_101,si_100,sp_99,ss_110,SZO_104,Z_102
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_022E:
	call Mem79[es:dx_34 + 0x0002:ptr32] (retsize: 4; depth: 6)
		uses: ah_39,al_15,C_37,cs_16,CZ_38,di_18,dx_40,dx_40,es_20,es_20,fp - 0x0002,SCZO_77,SCZO_77,si_19,ss_17,SZO_36
		defs: ah_86,al_96,bx_91,C_88,cs_95,CZ_94,di_90,dx_89,es_92,SCZO_84,si_83,sp_82,ss_93,SZO_87,Z_85
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01FA:
	branch Mem0[es:bx_35:byte] == 0xFF l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0200:
	branch si == 0x26FC l0800_020C
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_020C:
	byte SCZO_69 = cond(Mem0[es:bx_35 + 0x0001:byte] - ah_116)
	SZO = SCZO_69 (alias)
	C = SCZO_69 (alias)
	CZ = SCZO_69 (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0206:
	byte SCZO_64 = cond(ah_116 - Mem0[es:bx_35 + 0x0001:byte])
	SZO = SCZO_64 (alias)
	C = SCZO_64 (alias)
	CZ = SCZO_64 (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0210:
	branch CZ l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0212:
	ah_116 = Mem0[es:bx_35 + 0x0001:byte]
	dx_34 = bx_35
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0218:
	bx_35 = bx_35 + 0x0006
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)



void main(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
main_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_025E:
	Mem12[ds:0x2A27:word16] = 0x0001
	Mem14[ds:0x2E4D:word16] = 0x0000
	Mem15[ds:0x2A1F:word16] = 0x0000
	Mem16[ds:0x2E4F:word16] = 0x0000
	Mem17[ds:0x2A1D:word16] = 0x0000
	Mem18[ds:0x2A17:word16] = 0x0000
	Mem19[ds:0x2A1B:word16] = 0x0000
	Mem20[ds:0x2A11:word16] = 0x0000
	Mem21[ds:0x2A0F:word16] = 0x0000
	Mem22[ds:0x2A0D:word16] = 0x0000
	Mem23[ds:0x2A0B:word16] = 0x3000
	Mem24[ds:0x2E31:word16] = 0x8000
	Mem25[ds:0x2E2F:word16] = 0x1000
	Mem26[ds:0x2A21:word16] = 0x0001
	Mem27[ds:0x29F5:word16] = 0x0000
	Mem28[ds:0x29F3:word16] = 0x0000
	Mem29[ds:0x29F1:word16] = 0x0000
	Mem30[ds:0x29EF:word16] = 0x0000
	Mem31[ds:0x2A13:word16] = 0x0000
	Mem32[ds:0x2A23:word16] = 0x0001
	fn0800_2C9A(ds)
	word16 di_43
	word16 si_277 = fn0800_B2EF(ds, 0x07E8, ds, out di_43)
	selector ds_47
	word16 bp_263 = fn0800_0402(fp - 0x0002, si_277, ds, out ds_47)
	selector ds_49
	byte dl_50 = fn0800_0541(bp_263, ds_47, out ds_49)
	Mem55[ss:fp - 0x000A:word16] = 0x0001
	Mem58[ss:fp - 0x000C:word16] = 0x0001
	fn0800_2DBF(ds_49, wArg00, wArg02)
	Mem66[ss:fp - 0x000A:word16] = 0x0000
	Mem68[ss:fp - 0x000C:word16] = 0x0000
	word16 dx_266 = DPB(dx, dl_50, 0)
	word16 di_71
	byte dl_265
	selector ds_264
	word16 ax_73 = fn0800_9764(dl_50, ds_49, ptrArg00, wArg02, out dl_265, out di_71, out ds_264)
	Mem76[ss:bp_263 - 0x0002:word16] = dx_266
	Mem77[ss:bp_263 - 0x0004:word16] = ax_73
	word16 bx_78 = Mem77[ds_264:0x2A25:word16]
	branch bx_78 >u 0x0008 l0800_0338
// DataOut: bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_031A:
	switch (bx_78 << 0x0001) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0335:
	dl_265 = fn0800_19EE(bp_263, ds_264, out ds_264)
	dx_266 = DPB(dx, dl_265, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_032B:
	dl_265 = fn0800_18D9(bp_263, ds_264, out si_277, out ds_264)
	dx_266 = DPB(dx, dl_265, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0326:
	dl_265 = fn0800_12E2(bp_263, ds_264, out ds_264)
	dx_266 = DPB(dx, dl_265, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0330:
	dl_265 = fn0800_112D(bp_263, si_277, ds_264, out bp_263, out ds_264)
	dx_266 = DPB(dx, dl_265, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0321:
	dl_265 = fn0800_0DE8(bp_263, si_277, ds_264, out bp_263, out ds_264)
	dx_266 = DPB(dx, dl_265, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0338:
	Mem90[ss:fp - 0x000A:word16] = 0x0000
	Mem92[ss:fp - 0x000C:word16] = 0x0000
	byte dl_93
	word16 di_94
	selector ds_95
	word16 ax_98 = fn0800_9764(dl_265, ds_264, ptrArg00, wArg02, out dl_93, out di_94, out ds_95) - Mem92[ss:bp_263 - 0x0004:word16]
	Mem103[ss:bp_263 - 0x0002:word16] = dx_266 - Mem92[ss:bp_263 - 0x0002:word16] - (ax_98 <u 0x0000)
	Mem104[ss:bp_263 - 0x0004:word16] = ax_98
	Mem106[ss:fp - 0x000A:word16] = Mem104[ds_95:0x29F1:word16]
	Mem108[ss:fp - 0x000C:word16] = Mem106[ds_95:0x29EF:word16]
	Mem110[ss:fp - 0x000E:word16] = Mem108[ds_95:0x29F5:word16]
	Mem112[ss:fp - 0x0010:word16] = Mem110[ds_95:0x29F3:word16]
	word16 di_115
	word16 ax_116 = fn0800_0B79(bp_263, si_277, di_94, wArg00, wArg02, wArg04, wArg06, out di_115)
	Mem124[ss:fp - 0x000A:word16] = 0x0000
	Mem126[ss:fp - 0x000C:word16] = 0x003C
	Mem128[ss:fp - 0x000E:word16] = Mem126[ss:bp_263 - 0x0002:word16]
	Mem130[ss:fp - 0x0010:word16] = Mem128[ss:bp_263 - 0x0004:word16]
	word16 dx_131
	word16 bp_132
	word16 si_133
	word16 di_134
	word16 ax_135 = fn0800_8BCA(bp_263, ax_116, di_115, bp, out dx_131, out bp_132, out si_133, out di_134)
	Mem137[ss:fp - 0x0012:word16] = dx_131
	Mem139[ss:fp - 0x0014:word16] = ax_135
	Mem145[ss:fp - 0x0016:word16] = 0x0000
	Mem147[ss:fp - 0x0018:word16] = 0x003C
	Mem150[ss:fp - 0x001A:word16] = 0x0000
	Mem152[ss:fp - 0x001C:word16] = 0x0E10
	Mem154[ss:fp - 0x001E:word16] = Mem152[ss:bp_132 - 0x0002:word16]
	Mem156[ss:fp - 0x0020:word16] = Mem154[ss:bp_132 - 0x0004:word16]
	word16 dx_157
	word16 bp_158
	word16 si_159
	word16 di_160
	word16 ax_161 = fn0800_8BCA(bp_132, si_133, di_134, bp, out dx_157, out bp_158, out si_159, out di_160)
	Mem163[ss:fp - 0x0022:word16] = dx_157
	Mem165[ss:fp - 0x0024:word16] = ax_161
	word16 dx_166
	word16 bp_167
	word16 si_168
	word16 di_169
	word16 ax_170 = fn0800_8BBB(bp_158, si_159, di_160, bp, out dx_166, out bp_167, out si_168, out di_169)
	Mem172[ss:fp - 0x0026:word16] = dx_166
	Mem174[ss:fp - 0x0028:word16] = ax_170
	Mem180[ss:fp - 0x002A:word16] = 0x0000
	Mem182[ss:fp - 0x002C:word16] = 0x0E10
	Mem185[ss:fp - 0x002E:word16] = 0x0000
	Mem187[ss:fp - 0x0030:word16] = 0x5180
	Mem189[ss:fp - 0x0032:word16] = Mem187[ss:bp_167 - 0x0002:word16]
	Mem191[ss:fp - 0x0034:word16] = Mem189[ss:bp_167 - 0x0004:word16]
	word16 dx_192
	word16 bp_193
	word16 si_194
	word16 di_195
	word16 ax_196 = fn0800_8BCA(bp_167, si_168, di_169, bp, out dx_192, out bp_193, out si_194, out di_195)
	Mem198[ss:fp - 0x0036:word16] = dx_192
	Mem200[ss:fp - 0x0038:word16] = ax_196
	word16 dx_201
	word16 bp_202
	word16 si_203
	word16 di_204
	word16 ax_205 = fn0800_8BBB(bp_193, si_194, di_195, bp, out dx_201, out bp_202, out si_203, out di_204)
	Mem207[ss:fp - 0x003A:word16] = dx_201
	Mem209[ss:fp - 0x003C:word16] = ax_205
	Mem218[ss:fp - 0x003E:word16] = (uint32) (uint16) si_203 % 0x0064
	Mem227[ss:fp - 0x0040:word16] = (uint32) (uint16) si_203 /u 0x0064
	Mem229[ss:fp - 0x0042:word16] = Mem227[ds_95:0x29F1:word16]
	Mem231[ss:fp - 0x0044:word16] = Mem229[ds_95:0x29EF:word16]
	Mem233[ss:fp - 0x0046:word16] = Mem231[ds_95:0x29F5:word16]
	Mem235[ss:fp - 0x0048:word16] = Mem233[ds_95:0x29F3:word16]
	Mem237[ss:fp - 0x004A:word16] = ds_95
	Mem240[ss:fp - 0x004C:word16] = 0x05DC
	Mem243[ss:fp - 0x004E:word16] = 0x0008
	Mem245[ss:fp - 0x0050:word16] = Mem243[ds_95:0x2A13:word16]
	Mem247[ss:fp - 0x0052:word16] = ds_95
	Mem250[ss:fp - 0x0054:word16] = 0x07EB
	word16 di_251
	fn0800_B2EF(ds_95, wArg00, wArg02, out di_251)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ds:<invalid> dx:<invalid> al:<invalid> dh:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ds:<invalid> al:<invalid> dh:<invalid> di:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -84(fp):0x07EB -82(fp):ds -80(fp):<invalid> -78(fp):0x0008 -76(fp):0x05DC -74(fp):ds -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):dx_ax /u 0x0064 -62(fp):dx_ax % 0x0064 -60(fp):0x0000 -58(fp):0x5180 -56(fp):0x0000 -54(fp):0x5180 -52(fp):0x0000 -50(fp):<invalid> -48(fp):0x5180 -46(fp):0x0000 -44(fp):0x0E10 -42(fp):0x0000 -40(fp):0x0000 -38(fp):0x0E10 -36(fp):0x0000 -34(fp):0x0E10 -32(fp):0x0000 -30(fp):<invalid> -28(fp):0x0E10 -26(fp):0x0000 -24(fp):0x003C -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x003C -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_0402(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si sp
fn0800_0402_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0402:
	branch Mem0[ds:0x2A27:word16] != Mem0[ds:0x269A:word16] l0800_0410
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_040D:
	word16 si_367
	bp = fn0800_0DCE(ds, out si_367, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0410:
	ptr32 es_bx_21 = Mem0[ds:0x269C:segptr32]
	selector es_23 = SLICE(es_bx_21, selector, 16)
	word16 bx_24 = (word16) es_bx_21 + (Mem0[ds:0x2A27:word16] << 0x0002)
	Mem27[ss:fp - 0x0006:word16] = Mem0[es_23:bx_24 + 0x0002:word16]
	Mem30[ss:fp - 0x0008:word16] = Mem27[es_23:bx_24:word16]
	word16 sp_34 = fp - 0x0004
	branch fn0800_BFC7(ptrArg00, wArg02) <=u 0x0001 l0800_044D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_042F:
	ptr32 es_bx_349 = Mem30[ds:0x269C:segptr32]
	selector es_351 = SLICE(es_bx_349, selector, 16)
	word16 bx_352 = (word16) es_bx_349 + (Mem30[ds:0x2A27:word16] << 0x0002)
	Mem355[ss:fp - 0x0006:word16] = Mem30[es_351:bx_352 + 0x0002:word16]
	Mem357[ss:fp - 0x0008:word16] = Mem355[es_351:bx_352:word16]
	Mem360[ss:fp - 0x000A:word16] = 0x0001
	word16 si_361
	word16 di_362
	fn0800_0D24(bp, ds, out si_361, out di_362, out ds)
	sp_34 = fp - 0x0004
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:0x0000 ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_044D:
	word16 ax_41 = Mem30[ds:0x2A27:word16]
	word16 sp_53 = sp_34 - 0x0002
	Mem54[ss:sp_53:word16] = DPB(ax_41 << 0x0002, Mem0[Mem0[Mem30[ds:(word16) Mem30[ds:0x269C:segptr32] + (ax_41 << 0x0002):segptr32]:byte]:byte], 0)
	Mem56[ss:sp_53 - 0x0002:word16] = ds
	Mem59[ss:sp_53 - 0x0004:word16] = 0x0829
	byte dl_62
	word16 ax_63 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl_62)
	Mem65[ds:0x2A25:word16] = ax_63
	word16 sp_344 = sp_53 + 0x0002
	branch ax_63 < 0x0009 l0800_0492
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> si:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0474:
	ptr32 es_bx_328 = Mem65[ds:0x269C:segptr32]
	selector es_330 = SLICE(es_bx_328, selector, 16)
	word16 bx_331 = (word16) es_bx_328 + (Mem65[ds:0x2A27:word16] << 0x0002)
	Mem334[ss:sp_53:word16] = Mem65[es_330:bx_331 + 0x0002:word16]
	Mem336[ss:sp_53 - 0x0002:word16] = Mem334[es_330:bx_331:word16]
	Mem339[ss:sp_53 - 0x0004:word16] = 0x0001
	word16 si_340
	word16 di_341
	fn0800_0D24(bp, ds, out si_340, out di_341, out ds)
	sp_344 = sp_53 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0492:
	Mem78[ds:0x2A27:word16] = Mem65[ds:0x2A27:word16] + 0x0001
	branch Mem78[ds:0x2A25:word16] > 0x0002 l0800_04A0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04A0:
	branch Mem78[ds:0x2A27:word16] != Mem78[ds:0x269A:word16] l0800_04AC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04A9:
	word16 si_322
	bp = fn0800_0DCE(ds, out si_322, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04AC:
	word16 ax_112 = Mem78[ds:0x2A27:word16]
	Mem114[ds:0x2A27:word16] = Mem78[ds:0x2A27:word16] + 0x0001
	ptr32 es_bx_117 = Mem114[ds:0x269C:segptr32]
	selector es_119 = SLICE(es_bx_117, selector, 16)
	word16 bx_120 = (word16) es_bx_117 + (ax_112 << 0x0002)
	word16 sp_122 = sp_344 - 0x0002
	Mem123[ss:sp_122:word16] = Mem114[es_119:bx_120 + 0x0002:word16]
	Mem125[ss:sp_122 - 0x0002:word16] = Mem123[es_119:bx_120:word16]
	Mem127[ss:sp_122 - 0x0004:word16] = ds
	Mem130[ss:sp_122 - 0x0006:word16] = 0x4348
	fn0800_BF9E(ptrArg00, wArg02, ptrArg04)
	Mem135[ss:sp_122:word16] = ds
	Mem138[ss:sp_122 - 0x0002:word16] = 0x4348
	fn0800_0C6C(ds, ptrArg00)
	Mem142[ss:sp_122:word16] = ds
	selector es_143 = Mem142[ss:sp_122:selector]
	word16 di_146 = 0x4348
	word16 cx_151 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> ds:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E4:
	branch cx_151 == 0x0000 l0800_04E6
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E4_1:
	di_146 = di_146 + 0x0001
	cx_151 = cx_151 - 0x0001
	branch 0x00 != Mem142[es_143:di_146:byte] l0800_04E4
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E6:
	word16 di_160 = di_146 - 0x0001
	word16 cx_158 = ~cx_151
	byte Z_165 = cond(di_160)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04ED:
	branch cx_158 == 0x0000 l0800_04EF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04ED_2:
	Z_165 = cond(0x2E - Mem142[es_143:di_160:byte]) (alias)
	di_160 = di_160 - 0x0001
	cx_158 = cx_158 - 0x0001
	branch 0x2E != Mem142[es_143:di_160:byte] l0800_04ED
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04EF:
	branch Z_165 l0800_04F8
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04F1:
	di_160 = 0xFFFF
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04F8:
	Mem189[ss:sp_122:word16] = ds
	selector es_190 = Mem189[ss:sp_122:selector]
	Mem194[ss:sp_122:word16] = di_160 + 0x0001
	word16 di_195 = 0x4348
	word16 cx_200 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0507:
	branch cx_200 == 0x0000 l0800_0509
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0507_1:
	di_195 = di_195 + 0x0001
	cx_200 = cx_200 - 0x0001
	branch 0x00 != Mem194[es_190:di_195:byte] l0800_0507
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0509:
	word16 cx_207 = ~cx_200
	word16 di_209 = di_195 - cx_207
	byte Z_211 = cond(di_209)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0510:
	branch cx_207 == 0x0000 l0800_0512
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0510_2:
	Z_211 = cond(0x5C - Mem194[es_190:di_209:byte]) (alias)
	di_209 = di_209 + 0x0001
	cx_207 = cx_207 - 0x0001
	branch 0x5C != Mem194[es_190:di_209:byte] l0800_0510
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0512:
	branch Z_211 l0800_051B
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0514:
	di_209 = 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_051B:
	branch Mem194[ss:sp_122:word16] >u di_209 - 0x0001 l0800_0538
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0523:
	Mem255[ss:sp_122:word16] = ds
	selector es_256 = Mem255[ss:sp_122:selector]
	word16 di_259 = 0x4348
	word16 si_260 = 0x0833
	word16 cx_261 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0530:
	branch cx_261 == 0x0000 l0800_0532
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0530_1:
	di_259 = di_259 + 0x0001
	cx_261 = cx_261 - 0x0001
	branch 0x00 != Mem255[es_256:di_259:byte] l0800_0530
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0532:
	word16 di_273 = di_259 - 0x0001
	word16 cx_275 = 0x0005
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0536:
	branch cx_275 == 0x0000 l0800_0538
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0538:
	Mem253[ds:0x2A19:word16] = 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0536_2:
	Mem280[es_256:di_273:byte] = Mem255[ds:si_260:byte]
	si_260 = si_260 + 0x0001
	di_273 = di_273 + 0x0001
	cx_275 = cx_275 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_049D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_053E:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_0402_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> si:<invalid> cl:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



byte fn0800_0541(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_0541_entry:
	*dsOut = ds
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0541:
	word16 bp_160 = fp - 0x0002
	word16 sp_11 = fp - 0x000A
	word16 ax_16 = Mem0[ds:0x2A27:word16]
	branch ax_16 != Mem0[ds:0x269A:word16] l0800_0555
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_0555:
	branch Mem0[Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_16 << 0x0002):segptr32]:byte]:byte] != 0x2D l0800_056B
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_056B:
	branch Mem0[Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte]:byte] != 0x2F l0800_0584
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_0584:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0581:
	di_144 = di
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0568:
	di_144 = di
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_086D:
	word16 di_144
	ptr32 es_bx_103 = Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]
	byte Z_107 = cond(Mem0[Mem0[es_bx_103:byte]:byte] - 0x2D)
	branch Mem0[Mem0[es_bx_103:byte]:byte] != 0x2D l0800_0886
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0886:
	ptr32 es_bx_303 = Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]
	Z_107 = cond(Mem0[Mem0[es_bx_303:byte]:byte] - 0x2F) (alias)
	branch Mem0[Mem0[es_bx_303:byte]:byte] != 0x2F l0800_089F
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_089F:
	word16 ax_308 = Mem0[ds:0x2A21:word16]
	branch ax_308 == 0x0001 l0800_08AE
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AE:
	word16 sp_517 = sp_11 - 0x0002
	Mem518[ss:sp_517:word16] = ds
	selector es_519 = Mem518[ss:sp_517:selector]
	sp_11 = sp_517 + 0x0002
	word16 di_522 = 0x4271
	word16 si_523 = 0x085B
	word16 cx_524 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB:
	branch cx_524 == 0x0000 l0800_08BD
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB_1:
	di_522 = di_522 + 0x0001
	cx_524 = cx_524 - 0x0001
	branch 0x00 != Mem518[es_519:di_522:byte] l0800_08BB
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BD:
	word16 di_536 = di_522 - 0x0001
	word16 cx_538 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1:
	branch cx_538 == 0x0000 l0800_08C3
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C3:
	branch Mem518[ds:0x2E31:word16] <=u 0x8000 l0800_08D1
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08CB:
	Mem550[ds:0x2E31:word16] = 0x8000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D1:
	Mem549[ds:0x2E2F:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1_2:
	Mem543[es_519:di_536:byte] = Mem518[ds:si_523:byte]
	si_523 = si_523 + 0x0001
	di_536 = di_536 + 0x0001
	cx_538 = cx_538 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08A7:
	branch ax_308 == 0x0002 l0800_08D9
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D9:
	word16 sp_479 = sp_11 - 0x0002
	Mem480[ss:sp_479:word16] = ds
	selector es_481 = Mem480[ss:sp_479:selector]
	sp_11 = sp_479 + 0x0002
	word16 di_484 = 0x4271
	word16 si_485 = 0x085D
	word16 cx_486 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6:
	branch cx_486 == 0x0000 l0800_08E8
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6_1:
	di_484 = di_484 + 0x0001
	cx_486 = cx_486 - 0x0001
	branch 0x00 != Mem480[es_481:di_484:byte] l0800_08E6
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E8:
	word16 di_498 = di_484 - 0x0001
	word16 cx_500 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC:
	branch cx_500 == 0x0000 l0800_08EE
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EE:
	branch Mem480[ds:0x2E31:word16] <=u 0x1000 l0800_08FC
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08F6:
	Mem512[ds:0x2E31:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08FC:
	Mem511[ds:0x2E2F:word16] = 0x00FF
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC_2:
	Mem505[es_481:di_498:byte] = Mem480[ds:si_485:byte]
	si_485 = si_485 + 0x0001
	di_498 = di_498 + 0x0001
	cx_500 = cx_500 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AC:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0902:
	branch Mem0[ds:0x2A23:word16] != 0x0002 l0800_0911
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0909:
	Mem475[ds:0x2A1D:word16] = 0x0000
	Mem476[ds:0x2E4F:word16] = 0x0000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0911:
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_092D
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0918:
	word16 sp_438 = sp_11 - 0x0002
	Mem439[ss:sp_438:word16] = ds
	selector es_440 = Mem439[ss:sp_438:selector]
	sp_11 = sp_438 + 0x0002
	word16 di_443 = 0x4271
	word16 si_444 = 0x0653
	word16 cx_445 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925:
	branch cx_445 == 0x0000 l0800_0927
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925_1:
	di_443 = di_443 + 0x0001
	cx_445 = cx_445 - 0x0001
	branch 0x00 != Mem439[es_440:di_443:byte] l0800_0925
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0927:
	word16 di_457 = di_443 - 0x0001
	word16 cx_459 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B:
	branch cx_459 == 0x0000 l0800_092D
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092D:
	branch Mem0[ds:0x2A1D:word16] == 0x0000 l0800_0949
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0934:
	word16 sp_404 = sp_11 - 0x0002
	Mem405[ss:sp_404:word16] = ds
	selector es_406 = Mem405[ss:sp_404:selector]
	sp_11 = sp_404 + 0x0002
	word16 di_409 = 0x4271
	word16 si_410 = 0x085F
	word16 cx_411 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941:
	branch cx_411 == 0x0000 l0800_0943
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941_1:
	di_409 = di_409 + 0x0001
	cx_411 = cx_411 - 0x0001
	branch 0x00 != Mem405[es_406:di_409:byte] l0800_0941
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0943:
	word16 di_423 = di_409 - 0x0001
	word16 cx_425 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947:
	branch cx_425 == 0x0000 l0800_0949
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0949:
	word16 sp_345 = sp_11 - 0x0002
	Mem346[ss:sp_345:word16] = ds
	selector es_347 = Mem346[ss:sp_345:selector]
	word16 di_350 = 0x4271
	word16 si_351 = 0x0861
	word16 cx_352 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956:
	branch cx_352 == 0x0000 l0800_0958
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956_1:
	di_350 = di_350 + 0x0001
	cx_352 = cx_352 - 0x0001
	branch 0x00 != Mem346[es_347:di_350:byte] l0800_0956
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0958:
	word16 di_364 = di_350 - 0x0001
	word16 cx_366 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C:
	branch cx_366 == 0x0000 l0800_095E
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095E:
	branch Mem346[ds:0x2A25:word16] != 0x0000 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0965:
	branch Mem0[Mem0[Mem346[ds:(Mem346[ds:0x2A23:word16] << 0x0002) + 0x0545:segptr32]:byte]:byte] == 0x00 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0977:
	Mem386[ss:sp_345:word16] = ds
	Mem389[ss:sp_345 - 0x0002:word16] = 0x2E75
	Mem391[ss:sp_345 - 0x0004:word16] = ds
	Mem394[ss:sp_345 - 0x0006:word16] = 0x4271
	selector ds_395
	dl = fn0800_09A3(bp_160, ds, out ds_395)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C_2:
	Mem371[es_347:di_364:byte] = Mem346[ds:si_351:byte]
	si_351 = si_351 + 0x0001
	di_364 = di_364 + 0x0001
	cx_366 = cx_366 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947_2:
	Mem430[es_406:di_423:byte] = Mem405[ds:si_410:byte]
	si_410 = si_410 + 0x0001
	di_423 = di_423 + 0x0001
	cx_425 = cx_425 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B_2:
	Mem464[es_440:di_457:byte] = Mem439[ds:si_444:byte]
	si_444 = si_444 + 0x0001
	di_457 = di_457 + 0x0001
	cx_459 = cx_459 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_089C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0883:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_058A:
	word16 ax_109 = Mem0[ds:0x2A27:word16]
	ptr32 es_bx_116 = Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_109 << 0x0002):segptr32]
	byte al_119 = Mem0[es_bx_116 + 0x0001:byte]
	word16 sp_121 = sp_11 - 0x0002
	Mem122[ss:sp_121:word16] = DPB(ax_109 << 0x0002, al_119, 0)
	Mem124[ss:sp_121 - 0x0002:word16] = ds
	Mem127[ss:sp_121 - 0x0004:word16] = 0x0838
	word16 ax_132 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl)
	selector es_118 = SLICE(es_bx_116, selector, 16)
	sp_11 = sp_121 + 0x0002
	word16 si_134 = ax_132
	branch ax_132 < 0x000B l0800_05CF
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05B1:
	ptr32 es_bx_278 = Mem127[ds:0x269C:segptr32]
	es_118 = SLICE(es_bx_278, selector, 16) (alias)
	word16 bx_281 = (word16) es_bx_278 + (Mem127[ds:0x2A27:word16] << 0x0002)
	Mem284[ss:sp_121:word16] = Mem127[es_118:bx_281 + 0x0002:word16]
	Mem286[ss:sp_121 - 0x0002:word16] = Mem284[es_118:bx_281:word16]
	Mem289[ss:sp_121 - 0x0004:word16] = 0x0002
	dl = fn0800_0D24(bp_160, ds, out si_134, out di_144, out ds)
	ax_132 = 0x0002
	dx = DPB(dx, dl, 0) (alias)
	sp_11 = sp_121 + 0x0002
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ah:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05CF:
	byte SCZO_147 = cond(si_134 - 0x0006)
	branch si_134 < 0x0006 l0800_05D7
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D7:
	ptr32 es_bx_193 = Mem127[ds:0x269C:segptr32]
	selector es_195 = SLICE(es_bx_193, selector, 16)
	word16 bx_196 = (word16) es_bx_193 + (Mem127[ds:0x2A27:word16] << 0x0002)
	word16 sp_198 = sp_11 - 0x0002
	Mem199[ss:sp_198:word16] = Mem127[es_195:bx_196 + 0x0002:word16]
	Mem201[ss:sp_198 - 0x0002:word16] = Mem199[es_195:bx_196:word16]
	sp_11 = sp_198 + 0x0002
	branch fn0800_BFC7(ptrArg00, wArg02) != 0x0002 l0800_0622
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0622:
	ptr32 es_bx_264 = Mem201[ds:0x269C:segptr32]
	selector es_266 = SLICE(es_bx_264, selector, 16)
	word16 bx_267 = (word16) es_bx_264 + (Mem201[ds:0x2A27:word16] << 0x0002)
	word16 dx_269 = Mem201[es_266:bx_267:word16]
	Mem273[ss:bp_160 - 0x0002:word16] = Mem201[es_266:bx_267 + 0x0002:word16]
	Mem274[ss:bp_160 - 0x0004:word16] = dx_269 + 0x0002
	dx = dx_269 + 0x0002
	dl = (byte) (dx_269 + 0x0002) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05F6:
	Mem238[ds:0x2A27:word16] = Mem201[ds:0x2A27:word16] + 0x0001
	branch Mem238[ds:0x2A27:word16] != Mem238[ds:0x269A:word16] l0800_0606
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0603:
	bp_160 = fn0800_0DCE(ds, out si_134, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0606:
	ptr32 es_bx_248 = Mem238[ds:0x269C:segptr32]
	selector es_250 = SLICE(es_bx_248, selector, 16)
	word16 bx_251 = (word16) es_bx_248 + (Mem238[ds:0x2A27:word16] << 0x0002)
	dx = Mem238[es_250:bx_251:word16]
	Mem256[ss:bp_160 - 0x0002:word16] = Mem238[es_250:bx_251 + 0x0002:word16]
	Mem257[ss:bp_160 - 0x0004:word16] = dx
	dl = (byte) dx (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_063F:
	ptr32 es_bx_213 = Mem201[ss:bp_160 - 0x0004:segptr32]
	al_119 = Mem0[Mem0[es_bx_213:byte]:byte]
	word16 ax_217 = (int16) al_119
	SZO = cond(ax_217)
	es_118 = SLICE(es_bx_213, selector, 16) (alias)
	ax_132 = ax_217
	Z_107 = SZO (alias)
	C = false
	branch ax_217 != 0x0000 l0800_0659
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_064A:
	Mem223[ss:sp_198:word16] = ds
	Mem226[ss:sp_198 - 0x0002:word16] = 0x05DC
	Mem229[ss:sp_198 - 0x0004:word16] = 0x0002
	dl = fn0800_0D24(bp_160, ds, out si_134, out di_144, out ds)
	ax_132 = 0x0002
	dx = DPB(dx, dl, 0) (alias)
	sp_11 = sp_198 + 0x0002
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D4:
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0659:
	byte SCZO_164 = cond(si_134 - 0x000A)
	branch si_134 <=u 0x000A l0800_0663
// DataOut: bp bx dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0663:
	word16 bx_169 = si_134 << 0x0001
	byte dl_189
	call Mem127[0x0800:bx_169 + 0x098D:word16] (retsize: 4; depth: 4)
		uses: al_152,ax_156,bp,bp_160,bx_169,C_151,cond(bx_169),cx,di,di_158,dl_149,ds_155,dx_150,es_153,SCZO_147,SCZO_164,si,si_159,sp_161,ss,SZO_157,Z_154
		defs: al_182,ax_177,bp_172,bx_180,C_186,cx_187,CZ_184,di_176,dl_189,ds_178,dx_188,es_181,SCZO_174,si_175,SO_183,sp_171,ss_173,SZO_185,Z_179
	return dl_189
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0660:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0869:
	word16 v21_166 = Mem127[ds:0x2A27:word16] + 0x0001
	Mem167[ds:0x2A27:word16] = v21_166
	SZO = cond(v21_166)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0552:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0987:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> ah:<invalid> -18(fp):0x4271 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0541_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> dh:0x00 bl:<invalid> bh:<invalid> ch:<invalid> -18(fp):0x4271 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_09A3(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_09A3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_09A3:
	word16 ax_34 = ((int16) Mem0[ds:0x0A74:byte] << 0x08) + DPB(bx, 0x00, 8)
	ui32 ax_dx_42 = SEQ(((int16) Mem0[ds:0x0A72:byte] << 0x08) + DPB(dx, 0x00, 8) + (ax_34 <u 0x0000), ax_34 + 0x0020)
	word16 ax_45 = SLICE(ax_dx_42 + 0x00000020, word16, 16)
	word16 dx_309 = (word16) (ax_dx_42 + 0x00000020)
	selector ds_52 = fn0800_4311(ds, dx_309, ax_45)
	Mem55[ss:fp - 0x0004:word16] = dx_309
	Mem57[ss:fp - 0x0006:word16] = ax_45
	Mem58[ss:fp - 0x0008:word16] = dx_309
	Mem59[ss:fp - 0x000A:word16] = ax_45
	Mem61[ss:fp - 0x0010:word16] = Mem59[ss:fp - 0x0004:word16]
	Mem63[ss:fp - 0x0012:word16] = ax_45
	Mem65[ss:fp - 0x0014:word16] = ds_52
	Mem68[ss:fp - 0x0016:word16] = 0x0A6E
	selector ds_143
	word16 bp_75 = fn0800_867A(wArg02, psegArg04, wArg06, psegArg08, out ds_143)
	word16 sp_282 = fp - 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0A4F:
	word16 si_128 = Mem68[ss:bp_75 + 0x0004:word16]
	word16 sp_90 = sp_282 - 0x0002
	Mem91[ss:sp_90:word16] = ds_143
	ptr32 es_di_93 = Mem91[ss:bp_75 - 0x0008:segptr32]
	selector ds_92 = Mem91[ss:bp_75 + 0x0006:selector]
	word16 di_109 = (word16) es_di_93
	selector es_95 = SLICE(es_di_93, selector, 16)
	word16 ax_140 = 0x0000
	word16 cx_102 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> Sequence es:di:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E:
	branch cx_102 == 0x0000 l0800_0A60
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E_1:
	di_109 = di_109 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x00 != Mem91[es_95:di_109:byte] l0800_0A5E
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A60:
	word16 cx_112 = ~cx_102
	word16 di_114 = di_109 - cx_112
	byte SCZO_116 = cond(di_114)
	byte Z_118 = SCZO_116
	byte C_119 = SCZO_116
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64:
	branch cx_112 == 0x0000 l0800_0A66
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64_2:
	byte SCZO_339 = cond(Mem91[ds_92:si_356:byte] - Mem91[es_95:di_355:byte])
	Z_118 = SCZO_339 (alias)
	C_119 = SCZO_339 (alias)
	si_128 = si_356 + 0x0001
	di_114 = di_355 + 0x0001
	cx_112 = cx_112 - 0x0001
	di_355 = di_114
	si_356 = si_128
	branch Mem91[ds_92:si_356:byte] != Mem91[es_95:di_355:byte] l0800_0A64
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A66:
	branch Z_118 l0800_0A6D
// DataOut: ax bp sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A68:
	word16 ax_331 = 0x0000 - C_119
	ax_140 = ax_331 - 0xFFFF - (ax_331 <u 0x0000)
// DataOut: ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A6D:
	ds_143 = Mem91[ss:sp_90:selector]
	branch ax_140 != 0x0000 l0800_09FF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_09FF:
	ptr32 es_di_223 = Mem91[ss:bp_75 - 0x0008:segptr32]
	word16 di_224 = (word16) es_di_223
	selector es_225 = SLICE(es_di_223, selector, 16)
	word16 cx_231 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07:
	branch cx_231 == 0x0000 l0800_0A09
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07_1:
	di_224 = di_358 + 0x0001
	cx_231 = cx_231 - 0x0001
	di_358 = di_224
	branch 0x00 != Mem91[es_225:di_358:byte] l0800_0A07
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A09:
	word16 di_252 = Mem91[ss:bp_75 - 0x0008:word16]
	Mem255[ss:sp_90:word16] = (int16) Mem91[es_225:Mem91[ss:bp_75 - 0x0008:word16] + (~cx_231 - 0x0001) + 0x0001:byte] << 0x08
	word16 cx_261 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25:
	branch cx_261 == 0x0000 l0800_0A27
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25_2:
	di_252 = di_359 + 0x0001
	cx_261 = cx_261 - 0x0001
	di_359 = di_252
	branch 0x00 != Mem255[es_225:di_359:byte] l0800_0A25
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A27:
	sp_282 = sp_90 + 0x0002
	word16 dx_283 = Mem255[ss:sp_90:word16] + DPB(Mem255[ss:bp_75 - 0x0008:word16] + (~cx_261 - 0x0001), 0x00, 8)
	word16 di_286 = Mem255[ss:bp_75 - 0x0008:word16]
	word16 cx_293 = 0xFFFF
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42:
	branch cx_293 == 0x0000 l0800_0A44
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42_3:
	di_286 = di_360 + 0x0001
	cx_293 = cx_293 - 0x0001
	di_360 = di_286
	branch 0x00 != Mem255[es_225:di_360:byte] l0800_0A42
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A44:
	word16 dx_308 = dx_283 + (~cx_293 - 0x0001)
	Mem311[ss:bp_75 - 0x0008:word16] = Mem255[ss:bp_75 - 0x0008:word16] + (dx_308 + 0x0003)
	dx_309 = dx_308 + 0x0003
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A72:
	ptr32 es_di_149 = Mem91[ss:bp_75 - 0x0008:segptr32]
	word16 di_150 = (word16) es_di_149
	selector es_151 = SLICE(es_di_149, selector, 16)
	word16 cx_157 = 0xFFFF
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A:
	branch cx_157 == 0x0000 l0800_0A7C
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A_1:
	di_150 = di_357 + 0x0001
	cx_157 = cx_157 - 0x0001
	di_357 = di_150
	branch 0x00 != Mem91[es_151:di_357:byte] l0800_0A7A
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7C:
	Mem172[ss:bp_75 - 0x0008:word16] = Mem91[ss:bp_75 - 0x0008:word16] + ~cx_157
	ptr32 es_bx_173 = Mem172[ss:bp_75 - 0x0008:segptr32]
	Mem187[ss:sp_90:word16] = ((int16) Mem0[Mem0[es_bx_173:byte]:byte] << 0x08) + DPB(dx_309, 0x00, 8) + 0x0002
	Mem189[ss:sp_90 - 0x0002:word16] = Mem187[ss:bp_75 - 0x0006:word16]
	Mem191[ss:sp_90 - 0x0004:word16] = (word16) es_bx_173
	Mem193[ss:sp_90 - 0x0006:word16] = Mem191[ss:bp_75 + 0x000A:word16]
	Mem195[ss:sp_90 - 0x0008:word16] = Mem193[ss:bp_75 + 0x0008:word16]
	selector ds_197 = fn0800_B0F3(wArg00, wArg02, psegArg04, wArg06, psegArg08)
	Mem201[ss:sp_90:word16] = Mem195[ss:bp_75 - 0x0002:word16]
	Mem203[ss:sp_90 - 0x0002:word16] = Mem201[ss:bp_75 - 0x0004:word16]
	selector ds_204
	return fn0800_4346(ds_197, wArg00, wArg02, out ds_204)
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_09A3_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> ah:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_0ABC(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0004(16) Stack +0006(16)
fn0800_0ABC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16)

l0800_0ABC:
	fn0800_35A3(ds, wArg04, wArg06)
	Mem32[ss:fp - 0x0014:word16] = Mem0[ds:0x2A05:word16]
	Mem34[ss:fp - 0x0016:word16] = Mem32[ds:0x2A03:word16]
	Mem36[ss:fp - 0x0018:word16] = Mem34[ds:0x2A09:word16]
	Mem38[ss:fp - 0x001A:word16] = Mem36[ds:0x2A07:word16]
	word16 di_41
	word16 ax_42 = fn0800_0B79(fp - 0x0002, wArg02, di, wArg00, wArg02, wArg04, wArg06, out di_41)
	Mem52[ss:fp - 0x0014:word16] = (uint32) (uint16) ax_42 % 0x0064
	Mem61[ss:fp - 0x0016:word16] = (uint32) (uint16) ax_42 /u 0x0064
	Mem63[ss:fp - 0x0018:word16] = Mem61[ds:0x2A05:word16]
	Mem65[ss:fp - 0x001A:word16] = Mem63[ds:0x2A03:word16]
	Mem67[ss:fp - 0x001C:word16] = Mem65[ds:0x2A09:word16]
	Mem69[ss:fp - 0x001E:word16] = Mem67[ds:0x2A07:word16]
	Mem71[ss:fp - 0x0020:word16] = ss
	Mem74[ss:fp - 0x0022:word16] = fp - 0x0010
	Mem77[ss:fp - 0x0024:word16] = 0x0014
	Mem79[ss:fp - 0x0026:word16] = 0x0014
	Mem81[ss:fp - 0x0028:word16] = ds
	Mem84[ss:fp - 0x002A:word16] = 0x0866
	word16 di_85
	word16 si_130 = fn0800_B2EF(ds, wArg00, wArg02, out di_85)
	word16 sp_146 = fp - 0x0012
	branch Mem84[ds:0x2A25:word16] == 0x0002 l0800_0B2E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0B2A:
	branch si_130 == 0x0000 l0800_0B47
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B2E:
	word16 bx_132 = si_130 << 0x0001
	Mem136[ss:fp - 0x0014:word16] = Mem84[ds:(bx_132 << 0x0001) + 0x059B:word16]
	Mem138[ss:fp - 0x0016:word16] = Mem136[ds:(bx_132 << 0x0001) + 0x0599:word16]
	Mem140[ss:fp - 0x0018:word16] = ds
	Mem143[ss:fp - 0x001A:word16] = 0x0889
	word16 di_144
	fn0800_B2EF(ds, wArg00, wArg02, out di_144)
	sp_146 = fp - 0x0012
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B47:
	word16 sp_95 = sp_146 - 0x0002
	Mem96[ss:sp_95:word16] = ds
	Mem99[ss:sp_95 - 0x0002:word16] = 0x0827
	word16 di_100
	fn0800_B2EF(ds, wArg00, wArg02, out di_100)
	word16 ax_103 = Mem99[ds:0x2A09:word16]
	word16 v18_105 = Mem99[ds:0x29F3:word16] + Mem99[ds:0x2A07:word16]
	Mem106[ds:0x29F3:word16] = v18_105
	Mem110[ds:0x29F5:word16] = Mem106[ds:0x29F5:word16] + ax_103 + (v18_105 <u 0x0000)
	word16 ax_111 = Mem110[ds:0x2A05:word16]
	word16 v20_113 = Mem110[ds:0x29EF:word16] + Mem110[ds:0x2A03:word16]
	Mem114[ds:0x29EF:word16] = v20_113
	Mem118[ds:0x29F1:word16] = Mem114[ds:0x29F1:word16] + ax_111 + (v20_113 <u 0x0000)
	Mem121[ds:0x2A13:word16] = Mem118[ds:0x2A13:word16] + 0x0001
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp

fn0800_0ABC_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp



word16 fn0800_0B79(word16 bp, word16 si, word16 di, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax di
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_0B79_entry:
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B79:
	word16 sp_121 = fp - 0x0002
	word16 bp_117 = fp - 0x0002
	branch (wArg02 | wArg04) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B84:
	branch (wArg06 | wArg08) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B8C:
	word16 ax_120 = wArg04
	branch wArg04 >u wArg08 l0800_0BCE
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B99:
	branch wArg02 >u wArg06 l0800_0BCE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0BCE:
	ui32 ax_dx_74 = SEQ(ax_120, Mem0[ss:bp_117 + 0x0004:word16] - Mem0[ss:bp_117 + 0x0008:word16]) - Mem0[ss:bp_117 + 0x0008:ui32]
	word16 ax_75 = SLICE(ax_dx_74, word16, 16)
	word16 dx_76 = (word16) ax_dx_74
	branch ax_75 >u 0x0006 l0800_0BA2
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BDF:
	branch ax_75 != 0x0006 l0800_0BE7
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE1:
	branch dx_76 >u 0x8DB8 l0800_0BA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BA2:
	word16 sp_88 = sp_121 - 0x0002
	Mem89[ss:sp_88:word16] = 0x0000
	Mem91[ss:sp_88 - 0x0002:word16] = 0x000A
	Mem93[ss:sp_88 - 0x0004:word16] = Mem91[ss:bp_117 + 0x0006:word16]
	Mem95[ss:sp_88 - 0x0006:word16] = Mem93[ss:bp_117 + 0x0004:word16]
	word16 dx_96
	word16 bp_97
	word16 si_98
	word16 di_99
	word16 ax_100 = fn0800_8BC2(bp_117, si, di, bp, out dx_96, out bp_97, out si_98, out di_99)
	Mem102[ss:bp_97 + 0x0006:word16] = dx_96
	Mem103[ss:bp_97 + 0x0004:word16] = ax_100
	Mem109[ss:sp_88:word16] = 0x0000
	Mem111[ss:sp_88 - 0x0002:word16] = 0x000A
	Mem113[ss:sp_88 - 0x0004:word16] = Mem111[ss:bp_97 + 0x000A:word16]
	Mem115[ss:sp_88 - 0x0006:word16] = Mem113[ss:bp_97 + 0x0008:word16]
	word16 dx_116
	ax_120 = fn0800_8BC2(bp_97, si_98, di_99, bp, out dx_116, out bp_117, out si, out di)
	Mem122[ss:bp_117 + 0x000A:word16] = dx_116
	Mem123[ss:bp_117 + 0x0008:word16] = ax_120
	sp_121 = sp_88 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE7:
	Mem125[ss:sp_121:word16] = Mem0[ss:bp_117 + 0x0006:word16]
	word16 sp_126 = sp_121 - 0x0002
	Mem127[ss:sp_126:word16] = Mem125[ss:bp_117 + 0x0004:word16]
	ui32 cx_bx_133 = SEQ(Mem127[ss:bp_117 + 0x0006:word16], Mem127[ss:bp_117 + 0x0004:word16] - Mem127[ss:bp_117 + 0x0008:word16]) - Mem127[ss:bp_117 + 0x0008:ui32]
	word16 dx_140
	word16 ax_141 = fn0800_8F18(0x2710, SLICE(cx_bx_133, word16, 16), 0x0000, (word16) cx_bx_133, out dx_140)
	Mem143[ss:sp_126 - 0x0002:word16] = dx_140
	Mem145[ss:sp_126 - 0x0004:word16] = ax_141
	word16 dx_146
	word16 bp_147
	word16 si_148
	word16 di_149
	return fn0800_8BC2(bp_117, si, di, bp, out dx_146, out bp_147, out si_148, out di_149)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A

l0800_0B9E:
	return 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_0B79_exit:
// DataOut: ax di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A



word16 fn0800_0C08(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_0C08_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0C08:
	word16 si_11 = wArg02
	word16 cx_12 = 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0C15:
	word32 dx_ax_18 = (uint32) (uint16) si_11
	si_11 = dx_ax_18 /u 0x0002
	branch dx_ax_18 /u 0x0002 != 0x0000 l0800_0C14
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> bx:0x0002 ax:dx_ax /u 0x0002 | dx_ax /u 0x0002 dx:dx_ax % 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C14:
	cx_12 = cx_12 + 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:dx_ax /u 0x0002 cx:<invalid> bx:0x0002 ax:dx_ax /u 0x0002 | dx_ax /u 0x0002 dx:dx_ax % 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C24:
	return cx_12
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:dx_ax /u 0x0002 cx:<invalid> bx:0x0002 ax:dx_ax /u 0x0002 | dx_ax /u 0x0002 dx:dx_ax % 0x0002 -4(fp):si -2(fp):bp

fn0800_0C08_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cx:<invalid> bx:0x0002 ax:<invalid> dx:dx_ax % 0x0002 -4(fp):si -2(fp):bp



word16 fn0800_0C29(selector ds, word16 wArg02, word16 wArg04, byte bArg06, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0006(8)
fn0800_0C29_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(8)

l0800_0C29:
	byte dl_16
	byte al_17 = fn0800_97CC(ds, (int16) bArg06, out dl_16)
	word16 wLoc06_26 = wArg02
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C4F:
	word16 bx_32 = (word16) ptrLoc06
	selector es_33 = SLICE(ptrLoc06, selector, 16)
	branch Mem0[es_33:bx_32:byte] == 0x00 l0800_0C5D
// DataOut: bx cl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C58:
	branch Mem0[es_33:bx_32:byte] != al_17 l0800_0C4C
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C4C:
	wLoc06_26 = wLoc06_26 + 0x0001
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C5D:
	word16 ax_40 = wLoc06_26 - wArg02
	*dlOut = (byte) (0x0000 - (ax_40 <u 0x0000))
	return ax_40
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0C29_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_0C6C_entry:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C6C:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C88:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] != 0x00 l0800_0C71
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C71:
	Mem44[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] = fn0800_97CC(ds, (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte], out dl)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C91:
	return dl
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

fn0800_0C6C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>



void fn0800_0C93(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0C93_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0C93:
	fn0800_3509(ds, wArg02, wArg04)
	Mem31[ss:fp - 0x006E:word16] = ss
	word16 si_200 = 0x2714
	selector es_32 = Mem31[ss:fp - 0x006E:selector]
	word16 sp_185 = fp - 0x006C
	word16 di_205 = fp - 0x0068
	word16 ax_193 = 0x0000
	word16 cx_206 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0CB9:
	branch cx_206 == 0x0000 l0800_0CBB
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CB9_1:
	di_205 = di_205 + 0x0001
	cx_206 = cx_206 - 0x0001
	branch 0x00 != Mem31[es_32:di_205:byte] l0800_0CB9
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBB:
	word16 cx_202 = ~cx_206
	word16 di_201 = di_205 - cx_202
	byte SCZO_49 = cond(di_201)
	byte Z_198 = SCZO_49
	byte C_199 = SCZO_49
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBF:
	branch cx_202 == 0x0000 l0800_0CC1
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBF_2:
	byte SCZO_196 = cond(Mem31[ds:si_208:byte] - Mem31[es_32:di_209:byte])
	Z_198 = SCZO_196 (alias)
	C_199 = SCZO_196 (alias)
	si_200 = si_208 + 0x0001
	di_201 = di_209 + 0x0001
	cx_202 = cx_202 - 0x0001
	si_208 = si_200
	di_209 = di_201
	branch Mem31[ds:si_208:byte] != Mem31[es_32:di_209:byte] l0800_0CBF
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC1:
	branch Z_198 l0800_0CC8
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC3:
	word16 ax_190 = 0x0000 - C_199
	ax_193 = ax_190 - 0xFFFF - (ax_190 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC8:
	branch ax_193 == 0x0000 l0800_0D0D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CCC:
	Mem104[ss:fp - 0x006E:word16] = ss
	Mem107[ss:fp - 0x0070:word16] = fp - 0x0068
	Mem109[ss:fp - 0x0072:word16] = ds
	Mem112[ss:fp - 0x0074:word16] = 0x088F
	word16 di_113
	fn0800_B2EF(ds, wArg00, wArg02, out di_113)
	Mem117[ss:fp - 0x006E:word16] = ss
	Mem122[ss:fp - 0x006E:word16] = Mem117[ss:fp - 0x006E:selector]
	Mem124[ss:fp - 0x0070:word16] = ds
	selector es_125 = Mem124[ss:fp - 0x0070:selector]
	Mem128[ss:fp - 0x0070:word16] = fp - 0x0068
	word16 di_131 = Mem128[ss:fp - 0x0070:word16]
	selector es_134 = Mem128[ss:fp - 0x006E:selector]
	Mem137[ss:fp - 0x006E:word16] = es_125
	Mem139[ss:fp - 0x0070:word16] = 0x2714
	word16 cx_143 = 0xFFFF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF5:
	branch cx_143 == 0x0000 l0800_0CF7
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF5_1:
	di_131 = di_131 + 0x0001
	cx_143 = cx_143 - 0x0001
	branch 0x00 != Mem139[es_134:di_131:byte] l0800_0CF5
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF7:
	word16 di_158 = Mem139[ss:fp - 0x0070:word16]
	selector es_161 = Mem139[ss:fp - 0x006E:selector]
	Mem164[ss:fp - 0x006E:word16] = ds
	word16 cx_150 = ~cx_143
	word16 cx_152 = cx_150 >>u 0x0001
	word16 si_157 = di_131 - cx_150
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D06:
	branch cx_152 == 0x0000 l0800_0D08
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D08:
	word16 cx_174 = cx_152 * 0x0002 + (cx_150 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0A:
	branch cx_174 == 0x0000 l0800_0D0C
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0C:
	ds = Mem164[ss:fp - 0x006E:selector]
	sp_185 = fp - 0x006C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0D:
	word16 sp_83 = sp_185 - 0x0002
	Mem84[ss:sp_83:word16] = Mem31[ss:fp + 0x0004:word16]
	Mem86[ss:sp_83 - 0x0002:word16] = Mem84[ss:fp + 0x0002:word16]
	Mem88[ss:sp_83 - 0x0004:word16] = ds
	Mem91[ss:sp_83 - 0x0006:word16] = 0x089E
	word16 di_93
	fn0800_B2EF(ds, wArg00, wArg02, out di_93)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

fn0800_0C93_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

l0800_0D0A_1:
	Mem180[es_161:di_158:byte] = Mem164[es_134:si_157:byte]
	si_157 = si_157 + 0x0001
	di_158 = di_158 + 0x0001
	cx_174 = cx_174 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D06_2:
	Mem170[es_161:di_158:word16] = Mem164[es_134:si_157:word16]
	si_157 = si_157 + 0x0002
	di_158 = di_158 + 0x0002
	cx_152 = cx_152 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



byte fn0800_0D24(word16 bp, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_0D24_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0D24:
	selector ds_18 = fn0800_0DA9(fp - 0x0002, ds, Mem0[ds:0x29DB:word16], Mem0[ds:0x29DD:word16])
	Mem22[ss:fp - 0x0004:word16] = ds_18
	Mem26[ss:fp - 0x0006:word16] = 0x4412
	Mem28[ss:fp - 0x0008:word16] = Mem26[ds_18:0x29D9:word16]
	Mem30[ss:fp - 0x000A:word16] = Mem28[ds_18:0x29D7:word16]
	selector ds_33 = fn0800_0DA9(fp - 0x0002, ds_18, wArg00, wArg02)
	Mem37[ss:fp - 0x0004:word16] = ds_33
	Mem40[ss:fp - 0x0006:word16] = 0x43AD
	Mem42[ss:fp - 0x0008:word16] = Mem40[ds_33:0x29D5:word16]
	Mem44[ss:fp - 0x000A:word16] = Mem42[ds_33:0x29D3:word16]
	selector ds_45 = fn0800_0DA9(fp - 0x0002, ds_33, wArg00, wArg02)
	word16 bx_47 = Mem44[ss:fp + 0x0002:word16]
	Mem52[ss:fp - 0x0004:word16] = Mem44[ds_45:(bx_47 << 0x0002) + 0x055F:word16]
	Mem54[ss:fp - 0x0006:word16] = Mem52[ds_45:(bx_47 << 0x0002) + 0x055D:word16]
	Mem56[ss:fp - 0x0008:word16] = ds_45
	Mem59[ss:fp - 0x000A:word16] = 0x08A2
	word16 di_60
	fn0800_B2EF(ds_45, wArg00, wArg02, out di_60)
	ptr32 es_bx_63 = Mem59[ss:fp + 0x0004:segptr32]
	word16 sp_102 = fp - 0x0002
	word16 bx_64 = (word16) es_bx_63
	branch Mem0[Mem0[es_bx_63:byte]:byte] == 0x00 l0800_0D92
// DataOut: bp bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0D83:
	Mem92[ss:fp - 0x0004:word16] = Mem59[ss:fp + 0x0006:word16]
	Mem94[ss:fp - 0x0006:word16] = bx_64
	Mem96[ss:fp - 0x0008:word16] = ds_45
	Mem99[ss:fp - 0x000A:word16] = 0x08A6
	word16 di_100
	fn0800_B2EF(ds_45, wArg00, wArg02, out di_100)
	sp_102 = fp - 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D92:
	word16 sp_69 = sp_102 - 0x0002
	Mem70[ss:sp_69:word16] = ds_45
	Mem73[ss:sp_69 - 0x0002:word16] = 0x0827
	word16 di_74
	fn0800_B2EF(ds_45, wArg00, wArg02, out di_74)
	Mem80[ss:sp_69:word16] = 0x0001
	word16 si_81
	selector ds_82
	return fn0800_8B5A(ds_45, wArg00, out si_81, out ds_82)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0D24_exit:
// DataOut: di dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:0x01 di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_0DA9(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0DA9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0DA9:
	branch (wArg02 | wArg04) == 0x0000 l0800_0DCC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_0DB4:
	byte dl_40
	word16 di_41
	byte al_43 = fn0800_A614(fp - 0x0002, ds, DPB(ptrLoc06, wArg02, 0), wArg04, out dl_40, out di_41, out ds)
	Mem47[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0008:word16]
	Mem49[ss:fp - 0x0006:word16] = Mem47[ss:fp + 0x0006:word16]
	fn0800_8F7F(al_43, ds, ptrArg00)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_0DCC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0DA9_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_0DCE(selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds si
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_0DCE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DCE:
	word16 di_14
	fn0800_B2EF(ds, 0x07E8, ds, out di_14)
	word16 si_22
	selector ds_23
	fn0800_8B5A(ds, 0x0000, out si_22, out ds_23)
	return bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0DCE_exit:
// DataOut: bp ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -8(fp):0x07E8 -6(fp):ds -4(fp):0x0121 -2(fp):<invalid>



byte fn0800_0DE8(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_0DE8_entry:
	*bpOut = bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DE8:
	word16 di_28
	fn0800_B2EF(ds, 0x08AC, ds, out di_28)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_0E2A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_0E1B:
	word16 di_385
	fn0800_B2EF(ds, 0x08BA, ds, out di_385)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E2A:
	branch Mem0[ds:0x2A1F:word16] == 0x0000 l0800_0E3C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E31:
	word16 di_374
	fn0800_B2EF(ds, 0x08CF, ds, out di_374)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E3C:
	word16 di_47
	fn0800_B2EF(ds, 0x08DC, ds, out di_47)
	selector ds_59
	fn0800_3678(bp, ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds_59)
	Mem64[ss:fp - 0x0004:word16] = ds_59
	Mem68[ss:fp - 0x0006:word16] = 0x08DF
	Mem70[ss:fp - 0x0008:word16] = ds_59
	Mem73[ss:fp - 0x000A:word16] = 0x4477
	word16 di_78
	word16 si_79 = fn0800_37BE(ds_59, wArg00, wArg02, wArg04, wArg06, out di_78)
	Mem83[ss:fp - 0x0004:word16] = ds_59
	Mem86[ss:fp - 0x0006:word16] = 0x08EC
	Mem88[ss:fp - 0x0008:word16] = ds_59
	Mem91[ss:fp - 0x000A:word16] = 0x4477
	word16 di_106
	selector ds_109
	word16 si_107 = fn0800_4234(si_79, di_78, ds_59, wArg00, wArg02, wArg04, wArg06, out di_106, out ds_109)
	Mem98[ds_109:0x29DD:word16] = dx
	Mem99[ds_109:0x29DB:word16] = 0x4477
	word16 sp_110 = fp - 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10F4:
	word16 sp_112 = sp_110 - 0x0002
	Mem113[ss:sp_112:word16] = ds_109
	Mem116[ss:sp_112 - 0x0002:word16] = 0x4541
	sp_110 = sp_112 + 0x0002
	byte dl_118
	selector ds_119
	branch fn0800_2DE2(bp, si_107, ds_109, ptrArg00, wArg02, out dl_118, out ds_119) == 0x0000 l0800_1106
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1106:
	Mem348[ss:sp_112:word16] = Mem116[ds_119:0x29DD:word16]
	Mem350[ss:sp_112 - 0x0002:word16] = Mem348[ds_119:0x29DB:word16]
	byte dl_351
	word16 di_352
	selector ds_353
	fn0800_A614(bp, ds_119, ptrArg00, wArg02, out dl_351, out di_352, out ds_353)
	Mem358[ss:sp_112:word16] = ds_353
	Mem362[ss:sp_112 - 0x0002:word16] = 0x4477
	return fn0800_8F7F(0x77, ds_353, ptrArg00)
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_1103:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E7C:
	bp = fn0800_3764(ds_119)
	*bpOut = bp
	branch fn0800_388C(bp, si_107, di_106, ds_119, out si_107, out ds_109) != 0x0000 l0800_0E89
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E89:
	Mem152[ss:sp_112:word16] = ds_109
	Mem155[ss:sp_112 - 0x0002:word16] = 0x4541
	fn0800_0C93(bp, ds_109, wArg00, wArg02)
	Mem159[ss:sp_112:word16] = Mem155[ds_109:0x29E5:word16]
	Mem161[ss:sp_112 - 0x0002:word16] = Mem159[ds_109:0x29E3:word16]
	word16 si_162
	selector ds_163
	word16 ax_164 = fn0800_4194(bp, ds_109, wArg00, wArg02, out si_162, out ds_163)
	Mem166[ds_163:0x2A09:word16] = dx
	Mem167[ds_163:0x2A07:word16] = ax_164
	Mem168[ds_163:0x2A05:word16] = dx
	Mem169[ds_163:0x2A03:word16] = ax_164
	word16 sp_165 = sp_112 + 0x0002
	branch Mem169[ds_163:0x2A09:word16] >u 0x0000 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EB9:
	branch Mem169[ds_163:0x2A09:word16] != 0x0000 l0800_0EC2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EBB:
	branch Mem169[ds_163:0x2A07:word16] >u 0x0012 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC2:
	branch Mem169[ds_163:0x2A15:word16] != 0x0000 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ECF:
	byte dl_286
	branch fn0800_3992(bp, ds_163, out dl_286, out ds_163) == 0x0000 l0800_0EDC
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EDC:
	branch Mem169[ds_163:0x2A23:word16] <=u 0x0005 l0800_0EE8
// DataOut: bp bx dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE8:
	return dl_286
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

fn0800_0DE8_exit:
// DataOut: bp dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_0FF4:
	ds_163 = fn0800_6AD4(bp, ds_163)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1007:
	Mem300[ss:sp_112:word16] = Mem169[ds_163:0x29E1:word16]
	Mem302[ss:sp_112 - 0x0002:word16] = Mem300[ds_163:0x29DF:word16]
	word16 ax_305 = fn0800_4194(bp, ds_163, wArg00, wArg02, out si_107, out ds_163)
	Mem307[ds_163:0x2A05:word16] = dx
	Mem308[ds_163:0x2A03:word16] = ax_305
	sp_165 = sp_112 + 0x0002
	word16 ax_309 = Mem308[ds_163:0x2A05:word16]
	dx = Mem308[ds_163:0x2A03:word16]
	branch ax_309 <u Mem308[ds_163:0x2A09:word16] l0800_1049
// DataOut: bp ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1029:
	branch ax_309 != Mem308[ds_163:0x2A09:word16] l0800_1031
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_102B:
	branch dx <u Mem308[ds_163:0x2A07:word16] l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1031:
	branch Mem308[ds_163:0x2A15:word16] != 0x0000 l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1038:
	dx = Mem308[ds_163:0x2A07:word16]
	Mem332[ds_163:0x2A05:word16] = Mem308[ds_163:0x2A09:word16]
	Mem333[ds_163:0x2A03:word16] = dx
	si_107 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1049:
	branch si_107 != 0x0004 l0800_105C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_104E:
	dx = Mem308[ds_163:0x2A07:word16]
	Mem325[ds_163:0x2A05:word16] = Mem308[ds_163:0x2A09:word16]
	Mem326[ds_163:0x2A03:word16] = dx
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ED6:
	si_107 = 0x000E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC9:
	si_107 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_105C:
	branch Mem169[ds_163:0x427E:byte] == 0x00 l0800_10B7
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1063:
	branch si_107 == 0x0003 l0800_106D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1068:
	branch si_107 != 0x0004 l0800_10B7
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_106D:
	dx = Mem169[ds_163:0x2A07:word16]
	Mem247[ds_163:0x2A05:word16] = Mem169[ds_163:0x2A09:word16]
	Mem248[ds_163:0x2A03:word16] = dx
	word16 sp_249 = sp_165 - 0x0002
	Mem250[ss:sp_249:word16] = Mem248[ds_163:0x29E5:word16]
	Mem252[ss:sp_249 - 0x0002:word16] = Mem250[ds_163:0x29E3:word16]
	selector ds_253 = fn0800_BA67(ds_163, wArg00, wArg02)
	Mem257[ss:sp_249:word16] = Mem252[ds_253:0x29E1:word16]
	Mem259[ss:sp_249 - 0x0002:word16] = Mem257[ds_253:0x29DF:word16]
	selector ds_260 = fn0800_BA67(ds_253, wArg00, wArg02)
	Mem264[ss:sp_249:word16] = Mem259[ds_260:0x2A09:word16]
	Mem266[ss:sp_249 - 0x0002:word16] = Mem264[ds_260:0x2A07:word16]
	Mem268[ss:sp_249 - 0x0004:word16] = Mem266[ds_260:0x29E1:word16]
	Mem270[ss:sp_249 - 0x0006:word16] = Mem268[ds_260:0x29DF:word16]
	Mem272[ss:sp_249 - 0x0008:word16] = Mem270[ds_260:0x29E5:word16]
	Mem274[ss:sp_249 - 0x000A:word16] = Mem272[ds_260:0x29E3:word16]
	ds_163 = fn0800_3B0A(bp, ds_260, wArg08, wArg0A)
	sp_165 = sp_249 + 0x0002
	si_107 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10B7:
	word16 sp_195 = sp_165 - 0x0002
	Mem196[ss:sp_195:word16] = Mem169[ds_163:0x29E5:word16]
	Mem198[ss:sp_195 - 0x0002:word16] = Mem196[ds_163:0x29E3:word16]
	byte dl_199
	word16 di_200
	selector ds_201
	fn0800_A614(bp, ds_163, ptrArg00, wArg02, out dl_199, out di_200, out ds_201)
	Mem206[ss:sp_195:word16] = Mem198[ds_201:0x29E1:word16]
	Mem208[ss:sp_195 - 0x0002:word16] = Mem206[ds_201:0x29DF:word16]
	byte dl_209
	selector ds_211
	fn0800_A614(bp, ds_201, ptrArg00, wArg02, out dl_209, out di_106, out ds_211)
	word16 sp_213 = sp_195 + 0x0002
	branch si_107 <= 0x0002 l0800_10E5
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E5:
	si_107 = fn0800_37DF(bp, ds_211, out ds_211)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10D8:
	Mem232[ss:sp_195:word16] = ds_211
	Mem236[ss:sp_195 - 0x0002:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_211, ptrArg00)
	sp_213 = sp_195 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E8:
	word16 sp_221 = sp_213 - 0x0002
	Mem222[ss:sp_221:word16] = ds_211
	Mem225[ss:sp_221 - 0x0002:word16] = 0x4541
	Mem227[ss:sp_221 - 0x0004:word16] = si_107
	ds_109 = fn0800_0ABC(bp, ds_211, wArg00, wArg02, wArg04)
	sp_110 = sp_221 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E86:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_112D(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_112D_entry:
	*bpOut = bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_112D:
	word16 di_28
	fn0800_B2EF(ds, 0x08F0, ds, out di_28)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_116F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_1160:
	word16 di_291
	fn0800_B2EF(ds, 0x08FE, ds, out di_291)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_116F:
	word16 di_158
	word16 si_137 = fn0800_B2EF(ds, 0x0913, ds, out di_158)
	word16 sp_181 = fp - 0x0002
	branch Mem0[ds:0x2A25:word16] == 0x0001 l0800_1184
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_1184:
	si_137 = fn0800_3678(bp, ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds)
	sp_181 = fp - 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1181:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12C2:
	word16 sp_58 = sp_181 - 0x0002
	Mem59[ss:sp_58:word16] = ds
	Mem63[ss:sp_58 - 0x0002:word16] = 0x4541
	sp_181 = sp_58 + 0x0002
	byte dl_66
	selector ds_67
	branch fn0800_2DE2(bp, si_137, ds, ptrArg00, wArg02, out dl_66, out ds_67) == 0x0000 l0800_12D4
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12D4:
	return dl_66
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_112D_exit:
// DataOut: bp dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_12D1:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1192:
	bp = fn0800_3764(ds_67)
	*bpOut = bp
	branch fn0800_388C(bp, si_137, di_158, ds_67, out si_137, out ds) != 0x0000 l0800_119F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119F:
	Mem83[ss:sp_58:word16] = ds
	Mem86[ss:sp_58 - 0x0002:word16] = 0x4541
	fn0800_0C93(bp, ds, wArg00, wArg02)
	Mem91[ss:sp_58:word16] = Mem86[ds:0x29E5:word16]
	Mem93[ss:sp_58 - 0x0002:word16] = Mem91[ds:0x29E3:word16]
	word16 si_94
	selector ds_114
	word16 ax_96 = fn0800_4194(bp, ds, wArg00, wArg02, out si_94, out ds_114)
	Mem99[ds_114:0x2A05:word16] = dx
	Mem100[ds_114:0x2A03:word16] = ax_96
	word16 sp_115 = sp_58 + 0x0002
	branch false l0800_11CF
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C3:
	branch false l0800_11CA
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C5:
	branch ax_96 >=u 0x0012 l0800_11CF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CF:
	word16 bx_207 = Mem100[ds_114:0x2A23:word16]
	branch bx_207 >u 0x0005 l0800_1243
// DataOut: bp bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11D8:
	switch (bx_207 << 0x0001) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1229:
	*bpOut = fn0800_4BB1(bp, ds_114, out ds_114)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1208:
	Mem243[ss:sp_58:word16] = Mem100[ds_114:0x29E5:word16]
	Mem245[ss:sp_58 - 0x0002:word16] = Mem243[ds_114:0x29E3:word16]
	sp_115 = sp_58 + 0x0002
	selector ds_246
	branch fn0800_3F0A(bp, ds_114, wArg00, wArg02, out ds_246) != 0x4D5A l0800_1222
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1222:
	*bpOut = fn0800_4B97(bp, ds_246, out ds_114)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_121B:
	ds_114 = fn0800_46FE(bp, ds_246)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1237:
	*bpOut = fn0800_518F(bp, ds_114, out ds_114)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_123E:
	ds_114 = fn0800_51A9(bp, ds_114)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11DF:
	Mem215[ss:sp_58:word16] = Mem100[ds_114:0x29E5:word16]
	Mem217[ss:sp_58 - 0x0002:word16] = Mem215[ds_114:0x29E3:word16]
	sp_115 = sp_58 + 0x0002
	word16 di_218
	word16 ax_225 = fn0800_8CAA(ax_96, 0x08, fn0800_3F58(bp, ds_114, wArg00, wArg02, out di_218, out ds_114), si, out dx)
	branch dx != 0x0052 l0800_1203
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11F7:
	branch ax_225 != 0x4E43 l0800_1203
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1203:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11FC:
	fn0800_5374(bp, ds_114, out ds_114)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1230:
	ds_114 = fn0800_4C55(bp, ds_114)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CA:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1243:
	word16 sp_116 = sp_115 - 0x0002
	Mem117[ss:sp_116:word16] = Mem100[ds_114:0x29E1:word16]
	Mem119[ss:sp_116 - 0x0002:word16] = Mem117[ds_114:0x29DF:word16]
	word16 si_120
	selector ds_121
	word16 ax_122 = fn0800_4194(bp, ds_114, wArg00, wArg02, out si_120, out ds_121)
	Mem125[ds_121:0x2A09:word16] = dx
	Mem126[ds_121:0x2A07:word16] = ax_122
	Mem128[ss:sp_116:word16] = Mem126[ds_121:0x29E5:word16]
	Mem130[ss:sp_116 - 0x0002:word16] = Mem128[ds_121:0x29E3:word16]
	word16 si_131
	selector ds_132
	word16 ax_133 = fn0800_4194(bp, ds_121, wArg00, wArg02, out si_131, out ds_132)
	Mem135[ds_132:0x2A05:word16] = dx
	Mem136[ds_132:0x2A03:word16] = ax_133
	si_137 = si_131
	branch si_131 == 0x0000 l0800_127F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1271:
	dx = Mem136[ds_132:0x2A03:word16]
	Mem204[ds_132:0x2A09:word16] = Mem136[ds_132:0x2A05:word16]
	Mem205[ds_132:0x2A07:word16] = dx
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_127F:
	Mem144[ss:sp_116:word16] = Mem136[ds_132:0x29E5:word16]
	Mem146[ss:sp_116 - 0x0002:word16] = Mem144[ds_132:0x29E3:word16]
	byte dl_147
	word16 di_148
	selector ds_149
	fn0800_A614(bp, ds_132, ptrArg00, wArg02, out dl_147, out di_148, out ds_149)
	Mem154[ss:sp_116:word16] = Mem146[ds_149:0x29E1:word16]
	Mem156[ss:sp_116 - 0x0002:word16] = Mem154[ds_149:0x29DF:word16]
	byte dl_157
	selector ds_159
	fn0800_A614(bp, ds_149, ptrArg00, wArg02, out dl_157, out di_158, out ds_159)
	word16 sp_161 = sp_116 + 0x0002
	branch Mem156[ds_159:0x2A25:word16] == 0x0002 l0800_12A6
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A2:
	si_137 = si_131
	branch si_131 == 0x0000 l0800_12B3
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B3:
	si_137 = fn0800_37DF(bp, ds_159, out ds_159)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A6:
	Mem188[ss:sp_116:word16] = ds_159
	Mem192[ss:sp_116 - 0x0002:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_159, ptrArg00)
	sp_161 = sp_116 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B6:
	word16 sp_172 = sp_161 - 0x0002
	Mem173[ss:sp_172:word16] = ds_159
	Mem176[ss:sp_172 - 0x0002:word16] = 0x4541
	Mem178[ss:sp_172 - 0x0004:word16] = si_137
	ds = fn0800_0ABC(bp, ds_159, wArg00, wArg02, wArg04)
	sp_181 = sp_172 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119C:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_12E2(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_12E2_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_12E2:
	word16 di_34
	fn0800_B2EF(ds, 0x0916, ds, out di_34)
	word16 bp_107 = fp - 0x0002
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_1321
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0092(16) Local -0094(16)

l0800_1312:
	word16 di_1405
	fn0800_B2EF(ds, 0x0925, ds, out di_1405)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 0x0002 ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):0x4348 -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0094(16)

l0800_1321:
	word16 di_44
	word16 si_45 = fn0800_B2EF(ds, 0x093A, ds, out di_44)
	word16 dx_58
	word16 di_1228
	word16 si_1229
	selector ds_1226
	word16 ax_62 = fn0800_AA7E(si_45, di_44, ds, 0x4348, ds, 0x093D, ds, out dx_58, out si_1229, out di_1228, out ds_1226)
	Mem64[ds_1226:0x29D1:word16] = dx_58
	Mem65[ds_1226:0x29CF:word16] = ax_62
	word16 sp_1230 = fp - 0x008A
	word16 ax_66 = Mem65[ds_1226:0x2A25:word16]
	branch ax_66 == 0x0003 l0800_1353
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 0x0002 ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1353:
	branch (Mem65[ds_1226:0x29CF:word16] | Mem65[ds_1226:0x29D1:word16]) == 0x0000 l0800_135F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_135F:
	Mem1384[ss:fp - 0x008C:word16] = ds_1226
	Mem1387[ss:fp - 0x008E:word16] = 0x4348
	Mem1390[ss:fp - 0x0090:word16] = 0x0007
	word16 si_1391
	word16 di_1392
	fn0800_0D24(fp - 0x0002, ds_1226, out si_1391, out di_1392, out ds_1226)
	sp_1230 = fp - 0x008A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_135C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_134B:
	branch ax_66 == 0x0004 l0800_1371
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1371:
	branch (Mem65[ds_1226:0x29CF:word16] | Mem65[ds_1226:0x29D1:word16]) == 0x0000 l0800_13C6
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_137A:
	Mem1338[ss:fp - 0x008C:word16] = Mem65[ds_1226:0x29D1:word16]
	Mem1340[ss:fp - 0x008E:word16] = Mem1338[ds_1226:0x29CF:word16]
	sp_1230 = fp - 0x008A
	branch fn0800_3E27(fp - 0x0002, ds_1226, wArg00, wArg02, out si_1229, out di_1228, out ds_1226) != 0x4D5A l0800_13BA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13BA:
	Mem1376[ds_1226:0x29D1:word16] = 0x0000
	Mem1377[ds_1226:0x29CF:word16] = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> di:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_138D:
	Mem1350[ss:fp - 0x008C:word16] = 0x0002
	Mem1355[ss:fp - 0x008E:word16] = 0x0000
	Mem1357[ss:fp - 0x0090:word16] = 0x0000
	Mem1359[ss:fp - 0x0092:word16] = Mem1357[ds_1226:0x29D1:word16]
	Mem1361[ss:fp - 0x0094:word16] = Mem1359[ds_1226:0x29CF:word16]
	fn0800_ACB3(fp - 0x0002, ds_1226, ptrArg00, wArg02, wArg08, out ds_1226)
	Mem1367[ss:fp - 0x008C:word16] = Mem1361[ds_1226:0x29D1:word16]
	Mem1369[ss:fp - 0x008E:word16] = Mem1367[ds_1226:0x29CF:word16]
	word16 ax_1371 = fn0800_AD2F(ds_1226, ptrArg00, wArg02, out si_1229)
	Mem1374[ds_1226:0x29ED:word16] = dx_58
	Mem1375[ds_1226:0x29EB:word16] = ax_1371
	sp_1230 = fp - 0x008A
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> di:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13C6:
	branch (Mem65[ds_1226:0x29CF:word16] | Mem65[ds_1226:0x29D1:word16]) != 0x0000 l0800_13F2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> es:<invalid> al:<invalid> dx:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13CF:
	word16 sp_1318 = sp_1230 - 0x0002
	Mem1319[ss:sp_1318:word16] = ds_1226
	Mem1322[ss:sp_1318 - 0x0002:word16] = 0x0941
	Mem1324[ss:sp_1318 - 0x0004:word16] = ds_1226
	Mem1327[ss:sp_1318 - 0x0006:word16] = 0x4348
	word16 di_1328
	fn0800_4234(si_1229, di_1228, ds_1226, wArg00, wArg02, wArg04, wArg06, out di_1328, out ds_1226)
	Mem1333[ds_1226:0x29D1:word16] = dx_58
	Mem1334[ds_1226:0x29CF:word16] = 0x4348
	Mem1335[ds_1226:0x29ED:word16] = 0x0000
	Mem1336[ds_1226:0x29EB:word16] = 0x0000
	sp_1230 = sp_1318 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> es:<invalid> al:<invalid> dx:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13F2:
	Mem1240[ss:fp - 0x0070:byte] = 0x52
	Mem1241[ss:fp - 0x006F:byte] = 0x4E
	Mem1242[ss:fp - 0x006E:byte] = 0x43
	Mem1243[ss:fp - 0x006D:byte] = 0x41
	Mem1244[ss:fp - 0x006C:byte] = 0x00
	Mem1245[ss:fp - 0x006B:byte] = 0x0C
	Mem1246[ss:fp - 0x0068:byte] = 0x00
	Mem1247[ss:fp - 0x0067:byte] = 0x0C
	Mem1248[ss:fp - 0x0066:byte] = 0x00
	Mem1249[ss:fp - 0x0065:byte] = 0x00
	word16 sp_1253 = sp_1230 - 0x0002
	Mem1254[ss:sp_1253:word16] = 0x0000
	Mem1257[ss:sp_1253 - 0x0002:word16] = 0x0004
	Mem1259[ss:sp_1253 - 0x0004:word16] = ss
	Mem1262[ss:sp_1253 - 0x0006:word16] = fp - 0x0068
	Mem1268[ss:fp - 0x006A:byte] = (byte) (fn0800_2CCF(ds_1226, ptrArg00, wArg04, wArg06) >>u 0x08)
	Mem1273[ss:sp_1253:word16] = 0x0000
	Mem1276[ss:sp_1253 - 0x0002:word16] = 0x0004
	Mem1278[ss:sp_1253 - 0x0004:word16] = ss
	Mem1281[ss:sp_1253 - 0x0006:word16] = fp - 0x0068
	Mem1285[ss:fp - 0x0069:byte] = (byte) fn0800_2CCF(ds_1226, ptrArg00, wArg04, wArg06)
	Mem1287[ss:sp_1253:word16] = Mem1285[ds_1226:0x29D1:word16]
	Mem1289[ss:sp_1253 - 0x0002:word16] = Mem1287[ds_1226:0x29CF:word16]
	Mem1296[ss:sp_1253 - 0x0004:word16] = 0x0000
	Mem1298[ss:sp_1253 - 0x0006:word16] = 0x000C
	Mem1300[ss:sp_1253 - 0x0008:word16] = ss
	Mem1303[ss:sp_1253 - 0x000A:word16] = fp - 0x0070
	selector ds_1304 = fn0800_4152(ds_1226, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
	Mem1308[ss:sp_1253:word16] = Mem1303[ds_1304:0x29D1:word16]
	Mem1310[ss:sp_1253 - 0x0002:word16] = Mem1308[ds_1304:0x29CF:word16]
	Mem1312[ss:sp_1253 - 0x0004:word16] = Mem1310[ds_1304:0x29ED:word16]
	Mem1314[ss:sp_1253 - 0x0006:word16] = Mem1312[ds_1304:0x29EB:word16]
	ds_1226 = fn0800_409C(fp - 0x0002, ds_1304, wArg02, wArg04, wArg06)
	sp_1230 = sp_1253 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1350:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1478:
	word16 sp_85 = sp_1230 - 0x0002
	Mem86[ss:sp_85:word16] = 0x0000
	selector ds_103 = fn0800_1CF6(fp - 0x0002, ds_1226)
	word16 sp_109 = sp_85 + 0x0002
	word16 si_106 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1527:
	word16 sp_110 = sp_109 - 0x0002
	Mem111[ss:sp_110:word16] = ds_103
	Mem114[ss:sp_110 - 0x0002:word16] = 0x4541
	byte dl_117
	selector ds_118
	branch fn0800_2DE2(bp_107, si_106, ds_103, ptrArg00, wArg02, out dl_117, out ds_118) == 0x0000 l0800_1539
	Mem126[ss:sp_110:word16] = ds_118
	Mem129[ss:sp_110 - 0x0002:word16] = 0x4541
	sp_109 = sp_110 + 0x0002
	byte dl_130
	branch fn0800_2DE2(bp_107, si_106, ds_118, ptrArg00, wArg02, out dl_130, out ds_103) == 0x0000 l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1536:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1486:
	Mem1102[ss:sp_110:word16] = ds_103
	Mem1105[ss:sp_110 - 0x0002:word16] = 0x4541
	Mem1107[ss:sp_110 - 0x0004:word16] = ss
	Mem1110[ss:sp_110 - 0x0006:word16] = bp_107 - 0x006E
	fn0800_3509(ds_103, wArg04, wArg06)
	Mem1114[ss:sp_110:word16] = ds_103
	Mem1117[ss:sp_110 - 0x0002:word16] = 0x4541
	Mem1119[ss:sp_110 - 0x0004:word16] = ss
	Mem1122[ss:sp_110 - 0x0006:word16] = bp_107 - 0x0084
	fn0800_35A3(ds_103, wArg04, wArg06)
	Mem1129[ss:sp_110:word16] = ss
	Mem1132[ss:sp_110 - 0x0002:word16] = bp_107 - 0x006E
	word16 dx_1133
	word16 ax_1134 = fn0800_283D(ds_103, ptrArg00, wArg02, out dx_1133)
	Mem1136[ss:bp_107 - 0x0002:word16] = dx_1133
	Mem1137[ss:bp_107 - 0x0004:word16] = ax_1134
	word16 sp_1135 = sp_110 + 0x0002
	branch (ax_1134 | dx_1133) != 0x0000 l0800_14CD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14BC:
	Mem1205[ss:sp_110:word16] = ss
	Mem1208[ss:sp_110 - 0x0002:word16] = bp_107 - 0x006E
	word16 dx_1209
	word16 ax_1211 = fn0800_1F5C(bp_107, ds_103, ptrArg00, wArg02, out dx_1209, out ds_103)
	Mem1214[ss:bp_107 - 0x0002:word16] = dx_1209
	Mem1215[ss:bp_107 - 0x0004:word16] = ax_1211
	sp_1135 = sp_110 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14CD:
	word16 sp_1145 = sp_1135 - 0x0002
	Mem1146[ss:sp_1145:word16] = Mem1137[ss:bp_107 - 0x0002:word16]
	Mem1148[ss:sp_1145 - 0x0002:word16] = Mem1146[ss:bp_107 - 0x0004:word16]
	Mem1150[ss:sp_1145 - 0x0004:word16] = ss
	Mem1153[ss:sp_1145 - 0x0006:word16] = bp_107 - 0x0084
	word16 dx_1154
	word16 ax_1155 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_1154)
	Mem1157[ss:bp_107 - 0x0006:word16] = dx_1154
	Mem1158[ss:bp_107 - 0x0008:word16] = ax_1155
	word16 ax_1159 = ax_1155 | dx_1154
	branch ax_1159 != 0x0000 l0800_14FD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14FD:
	Mem1196[ss:sp_1145:word16] = Mem1158[ss:bp_107 - 0x0006:word16]
	Mem1198[ss:sp_1145 - 0x0002:word16] = Mem1196[ss:bp_107 - 0x0008:word16]
	bp_107 = fn0800_23EC(bp_107, ds_103, wArg00, wArg02, out ds_103)
	sp_109 = sp_1145 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14E9:
	Mem1185[ss:sp_1145:word16] = Mem1158[ss:bp_107 - 0x0002:word16]
	Mem1187[ss:sp_1145 - 0x0002:word16] = Mem1185[ss:bp_107 - 0x0004:word16]
	Mem1189[ss:sp_1145 - 0x0004:word16] = ss
	ax_1159 = bp_107 - 0x0084
	Mem1192[ss:sp_1145 - 0x0006:word16] = ax_1159
	fn0800_2085(ds_103, ptrArg00, wArg02, ptrArg04)
	sp_109 = sp_1145 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1509:
	si_106 = 0x0001
	branch (DPB(ax_1159, 0x00, 8) << 0x08) + DPB(dx_1154, 0x00, 8) >=u 0xFF8C l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1539:
	branch si_106 != 0x0000 l0800_1551
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1551:
	selector ds_204
	word16 bp_205 = fn0800_1E5E(bp_107, si_106, ds_103, out ds_204)
	word16 sp_207 = sp_109 - 0x0002
	Mem208[ss:sp_207:word16] = 0x0001
	selector ds_209 = fn0800_1CF6(bp_205, ds_204)
	Mem213[ss:sp_207:word16] = 0x0001
	Mem218[ss:sp_207 - 0x0002:word16] = 0x0000
	fn0800_2DBF(ds_209, wArg00, wArg02)
	word16 dx_223 = Mem218[ds_209:0x29CF:word16]
	Mem225[ds_209:0x29E1:word16] = Mem218[ds_209:0x29D1:word16]
	Mem226[ds_209:0x29DF:word16] = dx_223
	Mem228[ss:sp_207:word16] = ds_209
	Mem231[ss:sp_207 - 0x0002:word16] = 0x0945
	Mem233[ss:sp_207 - 0x0004:word16] = ds_209
	Mem236[ss:sp_207 - 0x0006:word16] = 0x4477
	word16 di_239
	word16 si_240 = fn0800_37BE(ds_209, wArg00, wArg02, wArg04, wArg06, out di_239)
	Mem244[ss:sp_207:word16] = ds_209
	Mem247[ss:sp_207 - 0x0002:word16] = 0x0941
	Mem249[ss:sp_207 - 0x0004:word16] = ds_209
	Mem252[ss:sp_207 - 0x0006:word16] = 0x4477
	word16 di_253
	selector ds_254
	word16 si_255 = fn0800_4234(si_240, di_239, ds_209, wArg00, wArg02, wArg04, wArg06, out di_253, out ds_254)
	Mem258[ds_254:0x29DD:word16] = dx_223
	Mem259[ds_254:0x29DB:word16] = 0x4477
	ui32 dx_bp_224 = SEQ(dx_223, bp_205)
	word16 sp_256 = sp_207 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1897:
	word16 sp_278 = sp_256 - 0x0002
	Mem279[ss:sp_278:word16] = ds_254
	Mem282[ss:sp_278 - 0x0002:word16] = 0x4541
	word16 sp_286 = sp_278 + 0x0002
	byte dl_283
	branch fn0800_2DE2(bp_205, si_255, ds_254, ptrArg00, wArg02, out dl_283, out ds_254) == 0x0000 l0800_18A9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_18A6:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_15A3:
	Mem348[ss:sp_278 + 0x0002:word16] = ds_254
	Mem351[ss:sp_278:word16] = 0x093D
	Mem353[ss:sp_278 - 0x0002:word16] = ds_254
	Mem356[ss:sp_278 - 0x0004:word16] = 0x4541
	word16 di_357
	selector ds_358
	fn0800_4234(si_255, di_253, ds_254, wArg00, wArg02, wArg04, wArg06, out di_357, out ds_358)
	Mem362[ds_358:0x29E5:word16] = dx_223
	Mem363[ds_358:0x29E3:word16] = 0x4541
	Mem365[ss:sp_278 + 0x0002:word16] = ds_358
	Mem368[ss:sp_278:word16] = 0x4541
	Mem370[ss:sp_278 - 0x0002:word16] = ss
	Mem373[ss:sp_278 - 0x0004:word16] = bp_205 - 0x006E
	fn0800_3509(ds_358, wArg04, wArg06)
	Mem377[ss:sp_278 + 0x0002:word16] = ds_358
	Mem380[ss:sp_278:word16] = 0x4541
	Mem382[ss:sp_278 - 0x0002:word16] = ss
	Mem385[ss:sp_278 - 0x0004:word16] = bp_205 - 0x0084
	ui32 dx_bp_388 = DPB(dx_bp_224, fn0800_35A3(ds_358, wArg04, wArg06), 16)
	Mem392[ss:sp_278 + 0x0002:word16] = ds_358
	Mem395[ss:sp_278:word16] = 0x4541
	fn0800_0C93(bp_205, ds_358, wArg00, wArg02)
	Mem399[ss:sp_278 + 0x0002:word16] = ss
	Mem402[ss:sp_278:word16] = bp_205 - 0x006E
	word16 dx_403
	word16 ax_404 = fn0800_283D(ds_358, ptrArg00, wArg02, out dx_403)
	Mem408[ss:sp_278 + 0x0002:word16] = dx_403
	Mem410[ss:sp_278:word16] = ax_404
	Mem412[ss:sp_278 - 0x0002:word16] = ss
	Mem415[ss:sp_278 - 0x0004:word16] = bp_205 - 0x0084
	word16 dx_417
	word16 ax_418 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_417)
	Mem421[ss:bp_205 - 0x0006:word16] = dx_417
	Mem422[ss:bp_205 - 0x0008:word16] = ax_418
	Mem424[ss:sp_278 + 0x0002:word16] = Mem422[ds_358:0x29D1:word16]
	Mem426[ss:sp_278:word16] = Mem424[ds_358:0x29CF:word16]
	word16 si_427
	selector ds_428
	fn0800_4194(bp_205, ds_358, wArg00, wArg02, out si_427, out ds_428)
	Mem437[ds_428:0x29E9:word16] = SLICE(dx_bp_388 - 0x0000006E, word16, 16)
	Mem438[ds_428:0x29E7:word16] = (word16) (dx_bp_388 - 0x0000006E)
	int32 dx_ax_440 = (int32) Mem438[ds_428:0x29E9:word16]
	word16 dx_444
	word16 ax_445 = fn0800_8C8A((word16) dx_ax_440, 0x08, SLICE(dx_ax_440, word16, 16), bp, out dx_444)
	ptr32 es_di_446 = Mem438[ss:bp_205 - 0x0008:segptr32]
	Mem450[ss:sp_278 + 0x0002:word16] = ax_445
	word16 di_1097 = (word16) es_di_446
	selector es_1083 = SLICE(es_di_446, selector, 16)
	word16 cx_1099 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1632:
	branch cx_1099 == 0x0000 l0800_1634
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1632_1:
	di_1097 = di_1097 + 0x0001
	cx_1099 = cx_1099 - 0x0001
	branch 0x00 != Mem450[es_1083:di_1097:byte] l0800_1632
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1634:
	word16 cx_1093 = ~cx_1099
	word16 di_1079 = di_1097 - cx_1093
	byte Z_1087 = cond(di_1079)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163A:
	branch cx_1093 == 0x0000 l0800_163C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163A_2:
	Z_1087 = cond(0x00 - Mem450[es_1083:di_1079:byte]) (alias)
	di_1079 = di_1079 + 0x0001
	cx_1093 = cx_1093 - 0x0001
	branch 0x00 != Mem450[es_1083:di_1079:byte] l0800_163A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163C:
	branch Z_1087 l0800_1645
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163E:
	di_1079 = 0x0001
	es_1083 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1645:
	Mem505[es_1083:di_1079:byte] = (byte) Mem450[ss:sp_278 + 0x0002:word16]
	ptr32 es_di_509 = Mem505[ss:bp_205 - 0x0008:segptr32]
	Mem513[ss:sp_278 + 0x0002:word16] = (word16) (int32) Mem505[ds_428:0x29E9:word16]
	word16 di_1075 = (word16) es_di_509 + 0x0001
	selector es_1061 = SLICE(es_di_509, selector, 16)
	word16 cx_1077 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165C:
	branch cx_1077 == 0x0000 l0800_165E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165C_1:
	di_1075 = di_1075 + 0x0000
	cx_1077 = cx_1077 - 0x0001
	branch 0x00 != Mem513[es_1061:di_1075:byte] l0800_165C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165E:
	word16 cx_1071 = ~cx_1077
	word16 di_1057 = di_1075 - cx_1071
	byte Z_1065 = cond(di_1057)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1664:
	branch cx_1071 == 0x0000 l0800_1666
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1664_2:
	Z_1065 = cond(0x00 - Mem513[es_1061:di_1057:byte]) (alias)
	di_1057 = di_1057 + 0x0001
	cx_1071 = cx_1071 - 0x0001
	branch 0x00 != Mem513[es_1061:di_1057:byte] l0800_1664
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1666:
	branch Z_1065 l0800_166F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1668:
	di_1057 = 0x0001
	es_1061 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_166F:
	Mem569[es_1061:di_1057 + 0x0001:byte] = (byte) Mem513[ss:sp_278 + 0x0002:word16]
	word16 dx_570 = Mem569[ds_428:0x29E9:word16]
	word16 dx_574
	word16 ax_575 = fn0800_8C8A(Mem569[ds_428:0x29E7:word16], 0x08, dx_570, bp, out dx_574)
	ptr32 es_di_576 = Mem569[ss:bp_205 - 0x0008:segptr32]
	Mem580[ss:sp_278 + 0x0002:word16] = ax_575
	ui32 dx_bp_571 = SEQ(dx_570, bp_205)
	word16 di_1053 = (word16) es_di_576
	selector es_1039 = SLICE(es_di_576, selector, 16)
	word16 cx_1055 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_168E:
	branch cx_1055 == 0x0000 l0800_1690
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_168E_1:
	di_1053 = di_1053 + 0x0001
	cx_1055 = cx_1055 - 0x0001
	branch 0x00 != Mem580[es_1039:di_1053:byte] l0800_168E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1690:
	word16 cx_1049 = ~cx_1055
	word16 di_1035 = di_1053 - cx_1049
	byte Z_1043 = cond(di_1035)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1696:
	branch cx_1049 == 0x0000 l0800_1698
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1696_2:
	Z_1043 = cond(0x00 - Mem580[es_1039:di_1035:byte]) (alias)
	di_1035 = di_1035 + 0x0001
	cx_1049 = cx_1049 - 0x0001
	branch 0x00 != Mem580[es_1039:di_1035:byte] l0800_1696
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1698:
	branch Z_1043 l0800_16A1
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_169A:
	di_1035 = 0x0001
	es_1039 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16A1:
	Mem635[es_1039:di_1035 + 0x0002:byte] = (byte) Mem580[ss:sp_278 + 0x0002:word16]
	ptr32 es_di_636 = Mem635[ss:bp_205 - 0x0008:segptr32]
	word16 di_1031 = (word16) es_di_636
	selector es_1017 = SLICE(es_di_636, selector, 16)
	word16 cx_1033 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B3:
	branch cx_1033 == 0x0000 l0800_16B5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B3_1:
	di_1031 = di_1031 + 0x0001
	cx_1033 = cx_1033 - 0x0001
	branch 0x00 != Mem635[es_1017:di_1031:byte] l0800_16B3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B5:
	word16 cx_1027 = ~cx_1033
	word16 di_1013 = di_1031 - cx_1027
	byte Z_1021 = cond(di_1013)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BB:
	branch cx_1027 == 0x0000 l0800_16BD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BB_2:
	Z_1021 = cond(0x00 - Mem635[es_1017:di_1013:byte]) (alias)
	di_1013 = di_1013 + 0x0001
	cx_1027 = cx_1027 - 0x0001
	branch 0x00 != Mem635[es_1017:di_1013:byte] l0800_16BB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BD:
	branch Z_1021 l0800_16C6
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BF:
	di_1013 = 0x0001
	es_1017 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16C6:
	byte dl_689 = Mem635[ds_428:0x29E7:byte]
	Mem693[es_1017:di_1013 + 0x0003:byte] = dl_689
	Mem699[ds_428:0x2A05:word16] = 0x0000
	Mem700[ds_428:0x2A03:word16] = 0x0000
	Mem703[ss:sp_278 + 0x0002:word16] = Mem700[ds_428:0x29E5:word16]
	Mem705[ss:sp_278:word16] = Mem703[ds_428:0x29E3:word16]
	word16 dx_690 = DPB(dx_574, dl_689, 0)
	selector ds_707
	word16 ax_708 = fn0800_4194(bp_205, ds_428, wArg00, wArg02, out si_255, out ds_707)
	Mem710[ds_707:0x2A09:word16] = dx_690
	Mem711[ds_707:0x2A07:word16] = ax_708
	Mem716[ss:sp_278 + 0x0002:word16] = 0x0000
	Mem718[ss:sp_278:word16] = Mem716[ds_707:0x29E9:word16]
	Mem720[ss:sp_278 - 0x0002:word16] = Mem718[ds_707:0x29E7:word16]
	Mem722[ss:sp_278 - 0x0004:word16] = Mem720[ds_707:0x29E1:word16]
	Mem724[ss:sp_278 - 0x0006:word16] = Mem722[ds_707:0x29DF:word16]
	ui32 dx_bp_691 = DPB(dx_bp_571, dl_689, 16)
	word16 di_694 = 0x0001
	selector ds_726
	word16 ax_727 = fn0800_ACB3(bp_205, ds_707, ptrArg00, wArg02, wArg08, out ds_726)
	word16 sp_728 = sp_278 + 0x0004
	branch Mem724[ds_726:0x2A09:word16] >=u 0x0000 l0800_171B
// DataOut: bp di ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_171B:
	branch Mem724[ds_726:0x2A09:word16] >u 0x0000 l0800_1724
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_171D:
	branch Mem724[ds_726:0x2A07:word16] <=u 0x0012 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1724:
	branch Mem724[ds_726:0x2A21:word16] == 0x0000 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_172B:
	Mem922[ss:sp_278 + 0x0002:word16] = Mem724[ds_726:0x29E5:word16]
	Mem924[ss:sp_278:word16] = Mem922[ds_726:0x29E3:word16]
	word16 dx_927 = fn0800_3F58(bp_205, ds_726, wArg00, wArg02, out di_694, out ds_726)
	dx_bp_691 = SEQ(dx_927, bp_205) (alias)
	sp_728 = sp_278 + 0x0004
	word16 ax_933 = fn0800_8CAA(ax_727, 0x08, dx_927, bp, out dx_690)
	branch dx_690 != 0x0052 l0800_1748
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1743:
	branch ax_933 == 0x4E43 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1748:
	word16 ax_1003
	Mem940[ss:sp_278 + 0x0002:word16] = Mem924[ds_726:0x2A09:word16]
	Mem942[ss:sp_278:word16] = Mem940[ds_726:0x2A07:word16]
	Mem944[ss:sp_278 - 0x0002:word16] = Mem942[ds_726:0x2A09:word16]
	Mem946[ss:sp_278 - 0x0004:word16] = Mem944[ds_726:0x2A07:word16]
	ds_726 = fn0800_75EA(bp_205, ds_726, wArg00, wArg02, wArg04, wArg06)
	dx_690 = Mem946[ds_726:0x2A03:word16]
	sp_728 = sp_278 + 0x0004
	word16 ax_949 = Mem946[ds_726:0x2A05:word16]
	dx_bp_691 = SEQ(dx_690, bp_205) (alias)
	branch ax_949 <u Mem946[ds_726:0x2A09:word16] l0800_1778
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_176B:
	branch ax_949 != Mem946[ds_726:0x2A09:word16] l0800_1773
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_176D:
	branch dx_690 <u Mem946[ds_726:0x2A07:word16] l0800_1778
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1778:
	ax_1003 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1773:
	ax_1003 = 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_177A:
	di_694 = ax_1003
	branch ax_1003 == 0x0000 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1780:
	Mem973[ss:sp_278 + 0x0002:word16] = 0x0001
	dx_690 = -Mem973[ds_726:0x2A03:word16]
	Mem983[ss:sp_278:word16] = -Mem973[ds_726:0x2A05:word16] - (dx_690 == 0x0000)
	Mem985[ss:sp_278 - 0x0002:word16] = dx_690
	Mem987[ss:sp_278 - 0x0004:word16] = Mem985[ds_726:0x29E1:word16]
	Mem989[ss:sp_278 - 0x0006:word16] = Mem987[ds_726:0x29DF:word16]
	fn0800_ACB3(bp_205, ds_726, ptrArg00, wArg02, wArg08, out ds_726)
	dx_bp_691 = SEQ(dx_690, bp_205) (alias)
	sp_728 = sp_278 + 0x0004
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1718:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A2:
	branch di_694 != 0x0000 l0800_17A9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A9:
	word16 ax_816 = Mem724[ds_726:0x2A09:word16]
	word16 dx_817 = Mem724[ds_726:0x2A07:word16]
	Mem819[ds_726:0x2A05:word16] = ax_816
	Mem820[ds_726:0x2A03:word16] = dx_817
	word16 sp_821 = sp_728 - 0x0002
	Mem822[ss:sp_821:word16] = Mem820[ds_726:0x29E5:word16]
	Mem824[ss:sp_821 - 0x0002:word16] = Mem822[ds_726:0x29E3:word16]
	selector ds_825 = fn0800_BA67(ds_726, wArg00, wArg02)
	word16 sp_826 = sp_821 + 0x0002
	branch Mem824[ds_825:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17CC:
	branch Mem824[ds_825:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17CE:
	branch Mem824[ds_825:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17D5:
	Mem897[ss:sp_821:word16] = Mem824[ds_825:0x29E5:word16]
	Mem899[ss:sp_821 - 0x0002:word16] = Mem897[ds_825:0x29E3:word16]
	word16 di_900
	word16 dx_902 = fn0800_3F58(bp_205, ds_825, wArg00, wArg02, out di_900, out ds_825)
	dx_bp_691 = SEQ(dx_902, bp_205) (alias)
	sp_826 = sp_821 + 0x0002
	word16 ax_908 = fn0800_8CAA(ax_816, 0x08, dx_902, bp, out dx_690)
	branch dx_690 != 0x0052 l0800_17F2
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17ED:
	branch ax_908 == 0x4E43 l0800_181E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17F2:
	word16 sp_870 = sp_826 - 0x0002
	Mem871[ss:sp_870:word16] = Mem824[ds_825:0x29D1:word16]
	Mem873[ss:sp_870 - 0x0002:word16] = Mem871[ds_825:0x29CF:word16]
	Mem878[ss:sp_870 - 0x0004:word16] = 0x524E
	Mem880[ss:sp_870 - 0x0006:word16] = 0x4300
	selector ds_881 = fn0800_409C(bp_205, ds_825, wArg02, wArg04, wArg06)
	Mem885[ss:sp_870:word16] = Mem880[ds_881:0x29D1:word16]
	Mem887[ss:sp_870 - 0x0002:word16] = Mem885[ds_881:0x29CF:word16]
	Mem889[ss:sp_870 - 0x0004:word16] = Mem887[ds_881:0x2A09:word16]
	Mem891[ss:sp_870 - 0x0006:word16] = Mem889[ds_881:0x2A07:word16]
	dx_690 = 0x4300
	dx_bp_691 = SEQ(0x4300, bp_205) (alias)
	ds_825 = fn0800_409C(bp_205, ds_881, wArg02, wArg04, wArg06)
	sp_826 = sp_870 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_181E:
	word16 sp_844 = sp_826 - 0x0002
	Mem845[ss:sp_844:word16] = Mem824[ds_825:0x2A09:word16]
	Mem847[ss:sp_844 - 0x0002:word16] = Mem845[ds_825:0x2A07:word16]
	Mem849[ss:sp_844 - 0x0004:word16] = Mem847[ds_825:0x29D1:word16]
	Mem851[ss:sp_844 - 0x0006:word16] = Mem849[ds_825:0x29CF:word16]
	Mem853[ss:sp_844 - 0x0008:word16] = Mem851[ds_825:0x29E5:word16]
	Mem855[ss:sp_844 - 0x000A:word16] = Mem853[ds_825:0x29E3:word16]
	ds_726 = fn0800_3B0A(bp_205, ds_825, wArg08, wArg0A)
	sp_728 = sp_844 + 0x0002
	si_255 = 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_183F:
	word16 sp_762 = sp_728 - 0x0002
	Mem763[ss:sp_762:word16] = Mem724[ds_726:0x29D1:word16]
	Mem765[ss:sp_762 - 0x0002:word16] = Mem763[ds_726:0x29CF:word16]
	Mem767[ss:sp_762 - 0x0004:word16] = Mem765[ds_726:0x29ED:word16]
	Mem769[ss:sp_762 - 0x0006:word16] = Mem767[ds_726:0x29EB:word16]
	selector ds_770 = fn0800_409C(bp_205, ds_726, wArg02, wArg04, wArg06)
	Mem774[ss:sp_762:word16] = Mem769[ds_770:0x29E5:word16]
	Mem776[ss:sp_762 - 0x0002:word16] = Mem774[ds_770:0x29E3:word16]
	byte dl_777
	selector ds_779
	fn0800_A614(bp_205, ds_770, ptrArg00, wArg02, out dl_777, out di_253, out ds_779)
	Mem784[ss:sp_762:word16] = ds_779
	Mem787[ss:sp_762 - 0x0002:word16] = 0x4541
	Mem789[ss:sp_762 - 0x0004:word16] = si_255
	ds_254 = fn0800_0ABC(bp_205, ds_779, wArg00, wArg02, wArg04)
	sp_256 = sp_762 + 0x0002
	dx_223 = DPB(dx_690, 0x00, 8) (alias)
	dx_bp_224 = DPB(dx_bp_691, 0x00, 24) (alias)
	branch dx_223 <u 0x4174 l0800_1897
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_188A:
	Mem808[ss:sp_762:word16] = ds_254
	Mem811[ss:sp_762 - 0x0002:word16] = 0x0952
	word16 di_812
	si_255 = fn0800_B2EF(ds_254, wArg00, wArg02, out di_812)
	sp_286 = sp_762 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_18A9:
	word16 sp_308 = sp_286 - 0x0002
	Mem309[ss:sp_308:word16] = Mem282[ds_254:0x29DD:word16]
	Mem311[ss:sp_308 - 0x0002:word16] = Mem309[ds_254:0x29DB:word16]
	byte dl_312
	word16 di_313
	selector ds_314
	fn0800_A614(bp_205, ds_254, ptrArg00, wArg02, out dl_312, out di_313, out ds_314)
	Mem319[ss:sp_308:word16] = ds_314
	Mem323[ss:sp_308 - 0x0002:word16] = 0x4477
	fn0800_8F7F(0x77, ds_314, ptrArg00)
	selector ds_328
	word16 bp_329 = fn0800_1E5E(bp_205, si_255, ds_314, out ds_328)
	Mem331[ss:sp_308:word16] = Mem323[ds_328:0x29D1:word16]
	Mem333[ss:sp_308 - 0x0002:word16] = Mem331[ds_328:0x29CF:word16]
	byte dl_334
	word16 di_335
	selector ds_336
	fn0800_A614(bp_329, ds_328, ptrArg00, wArg02, out dl_334, out di_335, out ds_336)
	return dl_334
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_153D:
	word16 sp_183 = sp_109 - 0x0002
	Mem184[ss:sp_183:word16] = Mem129[ds_103:0x29D1:word16]
	Mem186[ss:sp_183 - 0x0002:word16] = Mem184[ds_103:0x29CF:word16]
	byte dl_187
	word16 di_188
	selector ds_189
	fn0800_A614(bp_107, ds_103, ptrArg00, wArg02, out dl_187, out di_188, out ds_189)
	return dl_187
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_12E2_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_18D9(word16 bp, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_18D9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_18D9:
	word16 di_31
	word16 si_32 = fn0800_B2EF(ds, 0x096C, ds, out di_31)
	word16 dx_45
	word16 di_47
	word16 si_266
	selector ds_268
	word16 ax_49 = fn0800_AA7E(si_32, di_31, ds, 0x4348, ds, 0x097D, ds, out dx_45, out si_266, out di_47, out ds_268)
	Mem51[ds_268:0x29D1:word16] = dx_45
	Mem52[ds_268:0x29CF:word16] = ax_49
	word16 bp_129 = fp - 0x0002
	word16 sp_270 = fp - 0x0072
	branch (ax_49 | dx_45) != 0x0000 l0800_192A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_191B:
	Mem259[ss:fp - 0x0074:word16] = ds_268
	Mem262[ss:fp - 0x0076:word16] = 0x4348
	Mem265[ss:fp - 0x0078:word16] = 0x0007
	word16 di_267
	fn0800_0D24(fp - 0x0002, ds_268, out si_266, out di_267, out ds_268)
	sp_270 = fp - 0x0072
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):ds -118(fp):0x097D -116(fp):ds -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_192A:
	word16 sp_64 = sp_270 - 0x0002
	Mem65[ss:sp_64:word16] = 0x0001
	selector ds_203 = fn0800_1CF6(fp - 0x0002, ds_268)
	Mem73[ss:sp_64:word16] = 0x0000
	Mem75[ss:sp_64 - 0x0002:word16] = 0x0000
	fn0800_2DBF(ds_203, wArg00, wArg02)
	word16 sp_204 = sp_64 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19BC:
	word16 sp_95 = sp_204 - 0x0002
	Mem96[ss:sp_95:word16] = ss
	Mem99[ss:sp_95 - 0x0002:word16] = bp_129 - 0x006E
	Mem101[ss:sp_95 - 0x0004:word16] = ss
	Mem104[ss:sp_95 - 0x0006:word16] = bp_129 - 0x0008
	Mem106[ss:sp_95 - 0x0008:word16] = ss
	Mem109[ss:sp_95 - 0x000A:word16] = bp_129 - 0x0004
	selector ds_110
	branch fn0800_29C5(bp_129, si_266, ds_203, out ds_110) == 0x0000 l0800_19D8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> al:<invalid> Sequence es:di:<invalid> di:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19D8:
	selector ds_240
	word16 bp_241 = fn0800_1E5E(bp_129, si_266, ds_110, out ds_240)
	Mem243[ss:sp_95:word16] = Mem109[ds_240:0x29D1:word16]
	Mem245[ss:sp_95 - 0x0002:word16] = Mem243[ds_240:0x29CF:word16]
	byte dl_246
	word16 di_247
	selector ds_248
	fn0800_A614(bp_241, ds_240, ptrArg00, wArg02, out dl_246, out di_247, out ds_248)
	return dl_246
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

fn0800_18D9_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

l0800_19D5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1940:
	Mem118[ss:sp_95:word16] = ss
	Mem121[ss:sp_95 - 0x0002:word16] = bp_129 - 0x006E
	fn0800_0C93(bp_129, ds_110, wArg00, wArg02)
	Mem125[ss:sp_95:word16] = Mem121[ss:bp_129 - 0x0006:word16]
	Mem127[ss:sp_95 - 0x0002:word16] = Mem125[ss:bp_129 - 0x0008:word16]
	selector ds_128
	bp_129 = fn0800_23EC(bp_129, ds_110, wArg00, wArg02, out ds_128)
	Mem133[ss:sp_95:word16] = Mem127[ss:bp_129 - 0x0006:word16]
	Mem135[ss:sp_95 - 0x0002:word16] = Mem133[ss:bp_129 - 0x0008:word16]
	selector ds_137 = fn0800_22FE(ds_128, ptrArg00, wArg02)
	ptr32 es_di_139 = Mem135[ss:bp_129 - 0x0004:segptr32]
	word16 sp_138 = sp_95 + 0x0002
	selector es_141 = SLICE(es_di_139, selector, 16)
	word16 di_142 = (word16) es_di_139 + 0x0002
	word16 cx_148 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E:
	branch cx_148 == 0x0000 l0800_1970
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E_1:
	di_142 = di_142 + 0x0001
	cx_148 = cx_148 - 0x0001
	branch 0x00 != Mem135[es_141:di_142:byte] l0800_196E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1970:
	word16 cx_156 = ~cx_148
	word16 di_159 = di_142 - cx_156
	byte Z_163 = cond(di_159)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976:
	branch cx_156 == 0x0000 l0800_1978
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976_2:
	Z_163 = cond(0x00 - Mem135[es_141:di_159:byte]) (alias)
	di_159 = di_159 + 0x0001
	cx_156 = cx_156 - 0x0001
	branch 0x00 != Mem135[es_141:di_159:byte] l0800_1976
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1978:
	branch Z_163 l0800_1981
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_197A:
	di_159 = 0x0001
	es_141 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1981:
	branch Mem135[es_141:di_159:byte] != 0x00 l0800_19AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_198D:
	word16 dx_207 = Mem135[ds_137:0x2E51:word16]
	branch Mem135[ds_137:0x2E53:word16] != Mem135[ss:bp_129 - 0x0002:word16] l0800_19A1
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_199C:
	branch dx_207 + 0x0008 == Mem135[ss:bp_129 - 0x0004:word16] l0800_19AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19A1:
	Mem214[ss:sp_95:word16] = Mem135[ss:bp_129 - 0x0002:word16]
	Mem216[ss:sp_95 - 0x0002:word16] = Mem214[ss:bp_129 - 0x0004:word16]
	ds_137 = fn0800_2201(ds_137, ptrArg00, wArg02)
	sp_138 = sp_95 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19AD:
	word16 sp_194 = sp_138 - 0x0002
	Mem195[ss:sp_194:word16] = ss
	Mem198[ss:sp_194 - 0x0002:word16] = bp_129 - 0x006E
	Mem201[ss:sp_194 - 0x0004:word16] = 0x000D
	ds_203 = fn0800_0ABC(bp_129, ds_137, wArg00, wArg02, wArg04)
	sp_204 = sp_194 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)



byte fn0800_19EE(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_19EE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_19EE:
	word16 di_34
	word16 si_35 = fn0800_B2EF(ds, 0x0986, ds, out di_34)
	word16 dx_48
	word16 di_50
	selector ds_1015
	word16 si_1013
	word16 ax_52 = fn0800_AA7E(si_35, di_34, ds, 0x4348, ds, 0x0997, ds, out dx_48, out si_1013, out di_50, out ds_1015)
	Mem54[ds_1015:0x29D1:word16] = dx_48
	Mem55[ds_1015:0x29CF:word16] = ax_52
	word16 bp_146 = fp - 0x0002
	word16 sp_1017 = fp - 0x0078
	branch (ax_52 | dx_48) != 0x0000 l0800_1A40
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1A31:
	Mem1006[ss:fp - 0x007A:word16] = ds_1015
	Mem1009[ss:fp - 0x007C:word16] = 0x4348
	Mem1012[ss:fp - 0x007E:word16] = 0x0007
	word16 di_1014
	fn0800_0D24(fp - 0x0002, ds_1015, out si_1013, out di_1014, out ds_1015)
	sp_1017 = fp - 0x0078
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):ds -124(fp):0x0997 -122(fp):ds -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A40:
	branch Mem55[ds_1015:0x2A27:word16] != Mem55[ds_1015:0x269A:word16] l0800_1A7D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A49:
	word16 dx_991 = Mem55[ds_1015:0x0982:word16]
	Mem992[ss:fp - 0x000C:word16] = Mem55[ds_1015:0x0984:word16]
	Mem993[ss:fp - 0x000E:word16] = dx_991
	ptr32 es_bx_996 = Mem993[ds_1015:0x269C:segptr32]
	Mem0[es_bx_996 + 0x0006:word16] = ss
	Mem0[es_bx_996 + 0x0004:word16] = fp - 0x000E
	Mem1002[ds_1015:0x2A27:word16] = 0x0001
	Mem1003[ds_1015:0x269A:word16] = 0x0002
	Mem1004[ds_1015:0x2A1B:word16] = 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A7D:
	word16 sp_78 = sp_1017 - 0x0002
	Mem79[ss:sp_78:word16] = 0x0000
	Mem83[ss:sp_78 - 0x0002:word16] = 0x0001
	fn0800_2DBF(ds_1015, wArg00, wArg02)
	Mem90[ss:sp_78:word16] = 0x0001
	selector ds_108 = fn0800_1CF6(fp - 0x0002, ds_1015)
	word16 sp_109 = sp_78 + 0x0002
	branch Mem90[ds_108:0x2A25:word16] == 0x0007 l0800_1A9E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9E:
	Mem977[ss:sp_78:word16] = ds_108
	Mem980[ss:sp_78 - 0x0002:word16] = 0x099B
	Mem982[ss:sp_78 - 0x0004:word16] = ds_108
	Mem985[ss:sp_78 - 0x0006:word16] = 0x44DC
	word16 di_986
	si_1013 = fn0800_37BE(ds_108, wArg00, wArg02, wArg04, wArg06, out di_986)
	sp_109 = sp_78 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9B:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CB4:
	word16 sp_111 = sp_109 - 0x0002
	Mem112[ss:sp_111:word16] = ss
	Mem115[ss:sp_111 - 0x0002:word16] = bp_146 - 0x0072
	Mem117[ss:sp_111 - 0x0004:word16] = ss
	Mem120[ss:sp_111 - 0x0006:word16] = bp_146 - 0x0008
	Mem122[ss:sp_111 - 0x0008:word16] = ss
	Mem125[ss:sp_111 - 0x000A:word16] = bp_146 - 0x0004
	selector ds_126
	branch fn0800_29C5(bp_146, si_1013, ds_108, out ds_126) == 0x0000 l0800_1CD0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CD0:
	Mem934[ss:sp_111:word16] = Mem125[ds_126:0x29D1:word16]
	Mem936[ss:sp_111 - 0x0002:word16] = Mem934[ds_126:0x29CF:word16]
	word16 di_938
	selector ds_939
	byte dl_937
	fn0800_A614(bp_146, ds_126, ptrArg00, wArg02, out dl_937, out di_938, out ds_939)
	branch Mem936[ds_939:0x2A25:word16] != 0x0007 l0800_1CF0
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CE5:
	Mem960[ss:sp_111:word16] = ds_939
	Mem964[ss:sp_111 - 0x0002:word16] = 0x44DC
	dl_937 = fn0800_8F7F(0xDC, ds_939, ptrArg00)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CF0:
	return dl_937
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_19EE_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CCD:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AB1:
	Mem134[ss:sp_111:word16] = ss
	Mem137[ss:sp_111 - 0x0002:word16] = bp_146 - 0x0072
	fn0800_0C93(bp_146, ds_126, wArg00, wArg02)
	Mem141[ss:sp_111:word16] = Mem137[ss:bp_146 - 0x0006:word16]
	Mem143[ss:sp_111 - 0x0002:word16] = Mem141[ss:bp_146 - 0x0008:word16]
	word16 dx_145
	selector ds_147
	fn0800_24FE(bp_146, ds_126, ptrArg00, out dx_145, out bp_146, out ds_147)
	Mem156[ss:sp_111:word16] = 0x0000
	ptr32 es_di_157 = Mem156[ss:bp_146 - 0x0008:segptr32]
	word16 di_1019 = (word16) es_di_157
	selector es_159 = SLICE(es_di_157, selector, 16)
	word16 cx_160 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1:
	branch cx_160 == 0x0000 l0800_1AD3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1_1:
	di_1019 = di_1019 + 0x0001
	cx_160 = cx_160 - 0x0001
	branch 0x00 != Mem156[es_159:di_1019:byte] l0800_1AD1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD3:
	word16 cx_170 = ~cx_160
	word16 di_1020 = di_1019 - cx_170
	byte Z_179 = cond(di_1020)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9:
	branch cx_170 == 0x0000 l0800_1ADB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9_2:
	Z_179 = cond(0x00 - Mem156[es_159:di_1020:byte]) (alias)
	di_1020 = di_1020 + 0x0001
	cx_170 = cx_170 - 0x0001
	branch 0x00 != Mem156[es_159:di_1020:byte] l0800_1AD9
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADB:
	branch Z_179 l0800_1AE4
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADD:
	di_1020 = 0x0001
	es_159 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AE4:
	ptr32 es_di_207 = Mem156[ss:bp_146 - 0x0008:segptr32]
	Mem211[ss:sp_111 - 0x0002:word16] = (int16) Mem156[es_159:di_1020:byte] << 0x08
	word16 di_1021 = (word16) es_di_207
	selector es_209 = SLICE(es_di_207, selector, 16)
	word16 cx_217 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB:
	branch cx_217 == 0x0000 l0800_1AFD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB_1:
	di_1021 = di_1021 + 0x0001
	cx_217 = cx_217 - 0x0001
	branch 0x00 != Mem211[es_209:di_1021:byte] l0800_1AFB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFD:
	word16 cx_227 = ~cx_217
	word16 di_232 = di_1021 - cx_227
	byte Z_236 = cond(di_232)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03:
	branch cx_227 == 0x0000 l0800_1B05
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03_2:
	Z_236 = cond(0x00 - Mem211[es_209:di_1022:byte]) (alias)
	di_232 = di_1022 + 0x0001
	cx_227 = cx_227 - 0x0001
	di_1022 = di_232
	branch 0x00 != Mem211[es_209:di_1022:byte] l0800_1B03
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B05:
	branch Z_236 l0800_1B0E
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B07:
	es_209 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B0E:
	ptr32 es_di_271 = Mem211[ss:bp_146 - 0x0008:segptr32]
	Mem275[ss:sp_111 - 0x0002:word16] = Mem211[ss:sp_111 - 0x0002:word16] + DPB(es_209, 0x00, 8)
	Mem277[ss:sp_111 - 0x0004:word16] = 0x0000
	word16 di_1023 = (word16) es_di_271
	selector es_273 = SLICE(es_di_271, selector, 16)
	word16 cx_278 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26:
	branch cx_278 == 0x0000 l0800_1B28
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26_1:
	di_1023 = di_1023 + 0x0001
	cx_278 = cx_278 - 0x0001
	branch 0x00 != Mem277[es_273:di_1023:byte] l0800_1B26
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B28:
	word16 cx_288 = ~cx_278
	word16 di_1024 = di_1023 - cx_288
	byte Z_297 = cond(di_1024)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E:
	branch cx_288 == 0x0000 l0800_1B30
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E_2:
	Z_297 = cond(0x00 - Mem277[es_273:di_1024:byte]) (alias)
	di_1024 = di_1024 + 0x0001
	cx_288 = cx_288 - 0x0001
	branch 0x00 != Mem277[es_273:di_1024:byte] l0800_1B2E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B30:
	branch Z_297 l0800_1B39
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B32:
	di_1024 = 0x0001
	es_273 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B39:
	ptr32 es_di_325 = Mem277[ss:bp_146 - 0x0008:segptr32]
	Mem329[ss:sp_111 - 0x0006:word16] = (int16) Mem277[es_273:di_1024 + 0x0002:byte] << 0x08
	word16 di_1025 = (word16) es_di_325
	selector es_327 = SLICE(es_di_325, selector, 16)
	word16 cx_335 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50:
	branch cx_335 == 0x0000 l0800_1B52
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50_1:
	di_1025 = di_1025 + 0x0001
	cx_335 = cx_335 - 0x0001
	branch 0x00 != Mem329[es_327:di_1025:byte] l0800_1B50
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B52:
	word16 cx_345 = ~cx_335
	word16 di_1026 = di_1025 - cx_345
	byte Z_354 = cond(di_1026)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58:
	branch cx_345 == 0x0000 l0800_1B5A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58_2:
	Z_354 = cond(0x00 - Mem329[es_327:di_1026:byte]) (alias)
	di_1026 = di_1026 + 0x0001
	cx_345 = cx_345 - 0x0001
	branch 0x00 != Mem329[es_327:di_1026:byte] l0800_1B58
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5A:
	branch Z_354 l0800_1B63
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5C:
	di_1026 = 0x0001
	es_327 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B63:
	word16 ax_388 = Mem329[ss:sp_111 - 0x0004:word16] + (Mem329[ss:sp_111 - 0x0006:word16] + DPB(es_327, 0x00, 8))
	word16 dx_393 = Mem329[ss:sp_111 - 0x0002:word16] + (ax_388 <u 0x0000)
	Mem396[ss:sp_111 - 0x0002:word16] = dx_393
	Mem398[ss:sp_111 - 0x0004:word16] = ax_388
	Mem400[ss:sp_111 - 0x0006:word16] = Mem398[ds_147:0x29D1:word16]
	Mem402[ss:sp_111 - 0x0008:word16] = Mem400[ds_147:0x29CF:word16]
	selector ds_404
	fn0800_ACB3(bp_146, ds_147, ptrArg00, wArg02, wArg08, out ds_404)
	word16 di_376 = di_1026 - 0x0001
	word16 sp_406 = sp_111 + 0x0002
	branch Mem402[ds_404:0x2A25:word16] != 0x0007 l0800_1B92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B92:
	Mem482[ss:sp_111:word16] = ds_404
	selector es_483 = Mem482[ss:sp_111:selector]
	Mem488[ss:sp_111:word16] = es_483
	Mem490[ss:sp_111 - 0x0002:word16] = 0x44DC
	word16 di_1027 = 0x427E
	word16 cx_498 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1:
	branch cx_498 == 0x0000 l0800_1BA3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1_1:
	di_1027 = di_1027 + 0x0001
	cx_498 = cx_498 - 0x0001
	branch 0x00 != Mem490[es_483:di_1027:byte] l0800_1BA1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA3:
	word16 di_517 = Mem490[ss:sp_111 - 0x0002:word16]
	selector es_520 = Mem490[ss:sp_111:selector]
	Mem525[ss:sp_111:word16] = ds_404
	word16 cx_508 = ~cx_498
	word16 cx_510 = cx_508 >>u 0x0001
	word16 si_516 = di_1027 - cx_508
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2:
	branch cx_510 == 0x0000 l0800_1BB4
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB4:
	word16 cx_539 = cx_510 * 0x0002 + (cx_508 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6:
	branch cx_539 == 0x0000 l0800_1BB8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB8:
	selector ds_554 = Mem525[ss:sp_111:selector]
	word16 sp_555 = sp_111 + 0x0002
	branch Mem525[ds_554:0x2A25:word16] != 0x0008 l0800_1C29
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC0:
	branch Mem525[ds_554:0x427E:byte] == 0x00 l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC7:
	branch Mem525[ss:bp_146 - 0x0072:byte] != 0x5C l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BFC:
	Mem664[ss:sp_111:word16] = ss
	Mem667[ss:sp_111 - 0x0002:word16] = bp_146 - 0x0072
	Mem669[ss:sp_111 - 0x0004:word16] = ds_554
	selector es_670 = Mem669[ss:sp_111 - 0x0004:selector]
	word16 di_1030 = 0x44DC
	word16 cx_680 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B:
	branch cx_680 == 0x0000 l0800_1C0D
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B_1:
	di_1030 = di_1030 + 0x0001
	cx_680 = cx_680 - 0x0001
	branch 0x00 != Mem669[es_670:di_1030:byte] l0800_1C0B
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0D:
	word16 cx_690 = ~cx_680
	word16 di_1031 = di_1030 - cx_690
	byte Z_699 = cond(di_1031)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13:
	branch cx_690 == 0x0000 l0800_1C15
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13_2:
	Z_699 = cond(0x00 - Mem669[es_670:di_1031:byte]) (alias)
	di_1031 = di_1031 + 0x0001
	cx_690 = cx_690 - 0x0001
	branch 0x00 != Mem669[es_670:di_1031:byte] l0800_1C13
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C15:
	branch Z_699 l0800_1C1E
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C17:
	di_1031 = 0x0001
	es_670 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C1E:
	Mem726[ss:sp_111 - 0x0004:word16] = es_670
	Mem728[ss:sp_111 - 0x0006:word16] = di_1031 - 0x0001
	fn0800_3509(ds_554, wArg04, wArg06)
	sp_555 = sp_111 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BCD:
	Mem755[ss:sp_111:word16] = ss
	Mem758[ss:sp_111 - 0x0002:word16] = bp_146 - 0x0071
	Mem760[ss:sp_111 - 0x0004:word16] = ds_554
	selector es_761 = Mem760[ss:sp_111 - 0x0004:selector]
	word16 di_1032 = 0x44DC
	word16 cx_771 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC:
	branch cx_771 == 0x0000 l0800_1BDE
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC_1:
	di_1032 = di_1032 + 0x0001
	cx_771 = cx_771 - 0x0001
	branch 0x00 != Mem760[es_761:di_1032:byte] l0800_1BDC
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDE:
	word16 cx_781 = ~cx_771
	word16 di_1033 = di_1032 - cx_781
	byte Z_790 = cond(di_1033)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4:
	branch cx_781 == 0x0000 l0800_1BE6
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4_2:
	Z_790 = cond(0x00 - Mem760[es_761:di_1033:byte]) (alias)
	di_1033 = di_1033 + 0x0001
	cx_781 = cx_781 - 0x0001
	branch 0x00 != Mem760[es_761:di_1033:byte] l0800_1BE4
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE6:
	branch Z_790 l0800_1BEF
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE8:
	di_1033 = 0x0001
	es_761 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BEF:
	Mem817[ss:sp_111 - 0x0004:word16] = es_761
	Mem819[ss:sp_111 - 0x0006:word16] = di_1033 - 0x0001
	fn0800_3509(ds_554, wArg04, wArg06)
	sp_555 = sp_111 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C29:
	word16 sp_561 = sp_555 - 0x0002
	Mem562[ss:sp_561:word16] = ds_554
	Mem565[ss:sp_561 - 0x0002:word16] = 0x44DC
	si_1013 = fn0800_3678(bp_146, ds_554, ptrArg00, wArg02, out ds_404)
	Mem570[ss:sp_561:word16] = ss
	Mem573[ss:sp_561 - 0x0002:word16] = bp_146 - 0x0072
	Mem575[ss:sp_561 - 0x0004:word16] = ds_404
	selector es_576 = Mem575[ss:sp_561 - 0x0004:selector]
	word16 di_1028 = 0x44DC
	word16 cx_586 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43:
	branch cx_586 == 0x0000 l0800_1C45
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43_1:
	di_1028 = di_1028 + 0x0001
	cx_586 = cx_586 - 0x0001
	branch 0x00 != Mem575[es_576:di_1028:byte] l0800_1C43
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C45:
	word16 cx_596 = ~cx_586
	word16 di_1029 = di_1028 - cx_596
	byte Z_605 = cond(di_1029)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B:
	branch cx_596 == 0x0000 l0800_1C4D
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B_2:
	Z_605 = cond(0x00 - Mem575[es_576:di_1029:byte]) (alias)
	di_1029 = di_1029 + 0x0001
	cx_596 = cx_596 - 0x0001
	branch 0x00 != Mem575[es_576:di_1029:byte] l0800_1C4B
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4D:
	branch Z_605 l0800_1C56
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4F:
	di_1029 = 0x0001
	es_576 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C56:
	Mem632[ss:sp_561 - 0x0004:word16] = es_576
	di_376 = di_1029 - 0x0001
	Mem634[ss:sp_561 - 0x0006:word16] = di_376
	fn0800_35A3(ds_404, wArg04, wArg06)
	sp_406 = sp_561 + 0x0002
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6_1:
	Mem548[es_520:di_517:byte] = Mem525[es_483:si_516:byte]
	si_516 = si_516 + 0x0001
	di_517 = di_517 + 0x0001
	cx_539 = cx_539 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2_2:
	Mem533[es_520:di_517:word16] = Mem525[es_483:si_516:word16]
	si_516 = si_516 + 0x0002
	di_517 = di_517 + 0x0002
	cx_510 = cx_510 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B8F:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C61:
	word16 sp_419 = sp_406 - 0x0002
	Mem420[ss:sp_419:word16] = ds_404
	Mem423[ss:sp_419 - 0x0002:word16] = 0x09A8
	Mem425[ss:sp_419 - 0x0004:word16] = ds_404
	Mem428[ss:sp_419 - 0x0006:word16] = 0x44DC
	word16 di_431
	selector ds_432
	fn0800_4234(si_1013, di_376, ds_404, wArg00, wArg02, wArg04, wArg06, out di_431, out ds_432)
	Mem436[ds_432:0x29E1:word16] = dx_393
	Mem437[ds_432:0x29DF:word16] = 0x44DC
	word16 dx_439 = Mem437[ds_432:0x29CF:word16]
	Mem441[ds_432:0x29E5:word16] = Mem437[ds_432:0x29D1:word16]
	Mem442[ds_432:0x29E3:word16] = dx_439
	selector ds_443
	word16 ax_444 = fn0800_5374(bp_146, ds_432, out ds_443)
	Mem447[ss:sp_419:word16] = Mem442[ds_443:0x29E1:word16]
	Mem449[ss:sp_419 - 0x0002:word16] = Mem447[ds_443:0x29DF:word16]
	byte dl_450
	word16 di_451
	selector ds_452
	fn0800_A614(bp_146, ds_443, ptrArg00, wArg02, out dl_450, out di_451, out ds_452)
	word16 sp_454 = sp_419 + 0x0002
	si_1013 = ax_444
	branch ax_444 == 0x0000 l0800_1CA8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C9D:
	Mem473[ss:sp_419:word16] = ds_452
	Mem477[ss:sp_419 - 0x0002:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_452, ptrArg00)
	sp_454 = sp_419 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CA8:
	word16 sp_462 = sp_454 - 0x0002
	Mem463[ss:sp_462:word16] = ss
	Mem466[ss:sp_462 - 0x0002:word16] = bp_146 - 0x0072
	Mem468[ss:sp_462 - 0x0004:word16] = ax_444
	ds_108 = fn0800_0ABC(bp_146, ds_452, wArg00, wArg02, wArg04)
	sp_109 = sp_462 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_1CF6(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_1CF6_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1CF6:
	Mem15[ds:0x45A8:word16] = 0x0000
	Mem17[ds:0x45A6:word16] = 0x0000
	Mem18[ds:0x29ED:word16] = 0x0000
	Mem19[ds:0x29EB:word16] = 0x0000
	selector ds_35
	word16 ax_36 = fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc10, Mem19[ds:0x29CF:word16], 0), Mem19[ds:0x29D1:word16], 0x0002, out ds_35)
	Mem40[ss:fp - 0x0008:word16] = Mem19[ds_35:0x29D1:word16]
	Mem43[ss:fp - 0x000A:word16] = Mem40[ds_35:0x29CF:word16]
	selector ds_46
	word16 dx_47 = fn0800_3E5D(fp - 0x0002, ds_35, wArg00, wArg02, out ds_46)
	Mem50[ds_46:0x29ED:word16] = dx_47
	Mem51[ds_46:0x29EB:word16] = ax_36
	Mem53[ss:fp - 0x0008:word16] = Mem51[ds_46:0x29D1:word16]
	Mem55[ss:fp - 0x000A:word16] = Mem53[ds_46:0x29CF:word16]
	word16 si_56
	selector ds_262
	word16 ax_58 = fn0800_4194(fp - 0x0002, ds_46, wArg00, wArg02, out si_56, out ds_262)
	word16 sp_264 = fp - 0x0006
	branch dx_47 >u Mem55[ds_262:0x29ED:word16] l0800_1D69
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1D52:
	branch dx_47 <u Mem55[ds_262:0x29ED:word16] l0800_1D5A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D54:
	branch ax_58 >=u Mem55[ds_262:0x29EB:word16] l0800_1D69
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D5A:
	Mem253[ss:fp - 0x0008:word16] = ds_262
	Mem256[ss:fp - 0x000A:word16] = 0x4348
	Mem259[ss:fp - 0x000C:word16] = 0x000B
	word16 si_260
	word16 di_261
	fn0800_0D24(fp - 0x0002, ds_262, out si_260, out di_261, out ds_262)
	sp_264 = fp - 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D69:
	word16 sp_75 = sp_264 - 0x0002
	Mem76[ss:sp_75:word16] = 0x0000
	Mem78[ss:sp_75 - 0x0002:word16] = Mem76[ds_262:0x29ED:word16]
	Mem80[ss:sp_75 - 0x0004:word16] = Mem78[ds_262:0x29EB:word16]
	Mem82[ss:sp_75 - 0x0006:word16] = Mem80[ds_262:0x29D1:word16]
	Mem84[ss:sp_75 - 0x0008:word16] = Mem82[ds_262:0x29CF:word16]
	selector ds_87
	word16 ax_88 = fn0800_ACB3(fp - 0x0002, ds_262, ptrArg00, wArg02, wArg08, out ds_87)
	Mem92[ss:sp_75:word16] = Mem84[ds_87:0x29D1:word16]
	Mem94[ss:sp_75 - 0x0002:word16] = Mem92[ds_87:0x29CF:word16]
	selector ds_100
	word16 dx_96 = fn0800_3E5D(fp - 0x0002, ds_87, wArg00, wArg02, out ds_100)
	word16 sp_102 = sp_75 + 0x0002
	branch dx_96 != 0x524E l0800_1D9B
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D96:
	branch ax_88 == 0x4341 l0800_1DAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D9B:
	Mem236[ss:sp_75:word16] = ds_100
	Mem239[ss:sp_75 - 0x0002:word16] = 0x4348
	Mem242[ss:sp_75 - 0x0004:word16] = 0x000B
	word16 si_243
	word16 di_244
	fn0800_0D24(fp - 0x0002, ds_100, out si_243, out di_244, out ds_100)
	sp_102 = sp_75 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DAA:
	word16 sp_128
	selector ds_127
	word16 sp_103 = sp_102 - 0x0002
	Mem104[ss:sp_103:word16] = Mem94[ds_100:0x29D1:word16]
	Mem106[ss:sp_103 - 0x0002:word16] = Mem104[ds_100:0x29CF:word16]
	word16 si_107
	word16 di_108
	selector ds_109
	fn0800_3E27(fp - 0x0002, ds_100, wArg00, wArg02, out si_107, out di_108, out ds_109)
	Mem115[ss:sp_103:word16] = Mem106[ds_109:0x29D1:word16]
	Mem117[ss:sp_103 - 0x0002:word16] = Mem115[ds_109:0x29CF:word16]
	word16 si_118
	word16 di_119
	selector ds_120
	Mem123[ss:fp - 0x0004:word16] = fn0800_3E27(fp - 0x0002, ds_109, wArg00, wArg02, out si_118, out di_119, out ds_120)
	branch Mem123[ss:fp + 0x0002:word16] == 0x0000 l0800_1DE4
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DE4:
	Mem226[ss:sp_103:word16] = 0x0000
	Mem228[ss:sp_103 - 0x0002:word16] = 0xFFF0
	ds_127 = fn0800_4311(ds_120, wArg00, wArg02)
	Mem232[ds_127:0x2E53:word16] = 0xFFF0
	Mem233[ds_127:0x2E51:word16] = 0x0000
	sp_128 = sp_103 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DD1:
	Mem213[ss:sp_103:word16] = 0x0000
	Mem215[ss:sp_103 - 0x0002:word16] = si_118
	ds_127 = fn0800_4311(ds_120, wArg00, wArg02)
	Mem219[ds_127:0x2E53:word16] = dx_96
	Mem220[ds_127:0x2E51:word16] = 0x0000
	sp_128 = sp_103 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DF8:
	word16 sp_132 = sp_128 - 0x0002
	Mem133[ss:sp_132:word16] = 0x0000
	Mem135[ss:sp_132 - 0x0002:word16] = Mem133[ds_127:0x29ED:word16]
	Mem137[ss:sp_132 - 0x0004:word16] = Mem135[ds_127:0x29EB:word16]
	Mem139[ss:sp_132 - 0x0006:word16] = Mem137[ds_127:0x29D1:word16]
	Mem141[ss:sp_132 - 0x0008:word16] = Mem139[ds_127:0x29CF:word16]
	selector ds_142
	fn0800_ACB3(fp - 0x0002, ds_127, ptrArg00, wArg02, wArg08, out ds_142)
	Mem146[ss:sp_132:word16] = Mem141[ds_142:0x29D1:word16]
	Mem148[ss:sp_132 - 0x0002:word16] = Mem146[ds_142:0x29CF:word16]
	Mem153[ss:sp_132 - 0x0004:word16] = 0x0000
	Mem155[ss:sp_132 - 0x0006:word16] = si_118
	Mem157[ss:sp_132 - 0x0008:word16] = Mem155[ds_142:0x2E53:word16]
	Mem159[ss:sp_132 - 0x000A:word16] = Mem157[ds_142:0x2E51:word16]
	word16 di_163
	selector ds_164
	word16 si_165 = fn0800_4110(ds_142, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_163, out ds_164)
	Mem169[ss:sp_132:word16] = 0x0000
	Mem173[ss:sp_132 - 0x0002:word16] = si_165 - 0x0008
	word16 ax_174 = Mem173[ds_164:0x2E51:word16]
	Mem178[ss:sp_132 - 0x0004:word16] = Mem173[ds_164:0x2E53:word16]
	Mem180[ss:sp_132 - 0x0006:word16] = ax_174 + 0x0008
	branch fn0800_2CCF(ds_164, ptrArg00, wArg04, wArg06) == Mem180[ss:fp - 0x0004:word16] l0800_1E59
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_1E4A:
	Mem196[ss:sp_132:word16] = ds_164
	Mem199[ss:sp_132 - 0x0002:word16] = 0x4348
	Mem202[ss:sp_132 - 0x0004:word16] = 0x000D
	word16 si_203
	word16 di_204
	fn0800_0D24(fp - 0x0002, ds_164, out si_203, out di_204, out ds_164)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_1E59:
	return ds_164
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_1CF6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_1E5E(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_1E5E_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16)

l0800_1E5E:
	word16 ax_38 = fn0800_2CCF(ds, DPB(ptrLoc0A, Mem0[ds:0x2E51:word16] + 0x0008, 0), (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8) - 0x0008, 0x0000)
	ptr32 es_bx_45 = Mem0[ds:0x2E51:segptr32]
	Mem0[es_bx_45 + 0x0006:byte] = (byte) (ax_38 >>u 0x08)
	Mem0[es_bx_45 + 0x0007:byte] = (byte) ax_38
	selector ds_73
	fn0800_ACB3(bp, ds, DPB(ptrLoc0C, Mem49[ds:0x29CF:word16], 0), Mem49[ds:0x29D1:word16], 0x0000, out ds_73)
	Mem78[ss:fp - 0x0004:word16] = Mem49[ds_73:0x29D1:word16]
	Mem81[ss:fp - 0x0006:word16] = Mem78[ds_73:0x29CF:word16]
	word16 si_84
	word16 di_85
	selector ds_165
	word16 ax_87 = fn0800_3E27(bp, ds_73, wArg00, wArg02, out si_84, out di_85, out ds_165)
	word16 sp_166 = fp - 0x0002
	branch si_84 <=u ax_87 l0800_1EF7
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1EF7:
	branch si_84 >=u ax_87 l0800_1F19
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1EFB:
	Mem176[ss:fp - 0x0004:word16] = 0x0000
	Mem178[ss:fp - 0x0006:word16] = ax_87 - si_84
	Mem180[ss:fp - 0x0008:word16] = Mem178[ds_165:0x29ED:word16]
	Mem182[ss:fp - 0x000A:word16] = Mem180[ds_165:0x29EB:word16]
	Mem184[ss:fp - 0x000C:word16] = Mem182[ds_165:0x29D1:word16]
	Mem186[ss:fp - 0x000E:word16] = Mem184[ds_165:0x29CF:word16]
	ds_165 = fn0800_3C99(bp, ds_165)
	sp_166 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1ED7:
	Mem154[ss:fp - 0x0004:word16] = 0x0000
	Mem156[ss:fp - 0x0006:word16] = si_84 - ax_87
	Mem158[ss:fp - 0x0008:word16] = Mem156[ds_165:0x29ED:word16]
	Mem160[ss:fp - 0x000A:word16] = Mem158[ds_165:0x29EB:word16]
	Mem162[ss:fp - 0x000C:word16] = Mem160[ds_165:0x29D1:word16]
	Mem164[ss:fp - 0x000E:word16] = Mem162[ds_165:0x29CF:word16]
	ds_165 = fn0800_3BC3(bp, ds_165)
	sp_166 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1F19:
	word16 sp_101 = sp_166 - 0x0002
	Mem102[ss:sp_101:word16] = 0x0000
	Mem104[ss:sp_101 - 0x0002:word16] = Mem102[ds_165:0x29ED:word16]
	Mem106[ss:sp_101 - 0x0004:word16] = Mem104[ds_165:0x29EB:word16]
	Mem108[ss:sp_101 - 0x0006:word16] = Mem106[ds_165:0x29D1:word16]
	Mem110[ss:sp_101 - 0x0008:word16] = Mem108[ds_165:0x29CF:word16]
	selector ds_113
	fn0800_ACB3(bp, ds_165, ptrArg00, wArg02, wArg08, out ds_113)
	Mem117[ss:sp_101:word16] = Mem110[ds_113:0x29D1:word16]
	Mem119[ss:sp_101 - 0x0002:word16] = Mem117[ds_113:0x29CF:word16]
	Mem124[ss:sp_101 - 0x0004:word16] = 0x0000
	Mem126[ss:sp_101 - 0x0006:word16] = si_84
	Mem128[ss:sp_101 - 0x0008:word16] = Mem126[ds_113:0x2E53:word16]
	Mem130[ss:sp_101 - 0x000A:word16] = Mem128[ds_113:0x2E51:word16]
	selector ds_134 = fn0800_4152(ds_113, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
	Mem138[ss:sp_101:word16] = Mem130[ds_134:0x2E53:word16]
	Mem140[ss:sp_101 - 0x0002:word16] = Mem138[ds_134:0x2E51:word16]
	selector ds_141
	fn0800_4346(ds_134, wArg00, wArg02, out ds_141)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_1E5E_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si



word16 fn0800_1F5C(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_1F5C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_1F5C:
	word16 di_16 = (word16) ptrArg02
	selector es_17 = SLICE(ptrArg02, selector, 16)
	word16 cx_24 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C:
	branch cx_24 == 0x0000 l0800_1F6E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C_1:
	di_16 = di_16 + 0x0001
	cx_24 = cx_24 - 0x0001
	branch 0x00 != Mem0[es_17:di_16:byte] l0800_1F6C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6E:
	word16 cx_36 = ~cx_24
	word16 di_356 = di_16 - cx_36
	byte Z_364 = cond(di_356)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75:
	branch cx_36 == 0x0000 l0800_1F77
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75_2:
	Z_364 = cond(0x3A - Mem0[es_17:di_356:byte]) (alias)
	di_356 = di_356 + 0x0001
	cx_36 = cx_36 - 0x0001
	branch 0x3A != Mem0[es_17:di_356:byte] l0800_1F75
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F77:
	branch Z_364 l0800_1F80
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F79:
	di_356 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F80:
	word16 ax_331 = 0x0000
	branch di_356 == 0x0001 l0800_1FAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F87:
	word16 di_283 = (word16) ptrArg02
	word16 cx_289 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F:
	branch cx_289 == 0x0000 l0800_1F91
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F_1:
	di_283 = di_283 + 0x0001
	cx_289 = cx_289 - 0x0001
	branch 0x00 != Mem0[0x0000:di_283:byte] l0800_1F8F
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F91:
	word16 cx_299 = ~cx_289
	word16 di_304 = di_283 - cx_299
	byte Z_308 = cond(di_304)
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98:
	branch cx_299 == 0x0000 l0800_1F9A
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98_2:
	Z_308 = cond(0x3A - Mem0[0x0000:di_304:byte]) (alias)
	di_304 = di_304 + 0x0001
	cx_299 = cx_299 - 0x0001
	branch 0x3A != Mem0[0x0000:di_304:byte] l0800_1F98
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9A:
	branch Z_308 l0800_1FA3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9C:
	di_304 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1FA3:
	ax_331 = 0x0000
	wArg04 = 0x0000
	wArg02 = di_304
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1FAD:
	word16 ax_92 = (DPB(ax_331, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 ax_94 = Mem0[ds:0x2E53:word16]
	word16 dx_96 = Mem0[ds:0x2E51:word16] + ax_92
	word16 di_100 = (word16) ptrArg02
	word16 cx_106 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE:
	branch cx_106 == 0x0000 l0800_1FE0
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE_1:
	di_100 = di_378 + 0x0001
	cx_106 = cx_106 - 0x0001
	di_378 = di_100
	branch 0x00 != Mem0[0x0000:di_378:byte] l0800_1FDE
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FE0:
	word16 cx_116 = ~cx_106
	word16 ax_123 = dx_96 - Mem0[ds:0x2E51:word16]
	word16 ax_127 = ax_123 + (cx_116 + 0x0003)
	word16 bx_139 = (word16) ptrLoc06
	word16 dx_134
	Mem140[0x0000:bx_139:byte] = (byte) fn0800_8C8A(ax_127, 0x08, 0x0000 - (ax_123 <u 0x0000) + (ax_127 <u 0x0000), wLoc10, out dx_134)
	byte bLoc0A_120 = (byte) (cx_116 + 0x0003)
	Mem149[0x0000:bx_139 + 0x0001:byte] = (byte) (dx_96 - Mem140[ds:0x2E51:word16]) + bLoc0A_120
	Mem153[ss:fp - 0x0010:word16] = 0x0000
	Mem158[ss:fp - 0x0012:word16] = dx_96 + 0x0002
	word16 di_159 = wArg02
	word16 cx_166 = 0xFFFF
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C:
	branch cx_166 == 0x0000 l0800_202E
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C_2:
	di_159 = di_159 + 0x0001
	cx_166 = cx_166 - 0x0001
	branch 0x00 != Mem158[0x0000:di_159:byte] l0800_202C
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202E:
	word16 di_185 = Mem158[ss:fp - 0x0012:word16]
	selector es_188 = Mem158[ss:fp - 0x0010:selector]
	Mem193[ss:fp - 0x0010:word16] = ds
	word16 cx_176 = ~cx_166
	word16 cx_178 = cx_176 >>u 0x0001
	word16 si_184 = di_159 - cx_176
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D:
	branch cx_178 == 0x0000 l0800_203F
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203F:
	word16 cx_207 = cx_178 * 0x0002 + (cx_176 >>u 0x0001 <u 0x0000)
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2041:
	branch cx_207 == 0x0000 l0800_2043
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2043:
	selector ds_222 = Mem193[ss:fp - 0x0010:selector]
	*dsOut = ds_222
	Mem226[ax_94:bx_139 + (cx_116 + 0x0003) - 0x0001:byte] = 0x00
	ptr32 es_bx_232 = Mem226[ds_222:0x2E51:segptr32]
	Mem0[es_bx_232 + 0x0004:byte] = (byte) (ax_92 + (cx_116 + 0x0003) >>u 0x08)
	Mem0[es_bx_232 + 0x0005:byte] = bLoc08 + bLoc0A_120
	Mem244[ss:fp - 0x0010:word16] = 0x0000
	Mem246[ss:fp - 0x0012:word16] = 0x0000
	Mem248[ss:fp - 0x0014:word16] = 0x0000
	Mem250[ss:fp - 0x0016:word16] = cx_116 + 0x0003
	fn0800_2688(fp - 0x0002, ds_222, wArg00, wArg02, wArg04, wArg06)
	*dxOut = ax_94
	return dx_96
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_1F5C_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:0x00 -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2041_1:
	Mem216[es_188:di_185:byte] = Mem193[0x0000:si_184:byte]
	si_184 = si_184 + 0x0001
	di_185 = di_185 + 0x0001
	cx_207 = cx_207 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D_3:
	Mem201[es_188:di_185:word16] = Mem193[0x0000:si_184:word16]
	si_184 = si_184 + 0x0002
	di_185 = di_185 + 0x0002
	cx_178 = cx_178 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)



void fn0800_2085(selector ds, segptr32 ptrArg02, selector psegArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(32)
fn0800_2085_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(32)

l0800_2085:
	word16 ax_29 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_33 = Mem0[ds:0x2E51:word16] + ax_29
	word16 di_38 = (word16) ptrArg02
	selector es_39 = SLICE(ptrArg02, selector, 16)
	word16 cx_44 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20BE:
	branch cx_44 == 0x0000 l0800_20C0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20BE_1:
	di_38 = di_507 + 0x0001
	cx_44 = cx_44 - 0x0001
	di_507 = di_38
	branch 0x00 != Mem0[es_39:di_507:byte] l0800_20BE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20C0:
	word16 bx_74 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte] << 0x08) + DPB(dx_33, 0x00, 8))
	word16 cx_56 = ~cx_44
	segptr32 ptrLoc06_79 = DPB(ptrLoc06, bx_74 - 0x0001, 0)
	selector ds_99 = fn0800_B0F3(bx_74 - 0x0001 + (cx_56 + 0x0004), Mem0[ds:0x2E53:word16], bx_74 - 0x0001, Mem0[ds:0x2E53:word16], dx_33 - (bx_74 - 0x0001))
	selector es_103 = SLICE(ptrLoc06_79, selector, 16)
	word16 di_112 = wArg02
	word16 cx_118 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_211F:
	branch cx_118 == 0x0000 l0800_2121
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_211F_2:
	di_112 = di_112 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch 0x00 != Mem0[psegArg04:di_112:byte] l0800_211F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_2121:
	word16 cx_128 = ~cx_118
	word16 cx_130 = cx_128 >>u 0x0001
	word16 si_136 = di_112 - cx_128
	word16 di_137 = bx_74 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2130:
	branch cx_130 == 0x0000 l0800_2132
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2132:
	word16 cx_159 = cx_130 * 0x0002 + (cx_128 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2134:
	branch cx_159 == 0x0000 l0800_2136
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2136:
	word16 di_177 = bx_74 - 0x0001
	selector es_178 = SLICE(ptrLoc06_79, selector, 16)
	word16 cx_183 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_213F:
	branch cx_183 == 0x0000 l0800_2141
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_213F_1:
	di_177 = di_177 + 0x0001
	cx_183 = cx_183 - 0x0001
	branch 0x00 != Mem0[es_178:di_177:byte] l0800_213F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2141:
	word16 cx_193 = ~cx_183
	word16 di_197 = di_177 - cx_193
	byte Z_201 = cond(di_197)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2147:
	branch cx_193 == 0x0000 l0800_2149
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2147_2:
	Z_201 = cond(0x00 - Mem0[es_178:di_197:byte]) (alias)
	di_197 = di_197 + 0x0001
	cx_193 = cx_193 - 0x0001
	branch 0x00 != Mem0[es_178:di_197:byte] l0800_2147
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2149:
	branch Z_201 l0800_2152
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_214B:
	di_197 = 0x0001
	es_178 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2152:
	Mem225[es_178:di_197:byte] = 0x00
	word16 di_227 = bx_74 - 0x0001
	selector es_228 = SLICE(ptrLoc06_79, selector, 16)
	word16 cx_233 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2164:
	branch cx_233 == 0x0000 l0800_2166
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2164_1:
	di_227 = di_227 + 0x0001
	cx_233 = cx_233 - 0x0001
	branch 0x00 != Mem225[es_228:di_227:byte] l0800_2164
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2166:
	word16 cx_243 = ~cx_233
	word16 di_247 = di_227 - cx_243
	byte Z_251 = cond(di_247)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216C:
	branch cx_243 == 0x0000 l0800_216E
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216C_2:
	Z_251 = cond(0x00 - Mem225[es_228:di_247:byte]) (alias)
	di_247 = di_247 + 0x0001
	cx_243 = cx_243 - 0x0001
	branch 0x00 != Mem225[es_228:di_247:byte] l0800_216C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216E:
	branch Z_251 l0800_2177
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2170:
	di_247 = 0x0001
	es_228 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2177:
	Mem275[es_228:di_247 + 0x0001:byte] = 0x00
	word16 di_277 = bx_74 - 0x0001
	selector es_278 = SLICE(ptrLoc06_79, selector, 16)
	word16 cx_283 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2189:
	branch cx_283 == 0x0000 l0800_218B
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2189_1:
	di_277 = di_277 + 0x0001
	cx_283 = cx_283 - 0x0001
	branch 0x00 != Mem275[es_278:di_277:byte] l0800_2189
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_218B:
	word16 cx_293 = ~cx_283
	word16 di_297 = di_277 - cx_293
	byte Z_301 = cond(di_297)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2191:
	branch cx_293 == 0x0000 l0800_2193
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2191_2:
	Z_301 = cond(0x00 - Mem275[es_278:di_297:byte]) (alias)
	di_297 = di_297 + 0x0001
	cx_293 = cx_293 - 0x0001
	branch 0x00 != Mem275[es_278:di_297:byte] l0800_2191
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2193:
	branch Z_301 l0800_219C
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2195:
	di_297 = 0x0001
	es_278 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_219C:
	Mem325[es_278:di_297 + 0x0002:byte] = 0x00
	word16 di_327 = bx_74 - 0x0001
	selector es_328 = SLICE(ptrLoc06_79, selector, 16)
	word16 cx_333 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21AE:
	branch cx_333 == 0x0000 l0800_21B0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21AE_1:
	di_327 = di_327 + 0x0001
	cx_333 = cx_333 - 0x0001
	branch 0x00 != Mem325[es_328:di_327:byte] l0800_21AE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B0:
	word16 cx_343 = ~cx_333
	word16 di_347 = di_327 - cx_343
	byte Z_351 = cond(di_347)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B6:
	branch cx_343 == 0x0000 l0800_21B8
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B6_2:
	Z_351 = cond(0x00 - Mem325[es_328:di_347:byte]) (alias)
	di_347 = di_347 + 0x0001
	cx_343 = cx_343 - 0x0001
	branch 0x00 != Mem325[es_328:di_347:byte] l0800_21B6
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B8:
	branch Z_351 l0800_21C1
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21BA:
	di_347 = 0x0001
	es_328 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21C1:
	Mem375[es_328:di_347 + 0x0003:byte] = 0x00
	ptr32 es_bx_381 = Mem375[ds_99:0x2E51:segptr32]
	Mem0[es_bx_381 + 0x0004:byte] = (byte) (ax_29 + (cx_56 + 0x0004) >>u 0x08)
	Mem0[es_bx_381 + 0x0005:byte] = bLoc0C + bLoc0E
	fn0800_2688(fp - 0x0002, ds_99, cx_56 + 0x0004, 0x0000, 0x0000, 0x0000)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2085_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di bx:<invalid> es:<invalid> si:si ds:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2134_1:
	Mem168[es_103:di_137:byte] = Mem0[psegArg04:si_136:byte]
	si_136 = si_136 + 0x0001
	di_137 = di_137 + 0x0001
	cx_159 = cx_159 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2130_3:
	Mem153[es_103:di_137:word16] = Mem0[psegArg04:si_136:word16]
	si_136 = si_136 + 0x0002
	di_137 = di_137 + 0x0002
	cx_130 = cx_130 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)



selector fn0800_2201(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_2201_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_2201:
	word16 ax_26 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_31 = Mem0[ds:0x2E51:word16] + ax_26
	word16 dx_49 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] << 0x08) + DPB(dx_31, 0x00, 8)) - wArg02
	word16 ax_56 = wArg02 + dx_49
	selector ds_76 = fn0800_B0F3(wArg02, wArg04, ax_56, wArg04, dx_31 - ax_56)
	ptr32 es_bx_83 = Mem0[ds_76:0x2E51:segptr32]
	Mem0[es_bx_83 + 0x0004:byte] = (byte) (ax_26 - dx_49 >>u 0x08)
	Mem0[es_bx_83 + 0x0005:byte] = (byte) ax_26 - (byte) dx_49
	word16 ax_98 = -dx_49
	fn0800_2688(fp - 0x0002, ds_76, ax_98, -0x0000 - (ax_98 == 0x0000), 0x0000, 0x0000)
	word16 dx_108 = Mem89[ds_76:0x45AE:word16]
	branch Mem89[ds_76:0x45B0:word16] != wArg04 l0800_22EA
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22B7:
	branch dx_108 != wArg02 l0800_22EA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22EA:
	branch Mem89[ds_76:0x45AE:word16] <=u wArg02 l0800_22F9
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_22F2:
	Mem143[ds_76:0x45AA:word16] = Mem89[ds_76:0x45AA:word16] - dx_49
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22F9:
	return ds_76
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_22BC:
	selector es_149 = SLICE(ptrArg02, selector, 16)
	word16 di_150 = (word16) ptrArg02 + 0x0002
	word16 cx_156 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7:
	branch cx_156 == 0x0000 l0800_22C9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7_1:
	di_150 = di_150 + 0x0001
	cx_156 = cx_156 - 0x0001
	branch 0x00 != Mem89[es_149:di_150:byte] l0800_22C7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C9:
	word16 cx_166 = ~cx_156
	word16 di_170 = di_150 - cx_166
	byte Z_174 = cond(di_170)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF:
	branch cx_166 == 0x0000 l0800_22D1
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF_2:
	Z_174 = cond(0x00 - Mem89[es_149:di_170:byte]) (alias)
	di_170 = di_170 + 0x0001
	cx_166 = cx_166 - 0x0001
	branch 0x00 != Mem89[es_149:di_170:byte] l0800_22CF
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D1:
	branch Z_174 l0800_22DA
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D3:
	di_170 = 0x0001
	es_149 = 0x0000
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22DA:
	Mem204[ds_76:0x45AC:word16] = es_149
	Mem205[ds_76:0x45AA:word16] = di_170
	return ds_76
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2201_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> di:di Sequence es:di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_22FE(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_22FE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_22FE:
	word16 ax_26 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_30 = Mem0[ds:0x2E51:word16] + ax_26
	word16 di_203 = (word16) ptrArg02
	selector es_36 = SLICE(ptrArg02, selector, 16)
	word16 cx_205 = 0xFFFF
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336:
	branch cx_205 == 0x0000 l0800_2338
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336_1:
	di_203 = di_203 + 0x0001
	cx_205 = cx_205 - 0x0001
	branch 0x00 != Mem0[es_36:di_203:byte] l0800_2336
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2338:
	word16 cx_199 = ~cx_205
	word16 di_186 = di_203 - cx_199
	byte Z_194 = cond(di_186)
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E:
	branch cx_199 == 0x0000 l0800_2340
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E_2:
	Z_194 = cond(0x00 - Mem0[es_36:di_186:byte]) (alias)
	di_186 = di_186 + 0x0001
	cx_199 = cx_199 - 0x0001
	branch 0x00 != Mem0[es_36:di_186:byte] l0800_233E
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2340:
	branch Z_194 l0800_2349
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2342:
	di_186 = 0x0001
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2349:
	word16 di_90 = di_186 + 0x0004 - wArg02
	word16 ax_97 = wArg02 + di_90
	selector ds_117 = fn0800_B0F3(wArg02, wArg04, ax_97, wArg04, dx_30 - ax_97)
	ptr32 es_bx_124 = Mem0[ds_117:0x2E51:segptr32]
	Mem0[es_bx_124 + 0x0004:byte] = (byte) (ax_26 - di_90 >>u 0x08)
	Mem0[es_bx_124 + 0x0005:byte] = bLoc08 - (byte) di_90
	word16 ax_140 = -di_90
	fn0800_2688(fp - 0x0002, ds_117, ax_140, -0x0000 - (ax_140 == 0x0000), 0x0000, 0x0000)
	Mem152[ds_117:0x45AC:word16] = wArg04
	word16 dx_151 = wArg02 + di_90
	Mem153[ds_117:0x45AA:word16] = dx_151
	branch (dx_151 | wArg04) == 0x0000 l0800_23D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_23D8:
	branch Mem153[ds_117:0x45AA:word16] <=u wArg02 l0800_23E7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_23E0:
	Mem184[ds_117:0x45AA:word16] = Mem153[ds_117:0x45AA:word16] - di_90
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_23E7:
	return ds_117
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_23C6:
	Mem167[ds_117:0x45AC:word16] = wArg04
	Mem168[ds_117:0x45AA:word16] = wArg02
	return ds_117
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_22FE_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_23EC(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_23EC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_23EC:
	word16 dx_21
	word16 bp_22
	selector ds_23
	word16 ax_24 = fn0800_24FE(fp - 0x0002, ds, DPB(ptrLoc10, wArg02, 0), out dx_21, out bp_22, out ds_23)
	Mem26[ss:bp_22 - 0x0006:word16] = dx_21
	Mem28[ss:bp_22 - 0x0008:word16] = ax_24
	ptr32 es_di_29 = Mem28[ss:bp_22 + 0x0004:segptr32]
	word16 di_30 = (word16) es_di_29
	selector es_31 = SLICE(es_di_29, selector, 16)
	word16 cx_38 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_240D:
	branch cx_38 == 0x0000 l0800_240F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_240D_1:
	di_30 = di_30 + 0x0001
	cx_38 = cx_38 - 0x0001
	branch 0x00 != Mem28[es_31:di_30:byte] l0800_240D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_240F:
	word16 cx_395 = ~cx_38
	word16 di_383 = di_30 - cx_395
	byte Z_391 = cond(di_383)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2415:
	branch cx_395 == 0x0000 l0800_2417
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2415_2:
	Z_391 = cond(0x00 - Mem28[es_31:di_383:byte]) (alias)
	di_383 = di_383 + 0x0001
	cx_395 = cx_395 - 0x0001
	branch 0x00 != Mem28[es_31:di_383:byte] l0800_2415
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2417:
	branch Z_391 l0800_2420
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2419:
	di_383 = 0x0001
	es_31 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2420:
	ptr32 es_di_86 = Mem28[ss:bp_22 + 0x0004:segptr32]
	Mem90[ss:fp - 0x000E:word16] = (int16) Mem28[es_31:di_383:byte] << 0x08
	word16 di_104 = (word16) es_di_86
	selector es_135 = SLICE(es_di_86, selector, 16)
	word16 cx_100 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2437:
	branch cx_100 == 0x0000 l0800_2439
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2437_1:
	di_104 = di_104 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch 0x00 != Mem90[es_135:di_104:byte] l0800_2437
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2439:
	word16 cx_107 = ~cx_100
	word16 di_113 = di_104 - cx_107
	byte Z_117 = cond(di_113)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_243F:
	branch cx_107 == 0x0000 l0800_2441
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_243F_2:
	Z_117 = cond(0x00 - Mem90[es_135:di_406:byte]) (alias)
	di_113 = di_406 + 0x0001
	cx_107 = cx_107 - 0x0001
	di_406 = di_113
	branch 0x00 != Mem90[es_135:di_406:byte] l0800_243F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2441:
	branch Z_117 l0800_244A
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2443:
	es_135 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_244A:
	ptr32 es_di_152 = Mem90[ss:bp_22 + 0x0004:segptr32]
	Mem156[ss:fp - 0x000E:word16] = Mem90[ss:fp - 0x000E:word16] + DPB(es_135, 0x00, 8)
	Mem158[ss:fp - 0x0010:word16] = 0x0000
	word16 di_153 = (word16) es_di_152
	selector es_154 = SLICE(es_di_152, selector, 16)
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2462:
	branch cx_159 == 0x0000 l0800_2464
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2462_1:
	di_153 = di_153 + 0x0001
	cx_159 = cx_159 - 0x0001
	branch 0x00 != Mem158[es_154:di_153:byte] l0800_2462
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2464:
	word16 cx_169 = ~cx_159
	word16 di_175 = di_153 - cx_169
	byte Z_179 = cond(di_175)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246A:
	branch cx_169 == 0x0000 l0800_246C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246A_2:
	Z_179 = cond(0x00 - Mem158[es_154:di_175:byte]) (alias)
	di_175 = di_175 + 0x0001
	cx_169 = cx_169 - 0x0001
	branch 0x00 != Mem158[es_154:di_175:byte] l0800_246A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246C:
	branch Z_179 l0800_2475
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246E:
	di_175 = 0x0001
	es_154 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2475:
	ptr32 es_di_206 = Mem158[ss:bp_22 + 0x0004:segptr32]
	Mem210[ss:fp - 0x0012:word16] = (int16) Mem158[es_154:di_175 + 0x0002:byte] << 0x08
	word16 di_207 = (word16) es_di_206
	selector es_208 = SLICE(es_di_206, selector, 16)
	word16 cx_217 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248C:
	branch cx_217 == 0x0000 l0800_248E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248C_1:
	di_207 = di_207 + 0x0001
	cx_217 = cx_217 - 0x0001
	branch 0x00 != Mem210[es_208:di_207:byte] l0800_248C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248E:
	word16 cx_227 = ~cx_217
	word16 di_233 = di_207 - cx_227
	byte Z_237 = cond(di_233)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2494:
	branch cx_227 == 0x0000 l0800_2496
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2494_2:
	Z_237 = cond(0x00 - Mem210[es_208:di_410:byte]) (alias)
	di_233 = di_410 + 0x0001
	cx_227 = cx_227 - 0x0001
	di_410 = di_233
	branch 0x00 != Mem210[es_208:di_410:byte] l0800_2494
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2496:
	branch Z_237 l0800_249F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2498:
	es_208 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_249F:
	word16 ax_270 = Mem210[ss:fp - 0x0010:word16] + (Mem210[ss:fp - 0x0012:word16] + DPB(es_208, 0x00, 8))
	Mem276[ss:bp_22 - 0x0002:word16] = Mem210[ss:fp - 0x000E:word16] + (ax_270 <u 0x0000)
	Mem277[ss:bp_22 - 0x0004:word16] = ax_270
	Mem279[ss:fp - 0x000E:word16] = Mem277[ss:bp_22 - 0x0006:word16]
	Mem281[ss:fp - 0x0010:word16] = Mem279[ss:bp_22 - 0x0008:word16]
	word16 dx_284 = Mem281[ss:bp_22 - 0x0004:word16] - Mem281[ds_23:0x45A6:word16]
	Mem290[ss:fp - 0x0012:word16] = Mem281[ss:bp_22 - 0x0002:word16] - Mem281[ds_23:0x45A8:word16] - (dx_284 <u 0x0000)
	Mem292[ss:fp - 0x0014:word16] = dx_284
	Mem294[ss:fp - 0x0016:word16] = Mem292[ds_23:0x29D1:word16]
	Mem296[ss:fp - 0x0018:word16] = Mem294[ds_23:0x29CF:word16]
	selector ds_297 = fn0800_3C99(bp_22, ds_23)
	*dsOut = ds_297
	Mem300[ss:fp - 0x000E:word16] = Mem296[ss:bp_22 - 0x0002:word16]
	Mem302[ss:fp - 0x0010:word16] = Mem300[ss:bp_22 - 0x0004:word16]
	word16 dx_306 = -Mem302[ss:bp_22 - 0x0008:word16]
	Mem311[ss:fp - 0x0012:word16] = -Mem302[ss:bp_22 - 0x0006:word16] - (dx_306 == 0x0000)
	Mem313[ss:fp - 0x0014:word16] = dx_306
	fn0800_2688(bp_22, ds_297, wArg00, wArg02, wArg04, wArg06)
	return Mem313[ss:bp_22:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp

fn0800_23EC_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:0x00 bl:<invalid> dl:<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_24FE(word16 bp, selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32)
fn0800_24FE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_24FE:
	word16 di_13 = (word16) ptrArg02
	selector es_14 = SLICE(ptrArg02, selector, 16)
	word16 cx_22 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250D:
	branch cx_22 == 0x0000 l0800_250F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250D_1:
	di_13 = di_13 + 0x0001
	cx_22 = cx_22 - 0x0001
	branch 0x00 != Mem0[es_14:di_13:byte] l0800_250D
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250F:
	word16 cx_34 = ~cx_22
	word16 di_40 = di_13 - cx_34
	byte Z_44 = cond(di_40)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2515:
	branch cx_34 == 0x0000 l0800_2517
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2515_2:
	Z_44 = cond(0x00 - Mem0[es_14:di_485:byte]) (alias)
	di_40 = di_485 + 0x0001
	cx_34 = cx_34 - 0x0001
	di_485 = di_40
	branch 0x00 != Mem0[es_14:di_485:byte] l0800_2515
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2517:
	branch Z_44 l0800_2520
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2519:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2520:
	word16 di_460 = (word16) ptrArg02
	word16 cx_462 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2537:
	branch cx_462 == 0x0000 l0800_2539
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2537_1:
	di_460 = di_460 + 0x0001
	cx_462 = cx_462 - 0x0001
	branch 0x00 != Mem0[0x0000:di_460:byte] l0800_2537
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2539:
	word16 cx_104 = ~cx_462
	word16 di_111 = di_460 - cx_104
	byte Z_102 = cond(di_111)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_253F:
	branch cx_104 == 0x0000 l0800_2541
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_253F_2:
	Z_102 = cond(0x00 - Mem0[0x0000:di_487:byte]) (alias)
	di_111 = di_487 + 0x0001
	cx_104 = cx_104 - 0x0001
	di_487 = di_111
	branch 0x00 != Mem0[0x0000:di_487:byte] l0800_253F
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2541:
	branch Z_102 l0800_254A
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2543:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_254A:
	word16 di_138 = (word16) ptrArg02
	selector es_139 = SLICE(ptrArg02, selector, 16)
	word16 cx_144 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562:
	branch cx_144 == 0x0000 l0800_2564
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562_1:
	di_138 = di_138 + 0x0001
	cx_144 = cx_144 - 0x0001
	branch 0x00 != Mem0[es_139:di_138:byte] l0800_2562
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2564:
	word16 cx_154 = ~cx_144
	word16 di_160 = di_138 - cx_154
	byte Z_164 = cond(di_160)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A:
	branch cx_154 == 0x0000 l0800_256C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A_2:
	Z_164 = cond(0x00 - Mem0[es_139:di_489:byte]) (alias)
	di_160 = di_489 + 0x0001
	cx_154 = cx_154 - 0x0001
	di_489 = di_160
	branch 0x00 != Mem0[es_139:di_489:byte] l0800_256A
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256C:
	branch Z_164 l0800_2575
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256E:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2575:
	word16 di_192 = (word16) ptrArg02
	selector es_193 = SLICE(ptrArg02, selector, 16)
	word16 cx_202 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C:
	branch cx_202 == 0x0000 l0800_258E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C_1:
	di_192 = di_192 + 0x0001
	cx_202 = cx_202 - 0x0001
	branch 0x00 != Mem0[es_193:di_192:byte] l0800_258C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258E:
	word16 cx_212 = ~cx_202
	word16 di_218 = di_192 - cx_212
	byte Z_222 = cond(di_218)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594:
	branch cx_212 == 0x0000 l0800_2596
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594_2:
	Z_222 = cond(0x00 - Mem0[es_193:di_491:byte]) (alias)
	di_218 = di_491 + 0x0001
	cx_212 = cx_212 - 0x0001
	di_491 = di_218
	branch 0x00 != Mem0[es_193:di_491:byte] l0800_2594
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2596:
	branch Z_222 l0800_259F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2598:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_259F:
	selector ds_282
	word16 ax_283 = fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc1A, Mem0[ds:0x29CF:word16], 0), Mem0[ds:0x29D1:word16], 0x0000, out ds_282)
	Mem287[ss:fp - 0x0012:word16] = Mem0[ds_282:0x29D1:word16]
	Mem290[ss:fp - 0x0014:word16] = Mem287[ds_282:0x29CF:word16]
	selector ds_293
	word16 dx_294 = fn0800_3E5D(fp - 0x0002, ds_282, wArg00, wArg02, out ds_293)
	Mem297[ss:fp - 0x0008:word16] = dx_294
	Mem298[ss:fp - 0x000A:word16] = ax_283
	word16 sp_295 = fp - 0x0010
	word16 dx_300
	word16 ax_301 = fn0800_8C8A(ax_283, 0x08, dx_294, bp, out dx_300)
	branch dx_300 != 0x0052 l0800_25FC
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_25F7:
	branch ax_301 == 0x4E43 l0800_260B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_25FC:
	Mem387[ss:fp - 0x0012:word16] = ds_293
	Mem390[ss:fp - 0x0014:word16] = 0x4348
	Mem393[ss:fp - 0x0016:word16] = 0x000C
	word16 si_394
	word16 di_395
	fn0800_0D24(fp - 0x0002, ds_293, out si_394, out di_395, out ds_293)
	sp_295 = fp - 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_260B:
	word16 ax_314 = Mem298[ss:fp - 0x000A:word16]
	branch (ax_314 & 0x00FF) == 0x0000 l0800_2655
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2655:
	Mem366[ss:sp_295:word16] = Mem298[ds_293:0x29D1:word16]
	Mem368[ss:sp_295 - 0x0002:word16] = Mem366[ds_293:0x29CF:word16]
	selector ds_369
	word16 dx_370 = fn0800_3E5D(fp - 0x0002, ds_293, wArg00, wArg02, out ds_369)
	Mem372[ds_369:0x2A05:word16] = dx_370
	Mem373[ds_369:0x2A03:word16] = ax_314 & 0x00FF
	Mem374[ds_369:0x2A09:word16] = dx_370
	Mem375[ds_369:0x2A07:word16] = ax_314 & 0x00FF
	ui32 dx_ax_377 = SEQ(dx_370, (ax_314 & 0x00FF) + 0x0008)
	Mem383[ss:fp - 0x000C:word16] = SLICE(dx_ax_377 + 0x00000008, word16, 16)
	Mem384[ss:fp - 0x000E:word16] = (word16) (dx_ax_377 + 0x00000008)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2616:
	Mem337[ss:sp_295:word16] = Mem298[ds_293:0x29D1:word16]
	word16 sp_338 = sp_295 - 0x0002
	Mem339[ss:sp_338:word16] = Mem337[ds_293:0x29CF:word16]
	selector ds_340
	word16 dx_341 = fn0800_3E5D(fp - 0x0002, ds_293, wArg00, wArg02, out ds_340)
	Mem344[ds_340:0x2A09:word16] = dx_341
	Mem345[ds_340:0x2A07:word16] = ax_314 & 0x00FF
	Mem347[ss:sp_338 + 0x0002:word16] = Mem345[ds_340:0x29D1:word16]
	Mem349[ss:sp_338:word16] = Mem347[ds_340:0x29CF:word16]
	selector ds_350
	word16 dx_351 = fn0800_3E5D(fp - 0x0002, ds_340, wArg00, wArg02, out ds_350)
	Mem353[ds_350:0x2A05:word16] = dx_351
	Mem354[ds_350:0x2A03:word16] = ax_314 & 0x00FF
	ui32 ax_dx_358 = SEQ(Mem354[ds_350:0x2A05:word16], Mem354[ds_350:0x2A03:word16] + 0x0012)
	Mem364[ss:fp - 0x000C:word16] = SLICE(ax_dx_358 + 0x00000012, word16, 16)
	Mem365[ss:fp - 0x000E:word16] = (word16) (ax_dx_358 + 0x00000012)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_267D:
	*dxOut = Mem298[ss:fp - 0x000C:word16]
	*bpOut = Mem298[ss:fp - 0x0002:word16]
	return Mem298[ss:fp - 0x000E:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_24FE_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2688(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_2688_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2688:
	word16 sp_142 = fp - 0x0012
	word16 dx_24 = Mem0[ds:0x2E53:word16]
	word16 bx_25 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	word16 ax_28 = Mem0[ds:0x2E53:word16]
	word16 wLoc06_224 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27B3:
	branch ax_28 == dx_24 l0800_27C1
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(8) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C1:
	branch wLoc06_224 == bx_25 l0800_27C9
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(8) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C9:
	branch (wArg06 | wArg08) != 0x0000 l0800_27DF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_27D1:
	word16 v22_266 = Mem0[ds:0x45A6:word16] + wArg02
	Mem267[ds:0x45A6:word16] = v22_266
	Mem271[ds:0x45A8:word16] = Mem267[ds:0x45A8:word16] + wArg04 + (v22_266 <u 0x0000)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_27DF:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2688_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_27C6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(8) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27BE:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(8) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26C3:
	word16 dx_136 = wLoc06_224
	word16 wLoc06_100 = wLoc06_224 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26D3:
	wLoc06_100 = wLoc06_100 + 0x0001
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] != 0x00 l0800_26D3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26DF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_277D:
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] == 0x00 l0800_2789
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2789:
	word16 v24_223 = wLoc06_100 + 0x0001
	word16 ax_227 = v24_223 - Mem0[ds:0x2E51:word16]
	word16 bx_238 = (word16) ptrLoc0E
	selector es_239 = SLICE(ptrLoc0E, selector, 16)
	word16 dx_233
	Mem240[es_239:bx_238:byte] = (byte) fn0800_8C8A(ax_227, 0x08, 0x0000 - (ax_227 <u 0x0000), bp, out dx_233)
	Mem249[es_239:bx_238 + 0x0001:byte] = (byte) (v24_223 - Mem240[ds:0x2E51:word16])
	wLoc06_224 = v24_223
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2786:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26E2:
	word16 v25_110 = wLoc06_100 + 0x0001
	wLoc06_100 = v25_110
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] != 0x00 l0800_26E2
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26EE:
	word16 bx_115 = (word16) ptrLoc06
	selector es_116 = SLICE(ptrLoc06, selector, 16)
	word16 sp_126 = sp_142 - 0x0002
	Mem127[ss:sp_126:word16] = ((int16) Mem0[es_116:bx_115:byte] << 0x08) + DPB(dx_136, 0x00, 8)
	word16 ax_135 = ((int16) Mem127[es_116:bx_115 + 0x0002:byte] << 0x08) + DPB(bx_115, 0x00, 8)
	dx_136 = ax_135
	sp_142 = sp_126 + 0x0002
	word16 ax_143 = Mem127[ss:sp_126:word16] + (ax_135 <u 0x0000)
	branch ax_143 < wArg08 l0800_2779
// DataOut: ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2727:
	branch ax_143 != wArg08 l0800_272E
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2729:
	branch ax_135 <u wArg06 l0800_2779
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_272E:
	int32 dx_ax_176 = (int32) SLICE(SEQ(ax_143, ax_135 + wArg02) + _, word16, 16)
	word16 bx_184 = (word16) ptrLoc06
	selector es_185 = SLICE(ptrLoc06, selector, 16)
	word16 dx_180
	Mem186[es_185:bx_184:byte] = (byte) fn0800_8C8A((word16) dx_ax_176, 0x08, SLICE(dx_ax_176, word16, 16), bp, out dx_180)
	Mem196[es_185:bx_184 + 0x0001:byte] = (byte) (int32) SLICE(SEQ(ax_143, ax_135 + wArg02) + _, word16, 16)
	word16 ax_199 = ax_135 + wArg02
	word16 bx_211 = (word16) ptrLoc06
	selector es_212 = SLICE(ptrLoc06, selector, 16)
	Mem213[es_212:bx_211 + 0x0002:byte] = (byte) fn0800_8C8A(ax_199, 0x08, ax_143 + wArg04 + (SEQ(ax_199, ax_143) <u 0x00000000), bp, out dx_136)
	Mem219[es_212:bx_211 + 0x0003:byte] = bLoc12 + bArg02
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2779:
	wLoc06_100 = v25_110 + 0x0004
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)



word16 fn0800_283D(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_283D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_283D:
	word16 di_16 = (word16) ptrArg02
	selector es_17 = SLICE(ptrArg02, selector, 16)
	word16 cx_22 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284D:
	branch cx_22 == 0x0000 l0800_284F
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284D_1:
	di_16 = di_16 + 0x0001
	cx_22 = cx_22 - 0x0001
	branch 0x00 != Mem0[es_17:di_16:byte] l0800_284D
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284F:
	word16 cx_34 = ~cx_22
	word16 di_347 = di_16 - cx_34
	byte Z_355 = cond(di_347)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2856:
	branch cx_34 == 0x0000 l0800_2858
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2856_2:
	Z_355 = cond(0x3A - Mem0[es_17:di_347:byte]) (alias)
	di_347 = di_347 + 0x0001
	cx_34 = cx_34 - 0x0001
	branch 0x3A != Mem0[es_17:di_347:byte] l0800_2856
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2858:
	branch Z_355 l0800_2861
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_285A:
	di_347 = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2861:
	word16 ax_322 = 0x0000
	branch di_347 == 0x0001 l0800_288E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2868:
	word16 di_276 = (word16) ptrArg02
	word16 cx_281 = 0xFFFF
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2870:
	branch cx_281 == 0x0000 l0800_2872
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2870_1:
	di_276 = di_276 + 0x0001
	cx_281 = cx_281 - 0x0001
	branch 0x00 != Mem0[0x0000:di_276:byte] l0800_2870
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2872:
	word16 cx_291 = ~cx_281
	word16 di_295 = di_276 - cx_291
	byte Z_299 = cond(di_295)
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2879:
	branch cx_291 == 0x0000 l0800_287B
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2879_2:
	Z_299 = cond(0x3A - Mem0[0x0000:di_373:byte]) (alias)
	di_295 = di_373 + 0x0001
	cx_291 = cx_291 - 0x0001
	di_373 = di_295
	branch 0x3A != Mem0[0x0000:di_373:byte] l0800_2879
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_287B:
	branch Z_299 l0800_2884
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_287D:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2884:
	ax_322 = 0x0000
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_288E:
	word16 dx_95 = Mem0[ds:0x2E53:word16]
	word16 bx_96 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(ax_322, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	word16 wLoc08_103 = Mem0[ds:0x2E53:word16]
	word16 wLoc0A_104 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_2917:
	branch wLoc08_103 != dx_95 l0800_28C2
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_2922:
	branch wLoc0A_104 != bx_96 l0800_28C2
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_28C2:
	word16 si_151 = wLoc0A_104 + 0x0002
	word16 di_156 = (word16) ptrArg02
	word16 ax_157 = 0x0000
	word16 cx_162 = 0xFFFF
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D4:
	branch cx_162 == 0x0000 l0800_28D6
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D4_1:
	di_156 = di_156 + 0x0001
	cx_162 = cx_162 - 0x0001
	branch 0x00 != Mem0[0x0000:di_156:byte] l0800_28D4
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D6:
	word16 cx_172 = ~cx_162
	word16 di_174 = di_156 - cx_172
	byte SCZO_176 = cond(di_174)
	byte Z_178 = SCZO_176
	byte C_179 = SCZO_176
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DA:
	branch cx_172 == 0x0000 l0800_28DC
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DA_2:
	byte SCZO_244 = cond(Mem0[wLoc08_103:si_371:byte] - Mem0[0x0000:di_370:byte])
	Z_178 = SCZO_244 (alias)
	C_179 = SCZO_244 (alias)
	si_151 = si_371 + 0x0001
	di_174 = di_370 + 0x0001
	cx_172 = cx_172 - 0x0001
	di_370 = di_174
	si_371 = si_151
	branch Mem0[wLoc08_103:si_371:byte] != Mem0[0x0000:di_370:byte] l0800_28DA
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DC:
	branch Z_178 l0800_28E3
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DE:
	word16 ax_237 = 0x0000 - C_179
	ax_157 = ax_237 - 0xFFFF - (ax_237 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28E3:
	branch ax_157 != 0x0000 l0800_28F4
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Stack +0002(32)

l0800_28F4:
	wLoc08_103 = Mem0[ds:0x2E53:word16]
	wLoc0A_104 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[0x0000:(word16) ptrLoc0A:byte] << 0x08) + DPB(wLoc0A_104, 0x00, 8))
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_28E8:
	*dxOut = wLoc08_103
	return wLoc0A_104
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2927:
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_283D_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:si ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000



word16 fn0800_2931(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_2931_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_2931:
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 di_17 = (word16) ptrArg06 + 0x0002
	word16 cx_23 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941:
	branch cx_23 == 0x0000 l0800_2943
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941_1:
	di_17 = di_17 + 0x0001
	cx_23 = cx_23 - 0x0001
	branch 0x00 != Mem0[es_16:di_17:byte] l0800_2941
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2943:
	word16 cx_276 = ~cx_23
	word16 di_264 = di_17 - cx_276
	byte Z_272 = cond(di_264)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949:
	branch cx_276 == 0x0000 l0800_294B
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949_2:
	Z_272 = cond(0x00 - Mem0[es_16:di_264:byte]) (alias)
	di_264 = di_264 + 0x0001
	cx_276 = cx_276 - 0x0001
	branch 0x00 != Mem0[es_16:di_264:byte] l0800_2949
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294B:
	branch Z_272 l0800_2954
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294D:
	di_264 = 0x0001
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2954:
	word16 wArg08_224 = 0x0000
	word16 wArg06_225 = di_264
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> es:0x0000 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_29B4:
	branch Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte] != 0x00 l0800_2960
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2960:
	word16 si_115 = wArg06_225
	word16 di_121 = (word16) ptrArg02
	selector es_122 = SLICE(ptrArg02, selector, 16)
	word16 ax_123 = 0x0000
	word16 cx_127 = 0xFFFF
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F:
	branch cx_127 == 0x0000 l0800_2971
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F_1:
	di_121 = di_121 + 0x0001
	cx_127 = cx_127 - 0x0001
	branch 0x00 != Mem0[es_122:di_121:byte] l0800_296F
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2971:
	word16 cx_135 = ~cx_127
	word16 di_136 = di_121 - cx_135
	byte SCZO_138 = cond(di_136)
	byte Z_140 = SCZO_138
	byte C_141 = SCZO_138
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975:
	branch cx_135 == 0x0000 l0800_2977
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975_2:
	byte SCZO_251 = cond(Mem0[wArg08_224:si_286:byte] - Mem0[es_122:di_285:byte])
	Z_140 = SCZO_251 (alias)
	C_141 = SCZO_251 (alias)
	si_115 = si_286 + 0x0001
	di_136 = di_285 + 0x0001
	cx_135 = cx_135 - 0x0001
	di_285 = di_136
	si_286 = si_115
	branch Mem0[wArg08_224:si_286:byte] != Mem0[es_122:di_285:byte] l0800_2975
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2977:
	branch Z_140 l0800_297E
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2979:
	word16 ax_245 = 0x0000 - C_141
	ax_123 = ax_245 - 0xFFFF - (ax_245 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_297E:
	branch ax_123 != 0x0000 l0800_298D
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_298D:
	word16 di_177 = (word16) ptrArg06
	selector es_178 = SLICE(ptrArg06, selector, 16)
	word16 cx_183 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995:
	branch cx_183 == 0x0000 l0800_2997
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995_1:
	di_177 = di_177 + 0x0001
	cx_183 = cx_183 - 0x0001
	branch 0x00 != Mem0[es_178:di_177:byte] l0800_2995
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2997:
	word16 cx_191 = ~cx_183
	word16 di_194 = di_177 - cx_191
	byte Z_198 = cond(di_194)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D:
	branch cx_191 == 0x0000 l0800_299F
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D_2:
	Z_198 = cond(0x00 - Mem0[es_178:di_194:byte]) (alias)
	di_194 = di_194 + 0x0001
	cx_191 = cx_191 - 0x0001
	branch 0x00 != Mem0[es_178:di_194:byte] l0800_299D
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299F:
	branch Z_198 l0800_29A8
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A1:
	di_194 = 0x0001
	es_178 = 0x0000
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A8:
	wArg08_224 = es_178
	wArg06_225 = di_194 + 0x0004
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2983:
	*dxOut = wArg08_224
	return wArg06_225
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_29BD:
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2931_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> di:di ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> dx:<invalid> si:si ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_29C5(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_29C5_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_29C5:
	word16 sp_11 = fp - 0x007E
	branch (Mem0[ds:0x45AE:word16] | Mem0[ds:0x45B0:word16]) != 0x0000 l0800_2A07
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_29D6:
	branch (Mem0[ds:0x45AA:word16] | Mem0[ds:0x45AC:word16]) != 0x0000 l0800_2A07
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 0x0002 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_29DF:
	sp_11 = fp - 0x007E
	byte dl_859
	branch fn0800_2DE2(fp - 0x0002, si, ds, DPB(ptrLoc82, 0x4541, 0), ds, out dl_859, out ds) != 0x0000 l0800_29F6
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 0x0002 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_29F6:
	word16 dx_885 = Mem0[ds:0x2E51:word16]
	Mem888[ds:0x45B0:word16] = Mem0[ds:0x2E53:word16]
	Mem889[ds:0x45AE:word16] = dx_885 + 0x0008
	dx = dx_885 + 0x0008
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A07:
	word16 sp_59 = sp_11 - 0x0002
	Mem60[ss:sp_59:word16] = ds
	Mem64[ss:sp_59 - 0x0002:word16] = 0x4541
	Mem66[ss:sp_59 - 0x0004:word16] = ss
	Mem69[ss:sp_59 - 0x0006:word16] = fp - 0x006C
	fn0800_3509(ds, wArg04, wArg06)
	Mem75[ss:sp_59:word16] = ds
	Mem78[ss:sp_59 - 0x0002:word16] = 0x4541
	Mem80[ss:sp_59 - 0x0004:word16] = ss
	Mem83[ss:sp_59 - 0x0006:word16] = fp - 0x007A
	fn0800_35A3(ds, wArg04, wArg06)
	word16 bx_99 = (word16) Mem83[ds:0x2E51:segptr32] + ((DPB(fp - 0x007A, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	Mem101[ss:fp - 0x0004:word16] = Mem83[ds:0x2E53:word16]
	Mem102[ss:fp - 0x0006:word16] = bx_99
	word16 sp_118 = sp_59 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C53:
	word16 dx_120 = Mem102[ds:0x45AE:word16]
	branch Mem102[ds:0x45B0:word16] == Mem102[ss:fp - 0x0004:word16] l0800_2C62
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C62:
	branch dx_120 == Mem102[ss:fp - 0x0006:word16] l0800_2C6A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C6A:
	Mem820[ds:0x45AC:word16] = 0x0000
	Mem821[ds:0x45AA:word16] = 0x0000
	Mem822[ds:0x45B0:word16] = 0x0000
	Mem823[ds:0x45AE:word16] = 0x0000
	word16 sp_824 = sp_118 - 0x0002
	Mem825[ss:sp_824:word16] = Mem823[ss:fp + 0x000C:word16]
	Mem827[ss:sp_824 - 0x0002:word16] = Mem825[ss:fp + 0x000A:word16]
	Mem829[ss:sp_824 - 0x0004:word16] = Mem827[ss:fp + 0x0008:word16]
	Mem831[ss:sp_824 - 0x0006:word16] = Mem829[ss:fp + 0x0006:word16]
	Mem833[ss:sp_824 - 0x0008:word16] = Mem831[ss:fp + 0x0004:word16]
	Mem835[ss:sp_824 - 0x000A:word16] = Mem833[ss:fp + 0x0002:word16]
	selector ds_836
	return fn0800_29C5(fp - 0x0002, si, ds, out ds_836)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2C67:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C5F:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A4C:
	branch (Mem102[ds:0x45AA:word16] | Mem102[ds:0x45AC:word16]) != 0x0000 l0800_2A58
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A58:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B54:
	branch Mem0[Mem0[Mem102[ds:0x45AA:segptr32]:byte]:byte] == 0x00 l0800_2B61
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B61:
	word16 bx_810 = Mem102[ds:0x2E51:word16] + (((int16) Mem0[Mem0[Mem102[ds:0x45AE:segptr32]:byte]:byte] << 0x08) + DPB(dx_120, 0x00, 8))
	Mem812[ds:0x45B0:word16] = Mem102[ds:0x2E53:word16]
	Mem813[ds:0x45AE:word16] = bx_810
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B5E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A5B:
	word16 sp_432 = sp_118 - 0x0002
	Mem433[ss:sp_432:word16] = ss
	Mem436[ss:sp_432 - 0x0002:word16] = fp - 0x007A
	Mem438[ss:sp_432 - 0x0004:word16] = Mem436[ds:0x45AC:word16]
	Mem440[ss:sp_432 - 0x0006:word16] = Mem438[ds:0x45AA:word16]
	sp_118 = sp_432 + 0x0002
	branch fn0800_4357(bp, ptrArg00, ptrArg04) != 0x0000 l0800_2A75
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A75:
	ptr32 es_bx_523 = Mem440[ss:fp + 0x0002:segptr32]
	word16 dx_527 = Mem440[ds:0x45AE:word16]
	Mem0[es_bx_523 + 0x0002:word16] = Mem440[ds:0x45B0:word16]
	Mem0[Mem0[es_bx_523:word16]:word16] = dx_527
	ptr32 es_bx_530 = Mem529[ss:fp + 0x0006:segptr32]
	word16 dx_534 = Mem529[ds:0x45AA:word16]
	Mem0[es_bx_530 + 0x0002:word16] = Mem529[ds:0x45AC:word16]
	Mem0[Mem0[es_bx_530:word16]:word16] = dx_534
	ptr32 es_di_537 = Mem536[ds:0x45AE:segptr32]
	Mem542[ss:sp_432:word16] = SLICE(es_di_537, selector, 16)
	selector es_543 = Mem542[ss:fp + 0x000C:selector]
	Mem545[ss:sp_432 - 0x0002:word16] = (word16) es_di_537 + 0x0002
	word16 di_546 = Mem545[ss:fp + 0x000A:word16]
	word16 di_548 = Mem545[ss:sp_432 - 0x0002:word16]
	selector es_551 = Mem545[ss:sp_432:selector]
	Mem556[ss:sp_432:word16] = es_543
	Mem558[ss:sp_432 - 0x0002:word16] = di_546
	word16 cx_563 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB3:
	branch cx_563 == 0x0000 l0800_2AB5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB3_1:
	di_548 = di_548 + 0x0001
	cx_563 = cx_563 - 0x0001
	branch 0x00 != Mem558[es_551:di_548:byte] l0800_2AB3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB5:
	word16 di_582 = Mem558[ss:sp_432 - 0x0002:word16]
	selector es_585 = Mem558[ss:sp_432:selector]
	Mem590[ss:sp_432:word16] = ds
	word16 cx_573 = ~cx_563
	word16 cx_575 = cx_573 >>u 0x0001
	word16 si_581 = di_548 - cx_573
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC4:
	branch cx_575 == 0x0000 l0800_2AC6
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC6:
	word16 cx_604 = cx_575 * 0x0002 + (cx_573 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC8:
	branch cx_604 == 0x0000 l0800_2ACA
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ACA:
	ptr32 es_di_621 = Mem590[ss:fp + 0x000A:segptr32]
	selector ds_619 = Mem590[ss:sp_432:selector]
	Mem625[ss:sp_432:word16] = SLICE(es_di_621, selector, 16)
	selector es_626 = Mem625[ds_619:0x45AC:selector]
	Mem629[ss:sp_432 - 0x0002:word16] = (word16) es_di_621
	word16 di_630 = Mem629[ds_619:0x45AA:word16]
	word16 cx_636 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADD:
	branch cx_636 == 0x0000 l0800_2ADF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADD_1:
	di_630 = di_630 + 0x0001
	cx_636 = cx_636 - 0x0001
	branch 0x00 != Mem629[es_626:di_630:byte] l0800_2ADD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADF:
	word16 cx_648 = ~cx_636
	word16 di_651 = Mem629[ss:sp_432 - 0x0002:word16]
	selector es_654 = Mem629[ss:sp_432:selector]
	Mem663[ss:sp_432:word16] = cx_648
	word16 si_650 = di_630 - cx_648
	word16 cx_664 = 0xFFFF
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF3:
	branch cx_664 == 0x0000 l0800_2AF5
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF3_2:
	di_651 = di_651 + 0x0001
	cx_664 = cx_664 - 0x0001
	branch 0x00 != Mem663[es_654:di_651:byte] l0800_2AF3
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF5:
	word16 di_679 = di_651 - 0x0001
	word16 cx_682 = Mem663[ss:sp_432:word16]
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF7:
	branch cx_682 == 0x0000 l0800_2AF9
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF9:
	ptr32 es_di_698 = Mem663[ds_619:0x45AA:segptr32]
	*dsOut = ds_619
	word16 di_699 = (word16) es_di_698
	selector es_700 = SLICE(es_di_698, selector, 16)
	word16 cx_701 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B02:
	branch cx_701 == 0x0000 l0800_2B04
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B02_1:
	di_699 = di_699 + 0x0001
	cx_701 = cx_701 - 0x0001
	branch 0x00 != Mem663[es_700:di_699:byte] l0800_2B02
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B04:
	word16 cx_711 = ~cx_701
	word16 di_715 = di_699 - cx_711
	byte Z_719 = cond(di_715)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0A:
	branch cx_711 == 0x0000 l0800_2B0C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0A_2:
	Z_719 = cond(0x00 - Mem663[es_700:di_715:byte]) (alias)
	di_715 = di_715 + 0x0001
	cx_711 = cx_711 - 0x0001
	branch 0x00 != Mem663[es_700:di_715:byte] l0800_2B0A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0C:
	branch Z_719 l0800_2B15
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0E:
	di_715 = 0x0001
	es_700 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B15:
	Mem747[ds_619:0x45AC:word16] = es_700
	Mem748[ds_619:0x45AA:word16] = di_715 + 0x0004
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF7_3:
	Mem691[es_654:di_679:byte] = Mem663[es_626:si_650:byte]
	si_650 = si_650 + 0x0001
	di_679 = di_679 + 0x0001
	cx_682 = cx_682 - 0x0001
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC8_1:
	Mem613[es_585:di_582:byte] = Mem590[es_551:si_581:byte]
	si_581 = si_581 + 0x0001
	di_582 = di_582 + 0x0001
	cx_604 = cx_604 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC4_2:
	Mem598[es_585:di_582:word16] = Mem590[es_551:si_581:word16]
	si_581 = si_581 + 0x0002
	di_582 = di_582 + 0x0002
	cx_575 = cx_575 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2A72:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B2B:
	ptr32 es_di_447 = Mem440[ds:0x45AA:segptr32]
	word16 di_448 = (word16) es_di_447
	selector es_449 = SLICE(es_di_447, selector, 16)
	word16 cx_454 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B34:
	branch cx_454 == 0x0000 l0800_2B36
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B34_1:
	di_448 = di_448 + 0x0001
	cx_454 = cx_454 - 0x0001
	branch 0x00 != Mem440[es_449:di_448:byte] l0800_2B34
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B36:
	word16 cx_464 = ~cx_454
	word16 di_468 = di_448 - cx_464
	byte Z_472 = cond(di_468)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3C:
	branch cx_464 == 0x0000 l0800_2B3E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3C_2:
	Z_472 = cond(0x00 - Mem440[es_449:di_468:byte]) (alias)
	di_468 = di_468 + 0x0001
	cx_464 = cx_464 - 0x0001
	branch 0x00 != Mem440[es_449:di_468:byte] l0800_2B3C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3E:
	branch Z_472 l0800_2B47
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B40:
	di_468 = 0x0001
	es_449 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B47:
	Mem500[ds:0x45AC:word16] = es_449
	Mem501[ds:0x45AA:word16] = di_468 + 0x0004
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A55:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C12:
	word16 dx_146 = Mem102[ds:0x45AE:word16]
	branch Mem102[ds:0x45B0:word16] == Mem102[ss:fp - 0x0004:word16] l0800_2C21
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C21:
	branch dx_146 == Mem102[ss:fp - 0x0006:word16] l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C26:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C1E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B8A:
	branch Mem102[ds:0x2A1B:word16] == 0x0000 l0800_2BBB
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B91:
	word16 sp_362 = sp_118 - 0x0002
	Mem363[ss:sp_362:word16] = ss
	selector es_364 = Mem363[ss:sp_362:selector]
	word16 di_367 = fp - 0x006C
	word16 cx_373 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9B:
	branch cx_373 == 0x0000 l0800_2B9D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9B_1:
	di_367 = di_895 + 0x0001
	cx_373 = cx_373 - 0x0001
	di_895 = di_367
	branch 0x00 != Mem363[es_364:di_895:byte] l0800_2B9B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9D:
	Mem388[ss:sp_362:word16] = ~cx_373 - 0x0001
	Mem390[ss:sp_362 - 0x0002:word16] = ss
	Mem393[ss:sp_362 - 0x0004:word16] = fp - 0x006C
	word16 ax_394 = Mem393[ds:0x45AE:word16]
	Mem398[ss:sp_362 - 0x0006:word16] = Mem393[ds:0x45B0:word16]
	Mem400[ss:sp_362 - 0x0008:word16] = ax_394 + 0x0002
	sp_118 = sp_362 + 0x0002
	branch fn0800_BFE6(ptrArg00, ptrArg04, wArg08) == 0x0000 l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BBB:
	branch Mem102[ds:0x2A1B:word16] != 0x0000 l0800_2BEC
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BC2:
	si = Mem102[ds:0x45AE:word16] + 0x0002
	word16 sp_279 = sp_118 - 0x0002
	Mem280[ss:sp_279:word16] = ds
	selector ds_281 = Mem280[ds:0x45B0:selector]
	Mem283[ss:sp_279 - 0x0002:word16] = ss
	selector es_284 = Mem283[ss:sp_279 - 0x0002:selector]
	word16 di_287 = fp - 0x006C
	word16 ax_289 = 0x0000
	word16 cx_294 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BD8:
	branch cx_294 == 0x0000 l0800_2BDA
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BD8_2:
	di_287 = di_287 + 0x0001
	cx_294 = cx_294 - 0x0001
	branch 0x00 != Mem283[es_284:di_287:byte] l0800_2BD8
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDA:
	word16 cx_304 = ~cx_294
	word16 di_306 = di_287 - cx_304
	byte SCZO_308 = cond(di_306)
	byte Z_310 = SCZO_308
	byte C_311 = SCZO_308
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDE:
	branch cx_304 == 0x0000 l0800_2BE0
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDE_3:
	byte SCZO_347 = cond(Mem283[ds_281:si:byte] - Mem283[es_284:di_893:byte])
	Z_310 = SCZO_347 (alias)
	C_311 = SCZO_347 (alias)
	si = si + 0x0001
	di_306 = di_893 + 0x0001
	cx_304 = cx_304 - 0x0001
	di_893 = di_306
	branch Mem283[ds_281:si:byte] != Mem283[es_284:di_893:byte] l0800_2BDE
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE0:
	branch Z_310 l0800_2BE7
// DataOut: ax bp si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE2:
	word16 ax_340 = 0x0000 - C_311
	ax_289 = ax_340 - 0xFFFF - (ax_340 <u 0x0000)
// DataOut: ax bp si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE7:
	ds = Mem283[ss:sp_279:selector]
	sp_118 = sp_279 + 0x0002
	branch ax_289 == 0x0000 l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C29:
	ptr32 es_di_158 = Mem102[ds:0x45AE:segptr32]
	selector es_160 = SLICE(es_di_158, selector, 16)
	word16 di_161 = (word16) es_di_158 + 0x0002
	word16 cx_167 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C35:
	branch cx_167 == 0x0000 l0800_2C37
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C35_1:
	di_161 = di_161 + 0x0001
	cx_167 = cx_167 - 0x0001
	branch 0x00 != Mem102[es_160:di_161:byte] l0800_2C35
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C37:
	word16 cx_177 = ~cx_167
	word16 di_181 = di_161 - cx_177
	byte Z_185 = cond(di_181)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3D:
	branch cx_177 == 0x0000 l0800_2C3F
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3D_2:
	Z_185 = cond(0x00 - Mem102[es_160:di_181:byte]) (alias)
	di_181 = di_181 + 0x0001
	cx_177 = cx_177 - 0x0001
	branch 0x00 != Mem102[es_160:di_181:byte] l0800_2C3D
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3F:
	branch Z_185 l0800_2C48
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C41:
	di_181 = 0x0001
	es_160 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C48:
	Mem212[ds:0x45AC:word16] = es_160
	Mem213[ds:0x45AA:word16] = di_181
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BEC:
	word16 bx_273 = Mem102[ds:0x2E51:word16] + (((int16) Mem0[Mem0[Mem102[ds:0x45AE:segptr32]:byte]:byte] << 0x08) + DPB(dx_146, 0x00, 8))
	Mem275[ds:0x45B0:word16] = Mem102[ds:0x2E53:word16]
	Mem276[ds:0x45AE:word16] = bx_273
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_29EE:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp

fn0800_29C5_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -138(fp):<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2C9A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: si sp
fn0800_2C9A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2C9A:
	word16 cx_16 = 0x0000
	word16 si_19 = 0x2A29
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2CA0:
	word16 dx_20 = cx_16
	word16 bx_21 = 0x0008
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBD:
	branch bx_21 != 0x0000 l0800_2CA7
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CA7:
	word16 ax_41
	branch (dx_20 & 0x0001) == 0x0000 l0800_2CB6
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CB6:
	ax_41 = dx_20 >>u 0x0001
// DataOut: ax bp bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CAD:
	ax_41 = dx_20 >>u 0x0001 ^ 0xA001
// DataOut: ax bp bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBA:
	dx_20 = ax_41
	bx_21 = bx_21 - 0x0001
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CC1:
	Mem30[ds:si_19:word16] = dx_20
	si_19 = si_19 + 0x0002
	cx_16 = cx_16 + 0x0001
	branch cx_16 <u 0x0100 l0800_2CA0
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CCD:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

fn0800_2C9A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> si:si dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si



word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_2CCF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2CCF:
	word16 si_11 = wArg06
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CFD:
	si_11 = si_11 - 0x0001
	branch si_11 != 0x0000 l0800_2CD8
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CD8:
	wArg08 = Mem0[ds:((DPB(si_11, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ wArg08 >>u 0x08
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2D04:
	return wArg08
// DataOut: al ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>

fn0800_2CCF_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>



word16 fn0800_2D0A(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_2D0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2D0A:
	selector ds_121 = fn0800_4311(ds, 0xFFF0, 0x0000)
	Mem23[ss:fp - 0x0004:word16] = 0xFFF0
	Mem25[ss:fp - 0x0006:word16] = 0x0000
	Mem27[ss:fp - 0x0012:word16] = Mem25[ss:fp + 0x0004:word16]
	Mem29[ss:fp - 0x0014:word16] = Mem27[ss:fp + 0x0002:word16]
	word16 si_32
	word16 ax_33 = fn0800_AD2F(ds_121, ptrArg00, wArg02, out si_32)
	Mem35[ss:fp - 0x000C:word16] = 0xFFF0
	Mem36[ss:fp - 0x000E:word16] = ax_33
	word16 sp_134 = fp - 0x0010
	word16 si_135 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_2D8F:
	branch (Mem36[ss:fp + 0x0006:word16] | Mem36[ss:fp + 0x0008:word16]) != 0x0000 l0800_2D3A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D3A:
	word16 ax_103
	branch Mem36[ss:fp + 0x0008:word16] <u 0x0000 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D40:
	branch Mem36[ss:fp + 0x0008:word16] >u 0x0000 l0800_2D48
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D42:
	branch Mem36[ss:fp + 0x0006:word16] <=u 0xFFF0 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D4F:
	ax_103 = Mem36[ss:fp + 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D48:
	ax_103 = 0xFFF0
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D55:
	Mem104[ss:fp - 0x000A:word16] = ax_103
	word16 sp_105 = sp_134 - 0x0002
	Mem106[ss:sp_105:word16] = Mem104[ss:fp + 0x0004:word16]
	Mem108[ss:sp_105 - 0x0002:word16] = Mem106[ss:fp + 0x0002:word16]
	Mem110[ss:sp_105 - 0x0004:word16] = Mem108[ss:fp - 0x0008:word16]
	Mem112[ss:sp_105 - 0x0006:word16] = ax_103
	Mem114[ss:sp_105 - 0x0008:word16] = Mem112[ss:fp - 0x0004:word16]
	Mem116[ss:sp_105 - 0x000A:word16] = Mem114[ss:fp - 0x0006:word16]
	word16 di_120
	Mem126[ss:sp_105:word16] = fn0800_4110(ds_121, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_120, out ds_121)
	Mem128[ss:sp_105 - 0x0002:word16] = Mem126[ss:fp - 0x000A:word16]
	Mem130[ss:sp_105 - 0x0004:word16] = Mem128[ss:fp - 0x0004:word16]
	Mem132[ss:sp_105 - 0x0006:word16] = Mem130[ss:fp - 0x0006:word16]
	si_135 = fn0800_2CCF(ds_121, ptrArg00, wArg04, wArg06)
	Mem140[ss:fp + 0x0006:word16] = Mem132[ss:fp + 0x0006:word16] - Mem132[ss:fp - 0x000A:word16]
	Mem144[ss:fp + 0x0008:word16] = v14
	sp_134 = sp_105 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D97:
	word16 sp_63 = sp_134 - 0x0002
	Mem64[ss:sp_63:word16] = 0x0000
	Mem66[ss:sp_63 - 0x0002:word16] = Mem64[ss:fp - 0x000C:word16]
	Mem68[ss:sp_63 - 0x0004:word16] = Mem66[ss:fp - 0x000E:word16]
	Mem70[ss:sp_63 - 0x0006:word16] = Mem68[ss:fp + 0x0004:word16]
	Mem72[ss:sp_63 - 0x0008:word16] = Mem70[ss:fp + 0x0002:word16]
	selector ds_74
	fn0800_ACB3(fp - 0x0002, ds_121, ptrArg00, wArg02, wArg08, out ds_74)
	Mem79[ss:sp_63:word16] = Mem72[ss:fp - 0x0004:word16]
	Mem81[ss:sp_63 - 0x0002:word16] = Mem79[ss:fp - 0x0006:word16]
	selector ds_83
	fn0800_4346(ds_74, wArg00, wArg02, out ds_83)
	return si_135
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2D0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> cx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: ah al ax eax rax
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DBF_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_2DBF:
	Mem7[ds:0x4656:word16] = 0xFFFF
	Mem9[ds:0x4654:word16] = 0x0000
	Mem11[ds:0x4652:word16] = Mem9[ds:0x2A27:word16]
	Mem14[ds:0x4650:word16] = wArg02
	Mem17[ds:0x464E:word16] = wArg04
	return
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_2DBF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> -2(fp):bp



word16 fn0800_2DE2(word16 bp, word16 si, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DE2_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DE2:
	word16 sp_105 = fp - 0x0016
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DF1:
	branch Mem0[ds:0x4652:word16] != Mem0[ds:0x4656:word16] l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DFA:
	branch Mem0[ds:0x464E:word16] == 0x0000 l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E01:
	sp_105 = fp - 0x0016
	byte dl_1170
	si = fn0800_3479(ds, DPB(ptrLoc1C, fp - 0x0012, 0), ss, 0x0000, out dl_1170, out ds)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E11:
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E1B
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E1B:
	Mem780[ds:0x4617:word16] = 0x0000
	word16 dx_794
	selector ds_795
	word16 ax_796 = fn0800_A77D(ds, 0x45B2, ds, 0x0065, DPB(ptrLoc1A, Mem780[ds:0x461B:word16], 0), Mem780[ds:0x461D:word16], out dx_794, out ds_795)
	branch (ax_796 | dx_794) != 0x0000 l0800_2E3F
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E3F:
	selector es_1139 = ds_795
	word16 di_1151 = 0x45B2
	word16 cx_1153 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E49:
	branch cx_1153 == 0x0000 l0800_2E4B
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E49_1:
	di_1151 = di_1151 + 0x0001
	cx_1153 = cx_1153 - 0x0001
	branch 0x00 != Mem780[ds_795:di_1151:byte] l0800_2E49
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E4B:
	word16 cx_1148 = ~cx_1153
	word16 di_1135 = di_1151 - cx_1148
	byte Z_1143 = cond(di_1135)
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E52:
	branch cx_1148 == 0x0000 l0800_2E54
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E52_2:
	Z_1143 = cond(0x0D - Mem780[ds_795:di_1135:byte]) (alias)
	di_1135 = di_1135 + 0x0001
	cx_1148 = cx_1148 - 0x0001
	branch 0x0D != Mem780[ds_795:di_1135:byte] l0800_2E52
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E54:
	branch Z_1143 l0800_2E5D
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E56:
	di_1135 = 0x0001
	es_1139 = 0x0000
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E5D:
	branch (di_1135 - 0x0001 | es_1139) == 0x0000 l0800_2E8B
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E64:
	selector es_1067 = ds_795
	word16 di_1070 = 0x45B2
	word16 cx_1076 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E6E:
	branch cx_1076 == 0x0000 l0800_2E70
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E6E_1:
	di_1070 = di_1070 + 0x0001
	cx_1076 = cx_1076 - 0x0001
	branch 0x00 != Mem780[ds_795:di_1070:byte] l0800_2E6E
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E70:
	word16 cx_1084 = ~cx_1076
	word16 di_1086 = di_1070 - cx_1084
	byte Z_1089 = cond(di_1086)
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E77:
	branch cx_1084 == 0x0000 l0800_2E79
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E77_2:
	Z_1089 = cond(0x0D - Mem780[ds_795:di_1086:byte]) (alias)
	di_1086 = di_1086 + 0x0001
	cx_1084 = cx_1084 - 0x0001
	branch 0x0D != Mem780[ds_795:di_1086:byte] l0800_2E77
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E79:
	branch Z_1089 l0800_2E82
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E7B:
	di_1086 = 0x0001
	es_1067 = 0x0000
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E82:
	Mem1115[es_1067:di_1086 - 0x0001:byte] = 0x00
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E8B:
	branch (int16) Mem780[ds_795:0x45B2:byte] != 0x0000 l0800_2EA5
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2EA5:
	word16 di_1062 = 0x45B2
	word16 cx_1064 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EAF:
	branch cx_1064 == 0x0000 l0800_2EB1
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EAF_1:
	di_1062 = di_1188 + 0x0001
	cx_1064 = cx_1064 - 0x0001
	di_1188 = di_1062
	branch 0x00 != Mem780[ds_795:di_1188:byte] l0800_2EAF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EB1:
	Mem940[ds_795:0x4619:word16] = ~cx_1064 - 0x0001
	ptrLoc1A = DPB(ptrLoc1A, 0x45B2, 0) (alias)
	byte dl_947 = fn0800_0C6C(ds_795, ptrLoc1A)
	*dlOut = dl_947
	dx = DPB(dx_794, dl_947, 0) (alias)
	branch Mem940[ds_795:0x464E:word16] != 0x0000 l0800_2EFE
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2EFE:
	byte dl_1053
	si = fn0800_33CD(ds_795, DPB(ptrLoc20, fp - 0x0012, 0), ss, 0x0000, 0x45B2, ds_795, out dl_1053, out ds)
	Mem1059[ds:0x4654:word16] = 0x0000
	sp_105 = fp - 0x0016
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2ECA:
	word16 di_954 = (word16) ptrArg02
	selector es_955 = SLICE(ptrArg02, selector, 16)
	word16 di_1034 = 0x45B2
	word16 cx_1036 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2ED9:
	branch cx_1036 == 0x0000 l0800_2EDB
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2ED9_2:
	di_1034 = di_1034 + 0x0001
	cx_1036 = cx_1036 - 0x0001
	branch 0x00 != Mem940[ds_795:di_1034:byte] l0800_2ED9
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2EDB:
	word16 cx_979 = ~cx_1036
	word16 cx_1000 = cx_979 >>u 0x0001
	word16 si_1003 = di_1034 - cx_979
	word16 di_1004 = di_954
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEA:
	branch cx_1000 == 0x0000 l0800_2EEC
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEC:
	word16 cx_1007 = cx_1000 * 0x0002 + (cx_979 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEE:
	branch cx_1007 == 0x0000 l0800_2EF0
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EF0:
	Mem1022[ds_795:0x4617:word16] = Mem940[ds_795:0x4617:word16] + 0x0001
	*dsOut = ds_795
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2EEE_1:
	Mem1014[es_955:di_1004:byte] = Mem940[ds_795:si_1003:byte]
	si_1003 = si_1003 + 0x0001
	di_1004 = di_1004 + 0x0001
	cx_1007 = cx_1007 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEA_3:
	Mem1002[es_955:di_1004:word16] = Mem940[ds_795:si_1003:word16]
	si_1003 = si_1003 + 0x0002
	di_1004 = di_1004 + 0x0002
	cx_1000 = cx_1000 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2E93:
	byte dl_905
	selector ds_906
	return fn0800_2DE2(fp - 0x0002, si, ds_795, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_905, out ds_906)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2E3C:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16)

l0800_2F1B:
	byte dl_807
	word16 di_808
	selector ds_809
	fn0800_A614(fp - 0x0002, ds_795, DPB(ptrLoc1A, Mem780[ds_795:0x461B:word16], 0), Mem780[ds_795:0x461D:word16], out dl_807, out di_808, out ds_809)
	Mem813[ds_809:0x4654:word16] = 0x0000
	Mem814[ds_809:0x461D:word16] = 0x0000
	Mem815[ds_809:0x461B:word16] = 0x0000
	Mem817[ds_809:0x4652:word16] = Mem815[ds_809:0x4652:word16] + 0x0001
	Mem820[ss:fp - 0x0018:word16] = Mem817[ss:fp + 0x0004:word16]
	Mem822[ss:fp - 0x001A:word16] = Mem820[ss:fp + 0x0002:word16]
	byte dl_823
	selector ds_824
	return fn0800_2DE2(fp - 0x0002, si, ds_809, ptrArg00, wArg02, out dl_823, out ds_824)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2E18:
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F51:
	word16 ax_86 = Mem0[ds:0x4652:word16]
	branch ax_86 != Mem0[ds:0x4656:word16] l0800_2F5D
// DataOut: ax bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F5D:
	branch ax_86 != Mem0[ds:0x269A:word16] l0800_2F6B
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F6B:
	ptr32 es_bx_543 = Mem0[ds:0x269C:segptr32]
	fn0800_BF9E(DPB(ptrLoc1E, 0x45B2, 0), ds, DPB(ptrLoc1A, Mem0[SLICE(es_bx_543, selector, 16):(word16) es_bx_543 + (Mem0[ds:0x4652:word16] << 0x0002):word16], 0))
	word16 di_1184 = 0x45B2
	word16 cx_571 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F94:
	branch cx_571 == 0x0000 l0800_2F96
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F94_1:
	di_1184 = di_1184 + 0x0001
	cx_571 = cx_571 - 0x0001
	branch 0x00 != Mem0[ds:di_1184:byte] l0800_2F94
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F96:
	Mem583[ds:0x4619:word16] = ~cx_571 - 0x0001
	fn0800_0C6C(ds, DPB(ptrLoc1A, 0x45B2, 0))
	word16 ax_592 = Mem583[ds:0x4652:word16]
	Mem593[ds:0x4656:word16] = ax_592
	Mem594[ds:0x4617:word16] = 0x0000
	branch Mem0[Mem0[Mem594[ds:(word16) Mem594[ds:0x269C:segptr32] + (ax_592 << 0x0002):segptr32]:byte]:byte] != 0x40 l0800_3007
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_3007:
	*dlOut = fn0800_335C(ds, 0x45B2, ds)
	branch Mem594[ds:0x464E:word16] != 0x0000 l0800_3051
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3051:
	Mem746[ss:fp - 0x0018:word16] = ds
	Mem749[ss:fp - 0x001A:word16] = 0x45B2
	Mem754[ss:fp - 0x001C:word16] = 0x0000
	Mem756[ss:fp - 0x001E:word16] = ss
	Mem759[ss:fp - 0x0020:word16] = fp - 0x0012
	sp_105 = fp - 0x0016
	byte dl_760
	si = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_760, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3019:
	ptr32 es_di_659 = Mem594[ss:fp + 0x0002:segptr32]
	Mem663[ss:fp - 0x0018:word16] = SLICE(es_di_659, selector, 16)
	Mem665[ss:fp - 0x001A:word16] = ds
	selector es_666 = Mem665[ss:fp - 0x001A:selector]
	Mem670[ss:fp - 0x001A:word16] = (word16) es_di_659
	word16 di_1185 = 0x45B2
	word16 cx_677 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3028:
	branch cx_677 == 0x0000 l0800_302A
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3028_1:
	di_1185 = di_1185 + 0x0001
	cx_677 = cx_677 - 0x0001
	branch 0x00 != Mem670[es_666:di_1185:byte] l0800_3028
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_302A:
	word16 di_693 = Mem670[ss:fp - 0x001A:word16]
	selector es_696 = Mem670[ss:fp - 0x0018:selector]
	Mem701[ss:fp - 0x0018:word16] = ds
	word16 cx_685 = ~cx_677
	word16 cx_687 = cx_685 >>u 0x0001
	word16 si_692 = di_1185 - cx_685
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3039:
	branch cx_687 == 0x0000 l0800_303B
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303B:
	word16 cx_713 = cx_687 * 0x0002 + (cx_685 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303D:
	branch cx_713 == 0x0000 l0800_303F
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303F:
	selector ds_725 = Mem701[ss:fp - 0x0018:selector]
	*dsOut = ds_725
	Mem728[ds_725:0x4617:word16] = Mem701[ds_725:0x4617:word16] + 0x0001
	Mem730[ds_725:0x4652:word16] = Mem728[ds_725:0x4652:word16] + 0x0001
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303D_1:
	Mem720[es_696:di_693:byte] = Mem701[es_666:si_692:byte]
	si_692 = si_692 + 0x0001
	di_693 = di_693 + 0x0001
	cx_713 = cx_713 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3039_2:
	Mem708[es_696:di_693:word16] = Mem701[es_666:si_692:word16]
	si_692 = si_692 + 0x0002
	di_693 = di_693 + 0x0002
	cx_687 = cx_687 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2FC7:
	ptr32 es_bx_613 = Mem594[ds:0x269C:segptr32]
	selector es_614 = SLICE(es_bx_613, selector, 16)
	word16 bx_616 = (word16) es_bx_613 + (Mem594[ds:0x4652:word16] << 0x0002)
	word16 ax_618 = Mem594[es_614:bx_616:word16]
	word16 di_625
	selector ds_626
	word16 si_627 = fn0800_4234(si, di_1184, ds, ax_618 + 0x0001, Mem594[es_614:bx_616 + 0x0002:word16], 0x0A13, ds, out di_625, out ds_626)
	Mem630[ds_626:0x461D:word16] = dx
	Mem631[ds_626:0x461B:word16] = ax_618 + 0x0001
	Mem632[ds_626:0x4654:word16] = 0x0001
	Mem634[ss:fp - 0x0018:word16] = Mem632[ss:fp + 0x0004:word16]
	Mem636[ss:fp - 0x001A:word16] = Mem634[ss:fp + 0x0002:word16]
	byte dl_637
	selector ds_638
	return fn0800_2DE2(fp - 0x0002, si_627, ds_626, ptrArg00, wArg02, out dl_637, out ds_638)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2F63:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2F5A:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3066:
	word16 si_110 = si
	branch si != 0x0000 l0800_306D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_306D:
	branch Mem0[ds:0x2A1B:word16] == 0x0000 l0800_309E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3074:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_309A:
	branch si_110 != 0x0000 l0800_3076
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3076:
	word16 sp_492 = sp_105 - 0x0002
	Mem493[ss:sp_492:word16] = ds
	Mem496[ss:sp_492 - 0x0002:word16] = 0x45B2
	sp_105 = sp_492 + 0x0002
	branch fn0800_31B4(fp - 0x0002, ds, out ds) == 0x0000 l0800_309E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3085:
	Mem505[ss:sp_492:word16] = ds
	Mem508[ss:sp_492 - 0x0002:word16] = 0x45B2
	Mem513[ss:sp_492 - 0x0004:word16] = 0x0000
	Mem515[ss:sp_492 - 0x0006:word16] = ss
	Mem518[ss:sp_492 - 0x0008:word16] = fp - 0x0012
	sp_105 = sp_492 + 0x0002
	byte dl_520
	si_110 = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_520, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_309E:
	word16 si_427 = si_110
	branch si_110 == 0x0000 l0800_30F0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30A2:
	Mem432[ds:Mem0[ds:0x4619:word16] + 0x45B2:byte] = 0x00
	branch Mem432[ds:0x4617:word16] != 0x0000 l0800_30C9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30B2:
	branch Mem432[ds:0x4650:word16] == 0x0000 l0800_30C9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30B9:
	word16 sp_467 = sp_105 - 0x0002
	Mem468[ss:sp_467:word16] = ds
	Mem471[ss:sp_467 - 0x0002:word16] = 0x45B2
	Mem473[ss:sp_467 - 0x0004:word16] = ds
	Mem476[ss:sp_467 - 0x0006:word16] = 0x0A17
	word16 di_478
	si_427 = fn0800_B2EF(ds, wArg00, wArg02, out di_478)
	sp_105 = sp_467 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30C9:
	branch (Mem432[ds:0x461B:word16] | Mem432[ds:0x461D:word16]) == 0x0000 l0800_30DA
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30DA:
	Mem463[ds:0x4652:word16] = Mem432[ds:0x4652:word16] + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30D2:
	Mem461[ds:0x4654:word16] = 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30DE:
	word16 sp_445 = sp_105 - 0x0002
	Mem446[ss:sp_445:word16] = Mem432[ss:fp + 0x0004:word16]
	Mem448[ss:sp_445 - 0x0002:word16] = Mem446[ss:fp + 0x0002:word16]
	byte dl_449
	selector ds_450
	return fn0800_2DE2(fp - 0x0002, si_427, ds, ptrArg00, wArg02, out dl_449, out ds_450)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_306A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30F0:
	word16 sp_120 = sp_105 - 0x0002
	Mem121[ss:sp_120:word16] = ds
	Mem125[ss:sp_120 - 0x0002:word16] = 0x45B2
	Mem127[ss:sp_120 - 0x0004:word16] = Mem125[ss:fp + 0x0004:word16]
	Mem129[ss:sp_120 - 0x0006:word16] = Mem127[ss:fp + 0x0002:word16]
	fn0800_3509(ds, wArg04, wArg06)
	Mem134[ss:sp_120:word16] = ss
	Mem139[ss:sp_120:word16] = Mem134[ss:sp_120:selector]
	selector es_140 = Mem139[ss:fp + 0x0004:selector]
	Mem142[ss:sp_120 - 0x0002:word16] = fp - 0x0012
	word16 di_143 = Mem142[ss:fp + 0x0002:word16]
	word16 di_1176 = Mem142[ss:sp_120 - 0x0002:word16]
	selector es_148 = Mem142[ss:sp_120:selector]
	Mem153[ss:sp_120:word16] = es_140
	Mem155[ss:sp_120 - 0x0002:word16] = di_143
	word16 cx_160 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311B:
	branch cx_160 == 0x0000 l0800_311D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311B_1:
	di_1176 = di_1176 + 0x0001
	cx_160 = cx_160 - 0x0001
	branch 0x00 != Mem155[es_148:di_1176:byte] l0800_311B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311D:
	word16 di_1177 = Mem155[ss:sp_120 - 0x0002:word16]
	selector es_176 = Mem155[ss:sp_120:selector]
	Mem180[ss:fp - 0x0004:word16] = ds
	word16 cx_170 = ~cx_160
	Mem183[ss:sp_120:word16] = cx_170
	word16 si_172 = di_1176 - cx_170
	word16 cx_184 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3132:
	branch cx_184 == 0x0000 l0800_3134
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3132_2:
	di_1177 = di_1177 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch 0x00 != Mem183[es_176:di_1177:byte] l0800_3132
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3134:
	word16 di_197 = di_1177 - 0x0001
	word16 cx_200 = Mem183[ss:sp_120:word16]
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3136:
	branch cx_200 == 0x0000 l0800_3138
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3138:
	selector ds_212 = Mem183[ss:fp - 0x0004:selector]
	Mem214[ss:sp_120:word16] = Mem183[ss:fp + 0x0004:word16]
	Mem216[ss:sp_120 - 0x0002:word16] = Mem214[ss:fp + 0x0002:word16]
	*dlOut = fn0800_0C6C(ds_212, ptrArg00)
	word16 si_1179 = Mem216[ss:fp + 0x0002:word16]
	word16 cx_222 = Mem216[ss:fp + 0x0004:word16]
	Mem224[ss:sp_120:word16] = ds_212
	selector es_225 = Mem224[ss:sp_120:selector]
	Mem231[ss:sp_120:word16] = ds_212
	word16 di_1178 = 0x4348
	word16 ax_233 = 0x0000
	word16 cx_237 = 0xFFFF
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315A:
	branch cx_237 == 0x0000 l0800_315C
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315A_1:
	di_1178 = di_1178 + 0x0001
	cx_237 = cx_237 - 0x0001
	branch 0x00 != Mem231[es_225:di_1178:byte] l0800_315A
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315C:
	word16 cx_245 = ~cx_237
	word16 di_246 = di_1178 - cx_245
	byte SCZO_248 = cond(di_246)
	byte Z_249 = SCZO_248
	byte C_251 = SCZO_248
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3160:
	branch cx_245 == 0x0000 l0800_3162
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3160_2:
	byte SCZO_396 = cond(Mem231[cx_222:si_1179:byte] - Mem231[es_225:di_1180:byte])
	Z_249 = SCZO_396 (alias)
	C_251 = SCZO_396 (alias)
	si_1179 = si_1179 + 0x0001
	di_246 = di_1180 + 0x0001
	cx_245 = cx_245 - 0x0001
	di_1180 = di_246
	branch Mem231[cx_222:si_1179:byte] != Mem231[es_225:di_1180:byte] l0800_3160
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3162:
	branch Z_249 l0800_3169
// DataOut: ax bp dl si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3164:
	word16 ax_390 = 0x0000 - C_251
	ax_233 = ax_390 - 0xFFFF - (ax_390 <u 0x0000)
// DataOut: ax bp dl si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3169:
	selector ds_271 = Mem231[ss:sp_120:selector]
	word16 sp_272 = sp_120 + 0x0002
	branch ax_233 == 0x0000 l0800_3195
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_316E:
	si_1179 = Mem231[ss:fp + 0x0002:word16]
	word16 cx_305 = Mem231[ss:fp + 0x0004:word16]
	Mem307[ss:sp_120:word16] = ds_271
	selector es_308 = Mem307[ss:sp_120:selector]
	Mem314[ss:sp_120:word16] = ds_271
	word16 di_1181 = 0x4477
	word16 ax_316 = 0x0000
	word16 cx_320 = 0xFFFF
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3181:
	branch cx_320 == 0x0000 l0800_3183
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3181_1:
	di_1181 = di_1181 + 0x0001
	cx_320 = cx_320 - 0x0001
	branch 0x00 != Mem314[es_308:di_1181:byte] l0800_3181
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3183:
	word16 cx_328 = ~cx_320
	word16 di_329 = di_1181 - cx_328
	byte SCZO_331 = cond(di_329)
	byte Z_332 = SCZO_331
	byte C_334 = SCZO_331
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3187:
	branch cx_328 == 0x0000 l0800_3189
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3187_2:
	byte SCZO_377 = cond(Mem314[cx_305:si_1179:byte] - Mem314[es_308:di_1183:byte])
	Z_332 = SCZO_377 (alias)
	C_334 = SCZO_377 (alias)
	si_1179 = si_1179 + 0x0001
	di_329 = di_1183 + 0x0001
	cx_328 = cx_328 - 0x0001
	di_1183 = di_329
	branch Mem314[cx_305:si_1179:byte] != Mem314[es_308:di_1183:byte] l0800_3187
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3189:
	branch Z_332 l0800_3190
// DataOut: ax bp dl si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_318B:
	word16 ax_371 = 0x0000 - C_334
	ax_316 = ax_371 - 0xFFFF - (ax_371 <u 0x0000)
// DataOut: ax bp dl si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3190:
	ds_271 = Mem314[ss:sp_120:selector]
	*dsOut = ds_271
	sp_272 = sp_120 + 0x0002
	branch ax_316 != 0x0000 l0800_31A7
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_31A7:
	Mem361[ds_271:0x4617:word16] = Mem314[ds_271:0x4617:word16] + 0x0001
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3195:
	word16 sp_287 = sp_272 - 0x0002
	Mem288[ss:sp_287:word16] = Mem231[ss:fp + 0x0004:word16]
	Mem290[ss:sp_287 - 0x0002:word16] = Mem288[ss:fp + 0x0002:word16]
	byte dl_292
	selector ds_293
	return fn0800_2DE2(fp - 0x0002, si_1179, ds_271, ptrArg00, wArg02, out dl_292, out ds_293)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_2DE2_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3136_3:
	Mem207[es_176:di_197:byte] = Mem183[es_148:si_172:byte]
	si_172 = si_172 + 0x0001
	di_197 = di_197 + 0x0001
	cx_200 = cx_200 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_31B4(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_31B4_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_31B4:
	word16 sp_12 = fp - 0x0088
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_31BD:
	word16 sp_28 = sp_12 - 0x0002
	Mem31[ss:sp_28:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem33[ss:sp_28 - 0x0002:word16] = Mem31[ss:fp + 0x0002:word16]
	Mem35[ss:sp_28 - 0x0004:word16] = ss
	Mem38[ss:sp_28 - 0x0006:word16] = fp - 0x0084
	fn0800_3509(ds, wArg04, wArg06)
	Mem44[ss:sp_28:word16] = Mem38[ss:fp + 0x0004:word16]
	Mem46[ss:sp_28 - 0x0002:word16] = Mem44[ss:fp + 0x0002:word16]
	Mem48[ss:sp_28 - 0x0004:word16] = ss
	Mem51[ss:sp_28 - 0x0006:word16] = fp - 0x0010
	fn0800_35A3(ds, wArg04, wArg06)
	Mem58[ss:sp_28:word16] = Mem51[ds:(Mem51[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16]
	Mem60[ss:sp_28 - 0x0002:word16] = ss
	Mem63[ss:sp_28 - 0x0004:word16] = fp - 0x0084
	Mem65[ss:sp_28 - 0x0006:word16] = ss
	Mem68[ss:sp_28 - 0x0008:word16] = fp - 0x001E
	selector ds_72
	branch fn0800_32CD(ds, wArg00, wArg02, wArg04, wArg06, wArg08, out ds_72) != 0x0000 l0800_323E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_323E:
	branch Mem68[ds_72:0x09AC:word16] != 0x0000 l0800_3253
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3253:
	Mem152[ss:sp_28:word16] = ss
	selector es_153 = Mem152[ss:sp_28:selector]
	word16 di_155 = fp - 0x0084
	word16 cx_160 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_325E:
	branch cx_160 == 0x0000 l0800_3260
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_325E_1:
	di_155 = di_276 + 0x0001
	cx_160 = cx_160 - 0x0001
	di_276 = di_155
	branch 0x00 != Mem152[es_153:di_276:byte] l0800_325E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3260:
	Mem174[ss:~cx_160 - 0x0002 + (fp - 0x0084):byte] = 0x00
	Mem176[ss:sp_28:word16] = ss
	Mem178[ss:sp_28 - 0x0002:word16] = fp - 0x0084
	Mem180[ss:sp_28 - 0x0004:word16] = Mem178[ss:fp + 0x0004:word16]
	Mem182[ss:sp_28 - 0x0006:word16] = Mem180[ss:fp + 0x0002:word16]
	fn0800_3509(ds_72, wArg04, wArg06)
	Mem185[ss:sp_28:word16] = ss
	Mem190[ss:sp_28:word16] = Mem185[ss:sp_28:selector]
	selector es_191 = Mem190[ss:fp + 0x0004:selector]
	Mem193[ss:sp_28 - 0x0002:word16] = fp - 0x0010
	word16 di_194 = Mem193[ss:fp + 0x0002:word16]
	word16 di_196 = Mem193[ss:sp_28 - 0x0002:word16]
	selector es_199 = Mem193[ss:sp_28:selector]
	Mem202[ss:sp_28:word16] = es_191
	Mem204[ss:sp_28 - 0x0002:word16] = di_194
	word16 cx_209 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3298:
	branch cx_209 == 0x0000 l0800_329A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3298_2:
	di_196 = di_196 + 0x0001
	cx_209 = cx_209 - 0x0001
	branch 0x00 != Mem204[es_199:di_196:byte] l0800_3298
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_329A:
	word16 cx_218 = ~cx_209
	word16 di_221 = Mem204[ss:sp_28 - 0x0002:word16]
	selector es_224 = Mem204[ss:sp_28:selector]
	Mem230[ss:sp_28:word16] = cx_218
	word16 si_220 = di_196 - cx_218
	word16 cx_231 = 0xFFFF
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32AE:
	branch cx_231 == 0x0000 l0800_32B0
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32AE_3:
	di_221 = di_221 + 0x0001
	cx_231 = cx_231 - 0x0001
	branch 0x00 != Mem230[es_224:di_221:byte] l0800_32AE
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B0:
	word16 di_243 = di_221 - 0x0001
	word16 cx_245 = Mem230[ss:sp_28:word16]
	sp_12 = sp_28 + 0x0002
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B2:
	branch cx_245 == 0x0000 l0800_32B4
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B4:
	Mem257[ds_72:0x09AC:word16] = Mem230[ds_72:0x09AC:word16] - 0x0001
	word16 bx_258 = Mem257[ds_72:0x09AC:word16]
	Mem262[ds_72:(bx_258 << 0x0001) + 0x09AE:word16] = Mem257[ds_72:(bx_258 << 0x0001) + 0x09AE:word16] + 0x0001
	ds = ds_72
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B2_4:
	Mem251[es_224:di_243:byte] = Mem230[es_199:si_220:byte]
	si_220 = si_220 + 0x0001
	di_243 = di_243 + 0x0001
	cx_245 = cx_245 - 0x0001
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3245:
	Mem140[ds_72:0x09AE:word16] = 0x0000
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

l0800_31FF:
	Mem92[ss:sp_28:word16] = ss
	Mem95[ss:sp_28 - 0x0002:word16] = fp - 0x0010
	Mem97[ss:sp_28 - 0x0004:word16] = ds_72
	Mem100[ss:sp_28 - 0x0006:word16] = 0x0A30
	Mem102[ss:sp_28 - 0x0008:word16] = ss
	Mem105[ss:sp_28 - 0x000A:word16] = fp - 0x001E
	Mem107[ss:sp_28 - 0x000C:word16] = ss
	Mem110[ss:sp_28 - 0x000E:word16] = fp - 0x0084
	Mem112[ss:sp_28 - 0x0010:word16] = ds_72
	Mem115[ss:sp_28 - 0x0012:word16] = 0x0A27
	Mem117[ss:sp_28 - 0x0014:word16] = Mem115[ss:fp + 0x0004:word16]
	Mem119[ss:sp_28 - 0x0016:word16] = Mem117[ss:fp + 0x0002:word16]
	word16 di_121
	fn0800_BEA2(ds_72, ptrArg00, wArg04, wArg06, out di_121)
	Mem125[ds_72:0x09AC:word16] = Mem119[ds_72:0x09AC:word16] + 0x0001
	Mem129[ds_72:(Mem125[ds_72:0x09AC:word16] << 0x0001) + 0x09AE:word16] = 0x0000
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

fn0800_31B4_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -160(fp):<invalid> -158(fp):<invalid> -156(fp):0x0A27 -154(fp):<invalid> -152(fp):fp - 0x0084 -150(fp):ss -148(fp):fp - 0x001E -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp



word16 fn0800_32CD(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, selector psegArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_32CD_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_32CD:
	word16 di_215 = wArg06
	word16 cx_216 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E7:
	branch cx_216 == 0x0000 l0800_32E9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E7_1:
	di_215 = di_215 + 0x0001
	cx_216 = cx_216 - 0x0001
	branch 0x00 != Mem0[psegArg08:di_215:byte] l0800_32E7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E9:
	word16 cx_41 = ~cx_216
	word16 cx_43 = cx_41 >>u 0x0001
	word16 si_48 = di_215 - cx_41
	word16 di_49 = fp - 0x0068
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32F8:
	branch cx_43 == 0x0000 l0800_32FA
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FA:
	word16 cx_67 = cx_43 * 0x0002 + (cx_41 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FC:
	branch cx_67 == 0x0000 l0800_32FE
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FE:
	word16 di_211 = fp - 0x0068
	word16 si_100 = 0x0A32
	word16 cx_212 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330C:
	branch cx_212 == 0x0000 l0800_330E
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330C_1:
	di_211 = di_211 + 0x0001
	cx_212 = cx_212 - 0x0001
	branch 0x00 != Mem0[ss:di_211:byte] l0800_330C
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330E:
	word16 di_101 = di_211 - 0x0001
	word16 cx_102 = 0x0004
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3312:
	branch cx_102 == 0x0000 l0800_3314
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3314:
	byte dl_124
	selector ds_125
	branch fn0800_33CD(ds, DPB(ptrLoc76, wArg02, 0), wArg04, 0x0010, fp - 0x0068, ss, out dl_124, out ds_125) == 0x0000 l0800_334D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_334D:
	branch wArg0A != 0x0000 l0800_3336
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3336:
	ptrLoc72 = DPB(ptrLoc72, wArg02, 0) (alias)
	byte dl_198
	branch fn0800_3479(ds_125, ptrLoc72, wArg04, 0x0010, out dl_198, out ds_125) != 0x0000 l0800_3353
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_334A:
	wArg0A = wArg0A - 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):0x0010 -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3353:
	return wArg0A
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_332D:
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

fn0800_32CD_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp es:<invalid> di:di ax:<invalid> cx:<invalid> si:si ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_3312_2:
	Mem104[ss:di_101:byte] = Mem0[ds:si_100:byte]
	si_100 = si_100 + 0x0001
	di_101 = di_101 + 0x0001
	cx_102 = cx_102 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FC_1:
	Mem73[ss:di_49:byte] = Mem0[psegArg08:si_48:byte]
	si_48 = si_48 + 0x0001
	di_49 = di_49 + 0x0001
	cx_67 = cx_67 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32F8_2:
	Mem63[ss:di_49:word16] = Mem0[psegArg08:si_48:word16]
	si_48 = si_48 + 0x0002
	di_49 = di_49 + 0x0002
	cx_43 = cx_43 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)



byte fn0800_335C(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_335C_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_335C:
	selector ds_34
	byte dl_33
	branch fn0800_33CD(ds, DPB(ptrLoc2C, fp - 0x0010, 0), ss, 0x0010, wArg02, wArg04, out dl_33, out ds_34) != 0x0000 l0800_33C7
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -002C(16) Stack +0002(16) Stack +0004(16)

l0800_337D:
	dl_33 = fn0800_35A3(ds_34, wArg02, wArg04)
	Mem82[ss:fp - 0x0024:word16] = ds_34
	Mem85[ss:fp - 0x0026:word16] = ss
	word16 si_113 = fp - 0x0010
	selector es_86 = Mem85[ss:fp - 0x0026:selector]
	word16 di_100 = fp - 0x001E
	word16 ax_125 = 0x0000
	word16 cx_101 = 0xFFFF
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 0x0002 ax:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> di:<invalid> -44(fp):fp - 0x0010 -42(fp):ss -40(fp):0x0010 -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A0:
	branch cx_101 == 0x0000 l0800_33A2
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A0_1:
	di_100 = di_100 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch 0x00 != Mem85[es_86:di_100:byte] l0800_33A0
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A2:
	word16 cx_102 = ~cx_101
	word16 di_103 = di_100 - cx_102
	byte SCZO_105 = cond(di_103)
	byte Z_107 = SCZO_105
	byte C_108 = SCZO_105
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A6:
	branch cx_102 == 0x0000 l0800_33A8
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A6_2:
	byte SCZO_176 = cond(Mem85[ss:si_190:byte] - Mem85[es_86:di_191:byte])
	Z_107 = SCZO_176 (alias)
	C_108 = SCZO_176 (alias)
	si_113 = si_190 + 0x0001
	di_103 = di_191 + 0x0001
	cx_102 = cx_102 - 0x0001
	si_190 = si_113
	di_191 = di_103
	branch Mem85[ss:si_190:byte] != Mem85[es_86:di_191:byte] l0800_33A6
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A8:
	branch Z_107 l0800_33AF
// DataOut: ax bp dl sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33AA:
	word16 ax_170 = 0x0000 - C_108
	ax_125 = ax_170 - 0xFFFF - (ax_170 <u 0x0000)
// DataOut: ax bp dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33AF:
	selector ds_128 = Mem85[ss:fp - 0x0024:selector]
	branch ax_125 != 0x0000 l0800_33C7
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33B4:
	ptr32 es_di_134 = Mem85[ss:fp + 0x0002:segptr32]
	word16 di_135 = (word16) es_di_134
	selector es_136 = SLICE(es_di_134, selector, 16)
	word16 si_137 = 0x0A36
	word16 cx_138 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33BF:
	branch cx_138 == 0x0000 l0800_33C1
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33BF_1:
	di_135 = di_135 + 0x0001
	cx_138 = cx_138 - 0x0001
	branch 0x00 != Mem85[es_136:di_135:byte] l0800_33BF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C1:
	word16 di_151 = di_135 - 0x0001
	word16 cx_154 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5:
	branch cx_154 == 0x0000 l0800_33C7
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C7:
	return dl_33
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

fn0800_335C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> ds:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5_2:
	Mem160[es_136:di_151:byte] = Mem85[ds_128:si_137:byte]
	si_137 = si_137 + 0x0001
	di_151 = di_151 + 0x0001
	cx_154 = cx_154 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp



word16 fn0800_33CD(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_33CD_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_33CD:
	byte dl_33
	branch fn0800_A817(0x23, ds, DPB(ptrLoc10, wArg08, 0), DPB(ptrLoc0C, 0x4623, 0), wArg06, out dl_33) == 0x0000 l0800_33F1
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33F1:
	word16 di_300 = 0x0A3B
	word16 si_299 = 0x4641
	word16 cx_302 = 0x0002
	word16 ax_104 = 0x0000
	byte Z_297 = cond(0x0000)
	byte C_298 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE:
	branch cx_302 == 0x0000 l0800_3400
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE_1:
	byte SCZO_295 = cond(Mem0[ds:si_304:byte] - Mem0[ds:di_303:byte])
	Z_297 = SCZO_295 (alias)
	C_298 = SCZO_295 (alias)
	si_299 = si_304 + 0x0001
	di_300 = di_303 + 0x0001
	cx_302 = cx_302 - 0x0001
	di_303 = di_300
	si_304 = si_299
	branch Mem0[ds:si_304:byte] != Mem0[ds:di_303:byte] l0800_33FE
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3400:
	branch Z_297 l0800_3407
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3402:
	word16 ax_289 = 0x0000 - C_298
	ax_104 = ax_289 - 0xFFFF - (ax_289 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3407:
	branch ax_104 == 0x0000 l0800_3431
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_340B:
	word16 di_141 = 0x0A3D
	word16 si_143 = 0x4641
	word16 cx_144 = 0x0003
	word16 ax_145 = 0x0000
	byte Z_148 = cond(0x0000)
	byte C_149 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418:
	branch cx_144 == 0x0000 l0800_341A
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418_1:
	byte SCZO_281 = cond(Mem0[ds:si_306:byte] - Mem0[ds:di_305:byte])
	Z_148 = SCZO_281 (alias)
	C_149 = SCZO_281 (alias)
	si_143 = si_306 + 0x0001
	di_141 = di_305 + 0x0001
	cx_144 = cx_144 - 0x0001
	di_305 = di_141
	si_306 = si_143
	branch Mem0[ds:si_306:byte] != Mem0[ds:di_305:byte] l0800_3418
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341A:
	branch Z_148 l0800_3421
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341C:
	word16 ax_275 = 0x0000 - C_149
	ax_145 = ax_275 - 0xFFFF - (ax_275 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3421:
	branch ax_145 == 0x0000 l0800_3431
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3425:
	branch ((int16) Mem0[ds:0x4638:byte] & wArg06) == wArg06 l0800_3444
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3444:
	branch (wArg02 | wArg04) == 0x0000 l0800_3473
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_344C:
	word16 di_205 = (word16) ptrArg02
	selector es_206 = SLICE(ptrArg02, selector, 16)
	word16 di_215 = 0x4641
	word16 cx_221 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B:
	branch cx_221 == 0x0000 l0800_345D
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B_1:
	di_215 = di_215 + 0x0001
	cx_221 = cx_221 - 0x0001
	branch 0x00 != Mem0[ds:di_215:byte] l0800_345B
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345D:
	word16 cx_229 = ~cx_221
	word16 cx_231 = cx_229 >>u 0x0001
	word16 si_236 = di_215 - cx_229
	word16 di_237 = di_205
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C:
	branch cx_231 == 0x0000 l0800_346E
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346E:
	word16 cx_256 = cx_231 * 0x0002 + (cx_229 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3470:
	branch cx_256 == 0x0000 l0800_3472
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3472:
	*dsOut = ds
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3473:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3470_1:
	Mem263[es_206:di_237:byte] = Mem0[ds:si_236:byte]
	si_236 = si_236 + 0x0001
	di_237 = di_237 + 0x0001
	cx_256 = cx_256 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C_2:
	Mem251[es_206:di_237:word16] = Mem0[ds:si_236:word16]
	si_236 = si_236 + 0x0002
	di_237 = di_237 + 0x0002
	cx_231 = cx_231 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3431:
	byte dl_125
	selector ds_126
	return fn0800_3479(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, wArg06, out dl_125, out ds_126)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_33EA:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_33CD_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_3479(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_3479_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3479:
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_347E:
	ptrLoc0A = DPB(ptrLoc0A, 0x4623, 0) (alias)
	word16 ax_33
	byte dl_34
	fn0800_A84A(0x23, ds, ptrLoc0A, out ax_33, out dl_34)
	branch ax_33 == 0x0000 l0800_3494
// DataOut: dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3494:
	word16 di_272 = 0x0A3B
	word16 si_271 = 0x4641
	word16 cx_274 = 0x0002
	word16 ax_264 = 0x0000
	byte Z_269 = cond(0x0000)
	byte C_270 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> si:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A1:
	branch cx_274 == 0x0000 l0800_34A3
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A1_1:
	byte SCZO_267 = cond(Mem0[ds:si_276:byte] - Mem0[ds:di_275:byte])
	Z_269 = SCZO_267 (alias)
	C_270 = SCZO_267 (alias)
	si_271 = si_276 + 0x0001
	di_272 = di_275 + 0x0001
	cx_274 = cx_274 - 0x0001
	di_275 = di_272
	si_276 = si_271
	branch Mem0[ds:si_276:byte] != Mem0[ds:di_275:byte] l0800_34A1
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A3:
	branch Z_269 l0800_34AA
// DataOut: ax dl ds ss
// DataOut (flags): CDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A5:
	word16 ax_261 = 0x0000 - C_270
	ax_264 = ax_261 - 0xFFFF - (ax_261 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34AA:
	branch ax_264 == 0x0000 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34AE:
	word16 di_108 = 0x0A3D
	word16 si_110 = 0x4641
	word16 cx_111 = 0x0003
	word16 ax_112 = 0x0000
	byte Z_115 = cond(0x0000)
	byte C_116 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BB:
	branch cx_111 == 0x0000 l0800_34BD
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BB_1:
	byte SCZO_253 = cond(Mem0[ds:si_278:byte] - Mem0[ds:di_277:byte])
	Z_115 = SCZO_253 (alias)
	C_116 = SCZO_253 (alias)
	si_110 = si_278 + 0x0001
	di_108 = di_277 + 0x0001
	cx_111 = cx_111 - 0x0001
	di_277 = di_108
	si_278 = si_110
	branch Mem0[ds:si_278:byte] != Mem0[ds:di_277:byte] l0800_34BB
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BD:
	branch Z_115 l0800_34C4
// DataOut: ax dl ds ss
// DataOut (flags): CDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BF:
	word16 ax_247 = 0x0000 - C_116
	ax_112 = ax_247 - 0xFFFF - (ax_247 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34C4:
	branch ax_112 == 0x0000 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34C8:
	branch ((int16) Mem0[ds:0x4638:byte] & wArg06) != wArg06 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34D4:
	branch (wArg02 | wArg04) == 0x0000 l0800_3503
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_34DC:
	word16 di_177 = (word16) ptrArg02
	selector es_178 = SLICE(ptrArg02, selector, 16)
	word16 di_187 = 0x4641
	word16 cx_193 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34EB:
	branch cx_193 == 0x0000 l0800_34ED
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34EB_1:
	di_187 = di_187 + 0x0001
	cx_193 = cx_193 - 0x0001
	branch 0x00 != Mem0[ds:di_187:byte] l0800_34EB
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34ED:
	word16 cx_201 = ~cx_193
	word16 cx_203 = cx_201 >>u 0x0001
	word16 si_208 = di_187 - cx_201
	word16 di_209 = di_177
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FC:
	branch cx_203 == 0x0000 l0800_34FE
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FE:
	word16 cx_228 = cx_203 * 0x0002 + (cx_201 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3500:
	branch cx_228 == 0x0000 l0800_3502
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3502:
	*dsOut = ds
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3503:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3500_1:
	Mem235[es_178:di_209:byte] = Mem0[ds:si_208:byte]
	si_208 = si_208 + 0x0001
	di_209 = di_209 + 0x0001
	cx_228 = cx_228 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FC_2:
	Mem223[es_178:di_209:word16] = Mem0[ds:si_208:word16]
	si_208 = si_208 + 0x0002
	di_209 = di_209 + 0x0002
	cx_203 = cx_203 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_348D:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> si:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_3479_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_3509(selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_3509_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_3509:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	Mem44[ss:fp - 0x0060:word16] = ss
	Mem49[ss:fp - 0x0060:word16] = Mem44[ss:fp - 0x0060:selector]
	selector es_50 = Mem49[ss:fp + 0x0004:selector]
	Mem52[ss:fp - 0x0062:word16] = fp - 0x0006
	word16 di_53 = Mem52[ss:fp + 0x0002:word16]
	word16 di_200 = Mem52[ss:fp - 0x0062:word16]
	selector es_58 = Mem52[ss:fp - 0x0060:selector]
	Mem61[ss:fp - 0x0060:word16] = es_50
	Mem63[ss:fp - 0x0062:word16] = di_53
	word16 cx_201 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_354B:
	branch cx_201 == 0x0000 l0800_354D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_354B_1:
	di_200 = di_200 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 != Mem63[es_58:di_200:byte] l0800_354B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_354D:
	word16 di_104 = Mem63[ss:fp - 0x0062:word16]
	selector es_87 = Mem63[ss:fp - 0x0060:selector]
	Mem91[ss:fp - 0x0060:word16] = ds
	word16 cx_76 = ~cx_201
	word16 cx_100 = cx_76 >>u 0x0001
	word16 si_103 = di_200 - cx_76
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355C:
	branch cx_100 == 0x0000 l0800_355E
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355E:
	word16 cx_101 = cx_100 * 0x0002 + (cx_76 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3560:
	branch cx_101 == 0x0000 l0800_3562
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3562:
	selector ds_111 = Mem91[ss:fp - 0x0060:selector]
	Mem114[ss:fp - 0x0060:word16] = ss
	Mem119[ss:fp - 0x0060:word16] = Mem114[ss:fp - 0x0060:selector]
	selector es_120 = Mem119[ss:fp + 0x0004:selector]
	Mem122[ss:fp - 0x0062:word16] = fp - 0x005A
	word16 di_123 = Mem122[ss:fp + 0x0002:word16]
	word16 di_125 = Mem122[ss:fp - 0x0062:word16]
	selector es_128 = Mem122[ss:fp - 0x0060:selector]
	Mem131[ss:fp - 0x0060:word16] = es_120
	Mem133[ss:fp - 0x0062:word16] = di_123
	word16 cx_138 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357D:
	branch cx_138 == 0x0000 l0800_357F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357D_1:
	di_125 = di_125 + 0x0001
	cx_138 = cx_138 - 0x0001
	branch 0x00 != Mem133[es_128:di_125:byte] l0800_357D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357F:
	word16 di_150 = Mem133[ss:fp - 0x0062:word16]
	selector es_153 = Mem133[ss:fp - 0x0060:selector]
	Mem155[ss:fp - 0x0018:word16] = ds_111
	word16 cx_147 = ~cx_138
	Mem158[ss:fp - 0x0060:word16] = cx_147
	word16 si_149 = di_125 - cx_147
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3594:
	branch cx_159 == 0x0000 l0800_3596
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3594_2:
	di_150 = di_150 + 0x0001
	cx_159 = cx_159 - 0x0001
	branch 0x00 != Mem158[es_153:di_150:byte] l0800_3594
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3596:
	word16 di_171 = di_150 - 0x0001
	word16 cx_173 = Mem158[ss:fp - 0x0060:word16]
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598:
	branch cx_173 == 0x0000 l0800_359A
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_359A:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_3509_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598_3:
	Mem179[es_153:di_171:byte] = Mem158[es_128:si_149:byte]
	si_149 = si_149 + 0x0001
	di_171 = di_171 + 0x0001
	cx_173 = cx_173 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3560_1:
	Mem107[es_87:di_104:byte] = Mem91[es_58:si_103:byte]
	si_103 = si_103 + 0x0001
	di_104 = di_104 + 0x0001
	cx_101 = cx_101 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355C_2:
	Mem97[es_87:di_104:word16] = Mem91[es_58:si_103:word16]
	si_103 = si_103 + 0x0002
	di_104 = di_104 + 0x0002
	cx_100 = cx_100 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp



byte fn0800_35A3(selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_35A3_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_35A3:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	Mem44[ss:fp - 0x0060:word16] = ss
	Mem49[ss:fp - 0x0060:word16] = Mem44[ss:fp - 0x0060:selector]
	selector es_50 = Mem49[ss:fp + 0x0004:selector]
	Mem52[ss:fp - 0x0062:word16] = fp - 0x0010
	word16 di_53 = Mem52[ss:fp + 0x0002:word16]
	word16 di_201 = Mem52[ss:fp - 0x0062:word16]
	selector es_58 = Mem52[ss:fp - 0x0060:selector]
	Mem61[ss:fp - 0x0060:word16] = es_50
	Mem63[ss:fp - 0x0062:word16] = di_53
	word16 cx_202 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_35E5:
	branch cx_202 == 0x0000 l0800_35E7
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35E5_1:
	di_201 = di_201 + 0x0001
	cx_202 = cx_202 - 0x0001
	branch 0x00 != Mem63[es_58:di_201:byte] l0800_35E5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35E7:
	word16 di_104 = Mem63[ss:fp - 0x0062:word16]
	selector es_87 = Mem63[ss:fp - 0x0060:selector]
	Mem91[ss:fp - 0x0060:word16] = ds
	word16 cx_76 = ~cx_202
	word16 cx_100 = cx_76 >>u 0x0001
	word16 si_103 = di_201 - cx_76
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F6:
	branch cx_100 == 0x0000 l0800_35F8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F8:
	word16 cx_101 = cx_100 * 0x0002 + (cx_76 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35FA:
	branch cx_101 == 0x0000 l0800_35FC
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35FC:
	selector ds_111 = Mem91[ss:fp - 0x0060:selector]
	Mem114[ss:fp - 0x0060:word16] = ss
	Mem119[ss:fp - 0x0060:word16] = Mem114[ss:fp - 0x0060:selector]
	selector es_120 = Mem119[ss:fp + 0x0004:selector]
	Mem122[ss:fp - 0x0062:word16] = fp - 0x0016
	word16 di_123 = Mem122[ss:fp + 0x0002:word16]
	word16 di_125 = Mem122[ss:fp - 0x0062:word16]
	selector es_129 = Mem122[ss:fp - 0x0060:selector]
	Mem132[ss:fp - 0x0060:word16] = es_120
	Mem134[ss:fp - 0x0062:word16] = di_123
	byte dl_128 = (byte) es_120
	word16 cx_139 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3617:
	branch cx_139 == 0x0000 l0800_3619
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3617_1:
	di_125 = di_125 + 0x0001
	cx_139 = cx_139 - 0x0001
	branch 0x00 != Mem134[es_129:di_125:byte] l0800_3617
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3619:
	word16 di_151 = Mem134[ss:fp - 0x0062:word16]
	selector es_154 = Mem134[ss:fp - 0x0060:selector]
	Mem156[ss:fp - 0x0018:word16] = ds_111
	word16 cx_148 = ~cx_139
	Mem159[ss:fp - 0x0060:word16] = cx_148
	word16 si_150 = di_125 - cx_148
	word16 cx_160 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_362E:
	branch cx_160 == 0x0000 l0800_3630
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_362E_2:
	di_151 = di_151 + 0x0001
	cx_160 = cx_160 - 0x0001
	branch 0x00 != Mem159[es_154:di_151:byte] l0800_362E
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3630:
	word16 di_172 = di_151 - 0x0001
	word16 cx_174 = Mem159[ss:fp - 0x0060:word16]
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632:
	branch cx_174 == 0x0000 l0800_3634
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3634:
	return dl_128
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_35A3_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632_3:
	Mem180[es_154:di_172:byte] = Mem159[es_129:si_150:byte]
	si_150 = si_150 + 0x0001
	di_172 = di_172 + 0x0001
	cx_174 = cx_174 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_35FA_1:
	Mem107[es_87:di_104:byte] = Mem91[es_58:si_103:byte]
	si_103 = si_103 + 0x0001
	di_104 = di_104 + 0x0001
	cx_101 = cx_101 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F6_2:
	Mem97[es_87:di_104:word16] = Mem91[es_58:si_103:word16]
	si_103 = si_103 + 0x0002
	di_104 = di_104 + 0x0002
	cx_100 = cx_100 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp



selector fn0800_363D(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_363D_entry:
// DataOut: ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_363D:
	byte dl_31
	branch fn0800_A817((byte) (fp - 0x002E), ds, DPB(ptrLoc38, wArg06, 0), DPB(ptrLoc34, fp - 0x002E, 0), 0x0000, out dl_31) == 0x0000 l0800_3662
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32)

l0800_3662:
	word16 bx_55 = (word16) ptrArg02
	selector es_56 = SLICE(ptrArg02, selector, 16)
	Mem59[es_56:bx_55:word16] = wLoc18
	Mem62[es_56:bx_55 + 0x0002:word16] = wLoc16
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

l0800_365B:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

fn0800_363D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp



word16 fn0800_3678(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3678_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_3678:
	word16 sp_170 = fp - 0x000C
	word16 di_19 = (word16) ptrArg02
	selector es_20 = SLICE(ptrArg02, selector, 16)
	word16 cx_25 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3693:
	branch cx_25 == 0x0000 l0800_3695
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3693_1:
	di_19 = di_19 + 0x0001
	cx_25 = cx_25 - 0x0001
	branch 0x00 != Mem0[es_20:di_19:byte] l0800_3693
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3695:
	word16 cx_271 = ~cx_25
	word16 di_259 = di_19 - cx_271
	byte Z_267 = cond(di_259)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369C:
	branch cx_271 == 0x0000 l0800_369E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369C_2:
	Z_267 = cond(0x5C - Mem0[es_20:di_259:byte]) (alias)
	di_259 = di_259 + 0x0001
	cx_271 = cx_271 - 0x0001
	branch 0x5C != Mem0[es_20:di_259:byte] l0800_369C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369E:
	branch Z_267 l0800_36A7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_36A0:
	di_259 = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_36A7:
	word16 di_61 = di_259 - 0x0001
	branch di_61 == 0x0000 l0800_3732
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_36B6:
	branch 0x0000 != wArg04 l0800_36C6
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32) Stack +0002(16)

l0800_36C1:
	branch di_61 == wArg02 l0800_36D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32)

l0800_36C6:
	branch Mem0[0x0000:(word16) ptrLoc0A - 0x0001:byte] != 0x3A l0800_3732
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(16)

l0800_36D0:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3732:
	ptr32 es_di_88 = Mem0[ss:fp - 0x0006:segptr32]
	word16 di_100 = (word16) es_di_88
	selector es_127 = SLICE(es_di_88, selector, 16)
	word16 cx_101 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373A:
	branch cx_101 == 0x0000 l0800_373C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373A_1:
	di_100 = di_100 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch 0x00 != Mem0[es_127:di_100:byte] l0800_373A
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373C:
	word16 cx_103 = ~cx_101
	word16 di_105 = di_100 - cx_103
	byte Z_109 = cond(di_105)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3743:
	branch cx_103 == 0x0000 l0800_3745
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3743_2:
	Z_109 = cond(0x5C - Mem0[es_127:di_105:byte]) (alias)
	di_105 = di_105 + 0x0001
	cx_103 = cx_103 - 0x0001
	branch 0x5C != Mem0[es_127:di_105:byte] l0800_3743
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3745:
	branch Z_109 l0800_374E
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3747:
	di_105 = 0x0001
	es_127 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_374E:
	Mem131[ss:fp - 0x0008:word16] = es_127
	word16 di_129 = di_105 - 0x0001
	Mem132[ss:fp - 0x000A:word16] = di_129
	branch (di_129 | es_127) != 0x0000 l0800_36DF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_36DF:
	Mem0[Mem0[Mem132[ss:fp - 0x000A:segptr32]:byte]:byte] = 0x00
	word16 sp_150 = sp_170 - 0x0002
	Mem151[ss:sp_150:word16] = Mem149[ss:fp + 0x0004:word16]
	Mem153[ss:sp_150 - 0x0002:word16] = Mem151[ss:fp + 0x0002:word16]
	Mem156[ss:sp_150 - 0x0004:word16] = 0x0010
	Mem161[ss:sp_150 - 0x0006:word16] = 0x0000
	Mem163[ss:sp_150 - 0x0008:word16] = 0x0000
	byte dl_167
	word16 ax_169 = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_167, out ds)
	sp_170 = sp_150 + 0x0002
	byte al_172 = (byte) ax_169
	branch ax_169 == 0x0000 l0800_371E
// DataOut: al bp ds si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_36FE:
	Mem196[ss:sp_150:word16] = Mem163[ss:fp + 0x0004:word16]
	Mem198[ss:sp_150 - 0x0002:word16] = Mem196[ss:fp + 0x0002:word16]
	sp_170 = sp_150 + 0x0002
	branch fn0800_8E52(al_172, ds, ptrArg00) == 0x0000 l0800_371E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_370E:
	Mem206[ss:sp_150:word16] = Mem198[ss:fp + 0x0004:word16]
	Mem208[ss:sp_150 - 0x0002:word16] = Mem206[ss:fp + 0x0002:word16]
	Mem211[ss:sp_150 - 0x0004:word16] = 0x000E
	word16 di_213
	fn0800_0D24(fp - 0x0002, ds, out si, out di_213, out ds)
	sp_170 = sp_150 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_371E:
	Mem0[Mem0[Mem163[ss:fp - 0x000A:segptr32]:byte]:byte] = 0x5C
	word16 dx_190 = Mem188[ss:fp - 0x000A:word16]
	Mem193[ss:fp - 0x0004:word16] = Mem188[ss:fp - 0x0008:word16]
	Mem194[ss:fp - 0x0006:word16] = dx_190 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_375D:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_3678_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3764(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di ds si sp
fn0800_3764_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3764:
	word16 sp_116
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_3796
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3796:
	fn0800_3509(ds, 0x4541, ds)
	sp_116 = fp - 0x0004
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si

l0800_376D:
	word16 di_121 = 0x427E
	word16 cx_122 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C:
	branch cx_122 == 0x0000 l0800_377E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C_1:
	di_121 = di_121 + 0x0001
	cx_122 = cx_122 - 0x0001
	branch 0x00 != Mem0[ds:di_121:byte] l0800_377C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377E:
	word16 cx_81 = ~cx_122
	word16 cx_104 = cx_81 >>u 0x0001
	word16 si_102 = di_121 - cx_81
	word16 di_103 = 0x44DC
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D:
	branch cx_104 == 0x0000 l0800_378F
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378F:
	word16 cx_105 = cx_104 * 0x0002 + (cx_81 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3791:
	branch cx_105 == 0x0000 l0800_3793
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3793:
	sp_116 = fp - 0x0004
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si

l0800_37A6:
	word16 sp_21 = sp_116 - 0x0002
	Mem22[ss:sp_21:word16] = ds
	selector es_24 = Mem22[ss:sp_21:selector]
	word16 di_135 = 0x44DC
	word16 si_27 = 0x0A40
	word16 cx_28 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B3:
	branch cx_28 == 0x0000 l0800_37B5
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B3_1:
	di_135 = di_135 + 0x0001
	cx_28 = cx_28 - 0x0001
	branch 0x00 != Mem22[es_24:di_135:byte] l0800_37B3
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B5:
	word16 di_40 = di_135 - 0x0001
	word16 cx_42 = 0x000D
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9:
	branch cx_42 == 0x0000 l0800_37BB
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37BB:
	return bp
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

fn0800_3764_exit:
// DataOut: bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9_2:
	Mem47[es_24:di_40:byte] = Mem22[ds:si_27:byte]
	si_27 = si_27 + 0x0001
	di_40 = di_40 + 0x0001
	cx_42 = cx_42 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_3791_1:
	Mem111[ds:di_103:byte] = Mem0[ds:si_102:byte]
	si_102 = si_102 + 0x0001
	di_103 = di_103 + 0x0001
	cx_105 = cx_105 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D_2:
	Mem101[ds:di_103:word16] = Mem0[ds:si_102:word16]
	si_102 = si_102 + 0x0002
	di_103 = di_103 + 0x0002
	cx_104 = cx_104 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)



word16 fn0800_37BE(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_37BE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_37BE:
	word16 di_32
	return fn0800_BEA2(ds, DPB(ptrLoc12, wArg02, 0), 0x0A2B, ds, out di_32)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_37BE_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x0A2B -12(fp):ds -10(fp):0x42E3 -8(fp):ds -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_37DF(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_37DF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_37DF:
	fn0800_3509(ds, 0x44DC, ds)
	Mem26[ss:fp - 0x0070:word16] = ds
	Mem29[ss:fp - 0x0072:word16] = 0x4541
	Mem31[ss:fp - 0x0074:word16] = ss
	selector es_186 = Mem31[ss:fp - 0x0074:selector]
	word16 di_195 = fp - 0x006C
	word16 cx_196 = 0xFFFF
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3805:
	branch cx_196 == 0x0000 l0800_3807
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3805_1:
	di_195 = di_195 + 0x0001
	cx_196 = cx_196 - 0x0001
	branch 0x00 != Mem31[es_186:di_195:byte] l0800_3805
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3807:
	word16 cx_192 = ~cx_196
	word16 di_182 = di_195 - cx_192
	byte Z_189 = cond(di_182)
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380D:
	branch cx_192 == 0x0000 l0800_380F
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380D_2:
	Z_189 = cond(0x00 - Mem31[es_186:di_182:byte]) (alias)
	di_182 = di_182 + 0x0001
	cx_192 = cx_192 - 0x0001
	branch 0x00 != Mem31[es_186:di_182:byte] l0800_380D
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380F:
	branch Z_189 l0800_3818
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3811:
	di_182 = 0x0001
	es_186 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3818:
	Mem71[ss:fp - 0x0074:word16] = es_186
	word16 di_67 = di_182 - 0x0001
	Mem73[ss:fp - 0x0076:word16] = di_67
	fn0800_35A3(ds, wArg04, wArg06)
	Mem82[ss:fp - 0x0070:word16] = ds
	Mem85[ss:fp - 0x0072:word16] = 0x0A4D
	Mem87[ss:fp - 0x0074:word16] = ss
	Mem90[ss:fp - 0x0076:word16] = fp - 0x006C
	word16 dx_94
	word16 di_96
	selector ds_106
	word16 si_128
	word16 ax_98 = fn0800_AA7E(si, di_67, ds, wArg00, wArg02, wArg04, wArg06, out dx_94, out si_128, out di_96, out ds_106)
	Mem100[ss:fp - 0x0004:word16] = dx_94
	Mem101[ss:fp - 0x0006:word16] = ax_98
	word16 sp_109 = fp - 0x006E
	branch (ax_98 | dx_94) == 0x0000 l0800_3863
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_383D:
	Mem153[ss:fp - 0x0070:word16] = Mem101[ss:fp - 0x0004:word16]
	Mem155[ss:fp - 0x0072:word16] = Mem153[ss:fp - 0x0006:word16]
	byte dl_156
	word16 di_157
	selector ds_158
	fn0800_A614(fp - 0x0002, ds_106, ptrArg00, wArg02, out dl_156, out di_157, out ds_158)
	Mem164[ss:fp - 0x0070:word16] = 0x0180
	Mem166[ss:fp - 0x0072:word16] = ss
	Mem169[ss:fp - 0x0074:word16] = fp - 0x006C
	ds_106 = fn0800_A4F6(fp - 0x0002, ds_158, wArg00, wArg02, wArg04)
	*dsOut = ds_106
	Mem174[ss:fp - 0x0070:word16] = ss
	Mem178[ss:fp - 0x0072:word16] = fp - 0x006C
	fn0800_8F7F((byte) (fp - 0x006C), ds_106, ptrArg00)
	sp_109 = fp - 0x006E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):ds -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3863:
	word16 sp_110 = sp_109 - 0x0002
	Mem111[ss:sp_110:word16] = ss
	Mem114[ss:sp_110 - 0x0002:word16] = fp - 0x006C
	Mem116[ss:sp_110 - 0x0004:word16] = ds_106
	Mem120[ss:sp_110 - 0x0006:word16] = 0x44DC
	branch fn0800_BA4A(0xDC, ds_106, ptrArg00, ptrArg04) != 0xFFFF l0800_3887
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3878:
	Mem139[ss:sp_110:word16] = ds_106
	Mem142[ss:sp_110 - 0x0002:word16] = 0x44DC
	Mem145[ss:sp_110 - 0x0004:word16] = 0x000A
	word16 di_147
	selector ds_148
	fn0800_0D24(fp - 0x0002, ds_106, out si_128, out di_147, out ds_148)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3887:
	return si_128
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_37DF_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_388C(word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_388C_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_388C:
	word16 di_22
	selector ds_23
	word16 si_24 = fn0800_4234(si, di, ds, 0x4541, ds, 0x0A13, ds, out di_22, out ds_23)
	Mem28[ds_23:0x29E5:word16] = dx
	Mem29[ds_23:0x29E3:word16] = 0x4541
	Mem31[ss:fp - 0x000C:word16] = ds_23
	Mem35[ss:fp - 0x000E:word16] = 0x0A50
	Mem37[ss:fp - 0x0010:word16] = ds_23
	Mem40[ss:fp - 0x0012:word16] = 0x44DC
	word16 di_45
	selector ds_46
	*siOut = fn0800_4234(si_24, di_22, ds_23, wArg00, wArg02, wArg04, wArg06, out di_45, out ds_46)
	Mem50[ds_46:0x29E1:word16] = dx
	Mem51[ds_46:0x29DF:word16] = 0x44DC
	Mem53[ss:fp - 0x000C:word16] = ds_46
	Mem56[ss:fp - 0x000E:word16] = 0x44DC
	Mem58[ss:fp - 0x0010:word16] = ss
	Mem61[ss:fp - 0x0012:word16] = fp - 0x0006
	selector ds_63 = fn0800_363D(ds_46, ptrArg00, wArg04, wArg06)
	*dsOut = ds_63
	branch Mem61[ds_63:0x0A12:byte] != 0x00 l0800_38EF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_38EF:
	Mem95[ss:fp - 0x000C:word16] = ds_63
	Mem98[ss:fp - 0x000E:word16] = 0x4541
	Mem100[ss:fp - 0x0010:word16] = ss
	Mem103[ss:fp - 0x0012:word16] = fp - 0x000A
	selector ds_104 = fn0800_363D(ds_63, ptrArg00, wArg04, wArg06)
	*dsOut = ds_104
	Mem108[ss:fp - 0x000C:word16] = ds_104
	Mem111[ss:fp - 0x000E:word16] = 0x461F
	Mem113[ss:fp - 0x0010:word16] = ss
	Mem116[ss:fp - 0x0012:word16] = fp - 0x000A
	branch fn0800_395B(ptrArg00, ptrArg04) < 0x0000 l0800_3927
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3913:
	Mem132[ss:fp - 0x000C:word16] = ss
	Mem135[ss:fp - 0x000E:word16] = fp - 0x0006
	Mem137[ss:fp - 0x0010:word16] = ss
	Mem140[ss:fp - 0x0012:word16] = fp - 0x000A
	branch fn0800_395B(ptrArg00, ptrArg04) <= 0x0000 l0800_392E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_392E:
	Mem147[ss:fp - 0x000C:word16] = Mem140[ds_104:0x29E5:word16]
	Mem149[ss:fp - 0x000E:word16] = Mem147[ds_104:0x29E3:word16]
	byte dl_150
	word16 di_151
	selector ds_152
	fn0800_A614(fp - 0x0002, ds_104, ptrArg00, wArg02, out dl_150, out di_151, out ds_152)
	Mem157[ss:fp - 0x000C:word16] = Mem149[ds_152:0x29E1:word16]
	Mem159[ss:fp - 0x000E:word16] = Mem157[ds_152:0x29DF:word16]
	byte dl_160
	word16 di_161
	selector ds_162
	fn0800_A614(fp - 0x0002, ds_152, ptrArg00, wArg02, out dl_160, out di_161, out ds_162)
	Mem167[ss:fp - 0x000C:word16] = ds_162
	Mem171[ss:fp - 0x000E:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_162, ptrArg00)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_3927:
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_38D7:
	Mem81[ds_63:0x4621:word16] = Mem61[ss:fp - 0x0004:word16]
	Mem83[ds_63:0x461F:word16] = Mem81[ss:fp - 0x0006:word16]
	Mem84[ds_63:0x0A12:byte] = 0x01
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_388C_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_395B_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_395B:
	word16 ax_13 = Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16]
	branch ax_13 != Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06 + 0x0002:word16] l0800_3984
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0006(32)

l0800_3984:
	return ax_13 - Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06 + 0x0002:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3974:
	return Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16] - Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_395B_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3992(word16 bp, selector ds, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_3992_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3992:
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_39AE
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A0:
	branch Mem0[ds:0x2A23:word16] != 0x0001 l0800_39AE
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A7:
	branch Mem0[ds:0x2A17:word16] != 0x0000 l0800_39B5
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39B5:
	fn0800_3509(ds, 0x44DC, ds)
	Mem80[ss:fp - 0x0078:word16] = ds
	Mem83[ss:fp - 0x007A:word16] = 0x4541
	Mem85[ss:fp - 0x007C:word16] = ss
	selector es_129 = Mem85[ss:fp - 0x007C:selector]
	word16 di_100 = fp - 0x0074
	word16 cx_399 = 0xFFFF
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D4:
	branch cx_399 == 0x0000 l0800_39D6
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D4_1:
	di_100 = di_100 + 0x0001
	cx_399 = cx_399 - 0x0001
	branch 0x00 != Mem85[es_129:di_100:byte] l0800_39D4
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D6:
	word16 cx_101 = ~cx_399
	word16 di_104 = di_100 - cx_101
	byte Z_106 = cond(di_104)
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DC:
	branch cx_101 == 0x0000 l0800_39DE
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DC_2:
	Z_106 = cond(0x00 - Mem85[es_129:di_104:byte]) (alias)
	di_104 = di_104 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch 0x00 != Mem85[es_129:di_104:byte] l0800_39DC
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DE:
	branch Z_106 l0800_39E7
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39E0:
	di_104 = 0x0001
	es_129 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39E7:
	Mem135[ss:fp - 0x007C:word16] = es_129
	word16 di_131 = di_104 - 0x0001
	Mem137[ss:fp - 0x007E:word16] = di_131
	*dlOut = fn0800_35A3(ds, wArg04, wArg06)
	Mem145[ss:fp - 0x0078:word16] = ds
	Mem148[ss:fp - 0x007A:word16] = 0x0A4D
	Mem150[ss:fp - 0x007C:word16] = ss
	Mem153[ss:fp - 0x007E:word16] = fp - 0x0074
	word16 dx_156
	word16 si_157
	word16 di_158
	selector ds_159
	word16 ax_160 = fn0800_AA7E(si, di_131, ds, wArg00, wArg02, wArg04, wArg06, out dx_156, out si_157, out di_158, out ds_159)
	Mem162[ss:fp - 0x0004:word16] = dx_156
	Mem163[ss:fp - 0x0006:word16] = ax_160
	branch (ax_160 | dx_156) != 0x0000 l0800_3A13
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A13:
	Mem179[ss:fp - 0x0078:word16] = Mem163[ss:fp - 0x0004:word16]
	Mem181[ss:fp - 0x007A:word16] = Mem179[ss:fp - 0x0006:word16]
	word16 si_182
	selector ds_183
	word16 ax_184 = fn0800_4194(fp - 0x0002, ds_159, wArg00, wArg02, out si_182, out ds_183)
	branch false l0800_3A3D
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A23:
	branch dx_156 != 0x0000 l0800_3A2A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A25:
	branch ax_184 >u 0x0012 l0800_3A3D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A3D:
	Mem197[ss:fp - 0x0078:word16] = Mem181[ss:fp - 0x0004:word16]
	Mem199[ss:fp - 0x007A:word16] = Mem197[ss:fp - 0x0006:word16]
	selector ds_200
	word16 dx_205
	word16 ax_206 = fn0800_8CAA(ax_184, 0x08, fn0800_3E5D(fp - 0x0002, ds_183, wArg00, wArg02, out ds_200), bp, out dx_205)
	branch dx_205 != 0x0052 l0800_3A58
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A53:
	branch ax_206 == 0x4E43 l0800_3A6B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A6B:
	Mem235[ss:fp - 0x0078:word16] = Mem199[ss:fp - 0x0004:word16]
	Mem237[ss:fp - 0x007A:word16] = Mem235[ss:fp - 0x0006:word16]
	selector ds_238
	word16 dx_239 = fn0800_3E5D(fp - 0x0002, ds_200, wArg00, wArg02, out ds_238)
	branch dx_239 != Mem237[ds_238:0x2A09:word16] l0800_3A83
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A7D:
	branch ax_206 == Mem237[ds_238:0x2A07:word16] l0800_3A96
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A96:
	Mem267[ss:fp - 0x0078:word16] = ss
	Mem270[ss:fp - 0x007A:word16] = fp - 0x0074
	Mem272[ss:fp - 0x007C:word16] = ss
	Mem275[ss:fp - 0x007E:word16] = fp - 0x000E
	selector ds_276 = fn0800_363D(ds_238, ptrArg00, wArg04, wArg06)
	Mem280[ss:fp - 0x0078:word16] = ds_276
	Mem283[ss:fp - 0x007A:word16] = 0x4541
	Mem285[ss:fp - 0x007C:word16] = ss
	Mem288[ss:fp - 0x007E:word16] = fp - 0x000A
	selector ds_289 = fn0800_363D(ds_276, ptrArg00, wArg04, wArg06)
	Mem293[ss:fp - 0x0078:word16] = ss
	Mem296[ss:fp - 0x007A:word16] = fp - 0x000A
	Mem298[ss:fp - 0x007C:word16] = ss
	Mem301[ss:fp - 0x007E:word16] = fp - 0x000E
	word16 ax_303 = fn0800_395B(ptrArg00, ptrArg04)
	branch ax_303 >= 0x0000 l0800_3ADD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3ADD:
	Mem327[ss:fp - 0x0076:word16] = Mem301[ss:fp - 0x0004:word16]
	Mem329[ss:fp - 0x0078:word16] = Mem327[ss:fp - 0x0006:word16]
	selector ds_330
	ui32 dx_ax_334 = SEQ(fn0800_3E5D(fp - 0x0002, ds_289, wArg00, wArg02, out ds_330), ax_303 + 0x0012)
	Mem341[ds_330:0x2A05:word16] = SLICE(dx_ax_334 + 0x00000012, word16, 16)
	Mem342[ds_330:0x2A03:word16] = (word16) (dx_ax_334 + 0x00000012)
	Mem344[ss:fp - 0x0076:word16] = Mem342[ss:fp - 0x0004:word16]
	Mem346[ss:fp - 0x0078:word16] = Mem344[ss:fp - 0x0006:word16]
	byte dl_347
	word16 di_348
	selector ds_349
	fn0800_A614(fp - 0x0002, ds_330, ptrArg00, wArg02, out dl_347, out di_348, out ds_349)
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3ACA:
	Mem310[ss:fp - 0x0078:word16] = Mem301[ss:fp - 0x0004:word16]
	Mem312[ss:fp - 0x007A:word16] = Mem310[ss:fp - 0x0006:word16]
	byte dl_313
	word16 di_314
	selector ds_315
	fn0800_A614(fp - 0x0002, ds_289, ptrArg00, wArg02, out dl_313, out di_314, out ds_315)
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A83:
	Mem247[ss:fp - 0x0078:word16] = Mem237[ss:fp - 0x0004:word16]
	Mem249[ss:fp - 0x007A:word16] = Mem247[ss:fp - 0x0006:word16]
	byte dl_250
	word16 di_251
	selector ds_252
	fn0800_A614(fp - 0x0002, ds_238, ptrArg00, wArg02, out dl_250, out di_251, out ds_252)
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A58:
	Mem214[ss:fp - 0x0078:word16] = Mem199[ss:fp - 0x0004:word16]
	Mem216[ss:fp - 0x007A:word16] = Mem214[ss:fp - 0x0006:word16]
	byte dl_218
	word16 di_219
	selector ds_220
	fn0800_A614(fp - 0x0002, ds_200, ptrArg00, wArg02, out dl_218, out di_219, out ds_220)
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A2A:
	Mem363[ss:fp - 0x0078:word16] = Mem181[ss:fp - 0x0004:word16]
	Mem365[ss:fp - 0x007A:word16] = Mem363[ss:fp - 0x0006:word16]
	byte dl_366
	word16 di_367
	selector ds_368
	fn0800_A614(fp - 0x0002, ds_183, ptrArg00, wArg02, out dl_366, out di_367, out ds_368)
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A0C:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_39AE:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp

fn0800_3992_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_3B0A(word16 bp, selector ds, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +000A(16) Stack +000C(16)
fn0800_3B0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +000A(16) Stack +000C(16)

l0800_3B0A:
	branch (wArg0A | wArg0C) != 0x0000 l0800_3B1B
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B1B:
	word16 dx_176
	word16 ax_178
	branch wArg0C < 0x0000 l0800_3B31
// DataOut: ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B21:
	branch wArg0C > 0x0000 l0800_3B2A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B23:
	branch wArg0A <=u 0xFDE8 l0800_3B31
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B31:
	dx_176 = wArg0C
	ax_178 = wArg0A
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B2A:
	dx_176 = 0x0000
	ax_178 = 0xFDE8
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B37:
	selector ds_146 = fn0800_4311(ds, ax_178, dx_176)
	Mem74[ss:fp - 0x0004:word16] = dx_176
	Mem75[ss:fp - 0x0006:word16] = ax_178
	word16 sp_147 = fp - 0x000A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3BAB:
	branch (Mem75[ss:fp + 0x000A:word16] | Mem75[ss:fp + 0x000C:word16]) != 0x0000 l0800_3B4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B4F:
	word16 ax_111
	branch Mem75[ss:fp + 0x000C:word16] < 0x0000 l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): SZO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B55:
	branch Mem75[ss:fp + 0x000C:word16] > 0x0000 l0800_3B5E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B57:
	branch Mem75[ss:fp + 0x000A:word16] <=u 0xFDE8 l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B65:
	ax_111 = Mem75[ss:fp + 0x000A:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B5E:
	ax_111 = 0xFDE8
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B6B:
	Mem113[ss:fp - 0x000A:word16] = ax_111
	word16 sp_114 = sp_147 - 0x0002
	Mem115[ss:sp_114:word16] = Mem113[ss:fp + 0x0004:word16]
	Mem117[ss:sp_114 - 0x0002:word16] = Mem115[ss:fp + 0x0002:word16]
	Mem119[ss:sp_114 - 0x0004:word16] = Mem117[ss:fp - 0x0008:word16]
	Mem121[ss:sp_114 - 0x0006:word16] = ax_111
	Mem123[ss:sp_114 - 0x0008:word16] = Mem121[ss:fp - 0x0004:word16]
	Mem125[ss:sp_114 - 0x000A:word16] = Mem123[ss:fp - 0x0006:word16]
	word16 di_129
	selector ds_130
	fn0800_4110(ds_146, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_129, out ds_130)
	Mem135[ss:sp_114:word16] = Mem125[ss:fp + 0x0008:word16]
	Mem137[ss:sp_114 - 0x0002:word16] = Mem135[ss:fp + 0x0006:word16]
	Mem139[ss:sp_114 - 0x0004:word16] = Mem137[ss:fp - 0x0008:word16]
	Mem141[ss:sp_114 - 0x0006:word16] = Mem139[ss:fp - 0x000A:word16]
	Mem143[ss:sp_114 - 0x0008:word16] = Mem141[ss:fp - 0x0004:word16]
	Mem145[ss:sp_114 - 0x000A:word16] = Mem143[ss:fp - 0x0006:word16]
	ds_146 = fn0800_4152(ds_130, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
	Mem152[ss:fp + 0x000A:word16] = Mem145[ss:fp + 0x000A:word16] - Mem145[ss:fp - 0x000A:word16]
	Mem156[ss:fp + 0x000C:word16] = v14
	sp_147 = sp_114 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3BB3:
	word16 sp_92 = sp_147 - 0x0002
	Mem93[ss:sp_92:word16] = Mem75[ss:fp - 0x0004:word16]
	Mem95[ss:sp_92 - 0x0002:word16] = Mem93[ss:fp - 0x0006:word16]
	fn0800_4346(ds_146, wArg00, wArg02, out ds)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

l0800_3B18:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_3BBF:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_3B0A_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>



selector fn0800_3BC3(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_3BC3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3BC3:
	word16 di_19
	word16 si_20 = fn0800_37BE(ds, 0x43AD, ds, 0x0A54, ds, out di_19)
	word16 di_33
	selector ds_34
	fn0800_4234(si_20, di_19, ds, 0x43AD, ds, 0x0A61, ds, out di_33, out ds_34)
	Mem39[ds_34:0x29D5:word16] = dx
	Mem40[ds_34:0x29D3:word16] = 0x43AD
	Mem43[ss:fp - 0x0008:word16] = Mem40[ss:fp + 0x0004:word16]
	Mem45[ss:fp - 0x000A:word16] = Mem43[ss:fp + 0x0002:word16]
	word16 si_48
	selector ds_49
	ui32 dx_ax_55 = SEQ(dx, fn0800_4194(fp - 0x0002, ds_34, wArg00, wArg02, out si_48, out ds_49) - Mem45[ss:fp + 0x0006:word16]) - Mem45[ss:fp + 0x0006:ui32]
	Mem58[ss:fp - 0x0004:word16] = SLICE(dx_ax_55, word16, 16)
	Mem59[ss:fp - 0x0006:word16] = (word16) dx_ax_55
	Mem64[ss:fp - 0x0008:word16] = 0x0000
	Mem66[ss:fp - 0x000A:word16] = Mem64[ss:fp + 0x0008:word16]
	Mem68[ss:fp - 0x000C:word16] = Mem66[ss:fp + 0x0006:word16]
	Mem70[ss:fp - 0x000E:word16] = Mem68[ss:fp + 0x0004:word16]
	Mem72[ss:fp - 0x0010:word16] = Mem70[ss:fp + 0x0002:word16]
	selector ds_75
	fn0800_ACB3(fp - 0x0002, ds_49, ptrArg00, wArg02, wArg08, out ds_75)
	Mem80[ss:fp - 0x0008:word16] = Mem72[ss:fp - 0x0004:word16]
	Mem82[ss:fp - 0x000A:word16] = Mem80[ss:fp - 0x0006:word16]
	Mem84[ss:fp - 0x000C:word16] = Mem82[ds_75:0x29D5:word16]
	Mem86[ss:fp - 0x000E:word16] = Mem84[ds_75:0x29D3:word16]
	Mem88[ss:fp - 0x0010:word16] = Mem86[ss:fp + 0x0004:word16]
	Mem90[ss:fp - 0x0012:word16] = Mem88[ss:fp + 0x0002:word16]
	selector ds_92 = fn0800_3B0A(fp - 0x0002, ds_75, wArg08, wArg0A)
	Mem96[ss:fp - 0x0008:word16] = Mem90[ds_92:0x29D5:word16]
	Mem98[ss:fp - 0x000A:word16] = Mem96[ds_92:0x29D3:word16]
	selector ds_99 = fn0800_BA67(ds_92, wArg00, wArg02)
	Mem103[ss:fp - 0x0008:word16] = 0x0000
	word16 ax_104 = Mem103[ss:fp + 0x0008:word16]
	word16 dx_106 = Mem103[ss:fp + 0x0006:word16] + Mem103[ss:fp + 0x000A:word16]
	Mem114[ss:fp - 0x000A:word16] = ax_104 + Mem103[ss:fp + 0x000C:word16] + (SEQ(dx_106, ax_104) <u 0x00000000)
	Mem116[ss:fp - 0x000C:word16] = dx_106
	Mem118[ss:fp - 0x000E:word16] = Mem116[ss:fp + 0x0004:word16]
	Mem120[ss:fp - 0x0010:word16] = Mem118[ss:fp + 0x0002:word16]
	selector ds_121
	fn0800_ACB3(fp - 0x0002, ds_99, ptrArg00, wArg02, wArg08, out ds_121)
	Mem126[ss:fp - 0x0008:word16] = Mem120[ss:fp - 0x0004:word16]
	Mem128[ss:fp - 0x000A:word16] = Mem126[ss:fp - 0x0006:word16]
	Mem130[ss:fp - 0x000C:word16] = Mem128[ss:fp + 0x0004:word16]
	Mem132[ss:fp - 0x000E:word16] = Mem130[ss:fp + 0x0002:word16]
	Mem134[ss:fp - 0x0010:word16] = Mem132[ds_121:0x29D5:word16]
	Mem136[ss:fp - 0x0012:word16] = Mem134[ds_121:0x29D3:word16]
	selector ds_137 = fn0800_3B0A(fp - 0x0002, ds_121, wArg08, wArg0A)
	Mem141[ss:fp - 0x0008:word16] = Mem136[ds_137:0x29D5:word16]
	Mem143[ss:fp - 0x000A:word16] = Mem141[ds_137:0x29D3:word16]
	byte dl_144
	word16 di_145
	selector ds_146
	fn0800_A614(fp - 0x0002, ds_137, ptrArg00, wArg02, out dl_144, out di_145, out ds_146)
	Mem151[ss:fp - 0x0008:word16] = ds_146
	Mem155[ss:fp - 0x000A:word16] = 0x43AD
	fn0800_8F7F(0xAD, ds_146, ptrArg00)
	return ds_146
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3BC3_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_3C99(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_3C99_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3C99:
	fn0800_3509(ds, 0x4348, ds)
	Mem29[ss:fp - 0x0072:word16] = ss
	selector es_30 = Mem29[ss:fp - 0x0072:selector]
	word16 di_282 = fp - 0x006C
	word16 si_33 = 0x0A54
	word16 cx_283 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3CBE:
	branch cx_283 == 0x0000 l0800_3CC0
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CBE_1:
	di_282 = di_282 + 0x0001
	cx_283 = cx_283 - 0x0001
	branch 0x00 != Mem29[es_30:di_282:byte] l0800_3CBE
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC0:
	word16 di_53 = di_282 - 0x0001
	word16 cx_55 = 0x000D
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC4:
	branch cx_55 == 0x0000 l0800_3CC6
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC6:
	Mem68[ss:fp - 0x0072:word16] = 0x0A61
	Mem70[ss:fp - 0x0074:word16] = ss
	Mem73[ss:fp - 0x0076:word16] = fp - 0x006C
	word16 di_78
	selector ds_79
	fn0800_4234(si_33, di_53, ds, wArg00, wArg02, wArg04, wArg06, out di_78, out ds_79)
	Mem82[ss:fp - 0x0004:word16] = dx
	Mem83[ss:fp - 0x0006:word16] = fp - 0x006C
	Mem88[ss:fp - 0x0070:word16] = 0x0000
	Mem90[ss:fp - 0x0072:word16] = 0x0000
	Mem92[ss:fp - 0x0074:word16] = 0x0000
	Mem94[ss:fp - 0x0076:word16] = Mem92[ss:fp + 0x0004:word16]
	Mem96[ss:fp - 0x0078:word16] = Mem94[ss:fp + 0x0002:word16]
	selector ds_99
	fn0800_ACB3(fp - 0x0002, ds_79, ptrArg00, wArg02, wArg08, out ds_99)
	Mem104[ss:fp - 0x0070:word16] = Mem96[ss:fp + 0x0008:word16]
	Mem106[ss:fp - 0x0072:word16] = Mem104[ss:fp + 0x0006:word16]
	Mem108[ss:fp - 0x0074:word16] = Mem106[ss:fp - 0x0004:word16]
	Mem110[ss:fp - 0x0076:word16] = Mem108[ss:fp - 0x0006:word16]
	Mem112[ss:fp - 0x0078:word16] = Mem110[ss:fp + 0x0004:word16]
	Mem114[ss:fp - 0x007A:word16] = Mem112[ss:fp + 0x0002:word16]
	selector ds_116 = fn0800_3B0A(fp - 0x0002, ds_99, wArg08, wArg0A)
	Mem120[ss:fp - 0x0070:word16] = 0x0000
	ui32 ax_dx_126 = SEQ(Mem120[ss:fp + 0x0008:word16], Mem120[ss:fp + 0x0006:word16] + Mem120[ss:fp + 0x000A:word16]) + Mem120[ss:fp + 0x000A:ui32]
	Mem131[ss:fp - 0x0072:word16] = SLICE(ax_dx_126, word16, 16)
	word16 dx_128 = (word16) ax_dx_126
	Mem133[ss:fp - 0x0074:word16] = dx_128
	Mem135[ss:fp - 0x0076:word16] = Mem133[ss:fp + 0x0004:word16]
	Mem137[ss:fp - 0x0078:word16] = Mem135[ss:fp + 0x0002:word16]
	selector ds_138
	fn0800_ACB3(fp - 0x0002, ds_116, ptrArg00, wArg02, wArg08, out ds_138)
	Mem143[ss:fp - 0x0070:word16] = Mem137[ss:fp + 0x0004:word16]
	Mem145[ss:fp - 0x0072:word16] = Mem143[ss:fp + 0x0002:word16]
	selector ds_147
	word16 si_146
	word16 ax_148 = fn0800_4194(fp - 0x0002, ds_138, wArg00, wArg02, out si_146, out ds_147)
	ui32 bx_cx_155 = SEQ(Mem145[ss:fp + 0x0008:word16], Mem145[ss:fp + 0x0006:word16] + Mem145[ss:fp + 0x000A:word16]) + Mem145[ss:fp + 0x000A:ui32]
	ui32 dx_ax_160 = SEQ(dx_128, ax_148 - (word16) bx_cx_155) - bx_cx_155
	word16 dx_162 = SLICE(dx_ax_160, word16, 16)
	Mem165[ss:fp + 0x000C:word16] = dx_162
	word16 ax_161 = (word16) dx_ax_160
	Mem166[ss:fp + 0x000A:word16] = ax_161
	Mem168[ss:fp - 0x0070:word16] = Mem166[ss:fp + 0x000C:word16]
	Mem170[ss:fp - 0x0072:word16] = ax_161
	Mem172[ss:fp - 0x0074:word16] = Mem170[ss:fp - 0x0004:word16]
	Mem174[ss:fp - 0x0076:word16] = Mem172[ss:fp - 0x0006:word16]
	Mem176[ss:fp - 0x0078:word16] = Mem174[ss:fp + 0x0004:word16]
	Mem178[ss:fp - 0x007A:word16] = Mem176[ss:fp + 0x0002:word16]
	selector ds_179 = fn0800_3B0A(fp - 0x0002, ds_147, wArg08, wArg0A)
	Mem183[ss:fp - 0x0070:word16] = Mem178[ss:fp - 0x0004:word16]
	Mem185[ss:fp - 0x0072:word16] = Mem183[ss:fp - 0x0006:word16]
	byte dl_186
	word16 di_187
	selector ds_188
	fn0800_A614(fp - 0x0002, ds_179, ptrArg00, wArg02, out dl_186, out di_187, out ds_188)
	Mem193[ss:fp - 0x0070:word16] = Mem185[ds_188:0x29D1:word16]
	Mem195[ss:fp - 0x0072:word16] = Mem193[ds_188:0x29CF:word16]
	byte dl_196
	selector ds_198
	word16 di_197
	fn0800_A614(fp - 0x0002, ds_188, ptrArg00, wArg02, out dl_196, out di_197, out ds_198)
	Mem204[ss:fp - 0x0070:word16] = 0x0180
	Mem206[ss:fp - 0x0072:word16] = ds_198
	Mem209[ss:fp - 0x0074:word16] = 0x4348
	selector ds_210 = fn0800_A4F6(fp - 0x0002, ds_198, wArg00, wArg02, wArg04)
	Mem214[ss:fp - 0x0070:word16] = ds_210
	Mem218[ss:fp - 0x0072:word16] = 0x4348
	fn0800_8F7F(0x48, ds_210, ptrArg00)
	Mem223[ss:fp - 0x0070:word16] = ds_210
	Mem226[ss:fp - 0x0072:word16] = 0x4348
	Mem228[ss:fp - 0x0074:word16] = ss
	Mem232[ss:fp - 0x0076:word16] = fp - 0x006C
	word16 sp_235 = fp - 0x006E
	branch fn0800_BA4A((byte) (fp - 0x006C), ds_210, ptrArg00, ptrArg04) != 0xFFFF l0800_3DB2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3DA3:
	Mem267[ss:fp - 0x0070:word16] = ss
	Mem270[ss:fp - 0x0072:word16] = fp - 0x006C
	Mem273[ss:fp - 0x0074:word16] = 0x000A
	fn0800_0D24(fp - 0x0002, ds_210, out si_146, out di_197, out ds_210)
	sp_235 = fp - 0x006E
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3DB2:
	word16 sp_243 = sp_235 - 0x0002
	Mem244[ss:sp_243:word16] = ds_210
	Mem247[ss:sp_243 - 0x0002:word16] = 0x0A65
	Mem249[ss:sp_243 - 0x0004:word16] = ds_210
	Mem252[ss:sp_243 - 0x0006:word16] = 0x4348
	word16 di_253
	selector ds_254
	fn0800_4234(si_146, di_197, ds_210, wArg00, wArg02, wArg04, wArg06, out di_253, out ds_254)
	Mem258[ds_254:0x29D1:word16] = dx_162
	Mem259[ds_254:0x29CF:word16] = 0x4348
	return ds_254
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_3C99_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

l0800_3CC4_2:
	Mem62[es_30:di_53:byte] = Mem29[ds:si_33:byte]
	si_33 = si_33 + 0x0001
	di_53 = di_53 + 0x0001
	cx_55 = cx_55 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_3DCF(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al ax di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3DCF_entry:
	*diOut = di
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16)

l0800_3DCF:
	word16 ax_29
	word16 bx_14 = (word16) ptrArg02
	selector es_15 = SLICE(ptrArg02, selector, 16)
	word16 v10_17 = Mem0[es_15:bx_14:word16] - 0x0001
	Mem18[es_15:bx_14:word16] = v10_17
	branch v10_17 < 0x0000 l0800_3DF3
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DF3:
	ax_29 = fn0800_AEC2(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out ds)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DDE:
	word16 ax_78 = Mem18[es_15:bx_14 + 0x000E:word16]
	Mem81[es_15:bx_14 + 0x000C:word16] = Mem18[es_15:bx_14 + 0x000C:word16] + 0x0001
	ax_29 = DPB(ax_78, 0x00, 8) (alias)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DFF:
	branch ax_29 != 0xFFFF l0800_3E1F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3E07:
	fn0800_4271(ds, wArg02, wArg04)
	word16 si_72
	word16 di_73
	selector ds_74
	fn0800_0D24(fp - 0x0002, ds, out si_72, out di_73, out ds_74)
	ax_29 = 0x0008
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3E1F:
	return DPB(ax_29, Mem18[ss:fp - 0x0004:byte], 0)
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3DCF_exit:
// DataOut: al ax di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E27(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E27_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E27:
	word16 di_18
	selector ds_19
	Mem25[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_18, out ds_19), 0x00, 8)
	Mem28[ss:fp - 0x0008:word16] = Mem25[ss:fp + 0x0004:word16]
	Mem30[ss:fp - 0x000A:word16] = Mem28[ss:fp + 0x0002:word16]
	word16 di_32
	selector ds_33
	Mem38[ss:fp - 0x0006:word16] = DPB(fn0800_3DCF(ds_19, ptrArg00, wArg02, out di_32, out ds_33), 0x00, 8)
	return (Mem38[ss:fp - 0x0004:word16] << 0x08) + Mem38[ss:fp - 0x0006:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E27_exit:
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> ax:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E5D(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds dx
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E5D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E5D:
	word16 si_16
	word16 di_17
	selector ds_18
	word16 ax_19 = fn0800_3E27(fp - 0x0002, ds, wArg02, wArg04, out si_16, out di_17, out ds_18)
	Mem22[ss:fp - 0x0004:word16] = 0x0000
	Mem24[ss:fp - 0x0006:word16] = ax_19
	Mem26[ss:fp - 0x000C:word16] = Mem24[ss:fp + 0x0004:word16]
	Mem28[ss:fp - 0x000E:word16] = Mem26[ss:fp + 0x0002:word16]
	word16 si_30
	word16 di_31
	selector ds_32
	word16 ax_33 = fn0800_3E27(fp - 0x0002, ds_18, wArg00, wArg02, out si_30, out di_31, out ds_32)
	Mem35[ss:fp - 0x0008:word16] = 0x0000
	Mem36[ss:fp - 0x000A:word16] = ax_33
	return Mem36[ss:fp - 0x0006:word16] + (Mem36[ss:fp - 0x000A:word16] <u 0x0000)
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E5D_exit:
// DataOut: ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3E9A(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3E9A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16)

l0800_3E9A:
	word16 ax_103
	word16 bx_14 = (word16) ptrArg02
	selector es_15 = SLICE(ptrArg02, selector, 16)
	word16 v10_17 = Mem0[es_15:bx_14:word16] - 0x0001
	Mem18[es_15:bx_14:word16] = v10_17
	word16 sp_117 = fp - 0x0006
	branch v10_17 < 0x0000 l0800_3EBE
// DataOut: bp bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3EBE:
	ax_103 = fn0800_AEC2(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out ds)
	sp_117 = fp - 0x0006
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3EA9:
	word16 ax_95 = Mem18[es_15:bx_14 + 0x000E:word16]
	Mem98[es_15:bx_14 + 0x000C:word16] = Mem18[es_15:bx_14 + 0x000C:word16] + 0x0001
	ax_103 = DPB(ax_95, 0x00, 8) (alias)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3ECA:
	branch ax_103 != 0xFFFF l0800_3EEA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3ED2:
	fn0800_4271(ds, wArg02, wArg04)
	word16 si_89
	word16 di_90
	fn0800_0D24(fp - 0x0002, ds, out si_89, out di_90, out ds)
	sp_117 = fp - 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3EEA:
	word16 sp_46 = sp_117 - 0x0002
	Mem47[ss:sp_46:word16] = 0x0001
	Mem52[ss:sp_46 - 0x0002:word16] = 0xFFFF
	Mem54[ss:sp_46 - 0x0004:word16] = 0xFFFF
	Mem56[ss:sp_46 - 0x0006:word16] = Mem54[ss:fp + 0x0004:word16]
	Mem58[ss:sp_46 - 0x0008:word16] = Mem56[ss:fp + 0x0002:word16]
	selector ds_62
	return DPB(fn0800_ACB3(fp - 0x0002, ds, ptrArg00, wArg02, wArg08, out ds_62), Mem58[ss:fp - 0x0004:byte], 0)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3E9A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F0A(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3F0A:
	word16 di_18
	selector ds_19
	Mem25[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_18, out ds_19), 0x00, 8)
	Mem28[ss:fp - 0x0008:word16] = Mem25[ss:fp + 0x0004:word16]
	Mem30[ss:fp - 0x000A:word16] = Mem28[ss:fp + 0x0002:word16]
	word16 di_32
	selector ds_33
	Mem39[ss:fp - 0x0006:word16] = DPB(fn0800_3DCF(ds_19, ptrArg00, wArg02, out di_32, out ds_33), 0x00, 8)
	Mem42[ss:fp - 0x0008:word16] = 0x0001
	Mem46[ss:fp - 0x000A:word16] = 0xFFFF
	Mem48[ss:fp - 0x000C:word16] = 0xFFFE
	Mem50[ss:fp - 0x000E:word16] = Mem48[ss:fp + 0x0004:word16]
	Mem52[ss:fp - 0x0010:word16] = Mem50[ss:fp + 0x0002:word16]
	selector ds_54
	fn0800_ACB3(fp - 0x0002, ds_33, ptrArg00, wArg02, wArg08, out ds_54)
	return (Mem52[ss:fp - 0x0004:word16] << 0x08) + Mem52[ss:fp - 0x0006:word16]
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> ax:<invalid> dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFE -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F58(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds dx
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F58_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3F58:
	word16 si_16
	word16 di_17
	selector ds_18
	word16 ax_19 = fn0800_3E27(fp - 0x0002, ds, wArg02, wArg04, out si_16, out di_17, out ds_18)
	Mem22[ss:fp - 0x0004:word16] = 0x0000
	Mem24[ss:fp - 0x0006:word16] = ax_19
	Mem26[ss:fp - 0x000C:word16] = Mem24[ss:fp + 0x0004:word16]
	Mem28[ss:fp - 0x000E:word16] = Mem26[ss:fp + 0x0002:word16]
	word16 si_30
	word16 di_31
	selector ds_32
	word16 ax_33 = fn0800_3E27(fp - 0x0002, ds_18, wArg00, wArg02, out si_30, out di_31, out ds_32)
	Mem36[ss:fp - 0x0008:word16] = 0x0000
	Mem37[ss:fp - 0x000A:word16] = ax_33
	Mem40[ss:fp - 0x000C:word16] = 0x0001
	Mem44[ss:fp - 0x000E:word16] = 0xFFFF
	Mem46[ss:fp - 0x0010:word16] = 0xFFFC
	Mem48[ss:fp - 0x0012:word16] = Mem46[ss:fp + 0x0004:word16]
	Mem50[ss:fp - 0x0014:word16] = Mem48[ss:fp + 0x0002:word16]
	selector ds_53
	fn0800_ACB3(fp - 0x0002, ds_32, ptrArg00, wArg02, wArg08, out ds_53)
	return Mem50[ss:fp - 0x0006:word16] + Mem50[ss:fp - 0x0008:word16] + (Mem50[ss:fp - 0x000A:word16] <u 0x0000)
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F58_exit:
// DataOut: di ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):0xFFFC -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3FAD(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3FAD_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3FAD:
	word16 di_18
	selector ds_19
	Mem25[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_18, out ds_19), 0x00, 8)
	Mem28[ss:fp - 0x0008:word16] = Mem25[ss:fp + 0x0004:word16]
	Mem30[ss:fp - 0x000A:word16] = Mem28[ss:fp + 0x0002:word16]
	word16 di_32
	selector ds_33
	word16 ax_37 = DPB(fn0800_3DCF(ds_19, ptrArg00, wArg02, out di_32, out ds_33), 0x00, 8)
	Mem38[ss:fp - 0x0006:word16] = ax_37
	return (ax_37 << 0x08) + Mem38[ss:fp - 0x0004:word16]
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3FAD_exit:
// DataOut: ax di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> cl:0x08 ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_401E(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_401E_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_401E:
	selector ds_24
	fn0800_4047(ds, (byte) (wArg02 >>u 0x08), DPB(ptrLoc06, wArg04, 0), wArg06, out ds_24)
	Mem31[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0006:word16]
	Mem33[ss:fp - 0x0006:word16] = Mem31[ss:fp + 0x0004:word16]
	Mem37[ss:fp - 0x0008:word16] = DPB(wArg02 >>u 0x08, Mem33[ss:fp + 0x0002:byte], 0)
	selector ds_40
	fn0800_4047(ds_24, bArg00, ptrArg02, wArg04, out ds_40)
	return ds_40
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_401E_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4047(selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_4047_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_4047:
	word16 ax_103
	word16 bx_16 = (word16) ptrArg04
	selector es_17 = SLICE(ptrArg04, selector, 16)
	word16 v10_19 = Mem0[es_17:bx_16:word16] + 0x0001
	Mem20[es_17:bx_16:word16] = v10_19
	branch v10_19 >= 0x0000 l0800_406F
// DataOut: bp bx cl cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_406F:
	ax_103 = fn0800_B30A(ds, bArg02, DPB(ptrLoc08, wArg04, 0), wArg06, out ds)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_4056:
	word16 ax_77 = Mem20[es_17:bx_16 + 0x000E:word16]
	word16 si_78 = Mem20[es_17:bx_16 + 0x000C:word16]
	Mem80[es_17:bx_16 + 0x000C:word16] = Mem20[es_17:bx_16 + 0x000C:word16] + 0x0001
	Mem84[ax_77:si_78:byte] = bArg02
	ax_103 = DPB(ax_77, 0x00, 8) (alias)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_407C:
	branch ax_103 != 0xFFFF l0800_4099
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_4081:
	fn0800_4271(ds, wArg04, wArg06)
	word16 si_71
	selector ds_73
	fn0800_0D24(fp - 0x0002, ds, out si_71, out di, out ds_73)
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_4099:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_4047_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_409C(word16 bp, selector ds, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_409C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_409C:
	selector ds_17 = fn0800_401E(fp - 0x0002, ds, wArg04, wArg06, wArg08)
	Mem23[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0008:word16]
	Mem25[ss:fp - 0x0006:word16] = Mem23[ss:fp + 0x0006:word16]
	Mem27[ss:fp - 0x0008:word16] = Mem25[ss:fp + 0x0002:word16]
	return fn0800_401E(fp - 0x0002, ds_17, wArg00, wArg02, wArg04)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_409C_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_40BF(word16 bp, selector ds, byte bArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(16) Stack +0006(16)
fn0800_40BF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16)

l0800_40BF:
	selector ds_26
	fn0800_4047(ds, bArg02 & 0xFF, DPB(ptrLoc06, wArg04, 0), wArg06, out ds_26)
	Mem32[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0006:word16]
	Mem34[ss:fp - 0x0006:word16] = Mem32[ss:fp + 0x0004:word16]
	word16 ax_35 = Mem34[ss:fp + 0x0002:word16]
	Mem44[ss:fp - 0x0008:word16] = DPB(ax_35 >>u 0x08, (byte) (ax_35 >>u 0x08) & 0xFF, 0)
	selector ds_47
	return fn0800_4047(ds_26, bArg00, ptrArg02, wArg04, out ds_47)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_40BF_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4110(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_4110_entry:
	*diOut = di
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_4110:
	selector ds_26
	word16 ax_27 = fn0800_ABA3(fp - 0x0002, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_26)
	branch 0x0000 != wArg08 l0800_4138
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4133:
	branch ax_27 == wArg06 l0800_4150
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +000A(16) Stack +000C(16)

l0800_4138:
	fn0800_4271(ds_26, wArg0A, wArg0C)
	word16 di_65
	selector ds_66
	fn0800_0D24(fp - 0x0002, ds_26, out si, out di_65, out ds_66)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4150:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4110_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_4152(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_4152_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_4152:
	selector ds_26
	word16 ax_27 = fn0800_AD85(fp - 0x0002, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_26)
	branch 0x0000 != wArg08 l0800_417A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4175:
	branch ax_27 == wArg06 l0800_4192
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +000A(16) Stack +000C(16)

l0800_417A:
	fn0800_4271(ds_26, wArg0A, wArg0C)
	word16 si_62
	word16 di_63
	fn0800_0D24(fp - 0x0002, ds_26, out si_62, out di_63, out ds_26)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4192:
	return ds_26
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4152_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4194(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4194_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4194:
	word16 si_18
	word16 ax_19 = fn0800_AD2F(ds, DPB(ptrLoc0E, wArg02, 0), wArg04, out si_18)
	Mem22[ss:fp - 0x0004:word16] = dx
	Mem24[ss:fp - 0x0006:word16] = ax_19
	Mem27[ss:fp - 0x000C:word16] = 0x0002
	Mem32[ss:fp - 0x000E:word16] = 0x0000
	Mem34[ss:fp - 0x0010:word16] = 0x0000
	Mem36[ss:fp - 0x0012:word16] = Mem34[ss:fp + 0x0004:word16]
	Mem38[ss:fp - 0x0014:word16] = Mem36[ss:fp + 0x0002:word16]
	selector ds_41
	fn0800_ACB3(fp - 0x0002, ds, ptrArg00, wArg02, wArg08, out ds_41)
	Mem46[ss:fp - 0x000C:word16] = Mem38[ss:fp + 0x0004:word16]
	Mem48[ss:fp - 0x000E:word16] = Mem46[ss:fp + 0x0002:word16]
	word16 si_49
	word16 ax_50 = fn0800_AD2F(ds_41, ptrArg00, wArg02, out si_49)
	Mem52[ss:fp - 0x0008:word16] = dx
	Mem53[ss:fp - 0x000A:word16] = ax_50
	Mem58[ss:fp - 0x000C:word16] = 0x0000
	Mem60[ss:fp - 0x000E:word16] = Mem58[ss:fp - 0x0004:word16]
	Mem62[ss:fp - 0x0010:word16] = Mem60[ss:fp - 0x0006:word16]
	Mem64[ss:fp - 0x0012:word16] = Mem62[ss:fp + 0x0004:word16]
	Mem66[ss:fp - 0x0014:word16] = Mem64[ss:fp + 0x0002:word16]
	selector ds_67
	fn0800_ACB3(fp - 0x0002, ds_41, ptrArg00, wArg02, wArg08, out ds_67)
	return Mem66[ss:fp - 0x000A:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4194_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4234(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_4234_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_4234:
	word16 dx_24
	word16 di_26
	selector ds_27
	word16 si_25
	word16 ax_28 = fn0800_AA7E(si, di, ds, wArg02, wArg04, wArg06, wArg08, out dx_24, out si_25, out di_26, out ds_27)
	Mem30[ss:fp - 0x0004:word16] = dx_24
	Mem32[ss:fp - 0x0006:word16] = ax_28
	branch (ax_28 | Mem32[ss:fp - 0x0004:word16]) != 0x0000 l0800_4267
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4257:
	Mem51[ss:fp - 0x0008:word16] = Mem32[ss:fp + 0x0004:word16]
	Mem53[ss:fp - 0x000A:word16] = Mem51[ss:fp + 0x0002:word16]
	Mem56[ss:fp - 0x000C:word16] = 0x0007
	word16 di_58
	selector ds_59
	fn0800_0D24(fp - 0x0002, ds_27, out si_25, out di_58, out ds_59)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4267:
	return si_25
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4234_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_4271(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4271_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4271:
	branch wArg04 != Mem0[ds:0x29E5:word16] l0800_428D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4280:
	branch wArg02 != Mem0[ds:0x29E3:word16] l0800_428D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_428D:
	branch wArg04 != Mem0[ds:0x29E1:word16] l0800_42A6
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4299:
	branch wArg02 != Mem0[ds:0x29DF:word16] l0800_42A6
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42A6:
	branch wArg04 != Mem0[ds:0x29D1:word16] l0800_42BF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42B2:
	branch wArg02 != Mem0[ds:0x29CF:word16] l0800_42BF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42BF:
	branch wArg04 != Mem0[ds:0x29DD:word16] l0800_42D8
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42CB:
	branch wArg02 != Mem0[ds:0x29DB:word16] l0800_42D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42D8:
	branch wArg04 != Mem0[ds:0x29D9:word16] l0800_42F1
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42E4:
	branch wArg02 != Mem0[ds:0x29D7:word16] l0800_42F1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42F1:
	branch wArg04 != Mem0[ds:0x29D5:word16] l0800_430A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42FD:
	branch wArg02 != Mem0[ds:0x29D3:word16] l0800_430A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_430A:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4303:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42EA:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42D1:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42B8:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_429F:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4286:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_4271_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:ds -2(fp):bp



selector fn0800_4311(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4311_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4311:
	word16 dx_16
	word16 bp_17
	selector ds_18
	word16 ax_19 = fn0800_9F89(fp - 0x0002, ds, wArg02, wArg04, out dx_16, out bp_17, out ds_18)
	Mem21[ss:bp_17 - 0x0002:word16] = dx_16
	Mem23[ss:bp_17 - 0x0004:word16] = ax_19
	branch (ax_19 | dx_16) != 0x0000 l0800_433C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_432D:
	Mem42[ss:fp - 0x0008:word16] = ds_18
	Mem45[ss:fp - 0x000A:word16] = 0x0A6C
	Mem48[ss:fp - 0x000C:word16] = 0x0006
	word16 si_49
	word16 di_50
	fn0800_0D24(bp_17, ds_18, out si_49, out di_50, out ds_18)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp

l0800_433C:
	return ds_18
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -12(fp):0x0006 -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp

fn0800_4311_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -12(fp):0x0006 -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp



byte fn0800_4346(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4346_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4346:
	selector ds_14
	return fn0800_9E75(ds, wArg04, out ds_14)
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4346_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4357(word16 wArg00, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bp bpl bx dl dx eax ebp ebx edx es esp rax rbp rbx rdx rsp sp spl
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_4357_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4357:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43B9:
	branch Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte] != 0x00 l0800_435C
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_435C:
	byte al_60 = Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte]
	word16 ax_62 = (int16) al_60
	branch ax_62 == 0x002A l0800_4379
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4379:
	word16 bx_120 = (word16) ptrArg02
	selector es_121 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_121:bx_120:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4382:
	branch Mem0[es_121:bx_120:byte] != 0x00 l0800_4376
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4376:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4388:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_436A:
	branch ax_62 == 0x002E l0800_439E
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_439E:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] == 0x00 l0800_43B6
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_436F:
	branch ax_62 == 0x003F l0800_438A
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_438A:
	word16 bx_103 = (word16) ptrArg02
	selector es_104 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_104:bx_103:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0006(32)

l0800_4393:
	branch Mem0[es_104:bx_103:byte] == 0x00 l0800_43B6
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0006(32)

l0800_4399:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4374:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43A7:
	branch al_60 == Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] l0800_43B3
	branch al_60 == Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] l0800_43B3
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0006(32)

l0800_43B3:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43B6:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43AF:
	return 0x0000
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43C2:
	word16 ax_46
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] != 0x00 l0800_43D0
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D0:
	ax_46 = 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43CB:
	ax_46 = 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D2:
	return ax_46
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

fn0800_4357_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>



void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx es rax rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_43D4_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_43D4:
	word16 cx_11 = wArg06
	word16 si_18 = wArg02 + (word16) (wArg06 *s 0x000C)
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_440F:
	si_18 = si_18 - 0x000C
	cx_11 = cx_11 - 0x0001
	branch cx_11 != 0x0000 l0800_43E9
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_43E9:
	Mem37[psegArg04:si_18 + 0x0002:word16] = 0x0000
	Mem38[psegArg04:si_18:word16] = 0x0000
	Mem39[psegArg04:si_18 + 0x0004:word16] = 0xFFFF
	Mem40[psegArg04:si_18 + 0x0008:word16] = 0x0000
	Mem41[psegArg04:si_18 + 0x0006:word16] = 0x0000
	Mem42[psegArg04:si_18 + 0x000A:word16] = 0x0000
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_4419:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp

fn0800_43D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp



void fn0800_441C(word16 bp, selector ds, segptr32 ptrArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_441C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_441C:
	word16 bp_113 = fp - 0x0002
	word16 sp_11 = fp - 0x0008
	word16 di_14 = 0x0000
	word16 cx_15 = 0x0000
	word16 si_21 = wArg02
	branch 0x0000 >=u wArg06 l0800_4452
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4439:
	branch (Mem0[psegArg04:si_21:word16] | Mem0[psegArg04:si_21 + 0x0002:word16]) == 0x0000 l0800_4449
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4445:
	di_14 = di_14 + 0x0001
	wLoc04 = cx_15
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4449:
	si_21 = si_21 + 0x000C
	cx_15 = cx_15 + 0x0001
	branch cx_15 <u wArg06 l0800_4439
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4452:
	branch di_14 != 0x0000 l0800_4459
	branch di_14 != 0x0000 l0800_4459
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32)

l0800_4459:
	branch di_14 == 0x0001 l0800_4461
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32)

l0800_4461:
	selector es_236 = SLICE(ptrArg02, selector, 16)
	word16 bx_238 = (word16) ptrArg02 + (word16) (wLoc04 *s 0x000C)
	Mem241[es_236:bx_238 + 0x000A:word16] = Mem0[es_236:bx_238 + 0x000A:word16] + 0x0001
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_445E:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4525:
	word16 sp_91 = sp_11 - 0x0002
	Mem92[ss:sp_91:word16] = Mem0[ss:bp_113 + 0x0008:word16]
	Mem94[ss:sp_91 - 0x0002:word16] = Mem92[ss:bp_113 + 0x0006:word16]
	Mem96[ss:sp_91 - 0x0004:word16] = Mem94[ss:bp_113 + 0x0004:word16]
	word16 bp_100
	branch fn0800_463B(bp_113, ds, bp, wArg00, wArg02, psegArg04, out bp_100) == 0x0000 l0800_453B
	Mem108[ss:sp_91:word16] = Mem96[ss:bp_100 + 0x0008:word16]
	Mem110[ss:sp_91 - 0x0002:word16] = Mem108[ss:bp_100 + 0x0006:word16]
	Mem112[ss:sp_91 - 0x0004:word16] = Mem110[ss:bp_100 + 0x0004:word16]
	branch fn0800_463B(bp_100, ds, bp, wArg00, wArg02, psegArg04, out bp_113) == 0x0000 l0800_453B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_453B:
	Mem223[ss:sp_91:word16] = Mem112[ss:bp_113 + 0x0008:word16]
	Mem225[ss:sp_91 - 0x0002:word16] = Mem223[ss:bp_113 + 0x0006:word16]
	Mem227[ss:sp_91 - 0x0004:word16] = Mem225[ss:bp_113 + 0x0004:word16]
	fn0800_4550(bp_113)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_4538:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4478:
	ptr32 es_bx_125 = Mem112[ss:bp_113 + 0x0004:segptr32]
	word16 ax_123 = (word16) (Mem112[ds:0x4658:word16] *s 0x000C)
	selector es_126 = SLICE(es_bx_125, selector, 16)
	word16 bx_128 = (word16) es_bx_125 + ax_123
	word16 dx_130 = Mem112[es_126:bx_128:word16]
	Mem132[ss:sp_91:word16] = Mem112[es_126:bx_128 + 0x0002:word16]
	word16 ax_133 = Mem132[ds:0x465A:word16]
	Mem136[ss:sp_91 - 0x0002:word16] = dx_130
	word16 ax_138 = (word16) (ax_133 *s 0x000C)
	word16 bx_141 = Mem136[ss:bp_113 + 0x0004:word16] + ax_138
	word16 v20_144 = Mem136[es_126:bx_141:word16] + Mem136[ss:sp_91 - 0x0002:word16]
	Mem145[es_126:bx_141:word16] = v20_144
	Mem152[es_126:bx_141 + 0x0002:word16] = Mem145[es_126:bx_141 + 0x0002:word16] + Mem145[ss:sp_91:word16] + (v20_144 <u 0x0000)
	word16 bx_154 = Mem152[ss:bp_113 + 0x0004:word16] + ax_123
	Mem155[es_126:bx_154 + 0x0002:word16] = 0x0000
	Mem156[es_126:bx_154:word16] = 0x0000
	word16 bx_158 = Mem156[ss:bp_113 + 0x0004:word16] + ax_138
	Mem161[es_126:bx_158 + 0x000A:word16] = Mem156[es_126:bx_158 + 0x000A:word16] + 0x0001
	word16 cx_124 = ax_123
	word16 dx_139 = ax_138
	sp_11 = sp_91 + 0x0002
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_44DD:
	ptr32 es_bx_167 = Mem161[ss:bp_113 + 0x0004:segptr32]
	selector es_168 = SLICE(es_bx_167, selector, 16)
	word16 bx_170 = (word16) es_bx_167 + dx_139
	branch Mem161[es_168:bx_170 + 0x0004:word16] != 0xFFFF l0800_44C3
// DataOut: bp cx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_44C3:
	selector es_208 = Mem161[ss:bp_113 + 0x0006:selector]
	word16 ax_209 = Mem161[es_208:bx_170 + 0x0004:word16]
	Mem210[ds:0x465A:word16] = ax_209
	word16 ax_213 = (word16) (ax_209 *s 0x000C)
	word16 bx_217 = Mem210[ss:bp_113 + 0x0004:word16] + ax_213
	Mem220[es_208:bx_217 + 0x000A:word16] = Mem210[es_208:bx_217 + 0x000A:word16] + 0x0001
	dx_139 = ax_213
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_44EB:
	Mem176[es_168:bx_170 + 0x0004:word16] = Mem161[ds:0x4658:word16]
	word16 bx_178 = Mem176[ss:bp_113 + 0x0004:word16] + ax_123
	Mem181[es_168:bx_178 + 0x000A:word16] = Mem176[es_168:bx_178 + 0x000A:word16] + 0x0001
// DataOut: bp cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4517:
	ptr32 es_bx_188 = Mem181[ss:bp_113 + 0x0004:segptr32]
	word16 bx_191 = (word16) es_bx_188 + cx_124
	branch Mem181[SLICE(es_bx_188, selector, 16):bx_191 + 0x0004:word16] != 0xFFFF l0800_44FD
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_44FD:
	selector es_195 = Mem181[ss:bp_113 + 0x0006:selector]
	word16 ax_196 = Mem181[es_195:bx_191 + 0x0004:word16]
	Mem197[ds:0x4658:word16] = ax_196
	word16 ax_200 = (word16) (ax_196 *s 0x000C)
	word16 bx_203 = Mem197[ss:bp_113 + 0x0004:word16] + ax_200
	Mem206[es_195:bx_203 + 0x000A:word16] = Mem197[es_195:bx_203 + 0x000A:word16] + 0x0001
	cx_124 = ax_200
// DataOut: bp cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4456:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_454A:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> Sequence es:bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_441C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



void fn0800_4550(word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_4550_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4550:
	word16 bp_109 = fp - 0x0002
	word16 sp_12 = fp - 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_45D6:
	branch Mem0[ss:bp_109 - 0x000A:word16] <=u 0x0010 l0800_4573
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4573:
	word16 di_111 = 0x0000
	word16 si_110 = Mem0[ss:bp_109 + 0x0004:word16]
	branch 0x0000 >=u Mem0[ss:bp_109 + 0x0008:word16] l0800_45C3
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_457D:
	branch Mem0[Mem0[ss:bp_109 + 0x0006:selector]:si_110 + 0x000A:word16] != Mem0[ss:bp_109 - 0x000A:word16] l0800_45BA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4589:
	word16 sp_98 = sp_12 - 0x0002
	Mem99[ss:sp_98:word16] = Mem0[ss:bp_109 - 0x000A:word16]
	Mem101[ss:sp_98 - 0x0002:word16] = Mem99[ss:bp_109 - 0x0006:word16]
	Mem103[ss:sp_98 - 0x0004:word16] = Mem101[ss:bp_109 - 0x0008:word16]
	Mem105[ss:sp_98 - 0x0006:word16] = Mem103[ss:bp_109 - 0x0002:word16]
	Mem107[ss:sp_98 - 0x0008:word16] = Mem105[ss:bp_109 - 0x0004:word16]
	word16 dx_108
	word16 ax_112 = fn0800_8BC2(bp_109, si_110, di_111, bp, out dx_108, out bp_109, out si_110, out di_111)
	Mem115[ss:sp_98 - 0x0002:word16] = dx_108
	Mem117[ss:sp_98 - 0x0004:word16] = ax_112
	word16 dx_121
	word16 ax_122 = fn0800_45E2(wArg00, wArg02, wArg04, out dx_121)
	selector es_124 = Mem117[ss:bp_109 + 0x0006:selector]
	Mem125[es_124:si_110 + 0x0008:word16] = dx_121
	Mem126[es_124:si_110 + 0x0006:word16] = ax_122
	word16 ax_127 = Mem126[ss:bp_109 - 0x0006:word16]
	word16 v15_129 = Mem126[ss:bp_109 - 0x0004:word16] + Mem126[ss:bp_109 - 0x0008:word16]
	Mem130[ss:bp_109 - 0x0004:word16] = v15_129
	Mem134[ss:bp_109 - 0x0002:word16] = Mem130[ss:bp_109 - 0x0002:word16] + ax_127 + (v15_129 <u 0x0000)
	sp_12 = sp_98 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45BA:
	si_110 = si_110 + 0x000C
	di_111 = di_111 + 0x0001
	branch di_111 <u Mem0[ss:bp_109 + 0x0008:word16] l0800_457D
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45C3:
	Mem55[ss:bp_109 - 0x000A:word16] = Mem0[ss:bp_109 - 0x000A:word16] + 0x0001
	word16 ax_56 = Mem55[ss:bp_109 - 0x0006:word16]
	word16 dx_62 = __rcr(Mem55[ss:bp_109 - 0x0008:word16], 0x01, cond(ax_56 >>u 0x0001))
	Mem63[ss:bp_109 - 0x0006:word16] = ax_56 >>u 0x0001
	Mem64[ss:bp_109 - 0x0008:word16] = dx_62
	Mem66[ss:bp_109 - 0x000A:word16] = Mem64[ss:bp_109 - 0x000A:word16] + 0x0001
	word16 ax_67 = Mem66[ss:bp_109 - 0x0006:word16]
	word16 dx_73 = __rcr(Mem66[ss:bp_109 - 0x0008:word16], 0x01, cond(ax_67 >>u 0x0001))
	Mem75[ss:bp_109 - 0x0006:word16] = ax_67 >>u 0x0001
	Mem76[ss:bp_109 - 0x0008:word16] = dx_73
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45DC:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4550_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_45E2_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_45E2:
	word16 bx_10 = wArg06
	word16 wLoc04_11 = 0x0000
	word16 wLoc06_12 = 0x0000
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_462A:
	bx_10 = bx_10 - 0x0001
	branch bx_10 != 0x0000 l0800_45F7
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_45F7:
	word16 dx_37 = wLoc06_12 << 0x0001
	word16 ax_41 = __rcl(wLoc04_11, 0x01, cond(dx_37))
	wLoc04_11 = ax_41
	wLoc06_12 = dx_37
	branch (wArg02 & 0x0001) == 0x0000 l0800_461A
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4612:
	wLoc06_12 = dx_37 | 0x0001
	wLoc04_11 = ax_41
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_461A:
	word16 ax_55 = wArg04 >>u 0x0001
	wArg04 = ax_55
	wArg02 = __rcr(wArg02, 0x01, cond(ax_55))
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4631:
	*dxOut = wLoc04_11
	return wLoc06_12
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_45E2_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_463B(word16 bp, selector ds, word16 wArg00, word16 wArg02, selector psegArg04, word16 wArg06, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp sp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_463B_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_463B:
	word16 wLoc0C_103 = 0xFFFF
	word16 wLoc0E_104 = 0xFFFF
	word16 wLoc08_105 = 0xFFFF
	word16 wLoc0A_106 = 0xFFFF
	word16 cx_107 = 0x0000
	word16 si_109 = wArg02 + 0x0002
	branch 0x0000 >=u wArg06 l0800_46D5
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4661:
	word16 ax_112 = Mem0[psegArg04:si_109 + 0x0000:word16]
	word16 dx_113 = Mem0[psegArg04:si_109:word16]
	branch (dx_113 | ax_112) == 0x0000 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4675:
	branch ax_112 >u wLoc08_105 l0800_46AB
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4680:
	branch ax_112 <u wLoc08_105 l0800_4687
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4682:
	branch dx_113 >=u wLoc0A_106 l0800_46AB
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46AB:
	branch ax_112 >u wLoc0C_103 l0800_46CD
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B6:
	branch ax_112 <u wLoc0C_103 l0800_46BD
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B8:
	branch dx_113 >=u wLoc0E_104 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46BD:
	Mem153[ds:0x4658:word16] = cx_107
	wLoc0C_103 = ax_112
	wLoc0E_104 = dx_113
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4687:
	Mem164[ds:0x4658:word16] = Mem0[ds:0x465A:word16]
	Mem169[ds:0x465A:word16] = cx_107
	wLoc0C_103 = wLoc08_105
	wLoc0E_104 = wLoc0A_106
	wLoc08_105 = ax_112
	wLoc0A_106 = dx_113
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46CD:
	si_109 = si_109 + 0x000C
	cx_107 = cx_107 + 0x0001
	branch cx_107 <u wArg06 l0800_4661
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46D5:
	branch wLoc08_105 != 0xFFFF l0800_46E1
	branch wLoc08_105 != 0xFFFF l0800_46E1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000A(0) Local -000C(0) Local -000E(0)

l0800_46DB:
	branch wLoc0A_106 == 0xFFFF l0800_46ED
	branch wLoc0A_106 == 0xFFFF l0800_46ED
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(0) Local -000E(0)

l0800_46E1:
	branch wLoc0C_103 != 0xFFFF l0800_46F5
	branch wLoc0C_103 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0)

l0800_46E7:
	branch wLoc0E_104 != 0xFFFF l0800_46F5
	branch wLoc0E_104 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_46F5:
	*bpOut = bp
	return 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_46ED:
	return 0x0000
	*bpOut = Mem0[ss:bp:word16]
	return 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_463B_exit:
// DataOut: ax bp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_46FE(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_46FE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_46FE:
	branch Mem0[ds:0x2A05:word16] >u 0x0000 l0800_471F
// DataOut: bp ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_470D:
	branch Mem0[ds:0x2A05:word16] <u 0x0000 l0800_4716
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_470F:
	branch Mem0[ds:0x2A03:word16] >=u 0x002A l0800_471F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_471F:
	selector ds_61
	fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc30, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], 0x0000, out ds_61)
	Mem66[ss:fp - 0x0028:word16] = Mem0[ds_61:0x29E5:word16]
	Mem69[ss:fp - 0x002A:word16] = Mem66[ds_61:0x29E3:word16]
	word16 di_72
	selector ds_73
	word16 ax_74 = fn0800_3FAD(fp - 0x0002, ds_61, wArg00, wArg02, out di_72, out ds_73)
	branch 0x0000 <u Mem69[ds_73:0x2A05:word16] l0800_4761
// DataOut: ax bp di ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4750:
	branch 0x0000 >u Mem69[ds_73:0x2A05:word16] l0800_4758
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4752:
	branch ax_74 + 0x0024 <=u Mem69[ds_73:0x2A03:word16] l0800_4761
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4761:
	Mem91[ss:fp - 0x0028:word16] = 0x0000
	Mem98[ss:fp - 0x002A:word16] = 0x0000
	Mem100[ss:fp - 0x002C:word16] = ax_74 + 0x0020
	Mem102[ss:fp - 0x002E:word16] = Mem100[ds_73:0x29E5:word16]
	Mem104[ss:fp - 0x0030:word16] = Mem102[ds_73:0x29E3:word16]
	selector ds_107
	word16 ax_108 = fn0800_ACB3(fp - 0x0002, ds_73, ptrArg00, wArg02, wArg08, out ds_107)
	Mem112[ss:fp - 0x0028:word16] = Mem104[ds_107:0x29E5:word16]
	Mem114[ss:fp - 0x002A:word16] = Mem112[ds_107:0x29E3:word16]
	word16 di_115
	selector ds_116
	word16 dx_121
	word16 ax_122 = fn0800_8CAA(ax_108, 0x08, fn0800_3F58(fp - 0x0002, ds_107, wArg00, wArg02, out di_115, out ds_116), bp, out dx_121)
	branch dx_121 != 0x0052 l0800_4798
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4793:
	branch ax_122 == 0x4E43 l0800_47A1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47A1:
	Mem140[ss:fp - 0x0028:word16] = Mem114[ds_116:0x29E5:word16]
	Mem142[ss:fp - 0x002A:word16] = Mem140[ds_116:0x29E3:word16]
	word16 si_143
	word16 ax_144 = fn0800_AD2F(ds_116, ptrArg00, wArg02, out si_143)
	Mem146[ss:fp - 0x0008:word16] = dx_121
	Mem147[ss:fp - 0x000A:word16] = ax_144
	Mem152[ss:fp - 0x0028:word16] = 0x0000
	Mem155[ss:fp - 0x002A:word16] = 0x0000
	Mem157[ss:fp - 0x002C:word16] = 0x0002
	Mem159[ss:fp - 0x002E:word16] = Mem157[ds_116:0x29E5:word16]
	Mem161[ss:fp - 0x0030:word16] = Mem159[ds_116:0x29E3:word16]
	selector ds_162
	fn0800_ACB3(fp - 0x0002, ds_116, ptrArg00, wArg02, wArg08, out ds_162)
	Mem167[ss:fp - 0x0028:word16] = Mem161[ds_162:0x29E5:word16]
	Mem169[ss:fp - 0x002A:word16] = Mem167[ds_162:0x29E3:word16]
	word16 di_170
	selector ds_171
	fn0800_3FAD(fp - 0x0002, ds_162, wArg00, wArg02, out di_170, out ds_171)
	Mem177[ss:fp - 0x0028:word16] = Mem169[ds_171:0x29E5:word16]
	Mem179[ss:fp - 0x002A:word16] = Mem177[ds_171:0x29E3:word16]
	word16 di_180
	selector ds_181
	Mem184[ss:fp - 0x000C:word16] = fn0800_3FAD(fp - 0x0002, ds_171, wArg00, wArg02, out di_180, out ds_181)
	branch di_180 == 0x0000 l0800_47F3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47F0:
	Mem813[ss:fp - 0x000C:word16] = Mem184[ss:fp - 0x000C:word16] - 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47F3:
	word16 dx_194
	word16 ax_196 = fn0800_8C69(Mem184[ss:fp - 0x000C:word16], 0x09, 0x0000, bp, out dx_194) + di_180
	Mem200[ss:fp - 0x0004:word16] = dx_194 + (ax_196 <u 0x0000)
	Mem201[ss:fp - 0x0006:word16] = ax_196
	Mem206[ss:fp - 0x0028:word16] = 0x0000
	Mem209[ss:fp - 0x002A:word16] = 0x0000
	Mem211[ss:fp - 0x002C:word16] = 0x0016
	Mem213[ss:fp - 0x002E:word16] = Mem211[ds_181:0x29E5:word16]
	Mem215[ss:fp - 0x0030:word16] = Mem213[ds_181:0x29E3:word16]
	selector ds_216
	fn0800_ACB3(fp - 0x0002, ds_181, ptrArg00, wArg02, wArg08, out ds_216)
	Mem221[ss:fp - 0x0028:word16] = Mem215[ds_216:0x29E5:word16]
	Mem223[ss:fp - 0x002A:word16] = Mem221[ds_216:0x29E3:word16]
	word16 di_224
	selector ds_225
	fn0800_3FAD(fp - 0x0002, ds_216, wArg00, wArg02, out di_224, out ds_225)
	Mem230[ss:fp - 0x0028:word16] = Mem223[ds_225:0x29E5:word16]
	Mem232[ss:fp - 0x002A:word16] = Mem230[ds_225:0x29E3:word16]
	word16 di_233
	selector ds_234
	Mem238[ss:fp - 0x001E:word16] = fn0800_3FAD(fp - 0x0002, ds_225, wArg00, wArg02, out di_233, out ds_234)
	Mem240[ss:fp - 0x0028:word16] = Mem238[ds_234:0x29E5:word16]
	Mem242[ss:fp - 0x002A:word16] = Mem240[ds_234:0x29E3:word16]
	word16 di_243
	selector ds_244
	Mem248[ss:fp - 0x0020:word16] = fn0800_3FAD(fp - 0x0002, ds_234, wArg00, wArg02, out di_243, out ds_244)
	Mem250[ss:fp - 0x0028:word16] = Mem248[ds_244:0x29E5:word16]
	Mem252[ss:fp - 0x002A:word16] = Mem250[ds_244:0x29E3:word16]
	word16 di_253
	selector ds_254
	Mem258[ss:fp - 0x0012:word16] = fn0800_3FAD(fp - 0x0002, ds_244, wArg00, wArg02, out di_253, out ds_254)
	Mem260[ss:fp - 0x0028:word16] = Mem258[ds_254:0x29E5:word16]
	Mem262[ss:fp - 0x002A:word16] = Mem260[ds_254:0x29E3:word16]
	word16 di_263
	selector ds_264
	Mem268[ss:fp - 0x0014:word16] = fn0800_3FAD(fp - 0x0002, ds_254, wArg00, wArg02, out di_263, out ds_264)
	Mem270[ss:fp - 0x0028:word16] = Mem268[ds_264:0x29E5:word16]
	Mem272[ss:fp - 0x002A:word16] = Mem270[ds_264:0x29E3:word16]
	word16 di_273
	selector ds_274
	Mem278[ss:fp - 0x001A:word16] = fn0800_3FAD(fp - 0x0002, ds_264, wArg00, wArg02, out di_273, out ds_274)
	Mem280[ss:fp - 0x0028:word16] = Mem278[ds_274:0x29E5:word16]
	Mem282[ss:fp - 0x002A:word16] = Mem280[ds_274:0x29E3:word16]
	word16 di_283
	selector ds_284
	Mem288[ss:fp - 0x001C:word16] = fn0800_3FAD(fp - 0x0002, ds_274, wArg00, wArg02, out di_283, out ds_284)
	Mem290[ss:fp - 0x0028:word16] = Mem288[ds_284:0x29E5:word16]
	Mem292[ss:fp - 0x002A:word16] = Mem290[ds_284:0x29E3:word16]
	word16 di_293
	selector ds_294
	Mem298[ss:fp - 0x0018:word16] = fn0800_3FAD(fp - 0x0002, ds_284, wArg00, wArg02, out di_293, out ds_294)
	Mem300[ss:fp - 0x0028:word16] = Mem298[ds_294:0x29E5:word16]
	Mem302[ss:fp - 0x002A:word16] = Mem300[ds_294:0x29E3:word16]
	word16 di_303
	selector ds_304
	Mem308[ss:fp - 0x0016:word16] = fn0800_3FAD(fp - 0x0002, ds_294, wArg00, wArg02, out di_303, out ds_304)
	Mem310[ss:fp - 0x0028:word16] = Mem308[ds_304:0x29E1:word16]
	Mem312[ss:fp - 0x002A:word16] = Mem310[ds_304:0x29DF:word16]
	Mem315[ss:fp - 0x002C:word16] = 0x4D5A
	selector ds_317 = fn0800_401E(fp - 0x0002, ds_304, wArg00, wArg02, wArg04)
	Mem320[ss:fp - 0x0028:word16] = Mem315[ds_317:0x29E1:word16]
	Mem322[ss:fp - 0x002A:word16] = Mem320[ds_317:0x29DF:word16]
	Mem327[ss:fp - 0x002C:word16] = 0x0000
	Mem329[ss:fp - 0x002E:word16] = 0x0000
	selector ds_331 = fn0800_409C(fp - 0x0002, ds_317, wArg02, wArg04, wArg06)
	Mem334[ss:fp - 0x0028:word16] = Mem329[ds_331:0x29E1:word16]
	Mem336[ss:fp - 0x002A:word16] = Mem334[ds_331:0x29DF:word16]
	Mem341[ss:fp - 0x002C:word16] = 0x0000
	Mem343[ss:fp - 0x002E:word16] = 0x0000
	selector ds_344 = fn0800_409C(fp - 0x0002, ds_331, wArg02, wArg04, wArg06)
	Mem348[ss:fp - 0x0028:word16] = Mem343[ds_344:0x29E1:word16]
	Mem350[ss:fp - 0x002A:word16] = Mem348[ds_344:0x29DF:word16]
	Mem352[ss:fp - 0x002C:word16] = Mem350[ss:fp - 0x0012:word16]
	selector ds_354
	fn0800_40BF(fp - 0x0002, ds_344, bArg00, wArg02, wArg04, out ds_354)
	Mem359[ss:fp - 0x0028:word16] = Mem352[ds_354:0x29E1:word16]
	Mem361[ss:fp - 0x002A:word16] = Mem359[ds_354:0x29DF:word16]
	Mem363[ss:fp - 0x002C:word16] = Mem361[ss:fp - 0x0014:word16]
	selector ds_364
	fn0800_40BF(fp - 0x0002, ds_354, bArg00, wArg02, wArg04, out ds_364)
	Mem369[ss:fp - 0x0028:word16] = Mem363[ds_364:0x29E1:word16]
	Mem371[ss:fp - 0x002A:word16] = Mem369[ds_364:0x29DF:word16]
	Mem373[ss:fp - 0x002C:word16] = Mem371[ss:fp - 0x0016:word16]
	selector ds_374
	fn0800_40BF(fp - 0x0002, ds_364, bArg00, wArg02, wArg04, out ds_374)
	Mem379[ss:fp - 0x0028:word16] = Mem373[ds_374:0x29E1:word16]
	Mem381[ss:fp - 0x002A:word16] = Mem379[ds_374:0x29DF:word16]
	Mem383[ss:fp - 0x002C:word16] = Mem381[ss:fp - 0x0018:word16]
	selector ds_384
	fn0800_40BF(fp - 0x0002, ds_374, bArg00, wArg02, wArg04, out ds_384)
	Mem388[ss:fp - 0x0028:word16] = Mem383[ds_384:0x29E1:word16]
	Mem390[ss:fp - 0x002A:word16] = Mem388[ds_384:0x29DF:word16]
	Mem395[ss:fp - 0x002C:word16] = 0x0000
	selector ds_396 = fn0800_401E(fp - 0x0002, ds_384, wArg00, wArg02, wArg04)
	Mem400[ss:fp - 0x0028:word16] = Mem395[ds_396:0x29E1:word16]
	Mem402[ss:fp - 0x002A:word16] = Mem400[ds_396:0x29DF:word16]
	Mem404[ss:fp - 0x002C:word16] = Mem402[ss:fp - 0x001A:word16]
	selector ds_405
	fn0800_40BF(fp - 0x0002, ds_396, bArg00, wArg02, wArg04, out ds_405)
	Mem410[ss:fp - 0x0028:word16] = Mem404[ds_405:0x29E1:word16]
	Mem412[ss:fp - 0x002A:word16] = Mem410[ds_405:0x29DF:word16]
	Mem414[ss:fp - 0x002C:word16] = Mem412[ss:fp - 0x001C:word16]
	selector ds_415
	fn0800_40BF(fp - 0x0002, ds_405, bArg00, wArg02, wArg04, out ds_415)
	Mem420[ss:fp - 0x0028:word16] = Mem414[ds_415:0x29E1:word16]
	Mem422[ss:fp - 0x002A:word16] = Mem420[ds_415:0x29DF:word16]
	Mem425[ss:fp - 0x002C:word16] = 0x001E
	selector ds_426
	fn0800_40BF(fp - 0x0002, ds_415, bArg00, wArg02, wArg04, out ds_426)
	Mem431[ss:fp - 0x0028:word16] = Mem425[ds_426:0x29E1:word16]
	Mem433[ss:fp - 0x002A:word16] = Mem431[ds_426:0x29DF:word16]
	Mem435[ss:fp - 0x002C:word16] = Mem433[ss:fp - 0x0020:word16]
	selector ds_436
	fn0800_40BF(fp - 0x0002, ds_426, bArg00, wArg02, wArg04, out ds_436)
	Mem440[ss:fp - 0x0028:word16] = Mem435[ds_436:0x29E1:word16]
	Mem442[ss:fp - 0x002A:word16] = Mem440[ds_436:0x29DF:word16]
	Mem447[ss:fp - 0x002C:word16] = 0x0000
	selector ds_448 = fn0800_401E(fp - 0x0002, ds_436, wArg00, wArg02, wArg04)
	Mem452[ss:fp - 0x0028:word16] = 0x0000
	word16 ax_453 = Mem452[ss:fp - 0x001E:word16]
	Mem459[ss:fp - 0x002A:word16] = 0x0000
	Mem461[ss:fp - 0x002C:word16] = ax_453 + 0x0020
	Mem463[ss:fp - 0x002E:word16] = Mem461[ds_448:0x29E5:word16]
	Mem465[ss:fp - 0x0030:word16] = Mem463[ds_448:0x29E3:word16]
	selector ds_466
	fn0800_ACB3(fp - 0x0002, ds_448, ptrArg00, wArg02, wArg08, out ds_466)
	Mem470[ss:fp - 0x000E:word16] = 0x0000
	word16 sp_468 = fp - 0x0026
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49B5:
	word16 sp_475 = sp_468 - 0x0002
	Mem476[ss:sp_475:word16] = Mem470[ds_466:0x29E5:word16]
	Mem478[ss:sp_475 - 0x0002:word16] = Mem476[ds_466:0x29E3:word16]
	word16 di_479
	word16 ax_484 = DPB(fn0800_3DCF(ds_466, ptrArg00, wArg02, out di_479, out ds_466), 0x00, 8)
	sp_468 = sp_475 + 0x0002
	word16 di_486 = ax_484
	branch ax_484 == 0x0000 l0800_4A22
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49CB:
	Mem752[ss:sp_475:word16] = Mem478[ds_466:0x29E5:word16]
	Mem754[ss:sp_475 - 0x0002:word16] = Mem752[ds_466:0x29E3:word16]
	Mem759[ss:fp - 0x0022:word16] = fn0800_3FAD(fp - 0x0002, ds_466, wArg00, wArg02, out di_486, out ds_466)
	Mem763[ss:fp - 0x000C:word16] = di_486
	sp_468 = sp_475 + 0x0002
	word16 si_760 = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:0x00 cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A15:
	word16 ax_770 = Mem763[ss:fp - 0x000C:word16]
	Mem772[ss:fp - 0x000C:word16] = Mem763[ss:fp - 0x000C:word16] - 0x0001
	branch ax_770 != 0x0000 l0800_49E3
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49E3:
	word16 sp_780 = sp_468 - 0x0002
	Mem781[ss:sp_780:word16] = Mem772[ds_466:0x29E5:word16]
	Mem783[ss:sp_780 - 0x0002:word16] = Mem781[ds_466:0x29E3:word16]
	word16 di_784
	selector ds_785
	si_760 = si_760 + DPB(fn0800_3DCF(ds_466, ptrArg00, wArg02, out di_784, out ds_785), 0x00, 8)
	Mem793[ss:sp_780:word16] = Mem783[ds_785:0x29E1:word16]
	Mem795[ss:sp_780 - 0x0002:word16] = Mem793[ds_785:0x29DF:word16]
	Mem797[ss:sp_780 - 0x0004:word16] = si_760
	selector ds_798
	fn0800_40BF(fp - 0x0002, ds_785, bArg00, wArg02, wArg04, out ds_798)
	Mem803[ss:sp_780:word16] = Mem797[ds_798:0x29E1:word16]
	Mem805[ss:sp_780 - 0x0002:word16] = Mem803[ds_798:0x29DF:word16]
	Mem807[ss:sp_780 - 0x0004:word16] = Mem805[ss:fp - 0x0022:word16]
	di_486 = fn0800_40BF(fp - 0x0002, ds_798, bArg00, wArg02, wArg04, out ds_466)
	sp_468 = sp_780 + 0x0002
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A1F:
	Mem778[ss:fp - 0x000E:word16] = Mem772[ss:fp - 0x000E:word16] + di_486
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A22:
	branch di_486 != 0x0000 l0800_49B5
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A26:
	word16 sp_524
	word16 di_522
	word16 dx_519
	word16 sp_501 = sp_468 - 0x0002
	Mem502[ss:sp_501:word16] = Mem478[ds_466:0x29E1:word16]
	Mem504[ss:sp_501 - 0x0002:word16] = Mem502[ds_466:0x29DF:word16]
	word16 si_505
	word16 ax_506 = fn0800_AD2F(ds_466, ptrArg00, wArg02, out si_505)
	branch false l0800_4A56
// DataOut: ax ds sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A38:
	branch false l0800_4A3F
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A3A:
	branch ax_506 >=u 0x0200 l0800_4A56
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A56:
	Mem725[ss:sp_501:word16] = Mem504[ds_466:0x29E1:word16]
	Mem727[ss:sp_501 - 0x0002:word16] = Mem725[ds_466:0x29DF:word16]
	word16 si_728
	word16 dx_732 = 0x0010 - fn0800_AD2F(ds_466, ptrArg00, wArg02, out si_728)
	sp_524 = sp_501 + 0x0002
	dx_519 = dx_732 & 0x000F
	di_522 = dx_732 & 0x000F
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A3F:
	Mem739[ss:sp_501:word16] = Mem504[ds_466:0x29E1:word16]
	Mem741[ss:sp_501 - 0x0002:word16] = Mem739[ds_466:0x29DF:word16]
	word16 si_742
	dx_519 = 0x0200 - fn0800_AD2F(ds_466, ptrArg00, wArg02, out si_742)
	sp_524 = sp_501 + 0x0002
	di_522 = dx_519
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A81:
	branch di_522 != 0x0000 l0800_4A70
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A70:
	word16 sp_710 = sp_524 - 0x0002
	Mem711[ss:sp_710:word16] = Mem504[ds_466:0x29E1:word16]
	Mem713[ss:sp_710 - 0x0002:word16] = Mem711[ds_466:0x29DF:word16]
	Mem717[ss:sp_710 - 0x0004:word16] = DPB(di_522, 0x00, 0)
	di_522 = fn0800_4047(ds_466, bArg00, ptrArg02, wArg04, out ds_466)
	sp_524 = sp_710 + 0x0002
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A88:
	word16 sp_531 = sp_524 - 0x0002
	Mem532[ss:sp_531:word16] = Mem504[ds_466:0x29E1:word16]
	Mem534[ss:sp_531 - 0x0002:word16] = Mem532[ds_466:0x29DF:word16]
	word16 si_535
	word16 dx_540
	Mem542[ss:fp - 0x0010:word16] = fn0800_8C8A(fn0800_AD2F(ds_466, ptrArg00, wArg02, out si_535), 0x04, dx_519, bp, out dx_540)
	Mem547[ss:sp_531:word16] = 0x0000
	Mem549[ss:sp_531 - 0x0002:word16] = Mem547[ss:fp - 0x0008:word16]
	Mem551[ss:sp_531 - 0x0004:word16] = Mem549[ss:fp - 0x000A:word16]
	Mem553[ss:sp_531 - 0x0006:word16] = Mem551[ds_466:0x29E5:word16]
	Mem555[ss:sp_531 - 0x0008:word16] = Mem553[ds_466:0x29E3:word16]
	selector ds_556
	fn0800_ACB3(fp - 0x0002, ds_466, ptrArg00, wArg02, wArg08, out ds_556)
	selector ds_560
	word16 ax_561 = fn0800_5374(fp - 0x0002, ds_556, out ds_560)
	branch ax_561 == 0x0000 l0800_4AC4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4AC4:
	Mem574[ss:sp_531:word16] = Mem555[ds_560:0x29E1:word16]
	Mem576[ss:sp_531 - 0x0002:word16] = Mem574[ds_560:0x29DF:word16]
	word16 si_577
	word16 ax_578 = fn0800_AD2F(ds_560, ptrArg00, wArg02, out si_577)
	Mem580[ss:fp - 0x0008:word16] = ax_561
	Mem581[ss:fp - 0x000A:word16] = ax_578
	Mem586[ss:sp_531:word16] = 0x0000
	Mem588[ss:sp_531 - 0x0002:word16] = Mem586[ss:fp - 0x0004:word16]
	Mem590[ss:sp_531 - 0x0004:word16] = Mem588[ss:fp - 0x0006:word16]
	Mem592[ss:sp_531 - 0x0006:word16] = Mem590[ds_560:0x29E5:word16]
	Mem594[ss:sp_531 - 0x0008:word16] = Mem592[ds_560:0x29E3:word16]
	selector ds_595
	fn0800_ACB3(fp - 0x0002, ds_560, ptrArg00, wArg02, wArg08, out ds_595)
	Mem600[ss:sp_531:word16] = Mem594[ds_595:0x29E5:word16]
	Mem602[ss:sp_531 - 0x0002:word16] = Mem600[ds_595:0x29E3:word16]
	word16 si_603
	selector ds_604
	word16 ax_607 = fn0800_4194(fp - 0x0002, ds_595, wArg00, wArg02, out si_603, out ds_604) - Mem602[ss:fp - 0x0006:word16]
	Mem613[ss:sp_531:word16] = ax_561 - Mem602[ss:fp - 0x0004:word16] - (ax_607 <u 0x0000)
	Mem615[ss:sp_531 - 0x0002:word16] = ax_607
	Mem617[ss:sp_531 - 0x0004:word16] = Mem615[ds_604:0x29E1:word16]
	Mem619[ss:sp_531 - 0x0006:word16] = Mem617[ds_604:0x29DF:word16]
	Mem621[ss:sp_531 - 0x0008:word16] = Mem619[ds_604:0x29E5:word16]
	Mem623[ss:sp_531 - 0x000A:word16] = Mem621[ds_604:0x29E3:word16]
	selector ds_625 = fn0800_3B0A(fp - 0x0002, ds_604, wArg08, wArg0A)
	word16 di_627 = Mem623[ss:fp - 0x000A:word16]
	word16 dx_634
	Mem636[ss:fp - 0x000C:word16] = fn0800_8CAA(Mem623[ss:fp - 0x000A:word16], 0x09, Mem623[ss:fp - 0x0008:word16], bp, out dx_634)
	branch (di_627 & 0x01FF) == 0x0000 l0800_4B37
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4B34:
	Mem708[ss:fp - 0x000C:word16] = Mem636[ss:fp - 0x000C:word16] + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4B37:
	Mem645[ss:sp_531:word16] = 0x0000
	Mem648[ss:sp_531 - 0x0002:word16] = 0x0000
	Mem650[ss:sp_531 - 0x0004:word16] = 0x0002
	Mem652[ss:sp_531 - 0x0006:word16] = Mem650[ds_625:0x29E1:word16]
	Mem654[ss:sp_531 - 0x0008:word16] = Mem652[ds_625:0x29DF:word16]
	selector ds_655
	fn0800_ACB3(fp - 0x0002, ds_625, ptrArg00, wArg02, wArg08, out ds_655)
	Mem660[ss:sp_531:word16] = Mem654[ds_655:0x29E1:word16]
	Mem662[ss:sp_531 - 0x0002:word16] = Mem660[ds_655:0x29DF:word16]
	Mem664[ss:sp_531 - 0x0004:word16] = di_627 & 0x01FF
	selector ds_665
	fn0800_40BF(fp - 0x0002, ds_655, bArg00, wArg02, wArg04, out ds_665)
	Mem670[ss:sp_531:word16] = Mem664[ds_665:0x29E1:word16]
	Mem672[ss:sp_531 - 0x0002:word16] = Mem670[ds_665:0x29DF:word16]
	Mem674[ss:sp_531 - 0x0004:word16] = Mem672[ss:fp - 0x000C:word16]
	selector ds_675
	fn0800_40BF(fp - 0x0002, ds_665, bArg00, wArg02, wArg04, out ds_675)
	Mem680[ss:sp_531:word16] = Mem674[ds_675:0x29E1:word16]
	Mem682[ss:sp_531 - 0x0002:word16] = Mem680[ds_675:0x29DF:word16]
	Mem684[ss:sp_531 - 0x0004:word16] = Mem682[ss:fp - 0x000E:word16]
	selector ds_685
	fn0800_40BF(fp - 0x0002, ds_675, bArg00, wArg02, wArg04, out ds_685)
	Mem690[ss:sp_531:word16] = Mem684[ds_685:0x29E1:word16]
	Mem692[ss:sp_531 - 0x0002:word16] = Mem690[ds_685:0x29DF:word16]
	Mem694[ss:sp_531 - 0x0004:word16] = Mem692[ss:fp - 0x0010:word16]
	selector ds_695
	fn0800_40BF(fp - 0x0002, ds_685, bArg00, wArg02, wArg04, out ds_695)
	return ds_695
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4ABE:
	return ds_560
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4798:
	return ds_116
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4758:
	return ds_73
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4716:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp

fn0800_46FE_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4B97(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4B97_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4B97:
	selector ds_10
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_10) != 0x0000 l0800_4BAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4BAD:
	selector ds_21
	fn0800_5374(bp, ds_10, out ds_21)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BA9:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4B97_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_4BB1(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4BB1_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4BB1:
	selector ds_10
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_10) != 0x0000 l0800_4BC7
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4BC7:
	Mem34[ss:fp - 0x0002:word16] = 0x0001
	Mem39[ss:fp - 0x0004:word16] = 0xFFFF
	Mem41[ss:fp - 0x0006:word16] = 0xFFEE
	Mem43[ss:fp - 0x0008:word16] = Mem41[ds_10:0x29E5:word16]
	Mem45[ss:fp - 0x000A:word16] = Mem43[ds_10:0x29E3:word16]
	selector ds_49
	fn0800_ACB3(bp, ds_10, ptrArg00, wArg02, wArg08, out ds_49)
	Mem54[ss:fp - 0x0002:word16] = Mem45[ds_49:0x29E1:word16]
	Mem56[ss:fp - 0x0004:word16] = Mem54[ds_49:0x29DF:word16]
	Mem59[ss:fp - 0x0006:word16] = 0x601A
	selector ds_62 = fn0800_401E(bp, ds_49, wArg00, wArg02, wArg04)
	Mem69[ss:fp - 0x0002:word16] = 0x0000
	Mem71[ss:fp - 0x0004:word16] = 0x0010
	Mem73[ss:fp - 0x0006:word16] = Mem71[ds_62:0x29E1:word16]
	Mem75[ss:fp - 0x0008:word16] = Mem73[ds_62:0x29DF:word16]
	Mem77[ss:fp - 0x000A:word16] = Mem75[ds_62:0x29E5:word16]
	Mem79[ss:fp - 0x000C:word16] = Mem77[ds_62:0x29E3:word16]
	selector ds_81 = fn0800_3B0A(bp, ds_62, wArg08, wArg0A)
	Mem84[ss:fp - 0x0002:word16] = Mem79[ds_81:0x29E1:word16]
	Mem86[ss:fp - 0x0004:word16] = Mem84[ds_81:0x29DF:word16]
	Mem91[ss:fp - 0x0006:word16] = 0x0000
	Mem93[ss:fp - 0x0008:word16] = 0x0000
	selector ds_95 = fn0800_409C(bp, ds_81, wArg02, wArg04, wArg06)
	Mem98[ss:fp - 0x0002:word16] = Mem93[ds_95:0x29E1:word16]
	Mem100[ss:fp - 0x0004:word16] = Mem98[ds_95:0x29DF:word16]
	Mem105[ss:fp - 0x0006:word16] = 0x0000
	Mem107[ss:fp - 0x0008:word16] = 0x0000
	selector ds_108 = fn0800_409C(bp, ds_95, wArg02, wArg04, wArg06)
	Mem112[ss:fp - 0x0002:word16] = Mem107[ds_108:0x29E1:word16]
	Mem114[ss:fp - 0x0004:word16] = Mem112[ds_108:0x29DF:word16]
	Mem116[ss:fp - 0x0006:word16] = Mem114[ds_108:0x29E5:word16]
	Mem118[ss:fp - 0x0008:word16] = Mem116[ds_108:0x29E3:word16]
	word16 si_119
	word16 di_120
	selector ds_121
	Mem126[ss:fp - 0x0006:word16] = fn0800_3E27(bp, ds_108, wArg00, wArg02, out si_119, out di_120, out ds_121)
	selector ds_130
	fn0800_5374(bp, fn0800_401E(bp, ds_121, wArg00, wArg02, wArg04), out ds_130)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BC3:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4BB1_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_4C55(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
fn0800_4C55_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4C55:
	word16 wLoc1C_12 = Mem0[ds:0x29E5:word16]
	word16 wLoc1E_14 = Mem0[ds:0x29E3:word16]
	selector ds_15
	branch fn0800_3E5D(fp - 0x0002, ds, wLoc1E_14, wLoc1C_12, out ds_15) != 0x0000 l0800_4C72
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4C6D:
	branch ax == 0x03F3 l0800_4C79
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4C79:
	Mem55[ss:fp - 0x001C:word16] = Mem0[ds_15:0x29E1:word16]
	Mem57[ss:fp - 0x001E:word16] = Mem55[ds_15:0x29DF:word16]
	Mem63[ss:fp - 0x0020:word16] = 0x0000
	Mem65[ss:fp - 0x0022:word16] = 0x03F3
	word16 ax_117 = 0x0000
	selector ds_102 = fn0800_409C(fp - 0x0002, ds_15, wArg02, wArg04, wArg06)
	word16 sp_100 = fp - 0x001A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4C8E:
	word16 sp_78 = sp_100 - 0x0002
	Mem79[ss:sp_78:word16] = Mem65[ds_102:0x29E5:word16]
	Mem81[ss:sp_78 - 0x0002:word16] = Mem79[ds_102:0x29E3:word16]
	selector ds_83
	word16 dx_84 = fn0800_3E5D(fp - 0x0002, ds_102, wArg00, wArg02, out ds_83)
	Mem87[ss:fp - 0x0008:word16] = dx_84
	Mem88[ss:fp - 0x000A:word16] = ax_117
	Mem89[ss:fp - 0x0004:word16] = dx_84
	Mem90[ss:fp - 0x0006:word16] = ax_117
	Mem92[ss:sp_78:word16] = Mem90[ds_83:0x29E1:word16]
	Mem94[ss:sp_78 - 0x0002:word16] = Mem92[ds_83:0x29DF:word16]
	Mem96[ss:sp_78 - 0x0004:word16] = Mem94[ss:fp - 0x0004:word16]
	Mem98[ss:sp_78 - 0x0006:word16] = ax_117
	ds_102 = fn0800_409C(fp - 0x0002, ds_83, wArg02, wArg04, wArg06)
	sp_100 = sp_78 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CDA:
	word16 ax_104 = Mem98[ss:fp - 0x000A:word16]
	word16 dx_105 = Mem98[ss:fp - 0x0008:word16]
	word16 v12_106 = Mem98[ss:fp - 0x000A:word16] - 0x0001
	Mem107[ss:fp - 0x000A:word16] = v12_106
	Mem111[ss:fp - 0x0008:word16] = Mem107[ss:fp - 0x0008:word16] - (v12_106 <u 0x0000)
	word16 ax_112 = ax_104 | dx_105
	branch ax_112 != 0x0000 l0800_4CBC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CBC:
	word16 sp_426 = sp_100 - 0x0002
	Mem427[ss:sp_426:word16] = Mem111[ds_102:0x29E1:word16]
	Mem429[ss:sp_426 - 0x0002:word16] = Mem427[ds_102:0x29DF:word16]
	Mem431[ss:sp_426 - 0x0004:word16] = Mem429[ds_102:0x29E5:word16]
	Mem433[ss:sp_426 - 0x0006:word16] = Mem431[ds_102:0x29E3:word16]
	selector ds_434
	Mem439[ss:sp_426 - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds_102, wArg00, wArg02, out ds_434)
	Mem441[ss:sp_426 - 0x0006:word16] = ax_112
	ds_102 = fn0800_409C(fp - 0x0002, ds_434, wArg02, wArg04, wArg06)
	sp_100 = sp_426 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CEC:
	ax_117 = Mem111[ss:fp - 0x0006:word16] | Mem111[ss:fp - 0x0004:word16]
	branch ax_117 != 0x0000 l0800_4C8E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CF4:
	word16 sp_121 = sp_100 - 0x0002
	Mem122[ss:sp_121:word16] = Mem111[ds_102:0x29DF:word16]
	Mem124[ss:sp_121 - 0x0002:word16] = Mem122[ds_102:0x29E5:word16]
	Mem126[ss:sp_121 - 0x0004:word16] = Mem124[ds_102:0x29E3:word16]
	selector ds_127
	ui32 dx_ax_131 = SEQ(fn0800_3E5D(fp - 0x0002, ds_102, wArg00, wArg02, out ds_127), ax_117 - 0x0001)
	Mem138[ss:sp_121 - 0x0002:word16] = SLICE(dx_ax_131 - 0x00000001, word16, 16)
	word16 ax_135 = (word16) (dx_ax_131 - 0x00000001)
	Mem140[ss:sp_121 - 0x0004:word16] = ax_135
	selector ds_141 = fn0800_409C(fp - 0x0002, ds_127, wArg02, wArg04, wArg06)
	Mem145[ss:sp_121 + 0x0002:word16] = Mem140[ds_141:0x29E5:word16]
	Mem147[ss:sp_121:word16] = Mem145[ds_141:0x29E3:word16]
	selector ds_148
	Mem152[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_141, wArg00, wArg02, out ds_148)
	Mem153[ss:fp - 0x000E:word16] = ax_135
	Mem155[ss:sp_121 + 0x0002:word16] = Mem153[ds_148:0x29E5:word16]
	Mem157[ss:sp_121:word16] = Mem155[ds_148:0x29E3:word16]
	selector ds_158
	Mem161[ss:fp - 0x0010:word16] = fn0800_3E5D(fp - 0x0002, ds_148, wArg00, wArg02, out ds_158)
	Mem162[ss:fp - 0x0012:word16] = ax_135
	word16 dx_165 = Mem162[ss:fp - 0x0012:word16] - Mem162[ss:fp - 0x000E:word16]
	Mem170[ss:fp - 0x0014:word16] = Mem162[ss:fp - 0x0010:word16] - Mem162[ss:fp - 0x000C:word16] - (dx_165 <u 0x0000)
	Mem171[ss:fp - 0x0016:word16] = dx_165
	Mem173[ss:sp_121 + 0x0002:word16] = Mem171[ds_158:0x29E1:word16]
	Mem175[ss:sp_121:word16] = Mem173[ds_158:0x29DF:word16]
	Mem177[ss:sp_121 - 0x0002:word16] = Mem175[ss:fp - 0x000C:word16]
	Mem179[ss:sp_121 - 0x0004:word16] = Mem177[ss:fp - 0x000E:word16]
	selector ds_180 = fn0800_409C(fp - 0x0002, ds_158, wArg02, wArg04, wArg06)
	Mem183[ss:sp_121 + 0x0002:word16] = Mem179[ds_180:0x29E1:word16]
	Mem185[ss:sp_121:word16] = Mem183[ds_180:0x29DF:word16]
	ui32 ax_dx_189 = SEQ(Mem185[ss:fp - 0x0010:word16], Mem185[ss:fp - 0x0012:word16] - 0x0001)
	Mem196[ss:sp_121 - 0x0002:word16] = SLICE(ax_dx_189 - 0x00000001, word16, 16)
	word16 dx_193 = (word16) (ax_dx_189 - 0x00000001)
	Mem198[ss:sp_121 - 0x0004:word16] = dx_193
	selector ds_199 = fn0800_409C(fp - 0x0002, ds_180, wArg02, wArg04, wArg06)
	Mem203[ss:sp_121 + 0x0002:word16] = Mem198[ds_199:0x29E1:word16]
	Mem205[ss:sp_121:word16] = Mem203[ds_199:0x29DF:word16]
	word16 si_207
	word16 ax_208 = fn0800_AD2F(ds_199, ptrArg00, wArg02, out si_207)
	Mem210[ds_199:0x4E8E:word16] = dx_193
	Mem211[ds_199:0x4E8C:word16] = ax_208
	Mem214[ss:sp_121 + 0x0002:word16] = 0x0001
	Mem220[ss:sp_121:word16] = 0x0000
	Mem222[ss:sp_121 - 0x0002:word16] = 0x0004
	Mem224[ss:sp_121 - 0x0004:word16] = Mem222[ds_199:0x29E5:word16]
	Mem226[ss:sp_121 - 0x0006:word16] = Mem224[ds_199:0x29E3:word16]
	selector ds_228
	fn0800_ACB3(fp - 0x0002, ds_199, ptrArg00, wArg02, wArg08, out ds_228)
	word16 dx_233 = Mem226[ss:fp - 0x0016:word16]
	Mem234[ss:fp - 0x0004:word16] = Mem226[ss:fp - 0x0014:word16]
	Mem235[ss:fp - 0x0006:word16] = dx_233
	word16 sp_230 = sp_121 + 0x0004
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DE4:
	word16 ax_241 = Mem235[ss:fp - 0x0006:word16] | Mem235[ss:fp - 0x0004:word16]
	branch ax_241 != 0x0000 l0800_4DBE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DBE:
	word16 sp_401 = sp_230 - 0x0002
	Mem402[ss:sp_401:word16] = Mem235[ds_228:0x29E1:word16]
	Mem404[ss:sp_401 - 0x0002:word16] = Mem402[ds_228:0x29DF:word16]
	Mem406[ss:sp_401 - 0x0004:word16] = Mem404[ds_228:0x29E5:word16]
	Mem408[ss:sp_401 - 0x0006:word16] = Mem406[ds_228:0x29E3:word16]
	selector ds_409
	Mem414[ss:sp_401 - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds_228, wArg00, wArg02, out ds_409)
	Mem416[ss:sp_401 - 0x0006:word16] = ax_241
	ds_228 = fn0800_409C(fp - 0x0002, ds_409, wArg02, wArg04, wArg06)
	word16 v15_419 = Mem416[ss:fp - 0x0006:word16] - 0x0001
	Mem420[ss:fp - 0x0006:word16] = v15_419
	Mem424[ss:fp - 0x0004:word16] = Mem420[ss:fp - 0x0004:word16] - (v15_419 <u 0x0000)
	sp_230 = sp_401 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DEC:
	word16 sp_245 = sp_230 - 0x0002
	Mem246[ss:sp_245:word16] = 0x0001
	Mem252[ss:sp_245 - 0x0002:word16] = 0x0000
	Mem254[ss:sp_245 - 0x0004:word16] = 0x0004
	Mem256[ss:sp_245 - 0x0006:word16] = Mem254[ds_228:0x29E5:word16]
	Mem258[ss:sp_245 - 0x0008:word16] = Mem256[ds_228:0x29E3:word16]
	selector ds_259
	word16 ax_260 = fn0800_ACB3(fp - 0x0002, ds_228, ptrArg00, wArg02, wArg08, out ds_259)
	Mem264[ss:sp_245:word16] = Mem258[ds_259:0x29E5:word16]
	Mem266[ss:sp_245 - 0x0002:word16] = Mem264[ds_259:0x29E3:word16]
	selector ds_267
	ui32 dx_ax_271 = SEQ(fn0800_3E5D(fp - 0x0002, ds_259, wArg00, wArg02, out ds_267), ax_260 + 0x0001)
	Mem277[ss:fp - 0x0004:word16] = SLICE(dx_ax_271 + 0x00000001, word16, 16)
	Mem278[ss:fp - 0x0006:word16] = (word16) (dx_ax_271 + 0x00000001)
	Mem281[ss:sp_245:word16] = 0x0001
	word16 dx_285
	word16 ax_286 = fn0800_8C69(Mem281[ss:fp - 0x0006:word16], 0x02, Mem281[ss:fp - 0x0004:word16], bp, out dx_285)
	Mem288[ss:sp_245 - 0x0002:word16] = dx_285
	Mem290[ss:sp_245 - 0x0004:word16] = ax_286
	Mem292[ss:sp_245 - 0x0006:word16] = Mem290[ds_267:0x29E5:word16]
	Mem294[ss:sp_245 - 0x0008:word16] = Mem292[ds_267:0x29E3:word16]
	selector ds_295
	fn0800_ACB3(fp - 0x0002, ds_267, ptrArg00, wArg02, wArg08, out ds_295)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4EDE:
	Mem300[ss:sp_245:word16] = Mem294[ds_295:0x29E5:word16]
	Mem302[ss:sp_245 - 0x0002:word16] = Mem300[ds_295:0x29E3:word16]
	word16 si_303
	Mem308[ss:sp_245:word16] = fn0800_AD2F(ds_295, ptrArg00, wArg02, out si_303)
	Mem310[ss:sp_245 - 0x0002:word16] = dx_285
	Mem312[ss:sp_245 - 0x0004:word16] = Mem310[ds_295:0x29E5:word16]
	Mem314[ss:sp_245 - 0x0006:word16] = Mem312[ds_295:0x29E3:word16]
	word16 si_315
	selector ds_316
	word16 ax_317 = fn0800_4194(fp - 0x0002, ds_295, wArg00, wArg02, out si_315, out ds_316)
	word16 bx_319 = Mem314[ss:sp_245 - 0x0002:word16]
	word16 dx_325 = Mem314[ss:sp_245:word16]
	branch bx_319 >=u dx_285 l0800_4F05
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F05:
	branch bx_319 != dx_285 l0800_4F0E
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F07:
	branch dx_325 >=u ax_317 l0800_4F0E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F0E:
	return ds_316
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4F0B:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4E41:
	Mem330[ss:sp_245:word16] = Mem314[ds_316:0x29E5:word16]
	Mem332[ss:sp_245 - 0x0002:word16] = Mem330[ds_316:0x29E3:word16]
	selector ds_333
	Mem337[ss:fp - 0x0008:word16] = fn0800_3E5D(fp - 0x0002, ds_316, wArg00, wArg02, out ds_333)
	Mem338[ss:fp - 0x000A:word16] = ax_317
	Mem340[ss:sp_245:word16] = Mem338[ds_333:0x29E1:word16]
	Mem342[ss:sp_245 - 0x0002:word16] = Mem340[ds_333:0x29DF:word16]
	Mem344[ss:sp_245 - 0x0004:word16] = Mem342[ss:fp - 0x0008:word16]
	Mem346[ss:sp_245 - 0x0006:word16] = ax_317
	selector ds_347 = fn0800_409C(fp - 0x0002, ds_333, wArg02, wArg04, wArg06)
	word16 ax_349 = Mem346[ss:fp - 0x0008:word16]
	word16 dx_350 = Mem346[ss:fp - 0x000A:word16]
	Mem354[ss:fp - 0x001A:word16] = dx_350
	Mem355[ss:fp - 0x0018:word16] = ax_349 & 0x3FFF
	byte SZO_352 = cond(ax_349 & 0x3FFF)
	word16 cx_356 = 0x0004
	byte cl_357 = 0x04
	word16 bx_358 = 0x4F14
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E7C:
	branch Mem355[0x0800:bx_358:word16] != Mem355[ss:fp - 0x000A:word16] l0800_4E8D
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E84:
	word16 ax_375 = Mem355[0x0800:bx_358 + 0x0008:word16]
	byte SCZO_376 = cond(ax_375 - Mem355[ss:fp - 0x0018:word16])
	branch ax_375 == Mem355[ss:fp - 0x0018:word16] l0800_4E94
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E94:
	selector ds_382
	call Mem355[0x0800:bx_358 + 0x0010:word16] (retsize: 4; depth: 4)
		uses: ax_375,bp,bx_359,cl_361,cx_360,ds_347,dx_350,false,fp - 0x0002,SCZO_376,SCZO_376,si_315,sp_245 + 0x0002,ss,SZO_352,wLoc1C_12,wLoc1E_14
		defs: ax_387,bp_379,bx_389,C_385,cl_388,cx_390,ds_382,dx_383,SCZO_381,si_391,sp_378,ss_380,SZO_384,Z_386
	return ds_382
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E8D:
	cx_356 = cx_356 - 0x0001
	bx_358 = bx_358 + 0x0002
	cl_357 = (byte) cx_356 (alias)
	branch cx_356 != 0x0000 l0800_4E7C
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E92:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4ED7:
	return ds_347
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4C72:
	return ds_15
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp

fn0800_4C55_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_518F(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_518F_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_518F:
	selector ds_10
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_10) != 0x0000 l0800_51A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_51A5:
	selector ds_21
	fn0800_5374(bp, ds_10, out ds_21)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_51A1:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_518F_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_51A9(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_51A9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_51A9:
	word16 sp_123 = fp - 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_533D:
	word16 sp_25 = sp_123 - 0x0002
	Mem27[ss:sp_25:word16] = Mem0[ds:0x29E5:word16]
	Mem30[ss:sp_25 - 0x0002:word16] = Mem27[ds:0x29E3:word16]
	word16 si_33
	Mem38[ss:sp_25:word16] = fn0800_AD2F(ds, ptrArg00, wArg02, out si_33)
	Mem40[ss:sp_25 - 0x0002:word16] = dx
	Mem42[ss:sp_25 - 0x0004:word16] = Mem40[ds:0x29E5:word16]
	Mem44[ss:sp_25 - 0x0006:word16] = Mem42[ds:0x29E3:word16]
	word16 si_46
	selector ds_47
	word16 ax_48 = fn0800_4194(fp - 0x0002, ds, wArg00, wArg02, out si_46, out ds_47)
	word16 bx_50 = Mem44[ss:sp_25 - 0x0002:word16]
	dx = Mem44[ss:sp_25:word16]
	branch bx_50 >=u dx l0800_5364
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5364:
	branch bx_50 != dx l0800_536D
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5366:
	branch dx >=u ax_48 l0800_536D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_536D:
	return ds_47
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_536A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5361:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51B3:
	Mem76[ss:sp_25:word16] = Mem44[ds_47:0x29E5:word16]
	Mem78[ss:sp_25 - 0x0002:word16] = Mem76[ds_47:0x29E3:word16]
	word16 ax_80 = fn0800_3E9A(fp - 0x0002, ds_47, ptrArg00, wArg02, out ds)
	sp_123 = sp_25 + 0x0002
	branch ax_80 == 0x0000 l0800_51D5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D5:
	Mem315[ss:sp_25:word16] = Mem78[ds:0x29E1:word16]
	Mem317[ss:sp_25 - 0x0002:word16] = Mem315[ds:0x29DF:word16]
	Mem319[ss:sp_25 - 0x0004:word16] = Mem317[ds:0x29E5:word16]
	Mem321[ss:sp_25 - 0x0006:word16] = Mem319[ds:0x29E3:word16]
	word16 di_322
	selector ds_323
	Mem328[ss:sp_25 - 0x0004:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_322, out ds_323)
	fn0800_4047(ds_323, bArg00, ptrArg02, wArg04, out ds)
	sp_123 = sp_25 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51C5:
	branch ax_80 == 0x0001 l0800_51F5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51F5:
	Mem176[ss:sp_25:word16] = Mem78[ds:0x29E1:word16]
	Mem178[ss:sp_25 - 0x0002:word16] = Mem176[ds:0x29DF:word16]
	Mem180[ss:sp_25 - 0x0004:word16] = Mem178[ds:0x29E5:word16]
	Mem182[ss:sp_25 - 0x0006:word16] = Mem180[ds:0x29E3:word16]
	selector ds_183
	Mem188[ss:sp_25 - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds, wArg00, wArg02, out ds_183)
	Mem190[ss:sp_25 - 0x0006:word16] = ax_80
	selector ds_192 = fn0800_409C(fp - 0x0002, ds_183, wArg02, wArg04, wArg06)
	Mem196[ss:sp_25:word16] = Mem190[ds_192:0x29E5:word16]
	Mem198[ss:sp_25 - 0x0002:word16] = Mem196[ds_192:0x29E3:word16]
	word16 di_199
	selector ds_200
	word16 ax_201 = fn0800_3FAD(fp - 0x0002, ds_192, wArg00, wArg02, out di_199, out ds_200)
	Mem204[ss:fp - 0x0004:word16] = 0x0000
	Mem205[ss:fp - 0x0006:word16] = ax_201
	Mem207[ss:sp_25:word16] = Mem205[ds_200:0x29E1:word16]
	Mem209[ss:sp_25 - 0x0002:word16] = Mem207[ds_200:0x29DF:word16]
	Mem211[ss:sp_25 - 0x0004:word16] = ax_201
	selector ds_212
	fn0800_40BF(fp - 0x0002, ds_200, bArg00, wArg02, wArg04, out ds_212)
	Mem217[ss:sp_25:word16] = Mem211[ds_212:0x29E5:word16]
	Mem219[ss:sp_25 - 0x0002:word16] = Mem217[ds_212:0x29E3:word16]
	word16 di_220
	selector ds_221
	word16 ax_227 = fn0800_8CAA(ax_201, 0x08, fn0800_3F58(fp - 0x0002, ds_212, wArg00, wArg02, out di_220, out ds_221), bp, out dx)
	branch dx != 0x0052 l0800_52BA
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5250:
	branch ax_227 != 0x4E43 l0800_52BA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52BA:
	Mem234[ss:sp_25:word16] = Mem219[ss:fp - 0x0004:word16]
	Mem236[ss:sp_25 - 0x0002:word16] = Mem234[ss:fp - 0x0006:word16]
	Mem238[ss:sp_25 - 0x0004:word16] = Mem236[ds_221:0x29E1:word16]
	Mem240[ss:sp_25 - 0x0006:word16] = Mem238[ds_221:0x29DF:word16]
	Mem242[ss:sp_25 - 0x0008:word16] = Mem240[ds_221:0x29E5:word16]
	Mem244[ss:sp_25 - 0x000A:word16] = Mem242[ds_221:0x29E3:word16]
	ds = fn0800_3B0A(fp - 0x0002, ds_221, wArg08, wArg0A)
	sp_123 = sp_25 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5255:
	selector ds_250
	branch fn0800_5374(fp - 0x0002, ds_221, out ds_250) == 0x0000 l0800_5263
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5263:
	Mem262[ss:sp_25:word16] = 0x0001
	ui32 ax_dx_266 = SEQ(Mem262[ds_250:0x2A09:word16], Mem262[ds_250:0x2A07:word16] + 0x0002)
	dx = -(word16) (ax_dx_266 + 0x00000002)
	Mem278[ss:sp_25 - 0x0002:word16] = -SLICE(ax_dx_266 + 0x00000002, word16, 16) - (dx == 0x0000)
	Mem280[ss:sp_25 - 0x0004:word16] = dx
	Mem282[ss:sp_25 - 0x0006:word16] = Mem280[ds_250:0x29E1:word16]
	Mem284[ss:sp_25 - 0x0008:word16] = Mem282[ds_250:0x29DF:word16]
	selector ds_285
	fn0800_ACB3(fp - 0x0002, ds_250, ptrArg00, wArg02, wArg08, out ds_285)
	Mem290[ss:sp_25:word16] = Mem284[ds_285:0x29E1:word16]
	Mem292[ss:sp_25 - 0x0002:word16] = Mem290[ds_285:0x29DF:word16]
	Mem294[ss:sp_25 - 0x0004:word16] = Mem292[ds_285:0x2A07:word16]
	selector ds_295
	fn0800_40BF(fp - 0x0002, ds_285, bArg00, wArg02, wArg04, out ds_295)
	Mem301[ss:sp_25:word16] = 0x0001
	Mem303[ss:sp_25 - 0x0002:word16] = Mem301[ds_295:0x2A09:word16]
	Mem305[ss:sp_25 - 0x0004:word16] = Mem303[ds_295:0x2A07:word16]
	Mem307[ss:sp_25 - 0x0006:word16] = Mem305[ds_295:0x29E1:word16]
	Mem309[ss:sp_25 - 0x0008:word16] = Mem307[ds_295:0x29DF:word16]
	fn0800_ACB3(fp - 0x0002, ds_295, ptrArg00, wArg02, wArg08, out ds)
	sp_123 = sp_25 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_525E:
	return ds_250
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_51A9_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_51CA:
	branch ax_80 != 0x0003 l0800_51D2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5301:
	Mem127[ss:sp_25 + 0x0002:word16] = Mem78[ds:0x29E5:word16]
	Mem129[ss:sp_25:word16] = Mem127[ds:0x29E3:word16]
	word16 si_130
	selector ds_131
	Mem136[ss:sp_25 + 0x0002:word16] = fn0800_4194(fp - 0x0002, ds, wArg00, wArg02, out si_130, out ds_131)
	Mem138[ss:sp_25:word16] = dx
	Mem140[ss:sp_25 - 0x0002:word16] = Mem138[ds_131:0x29E5:word16]
	Mem142[ss:sp_25 - 0x0004:word16] = Mem140[ds_131:0x29E3:word16]
	word16 si_143
	word16 ax_144 = fn0800_AD2F(ds_131, ptrArg00, wArg02, out si_143)
	ui32 bx_cx_154 = SEQ(Mem142[ss:sp_25:word16], Mem142[ss:sp_25 + 0x0002:word16] - ax_144) - SEQ(dx, ax_144)
	Mem159[ss:sp_25 + 0x0002:word16] = SLICE(bx_cx_154, word16, 16)
	Mem161[ss:sp_25:word16] = (word16) bx_cx_154
	Mem163[ss:sp_25 - 0x0002:word16] = Mem161[ds_131:0x29E1:word16]
	Mem165[ss:sp_25 - 0x0004:word16] = Mem163[ds_131:0x29DF:word16]
	Mem167[ss:sp_25 - 0x0006:word16] = Mem165[ds_131:0x29E5:word16]
	Mem169[ss:sp_25 - 0x0008:word16] = Mem167[ds_131:0x29E3:word16]
	ds = fn0800_3B0A(fp - 0x0002, ds_131, wArg08, wArg0A)
	sp_123 = sp_25 + 0x0004
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51CF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52D8:
	word16 si_125 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FA:
	branch si_125 != 0x0003 l0800_52DC
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52DC:
	word16 sp_103 = sp_123 - 0x0002
	Mem104[ss:sp_103:word16] = Mem78[ds:0x29E1:word16]
	Mem106[ss:sp_103 - 0x0002:word16] = Mem104[ds:0x29DF:word16]
	Mem108[ss:sp_103 - 0x0004:word16] = Mem106[ds:0x29E5:word16]
	Mem110[ss:sp_103 - 0x0006:word16] = Mem108[ds:0x29E3:word16]
	word16 di_111
	selector ds_112
	Mem117[ss:sp_103 - 0x0004:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_111, out ds_112)
	fn0800_4047(ds_112, bArg00, ptrArg02, wArg04, out ds)
	sp_123 = sp_103 + 0x0002
	si_125 = si_125 + 0x0001
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_5374(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_5374_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5374:
	word16 si_20
	word16 ax_21 = fn0800_AD2F(ds, DPB(ptrLoc16, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out si_20)
	Mem25[ss:fp - 0x000C:word16] = dx
	Mem27[ss:fp - 0x000E:word16] = ax_21
	Mem29[ss:fp - 0x0014:word16] = Mem27[ds:0x29E5:word16]
	Mem31[ss:fp - 0x0016:word16] = Mem29[ds:0x29E3:word16]
	selector ds_34
	fn0800_3E5D(fp - 0x0002, ds, wArg00, wArg02, out ds_34)
	Mem40[ds_34:0x2A21:word16] = ax_21 & 0x0003
	Mem42[ss:fp - 0x0014:word16] = Mem40[ds_34:0x29E5:word16]
	Mem44[ss:fp - 0x0016:word16] = Mem42[ds_34:0x29E3:word16]
	selector ds_45
	word16 dx_46 = fn0800_3E5D(fp - 0x0002, ds_34, wArg00, wArg02, out ds_45)
	Mem49[ds_45:0x2A09:word16] = dx_46
	Mem50[ds_45:0x2A07:word16] = ax_21 & 0x0003
	word16 bp_239 = fp - 0x0002
	branch Mem50[ds_45:0x2A21:word16] != 0x0000 l0800_53EF
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_53EF:
	Mem98[ss:fp - 0x0014:word16] = Mem50[ds_45:0x29E5:word16]
	Mem100[ss:fp - 0x0016:word16] = Mem98[ds_45:0x29E3:word16]
	selector ds_101
	word16 dx_102 = fn0800_3E5D(fp - 0x0002, ds_45, wArg00, wArg02, out ds_101)
	Mem105[ds_101:0x2A05:word16] = dx_102
	Mem106[ds_101:0x2A03:word16] = ax_21 & 0x0003
	Mem108[ss:fp - 0x0014:word16] = Mem106[ds_101:0x29E5:word16]
	Mem110[ss:fp - 0x0016:word16] = Mem108[ds_101:0x29E3:word16]
	word16 si_111
	word16 di_112
	selector ds_113
	word16 ax_114 = fn0800_3E27(fp - 0x0002, ds_101, wArg00, wArg02, out si_111, out di_112, out ds_113)
	Mem117[ds_113:0x2E4B:word16] = ax_114
	Mem119[ss:fp - 0x0014:word16] = Mem117[ds_113:0x29E5:word16]
	Mem121[ss:fp - 0x0016:word16] = Mem119[ds_113:0x29E3:word16]
	word16 si_122
	word16 di_123
	selector ds_124
	word16 ax_125 = fn0800_3E27(fp - 0x0002, ds_113, wArg00, wArg02, out si_122, out di_123, out ds_124)
	Mem128[ds_124:0x2E49:word16] = ax_125
	Mem130[ss:fp - 0x0014:word16] = Mem128[ds_124:0x29E5:word16]
	Mem132[ss:fp - 0x0016:word16] = Mem130[ds_124:0x29E3:word16]
	word16 si_133
	word16 di_134
	selector ds_135
	fn0800_3E27(fp - 0x0002, ds_124, wArg00, wArg02, out si_133, out di_134, out ds_135)
	Mem140[ss:fp - 0x0014:word16] = Mem132[ds_135:0x2A05:word16]
	Mem142[ss:fp - 0x0016:word16] = Mem140[ds_135:0x2A03:word16]
	Mem144[ss:fp - 0x0018:word16] = Mem142[ds_135:0x29E5:word16]
	Mem146[ss:fp - 0x001A:word16] = Mem144[ds_135:0x29E3:word16]
	selector ds_147
	word16 ax_148 = fn0800_2D0A(fp - 0x0002, ds_135, out ds_147)
	branch ax_148 == Mem146[ds_147:0x2E49:word16] l0800_5458
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5458:
	Mem161[ss:fp - 0x0014:word16] = 0x0001
	Mem163[ss:fp - 0x0016:word16] = 0x000F
	selector ds_164 = fn0800_4311(ds_147, wArg00, wArg02)
	Mem167[ss:fp - 0x0008:word16] = 0x000F
	Mem168[ss:fp - 0x000A:word16] = 0x0001
	Mem171[ds_164:0x2E73:word16] = 0x0010
	Mem172[ds_164:0x2E71:word16] = 0x0000
	Mem176[ss:fp - 0x0014:word16] = 0x0001
	Mem178[ss:fp - 0x0016:word16] = 0x000F
	selector ds_179 = fn0800_4311(ds_164, wArg00, wArg02)
	Mem181[ss:fp - 0x0004:word16] = 0x000F
	Mem182[ss:fp - 0x0006:word16] = 0x0001
	Mem184[ds_179:0x2E5B:word16] = 0x0010
	Mem185[ds_179:0x2E59:word16] = 0x0000
	word16 dx_187 = Mem185[ds_179:0x2E71:word16]
	Mem189[ds_179:0x2E6F:word16] = Mem185[ds_179:0x2E73:word16]
	Mem190[ds_179:0x2E6D:word16] = dx_187 + 0xFFFD
	word16 dx_193 = Mem190[ds_179:0x2E59:word16] + Mem190[ds_179:0x2E31:word16]
	Mem194[ds_179:0x2E57:word16] = Mem190[ds_179:0x2E5B:word16]
	Mem195[ds_179:0x2E55:word16] = dx_193
	Mem196[ds_179:0x2E4D:word16] = 0x0000
	Mem200[ds_179:0x2E45:word16] = 0x0000
	Mem201[ds_179:0x29FD:word16] = 0x0000
	Mem202[ds_179:0x29FB:word16] = 0x0000
	Mem203[ds_179:0x2A01:word16] = 0x0000
	Mem204[ds_179:0x29FF:word16] = 0x0000
	Mem206[ss:fp - 0x0010:word16] = Mem204[ds_179:0x2E4F:word16]
	Mem209[ss:fp - 0x0014:word16] = 0x0001
	word16 sp_213 = fp - 0x0012
	word16 si_210
	selector ds_211
	branch fn0800_5C1A(ds_179, wArg00, out si_210, out ds_211) == 0x0000 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54F3:
	branch Mem209[ds_211:0x2A25:word16] == 0x0002 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54FA:
	branch Mem209[ds_211:0x2A25:word16] == 0x0007 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5501:
	si_210 = 0x000A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5504:
	word16 si_220 = si_210
	branch si_210 != 0x0000 l0800_555D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5508:
	Mem325[ss:fp - 0x0014:word16] = 0x0001
	sp_213 = fp - 0x0012
	branch fn0800_5C1A(ds_211, wArg00, out si_220, out ds_211) == 0x0000 l0800_5557
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5557:
	Mem366[ds_211:0x2E4F:word16] = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5516:
	branch Mem325[ds_211:0x2A23:word16] == 0x0001 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_551D:
	Mem348[ss:fp - 0x0014:word16] = 0x0010
	word16 ax_351 = fn0800_5C1A(ds_211, wArg00, out si_220, out ds_211)
	sp_213 = fp - 0x0012
	branch Mem348[ds_211:0x2A25:word16] != 0x0002 l0800_553B
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5530:
	branch Mem348[ds_211:0x2E4F:word16] != 0x0000 l0800_553B
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5537:
	Mem365[ds_211:0x2E4F:word16] = ax_351
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_553B:
	branch Mem348[ds_211:0x2E4F:word16] == ax_351 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5541:
	branch Mem348[ds_211:0x2E4F:word16] == 0x0000 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5548:
	si_220 = 0x000C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_554B:
	branch Mem325[ds_211:0x2E4F:word16] != 0x0000 l0800_555D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5552:
	si_220 = 0x000B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_555D:
	word16 si_232 = si_220
	branch si_220 != 0x0000 l0800_557C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5561:
	word16 ax_312 = Mem209[ds_211:0x2A21:word16]
	branch ax_312 == 0x0001 l0800_5570
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5570:
	ds_211 = fn0800_55E8(fp - 0x0002, ds_211)
	si_232 = ax_312
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5569:
	branch ax_312 == 0x0002 l0800_5577
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5577:
	bp_239 = fn0800_579B(ds_211, out ds_211)
	si_232 = ax_312
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_556E:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_557C:
	Mem241[ds_211:0x2E4F:word16] = Mem209[ss:bp_239 - 0x000E:word16]
	word16 sp_242 = sp_213 - 0x0002
	Mem243[ss:sp_242:word16] = Mem241[ss:bp_239 - 0x0006:word16]
	Mem245[ss:sp_242 - 0x0002:word16] = Mem243[ss:bp_239 - 0x0008:word16]
	selector ds_246
	fn0800_4346(ds_211, wArg00, wArg02, out ds_246)
	Mem251[ss:sp_242:word16] = Mem245[ss:bp_239 - 0x0002:word16]
	Mem253[ss:sp_242 - 0x0002:word16] = Mem251[ss:bp_239 - 0x0004:word16]
	selector ds_254
	fn0800_4346(ds_246, wArg00, wArg02, out ds_254)
	word16 v13_257 = Mem253[ds_254:0x2A03:word16] + 0x0012
	Mem258[ds_254:0x2A03:word16] = v13_257
	Mem262[ds_254:0x2A05:word16] = Mem258[ds_254:0x2A05:word16] + (v13_257 <u 0x0000)
	Mem265[ss:sp_242:word16] = 0x0000
	word16 dx_268 = Mem265[ss:bp_239 - 0x000C:word16] + Mem265[ds_254:0x2A03:word16]
	Mem274[ss:sp_242 - 0x0002:word16] = Mem265[ss:bp_239 - 0x000A:word16] + Mem265[ds_254:0x2A05:word16] + (dx_268 <u 0x0000)
	Mem276[ss:sp_242 - 0x0004:word16] = dx_268
	Mem278[ss:sp_242 - 0x0006:word16] = Mem276[ds_254:0x29E5:word16]
	Mem280[ss:sp_242 - 0x0008:word16] = Mem278[ds_254:0x29E3:word16]
	selector ds_282
	fn0800_ACB3(bp_239, ds_254, ptrArg00, wArg02, wArg08, out ds_282)
	branch si_232 == 0x0000 l0800_55D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55D0:
	branch Mem280[ds_282:0x2E4D:word16] == Mem280[ds_282:0x2E4B:word16] l0800_55E1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55E1:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55D9:
	return 0x0006
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55C9:
	return si_232
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_5450:
	return 0x0005
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_53BF:
	Mem68[ss:fp - 0x0014:word16] = Mem50[ds_45:0x2A09:word16]
	Mem70[ss:fp - 0x0016:word16] = ax_21 & 0x0003
	Mem72[ss:fp - 0x0018:word16] = Mem70[ds_45:0x29E1:word16]
	Mem74[ss:fp - 0x001A:word16] = Mem72[ds_45:0x29DF:word16]
	Mem76[ss:fp - 0x001C:word16] = Mem74[ds_45:0x29E5:word16]
	Mem78[ss:fp - 0x001E:word16] = Mem76[ds_45:0x29E3:word16]
	selector ds_81 = fn0800_3B0A(fp - 0x0002, ds_45, wArg08, wArg0A)
	*dsOut = ds_81
	word16 dx_84 = Mem78[ds_81:0x2A07:word16]
	Mem85[ds_81:0x2A05:word16] = Mem78[ds_81:0x2A09:word16]
	Mem86[ds_81:0x2A03:word16] = dx_84
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_5374_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp



selector fn0800_55E8(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_55E8_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_55E8:
	word16 sp_111 = fp - 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_574B:
	word16 ax_37 = Mem0[ds:0x2A01:word16]
	word16 dx_38 = Mem0[ds:0x29FF:word16]
	branch ax_37 >=u Mem0[ds:0x2A09:word16] l0800_575B
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_575B:
	branch ax_37 != Mem0[ds:0x2A09:word16] l0800_5766
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_575D:
	branch dx_38 >=u Mem0[ds:0x2A07:word16] l0800_5766
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5766:
	word16 sp_343 = sp_111 - 0x0002
	Mem344[ss:sp_343:word16] = Mem0[ds:0x29E1:word16]
	Mem346[ss:sp_343 - 0x0002:word16] = Mem344[ds:0x29DF:word16]
	word16 ax_349 = Mem346[ds:0x2E55:word16] - Mem346[ds:0x2E59:word16]
	word16 ax_353 = ax_349 - Mem346[ds:0x2E31:word16]
	Mem358[ss:sp_343 - 0x0004:word16] = 0x0000 - (ax_349 <u 0x0000) - (ax_353 <u 0x0000)
	Mem360[ss:sp_343 - 0x0006:word16] = ax_353
	word16 ax_362 = Mem360[ds:0x2E59:word16] + Mem360[ds:0x2E31:word16]
	Mem365[ss:sp_343 - 0x0008:word16] = Mem360[ds:0x2E5B:word16]
	Mem367[ss:sp_343 - 0x000A:word16] = ax_362
	return fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_55E8_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> Sequence es:bx:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5763:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5758:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_55F1:
	word16 sp_49 = sp_111 - 0x0002
	Mem50[ss:sp_49:word16] = 0x0010
	Mem53[ss:sp_49 - 0x0002:word16] = ds
	Mem56[ss:sp_49 - 0x0004:word16] = 0x290F
	selector ds_60 = fn0800_5A24(fp - 0x0002, ds, wArg00, wArg02, wArg04)
	Mem65[ss:sp_49:word16] = 0x0010
	Mem67[ss:sp_49 - 0x0002:word16] = ds_60
	Mem70[ss:sp_49 - 0x0004:word16] = 0x284F
	selector ds_71 = fn0800_5A24(fp - 0x0002, ds_60, wArg00, wArg02, wArg04)
	Mem76[ss:sp_49:word16] = 0x0010
	Mem78[ss:sp_49 - 0x0002:word16] = ds_71
	Mem81[ss:sp_49 - 0x0004:word16] = 0x278F
	selector ds_82 = fn0800_5A24(fp - 0x0002, ds_71, wArg00, wArg02, wArg04)
	Mem87[ss:sp_49:word16] = 0x0010
	word16 ax_89 = fn0800_5C39(fp - 0x0002, ds_82, wArg00, out ds)
	Mem92[ss:fp - 0x0004:word16] = 0x0000
	Mem93[ss:fp - 0x0006:word16] = ax_89
	sp_111 = sp_49 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5736:
	word16 ax_112 = Mem93[ss:fp - 0x0006:word16]
	word16 dx_113 = Mem93[ss:fp - 0x0004:word16]
	word16 v11_114 = Mem93[ss:fp - 0x0006:word16] - 0x0001
	Mem115[ss:fp - 0x0006:word16] = v11_114
	Mem119[ss:fp - 0x0004:word16] = Mem115[ss:fp - 0x0004:word16] - (v11_114 <u 0x0000)
	branch (ax_112 | dx_113) == 0x0000 l0800_574B
	word16 ax_123 = Mem119[ss:fp - 0x0006:word16]
	word16 dx_124 = Mem119[ss:fp - 0x0004:word16]
	word16 v20_125 = Mem119[ss:fp - 0x0006:word16] - 0x0001
	Mem126[ss:fp - 0x0006:word16] = v20_125
	Mem130[ss:fp - 0x0004:word16] = Mem126[ss:fp - 0x0004:word16] - (v20_125 <u 0x0000)
	branch (ax_123 | dx_124) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5748:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5633:
	word16 sp_135 = sp_111 - 0x0002
	Mem136[ss:sp_135:word16] = ds
	Mem139[ss:sp_135 - 0x0002:word16] = 0x290F
	word16 ax_141 = fn0800_5A8D(fp - 0x0002, ds, wArg00, wArg02, out ds)
	Mem143[ds:0x2E47:word16] = ax_141
	word16 v14_144 = Mem143[ds:0x29FF:word16] + ax_141
	Mem145[ds:0x29FF:word16] = v14_144
	Mem149[ds:0x2A01:word16] = Mem145[ds:0x2A01:word16] + (v14_144 <u 0x0000)
	sp_111 = sp_135 + 0x0002
	branch Mem149[ds:0x2E47:word16] != 0x0000 l0800_5654
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5654:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5664:
	word16 ax_236 = Mem149[ds:0x2E47:word16]
	Mem238[ds:0x2E47:word16] = Mem149[ds:0x2E47:word16] - 0x0001
	word16 ax_239 = ax_236
	branch ax_236 != 0x0000 l0800_5656
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5656:
	word16 si_330
	word16 di_331
	selector ds_332
	byte al_333 = fn0800_5B15(fp - 0x0002, ds, out si_330, out di_331, out ds_332)
	word16 sp_338 = sp_111 - 0x0002
	Mem339[ss:sp_338:word16] = DPB(ax_236, al_333 ^ Mem238[ds_332:0x2E4F:byte], 0)
	ds = fn0800_5D2F(fp - 0x0002, ds_332)
	sp_111 = sp_338 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_566F:
	branch (Mem238[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_5684
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5684:
	Mem328[ds:0x2E4F:word16] = Mem238[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5677:
	ax_239 = Mem238[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem326[ds:0x2E4F:word16] = ax_239
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5688:
	word16 sp_250 = sp_111 - 0x0002
	Mem251[ss:sp_250:word16] = DPB(ax_239, 0x00, 8)
	word16 dx_255 = DPB(dx_124, 0x00, 8)
	word16 dx_263 = Mem251[ss:sp_250:word16] + (dx_255 << 0x08 <u 0x0000)
	Mem268[ss:sp_250:word16] = dx_255 << 0x08
	Mem271[ss:sp_250 - 0x0002:word16] = dx_263
	int32 dx_ax_272 = (int32) DPB(bx, 0x00, 8)
	word16 ax_273 = (word16) dx_ax_272
	int32 dx_ax_285 = SEQ(Mem271[ss:sp_250 - 0x0002:word16], Mem271[ss:sp_250:word16] + ax_273) + SEQ(SLICE(dx_ax_272, word16, 16), ax_273)
	word16 dx_290
	Mem293[ss:sp_250:word16] = fn0800_8C69((word16) dx_ax_285, Mem271[ds:0x2E45:byte], SLICE(dx_ax_285, word16, 16), bp, out dx_290)
	word16 ax_296 = 0x0001 << Mem293[ds:0x2E45:byte]
	Mem299[ss:sp_250 - 0x0002:word16] = dx_290
	int32 dx_ax_300 = (int32) (ax_296 - 0x0001)
	word16 cx_305 = Mem299[ds:0x29FB:word16] & (word16) dx_ax_300
	bx = Mem299[ds:0x29FD:word16] & SLICE(dx_ax_300, word16, 16)
	ui32 ax_dx_315 = SEQ(Mem299[ss:sp_250 - 0x0002:word16], Mem299[ss:sp_250:word16] + cx_305) + SEQ(bx, cx_305)
	Mem319[ds:0x29FD:word16] = SLICE(ax_dx_315, word16, 16)
	Mem320[ds:0x29FB:word16] = (word16) ax_dx_315
	sp_111 = sp_250 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5651:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_56E6:
	branch (Mem149[ss:fp - 0x0006:word16] | Mem149[ss:fp - 0x0004:word16]) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_56EE:
	word16 sp_175 = sp_111 - 0x0002
	Mem176[ss:sp_175:word16] = ds
	Mem179[ss:sp_175 - 0x0002:word16] = 0x284F
	selector ds_180
	word16 ax_181 = fn0800_5A8D(fp - 0x0002, ds, wArg00, wArg02, out ds_180)
	Mem186[ds_180:0x2E2B:word16] = ax_181 + 0x0001
	Mem188[ss:sp_175:word16] = ds_180
	Mem191[ss:sp_175 - 0x0002:word16] = 0x278F
	word16 ax_193 = fn0800_5A8D(fp - 0x0002, ds_180, wArg00, wArg02, out ds)
	Mem196[ds:0x2E29:word16] = ax_193 + 0x0002
	word16 v16_197 = Mem196[ds:0x29FF:word16] + (ax_193 + 0x0002)
	Mem198[ds:0x29FF:word16] = v16_197
	Mem202[ds:0x2A01:word16] = Mem198[ds:0x2A01:word16] + (v16_197 <u 0x0000)
	sp_111 = sp_175 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_572B:
	word16 ax_211 = Mem202[ds:0x2E29:word16]
	Mem213[ds:0x2E29:word16] = Mem202[ds:0x2E29:word16] - 0x0001
	branch ax_211 != 0x0000 l0800_5719
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5719:
	ptr32 es_bx_218 = Mem213[ds:0x2E55:segptr32]
	bx = (word16) es_bx_218 - Mem213[ds:0x2E2B:word16]
	word16 sp_225 = sp_111 - 0x0002
	Mem226[ss:sp_225:word16] = DPB(ax_211, Mem213[SLICE(es_bx_218, selector, 16):bx:byte], 0)
	ds = fn0800_5D2F(fp - 0x0002, ds)
	sp_111 = sp_225 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_579B(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_579B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_579B:
	word16 sp_114 = fp
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_58F2:
	word16 ax_23 = Mem0[ds:0x2A01:word16]
	word16 dx_24 = Mem0[ds:0x29FF:word16]
	branch ax_23 >=u Mem0[ds:0x2A09:word16] l0800_5902
// DataOut: ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5902:
	branch ax_23 != Mem0[ds:0x2A09:word16] l0800_590D
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5904:
	branch dx_24 >=u Mem0[ds:0x2A07:word16] l0800_590D
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_590D:
	word16 sp_284 = sp_114 - 0x0002
	Mem285[ss:sp_284:word16] = Mem0[ds:0x29E1:word16]
	Mem287[ss:sp_284 - 0x0002:word16] = Mem285[ds:0x29DF:word16]
	word16 ax_290 = Mem287[ds:0x2E55:word16] - Mem287[ds:0x2E59:word16]
	word16 ax_294 = ax_290 - Mem287[ds:0x2E31:word16]
	Mem299[ss:sp_284 - 0x0004:word16] = 0x0000 - (ax_290 <u 0x0000) - (ax_294 <u 0x0000)
	Mem301[ss:sp_284 - 0x0006:word16] = ax_294
	word16 ax_303 = Mem301[ds:0x2E59:word16] + Mem301[ds:0x2E31:word16]
	Mem306[ss:sp_284 - 0x0008:word16] = Mem301[ds:0x2E5B:word16]
	Mem308[ss:sp_284 - 0x000A:word16] = ax_303
	*dsOut = fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

fn0800_579B_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> al:<invalid> ah:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> Sequence es:bx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_590A:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58FF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57CF:
	word16 sp_42 = sp_114 - 0x0002
	Mem43[ss:sp_42:word16] = 0x0001
	selector ds_46
	word16 ax_47 = fn0800_5CD9(ds, wArg00, out ds_46)
	branch ax_47 == 0x0000 l0800_579E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_579E:
	word16 si_251
	word16 di_252
	selector ds_253
	byte al_254 = fn0800_5B15(bp, ds_46, out si_251, out di_252, out ds_253)
	Mem260[ss:sp_42:word16] = DPB(ax_47, al_254 ^ Mem43[ds_253:0x2E4F:byte], 0)
	ds = fn0800_5D2F(bp, ds_253)
	sp_114 = sp_42 + 0x0002
	branch (Mem260[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_57C1
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57C1:
	Mem282[ds:0x2E4F:word16] = Mem260[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57B4:
	Mem280[ds:0x2E4F:word16] = Mem260[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57C5:
	word16 v16_268 = Mem260[ds:0x29FF:word16] + 0x0001
	Mem269[ds:0x29FF:word16] = v16_268
	Mem273[ds:0x2A01:word16] = Mem269[ds:0x2A01:word16] + (v16_268 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57DD:
	Mem55[ss:sp_42:word16] = 0x0001
	sp_114 = sp_42 + 0x0002
	selector ds_56
	branch fn0800_5CD9(ds_46, wArg00, out ds_56) == 0x0000 l0800_5866
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5866:
	selector ds_164 = fn0800_593F(ds_56)
	branch Mem55[ds_164:0x2E29:word16] != 0x0009 l0800_58B7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58B7:
	bp = fn0800_5975(ds_164, out ds)
	word16 v25_218 = Mem55[ds:0x29FF:word16] + Mem55[ds:0x2E29:word16]
	Mem219[ds:0x29FF:word16] = v25_218
	Mem223[ds:0x2A01:word16] = Mem219[ds:0x2A01:word16] + (v25_218 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58DA:
	word16 ax_232 = Mem223[ds:0x2E29:word16]
	Mem234[ds:0x2E29:word16] = Mem223[ds:0x2E29:word16] - 0x0001
	branch ax_232 != 0x0000 l0800_58C8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58C8:
	ptr32 es_bx_239 = Mem234[ds:0x2E55:segptr32]
	word16 sp_246 = sp_114 - 0x0002
	Mem247[ss:sp_246:word16] = DPB(ax_232, Mem234[SLICE(es_bx_239, selector, 16):(word16) es_bx_239 - Mem234[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(bp, ds)
	sp_114 = sp_246 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58E5:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5870:
	bp = fn0800_5A0F(ds_164, out ds)
	word16 v22_170 = Mem55[ds:0x29FF:word16] + Mem55[ds:0x2E47:word16]
	Mem171[ds:0x29FF:word16] = v22_170
	Mem175[ds:0x2A01:word16] = Mem171[ds:0x2A01:word16] + (v22_170 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_588F:
	word16 ax_183 = Mem175[ds:0x2E47:word16]
	Mem185[ds:0x2E47:word16] = Mem175[ds:0x2E47:word16] - 0x0001
	branch ax_183 != 0x0000 l0800_5881
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5881:
	word16 si_202
	word16 di_203
	selector ds_204
	byte al_205 = fn0800_5B15(bp, ds, out si_202, out di_203, out ds_204)
	word16 sp_210 = sp_114 - 0x0002
	Mem211[ss:sp_210:word16] = DPB(ax_183, al_205 ^ Mem185[ds_204:0x2E4F:byte], 0)
	ds = fn0800_5D2F(bp, ds_204)
	sp_114 = sp_210 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_589A:
	branch (Mem185[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_58B0
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58B0:
	Mem200[ds:0x2E4F:word16] = Mem185[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58A2:
	Mem198[ds:0x2E4F:word16] = Mem185[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57EB:
	Mem65[ss:sp_42:word16] = 0x0001
	selector ds_66
	word16 ax_67 = fn0800_5CD9(ds_56, wArg00, out ds_66)
	sp_114 = sp_42 + 0x0002
	branch ax_67 != 0x0000 l0800_580A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_580A:
	Mem128[ss:sp_42:word16] = 0x0001
	selector ds_129
	word16 ax_130 = fn0800_5CD9(ds_66, wArg00, out ds_129)
	sp_114 = sp_42 + 0x0002
	branch ax_130 != 0x0000 l0800_5820
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5820:
	word16 si_147
	word16 di_148
	fn0800_5B15(bp, ds_129, out si_147, out di_148, out ds_129)
	Mem154[ds_129:0x2E29:word16] = DPB(ax_130, 0x00, 8) + 0x0008
	branch Mem154[ds_129:0x2E29:word16] != 0x0008 l0800_5835
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5832:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58E8:
	Mem159[ss:sp_42:word16] = 0x0001
	fn0800_5CD9(ds_129, wArg00, out ds)
	sp_114 = sp_42 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5818:
	Mem146[ds_129:0x2E29:word16] = 0x0003
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5835:
	bp = fn0800_5975(ds_129, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57F9:
	Mem116[ds_66:0x2E29:word16] = 0x0002
	word16 si_117
	word16 di_118
	fn0800_5B15(bp, ds_66, out si_117, out di_118, out ds)
	Mem125[ds:0x2E2B:word16] = DPB(ax_67, 0x00, 8) + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5838:
	word16 v13_83 = Mem65[ds:0x29FF:word16] + Mem65[ds:0x2E29:word16]
	Mem84[ds:0x29FF:word16] = v13_83
	Mem88[ds:0x2A01:word16] = Mem84[ds:0x2A01:word16] + (v13_83 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5858:
	word16 ax_97 = Mem88[ds:0x2E29:word16]
	Mem99[ds:0x2E29:word16] = Mem88[ds:0x2E29:word16] - 0x0001
	branch ax_97 != 0x0000 l0800_5846
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5846:
	ptr32 es_bx_104 = Mem99[ds:0x2E55:segptr32]
	word16 sp_111 = sp_114 - 0x0002
	Mem112[ss:sp_111:word16] = DPB(ax_97, Mem99[SLICE(es_bx_104, selector, 16):(word16) es_bx_104 - Mem99[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(bp, ds)
	sp_114 = sp_111 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5863:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>



selector fn0800_593F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_593F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_593F:
	selector ds_7
	word16 ax_8 = fn0800_5CD9(ds, 0x0001, out ds_7)
	Mem12[ds_7:0x2E29:word16] = ax_8 + 0x0004
	Mem15[ss:fp - 0x0002:word16] = 0x0001
	selector ds_18
	branch fn0800_5CD9(ds_7, wArg00, out ds_18) == 0x0000 l0800_5974
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_595D:
	Mem33[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_35 = fn0800_5CD9(ds_18, wArg00, out ds_18)
	Mem42[ds_18:0x2E29:word16] = (Mem33[ds_18:0x2E29:word16] - 0x0001 << 0x0001) + ax_35
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

l0800_5974:
	return ds_18
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

fn0800_593F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001



word16 fn0800_5975(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5975_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5975:
	Mem3[ds:0x2E2B:word16] = 0x0000
	selector ds_18
	word16 ax_9 = fn0800_5CD9(ds, 0x0001, out ds_18)
	word16 ax_11 = ax_9
	branch ax_9 == 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5989:
	Mem38[ss:fp - 0x0002:word16] = 0x0001
	selector ds_41
	word16 ax_42 = fn0800_5CD9(ds_18, wArg00, out ds_41)
	Mem45[ds_41:0x2E2B:word16] = ax_42
	Mem48[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_50 = fn0800_5CD9(ds_41, wArg00, out ds_18)
	ax_11 = ax_50
	branch ax_50 == 0x0000 l0800_59E3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59E3:
	branch Mem48[ds_18:0x2E2B:word16] != 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59EA:
	Mem94[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_96 = fn0800_5CD9(ds_18, wArg00, out ds_18)
	Mem100[ds_18:0x2E2B:word16] = ax_96 + 0x0002
	ax_11 = ax_96 + 0x0002
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

l0800_59A4:
	Mem58[ss:fp - 0x0002:word16] = 0x0001
	selector ds_59
	word16 ax_60 = fn0800_5CD9(ds_18, wArg00, out ds_59)
	Mem68[ds_59:0x2E2B:word16] = (Mem58[ds_59:0x2E2B:word16] << 0x0001) + ax_60 | 0x0004
	Mem71[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_73 = fn0800_5CD9(ds_59, wArg00, out ds_18)
	ax_11 = ax_73
	branch ax_73 != 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59CB:
	Mem81[ss:fp - 0x0002:word16] = 0x0001
	ax_11 = fn0800_5CD9(ds_18, wArg00, out ds_18)
	Mem89[ds_18:0x2E2B:word16] = (Mem81[ds_18:0x2E2B:word16] << 0x0001) + ax_11
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

l0800_59FA:
	word16 si_21
	word16 di_22
	selector ds_23
	fn0800_5B15(bp, ds_18, out si_21, out di_22, out ds_23)
	Mem34[ds_23:0x2E2B:word16] = (Mem3[ds_23:0x2E2B:word16] << 0x08) + DPB(ax_11, 0x00, 8) + 0x0001
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

fn0800_5975_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:0x00 dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001



word16 fn0800_5A0F(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5A0F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5A0F:
	selector ds_7
	word16 ax_12 = (fn0800_5CD9(ds, 0x0004, out ds_7) << 0x0002) + 0x000C
	Mem14[ds_7:0x2E47:word16] = ax_12
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_5A0F_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0004



selector fn0800_5A24(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_5A24_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	selector ds_28
	word16 ax_29 = fn0800_5C39(fp - 0x0002, ds, 0x0005, out ds_28)
	Mem31[ss:fp + 0x0006:word16] = ax_29
	word16 sp_30 = fp - 0x0006
	branch ax_29 == 0x0000 l0800_5A89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5A49:
	branch Mem31[ss:fp + 0x0006:word16] <=u 0x0010 l0800_5A54
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A4F:
	Mem91[ss:fp + 0x0006:word16] = 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A54:
	word16 di_54 = 0x0000
	word16 si_56 = Mem31[ss:fp + 0x0002:word16] + 0x000A
	branch 0x0000 >=u Mem31[ss:fp + 0x0006:word16] l0800_5A7A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A61:
	word16 sp_79 = sp_30 - 0x0002
	Mem80[ss:sp_79:word16] = 0x0004
	Mem86[Mem80[ss:fp + 0x0004:selector]:si_56:word16] = fn0800_5C39(fp - 0x0002, ds_28, wArg00, out ds_28)
	sp_30 = sp_79 + 0x0002
	si_56 = si_56 + 0x000C
	di_54 = di_54 + 0x0001
	branch di_54 <u Mem86[ss:fp + 0x0006:word16] l0800_5A61
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A7A:
	word16 sp_66 = sp_30 - 0x0002
	Mem67[ss:sp_66:word16] = Mem31[ss:fp + 0x0006:word16]
	Mem69[ss:sp_66 - 0x0002:word16] = Mem67[ss:fp + 0x0004:word16]
	Mem71[ss:sp_66 - 0x0004:word16] = Mem69[ss:fp + 0x0002:word16]
	fn0800_4550(fp - 0x0002)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

l0800_5A89:
	return ds_28
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

fn0800_5A24_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>



word16 fn0800_5A8D(word16 bp, selector ds, word16 wArg02, selector psegArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5A8D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5A8D:
	word16 wLoc04_15 = 0x0000
	word16 di_17 = wArg02
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5AA5:
	branch Mem0[psegArg04:di_17 + 0x000A:word16] == 0x0000 l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5AAF:
	int32 dx_ax_55 = (int32) ((0x0001 << Mem0[psegArg04:di_17 + 0x000A:byte]) - 0x0001)
	word16 cx_61 = Mem0[ds:0x29FB:word16] & (word16) dx_ax_55
	branch (Mem0[ds:0x29FD:word16] & SLICE(dx_ax_55, word16, 16)) != Mem0[psegArg04:di_17 + 0x0008:word16] l0800_5A9F
// DataOut: bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5ACC:
	branch cx_61 != Mem0[psegArg04:di_17 + 0x0006:word16] l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5A9F:
	di_17 = di_17 + 0x000C
	wLoc04_15 = wLoc04_15 + 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5AD2:
	selector ds_77
	fn0800_5C39(fp - 0x0002, ds, Mem0[psegArg04:wArg02 + (word16) (wLoc04_15 *s 0x000C) + 0x000A:word16], out ds_77)
	branch Mem0[ss:fp - 0x0004:word16] >=u 0x0002 l0800_5AF8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5AF8:
	Mem107[ss:fp - 0x000A:word16] = Mem0[ss:fp - 0x0004:word16] - 0x0001
	selector ds_109
	return fn0800_5C39(fp - 0x0002, ds_77, wArg00, out ds_109) | 0x0001 << Mem107[ss:fp - 0x0004:byte] - 0x01
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_5AEF:
	return Mem0[ss:fp - 0x0004:word16]
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_5A8D_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



byte fn0800_5B15(word16 bp, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_5B15_entry:
	*dsOut = ds
	*diOut = di
	*siOut = si
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5B15:
	word16 dx_11 = Mem0[ds:0x2E71:word16]
	branch Mem0[ds:0x2E73:word16] == Mem0[ds:0x2E6F:word16] l0800_5B2E
// DataOut: bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5B2E:
	branch dx_11 + 0xFFFD == Mem0[ds:0x2E6D:word16] l0800_5B37
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5B37:
	word16 ax_100
	word16 dx_196
	word16 si_62
	selector ds_63
	Mem68[ss:fp - 0x000C:word16] = fn0800_4194(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out si_62, out ds_63)
	Mem70[ss:fp - 0x000E:word16] = dx_11 + 0xFFFD
	Mem72[ss:fp - 0x0010:word16] = Mem70[ds_63:0x29E5:word16]
	Mem74[ss:fp - 0x0012:word16] = Mem72[ds_63:0x29E3:word16]
	word16 si_77
	word16 ax_78 = fn0800_AD2F(ds_63, ptrArg00, wArg02, out si_77)
	ui32 bx_cx_88 = SEQ(Mem74[ss:fp - 0x000E:word16], Mem74[ss:fp - 0x000C:word16] - ax_78) - SEQ(dx_11 + 0xFFFD, ax_78)
	Mem91[ss:fp - 0x0004:word16] = SLICE(bx_cx_88, word16, 16)
	Mem92[ss:fp - 0x0006:word16] = (word16) bx_cx_88
	branch Mem92[ss:fp - 0x0004:word16] <u 0x0000 l0800_5B76
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B67:
	branch Mem92[ss:fp - 0x0004:word16] >u 0x0000 l0800_5B6F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B69:
	branch Mem92[ss:fp - 0x0006:word16] <=u 0xFFFD l0800_5B76
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B76:
	dx_196 = Mem92[ss:fp - 0x0004:word16]
	ax_100 = Mem92[ss:fp - 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B6F:
	dx_196 = 0x0000
	ax_100 = 0xFFFD
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B7C:
	Mem101[ss:fp - 0x0008:word16] = dx_196
	Mem102[ss:fp - 0x000A:word16] = ax_100
	Mem104[ss:fp - 0x000C:word16] = Mem102[ds_63:0x29E5:word16]
	Mem106[ss:fp - 0x000E:word16] = Mem104[ds_63:0x29E3:word16]
	Mem108[ss:fp - 0x0010:word16] = Mem106[ss:fp - 0x0008:word16]
	Mem110[ss:fp - 0x0012:word16] = ax_100
	word16 ax_111 = Mem110[ds_63:0x2E73:word16]
	word16 dx_112 = Mem110[ds_63:0x2E71:word16]
	Mem113[ds_63:0x2E6F:word16] = ax_111
	Mem114[ds_63:0x2E6D:word16] = dx_112
	Mem116[ss:fp - 0x0014:word16] = ax_111
	Mem118[ss:fp - 0x0016:word16] = dx_112
	word16 di_124
	selector ds_125
	fn0800_4110(ds_63, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_124, out ds_125)
	word16 ax_128 = Mem118[ss:fp - 0x0008:word16]
	word16 v19_130 = Mem118[ss:fp - 0x0006:word16] - Mem118[ss:fp - 0x000A:word16]
	Mem131[ss:fp - 0x0006:word16] = v19_130
	word16 dx_134 = Mem131[ss:fp - 0x0006:word16]
	Mem136[ss:fp - 0x0004:word16] = Mem131[ss:fp - 0x0004:word16] - ax_128 - (v19_130 <u 0x0000)
	branch false l0800_5BCB
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BBA:
	branch false l0800_5BC1
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BBC:
	branch dx_134 <=u 0x0002 l0800_5BCB
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BC1:
	Mem190[ss:fp - 0x0004:word16] = 0x0000
	Mem191[ss:fp - 0x0006:word16] = 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BCB:
	Mem148[ss:fp - 0x000C:word16] = Mem136[ds_125:0x29E5:word16]
	Mem150[ss:fp - 0x000E:word16] = Mem148[ds_125:0x29E3:word16]
	Mem152[ss:fp - 0x0010:word16] = Mem150[ss:fp - 0x0004:word16]
	Mem154[ss:fp - 0x0012:word16] = Mem152[ss:fp - 0x0006:word16]
	word16 ax_156 = Mem154[ds_125:0x2E71:word16] + Mem154[ss:fp - 0x000A:word16]
	Mem159[ss:fp - 0x0014:word16] = Mem154[ds_125:0x2E73:word16]
	Mem161[ss:fp - 0x0016:word16] = ax_156
	word16 di_162
	selector ds_163
	*siOut = fn0800_4110(ds_125, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_162, out ds_163)
	Mem168[ss:fp - 0x000C:word16] = 0x0001
	word16 dx_172 = -Mem168[ss:fp - 0x0006:word16]
	Mem177[ss:fp - 0x000E:word16] = -Mem168[ss:fp - 0x0004:word16] - (dx_172 == 0x0000)
	Mem179[ss:fp - 0x0010:word16] = dx_172
	Mem181[ss:fp - 0x0012:word16] = Mem179[ds_163:0x29E5:word16]
	Mem183[ss:fp - 0x0014:word16] = Mem181[ds_163:0x29E3:word16]
	fn0800_ACB3(fp - 0x0002, ds_163, ptrArg00, wArg02, wArg08, out ds)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5B34:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5B2B:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5C0B:
	ptr32 es_bx_32 = Mem0[ds:0x2E6D:segptr32]
	Mem36[ds:0x2E6D:word16] = Mem0[ds:0x2E6D:word16] + 0x0001
	return Mem0[Mem0[es_bx_32:byte]:byte]
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5B15_exit:
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C1A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_5C1A_entry:
	*siOut = si
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C1A:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_5C30
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5C30:
	selector ds_33
	return fn0800_5C39(fp - 0x0002, ds, wArg02, out ds_33)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_5C27:
	selector ds_24
	return fn0800_5CD9(ds, wArg02, out ds_24)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

fn0800_5C1A_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C39(word16 bp, selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5C39_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C39:
	word16 si_15 = wArg02
	word16 di_101 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_5CCA:
	word16 si_100 = si_15
	branch si_15 == 0x0000 l0800_5CD1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CD1:
	return di_101
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5C39_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5CCE:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5C4D:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5CA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5C54:
	word16 si_93
	word16 di_94
	selector ds_95
	fn0800_5B15(fp - 0x0002, ds, out si_93, out di_94, out ds_95)
	Mem99[ss:fp - 0x0004:word16] = DPB(ax, 0x00, 8)
	fn0800_5B15(fp - 0x0002, ds_95, out si_100, out di_101, out ds)
	Mem106[ss:fp - 0x0006:word16] = DPB(ax, 0x00, 8)
	word16 dx_117
	word16 ax_118 = fn0800_8C69(DPB(ax, 0x00, 8), 0x18, 0x0000, bp, out dx_117)
	word16 ax_132 = ax_118 + (Mem106[ss:fp - 0x0006:word16] << 0x08)
	word16 ax_136 = ax_132 + Mem106[ss:fp - 0x0004:word16]
	Mem141[ds:0x29FD:word16] = dx_117 + DPB((word16) Mem106[ds:0x2E6D:segptr32], 0x00, 8) + (ax_118 <u 0x0000) + (ax_132 <u 0x0000) + (ax_136 <u 0x0000)
	Mem142[ds:0x29FB:word16] = ax_136
	Mem143[ds:0x2E45:word16] = 0x0010
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CA2:
	branch (Mem0[ds:0x29FB:word16] & 0x0001) == 0x0000 l0800_5CB0
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CAD:
	di_101 = di_101 | Mem0[ss:fp - 0x0008:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CB0:
	word16 ax_73 = Mem0[ds:0x29FD:word16]
	word16 dx_79 = __rcr(Mem0[ds:0x29FB:word16], 0x01, cond(ax_73 >>u 0x0001))
	Mem80[ds:0x29FD:word16] = ax_73 >>u 0x0001
	Mem81[ds:0x29FB:word16] = dx_79
	Mem84[ss:fp - 0x0008:word16] = Mem81[ss:fp - 0x0008:word16] << 0x0001
	Mem87[ds:0x2E45:word16] = Mem84[ds:0x2E45:word16] - 0x0001
	ax = ax_73 >>u 0x0001
	si_15 = si_100 - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)



word16 fn0800_5CD9(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5CD9_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5CD9:
	word16 di_14 = wArg02
	word16 si_15 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5D25:
	word16 di_32 = di_14
	branch di_14 != 0x0000 l0800_5CE5
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5CE5:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5D00
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5CEC:
	fn0800_5B15(fp - 0x0002, ds, out si_15, out di_32, out ds)
	Mem85[ds:0x29FD:word16] = 0x0000
	Mem86[ds:0x29FB:word16] = DPB(ax, 0x00, 8)
	Mem87[ds:0x2E45:word16] = 0x0008
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D00:
	si_15 = si_15 << 0x0001
	branch (Mem0[ds:0x29FB:word16] & 0x0080) == 0x0000 l0800_5D0E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D0D:
	si_15 = si_15 + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D0E:
	word16 dx_64 = Mem0[ds:0x29FB:word16]
	ax = __rcl(Mem0[ds:0x29FD:word16], 0x01, cond(dx_64 << 0x0001))
	Mem71[ds:0x29FD:word16] = ax
	Mem72[ds:0x29FB:word16] = dx_64 << 0x0001
	Mem74[ds:0x2E45:word16] = Mem72[ds:0x2E45:word16] - 0x0001
	di_14 = di_32 - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D29:
	return si_15
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_5CD9_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_5D2F(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_5D2F_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5D2F:
	word16 ax_101 = Mem0[ds:0x2E5B:word16]
	word16 dx_10 = Mem0[ds:0x2E59:word16]
	branch ax_101 != Mem0[ds:0x2E57:word16] l0800_5D9E
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5D40:
	branch dx_10 - 0x0001 != Mem0[ds:0x2E55:word16] l0800_5D9E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5D46:
	word16 dx_64 = 0xFFFF - Mem0[ds:0x2E31:word16]
	selector ds_79 = fn0800_4152(ds, Mem0[ds:0x2E59:word16] + Mem0[ds:0x2E31:word16], Mem0[ds:0x2E5B:word16], dx_64, 0x0000 - (dx_64 <u 0x0000), Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16])
	Mem82[ss:fp - 0x0004:word16] = Mem0[ds_79:0x2E31:word16]
	word16 ax_84 = Mem82[ds_79:0x2E55:word16] - Mem82[ds_79:0x2E31:word16]
	Mem87[ss:fp - 0x0006:word16] = Mem82[ds_79:0x2E57:word16]
	Mem89[ss:fp - 0x0008:word16] = ax_84
	Mem91[ss:fp - 0x000A:word16] = Mem89[ds_79:0x2E5B:word16]
	Mem93[ss:fp - 0x000C:word16] = Mem91[ds_79:0x2E59:word16]
	ds = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08)
	ax_101 = Mem93[ds:0x2E5B:word16]
	word16 dx_103 = Mem93[ds:0x2E59:word16] + Mem93[ds:0x2E31:word16]
	Mem105[ds:0x2E57:word16] = ax_101
	Mem106[ds:0x2E55:word16] = dx_103
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5D9E:
	Mem0[Mem0[Mem0[ds:0x2E55:segptr32]:byte]:byte] = Mem0[ss:fp + 0x0002:byte]
	Mem38[ds:0x2E55:word16] = Mem36[ds:0x2E55:word16] + 0x0001
	Mem53[ds:0x2E4D:word16] = Mem38[ds:((DPB(ax_101, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem38[ds:0x2E4D:word16] >>u 0x08
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5D2F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5DCE(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5DCE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5DCE:
	word16 ax_139
	word16 si_17
	selector ds_126
	word16 ax_19 = fn0800_4194(fp - 0x0002, ds, wArg02, wArg04, out si_17, out ds_126)
	word16 sp_128 = fp - 0x0004
	branch false l0800_5DEE
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5DE2:
	branch dx != 0x0000 l0800_5DE9
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DE4:
	branch ax_19 <u 0x0400 l0800_5DEE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DEE:
	Mem132[ss:fp - 0x0006:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem134[ss:fp - 0x0008:word16] = Mem132[ss:fp + 0x0002:word16]
	sp_128 = fp - 0x0004
	word16 si_135
	ax_139 = fn0800_4194(fp - 0x0002, ds_126, wArg00, wArg02, out si_135, out ds_126) & 0xFFFC
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DE9:
	ax_139 = 0x0400
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DFD:
	word16 si_33 = ax_139
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E5B:
	word16 si_42 = si_33
	branch si_33 != 0x0000 l0800_5E01
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E01:
	word16 sp_61 = sp_128 - 0x0002
	Mem62[ss:sp_61:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem64[ss:sp_61 - 0x0002:word16] = Mem62[ss:fp + 0x0002:word16]
	sp_128 = sp_61 + 0x0002
	word16 di_67
	branch fn0800_3E27(fp - 0x0002, ds_126, wArg00, wArg02, out si_42, out di_67, out ds_126) != 0x524E l0800_5E58
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E12:
	Mem83[ss:sp_61:word16] = Mem64[ss:fp + 0x0004:word16]
	Mem85[ss:sp_61 - 0x0002:word16] = Mem83[ss:fp + 0x0002:word16]
	word16 di_87
	selector ds_88
	branch (fn0800_3E27(fp - 0x0002, ds_126, wArg00, wArg02, out si_42, out di_87, out ds_88) & 0xFF00) != 0x4300 l0800_5E40
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E40:
	Mem115[ss:sp_61:word16] = 0x0001
	Mem119[ss:sp_61 - 0x0002:word16] = 0xFFFF
	Mem121[ss:sp_61 - 0x0004:word16] = 0xFFFE
	Mem123[ss:sp_61 - 0x0006:word16] = Mem121[ss:fp + 0x0004:word16]
	Mem125[ss:sp_61 - 0x0008:word16] = Mem123[ss:fp + 0x0002:word16]
	fn0800_ACB3(fp - 0x0002, ds_88, ptrArg00, wArg02, wArg08, out ds_126)
	sp_128 = sp_61 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E58:
	si_33 = si_42 - 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E26:
	Mem96[ss:sp_61:word16] = 0x0001
	Mem100[ss:sp_61 - 0x0002:word16] = 0xFFFF
	Mem102[ss:sp_61 - 0x0004:word16] = 0xFFFC
	Mem104[ss:sp_61 - 0x0006:word16] = Mem102[ss:fp + 0x0004:word16]
	Mem106[ss:sp_61 - 0x0008:word16] = Mem104[ss:fp + 0x0002:word16]
	selector ds_109
	fn0800_ACB3(fp - 0x0002, ds_88, ptrArg00, wArg02, wArg08, out ds_109)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_5E5F:
	return si_42
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_5DCE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_6AD4(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_6AD4_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6AD4:
	word16 ax_23 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_6B04
// DataOut: ax bp ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_6AF4:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_6AFC
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6AF6:
	branch ax_23 <u Mem0[ds:0x2A07:word16] l0800_6B04
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6B04:
	word16 wLoc1E_57 = Mem0[ds:0x29E5:word16]
	word16 wLoc20_59 = Mem0[ds:0x29E3:word16]
	selector ds_60
	branch fn0800_3E5D(fp - 0x0002, ds, wLoc20_59, wLoc1E_57, out ds_60) != 0x0000 l0800_6B1B
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B16:
	branch ax_23 == 0x03F3 l0800_6B23
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B23:
	Mem82[ss:fp - 0x001E:word16] = Mem0[ds_60:0x29E1:word16]
	Mem84[ss:fp - 0x0020:word16] = Mem82[ds_60:0x29DF:word16]
	Mem90[ss:fp - 0x0022:word16] = 0x0000
	Mem92[ss:fp - 0x0024:word16] = 0x03F3
	word16 ax_103 = 0x0000
	selector ds_102 = fn0800_409C(fp - 0x0002, ds_60, wArg02, wArg04, wArg06)
	word16 sp_104 = fp - 0x001C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B38:
	word16 sp_105 = sp_104 - 0x0002
	Mem106[ss:sp_105:word16] = Mem92[ds_102:0x29E5:word16]
	Mem108[ss:sp_105 - 0x0002:word16] = Mem106[ds_102:0x29E3:word16]
	selector ds_110
	word16 dx_111 = fn0800_3E5D(fp - 0x0002, ds_102, wArg00, wArg02, out ds_110)
	Mem114[ss:fp - 0x0008:word16] = dx_111
	Mem115[ss:fp - 0x000A:word16] = ax_103
	Mem116[ss:fp - 0x0004:word16] = dx_111
	Mem117[ss:fp - 0x0006:word16] = ax_103
	Mem119[ss:sp_105:word16] = Mem117[ds_110:0x29E1:word16]
	Mem121[ss:sp_105 - 0x0002:word16] = Mem119[ds_110:0x29DF:word16]
	Mem123[ss:sp_105 - 0x0004:word16] = Mem121[ss:fp - 0x0004:word16]
	Mem125[ss:sp_105 - 0x0006:word16] = ax_103
	ds_102 = fn0800_409C(fp - 0x0002, ds_110, wArg02, wArg04, wArg06)
	sp_104 = sp_105 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B84:
	word16 ax_131 = Mem125[ss:fp - 0x000A:word16]
	word16 dx_132 = Mem125[ss:fp - 0x0008:word16]
	word16 v18_133 = Mem125[ss:fp - 0x000A:word16] - 0x0001
	Mem134[ss:fp - 0x000A:word16] = v18_133
	Mem138[ss:fp - 0x0008:word16] = Mem134[ss:fp - 0x0008:word16] - (v18_133 <u 0x0000)
	word16 ax_139 = ax_131 | dx_132
	branch ax_139 != 0x0000 l0800_6B66
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B66:
	word16 sp_425 = sp_104 - 0x0002
	Mem426[ss:sp_425:word16] = Mem138[ds_102:0x29E1:word16]
	Mem428[ss:sp_425 - 0x0002:word16] = Mem426[ds_102:0x29DF:word16]
	Mem430[ss:sp_425 - 0x0004:word16] = Mem428[ds_102:0x29E5:word16]
	Mem432[ss:sp_425 - 0x0006:word16] = Mem430[ds_102:0x29E3:word16]
	selector ds_433
	Mem438[ss:sp_425 - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds_102, wArg00, wArg02, out ds_433)
	Mem440[ss:sp_425 - 0x0006:word16] = ax_139
	ds_102 = fn0800_409C(fp - 0x0002, ds_433, wArg02, wArg04, wArg06)
	sp_104 = sp_425 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B96:
	ax_103 = Mem138[ss:fp - 0x0006:word16] | Mem138[ss:fp - 0x0004:word16]
	branch ax_103 != 0x0000 l0800_6B38
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B9E:
	Mem148[ss:sp_104:word16] = Mem138[ds_102:0x29DF:word16]
	word16 sp_149 = sp_104 - 0x0002
	Mem150[ss:sp_149:word16] = Mem148[ds_102:0x29E5:word16]
	Mem152[ss:sp_149 - 0x0002:word16] = Mem150[ds_102:0x29E3:word16]
	selector ds_153
	ui32 dx_ax_157 = SEQ(fn0800_3E5D(fp - 0x0002, ds_102, wArg00, wArg02, out ds_153), ax_103 + 0x0001)
	Mem164[ss:sp_149:word16] = SLICE(dx_ax_157 + 0x00000001, word16, 16)
	word16 ax_160 = (word16) (dx_ax_157 + 0x00000001)
	Mem166[ss:sp_149 - 0x0002:word16] = ax_160
	selector ds_167 = fn0800_409C(fp - 0x0002, ds_153, wArg02, wArg04, wArg06)
	Mem171[ss:sp_149 + 0x0004:word16] = Mem166[ds_167:0x29E5:word16]
	Mem173[ss:sp_149 + 0x0002:word16] = Mem171[ds_167:0x29E3:word16]
	selector ds_174
	Mem178[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_167, wArg00, wArg02, out ds_174)
	Mem179[ss:fp - 0x000E:word16] = ax_160
	Mem181[ss:sp_149 + 0x0004:word16] = Mem179[ds_174:0x29E5:word16]
	Mem183[ss:sp_149 + 0x0002:word16] = Mem181[ds_174:0x29E3:word16]
	selector ds_184
	Mem187[ss:fp - 0x0010:word16] = fn0800_3E5D(fp - 0x0002, ds_174, wArg00, wArg02, out ds_184)
	Mem188[ss:fp - 0x0012:word16] = ax_160
	word16 dx_191 = Mem188[ss:fp - 0x0012:word16] - Mem188[ss:fp - 0x000E:word16]
	ui32 ax_dx_196 = SEQ(Mem188[ss:fp - 0x0010:word16] - Mem188[ss:fp - 0x000C:word16] - (dx_191 <u 0x0000), dx_191 + 0x0001)
	Mem202[ss:fp - 0x0014:word16] = SLICE(ax_dx_196 + 0x00000001, word16, 16)
	Mem203[ss:fp - 0x0016:word16] = (word16) (ax_dx_196 + 0x00000001)
	Mem205[ss:sp_149 + 0x0004:word16] = Mem203[ds_184:0x29E1:word16]
	Mem207[ss:sp_149 + 0x0002:word16] = Mem205[ds_184:0x29DF:word16]
	Mem209[ss:sp_149:word16] = Mem207[ss:fp - 0x000C:word16]
	Mem211[ss:sp_149 - 0x0002:word16] = Mem209[ss:fp - 0x000E:word16]
	selector ds_212 = fn0800_409C(fp - 0x0002, ds_184, wArg02, wArg04, wArg06)
	Mem215[ss:sp_149 + 0x0004:word16] = Mem211[ds_212:0x29E1:word16]
	Mem217[ss:sp_149 + 0x0002:word16] = Mem215[ds_212:0x29DF:word16]
	ui32 ax_dx_221 = SEQ(Mem217[ss:fp - 0x0010:word16], Mem217[ss:fp - 0x0012:word16] + 0x0001)
	word16 ax_224 = SLICE(ax_dx_221 + 0x00000001, word16, 16)
	Mem228[ss:sp_149:word16] = ax_224
	word16 dx_225 = (word16) (ax_dx_221 + 0x00000001)
	Mem230[ss:sp_149 - 0x0002:word16] = dx_225
	selector ds_231 = fn0800_409C(fp - 0x0002, ds_212, wArg02, wArg04, wArg06)
	Mem245[ss:fp - 0x0004:word16] = 0x0000
	word16 dx_240 = DPB(dx_225, 0x00, 8)
	Mem246[ss:fp - 0x0006:word16] = (DPB(ax_224, 0x00, 8) << 0x08) + dx_240 - 0x000C >>u 0x0002
	Mem248[ss:sp_149 + 0x0004:word16] = Mem246[ds_231:0x29E1:word16]
	Mem250[ss:sp_149 + 0x0002:word16] = Mem248[ds_231:0x29DF:word16]
	Mem255[ss:sp_149:word16] = 0x0000
	Mem257[ss:sp_149 - 0x0002:word16] = Mem255[ss:fp - 0x0006:word16]
	selector ds_258 = fn0800_409C(fp - 0x0002, ds_231, wArg02, wArg04, wArg06)
	Mem262[ss:sp_149 + 0x0004:word16] = Mem257[ds_258:0x29E1:word16]
	Mem264[ss:sp_149 + 0x0002:word16] = Mem262[ds_258:0x29DF:word16]
	word16 si_266
	word16 ax_267 = fn0800_AD2F(ds_258, ptrArg00, wArg02, out si_266)
	Mem270[ds_258:0x4E8E:word16] = dx_240
	Mem271[ds_258:0x4E8C:word16] = ax_267
	word16 dx_273 = Mem271[ss:fp - 0x0016:word16]
	Mem274[ss:fp - 0x0004:word16] = Mem271[ss:fp - 0x0014:word16]
	Mem275[ss:fp - 0x0006:word16] = dx_273
	word16 sp_268 = sp_149 + 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CAF:
	word16 ax_281 = Mem275[ss:fp - 0x0006:word16] | Mem275[ss:fp - 0x0004:word16]
	branch ax_281 != 0x0000 l0800_6C89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6C89:
	word16 sp_400 = sp_268 - 0x0002
	Mem401[ss:sp_400:word16] = Mem275[ds_258:0x29E1:word16]
	Mem403[ss:sp_400 - 0x0002:word16] = Mem401[ds_258:0x29DF:word16]
	Mem405[ss:sp_400 - 0x0004:word16] = Mem403[ds_258:0x29E5:word16]
	Mem407[ss:sp_400 - 0x0006:word16] = Mem405[ds_258:0x29E3:word16]
	selector ds_408
	dx_273 = fn0800_3E5D(fp - 0x0002, ds_258, wArg00, wArg02, out ds_408)
	Mem413[ss:sp_400 - 0x0004:word16] = dx_273
	Mem415[ss:sp_400 - 0x0006:word16] = ax_281
	ds_258 = fn0800_409C(fp - 0x0002, ds_408, wArg02, wArg04, wArg06)
	word16 v20_418 = Mem415[ss:fp - 0x0006:word16] - 0x0001
	Mem419[ss:fp - 0x0006:word16] = v20_418
	Mem423[ss:fp - 0x0004:word16] = Mem419[ss:fp - 0x0004:word16] - (v20_418 <u 0x0000)
	sp_268 = sp_400 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CB7:
	word16 sp_285 = sp_268 - 0x0002
	Mem286[ss:sp_285:word16] = Mem275[ds_258:0x29E1:word16]
	Mem288[ss:sp_285 - 0x0002:word16] = Mem286[ds_258:0x29DF:word16]
	byte dl_294 = Mem288[ds_258:0x2E76:byte]
	Mem302[ss:sp_285 - 0x0004:word16] = 0x0000
	Mem304[ss:sp_285 - 0x0006:word16] = (DPB(ax_281, 0x00, 8) << 0x08) + DPB(dx_273, 0x00, 8)
	Mem306[ss:sp_285 - 0x0008:word16] = ds_258
	Mem309[ss:sp_285 - 0x000A:word16] = 0x2E77
	selector ds_312 = fn0800_4152(ds_258, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6E93:
	Mem318[ss:sp_285:word16] = Mem309[ds_312:0x29E5:word16]
	Mem320[ss:sp_285 - 0x0002:word16] = Mem318[ds_312:0x29E3:word16]
	word16 si_321
	word16 ax_322 = fn0800_AD2F(ds_312, ptrArg00, wArg02, out si_321)
	byte al_323 = (byte) ax_322
	byte ah_324 = SLICE(ax_322, byte, 8)
	branch 0x0000 >=u Mem320[ds_312:0x2A09:word16] l0800_6EAA
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EAA:
	branch 0x0000 != Mem320[ds_312:0x2A09:word16] l0800_6EB5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EAC:
	branch ax_322 >=u Mem320[ds_312:0x2A07:word16] l0800_6EB5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EB5:
	return ds_312
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6EB2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EA7:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CE4:
	Mem334[ss:sp_285:word16] = Mem320[ds_312:0x29E5:word16]
	Mem336[ss:sp_285 - 0x0002:word16] = Mem334[ds_312:0x29E3:word16]
	selector ds_337
	Mem340[ss:fp - 0x0008:word16] = fn0800_3E5D(fp - 0x0002, ds_312, wArg00, wArg02, out ds_337)
	Mem341[ss:fp - 0x000A:word16] = ax_322
	word16 ax_342 = Mem341[ss:fp - 0x0008:word16]
	word16 dx_343 = Mem341[ss:fp - 0x000A:word16]
	Mem347[ss:fp - 0x001A:word16] = dx_343
	Mem348[ss:fp - 0x0018:word16] = ax_342 & 0x3FFF
	byte SZO_345 = cond(ax_342 & 0x3FFF)
	word16 cx_349 = 0x0007
	byte cl_350 = 0x07
	word16 bx_351 = 0x6EBC
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D0D:
	branch Mem348[0x0800:bx_351:word16] != Mem348[ss:fp - 0x000A:word16] l0800_6D1E
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D15:
	word16 ax_369 = Mem348[0x0800:bx_351 + 0x000E:word16]
	byte SCZO_370 = cond(ax_369 - Mem348[ss:fp - 0x0018:word16])
	branch ax_369 == Mem348[ss:fp - 0x0018:word16] l0800_6D26
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D26:
	selector ds_378
	call Mem348[0x0800:bx_351 + 0x001C:word16] (retsize: 4; depth: 4)
		uses: 0x00,ah_324,al_323,ax_369,bp,bx_352,cl_354,cx_353,dl_294,ds_337,dx_343,false,fp - 0x0002,SCZO_370,SCZO_370,si,si_321,sp_285 + 0x0002,ss,SZO_345,wLoc1E_57,wLoc20_59
		defs: ah_379,al_377,ax_381,bp_373,bx_389,C_386,cl_380,cx_388,dh_383,dl_382,ds_378,dx_384,SCZO_375,si_376,sp_372,ss_374,SZO_385,Z_387
	return ds_378
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D1E:
	cx_349 = cx_349 - 0x0001
	bx_351 = bx_351 + 0x0002
	cl_350 = (byte) cx_349 (alias)
	branch cx_349 != 0x0000 l0800_6D0D
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D23:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6E8B:
	return ds_337
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6B1B:
	return ds_60
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp

l0800_6AFC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp

fn0800_6AD4_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_75EA(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_75EA_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_75EA:
	Mem14[ds:0x4680:word16] = wArg04
	Mem16[ds:0x467E:word16] = wArg02
	Mem17[ds:0x2A05:word16] = wArg04
	Mem18[ds:0x2A03:word16] = wArg02
	Mem19[ds:0x4678:word16] = wArg04
	Mem20[ds:0x4676:word16] = wArg02
	ui32 ax_dx_26 = SEQ(wArg08, wArg06 - 0x0012)
	Mem31[ds:0x4E86:word16] = SLICE(ax_dx_26 - 0x00000012, word16, 16)
	Mem32[ds:0x4E84:word16] = (word16) (ax_dx_26 - 0x00000012)
	branch Mem32[ds:0x4680:word16] >u 0x0000 l0800_7634
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_7626:
	branch Mem32[ds:0x4680:word16] == 0x0000 l0800_762B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_762B:
	branch wArg02 >u 0x0012 l0800_7634
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_7634:
	Mem61[ds:0x2E49:word16] = 0x0000
	Mem62[ds:0x465C:word16] = 0x0000
	Mem63[ds:0x4668:word16] = 0x0000
	Mem64[ds:0x4666:word16] = 0x0000
	Mem65[ds:0x2A05:word16] = 0x0000
	Mem66[ds:0x2A03:word16] = 0x0000
	Mem67[ds:0x2A01:word16] = 0x0000
	Mem68[ds:0x29FF:word16] = 0x0000
	Mem69[ds:0x467C:word16] = 0x0000
	Mem70[ds:0x467A:word16] = 0x0000
	Mem71[ds:0x4674:word16] = 0x0000
	Mem72[ds:0x4672:word16] = 0x0000
	Mem73[ds:0x2E43:word16] = 0x0000
	Mem74[ds:0x2E45:word16] = 0x0000
	Mem75[ds:0x4E82:word16] = 0x0000
	Mem76[ds:0x4E8A:word16] = 0x0000
	Mem77[ds:0x4E88:word16] = 0x0000
	Mem78[ds:0x29F9:word16] = 0x0000
	Mem79[ds:0x29F7:word16] = 0x0000
	selector ds_86 = fn0800_4311(ds, 0x000F, 0x0001)
	Mem89[ss:fp - 0x0016:word16] = 0x000F
	Mem90[ss:fp - 0x0018:word16] = 0x0001
	Mem93[ds_86:0x2E73:word16] = 0x0010
	Mem94[ds_86:0x2E71:word16] = 0x0000
	Mem98[ss:fp - 0x001C:word16] = 0x0001
	Mem100[ss:fp - 0x001E:word16] = 0x0010
	selector ds_102 = fn0800_4311(ds_86, wArg00, wArg02)
	Mem105[ss:fp - 0x0012:word16] = 0x0010
	Mem106[ss:fp - 0x0014:word16] = 0x0001
	Mem109[ds_102:0x2E39:word16] = 0x0011
	Mem110[ds_102:0x2E37:word16] = 0x0000
	Mem114[ss:fp - 0x001C:word16] = 0x0001
	Mem116[ss:fp - 0x001E:word16] = 0x0010
	selector ds_117 = fn0800_4311(ds_102, wArg00, wArg02)
	Mem120[ss:fp - 0x000E:word16] = 0x0010
	Mem121[ss:fp - 0x0010:word16] = 0x0001
	Mem124[ds_117:0x2E35:word16] = 0x0011
	Mem125[ds_117:0x2E33:word16] = 0x0000
	Mem129[ss:fp - 0x001C:word16] = 0x0001
	Mem131[ss:fp - 0x001E:word16] = 0x0010
	selector ds_132 = fn0800_4311(ds_117, wArg00, wArg02)
	Mem135[ss:fp - 0x000A:word16] = 0x0010
	Mem136[ss:fp - 0x000C:word16] = 0x0001
	Mem139[ds_132:0x2E41:word16] = 0x0011
	Mem140[ds_132:0x2E3F:word16] = 0x0000
	Mem144[ss:fp - 0x001C:word16] = 0x0001
	Mem146[ss:fp - 0x001E:word16] = 0x0010
	selector ds_147 = fn0800_4311(ds_132, wArg00, wArg02)
	Mem150[ss:fp - 0x0006:word16] = 0x0010
	Mem151[ss:fp - 0x0008:word16] = 0x0001
	Mem154[ds_147:0x2E3D:word16] = 0x0011
	Mem155[ds_147:0x2E3B:word16] = 0x0000
	fn0800_87F8(ds_147)
	Mem157[ss:fp - 0x001C:word16] = Mem155[ds_147:0x29E5:word16]
	Mem159[ss:fp - 0x001E:word16] = Mem157[ds_147:0x29E3:word16]
	word16 si_161
	word16 ax_162 = fn0800_AD2F(ds_147, ptrArg00, wArg02, out si_161)
	Mem165[ds_147:0x4664:word16] = 0x0011
	Mem166[ds_147:0x4662:word16] = ax_162
	Mem168[ss:fp - 0x001C:word16] = Mem166[ds_147:0x29E1:word16]
	Mem170[ss:fp - 0x001E:word16] = Mem168[ds_147:0x29DF:word16]
	word16 si_171
	word16 ax_172 = fn0800_AD2F(ds_147, ptrArg00, wArg02, out si_171)
	Mem174[ds_147:0x4660:word16] = 0x0011
	Mem175[ds_147:0x465E:word16] = ax_172
	Mem177[ss:fp - 0x001C:word16] = Mem175[ds_147:0x29E1:word16]
	Mem179[ss:fp - 0x001E:word16] = Mem177[ds_147:0x29DF:word16]
	int32 dx_ax_184 = SEQ(0x0011, (word16) (int32) Mem179[ds_147:0x2A21:word16] + 0x4300)
	Mem191[ss:fp - 0x0020:word16] = SLICE(dx_ax_184 + 0x524E4300, word16, 16)
	Mem193[ss:fp - 0x0022:word16] = (word16) (dx_ax_184 + 0x524E4300)
	selector ds_194 = fn0800_409C(fp - 0x0002, ds_147, wArg02, wArg04, wArg06)
	Mem198[ss:fp - 0x001C:word16] = Mem193[ds_194:0x29E1:word16]
	Mem200[ss:fp - 0x001E:word16] = Mem198[ds_194:0x29DF:word16]
	Mem202[ss:fp - 0x0020:word16] = Mem200[ds_194:0x4680:word16]
	Mem204[ss:fp - 0x0022:word16] = Mem202[ds_194:0x467E:word16]
	selector ds_205 = fn0800_409C(fp - 0x0002, ds_194, wArg02, wArg04, wArg06)
	Mem208[ss:fp - 0x001C:word16] = Mem204[ds_205:0x29E1:word16]
	Mem210[ss:fp - 0x001E:word16] = Mem208[ds_205:0x29DF:word16]
	Mem215[ss:fp - 0x0020:word16] = 0x0000
	Mem217[ss:fp - 0x0022:word16] = 0x0000
	selector ds_218 = fn0800_409C(fp - 0x0002, ds_205, wArg02, wArg04, wArg06)
	Mem221[ss:fp - 0x001C:word16] = Mem217[ds_218:0x29E1:word16]
	Mem223[ss:fp - 0x001E:word16] = Mem221[ds_218:0x29DF:word16]
	Mem228[ss:fp - 0x0020:word16] = 0x0000
	selector ds_229 = fn0800_401E(fp - 0x0002, ds_218, wArg00, wArg02, wArg04)
	Mem232[ss:fp - 0x001C:word16] = Mem228[ds_229:0x29E1:word16]
	Mem234[ss:fp - 0x001E:word16] = Mem232[ds_229:0x29DF:word16]
	Mem239[ss:fp - 0x0020:word16] = 0x0000
	selector ds_240 = fn0800_401E(fp - 0x0002, ds_229, wArg00, wArg02, wArg04)
	Mem243[ss:fp - 0x001C:word16] = Mem239[ds_240:0x29E1:word16]
	Mem245[ss:fp - 0x001E:word16] = Mem243[ds_240:0x29DF:word16]
	Mem250[ss:fp - 0x0020:word16] = 0x0000
	selector ds_251 = fn0800_401E(fp - 0x0002, ds_240, wArg00, wArg02, wArg04)
	Mem255[ss:fp - 0x001C:word16] = ds_251
	Mem258[ss:fp - 0x001E:word16] = 0x2240
	word16 di_259
	fn0800_B2EF(ds_251, wArg00, wArg02, out di_259)
	Mem263[ss:fp - 0x0004:word16] = Mem258[ds_251:0x2E4F:word16]
	Mem269[ss:fp - 0x001C:word16] = 0x0001
	word16 ax_264 = 0x0001
	branch Mem269[ds_251:0x2A1F:word16] == 0x0000 l0800_7808
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7808:
	ax_264 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7806:
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_780A:
	Mem276[ss:fp - 0x001E:word16] = ax_264
	selector ds_277 = fn0800_8465(ds_251, wArg00, wArg02)
	Mem284[ss:fp - 0x001C:word16] = 0x0001
	word16 ax_279 = 0x0001
	branch Mem284[ds_277:0x2E4F:word16] == 0x0000 l0800_781E
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781E:
	ax_279 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781C:
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7820:
	Mem294[ss:fp - 0x001E:word16] = ax_279
	selector ds_295 = fn0800_8465(ds_277, wArg00, wArg02)
	word16 sp_296 = fp - 0x001A
	branch Mem294[ds_295:0x2A23:word16] == 0x0001 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_782E:
	branch Mem294[ds_295:0x2E4F:word16] == 0x0000 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7835:
	Mem583[ss:fp - 0x001C:word16] = 0x0010
	Mem585[ss:fp - 0x001E:word16] = Mem583[ds_295:0x2E4F:word16]
	ds_295 = fn0800_8465(ds_295, wArg00, wArg02)
	sp_296 = fp - 0x001A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7843:
	word16 ax_301 = Mem294[ds_295:0x2A21:word16]
	branch ax_301 == 0x0001 l0800_7852
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7852:
	ds_295 = fn0800_7A02(fp - 0x0002, ds_295)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_784B:
	branch ax_301 == 0x0002 l0800_7857
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7857:
	ds_295 = fn0800_7C78(fp - 0x0002, ds_295)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7850:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785A:
	word16 si_310 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7870:
	branch Mem294[ds_295:0x4E82:word16] != 0x0000 l0800_785E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785E:
	ax_301 = DPB(ax_301, Mem294[ds_295:si_310 + 0x4682:byte], 0) (alias)
	word16 sp_565 = sp_296 - 0x0002
	Mem566[ss:sp_565:word16] = ax_301
	word16 di_567
	si_310 = fn0800_8624(ds_295, bArg00, out di_567, out ds_295)
	Mem573[ds_295:0x4E82:word16] = Mem566[ds_295:0x4E82:word16] - 0x0001
	sp_296 = sp_565 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7877:
	Mem325[ds_295:0x2E4F:word16] = Mem294[ss:fp - 0x0004:word16]
	word16 dx_328 = Mem325[ds_295:0x467E:word16] - Mem325[ds_295:0x2A03:word16]
	word16 ax_332 = Mem325[ds_295:0x4680:word16] - Mem325[ds_295:0x2A05:word16] - (dx_328 <u 0x0000)
	branch ax_332 >u Mem325[ds_295:0x4E8A:word16] l0800_78B3
// DataOut: ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7892:
	branch ax_332 <u Mem325[ds_295:0x4E8A:word16] l0800_789A
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7894:
	branch dx_328 >=u Mem325[ds_295:0x4E88:word16] l0800_78B3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78B3:
	Mem543[ds_295:0x4E8A:word16] = 0x0000
	Mem544[ds_295:0x4E88:word16] = 0x0000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_789A:
	dx_328 = Mem325[ds_295:0x467E:word16] - Mem325[ds_295:0x2A03:word16]
	word16 ax_550 = Mem325[ds_295:0x4680:word16] - Mem325[ds_295:0x2A05:word16] - (dx_328 <u 0x0000)
	word16 v15_551 = Mem325[ds_295:0x4E88:word16] - dx_328
	Mem552[ds_295:0x4E88:word16] = v15_551
	Mem556[ds_295:0x4E8A:word16] = Mem552[ds_295:0x4E8A:word16] - ax_550 - (v15_551 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78BF:
	branch Mem325[ds_295:0x2A21:word16] != 0x0002 l0800_78D0
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78C6:
	word16 v20_534 = Mem325[ds_295:0x4E88:word16] + 0x0002
	Mem535[ds_295:0x4E88:word16] = v20_534
	Mem539[ds_295:0x4E8A:word16] = Mem535[ds_295:0x4E8A:word16] + (v20_534 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78D0:
	word16 sp_345 = sp_296 - 0x0002
	Mem346[ss:sp_345:word16] = Mem325[ds_295:0x29DF:word16]
	word16 si_347
	word16 ax_350 = fn0800_AD2F(ds_295, ptrArg00, wArg02, out si_347) - Mem346[ds_295:0x465E:word16]
	Mem354[ds_295:0x2A05:word16] = dx_328 - Mem346[ds_295:0x4660:word16] - (ax_350 <u 0x0000)
	Mem355[ds_295:0x2A03:word16] = ax_350
	Mem358[ss:sp_345 + 0x0002:word16] = 0x0000
	ui32 ax_dx_362 = SEQ(Mem358[ds_295:0x4660:word16], Mem358[ds_295:0x465E:word16] + 0x0008)
	Mem369[ss:sp_345:word16] = SLICE(ax_dx_362 + 0x00000008, word16, 16)
	Mem371[ss:sp_345 - 0x0002:word16] = (word16) (ax_dx_362 + 0x00000008)
	Mem373[ss:sp_345 - 0x0004:word16] = Mem371[ds_295:0x29E1:word16]
	Mem375[ss:sp_345 - 0x0006:word16] = Mem373[ds_295:0x29DF:word16]
	selector ds_376
	fn0800_ACB3(fp - 0x0002, ds_295, ptrArg00, wArg02, wArg08, out ds_376)
	Mem380[ss:sp_345 + 0x0002:word16] = Mem375[ds_376:0x29E1:word16]
	Mem382[ss:sp_345:word16] = Mem380[ds_376:0x29DF:word16]
	ui32 ax_dx_386 = SEQ(Mem382[ds_376:0x2A05:word16], Mem382[ds_376:0x2A03:word16] - 0x0012)
	word16 ax_389 = SLICE(ax_dx_386 - 0x00000012, word16, 16)
	Mem393[ss:sp_345 - 0x0002:word16] = ax_389
	Mem395[ss:sp_345 - 0x0004:word16] = (word16) (ax_dx_386 - 0x00000012)
	selector ds_396 = fn0800_409C(fp - 0x0002, ds_376, wArg02, wArg04, wArg06)
	Mem400[ss:sp_345 + 0x0002:word16] = Mem395[ds_396:0x29E1:word16]
	Mem402[ss:sp_345:word16] = Mem400[ds_396:0x29DF:word16]
	Mem404[ss:sp_345 - 0x0002:word16] = Mem402[ds_396:0x2E4B:word16]
	selector ds_405 = fn0800_401E(fp - 0x0002, ds_396, wArg00, wArg02, wArg04)
	Mem409[ss:sp_345 + 0x0002:word16] = Mem404[ds_405:0x29E1:word16]
	Mem411[ss:sp_345:word16] = Mem409[ds_405:0x29DF:word16]
	Mem413[ss:sp_345 - 0x0002:word16] = Mem411[ds_405:0x2E49:word16]
	selector ds_414 = fn0800_401E(fp - 0x0002, ds_405, wArg00, wArg02, wArg04)
	Mem418[ss:sp_345 + 0x0002:word16] = Mem413[ds_414:0x29E1:word16]
	Mem420[ss:sp_345:word16] = Mem418[ds_414:0x29DF:word16]
	Mem424[ss:sp_345 - 0x0002:word16] = DPB(ax_389, Mem420[ds_414:0x4E88:byte], 0)
	selector ds_427
	fn0800_4047(ds_414, bArg00, ptrArg02, wArg04, out ds_427)
	Mem432[ss:sp_345 + 0x0002:word16] = Mem424[ds_427:0x29E1:word16]
	Mem434[ss:sp_345:word16] = Mem432[ds_427:0x29DF:word16]
	Mem438[ss:sp_345 - 0x0002:word16] = DPB(ax_389, Mem434[ds_427:0x29F7:byte], 0)
	selector ds_439
	fn0800_4047(ds_427, bArg00, ptrArg02, wArg04, out ds_439)
	Mem444[ss:sp_345 + 0x0002:word16] = 0x0000
	word16 dx_447 = Mem444[ds_439:0x465E:word16] + Mem444[ds_439:0x2A03:word16]
	Mem453[ss:sp_345:word16] = Mem444[ds_439:0x4660:word16] + Mem444[ds_439:0x2A05:word16] + (dx_447 <u 0x0000)
	Mem455[ss:sp_345 - 0x0002:word16] = dx_447
	Mem457[ss:sp_345 - 0x0004:word16] = Mem455[ds_439:0x29E1:word16]
	Mem459[ss:sp_345 - 0x0006:word16] = Mem457[ds_439:0x29DF:word16]
	selector ds_460
	fn0800_ACB3(fp - 0x0002, ds_439, ptrArg00, wArg02, wArg08, out ds_460)
	Mem465[ss:sp_345 + 0x0002:word16] = 0x0000
	word16 dx_468 = Mem465[ds_460:0x4662:word16] + Mem465[ds_460:0x467E:word16]
	Mem474[ss:sp_345:word16] = Mem465[ds_460:0x4664:word16] + Mem465[ds_460:0x4680:word16] + (dx_468 <u 0x0000)
	Mem476[ss:sp_345 - 0x0002:word16] = dx_468
	Mem478[ss:sp_345 - 0x0004:word16] = Mem476[ds_460:0x29E5:word16]
	Mem480[ss:sp_345 - 0x0006:word16] = Mem478[ds_460:0x29E3:word16]
	selector ds_481
	fn0800_ACB3(fp - 0x0002, ds_460, ptrArg00, wArg02, wArg08, out ds_481)
	Mem486[ss:sp_345 + 0x0002:word16] = Mem480[ss:fp - 0x0016:word16]
	Mem488[ss:sp_345:word16] = Mem486[ss:fp - 0x0018:word16]
	selector ds_489
	fn0800_4346(ds_481, wArg00, wArg02, out ds_489)
	Mem494[ss:sp_345 + 0x0002:word16] = Mem488[ss:fp - 0x0012:word16]
	Mem496[ss:sp_345:word16] = Mem494[ss:fp - 0x0014:word16]
	selector ds_497
	fn0800_4346(ds_489, wArg00, wArg02, out ds_497)
	Mem502[ss:sp_345 + 0x0002:word16] = Mem496[ss:fp - 0x000E:word16]
	Mem504[ss:sp_345:word16] = Mem502[ss:fp - 0x0010:word16]
	selector ds_505
	fn0800_4346(ds_497, wArg00, wArg02, out ds_505)
	Mem510[ss:sp_345 + 0x0002:word16] = Mem504[ss:fp - 0x000A:word16]
	Mem512[ss:sp_345:word16] = Mem510[ss:fp - 0x000C:word16]
	selector ds_513
	fn0800_4346(ds_505, wArg00, wArg02, out ds_513)
	Mem518[ss:sp_345 + 0x0002:word16] = Mem512[ss:fp - 0x0006:word16]
	Mem520[ss:sp_345:word16] = Mem518[ss:fp - 0x0008:word16]
	fn0800_4346(ds_513, wArg00, wArg02, out ds)
	Mem526[ss:sp_345 + 0x0002:word16] = ds
	Mem529[ss:sp_345:word16] = 0x223C
	word16 di_530
	fn0800_B2EF(ds, wArg00, wArg02, out di_530)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp

l0800_7631:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_7628:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_79FD:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp

fn0800_75EA_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp



selector fn0800_7A02(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7A02_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7A02:
	word16 sp_25 = fp - 0x0008
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7C1A:
	word16 ax_27 = Mem0[ds:0x467C:word16]
	word16 dx_28 = Mem0[ds:0x467A:word16]
	branch ax_27 >=u Mem0[ds:0x4680:word16] l0800_7C2A
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C2A:
	branch ax_27 != Mem0[ds:0x4680:word16] l0800_7C35
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C2C:
	branch dx_28 >=u Mem0[ds:0x467E:word16] l0800_7C35
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C35:
	Mem419[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] >>u 0x10 - Mem0[ds:0x2E45:byte]
	branch Mem419[ds:0x2E45:word16] != 0x0000 l0800_7C4D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C46:
	branch Mem419[ds:0x4E82:word16] == 0x0000 l0800_7C57
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C4D:
	word16 sp_459 = sp_25 - 0x0002
	Mem460[ss:sp_459:word16] = DPB(ax_27, Mem419[ds:0x2E43:byte], 0)
	word16 di_461
	fn0800_8624(ds, bArg00, out di_461, out ds)
	sp_25 = sp_459 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C57:
	branch Mem419[ds:0x2E45:word16] >u 0x0008 l0800_7C65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C5E:
	branch Mem419[ds:0x4E82:word16] == 0x0000 l0800_7C73
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C65:
	Mem448[ss:sp_25 - 0x0002:word16] = Mem419[ds:0x2E43:word16] >>u 0x08
	word16 di_449
	fn0800_8624(ds, bArg00, out di_449, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7C73:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7A02_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7C32:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C27:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7A19:
	word16 sp_35 = sp_25 - 0x0002
	Mem36[ss:sp_35:word16] = 0x0010
	Mem39[ss:sp_35 - 0x0002:word16] = ds
	Mem42[ss:sp_35 - 0x0004:word16] = 0x284F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	Mem50[ss:sp_35:word16] = 0x0010
	Mem52[ss:sp_35 - 0x0002:word16] = ds
	Mem55[ss:sp_35 - 0x0004:word16] = 0x278F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	Mem60[ss:sp_35:word16] = 0x0010
	Mem62[ss:sp_35 - 0x0002:word16] = ds
	Mem65[ss:sp_35 - 0x0004:word16] = 0x290F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	selector ds_68 = fn0800_7FDC(fp - 0x0002, ds)
	Mem73[ss:sp_35:word16] = 0x0000
	Mem75[ss:sp_35 - 0x0002:word16] = Mem73[ss:fp - 0x0004:word16]
	Mem77[ss:sp_35 - 0x0004:word16] = Mem75[ss:fp - 0x0006:word16]
	Mem79[ss:sp_35 - 0x0006:word16] = Mem77[ds_68:0x29E5:word16]
	Mem81[ss:sp_35 - 0x0008:word16] = Mem79[ds_68:0x29E3:word16]
	selector ds_84
	fn0800_ACB3(fp - 0x0002, ds_68, ptrArg00, psegArg02, wArg08, out ds_84)
	Mem90[ss:sp_35:word16] = 0x0010
	Mem92[ss:sp_35 - 0x0002:word16] = ds_84
	Mem95[ss:sp_35 - 0x0004:word16] = 0x290F
	fn0800_441C(fp - 0x0002, ds_84, ptrArg00, psegArg02, wArg04)
	Mem100[ss:sp_35:word16] = 0x0010
	Mem102[ss:sp_35 - 0x0002:word16] = ds_84
	Mem105[ss:sp_35 - 0x0004:word16] = 0x284F
	fn0800_441C(fp - 0x0002, ds_84, ptrArg00, psegArg02, wArg04)
	Mem110[ss:sp_35:word16] = 0x0010
	Mem112[ss:sp_35 - 0x0002:word16] = ds_84
	Mem115[ss:sp_35 - 0x0004:word16] = 0x278F
	fn0800_441C(fp - 0x0002, ds_84, ptrArg00, psegArg02, wArg04)
	Mem120[ss:sp_35:word16] = 0x0010
	Mem122[ss:sp_35 - 0x0002:word16] = ds_84
	Mem125[ss:sp_35 - 0x0004:word16] = 0x290F
	selector ds_126 = fn0800_83A1(fp - 0x0002, ds_84, ptrArg00, wArg04)
	Mem131[ss:sp_35:word16] = 0x0010
	Mem133[ss:sp_35 - 0x0002:word16] = ds_126
	Mem136[ss:sp_35 - 0x0004:word16] = 0x284F
	selector ds_137 = fn0800_83A1(fp - 0x0002, ds_126, ptrArg00, wArg04)
	Mem142[ss:sp_35:word16] = 0x0010
	Mem144[ss:sp_35 - 0x0002:word16] = ds_137
	Mem147[ss:sp_35 - 0x0004:word16] = 0x278F
	selector ds_148 = fn0800_83A1(fp - 0x0002, ds_137, ptrArg00, wArg04)
	Mem153[ss:sp_35:word16] = 0x0010
	Mem155[ss:sp_35 - 0x0002:word16] = Mem153[ds_148:0x466A:word16]
	ds = fn0800_8489(fp - 0x0002, ds_148, wArg00)
	word16 sp_157 = sp_35 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BC0:
	word16 ax_165 = Mem155[ds:0x466A:word16]
	word16 dx_166 = Mem155[ds:0x466C:word16]
	word16 v13_167 = Mem155[ds:0x466A:word16] - 0x0001
	Mem168[ds:0x466A:word16] = v13_167
	Mem172[ds:0x466C:word16] = Mem168[ds:0x466C:word16] - (v13_167 <u 0x0000)
	branch (ax_165 | dx_166) == 0x0000 l0800_7BD8
	word16 ax_176 = Mem172[ds:0x466A:word16]
	word16 dx_177 = Mem172[ds:0x466C:word16]
	word16 v30_178 = Mem172[ds:0x466A:word16] - 0x0001
	Mem179[ds:0x466A:word16] = v30_178
	Mem183[ds:0x466C:word16] = Mem179[ds:0x466C:word16] - (v30_178 <u 0x0000)
	word16 ax_184 = ax_176 | dx_177
	branch ax_184 == 0x0000 l0800_7BD8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BD8:
	branch Mem183[ds:0x2E45:word16] != 0x0000 l0800_7BFC
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BDF:
	word16 si_387 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BF5:
	branch Mem183[ds:0x4E82:word16] != 0x0000 l0800_7BE3
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BE3:
	al = Mem183[ds:si_387 + 0x4682:byte]
	ax_184 = DPB(ax_184, al, 0) (alias)
	word16 sp_405 = sp_157 - 0x0002
	Mem406[ss:sp_405:word16] = ax_184
	word16 di_407
	si_387 = fn0800_8624(ds, bArg00, out di_407, out ds)
	Mem413[ds:0x4E82:word16] = Mem406[ds:0x4E82:word16] - 0x0001
	sp_157 = sp_405 + 0x0002
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BFC:
	word16 v21_370 = Mem183[ds:0x29F7:word16] + 0x0001
	Mem371[ds:0x29F7:word16] = v21_370
	Mem375[ds:0x29F9:word16] = Mem371[ds:0x29F9:word16] + (v21_370 <u 0x0000)
	word16 sp_377 = sp_157 - 0x0002
	Mem378[ss:sp_377:word16] = Mem375[ds:0x29E5:word16]
	Mem380[ss:sp_377 - 0x0002:word16] = Mem378[ds:0x29E3:word16]
	word16 si_381
	word16 ax_382 = fn0800_AD2F(ds, ptrArg00, psegArg02, out si_381)
	Mem385[ss:fp - 0x0004:word16] = dx_177
	Mem386[ss:fp - 0x0006:word16] = ax_382
	sp_25 = sp_377 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> si:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BD5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7ACB:
	word16 sp_188 = sp_157 - 0x0002
	Mem189[ss:sp_188:word16] = Mem183[ds:0x29DD:word16]
	Mem191[ss:sp_188 - 0x0002:word16] = Mem189[ds:0x29DB:word16]
	word16 si_192
	word16 di_193
	selector ds_194
	word16 ax_195 = fn0800_3E27(fp - 0x0002, ds, wArg00, psegArg02, out si_192, out di_193, out ds_194)
	Mem197[ds_194:0x2E47:word16] = ax_195
	word16 v18_198 = Mem197[ds_194:0x467A:word16] + ax_195
	Mem199[ds_194:0x467A:word16] = v18_198
	Mem203[ds_194:0x467C:word16] = Mem199[ds_194:0x467C:word16] + (v18_198 <u 0x0000)
	Mem206[ss:sp_188:word16] = ds_194
	Mem209[ss:sp_188 - 0x0002:word16] = 0x290F
	Mem211[ss:sp_188 - 0x0004:word16] = Mem209[ds_194:0x2E47:word16]
	ds = fn0800_8407(fp - 0x0002, ds_194, wArg00, ptrArg02)
	sp_157 = sp_188 + 0x0002
	branch Mem211[ds:0x2E47:word16] == 0x0000 l0800_7B56
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7AFB:
	branch Mem211[ds:0x2E45:word16] == 0x0000 l0800_7B32
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B32:
	word16 ax_341 = Mem211[ds:0x2E47:word16]
	Mem343[ds:0x2E47:word16] = Mem211[ds:0x2E47:word16] - 0x0001
	branch ax_341 != 0x0000 l0800_7B24
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B24:
	selector ds_348 = fn0800_8359(ds)
	al = al ^ Mem343[ds_348:0x2E4F:byte]
	word16 sp_353 = sp_157 - 0x0002
	Mem354[ss:sp_353:word16] = DPB(ax_341, al, 0)
	word16 di_356
	fn0800_8624(ds_348, bArg00, out di_356, out ds)
	sp_157 = sp_353 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B17:
	word16 ax_320 = Mem211[ds:0x2E47:word16]
	Mem322[ds:0x2E47:word16] = Mem211[ds:0x2E47:word16] - 0x0001
	branch ax_320 != 0x0000 l0800_7B04
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B04:
	ds = fn0800_8359(ds)
	al = al ^ Mem322[ds:0x2E4F:byte]
	Mem331[ds:Mem322[ds:0x4E82:word16] + 0x4682:byte] = al
	Mem333[ds:0x4E82:word16] = Mem331[ds:0x4E82:word16] + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B22:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B3D:
	branch (Mem211[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
	branch (Mem211[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B52:
	Mem315[ds:0x2E4F:word16] = Mem211[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B45:
	Mem307[ds:0x2E4F:word16] = Mem211[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem313[ds:0x2E4F:word16] = Mem307[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B56:
	branch (Mem211[ds:0x466A:word16] | Mem211[ds:0x466C:word16]) == 0x0000 l0800_7BC0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B5F:
	word16 sp_229 = sp_157 - 0x0002
	Mem230[ss:sp_229:word16] = Mem211[ds:0x29DD:word16]
	Mem232[ss:sp_229 - 0x0002:word16] = Mem230[ds:0x29DB:word16]
	word16 si_233
	word16 di_234
	selector ds_235
	word16 ax_236 = fn0800_3E27(fp - 0x0002, ds, wArg00, psegArg02, out si_233, out di_234, out ds_235)
	Mem239[ds_235:0x2E29:word16] = ax_236
	Mem241[ss:sp_229:word16] = Mem239[ds_235:0x29DD:word16]
	Mem243[ss:sp_229 - 0x0002:word16] = Mem241[ds_235:0x29DB:word16]
	word16 si_244
	word16 di_245
	selector ds_246
	word16 ax_247 = fn0800_3E27(fp - 0x0002, ds_235, wArg00, psegArg02, out si_244, out di_245, out ds_246)
	Mem250[ds_246:0x2E2B:word16] = ax_247
	Mem252[ss:sp_229:word16] = ds_246
	Mem255[ss:sp_229 - 0x0002:word16] = 0x284F
	Mem257[ss:sp_229 - 0x0004:word16] = Mem255[ds_246:0x2E2B:word16]
	selector ds_258 = fn0800_8407(fp - 0x0002, ds_246, wArg00, ptrArg02)
	Mem262[ss:sp_229:word16] = ds_258
	Mem265[ss:sp_229 - 0x0002:word16] = 0x278F
	Mem267[ss:sp_229 - 0x0004:word16] = Mem265[ds_258:0x2E29:word16]
	ds = fn0800_8407(fp - 0x0002, ds_258, wArg00, ptrArg02)
	Mem271[ds:0x2E29:word16] = Mem267[ds:0x2E29:word16] + 0x0002
	word16 v24_273 = Mem271[ds:0x467A:word16] + Mem271[ds:0x2E29:word16]
	Mem274[ds:0x467A:word16] = v24_273
	Mem278[ds:0x467C:word16] = Mem274[ds:0x467C:word16] + (v24_273 <u 0x0000)
	sp_157 = sp_229 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BB5:
	word16 ax_281 = Mem278[ds:0x2E29:word16]
	Mem283[ds:0x2E29:word16] = Mem278[ds:0x2E29:word16] - 0x0001
	branch ax_281 != 0x0000 l0800_7BB2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BB2:
	ds = fn0800_8359(ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7C78(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7C78_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7C78:
	word16 sp_29 = fp - 0x0008
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7E6D:
	word16 ax_31 = Mem0[ds:0x467C:word16]
	word16 dx_32 = Mem0[ds:0x467A:word16]
	branch ax_31 >=u Mem0[ds:0x4680:word16] l0800_7E7D
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7D:
	branch ax_31 != Mem0[ds:0x4680:word16] l0800_7E88
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7F:
	branch dx_32 >=u Mem0[ds:0x467E:word16] l0800_7E88
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E88:
	Mem405[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] << 0x08 - Mem0[ds:0x2E45:byte]
	branch Mem405[ds:0x2E45:word16] != 0x0000 l0800_7EA0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E99:
	branch Mem405[ds:0x4E82:word16] == 0x0000 l0800_7EAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EA0:
	Mem423[ss:sp_29 - 0x0002:word16] = DPB(ax_31, Mem405[ds:0x2E43:byte], 0)
	word16 di_424
	fn0800_8624(ds, bArg00, out di_424, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7EAA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7C78_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7E85:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7A:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C8F:
	selector ds_38 = fn0800_7FDC(fp - 0x0002, ds)
	word16 sp_42 = sp_29 - 0x0002
	Mem43[ss:sp_42:word16] = 0x0000
	Mem46[ss:sp_42 - 0x0002:word16] = Mem43[ss:fp - 0x0004:word16]
	Mem48[ss:sp_42 - 0x0004:word16] = Mem46[ss:fp - 0x0006:word16]
	Mem50[ss:sp_42 - 0x0006:word16] = Mem48[ds_38:0x29E5:word16]
	Mem52[ss:sp_42 - 0x0008:word16] = Mem50[ds_38:0x29E3:word16]
	selector ds_111
	fn0800_ACB3(fp - 0x0002, ds_38, ptrArg00, wArg02, wArg08, out ds_111)
	word16 sp_112 = sp_42 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DCD:
	word16 ax_68 = Mem52[ds_111:0x466A:word16]
	word16 dx_69 = Mem52[ds_111:0x466C:word16]
	word16 v13_70 = Mem52[ds_111:0x466A:word16] - 0x0001
	Mem71[ds_111:0x466A:word16] = v13_70
	Mem75[ds_111:0x466C:word16] = Mem71[ds_111:0x466C:word16] - (v13_70 <u 0x0000)
	branch (ax_68 | dx_69) == 0x0000 l0800_7DE5
	word16 ax_79 = Mem75[ds_111:0x466A:word16]
	word16 dx_80 = Mem75[ds_111:0x466C:word16]
	word16 v32_81 = Mem75[ds_111:0x466A:word16] - 0x0001
	Mem82[ds_111:0x466A:word16] = v32_81
	Mem86[ds_111:0x466C:word16] = Mem82[ds_111:0x466C:word16] - (v32_81 <u 0x0000)
	branch (ax_79 | dx_80) == 0x0000 l0800_7DE5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE5:
	word16 ax_305
	word16 sp_304
	word16 sp_281 = sp_112 - 0x0002
	Mem282[ss:sp_281:word16] = 0x0004
	Mem285[ss:sp_281 - 0x0002:word16] = 0x000F
	selector ds_286 = fn0800_854B(fp - 0x0002, ds_111, bArg02)
	Mem292[ss:sp_281:word16] = 0x0000
	word16 di_293
	selector ds_294
	fn0800_8600(ds_286, bArg00, out di_293, out ds_294)
	word16 ax_297 = Mem292[ds_294:0x467C:word16]
	word16 dx_298 = Mem292[ds_294:0x467A:word16]
	branch ax_297 >u Mem292[ds_294:0x4680:word16] l0800_7E1E
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E09:
	branch ax_297 <u Mem292[ds_294:0x4680:word16] l0800_7E11
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E0B:
	branch dx_298 >=u Mem292[ds_294:0x467E:word16] l0800_7E1E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E1E:
	Mem381[ss:sp_281:word16] = 0x0001
	Mem386[ss:sp_281 - 0x0002:word16] = 0x0000
	ax_305 = 0x0000
	ds = fn0800_854B(fp - 0x0002, ds_294, bArg02)
	sp_304 = sp_281 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E11:
	Mem393[ss:sp_281:word16] = 0x0001
	Mem395[ss:sp_281 - 0x0002:word16] = 0x0001
	ax_305 = 0x0001
	ds = fn0800_854B(fp - 0x0002, ds_294, bArg02)
	sp_304 = sp_281 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E2B:
	branch Mem292[ds:0x2E45:word16] != 0x0000 l0800_7E4F
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E32:
	word16 si_351 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E48:
	branch Mem292[ds:0x4E82:word16] != 0x0000 l0800_7E36
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E36:
	ax_305 = DPB(ax_305, Mem292[ds:si_351 + 0x4682:byte], 0) (alias)
	word16 sp_369 = sp_304 - 0x0002
	Mem370[ss:sp_369:word16] = ax_305
	word16 di_371
	si_351 = fn0800_8624(ds, bArg00, out di_371, out ds)
	Mem377[ds:0x4E82:word16] = Mem370[ds:0x4E82:word16] - 0x0001
	sp_304 = sp_369 + 0x0002
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E4F:
	word16 v21_318 = Mem292[ds:0x29F7:word16] + 0x0001
	Mem319[ds:0x29F7:word16] = v21_318
	Mem323[ds:0x29F9:word16] = Mem319[ds:0x29F9:word16] + (v21_318 <u 0x0000)
	word16 sp_325 = sp_304 - 0x0002
	Mem326[ss:sp_325:word16] = Mem323[ds:0x29E5:word16]
	Mem328[ss:sp_325 - 0x0002:word16] = Mem326[ds:0x29E3:word16]
	word16 si_329
	word16 ax_330 = fn0800_AD2F(ds, ptrArg00, wArg02, out si_329)
	Mem332[ss:fp - 0x0004:word16] = dx_298
	Mem333[ss:fp - 0x0006:word16] = ax_330
	word16 v23_334 = Mem333[ds:0x29F7:word16] + 0x0001
	Mem335[ds:0x29F7:word16] = v23_334
	Mem339[ds:0x29F9:word16] = Mem335[ds:0x29F9:word16] + (v23_334 <u 0x0000)
	Mem342[ss:sp_325:word16] = Mem339[ds:0x29E5:word16]
	Mem344[ss:sp_325 - 0x0002:word16] = Mem342[ds:0x29E3:word16]
	word16 si_345
	word16 ax_346 = fn0800_AD2F(ds, ptrArg00, wArg02, out si_345)
	Mem349[ss:fp - 0x0004:word16] = dx_298
	Mem350[ss:fp - 0x0006:word16] = ax_346
	sp_29 = sp_325 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> si:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CAC:
	word16 sp_91 = sp_112 - 0x0002
	Mem92[ss:sp_91:word16] = Mem86[ds_111:0x29DD:word16]
	Mem94[ss:sp_91 - 0x0002:word16] = Mem92[ds_111:0x29DB:word16]
	word16 si_96
	word16 di_97
	selector ds_98
	word16 ax_99 = fn0800_3E27(fp - 0x0002, ds_111, wArg00, wArg02, out si_96, out di_97, out ds_98)
	Mem101[ds_98:0x2E47:word16] = ax_99
	word16 v19_102 = Mem101[ds_98:0x467A:word16] + ax_99
	Mem103[ds_98:0x467A:word16] = v19_102
	Mem107[ds_98:0x467C:word16] = Mem103[ds_98:0x467C:word16] + (v19_102 <u 0x0000)
	Mem110[ss:sp_91:word16] = ax_99
	ds_111 = fn0800_7EAF(fp - 0x0002, ds_98, wArg00)
	sp_112 = sp_91 + 0x0002
	branch (Mem110[ds_111:0x466A:word16] | Mem110[ds_111:0x466C:word16]) != 0x0000 l0800_7CD9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD9:
	Mem119[ss:sp_91:word16] = Mem110[ds_111:0x29DD:word16]
	Mem121[ss:sp_91 - 0x0002:word16] = Mem119[ds_111:0x29DB:word16]
	word16 si_122
	word16 di_123
	selector ds_124
	word16 ax_125 = fn0800_3E27(fp - 0x0002, ds_111, wArg00, wArg02, out si_122, out di_123, out ds_124)
	Mem128[ds_124:0x2E29:word16] = ax_125
	Mem130[ss:sp_91:word16] = Mem128[ds_124:0x29DD:word16]
	Mem132[ss:sp_91 - 0x0002:word16] = Mem130[ds_124:0x29DB:word16]
	word16 si_133
	word16 di_134
	selector ds_135
	word16 ax_136 = fn0800_3E27(fp - 0x0002, ds_124, wArg00, wArg02, out si_133, out di_134, out ds_135)
	Mem138[ds_135:0x2E2B:word16] = ax_136
	branch Mem138[ds_135:0x2E29:word16] != 0x0000 l0800_7D1D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D1D:
	branch Mem138[ds_135:0x2E29:word16] >=u 0x0007 l0800_7D68
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D68:
	Mem235[ss:sp_91:word16] = 0x0004
	Mem238[ss:sp_91 - 0x0002:word16] = 0x000F
	selector ds_239 = fn0800_854B(fp - 0x0002, ds_135, bArg02)
	word16 ax_243 = DPB(0x000F, Mem238[ds_239:0x2E29:byte] - 0x06, 0)
	Mem246[ss:sp_91:word16] = ax_243
	word16 di_247
	selector ds_248
	fn0800_8600(ds_239, bArg00, out di_247, out ds_248)
	Mem260[ss:sp_91:word16] = DPB(ax_243, 0x00, 8)
	word16 ax_263 = DPB(ax_243, 0x00, 8)
	Mem265[ss:sp_91 - 0x0002:word16] = ax_263
	selector ds_266 = fn0800_854B(fp - 0x0002, ds_248, bArg02)
	Mem274[ss:sp_91:word16] = DPB(ax_263, Mem265[ds_266:0x2E2B:byte] & 0xFF, 0)
	word16 di_275
	fn0800_8600(ds_266, bArg00, out di_275, out ds_111)
	sp_112 = sp_91 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D24:
	Mem196[ss:sp_91:word16] = DPB(ax_136, 0x00, 8)
	Mem201[ss:sp_91 - 0x0002:word16] = DPB(ax_136, 0x00, 8)
	selector ds_202 = fn0800_854B(fp - 0x0002, ds_135, bArg02)
	Mem213[ss:sp_91:word16] = DPB(ax_136, 0x00, 8)
	word16 ax_216 = DPB(ax_136, 0x00, 8)
	Mem218[ss:sp_91 - 0x0002:word16] = ax_216
	selector ds_219 = fn0800_854B(fp - 0x0002, ds_202, bArg02)
	Mem227[ss:sp_91:word16] = DPB(ax_216, Mem218[ds_219:0x2E2B:byte] & 0xFF, 0)
	word16 di_228
	fn0800_8600(ds_219, bArg00, out di_228, out ds_111)
	sp_112 = sp_91 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D02:
	Mem171[ss:sp_91:word16] = 0x0003
	Mem174[ss:sp_91 - 0x0002:word16] = 0x0006
	selector ds_176 = fn0800_854B(fp - 0x0002, ds_135, bArg02)
	Mem182[ss:sp_91:word16] = DPB(0x0006, Mem174[ds_176:0x2E2B:byte], 0)
	word16 di_184
	fn0800_8600(ds_176, bArg00, out di_184, out ds_111)
	sp_112 = sp_91 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DAC:
	Mem151[ds_111:0x2E29:word16] = Mem138[ds_111:0x2E29:word16] + 0x0002
	word16 v26_153 = Mem151[ds_111:0x467A:word16] + Mem151[ds_111:0x2E29:word16]
	Mem154[ds_111:0x467A:word16] = v26_153
	Mem158[ds_111:0x467C:word16] = Mem154[ds_111:0x467C:word16] + (v26_153 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DC2:
	word16 ax_161 = Mem158[ds_111:0x2E29:word16]
	Mem163[ds_111:0x2E29:word16] = Mem158[ds_111:0x2E29:word16] - 0x0001
	branch ax_161 != 0x0000 l0800_7DBF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DBF:
	ds_111 = fn0800_8359(ds_111)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7EAF(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_7EAF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_7EAF:
	word16 sp_10 = fp - 0x0006
	word16 si_133 = wArg02
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7FD1:
	word16 si_123 = si_133
	branch si_133 == 0x0000 l0800_7FD8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FD8:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_7EAF_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_7FD5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EBA:
	branch si_133 >=u 0x000C l0800_7F32
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F32:
	branch (si_123 & 0x0003) != 0x0000 l0800_7EFD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EFD:
	word16 sp_209 = sp_10 - 0x0002
	Mem210[ss:sp_209:word16] = 0x0001
	Mem216[ss:sp_209 - 0x0002:word16] = 0x0000
	selector ds_220 = fn0800_8359(fn0800_854B(fp - 0x0002, ds, bArg02))
	al = Mem216[ds_220:0x2E4F:byte] ^ 0x00
	Mem226[ss:sp_209:word16] = (word16) al
	word16 di_227
	word16 si_229 = fn0800_8600(ds_220, bArg00, out di_227, out ds)
	sp_10 = sp_209 + 0x0002
	branch (Mem226[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F2D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F2D:
	Mem246[ds:0x2E4F:word16] = Mem226[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F20:
	Mem244[ds:0x2E4F:word16] = Mem226[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F31:
	si_123 = si_229 - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F38:
	word16 sp_97 = sp_10 - 0x0002
	Mem98[ss:sp_97:word16] = 0x0005
	Mem101[ss:sp_97 - 0x0002:word16] = 0x0017
	selector ds_102 = fn0800_854B(fp - 0x0002, ds, bArg02)
	branch si_123 <u 0x0048 l0800_7F8F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F8F:
	Mem160[ss:sp_97:word16] = 0x0004
	word16 ax_162 = si_123 - 0x000C
	Mem167[ss:sp_97 - 0x0002:word16] = ax_162 >>u 0x0002
	word16 ax_164 = ax_162 >>u 0x0002
	ds = fn0800_854B(fp - 0x0002, ds_102, bArg02)
	sp_10 = sp_97 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FB4:
	si_133 = si_123
	branch si_123 != 0x0000 l0800_7FA5
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FA5:
	selector ds_194 = fn0800_8359(ds)
	al = al ^ Mem167[ds_194:0x2E4F:byte]
	ax_164 = DPB(ax_164, al, 0) (alias)
	word16 sp_199 = sp_10 - 0x0002
	Mem200[ss:sp_199:word16] = ax_164
	sp_10 = sp_199 + 0x0002
	word16 di_201
	si_123 = fn0800_8600(ds_194, bArg00, out di_201, out ds) - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FB8:
	branch (Mem167[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7FCD
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FCD:
	Mem192[ds:0x2E4F:word16] = Mem167[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FC0:
	Mem190[ds:0x2E4F:word16] = Mem167[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F4B:
	Mem108[ss:sp_97:word16] = 0x0004
	Mem111[ss:sp_97 - 0x0002:word16] = 0x000F
	word16 ax_109 = 0x000F
	ds = fn0800_854B(fp - 0x0002, ds_102, bArg02)
	sp_10 = sp_97 + 0x0002
	word16 di_114 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F6C:
	branch di_114 != 0x0048 l0800_7F5D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F5D:
	selector ds_144 = fn0800_8359(ds)
	al = al ^ Mem111[ds_144:0x2E4F:byte]
	ax_109 = DPB(ax_109, al, 0) (alias)
	word16 sp_149 = sp_10 - 0x0002
	Mem150[ss:sp_149:word16] = ax_109
	word16 di_151
	si_123 = fn0800_8600(ds_144, bArg00, out di_151, out ds)
	sp_10 = sp_149 + 0x0002
	di_114 = di_151 + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F71:
	branch (Mem111[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F86
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F86:
	Mem142[ds:0x2E4F:word16] = Mem111[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F79:
	Mem140[ds:0x2E4F:word16] = Mem111[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F8A:
	si_133 = si_123 - 0x0048
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EBF:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF6:
	si_133 = si_123
	branch si_123 != 0x0000 l0800_7EC1
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EC1:
	word16 sp_44 = sp_10 - 0x0002
	Mem45[ss:sp_44:word16] = 0x0001
	Mem52[ss:sp_44 - 0x0002:word16] = 0x0000
	selector ds_57 = fn0800_8359(fn0800_854B(fp - 0x0002, ds, bArg02))
	al = Mem52[ds_57:0x2E4F:byte] ^ 0x00
	Mem63[ss:sp_44:word16] = (word16) al
	word16 di_65
	word16 si_67 = fn0800_8600(ds_57, bArg00, out di_65, out ds)
	sp_10 = sp_44 + 0x0002
	branch (Mem63[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7EF1
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF1:
	Mem84[ds:0x2E4F:word16] = Mem63[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EE4:
	Mem82[ds:0x2E4F:word16] = Mem63[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF5:
	si_123 = si_67 - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EFA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7FDC(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_7FDC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7FDC:
	Mem8[ds:0x466C:word16] = 0x0000
	Mem10[ds:0x466A:word16] = 0x0000
	Mem11[ds:0x2E47:word16] = 0x0000
	word16 dx_13 = Mem11[ds:0x2A0B:word16]
	Mem14[ds:0x4670:word16] = Mem11[ds:0x2A0D:word16]
	Mem15[ds:0x466E:word16] = dx_13
	selector ds_40
	fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc10, Mem15[ds:0x29E3:word16], 0), Mem15[ds:0x29E5:word16], 0x0000, out ds_40)
	Mem47[ss:fp - 0x0008:word16] = 0x0000
	Mem50[ss:fp - 0x000A:word16] = 0x0000
	Mem52[ss:fp - 0x000C:word16] = 0x0000
	Mem54[ss:fp - 0x000E:word16] = Mem52[ds_40:0x29DD:word16]
	Mem56[ss:fp - 0x0010:word16] = Mem54[ds_40:0x29DB:word16]
	selector ds_295
	fn0800_ACB3(fp - 0x0002, ds_40, ptrArg00, wArg02, wArg08, out ds_295)
	word16 bp_243 = fp - 0x0002
	word16 sp_296 = fp - 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_82A1:
	branch (Mem56[ds_295:0x4676:word16] | Mem56[ds_295:0x4678:word16]) == 0x0000 l0800_82AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82AD:
	branch (Mem56[ds_295:0x4672:word16] | Mem56[ds_295:0x4674:word16]) == 0x0000 l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82B6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82AA:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8042:
	word16 dx_160 = 0xFFFF - Mem56[ds_295:0x2E31:word16]
	word16 dx_164 = dx_160 - Mem56[ds_295:0x4672:word16]
	Mem168[ss:bp_243 - 0x0002:word16] = 0x0000 - (dx_160 <u 0x0000) - Mem56[ds_295:0x4674:word16] - (dx_164 <u 0x0000)
	Mem169[ss:bp_243 - 0x0004:word16] = dx_164
	word16 ax_170 = Mem169[ds_295:0x4678:word16]
	word16 dx_171 = Mem169[ds_295:0x4676:word16]
	branch ax_170 >u Mem169[ss:bp_243 - 0x0002:word16] l0800_807C
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8068:
	branch ax_170 <u Mem169[ss:bp_243 - 0x0002:word16] l0800_806F
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_806A:
	branch dx_171 >=u Mem169[ss:bp_243 - 0x0004:word16] l0800_807C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_806F:
	word16 dx_481 = Mem169[ds_295:0x4676:word16]
	Mem482[ss:bp_243 - 0x0002:word16] = Mem169[ds_295:0x4678:word16]
	Mem483[ss:bp_243 - 0x0004:word16] = dx_481
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_807C:
	word16 dx_181 = Mem169[ds_295:0x2E71:word16] + Mem169[ds_295:0x2E31:word16]
	Mem182[ds_295:0x2E6F:word16] = Mem169[ds_295:0x2E73:word16]
	Mem183[ds_295:0x2E6D:word16] = dx_181
	word16 sp_184 = sp_296 - 0x0002
	Mem185[ss:sp_184:word16] = Mem183[ds_295:0x29E5:word16]
	Mem187[ss:sp_184 - 0x0002:word16] = Mem185[ds_295:0x29E3:word16]
	Mem189[ss:sp_184 - 0x0004:word16] = Mem187[ss:bp_243 - 0x0002:word16]
	Mem191[ss:sp_184 - 0x0006:word16] = Mem189[ss:bp_243 - 0x0004:word16]
	word16 ax_193 = Mem191[ds_295:0x2E6D:word16] + Mem191[ds_295:0x4672:word16]
	Mem196[ss:sp_184 - 0x0008:word16] = Mem191[ds_295:0x2E73:word16]
	Mem198[ss:sp_184 - 0x000A:word16] = ax_193
	word16 di_202
	selector ds_203
	word16 si_204 = fn0800_4110(ds_295, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_202, out ds_203)
	word16 dx_207 = Mem198[ss:bp_243 - 0x0004:word16]
	word16 ax_206 = Mem198[ss:bp_243 - 0x0002:word16]
	word16 v15_208 = Mem198[ds_203:0x4676:word16] - dx_207
	Mem209[ds_203:0x4676:word16] = v15_208
	Mem213[ds_203:0x4678:word16] = Mem209[ds_203:0x4678:word16] - ax_206 - (v15_208 <u 0x0000)
	word16 v17_214 = Mem213[ds_203:0x4672:word16] + dx_207
	Mem215[ds_203:0x4672:word16] = v17_214
	Mem219[ds_203:0x4674:word16] = Mem215[ds_203:0x4674:word16] + ax_206 + (v17_214 <u 0x0000)
	word16 ax_220 = Mem219[ds_203:0x2E6F:word16]
	word16 dx_222 = Mem219[ds_203:0x2E6D:word16] + Mem219[ds_203:0x4672:word16]
	Mem223[ds_203:0x2E67:word16] = ax_220
	Mem224[ds_203:0x2E65:word16] = dx_222
	Mem225[ds_203:0x2E6B:word16] = ax_220
	Mem226[ds_203:0x2E69:word16] = dx_222
	word16 sp_205 = sp_184 + 0x0002
	word16 ax_227 = Mem226[ds_203:0x4670:word16]
	word16 dx_228 = Mem226[ds_203:0x466E:word16]
	branch ax_227 <=u Mem226[ds_203:0x4674:word16] l0800_80ED
// DataOut: bp ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80ED:
	branch ax_227 <u Mem226[ds_203:0x4674:word16] l0800_80F8
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80EF:
	branch dx_228 <u Mem226[ds_203:0x4672:word16] l0800_80F8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80F8:
	word16 dx_472 = Mem226[ds_203:0x2E6D:word16] + Mem226[ds_203:0x466E:word16]
	Mem474[ds_203:0x2E67:word16] = Mem226[ds_203:0x2E6F:word16]
	Mem475[ds_203:0x2E65:word16] = dx_472
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80F5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80EA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81E9:
	branch Mem226[ds_203:0x2E65:word16] - 0x0001 <=u Mem226[ds_203:0x2E6D:word16] l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81F3:
	branch Mem226[ds_203:0x466C:word16] >=u 0x0000 l0800_81FD
// DataOut: bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FD:
	branch Mem226[ds_203:0x466C:word16] != 0x0000 l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FF:
	branch Mem226[ds_203:0x466A:word16] >=u 0xFFFE l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8206:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_810D:
	fn0800_8832(ds_203)
	branch Mem226[ds_203:0x2E29:word16] <u 0x0002 l0800_8193
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8193:
	word16 sp_458 = sp_205 - 0x0002
	Mem459[ss:sp_458:word16] = 0x0001
	fn0800_89A8(ds_203, wArg00)
	Mem463[ds_203:0x2E47:word16] = Mem459[ds_203:0x2E47:word16] + 0x0001
	Mem465[ds_203:0x465C:word16] = Mem463[ds_203:0x465C:word16] + 0x0001
	sp_205 = sp_458 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8117:
	branch Mem226[ds_203:0x2E6D:word16] + Mem226[ds_203:0x2E29:word16] <=u Mem226[ds_203:0x2E65:word16] l0800_813F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8124:
	branch (Mem226[ds_203:0x466A:word16] | Mem226[ds_203:0x466C:word16]) == 0x0000 l0800_8130
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8130:
	Mem456[ds_203:0x2E29:word16] = Mem226[ds_203:0x2E65:word16] - Mem226[ds_203:0x2E6D:word16]
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_813F:
	word16 sp_395 = sp_205 - 0x0002
	Mem396[ss:sp_395:word16] = ds_203
	Mem399[ss:sp_395 - 0x0002:word16] = 0x290F
	Mem401[ss:sp_395 - 0x0004:word16] = Mem399[ds_203:0x2E47:word16]
	selector ds_402 = fn0800_831D(ds_203, wArg00, ptrArg02)
	Mem405[ss:sp_395:word16] = ds_402
	Mem408[ss:sp_395 - 0x0002:word16] = 0x278F
	Mem413[ss:sp_395 - 0x0004:word16] = Mem408[ds_402:0x2E29:word16] - 0x0002
	selector ds_414 = fn0800_831D(ds_402, wArg00, ptrArg02)
	Mem418[ss:sp_395:word16] = ds_414
	Mem421[ss:sp_395 - 0x0002:word16] = 0x284F
	Mem426[ss:sp_395 - 0x0004:word16] = Mem421[ds_414:0x2E2B:word16] - 0x0001
	ds_203 = fn0800_831D(ds_414, wArg00, ptrArg02)
	Mem431[ss:sp_395:word16] = Mem426[ds_203:0x2E29:word16]
	fn0800_89A8(ds_203, wArg00)
	word16 v23_433 = Mem431[ds_203:0x466A:word16] + 0x0001
	Mem434[ds_203:0x466A:word16] = v23_433
	Mem438[ds_203:0x466C:word16] = Mem434[ds_203:0x466C:word16] + (v23_433 <u 0x0000)
	Mem439[ds_203:0x2E47:word16] = 0x0000
	Mem442[ds_203:0x465C:word16] = Mem439[ds_203:0x465C:word16] + Mem439[ds_203:0x2E29:word16]
	sp_205 = sp_395 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81A5:
	branch Mem226[ds_203:0x465C:word16] <u 0x0400 l0800_81E9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81AD:
	word16 v28_347 = Mem226[ds_203:0x4666:word16] + Mem226[ds_203:0x465C:word16]
	Mem348[ds_203:0x4666:word16] = v28_347
	Mem352[ds_203:0x4668:word16] = Mem348[ds_203:0x4668:word16] + (v28_347 <u 0x0000)
	word16 sp_353 = sp_205 - 0x0002
	Mem354[ss:sp_353:word16] = Mem352[ds_203:0x4680:word16]
	Mem356[ss:sp_353 - 0x0002:word16] = Mem354[ds_203:0x467E:word16]
	word16 dx_363
	word16 ax_364 = fn0800_8F18(0x0063, Mem356[ds_203:0x4668:word16], 0x0000, Mem356[ds_203:0x4666:word16], out dx_363)
	Mem366[ss:sp_353 - 0x0004:word16] = dx_363
	Mem368[ss:sp_353 - 0x0006:word16] = ax_364
	word16 dx_369
	word16 si_371
	word16 di_372
	word16 ax_373 = fn0800_8BC2(bp_243, si_204, di_202, bp, out dx_369, out bp_243, out si_371, out di_372)
	Mem376[ss:sp_353:word16] = dx_369
	Mem378[ss:sp_353 - 0x0002:word16] = ax_373
	Mem380[ss:sp_353 - 0x0004:word16] = ds_203
	Mem383[ss:sp_353 - 0x0006:word16] = 0x2244
	si_204 = fn0800_B2EF(ds_203, wArg00, wArg02, out di_202)
	Mem388[ds_203:0x465C:word16] = 0x0000
	sp_205 = sp_353 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_812D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8209:
	word16 ax_256 = Mem226[ds_203:0x2E69:word16] - Mem226[ds_203:0x2E6D:word16]
	Mem260[ds_203:0x4674:word16] = 0x0000 - (ax_256 <u 0x0000)
	Mem261[ds_203:0x4672:word16] = ax_256
	word16 ax_264 = Mem261[ds_203:0x2E6D:word16] - Mem261[ds_203:0x2E71:word16]
	word16 ax_268 = ax_264 - Mem261[ds_203:0x2E31:word16]
	Mem272[ss:bp_243 - 0x0002:word16] = 0x0000 - (ax_264 <u 0x0000) - (ax_268 <u 0x0000)
	Mem273[ss:bp_243 - 0x0004:word16] = ax_268
	word16 ax_275 = Mem273[ds_203:0x2E71:word16] + Mem273[ss:bp_243 - 0x0004:word16]
	word16 sp_285 = sp_205 - 0x0002
	Mem286[ss:sp_285:word16] = Mem273[ds_203:0x2E6D:word16] - ax_275 + Mem273[ds_203:0x4672:word16]
	Mem288[ss:sp_285 - 0x0002:word16] = Mem286[ds_203:0x2E73:word16]
	Mem290[ss:sp_285 - 0x0004:word16] = ax_275
	Mem292[ss:sp_285 - 0x0006:word16] = Mem290[ds_203:0x2E73:word16]
	Mem294[ss:sp_285 - 0x0008:word16] = Mem292[ds_203:0x2E71:word16]
	ds_295 = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08)
	sp_296 = sp_285 + 0x0002
	branch Mem294[ds_295:0x2E65:word16] <u Mem294[ds_295:0x2E69:word16] l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8269:
	word16 dx_301 = Mem294[ds_295:0x2E65:word16]
	branch Mem294[ds_295:0x2E67:word16] != Mem294[ds_295:0x2E6B:word16] l0800_8285
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8276:
	branch dx_301 != Mem294[ds_295:0x2E69:word16] l0800_8285
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_827C:
	branch (Mem294[ds_295:0x4676:word16] | Mem294[ds_295:0x4678:word16]) == 0x0000 l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8285:
	branch Mem294[ds_295:0x466C:word16] != 0x0000 l0800_8293
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_828C:
	branch Mem294[ds_295:0x466A:word16] == 0xFFFE l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82B9:
	word16 dx_99 = Mem56[ds_295:0x2E65:word16]
	branch Mem56[ds_295:0x2E67:word16] != Mem56[ds_295:0x2E6B:word16] l0800_82ED
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82C6:
	branch dx_99 != Mem56[ds_295:0x2E69:word16] l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82CC:
	branch (Mem56[ds_295:0x4676:word16] | Mem56[ds_295:0x4678:word16]) != 0x0000 l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82D5:
	branch Mem56[ds_295:0x466C:word16] != 0x0000 l0800_82E3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82DC:
	branch Mem56[ds_295:0x466A:word16] == 0xFFFE l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82E3:
	Mem155[ds_295:0x2E47:word16] = Mem56[ds_295:0x2E47:word16] + Mem56[ds_295:0x4672:word16]
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82ED:
	word16 sp_105 = sp_296 - 0x0002
	Mem106[ss:sp_105:word16] = ds_295
	Mem109[ss:sp_105 - 0x0002:word16] = 0x290F
	Mem111[ss:sp_105 - 0x0004:word16] = Mem109[ds_295:0x2E47:word16]
	selector ds_114 = fn0800_831D(ds_295, wArg00, ptrArg02)
	word16 v13_116 = Mem111[ds_114:0x466A:word16] + 0x0001
	Mem117[ds_114:0x466A:word16] = v13_116
	Mem121[ds_114:0x466C:word16] = Mem117[ds_114:0x466C:word16] + (v13_116 <u 0x0000)
	Mem126[ss:sp_105:word16] = 0x0000
	Mem128[ss:sp_105 - 0x0002:word16] = 0x0000
	Mem130[ss:sp_105 - 0x0004:word16] = 0x0000
	Mem132[ss:sp_105 - 0x0006:word16] = Mem130[ds_114:0x29DD:word16]
	Mem134[ss:sp_105 - 0x0008:word16] = Mem132[ds_114:0x29DB:word16]
	selector ds_135
	fn0800_ACB3(bp_243, ds_114, ptrArg00, wArg02, wArg08, out ds_135)
	return ds_135
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7FDC_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_8293:
	word16 ax_312 = Mem294[ss:bp_243 - 0x0002:word16]
	word16 v21_314 = Mem294[ds_295:0x466E:word16] - Mem294[ss:bp_243 - 0x0004:word16]
	Mem315[ds_295:0x466E:word16] = v21_314
	Mem319[ds_295:0x4670:word16] = Mem315[ds_295:0x4670:word16] - ax_312 - (v21_314 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_831D(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_831D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(16) Stack +0004(32)

l0800_831D:
	word16 ax_14
	branch wArg02 <=u 0x0001 l0800_8332
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0004(32)

l0800_8332:
	ax_14 = wArg02
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8329:
	ax_14 = fn0800_0C08(wArg02)
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8334:
	word16 ax_17 = (word16) (ax_14 *s 0x000C)
	selector es_20 = SLICE(ptrArg04, selector, 16)
	word16 v14_23 = Mem0[es_20:ax_17 + 0x0002:word16] + 0x0001
	Mem24[es_20:ax_17 + 0x0002:word16] = v14_23
	Mem28[es_20:ax_17 + 0x0004:word16] = Mem24[es_20:ax_17 + 0x0004:word16] + (v14_23 <u 0x0000)
	return fn0800_401E(fp - 0x0002, ds, wArg02, Mem28[ds:0x29DB:word16], Mem28[ds:0x29DD:word16])
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_831D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_8359(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: al bp sp
fn0800_8359_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8359:
	word16 di_17
	selector ds_18
	word16 ax_19 = fn0800_3DCF(ds, DPB(ptrLoc08, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out di_17, out ds_18)
	Mem22[ss:fp - 0x0003:byte] = (byte) ax_19
	Mem36[ds_18:0x2E4B:word16] = Mem22[ds_18:((DPB(ax_19, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem22[ds_18:0x2E4B:word16] >>u 0x08
	word16 v15_37 = Mem36[ds_18:0x29FF:word16] + 0x0001
	Mem38[ds_18:0x29FF:word16] = v15_37
	Mem42[ds_18:0x2A01:word16] = Mem38[ds_18:0x2A01:word16] + (v15_37 <u 0x0000)
	return ds_18
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8359_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp



selector fn0800_83A1(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_83A1_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_83A1:
	word16 di_101 = wArg06
	word16 si_17 = wArg06
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83C4:
	si_17 = si_17 - 0x0001
	branch si_17 != 0x0000 l0800_83B0
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83B0:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + (word16) (si_17 *s 0x000C) + 0x000A:word16] != 0x0000 l0800_83CB
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83C3:
	di_101 = di_101 - 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83CB:
	selector ds_49 = fn0800_8489(fp - 0x0002, ds, di_101)
	Mem56[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0002:word16] + 0x000A
	word16 sp_50 = fp - 0x0008
	word16 si_51 = 0x0000
	branch 0x0000 >=u di_101 l0800_8401
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_83E5:
	word16 sp_76 = sp_50 - 0x0002
	Mem77[ss:sp_76:word16] = 0x0004
	Mem81[ss:sp_76 - 0x0002:word16] = Mem77[Mem77[ss:fp + 0x0004:selector]:Mem77[ss:fp - 0x0004:word16]:word16]
	ds_49 = fn0800_8489(fp - 0x0002, ds_49, wArg00)
	Mem86[ss:fp - 0x0004:word16] = Mem81[ss:fp - 0x0004:word16] + 0x000C
	sp_50 = sp_76 + 0x0002
	si_51 = si_51 + 0x0001
	branch si_51 <u di_101 l0800_83E5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8401:
	return ds_49
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_83A1_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8407(word16 bp, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_8407_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(32)

l0800_8407:
	word16 ax_18
	branch wArg02 <=u 0x0001 l0800_8420
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0004(32)

l0800_8420:
	ax_18 = wArg02
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(32)

l0800_8417:
	ax_18 = fn0800_0C08(wArg02)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(32)

l0800_8422:
	selector ds_35 = fn0800_8489(fp - 0x0002, ds, Mem0[SLICE(ptrArg04, selector, 16):(word16) (ax_18 *s 0x000C) + 0x0008:word16])
	branch Mem0[ss:fp - 0x0004:word16] <=u 0x0001 l0800_845F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8445:
	Mem56[ss:fp - 0x000A:word16] = Mem0[ss:fp - 0x0004:word16] - 0x0001
	Mem65[ss:fp - 0x000C:word16] = wArg02 - (0x0001 << Mem56[ss:fp - 0x0004:byte] - 0x01)
	ds_35 = fn0800_8489(fp - 0x0002, ds_35, wArg00)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_845F:
	return ds_35
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_8407_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_8465_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8465:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_847F
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_847F:
	return fn0800_8489(fp - 0x0002, ds, wArg02)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8475:
	return fn0800_854B(fp - 0x0002, ds, (byte) wArg04)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_8465_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_8489(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_8489_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8489:
	word16 sp_10 = fp - 0x0006
	word16 di_139 = wArg02
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_853A:
	word16 ax_36 = Mem0[ss:fp + 0x0004:word16]
	Mem38[ss:fp + 0x0004:word16] = Mem0[ss:fp + 0x0004:word16] - 0x0001
	branch ax_36 == 0x0000 l0800_8547
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8547:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_8489_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> si:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_8544:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8494:
	Mem44[ds:0x2E43:word16] = Mem38[ds:0x2E43:word16] >>u 0x0001
	branch (di_139 & 0x0001) == 0x0000 l0800_84A4
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_849E:
	Mem148[ds:0x2E43:word16] = Mem44[ds:0x2E43:word16] | 0x8000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84A4:
	Mem52[ds:0x2E45:word16] = Mem44[ds:0x2E45:word16] + 0x0001
	di_139 = di_139 >>u 0x0001
	word16 ax_53 = Mem52[ds:0x2E45:word16]
	branch ax_53 == 0x0010 l0800_84B5
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84B5:
	word16 sp_58 = sp_10 - 0x0002
	Mem59[ss:sp_58:word16] = DPB(ax_53, Mem52[ds:0x2E43:byte], 0)
	word16 di_61
	selector ds_62
	fn0800_8624(ds, bArg00, out di_61, out ds_62)
	word16 ax_65 = Mem59[ds_62:0x2E43:word16]
	Mem70[ss:sp_58:word16] = ax_65 >>u 0x08
	fn0800_8624(ds_62, bArg00, out di_139, out ds)
	word16 ax_136 = ax_65 >>u 0x08
	sp_10 = sp_58 + 0x0002
	word16 si_141 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84E3:
	branch Mem70[ds:0x4E82:word16] != 0x0000 l0800_84D1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84D1:
	ax_136 = DPB(ax_136, Mem70[ds:si_141 + 0x4682:byte], 0) (alias)
	word16 sp_137 = sp_10 - 0x0002
	Mem138[ss:sp_137:word16] = ax_136
	si_141 = fn0800_8624(ds, bArg00, out di_139, out ds)
	Mem145[ds:0x4E82:word16] = Mem138[ds:0x4E82:word16] - 0x0001
	sp_10 = sp_137 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84EA:
	word16 ax_88 = Mem70[ds:0x2A01:word16]
	word16 dx_89 = Mem70[ds:0x29FF:word16]
	branch ax_88 <u Mem70[ds:0x2A05:word16] l0800_8532
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84F7:
	branch ax_88 >u Mem70[ds:0x2A05:word16] l0800_84FF
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84F9:
	branch dx_89 <=u Mem70[ds:0x2A03:word16] l0800_8532
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84FF:
	word16 dx_108 = Mem70[ds:0x29FF:word16] - Mem70[ds:0x2A03:word16]
	word16 ax_111 = Mem70[ds:0x2A01:word16] - Mem70[ds:0x2A05:word16] - (dx_108 <u 0x0000)
	branch ax_111 <u Mem70[ds:0x4E8A:word16] l0800_8532
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8514:
	branch ax_111 >u Mem70[ds:0x4E8A:word16] l0800_851C
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8516:
	branch dx_108 <=u Mem70[ds:0x4E88:word16] l0800_8532
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_851C:
	word16 dx_121 = Mem70[ds:0x29FF:word16] - Mem70[ds:0x2A03:word16]
	Mem126[ds:0x4E8A:word16] = Mem70[ds:0x2A01:word16] - Mem70[ds:0x2A05:word16] - (dx_121 <u 0x0000)
	Mem127[ds:0x4E88:word16] = dx_121
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8532:
	Mem104[ds:0x2E45:word16] = 0x0000
	Mem105[ds:0x2E43:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84B2:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)



selector fn0800_854B(word16 bp, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0004(8)
fn0800_854B_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(8)

l0800_854B:
	word16 sp_10 = fp - 0x0006
	word16 di_129 = 0x0001 << bArg04 - 0x01
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_85EF:
	word16 ax_37 = Mem0[ss:fp + 0x0004:word16]
	Mem39[ss:fp + 0x0004:word16] = Mem0[ss:fp + 0x0004:word16] - 0x0001
	branch ax_37 == 0x0000 l0800_85FC
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85FC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_854B_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> si:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_85F9:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_855D:
	Mem45[ds:0x2E43:word16] = Mem39[ds:0x2E43:word16] << 0x0001
	branch (Mem45[ss:fp + 0x0002:word16] & di_129) == 0x0000 l0800_856A
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8566:
	Mem138[ds:0x2E43:word16] = Mem45[ds:0x2E43:word16] + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_856A:
	Mem52[ds:0x2E45:word16] = Mem45[ds:0x2E45:word16] + 0x0001
	di_129 = di_129 >>u 0x0001
	word16 ax_53 = Mem52[ds:0x2E45:word16]
	branch ax_53 != 0x0008 l0800_85EF
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8578:
	word16 ax_126 = DPB(ax_53, Mem52[ds:0x2E43:byte], 0)
	word16 sp_58 = sp_10 - 0x0002
	Mem59[ss:sp_58:word16] = ax_126
	fn0800_8624(ds, bArg00, out di_129, out ds)
	sp_10 = sp_58 + 0x0002
	word16 si_131 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8598:
	branch Mem59[ds:0x4E82:word16] != 0x0000 l0800_8586
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8586:
	ax_126 = DPB(ax_126, Mem59[ds:si_131 + 0x4682:byte], 0) (alias)
	word16 sp_127 = sp_10 - 0x0002
	Mem128[ss:sp_127:word16] = ax_126
	si_131 = fn0800_8624(ds, bArg00, out di_129, out ds)
	Mem135[ds:0x4E82:word16] = Mem128[ds:0x4E82:word16] - 0x0001
	sp_10 = sp_127 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_859F:
	word16 ax_78 = Mem59[ds:0x2A01:word16]
	word16 dx_79 = Mem59[ds:0x29FF:word16]
	branch ax_78 <u Mem59[ds:0x2A05:word16] l0800_85E7
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85AC:
	branch ax_78 >u Mem59[ds:0x2A05:word16] l0800_85B4
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85AE:
	branch dx_79 <=u Mem59[ds:0x2A03:word16] l0800_85E7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85B4:
	word16 dx_98 = Mem59[ds:0x29FF:word16] - Mem59[ds:0x2A03:word16]
	word16 ax_101 = Mem59[ds:0x2A01:word16] - Mem59[ds:0x2A05:word16] - (dx_98 <u 0x0000)
	branch ax_101 <u Mem59[ds:0x4E8A:word16] l0800_85E7
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85C9:
	branch ax_101 >u Mem59[ds:0x4E8A:word16] l0800_85D1
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85CB:
	branch dx_98 <=u Mem59[ds:0x4E88:word16] l0800_85E7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85D1:
	word16 dx_111 = Mem59[ds:0x29FF:word16] - Mem59[ds:0x2A03:word16]
	Mem116[ds:0x4E8A:word16] = Mem59[ds:0x2A01:word16] - Mem59[ds:0x2A05:word16] - (dx_111 <u 0x0000)
	Mem117[ds:0x4E88:word16] = dx_111
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85E7:
	Mem94[ds:0x2E45:word16] = 0x0000
	Mem95[ds:0x2E43:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)



word16 fn0800_8600(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8600_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8600:
	branch Mem0[ds:0x2E45:word16] == 0x0000 l0800_861B
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_861B:
	word16 di_41
	selector ds_42
	return fn0800_8624(ds, bArg02, out di_41, out ds_42)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dl:<invalid> -2(fp):bp

l0800_860D:
	Mem28[ds:Mem0[ds:0x4E82:word16] + 0x4682:byte] = bArg02
	Mem30[ds:0x4E82:word16] = Mem28[ds:0x4E82:word16] + 0x0001
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dl:<invalid> -2(fp):bp

fn0800_8600_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dl:<invalid> bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):dx -2(fp):bp



word16 fn0800_8624(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8624_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8624:
	word16 ax_9 = Mem0[ds:0x2A05:word16]
	word16 dx_10 = Mem0[ds:0x2A03:word16]
	branch ax_9 >u Mem0[ds:0x4E86:word16] l0800_8678
// DataOut: di ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8634:
	branch ax_9 <u Mem0[ds:0x4E86:word16] l0800_863C
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8636:
	branch dx_10 >=u Mem0[ds:0x4E84:word16] l0800_8678
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_863C:
	selector ds_58
	*diOut = fn0800_4047(ds, bArg02, DPB(ptrLoc06, Mem0[ds:0x29DF:word16], 0), Mem0[ds:0x29E1:word16], out ds_58)
	Mem73[ds_58:0x2E49:word16] = Mem0[ds_58:((DPB(DPB(ax_9, bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem0[ds_58:0x2E49:word16] >>u 0x08
	word16 v16_74 = Mem73[ds_58:0x2A03:word16] + 0x0001
	Mem75[ds_58:0x2A03:word16] = v16_74
	Mem79[ds_58:0x2A05:word16] = Mem75[ds_58:0x2A05:word16] + (v16_74 <u 0x0000)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8678:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_8624_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: bp ds sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_867A_entry:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_867A:
	word16 si_27
	word16 bx_116 = DPB(bx, fn0800_87EF(wArg04 + 0x0004, psegArg06, out si_27), 0)
	byte al_42 = Mem0[psegArg06:si_27 + 0x000A:byte] * 0x02 + true
	selector ds_20 = psegArg06
	word16 di_129 = wArg08
	selector es_24 = psegArg0A
	word16 si_109 = si_27 + 0x000B
	byte al_110 = al_42 * 0x02
	word16 ax_111 = DPB(ax, al_42 * 0x02, 0)
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8745:
	al_110 = al_110 * 0x02
	byte SCZO_66 = cond(al_110)
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	byte Z_529 = SCZO_66
	byte C_531 = SCZO_66
	branch al_110 <u 0x00 l0800_8751
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8749:
	Mem523[es_24:di_129:byte] = Mem0[ds_20:si_109:byte]
	byte SCZO_528 = cond(al_110 * 0x02)
	si_109 = si_109 + 0x0001 + 0x0001
	di_129 = di_129 + 0x0001 + 0x0001
	al_110 = al_110 * 0x02
	ax_111 = DPB(ax_111, al_110 * 0x02, 0) (alias)
	Z_529 = SCZO_528 (alias)
	C_531 = SCZO_528 (alias)
	branch al_110 * 0x02 >=u 0x00 l0800_8744
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8751:
	branch Z_529 l0800_873C
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_873C:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + C_531
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	branch al_110 <u 0x00 l0800_8753
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8741:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8744:
	Mem79[es_24:di_129:byte] = Mem0[ds_20:si_109:byte]
	si_109 = si_109 + 0x0000
	di_129 = di_129 + 0x0000
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8753:
	byte al_103 = al_110 * 0x02
	word16 cx_118 = 0x0002
	byte bh_439 = 0x00
	bx_116 = DPB(bx_116, 0x00, 8) (alias)
	word16 ax_104 = DPB(ax_111, al_103, 0)
	byte C_102 = cond(al_103)
	branch al_103 == 0x00 l0800_879B
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_879B:
	al_103 = Mem0[ds_20:si_109:byte] * 0x02 + (al_103 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_104 = DPB(ax_111, al_103, 0) (alias)
	C_102 = cond(al_103) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_875C:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_875F:
	branch C_102 l0800_86E6
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86E6:
	byte al_393 = al_103 * 0x02
	word16 ax_394 = DPB(ax_104, al_393, 0)
	byte C_398 = cond(al_393)
	branch al_393 == 0x00 l0800_86BC
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86BC:
	al_393 = Mem0[ds_20:si_109:byte] * 0x02 + (al_393 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_394 = DPB(ax_104, al_393, 0) (alias)
	C_398 = cond(al_393) (alias)
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86EA:
	al_110 = al_393 * 0x02
	cx_118 = DPB(0x0002, C_398 + 0x04, 0) (alias)
	ax_111 = DPB(ax_394, al_110, 0) (alias)
	byte C_410 = cond(al_110)
	branch al_110 == 0x00 l0800_86C2
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86C2:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_394, al_110, 0) (alias)
	C_410 = cond(al_110) (alias)
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F0:
	branch C_410 l0800_8701
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F2:
	al_110 = al_110 * 0x02
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	byte C_423 = cond(al_110)
	branch al_110 == 0x00 l0800_86C8
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86C8:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	C_423 = cond(al_110) (alias)
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F9:
	byte cl_431 = (byte) (cx_118 - 0x0001) * 0x02 + C_423
	cx_118 = DPB(cx_118 - 0x0001, cl_431, 0) (alias)
	branch cl_431 == 0x09 l0800_86A7
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A7:
	word16 cx_436 = DPB(cx_118 - 0x0001, 0x04, 0)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A9:
	al_110 = al_110 * 0x02
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	byte C_449 = cond(al_110)
	branch al_110 == 0x00 l0800_86A1
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A1:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	C_449 = cond(al_110) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86AD:
	bh_439 = bh_439 * 0x02 + C_449
	bx_116 = DPB(bx_116, bh_439, 8) (alias)
	cx_436 = cx_436 - 0x0001
	branch cx_436 != 0x0000 l0800_86A9
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B1:
	word16 cx_464 = DPB(cx_436, (bh_439 + 0x03) * 0x02, 0)
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B7:
	branch cx_464 == 0x0000 l0800_86B9
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B9:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B7_1:
	Mem471[es_24:di_129:word16] = Mem0[ds_20:si_109:word16]
	si_109 = si_109 + 0x0002
	di_129 = di_129 + 0x0002
	cx_464 = cx_464 - 0x0001
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8761:
	al_110 = al_103 * 0x02
	ax_111 = DPB(ax_104, al_110, 0) (alias)
	byte C_288 = cond(al_110)
	branch al_110 == 0x00 l0800_87A0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87A0:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_104, al_110, 0) (alias)
	C_288 = cond(al_110) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8765:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8768:
	branch C_288 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_876A:
	al_110 = al_110 * 0x02
	cx_118 = 0x0003
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	byte C_303 = cond(al_110)
	branch al_110 == 0x00 l0800_87A5
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87A5:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	C_303 = cond(al_110) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_876F:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8772:
	branch C_303 l0800_8701
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8774:
	byte cl_311 = Mem0[ds_20:si_109:byte]
	si_109 = si_109 + 0x0001
	word16 cx_314 = DPB(0x0003, cl_311, 0)
	branch cl_311 == 0x00 l0800_87B4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87B4:
	word16 ax_337 = ds_20 + (si_109 >>u 0x04)
	byte al_340 = (byte) ax_111
	di_129 = (di_129 & 0x000F) + 0x8000
	es_24 = es_24 + (di_129 >>u 0x04) - 0x0800
	si_109 = si_109 & 0x000F
	bx_116 = si_109 >>u 0x04
	ds_20 = ax_337
	al_110 = al_340 * 0x02
	ax_111 = DPB(ax_111, al_340 * 0x02, 0) (alias)
	byte C_347 = cond(al_340 * 0x02)
	branch al_340 * 0x02 != 0x00 l0800_87E3
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87DD:
	al_110 = Mem0[ax_337:si_109 & 0x000F:byte] * 0x02 + (al_340 * 0x02 <u 0x00)
	si_109 = (si_109 & 0x000F) + 0x0001
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	C_347 = cond(al_110) (alias)
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87E3:
	branch C_347 l0800_87E8
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87E8:
	*dsOut = psegLoc0A
	return si
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_867A_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:si si:di ds:<invalid> di:ds es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> dx:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_87E5:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_877B:
	cx_118 = cx_314 + 0x0008
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8701:
	al_110 = al_110 * 0x02
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	byte C_149 = cond(al_110)
	branch al_110 == 0x00 l0800_86CE
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86CE:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	C_149 = cond(al_110) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8705:
	branch C_149 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8707:
	byte al_157 = al_110 * 0x02
	word16 ax_158 = DPB(ax_111, al_157, 0)
	byte C_162 = cond(al_157)
	branch al_157 == 0x00 l0800_86D4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86D4:
	al_157 = Mem0[ds_20:si_109:byte] * 0x02 + (al_157 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_158 = DPB(ax_111, al_157, 0) (alias)
	C_162 = cond(al_157) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_870E:
	al_110 = al_157 * 0x02
	ax_111 = DPB(ax_158, al_110, 0) (alias)
	byte C_174 = cond(al_110)
	branch al_110 == 0x00 l0800_86DA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86DA:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_158, al_110, 0) (alias)
	C_174 = cond(al_110) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8714:
	branch C_174 l0800_8784
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8784:
	byte al_217 = al_110 * 0x02
	word16 ax_218 = DPB(ax_111, al_217, 0)
	byte C_222 = cond(al_217)
	branch al_217 == 0x00 l0800_87AA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87AA:
	al_217 = Mem0[ds_20:si_109:byte] * 0x02 + (al_217 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_218 = DPB(ax_111, al_217, 0) (alias)
	C_222 = cond(al_217) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8788:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_878B:
	al_110 = al_217 * 0x02
	bx_116 = DPB(bx_116, C_162 * 0x02 + C_222 | 0x04, 8) (alias)
	ax_111 = DPB(ax_218, al_110, 0) (alias)
	byte C_235 = cond(al_110)
	branch al_110 == 0x00 l0800_87AF
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87AF:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_218, al_110, 0) (alias)
	C_235 = cond(al_110) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8794:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8797:
	branch C_235 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8799:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8716:
	bx_116 = DPB(bx_116, C_162, 8) (alias)
	branch C_162 != 0x00 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_871D:
	bx_116 = DPB(bx_116, C_162 + 0x01, 8) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8722:
	al_110 = al_110 * 0x02
	ax_111 = DPB(ax_111, al_110, 0) (alias)
	branch al_110 == 0x00 l0800_86E0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86E0:
	al_110 = Mem0[ds_20:si_109:byte] * 0x02 + (al_110 <u 0x00)
	si_109 = si_109 + 0x0001
	ax_111 = DPB(ax_111, al_110, 0) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8726:
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8728:
	bx_116 = DPB(bx_116, Mem0[ds_20:si_109:byte], 0) (alias)
	__cli()
	word16 si_122 = si_109 + 0x0001
	word16 si_126 = di_129 - 0x0001 - bx_116
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8733:
	branch cx_118 == 0x0000 l0800_8736
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8736:
	__sti()
	si_109 = si_122
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8733_1:
	Mem133[es_24:di_129:byte] = Mem0[ds_20:si_126:byte]
	si_126 = si_126 + 0x0001
	di_129 = di_129 + 0x0001
	cx_118 = cx_118 - 0x0001
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)



byte fn0800_87EF(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: bl si
// Trashed: ah al ax bh bl bx eax ebx esi rax rbx rsi si sil
// Preserved: sp
fn0800_87EF_entry:
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87EF:
	word16 si_5
	byte al_6 = fn0800_87F4(si, ds, out si_5)
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F2_thunk_fn0800_87F4:
	word16 si_11
	fn0800_87F4(si_5, ds, out si_11)
	return al_6
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>

fn0800_87EF_exit:
// DataOut: bl si
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>



byte fn0800_87F4(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: al si
// Trashed: ah al ax eax esi rax rsi si sil
// Preserved: ah sp
fn0800_87F4_entry:
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F4:
	*siOut = si + 0x0002
	return Mem0[si + 0x0001:byte]
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_87F4_exit:
// DataOut: al si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:si + 0x0002 al:ah ah:ah



void fn0800_87F8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: di sp
fn0800_87F8_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_87F8:
	ptr32 es_di_9 = Mem0[ds:0x2E37:segptr32]
	word16 di_10 = (word16) es_di_9
	selector es_11 = SLICE(es_di_9, selector, 16)
	word16 ax_12 = Mem0[ds:0x2E31:word16]
	word16 cx_13 = 0x8000
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8804:
	branch cx_13 == 0x0000 l0800_8806
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8806:
	ptr32 es_di_21 = Mem0[ds:0x2E33:segptr32]
	word16 di_22 = (word16) es_di_21
	selector es_23 = SLICE(es_di_21, selector, 16)
	word16 ax_24 = Mem0[ds:0x2E31:word16]
	word16 cx_25 = 0x8000
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810:
	branch cx_25 == 0x0000 l0800_8812
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8812:
	ptr32 es_di_33 = Mem0[ds:0x2E3B:segptr32]
	word16 di_34 = (word16) es_di_33
	selector es_35 = SLICE(es_di_33, selector, 16)
	word16 cx_36 = Mem0[ds:0x2E31:word16]
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881C:
	branch cx_36 == 0x0000 l0800_881E
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881E:
	ptr32 es_di_47 = Mem0[ds:0x2E3F:segptr32]
	word16 di_48 = (word16) es_di_47
	selector es_49 = SLICE(es_di_47, selector, 16)
	word16 ax_50 = 0x0000
	word16 cx_53 = Mem0[ds:0x2E31:word16]
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8828:
	Mem57[es_49:di_48:word16] = ax_50
	di_48 = di_48 + 0x0002
	ax_50 = ax_50 + 0x0001
	cx_53 = cx_53 - 0x0001
	branch cx_53 != 0x0000 l0800_8828
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_882C:
	Mem63[ds:0x2E2D:word16] = cx_53
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

fn0800_87F8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di -2(fp):di

l0800_881C_1:
	Mem43[es_35:di_34:word16] = 0x0000
	di_34 = di_34 + 0x0002
	cx_36 = cx_36 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810_1:
	Mem29[es_23:di_22:word16] = ax_24
	di_22 = di_22 + 0x0002
	cx_25 = cx_25 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8804_1:
	Mem17[es_11:di_10:word16] = ax_12
	di_10 = di_10 + 0x0002
	cx_13 = cx_13 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di



void fn0800_8832(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: di si sp
fn0800_8832_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8832:
	fn0800_889A(ds)
	branch Mem0[ds:0x2E29:word16] <u 0x0002 l0800_8897
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_883E:
	branch Mem0[ds:0x2E65:word16] - Mem0[ds:0x2E6D:word16] <u 0x0003 l0800_8897
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_884D:
	word16 ax_35 = Mem0[ds:0x2E2D:word16]
	word16 si_33 = Mem0[ds:0x2E29:word16]
	word16 di_34 = Mem0[ds:0x2E2B:word16]
	word16 ax_38 = ax_35 + 0x0001
	branch ax_35 + 0x0001 != Mem0[ds:0x2E31:word16] l0800_8865
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8863:
	ax_38 = 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8865:
	Mem43[ds:0x2E2D:word16] = ax_38
	Mem45[ds:0x2E6D:word16] = Mem43[ds:0x2E6D:word16] + 0x0001
	fn0800_889A(ds)
	Mem48[ds:0x2E6D:word16] = Mem45[ds:0x2E6D:word16] - 0x0001
	Mem49[ds:0x2E2D:word16] = ax_35
	branch Mem49[ds:0x2E29:word16] <=u si_33 l0800_888F
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_888F:
	Mem55[ds:0x2E29:word16] = si_33
	Mem56[ds:0x2E2B:word16] = di_34
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_887D:
	Mem53[ds:0x2E29:word16] = 0x0001
	Mem54[ds:0x2E2B:word16] = 0x0000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8897:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_8832_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> di:di si:si es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



void fn0800_889A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: di ds si sp
fn0800_889A_entry:
	def ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_889A:
	Mem10[ds:0x2E2B:word16] = 0x0000
	Mem12[ds:0x2E29:word16] = 0x0001
	es_di_13 = Mem12[ds:0x2E6D:segptr32]
	di_14 = (word16) es_di_13 (alias)
	es_15 = SLICE(es_di_13, selector, 16) (alias)
	ax_16 = Mem0[Mem0[es_di_13:word16]:word16]
	al_17 = (byte) ax_16 (alias)
	Mem18[ds:0x4E90:word16] = ax_16
	di_19 = di_14 + 0x0001
	dx_21 = Mem18[ds:0x2E69:word16]
	dx_22 = dx_21 - (di_14 + 0x0001)
	SCZO_23 = cond(dx_22)
	Z_25 = SCZO_23 (alias)
	cx_28 = dx_22
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_88BC:
	cx_31 = PHI(cx_28, cx_236)
	Z_33 = PHI(Z_25, Z_231)
	di_36 = PHI(di_19, di_234)
	branch cx_31 == 0x0000 l0800_88BE
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BC_1:
	SCZO_229 = cond(al_17 - Mem18[es_15:di_36:byte])
	Z_231 = SCZO_229 (alias)
	di_234 = di_36 + 0x0001
	cx_236 = cx_31 - 0x0001
	branch al_17 != Mem18[es_15:di_36:byte] l0800_88BC
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BE:
	cx_39 = PHI(cx_31, cx_236)
	Z_41 = PHI(Z_33, Z_231)
	branch Z_41 l0800_88C1
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C0:
	cx_227 = cx_39 - 0x0001
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C1:
	cx_46 = PHI(cx_39, cx_227)
	dx_47 = dx_22 - cx_46
	es_di_48 = Mem18[ds:0x2E6D:segptr32]
	di_49 = (word16) es_di_48 (alias)
	ax_50 = Mem18[ds:0x2E69:word16]
	ax_51 = ax_50 - di_49
	Mem52[ds:0x4E94:word16] = ax_51
	di_53 = Mem52[ds:0x4E90:word16]
	di_54 = di_53 << 0x0001
	es_56 = Mem52[ds:0x2E39:selector]
	ax_57 = Mem52[es_56:di_53 << 0x0001:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88DC:
	ds_67 = PHI(ds, ds_114)
	ax_71 = PHI(ax_57, ax_124)
	branch ax_71 != Mem52[ds_67:0x2E31:word16] l0800_88E5
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E5:
	di_91 = ax_71
	di_92 = ax_71 << 0x0001
	es_93 = Mem52[ds_67:0x2E41:selector]
	bx_95 = Mem52[es_93:di_92:word16]
	Mem96[ds_67:0x4E92:word16] = bx_95
	bx_97 = Mem96[ds_67:0x2E2D:word16]
	branch bx_97 >u ax_71 l0800_8903
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88FC:
	bx_225 = bx_97 + Mem96[ds_67:0x2E31:word16]
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8903:
	bx_100 = PHI(bx_97, bx_225)
	bx_101 = bx_100 - ax_71
	es_si_102 = Mem96[ds_67:0x2E6D:segptr32]
	es_103 = SLICE(es_si_102, selector, 16) (alias)
	si_104 = (word16) es_si_102 (alias)
	si_105 = si_104 - bx_101
	ax_106 = Mem96[es_103:si_105:word16]
	branch Mem96[ds_67:0x4E90:word16] != ax_106 l0800_897E
// DataOut: bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8914:
	es_126 = Mem96[ds_67:0x2E3D:selector]
	cx_127 = Mem96[es_126:di_92:word16]
	branch cx_127 <=u bx_101 l0800_892D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_892D:
	branch cx_127 <=u dx_47 l0800_893A
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8931:
	cx_221 = cx_127 - dx_47
	bx_222 = bx_101 - cx_221
	cx_224 = dx_47
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893A:
	bx_157 = PHI(bx_101, bx_222)
	cx_158 = PHI(cx_127, cx_224)
	branch cx_158 != dx_47 l0800_8963
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893E:
	es_di_161 = Mem96[ds_67:0x2E6D:segptr32]
	di_162 = (word16) es_di_161 (alias)
	es_163 = SLICE(es_di_161, selector, 16) (alias)
	di_164 = di_162 + cx_158
	si_166 = di_164
	si_167 = di_164 - bx_157
	ax_169 = Mem96[ds_67:0x4E94:word16]
	ax_170 = ax_169 - cx_158
	SCZO_172 = cond(ax_170)
	Z_174 = SCZO_172 (alias)
	cx_177 = ax_170
	wLoc06_179 = ds_67
	ds_180 = Mem96[ds_67:0x2E6F:selector]
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957:
	cx_184 = PHI(cx_177, cx_220)
	Z_186 = PHI(Z_174, Z_213)
	di_189 = PHI(di_164, di_218)
	si_190 = PHI(si_167, si_216)
	branch cx_184 == 0x0000 l0800_8959
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957_1:
	SCZO_211 = cond(Mem96[ds_180:si_190:byte] - Mem96[es_163:di_189:byte])
	Z_213 = SCZO_211 (alias)
	si_216 = si_190 + 0x0001
	di_218 = di_189 + 0x0001
	cx_220 = cx_184 - 0x0001
	branch Mem96[ds_180:si_190:byte] != Mem96[es_163:di_189:byte] l0800_8957
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8959:
	cx_194 = PHI(cx_184, cx_220)
	Z_196 = PHI(Z_186, Z_213)
	branch Z_196 l0800_895C
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895B:
	cx_209 = cx_194 + 0x0001
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895C:
	cx_202 = PHI(cx_194, cx_209)
	ds_203 = ds_67
	ax_205 = ax_170 - cx_202
	cx_206 = dx_47
	cx_207 = dx_47 + ax_205
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8922:
	bx_153 = 0x0001
	cx_154 = dx_47
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8963:
	ds_135 = PHI(ds_67, ds_67, ds_203)
	bx_136 = PHI(bx_153, bx_157, bx_157)
	cx_137 = PHI(cx_154, cx_158, cx_207)
	branch cx_137 <=u Mem96[ds_135:0x2E2F:word16] l0800_896D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8969:
	cx_152 = Mem96[ds_135:0x2E2F:word16]
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_896D:
	cx_147 = PHI(cx_137, cx_152)
	branch cx_147 <u Mem96[ds_135:0x2E29:word16] l0800_897E
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8973:
	Mem150[ds_135:0x2E29:word16] = cx_147
	Mem151[ds_135:0x2E2B:word16] = bx_136
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_897E:
	ds_114 = PHI(ds_67, ds_135, ds_135)
	ax_124 = Mem96[ds_114:0x4E92:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E2:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8984:
	branch Mem52[ds_67:0x2E29:word16] != 0x0002 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_898B:
	branch Mem52[ds_67:0x2E2B:word16] <=u 0x0100 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8996:
	Mem89[ds_67:0x2E29:word16] = 0x0001
	Mem90[ds_67:0x2E2B:word16] = 0x0000
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_89A5:
	return
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si

fn0800_889A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> di:di dx:<invalid> cx:<invalid> es:<invalid> si:si bx:<invalid> Sequence es:si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si



void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di sp
// Stack args: Stack +0002(8)
fn0800_89A8_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_89A8:
	word16 dx_12 = Mem0[ds:0x2E31:word16]
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_89B1:
	word16 di_28 = Mem0[ds:0x2E2D:word16]
	selector es_30 = Mem0[ds:0x2E41:selector]
	word16 ax_31 = Mem0[es_30:di_28 << 0x0001:word16]
	Mem33[es_30:di_28 << 0x0001:word16] = dx_12
	branch Mem33[ds:0x2E2D:word16] == ax_31 l0800_89EA
// DataOut: ax ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_89C7:
	ptr32 es_di_165 = Mem33[ds:0x2E6D:segptr32]
	word16 di_169 = Mem33[SLICE(es_di_165, selector, 16):(word16) es_di_165 - dx_12:word16]
	Mem173[Mem33[ds:0x2E39:selector]:di_169 << 0x0001:word16] = ax_31
	branch ax_31 != dx_12 l0800_89EA
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_89E0:
	Mem177[Mem173[ds:0x2E35:selector]:di_169 << 0x0001:word16] = dx_12
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_89EA:
	word16 di_39 = Mem0[Mem0[Mem33[ds:0x2E6D:segptr32]:word16]:word16]
	word16 ax_41 = Mem33[ds:0x2E2D:word16]
	selector es_43 = Mem33[ds:0x2E39:selector]
	branch Mem33[es_43:di_39 << 0x0001:word16] != dx_12 l0800_8A08
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A08:
	Mem164[Mem33[ds:0x2E41:selector]:Mem33[Mem33[ds:0x2E35:selector]:di_39 << 0x0001:word16] << 0x0001:word16] = ax_41
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_89FF:
	Mem157[es_43:di_39 << 0x0001:word16] = ax_41
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A18:
	Mem48[Mem33[ds:0x2E35:selector]:di_39 << 0x0001:word16] = ax_41
	ptr32 es_di_49 = Mem48[ds:0x2E6D:segptr32]
	word16 di_50 = (word16) es_di_49
	word16 bx_57 = Mem48[ds:0x2E69:word16] - (di_50 + 0x0001)
	selector es_51 = SLICE(es_di_49, selector, 16)
	byte al_52 = Mem0[Mem0[es_di_49:byte]:byte]
	word16 di_154 = di_50 + 0x0001
	byte Z_150 = cond(bx_57)
	word16 cx_147 = bx_57
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A2F:
	branch cx_147 == 0x0000 l0800_8A31
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A2F_1:
	Z_150 = cond(al_52 - Mem48[es_51:di_178:byte]) (alias)
	di_154 = di_178 + 0x0001
	cx_147 = cx_147 - 0x0001
	di_178 = di_154
	branch al_52 != Mem48[es_51:di_178:byte] l0800_8A2F
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A31:
	branch Z_150 l0800_8A34
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A33:
	cx_147 = cx_147 - 0x0001
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A34:
	word16 bx_111 = bx_57 - cx_147
	Mem87[Mem48[ds:0x2E3D:selector]:Mem48[ds:0x2E2D:word16] << 0x0001:word16] = bx_111
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A86:
	word16 ax_96 = Mem87[ds:0x2E2D:word16]
	word16 ax_102 = ax_96 + 0x0001
	branch ax_96 + 0x0001 != dx_12 l0800_8A90
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A8E:
	ax_102 = 0x0000
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A90:
	Mem104[ds:0x2E2D:word16] = ax_102
	Mem106[ds:0x2E6D:word16] = Mem104[ds:0x2E6D:word16] + 0x0001
	word16 v20_107 = wArg02 - 0x0001
	wArg02 = v20_107
	branch v20_107 == 0x0000 l0800_8AA8
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8AA8:
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

fn0800_89A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> di:di es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

l0800_8A9C:
	bx_111 = bx_111 - 0x0001
	branch bx_111 >u 0x0001 l0800_8A46
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A46:
	word16 di_114 = Mem106[ds:0x2E2D:word16]
	Mem117[Mem106[ds:0x2E3D:selector]:di_114 << 0x0001:word16] = bx_111
	selector es_118 = Mem117[ds:0x2E41:selector]
	word16 v22_120 = Mem117[es_118:di_114 << 0x0001:word16]
	Mem121[es_118:di_114 << 0x0001:word16] = Mem117[ds:0x2E2D:word16]
	branch Mem121[ds:0x2E2D:word16] == v22_120 l0800_8A86
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A63:
	ptr32 es_di_126 = Mem121[ds:0x2E6D:segptr32]
	word16 di_130 = Mem121[SLICE(es_di_126, selector, 16):(word16) es_di_126 - dx_12:word16]
	Mem134[Mem121[ds:0x2E39:selector]:di_130 << 0x0001:word16] = v22_120
	branch v22_120 != dx_12 l0800_8A86
// DataOut: bx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A7C:
	Mem138[Mem134[ds:0x2E35:selector]:di_130 << 0x0001:word16] = dx_12
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8AA5:
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)



byte fn0800_8B0D(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8B0D_entry:
	*dsOut = ds
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8B0D:
	word16 bp_120 = fp - 0x0002
	word16 sp_121 = fp - 0x0004
	word16 si_119 = wArg06
	byte SZO_116 = cond(wArg06)
	byte C_115 = false
	branch wArg06 != 0x0000 l0800_8B36
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B18:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B28:
	byte SCZO_122 = cond(Mem0[ds:0x224E:word16])
	branch Mem0[ds:0x224E:word16] != 0x0000 l0800_8B1A
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B1A:
	Mem139[ds:0x224E:word16] = Mem0[ds:0x224E:word16] - 0x0001
	word16 bx_140 = Mem139[ds:0x224E:word16]
	call SEQ(cs, Mem139[ds:(bx_140 << 0x0001) + 0x4E96:word16]) (retsize: 2; depth: 6)
		uses: al_111,bLoc06,bp,bp_120,bx_140 << 0x0001,C_115,cond(bx_140 << 0x0001),cs_113,cx_118,dl_110,ds_114,SCZO_122,si,si_119,sp_121,ss_117,SZO_116,wLoc06
		defs: al_155,bp_144,bx_154,C_148,cs_152,cx_153,dl_156,ds_151,SCZO_150,si_146,sp_143,ss_145,SZO_147,Z_149
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B2F:
	fn0800_0150(al)
	call SEQ(cs, Mem0[ds:0x2352:word16]) (retsize: 2; depth: 6)
		uses: al_111,bLoc06,bp,bp_120,bx_112,C_115,cs_113,cx_118,dl_110,ds_114,SCZO_122,SCZO_122,si,si_119,sp_121,ss_117,SZO_116,wLoc06
		defs: al_136,bp_125,bx_135,C_129,cs_133,cx_134,dl_137,ds_132,SCZO_131,si_127,sp_124,ss_126,SZO_128,Z_130
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B36:
	byte dl_107
	byte al_106 = fn0800_01B9(ds, out dl_107)
	fn0800_0163()
	byte SCZO_34 = cond(wArg04)
	branch wArg04 != 0x0000 l0800_8B55
// DataOut: al di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> es:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B42:
	byte SZO_59 = cond(si_119)
	branch si_119 != 0x0000 l0800_8B4E
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B46:
	word16 sp_80
	word16 bp_81
	selector ss_82
	word16 si_83
	byte SZO_84
	byte C_85
	byte Z_86
	byte SCZO_87
	selector ds_88
	selector cs_89
	word16 cx_90
	word16 bx_91
	byte al_92
	byte dl_93
	call SEQ(cs, Mem0[ds:0x2354:word16]) (retsize: 2; depth: 6)
		uses: al_32,bLoc06,bp,bp_29,bx_21,cs_22,cx_27,dl_31,ds_23,false,SCZO_34,si,si_28,sp_30,ss_26,SZO_59,SZO_59,wLoc06
		defs: al_92,bp_81,bx_91,C_85,cs_89,cx_90,dl_93,ds_88,SCZO_87,si_83,sp_80,ss_82,SZO_84,Z_86
	call SEQ(cs_89, Mem0[ds_88:0x2356:word16]) (retsize: 2; depth: 6)
		uses: al_92,bLoc06,bp,bp_81,bx_91,C_85,cs_89,cx_90,dl_93,ds_88,SCZO_87,si,si_83,sp_80,ss_82,SZO_84,wLoc06,Z_86
		defs: al_106,bp_95,bx_105,C_99,cs_103,cx_104,dl_107,ds_102,SCZO_101,si_97,sp_94,ss_96,SZO_98,Z_100
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B4E:
	fn0800_0164(al_106, (byte) wArg02)
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// Terminates process

l0800_8B55:
	return dl_107
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_8B0D_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_8B5A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8B5A_entry:
	*siOut = si
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B5A:
	selector ds_19
	return fn0800_8B0D(0x00, ds, wArg02, 0x0000, 0x0000, out ds_19)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B5A_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



void fn0800_8B95(byte al, byte dl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al dl
// LiveOut:
// Trashed: ah ax bh bl bx dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8B95_entry:
// DataOut: al dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8B95:
	byte dh_8
	word16 cx_9
	word16 dx_12 = DPB(dx, msdos_get_system_date(out dh_8, out cx_9), 0)
	word16 bx_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	Mem17[es_16:bx_15:word16] = cx_9
	Mem18[es_16:bx_15 + 0x0002:word16] = dx_12
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B95_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2A dl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



void fn0800_8BA8(byte al, byte cl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cl
// LiveOut:
// Trashed: ah ax bh bl bx cl cx eax ebx ecx es rax rbx rcx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8BA8_entry:
// DataOut: al cl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8BA8:
	word16 bx_16 = (word16) ptrArg02
	selector es_17 = SLICE(ptrArg02, selector, 16)
	byte ch_8
	byte dh_9
	byte dl_10
	Mem18[es_17:bx_16:word16] = DPB(cx, msdos_get_system_time(out ch_8, out dh_9, out dl_10), 0)
	Mem20[es_17:bx_16 + 0x0002:word16] = dx
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8BA8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2C cl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



word16 fn0800_8BBB(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BBB_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BBB:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC0_thunk_fn0800_8BD8:
	word16 dx_17
	word16 bp_18
	word16 si_19
	word16 di_20
	return fn0800_8BD8(0x0000, bp, si, di, out dx_17, out bp_18, out si_19, out di_20)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8BBB_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BC2(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BC2_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BC2:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC5_thunk_fn0800_8BD8:
	word16 dx_15
	word16 bp_16
	word16 si_17
	word16 di_18
	return fn0800_8BD8(0x0001, bp, si, di, out dx_15, out bp_16, out si_17, out di_18)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:0x0001 -2(fp):<invalid> 0(fp):cs

fn0800_8BC2_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BCA(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BCA_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BCA:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BD0_thunk_fn0800_8BD8:
	word16 dx_15
	word16 bp_16
	word16 si_17
	word16 di_18
	return fn0800_8BD8(0x0002, bp, si, di, out dx_15, out bp_16, out si_17, out di_18)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:0x0002 -2(fp):<invalid> 0(fp):cs

fn0800_8BCA_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BD8(word16 cx, word16 bp, word16 si, word16 di, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp cx di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BD8_entry:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_8BD8:
	Mem5[ss:v3 - 0x0002:word16] = bp
	Mem9[ss:v3 - 0x0004:word16] = si
	Mem12[ss:v3 - 0x0006:word16] = di
	word16 cx_22 = Mem12[ss:v3 + 0x000A:word16]
	word16 sp_10 = v3 - 0x0006
	word16 di_15 = cx
	word16 ax_101 = Mem12[ss:v3 + 0x0004:word16]
	word16 dx_117 = Mem12[ss:v3 + 0x0006:word16]
	word16 bx_162 = Mem12[ss:v3 + 0x0008:word16]
	word16 cx_157 = cx_22
	branch cx_22 != 0x0000 l0800_8BF7
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BEF:
	word32 dx_ax_180 = SEQ(dx_117, ax_101)
	branch dx_117 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF3:
	branch bx_162 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C5C:
	word16 dx_187 = dx_ax_180 % bx_162
	ax_101 = dx_ax_180 /u bx_162
	branch (cx & 0x0002) == 0x0000 l0800_8C65
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C64:
	ax_101 = dx_187
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C65:
	*dxOut = 0x0000
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF7:
	branch (cx & 0x0001) != 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BFD:
	branch dx_117 >= 0x0000 l0800_8C0B
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C01:
	ax_101 = -ax_101
	dx_117 = -dx_117 - (ax_101 == 0x0000)
	di_15 = cx | 0x000C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0B:
	cx_157 = cx_22
	branch cx_22 >= 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0F:
	bx_162 = -bx_162
	cx_157 = -cx_22 - (bx_162 == 0x0000)
	di_15 = di_15 ^ 0x0004
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C19:
	Mem70[ss:v3 - 0x0008:word16] = di_15
	ui32 bp_bx_67 = SEQ(cx_157, bx_162)
	word16 cx_108 = 0x0020
	word16 di_105 = 0x0000
	word16 si_106 = 0x0000
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C23:
	ax_101 = ax_101 << 0x0001
	dx_117 = __rcl(dx_117, 0x01, cond(ax_101))
	*dxOut = dx_117
	si_106 = __rcl(si_106, 0x01, (dx_117 & 0x8000) != 0x0000)
	di_105 = __rcl(di_105, 0x01, (si_106 & 0x8000) != 0x0000)
	ui32 di_si_93 = SEQ(di_105, si_106)
	branch di_105 <u cx_157 l0800_8C3A
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C2F:
	branch di_105 >u cx_157 l0800_8C35
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C31:
	branch si_106 <u bx_162 l0800_8C3A
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C35:
	ui32 di_si_138 = di_si_93 - bp_bx_67
	di_105 = SLICE(di_si_138, word16, 16) (alias)
	si_106 = (word16) di_si_138 (alias)
	ax_101 = ax_101 + 0x0001
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3A:
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_8C23
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3C:
	word16 bx_109 = Mem70[ss:v3 - 0x0008:word16]
	sp_10 = v3 - 0x0006
	branch (bx_109 & 0x0002) == 0x0000 l0800_8C49
// DataOut: ax bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C43:
	ax_101 = si_106
	*dxOut = di_105
	bx_109 = bx_109 >>u 0x0001
// DataOut: ax bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C49:
	branch (bx_109 & 0x0004) == 0x0000 l0800_8C56
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C4F:
	ax_101 = -ax_101
	*dxOut = -dx_117 - (ax_101 == 0x0000)
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C56:
	word16 sp_40 = sp_10 + 0x0002
	*diOut = Mem12[ss:sp_10:word16]
	*siOut = Mem12[ss:sp_40:word16]
	*bpOut = Mem12[ss:sp_40 + 0x0002:word16]
	return ax_101
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

fn0800_8BD8_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:v3 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>



word16 fn0800_8C69(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C69_entry:
// DataOut: ax bp cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C69:
	branch cl >=u 0x10 l0800_8C81
// DataOut: ax bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8C81:
	*dxOut = ax << cl - 0x10
	return 0x0000
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C71:
	*dxOut = dx << cl | ax >>u -cl + 0x10
	return ax << cl
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C69_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C8A_entry:
// DataOut: ax bp cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C8A:
	branch cl >=u 0x10 l0800_8CA2
// DataOut: ax bp cl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CA2:
	int32 dx_ax_38 = (int32) dx
	*dxOut = SLICE(dx_ax_38, word16, 16)
	return (word16) dx_ax_38 >> cl - 0x10
// DataOut: al ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C92:
	*dxOut = dx >> cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: al ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C8A_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:dx >> cl cl:<invalid> Sequence dx:ax:(int32) dx -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CAA(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CAA_entry:
// DataOut: ax bp cl di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CAA:
	branch cl >=u 0x10 l0800_8CC2
// DataOut: ax bp cl di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CC2:
	*dxOut = 0x0000
	return dx >>u cl - 0x10
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8CB2:
	*dxOut = dx >>u cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8CAA_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CCB(word16 ax, word16 cx, word16 dx, word16 bx, selector psegArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dh dl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CCB_entry:
// DataOut: ax bx cx dh di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CCB:
	byte cl_16 = (byte) cx
	branch cx >= 0x0000 l0800_8CDE
// DataOut: ax bx cl cx dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CDE:
	word16 ax_73 = ax + bx
	byte al_74 = (byte) ax_73
	branch ax_73 >=u 0x0000 l0800_8CE6
// DataOut: al ax cl dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8CE2:
	dx = dx + 0x1000
	dh = SLICE(dx + 0x1000, byte, 8) (alias)
// DataOut: al ax cl dh di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx ax:ax + bx -2(fp):<invalid> 0(fp):cs

l0800_8CE6:
	*dxOut = DPB(dx, dh + (cl_16 << 0x04), 8) + (ax_73 >>u 0x04)
	return DPB(ax_73 >>u 0x04, al_74, 0) & 0x000F
// DataOut: al ax di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx ax:ax + bx dx:dx + 0x1000 -2(fp):<invalid> 0(fp):cs

l0800_8CD2:
	word16 bx_41 = (word16) (SEQ(~cx, bx + 0x0001) + 0x00000001)
// DataOut: ax bl bx cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8D0D:
	word16 ax_47 = ax - bx_41
	byte al_48 = (byte) ax_47
	branch ax_47 >=u 0x0000 l0800_8D15
// DataOut: al ax bl cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 -2(fp):<invalid> 0(fp):cs

l0800_8D11:
	dx = dx - 0x1000
// DataOut: al ax bl cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) -2(fp):<invalid> 0(fp):cs

l0800_8D15:
	*dxOut = dx - DPB(bx_41, 0x00, 0) + (ax_47 >>u 0x04)
	return DPB(ax_47 >>u 0x04, al_48, 0) & 0x000F
// DataOut: al ax di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) dx:dx - 0x1000 -2(fp):<invalid> 0(fp):cs

fn0800_8CCB_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> ch:al cl:0x04 dh:<invalid> al:<invalid> bx:<invalid> bh:0x40 bl:0x00 -2(fp):<invalid> 0(fp):cs



word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_8D2B_entry:
// DataOut: di dil dl ds sil ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D2B:
	word16 si_18
	word16 si_12 = wArg02
	branch wArg02 < 0x0000 l0800_8D4B
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D4B:
	si_18 = -wArg02
	branch si_18 > 0x0023 l0800_8D3B
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D52:
	Mem42[ds:0x2516:word16] = 0xFFFF
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D36:
	branch wArg02 <= 0x0058 l0800_8D3E
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3B:
	si_12 = 0x0057
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3E:
	Mem30[ds:0x2516:word16] = si_12
	si_18 = (int16) Mem30[ds:si_12 + 0x2518:byte]
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D58:
	Mem19[ds:0x007F:word16] = si_18
	return 0xFFFF
// DataOut: al ax di dil dl ds sil ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> -4(fp):si -2(fp):bp

fn0800_8D2B_exit:
// DataOut: al ax
// DataOut (flags): DP
// SymbolicIn: sp:fp bp:bp si:si al:0xFF ax:0xFFFF -4(fp):si -2(fp):bp



void fn0800_8D76(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8D76_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D76:
	word16 dx_10
	msdos_ioctl_get_device_info(wArg02, out dx_10)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8D76_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x0000 bx:<invalid> dx:0x4400 -2(fp):bp



byte fn0800_8D87(word16 bp, word16 di, selector es, selector psegArg00, word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di es ss
// LiveOut: sil sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)
fn0800_8D87_entry:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)

l0800_8D87:
	word16 di_141 = (word16) ptrArg08
	selector es_20 = SLICE(ptrArg08, selector, 16)
	byte bl_23 = (byte) wArg06
	branch wArg06 >u 0x0024 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8D9B:
	branch bl_23 <u 0x02 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8DA0:
	word16 ax_104 = wArg0C
	word16 cx_169 = wArg0E
	branch wArg0E >= 0x0000 l0800_8DBC
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DAA:
	branch bArg04 == 0x00 l0800_8DBC
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DB0:
	Mem198[es_20:di_141:byte] = 0x2D
	ax_104 = -wArg0C
	di_141 = di_141 + 0x0001
	cx_169 = -wArg0E - (ax_104 == 0x0000)
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DBC:
	word16 si_105 = fp - 0x0024
	branch cx_169 == 0x0000 l0800_8DD1
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DC1:
	word32 dx_ax_176 = (uint32) (uint16) cx_169
	word32 dx_ax_182 = SEQ(dx_ax_176 % wArg06, ax_104)
	Mem191[ss:si_105:byte] = (byte) (dx_ax_182 % wArg06)
	word16 ax_179 = dx_ax_176 /u wArg06
	cx_169 = ax_179
	ax_104 = dx_ax_182 /u wArg06
	si_105 = si_105 + 0x0001
	branch ax_179 == 0x0000 l0800_8DD9
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DD9:
	branch ax_104 != 0x0000 l0800_8DD1
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DD1:
	word32 dx_ax_107 = (uint32) (uint16) ax_104
	Mem115[ss:si_105:byte] = (byte) (dx_ax_107 % wArg06)
	ax_104 = dx_ax_107 /u wArg06
	si_105 = si_105 + 0x0001
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DDD:
	word16 cx_134 = 0x0024 - fp + si_105
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DE5:
	byte al_154
	si_105 = si_105 - 0x0001
	byte al_146 = Mem0[ss:si_105:byte]
	branch al_146 >=u 0x0A l0800_8DF1
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:<invalid> al:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF1:
	al_154 = al_146 - 0x0A + bArg02
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DED:
	al_154 = al_146 + 0x30
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF4:
	Mem156[es_20:di_141:byte] = al_154
	di_141 = di_141 + 0x0001
	cx_134 = cx_134 - 0x0001
	branch cx_134 != 0x0000 l0800_8DE5
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF7:
	Mem46[es_20:di_141:byte] = 0x00
	return (byte) si
	Mem61[es:di:byte] = 0x00
	return (byte) wArg04
// DataOut: ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

fn0800_8D87_exit:
// DataOut: sil sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 bp:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> es:<invalid> dx:<invalid> ax:<invalid> di:<invalid> si:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

l0800_8DCF:
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)



byte fn0800_8E09(word16 di, selector es, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di es ss
// LiveOut: sil
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8E09_entry:
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8E09:
	return fn0800_8D87(fp - 0x0002, di, es, psegLoc12, 0x0061, 0x0000, 0x000A, DPB(ptrLoc0A, wArg02, 0), wArg04, wArg06, 0x0000)
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8E09_exit:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> dx:<invalid> si:<invalid> cx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x000A -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_8E29(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_8E29_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_8E29:
	Mem13[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 ax_19 = DPB(ax, bArg08, 0)
	*dxOut = wArg04
	branch msdos_set_file_position(wArg02, SEQ(wArg06, wArg04), bArg08, SEQ(wArg04, ax_19)) l0800_8E4B
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E4B:
	fn0800_8D2B(ds, ax_19)
	*dxOut = 0x0000
	ax_19 = 0xFFFF (alias)
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E49:
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E50:
	return ax_19
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp

fn0800_8E29_exit:
// DataOut: al ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp



word16 fn0800_8E52(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
fn0800_8E52_entry:
// DataOut: al ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E52:
	word16 ax_21
	__syscall(0x21)
	word16 ax_12 = DPB(ax, 0x39, 8)
	branch C l0800_8E64
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E64:
	ax_21 = fn0800_8D2B(ds, ax_12)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E60:
	ax_21 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E68:
	return ax_21
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8E52_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_8E6A(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & silOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al ax di ds dx sil
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_8E6A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_8E6A:
	branch (wArg08 | wArg0A) != 0x0000 l0800_8E7D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E75:
	wArg0A = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E7D:
	word16 ax_27
	word16 dx_26
	branch (wArg04 | wArg06) != 0x0000 l0800_8E8F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E8F:
	dx_26 = wArg06
	ax_27 = wArg04
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +000A(16)

l0800_8E88:
	dx_26 = ds
	ax_27 = 0x2572
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +000A(16)

l0800_8E95:
	word16 dx_36
	word16 di_37
	selector es_38
	selector ds_39
	word16 ax_40 = fn0800_9CE6(0x4ED6, wArg0A, ax_27, dx_26, out dx_36, out di_37, out es_38, out ds_39)
	*silOut = fn0800_8E09(di_37, es_38, ax_40, dx_36, wArg02)
	Mem50[ss:fp - 0x0004:word16] = ds_39
	Mem54[ss:fp - 0x0006:word16] = 0x2576
	Mem56[ss:fp - 0x0008:word16] = Mem54[ss:fp + 0x000A:word16]
	Mem58[ss:fp - 0x000A:word16] = Mem56[ss:fp + 0x0008:word16]
	fn0800_BF5F(ptrArg00, ptrArg04)
	*dxOut = Mem58[ss:fp + 0x000A:word16]
	return Mem58[ss:fp + 0x0008:word16]
// DataOut: al ax di ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds

fn0800_8E6A_exit:
// DataOut: al ax di ds dx sil
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -12(fp):0x4ED6 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds



word16 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dx
// LiveOut: al ax dl dx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: si sp
fn0800_8F18_entry:
// DataOut: ax bp bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F18:
	word16 ax_12 = dx
	branch dx == 0x0000 l0800_8F21
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8F1F:
	ax_12 = (word16) (bx *u dx) (alias)
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si -2(fp):si

l0800_8F21:
	branch cx == 0x0000 l0800_8F28
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F23:
	ax_12 = (word16) (ax *u cx) + ax_12
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F28:
	word32 dx_ax_29 = bx *u ax
	*dxOut = SLICE(dx_ax_29, word16, 16) + ax_12
	return (word16) dx_ax_29
// DataOut: al ax bp di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:<invalid> si:si dx:si Sequence dx:ax:<invalid> cx:si -2(fp):si

fn0800_8F18_exit:
// DataOut: al ax dl dx
// DataOut (flags): 
// SymbolicIn: sp:fp ax:si si:si dx:<invalid> Sequence dx:ax:bx *u si cx:si -2(fp):si



byte fn0800_8F2F(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ax bl bx cl cx dx
// LiveOut: CZ dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: sp
fn0800_8F2F_entry:
// DataOut: al ax bl bx cl cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F2F:
	word16 dx_12 = dx + (ax >>u 0x04)
	word16 cx_22 = cx + (bx >>u 0x04)
	*dlOut = (byte) dx_12
	word16 ax_17 = DPB(ax >>u 0x04, bl, 8)
	word16 bx_24 = DPB(bx >>u 0x04, bl, 0)
	byte CZ_34 = cond(dx_12 - cx_22)
	branch dx_12 != cx_22 l0800_8F4F
// DataOut: ax bx dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp

l0800_8F4D:
	CZ_34 = cond((ax_17 & 0x000F) - (bx_24 & 0x000F)) (alias)
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

l0800_8F4F:
	return CZ_34
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

fn0800_8F2F_exit:
// DataOut: dl
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx



word16 fn0800_8F50(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_8F50_entry:
// DataOut: al di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F50:
	word16 wLoc04_31
	word16 ax_21
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0002) == 0x0000 l0800_8F66
// DataOut: al di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F66:
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_21) l0800_8F79
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_8F79:
	wLoc04_31 = ax_21
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F77:
// DataOut: ax di dil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F60:
	wLoc04_31 = 0x0005
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F7A:
	ax_21 = fn0800_8D2B(ds, wLoc04_31)
// DataOut: ax di dil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 bx:<invalid> ax:0x0005 ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_8F7D:
	return ax_21
// DataOut: ax di dil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F50_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_8F7F(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_8F7F_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8F7F:
	word16 ax_12 = DPB(ax, 0x41, 8)
	byte dl_17 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_8F91
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F91:
	fn0800_8D2B(ds, ax_12)
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F8D:
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F95:
	return dl_17
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F7F_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_9764(byte dl, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl ds ss
// LiveOut: ax di dl ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9764_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0014(16) Stack +0002(16) Stack +0004(16)

l0800_9764:
	fn0800_8B95((byte) (fp - 0x0006), dl, DPB(ptrLoc12, fp - 0x0006, 0))
	fn0800_8BA8((byte) (fp - 0x000A), (byte) ss, DPB(ptrLoc12, fp - 0x000A, 0))
	word16 dx_49
	word16 di_50
	selector ds_51
	word16 ax_52 = fn0800_C04F(ds, DPB(ptrLoc16, fp - 0x0006, 0), DPB(ptrLoc12, fp - 0x000A, 0), out dx_49, out di_50, out ds_51)
	branch (wArg02 | wArg04) == 0x0000 l0800_97AC
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_979C:
	word16 bx_81 = (word16) ptrArg02
	selector es_82 = SLICE(ptrArg02, selector, 16)
	Mem85[es_82:bx_81 + 0x0002:word16] = dx_49
	Mem86[es_82:bx_81:word16] = ax_52
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 ax:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16)

l0800_97AC:
	*dlOut = (byte) dx_49
	return ax_52
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_9764_exit:
// DataOut: ax di dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_97B6(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97B6_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97B6:
	word16 dx_23
	return fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x01, out dx_23)
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_97B6_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



byte fn0800_97CC(selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97CC_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97CC:
	byte al_19
	byte dl_9 = (byte) wArg02
	*dlOut = dl_9
	branch wArg02 != 0xFFFF l0800_97DC
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_97DC:
	branch (Mem0[ds:DPB(ax, 0x00, 8) + 0x2251:byte] & 0x08) == 0x00 l0800_97F2
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_97F2:
	al_19 = dl_9
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97E9:
	al_19 = (byte) (DPB(ax, 0x00, 8) + 0xFFE0) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97D7:
	al_19 = 0xFF (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_97F6:
	return al_19
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp

fn0800_97CC_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp



byte fn0800_97F8(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_97F8_entry:
// DataOut: al di ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_97F8:
	word16 ax_12 = DPB(ax, 0x41, 8)
	byte dl_17 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_980A
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_980A:
	fn0800_8D2B(ds, ax_12)
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_9806:
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_980E:
	return dl_17
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_97F8_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_9828(selector ds, segptr32 ptrArg04, selector psegArg06, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0004(32)
fn0800_9828_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(32)

l0800_9828:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(8) Stack +0004(32)

l0800_988C:
	word16 sp_161 = fp - 0x009E
	word16 di_106 = fp - 0x0098
	word16 si_103 = (word16) ptrArg04
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009C bp:fp - 0x0002 -156(fp):di -154(fp):si -24(fp):0x0000 -22(fp):0x0050 -20(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_989B:
	byte al_39 = Mem0[ds:si_103:byte]
	si_103 = si_103 + 0x0001
	byte al_112 = al_39
	ax = DPB(ax, al_39, 0) (alias)
	branch al_39 == 0x00 l0800_98B3
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98B3:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_98A1:
	branch al_39 == 0x25 l0800_98B6
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98B6:
	al_112 = Mem0[ds:si_103:byte]
	ax = DPB(ax, al_112, 0) (alias)
	si_103 = si_103 + 0x0001
	branch al_112 == 0x25 l0800_98A5
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0012(16) Local -0016(8)

l0800_98BF:
	byte bLoc0D_126 = 0x00
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98DD:
	word16 ax_138 = DPB(ax, 0x00, 8)
	byte bl_142 = (byte) ax_138
	byte dl_140 = (byte) ax_138
	word16 bx_144 = DPB(ax_138, bl_142 - 0x20, 0)
	branch bl_142 >=u 0x80 l0800_98FE
// DataOut: bp bx ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98EB:
	word16 bx_178 = DPB(ax_138, Mem0[ds:bx_144 + 0x2605:byte], 0)
	branch bx_178 <=u 0x0017 l0800_98F7
// DataOut: bp bx ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98F7:
	switch (bx_178 << 0x0001) { l0800_9917 }
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9917:
	branch true l0800_98FE
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98FE:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_991C:
	branch bLoc0D_126 == 0x2B l0800_9925
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9922:
	bLoc0D_126 = dl_140
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9925:
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98DB:
	ax = DPB(ax_138, Mem0[ds:si_103:byte], 0) (alias)
	si_103 = si_103 + 0x0001
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98F4:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_9C82:
	word16 si_151 = si_103
	byte al_156 = 0x25
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_9C8D:
	di_106 = fn0800_984F(al_156, fp - 0x0002, di_106)
	byte al_165 = Mem0[ds:si_151:byte]
	sp_161 = sp_161 + 0xFFFE
	si_151 = si_151 + 0x0001
	al_156 = al_165
	branch al_165 != 0x00 l0800_9C8D
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_9C96:
	branch bLoc16 >= 0x50 l0800_9C9F
	branch bLoc16 >= 0x50 l0800_9C9F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9C9C:
	fn0800_9858(fp - 0x0002, fn0800_9858(fp - 0x0002, di_106))
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9C9F:
	word16 sp_80 = sp_161 + 0x0002
	branch 0x0000 == 0x0000 l0800_9CAB
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CAB:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CA6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CAE:
	*diOut = Mem0[ss:sp_80:word16]
	return Mem0[ss:sp_80 + 0x0002:word16]
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp

fn0800_9828_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp

l0800_98A5:
	Mem105[ss:di_106:byte] = al_112
	byte v16_107 = bLoc16 - 0x01
	di_106 = di_106 + 0x0001
	bLoc16 = v16_107
	branch v16_107 > 0x00 l0800_989B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98AE:
	di_106 = fn0800_9858(fp - 0x0002, di_106)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)



word16 fn0800_984F(byte al, word16 bp, word16 di)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ss
// LiveOut: di
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved: sp
fn0800_984F_entry:
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_984F:
	Mem4[ss:di:byte] = al
	byte v8_9 = Mem4[ss:bp - 0x0014:byte] - 0x01
	Mem10[ss:bp - 0x0014:byte] = v8_9
	branch v8_9 != 0x00 l0800_988B_in_fn0800_984F
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_988B_in_fn0800_984F:
	return di + 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_9856_thunk_fn0800_9858:
	word16 di_14 = fn0800_9858(bp, di + 0x0001)
	return di_14
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_9856_thunk_fn0800_9858:
	return fn0800_9858(bp, di_14)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>

fn0800_984F_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_9858(word16 bp, word16 di)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: di sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved:
fn0800_9858_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9858:
	word16 di_18 = di - (bp - 0x0096)
	selector ss_36
	word16 bp_40
	word16 ax_41
	word16 di_42
	call SEQ(cs, Mem0[ss:bp + 0x000E:word16]) (retsize: 2; depth: 20)
		uses: bp,bp - 0x0096,bp - 0x0096,bx,bx,cond(di_18),cs,cx,cx,di_18,di_18,dx,dx,es,es,fp - 0x0012,Mem0[ss:bp + 0x000A:word16],Mem0[ss:bp + 0x000C:word16],ss,ss
		defs: ax_41,bp_40,bx_35,C_46,cs_44,cx_37,di_42,dx_38,es_39,SCZO_43,sp_34,ss_36,SZO_45,Z_47
	branch ax_41 != 0x0000 l0800_987B
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9876:
	Mem65[ss_36:bp_40 - 0x0016:word16] = 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 ax:bp - 0x0096 | bp - 0x0096 di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx
// LocalsOut: fp(16)

l0800_987B:
	Mem52[ss_36:bp_40 - 0x0014:word16] = 0x0050
	Mem54[ss_36:bp_40 - 0x0012:word16] = Mem52[ss_36:bp_40 - 0x0012:word16] + di_42
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 ax:bp - 0x0096 | bp - 0x0096 di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_988B:
	return bp_40 - 0x0096
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A ax:bp - 0x0096 | bp - 0x0096 di:bp - 0x0096 es:<invalid> dx:<invalid> cx:di - (bp - 0x0096) bx:bp - 0x0096 -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_9858_exit:
// DataOut: di sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A ax:bp - 0x0096 | bp - 0x0096 di:bp - 0x0096 es:<invalid> dx:<invalid> cx:di - (bp - 0x0096) bx:bp - 0x0096 -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



word16 fn0800_9CE6(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax di ds dx es
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_9CE6_entry:
	*diOut = di
	*dsOut = ds
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_9CE6:
	word16 ax_18 = fn0800_BFC7(DPB(ptrLoc08, wArg06, 0), wArg08)
	*esOut = fn0800_B03B(DPB(ptrLoc0E, wArg02, 0), wArg04, DPB(ptrLoc0A, wArg06, 0), ax_18 + 0x0001)
	*dxOut = wArg04
	return wArg02 + ax_18
// DataOut: ax di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9CE6_exit:
// DataOut: ax di ds dx es
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_9D41(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9D41_entry:
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D41:
	word16 wLoc04_16
	word16 wLoc02_12
	selector ds_11
	branch dx == Mem0[0x0800:0x9D35:word16] l0800_9D7F
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D48:
	selector ds_44 = Mem0[dx:0x0002:selector]
	branch Mem0[ds_44:0x0002:word16] == 0x0000 l0800_9D5C
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D5C:
	branch ds_44 == Mem0[0x0800:0x9D35:word16] l0800_9D7A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D7A:
	dx = Mem0[0x0800:0x9D35:word16]
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(16)

l0800_9D7F:
	Mem40[0x0800:0x9D35:word16] = 0x0000
	Mem41[0x0800:0x9D37:word16] = 0x0000
	Mem42[0x0800:0x9D39:word16] = 0x0000
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_9D65:
	Mem52[0x0800:0x9D37:word16] = Mem0[ds_44:0x0008:word16]
	fn0800_9E15(ds_44)
	wLoc02_12 = ds_44
	wLoc04_16 = 0x0000
	ds_11 = Mem52[0x0800:0x9D3B:selector]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(8) Local -0002(0) Local -0004(0)

l0800_9D55:
	Mem47[0x0800:0x9D37:word16] = ds_44
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D94:
	ds_11 = Mem0[0x0800:0x9D3B:selector]
	wLoc02_12 = dx
	wLoc04_16 = 0x0000
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(8) Local -0002(0) Local -0004(0)

l0800_9D9D:
	return fn0800_A1D6(ds_11, wLoc04_16, wLoc02_12)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_9D41_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



byte fn0800_9DA4(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9DA4_entry:
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9DA4:
	selector es_8 = Mem0[dx:0x0002:selector]
	Mem9[dx:0x0002:word16] = 0x0000
	Mem10[dx:0x0008:word16] = es_8
	word16 wLoc02_13 = dx
	branch dx == Mem10[0x0800:0x9D35:word16] l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9DBC:
	branch Mem10[es_8:0x0002:word16] != 0x0000 l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: fp(16) Local -0002(16)

l0800_9DEA:
	fn0800_9E3E(dx)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DC4:
	word16 ax_45 = Mem10[dx:0x0000:word16]
	Mem51[es_8:0x0000:word16] = Mem10[es_8:0x0000:word16] + ax_45
	word16 dx_53 = dx + ax_45
	wLoc02_13 = es_8
	dl = (byte) dx_53 (alias)
	branch Mem51[dx_53:0x0002:word16] != 0x0000 l0800_9DE3
// DataOut: cx dl es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DE3:
	Mem59[dx_53:0x0002:word16] = es_8
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DDC:
	Mem58[dx_53:0x0008:word16] = es_8
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DED:
	word16 ax_21 = wLoc02_13 + Mem10[wLoc02_13:0x0000:word16]
	branch Mem10[ax_21:0x0002:word16] == 0x0000 l0800_9DFF
// DataOut: dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFF:
	Mem31[wLoc02_13:0x0000:word16] = Mem10[wLoc02_13:0x0000:word16] + Mem10[ax_21:0x0000:word16]
	Mem37[ax_21 + Mem31[ax_21:0x0000:word16]:0x0002:word16] = wLoc02_13
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9E11_thunk_fn0800_9E15:
	fn0800_9E15(ax_21)
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFE:
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

fn0800_9DA4_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>



void fn0800_9E15(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO bh bl bx ebx es rbx
// Preserved: ds sp
fn0800_9E15_entry:
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E15:
	branch ds == Mem0[ds:0x0006:word16] l0800_9E36
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E36:
	Mem16[0x0800:0x9D39:word16] = 0x0000
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

l0800_9E1D:
	selector es_10 = Mem0[ds:0x0006:selector]
	selector ds_11 = Mem0[ds:0x0004:selector]
	Mem12[ds_11:0x0006:word16] = es_10
	Mem13[es_10:0x0004:word16] = ds_11
	Mem14[0x0800:0x9D39:word16] = ds_11
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

fn0800_9E15_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds es:<invalid> ds:ds



void fn0800_9E3E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bx eax ebx es rax rbx
// Preserved: sp ss
fn0800_9E3E_entry:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E3E:
	word16 ax_4 = Mem0[0x0800:0x9D39:word16]
	branch ax_4 == 0x0000 l0800_9E67
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E67:
	Mem30[0x0800:0x9D39:word16] = ds
	Mem31[ds:0x0004:word16] = ds
	Mem32[ds:0x0006:word16] = ds
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_9E46:
	__cli()
	selector es_21 = Mem0[ax_4:0x0006:selector]
	Mem23[ax_4:0x0006:word16] = ds
	Mem24[ds:0x0004:word16] = ax_4
	Mem28[es_21:0x0004:word16] = ds
	Mem29[ds:0x0006:word16] = es_21
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

fn0800_9E3E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> bx:ss ss:ss es:<invalid> -2(fp):<invalid>



byte fn0800_9E75(selector ds, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0004(16)
fn0800_9E75_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_9E75:
	Mem14[0x0800:0x9D3B:word16] = ds
	byte dl_18 = (byte) wArg04
	branch wArg04 == 0x0000 l0800_9E95
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E86:
	branch wArg04 != Mem14[0x0800:0x9D37:word16] l0800_9E92
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E92:
	dl_18 = fn0800_9DA4(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E8D:
	dl_18 = fn0800_9D41(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E95:
	*dsOut = Mem14[0x0800:0x9D3B:selector]
	return dl_18
// DataOut: dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_9E75_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> di:di si:si ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_9E9E(word16 ax, word16 bp, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9E9E_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E9E:
	word16 dx_16
	word16 ax_17 = fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0000, 0x0000, out dx_16)
	branch (ax_17 & 0x000F) == 0x0000 l0800_9EC7
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9EB3:
	word16 dx_86
	fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0010 - (ax_17 & 0x000F), 0x0000, out dx_86)
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):ax
// LocalsOut: fp(16) Local -0002(16)

l0800_9EC7:
	word16 dx_44
	branch fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], ax << 0x04, (word16) SLICE(ax, byte, 8) >>u 0x04, out dx_44) == 0xFFFF l0800_9EFE
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9EFE:
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9EE6:
	Mem61[0x0800:0x9D35:word16] = dx_44
	Mem62[0x0800:0x9D37:word16] = dx_44
	Mem64[dx_44:0x0000:word16] = ax
	Mem65[dx_44:0x0002:word16] = dx_44
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

fn0800_9E9E_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> Sequence dx:ax:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F02(word16 ax, word16 bp, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah ax bp ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9F02_entry:
// DataOut: ah ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_9F02:
	selector ds_15 = Mem0[0x0800:0x9D3B:selector]
	word16 dx_117
	word16 ax_22 = fn0800_A215(bp, ds_15, ax << 0x04, (word16) ah >>u 0x04, out dx_117)
	word16 bx_112 = ax
	branch ax_22 == 0xFFFF l0800_9F58
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9F20:
	branch (ax_22 & 0x000F) != 0x0000 l0800_9F3D
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax
// LocalsOut: fp(16)

l0800_9F3D:
	bx_112 = ax
	word16 dx_106
	branch fn0800_A215(bp, ds_15, -(ax_22 & 0x000F) + 0x0010, 0x0000, out dx_106) == 0xFFFF l0800_9F58
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9F58:
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9F55:
	*dxOut = dx_117 + 0x0001
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):<invalid> -2(fp):ax

l0800_9F25:
	word16 cx_85 = Mem0[0x0800:0x9D37:word16]
	Mem86[0x0800:0x9D37:word16] = dx_117
	Mem88[dx_117:0x0000:word16] = bx_112
	Mem89[dx_117:0x0002:word16] = cx_85
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

fn0800_9F02_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax ds dx
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl ds dx eax ebx edx rax rbx rdx
// Preserved: sp
fn0800_9F5C_entry:
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9F5C:
	Mem9[ds:0x0000:word16] = Mem0[ds:0x0000:word16] - ax
	word16 dx_10 = dx + Mem9[ds:0x0000:word16]
	*dxOut = dx_10
	Mem12[dx_10:0x0000:word16] = ax
	Mem13[dx_10:0x0002:word16] = dx
	Mem18[dx_10 + Mem13[dx_10:0x0000:word16]:0x0002:word16] = dx_10
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9F5C_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> dx:<invalid> ds:<invalid> ax:0x0004



word16 fn0800_9F7F(word16 bp, selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16)
fn0800_9F7F_entry:
	*siOut = si
	*diOut = di
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_9F7F:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_9F87_thunk_fn0800_9F92:
	word16 dx_13
	word16 bp_14
	selector ds_15
	return fn0800_9F92(wArg02, 0x0000, fp - 0x0002, ds, bp, out dx_13, out bp_14, out ds_15)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:0x0000 ax:<invalid> -2(fp):bp

fn0800_9F7F_exit:
// DataOut: ax bp di ds dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_9F89(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9F89_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_9F89:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_9F8F_thunk_fn0800_9F92:
	word16 dx_15
	word16 bp_16
	selector ds_17
	return fn0800_9F92(wArg02, wArg04, fp - 0x0002, ds, bp, out dx_15, out bp_16, out ds_17)
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> -2(fp):bp

fn0800_9F89_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_9F92(word16 ax, word16 dx, word16 bp, selector ds, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds dx ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si
// Stack args: Stack +0000(16)
l0800_9F92:
	cx = ax
	cx = cx | dx
	SZO = cond(cx)
	Z = SZO (alias)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = si
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = di
	Mem0[0x0800:0x9D3B:word16] = ds
	branch Test(EQ,Z) l0800_9FFD
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	ax = fn0800_9F9F(ax, dx, bp, out dx, out bp, out ds)
	return ax
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	ax = fn0800_9F9F(ax, dx, bp, out dx, out bp, out ds)
	return ax
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

fn0800_9F92_entry:
	def fp
	def ax
	def dx
	def si
	def di
	def ds
	def dxOut
	def bpOut
	def dsOut
	def bp
	def wArg00
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9F92:
	sp_2 = fp
	cx_4 = ax
	cx_6 = cx_4 | dx
	SZO_7 = cond(cx_6)
	Z_8 = SZO_7 (alias)
	C_9 = false
	sp_10 = fp - 0x0002
	wLoc02_12 = si
	sp_13 = fp - 0x0004
	wLoc04_15 = di
	Mem17[0x0800:0x9D3B:word16] = ds
	branch cx_6 == 0x0000 l0800_9FFD_in_fn0800_9F92
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FFD_in_fn0800_9F92:
	ds_37 = Mem17[0x0800:0x9D3B:selector]
	di_38 = wLoc04_15
	sp_39 = fp - 0x0002
	si_40 = wLoc02_12
	sp_41 = fp
	bp_43 = wArg00
	sp_44 = fp + 0x0002
	return ax
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx -4(fp):di -2(fp):si

l0800_9F9D_thunk_fn0800_9F9F:
	ax_32 = fn0800_9F9F(ax, dx, bp, out dx_29, out bp_30, out ds_31)
	return ax_32
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx -4(fp):di -2(fp):si

l0800_9F9D_thunk_fn0800_9F9F:
	ax_36 = fn0800_9F9F(ax_32, dx_29, bp_30, out dx_33, out bp_34, out ds_35)
	return ax_36
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -4(fp):di -2(fp):si

fn0800_9F92_exit:
	di_18 = PHI(di_38, di, di, di, di)
	si_19 = PHI(si_40, si, si, si, si)
	sp_20 = PHI(sp_44, sp_13, sp_13, sp, sp)
	dx_21 = PHI(dx, dx_29, dx_33, dx, dx)
	bp_22 = PHI(bp_43, bp_30, bp_34, bp, bp)
	ds_23 = PHI(ds_37, ds_31, ds_35, ds, ds)
	ax_24 = PHI(ax, ax_32, ax_36, ax, ax)
	use dx_21 (=> dxOut)
	use bp_22 (=> bpOut)
	use ds_23 (=> dsOut)
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -4(fp):di -2(fp):si



word16 fn0800_9F9F(word16 ax, word16 dx, word16 bp, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp dx ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_9F9F_entry:
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_9F9F:
	word16 ax_105
	int32 dx_ax_4 = SEQ(dx, ax + 0x0013)
	word16 ax_7 = (word16) (dx_ax_4 + 0x00000013)
	word16 dx_8 = SLICE(dx_ax_4 + 0x00000013, word16, 16)
	branch dx_ax_4 <u 0x00000013 l0800_9FE8
// DataOut: ax bp dl dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9FA7:
	branch (dx_8 & 0xFFF0) != 0x0000 l0800_9FE8
// DataOut: ax bp dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FE8:
	ax_105 = 0x0000 (alias)
	*dxOut = 0x0000
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FAD:
	word16 ax_60 = DPB(ax_7 >>u 0x04, SLICE(ax_7 >>u 0x04, byte, 8) | (byte) (dx_8 << 0x04), 8)
	branch Mem0[0x0800:0x9D35:word16] == 0x0000 l0800_9FDE
// DataOut: ah ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FDE:
	word16 dx_112
	ax_105 = fn0800_9E9E(ax_60, bp, out dx_112)
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FBE:
	word16 dx_67 = Mem0[0x0800:0x9D39:word16]
	word16 dx_68
	*dxOut = dx_67
	branch dx_67 == 0x0000 l0800_9FD9
// DataOut: ah ax bp dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FC7:
// DataOut: ah ax bp bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FC9:
	branch Mem0[dx_68:0x0000:word16] >=u ax_60 l0800_9FED
// DataOut: ah ax bp bx ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FED:
	branch Mem0[dx_68:0x0000:word16] >u ax_60 l0800_9FE3
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FE3:
	word16 dx_108
	ax_105 = fn0800_9F5C(ax_60, dx_68, dx_68, out dx_108)
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FEF:
	fn0800_9E15(dx_68)
	Mem104[dx_68:0x0002:word16] = Mem0[dx_68:0x0008:word16]
	ax_105 = 0x0004
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FD1:
	dx_68 = Mem0[dx_68:0x0006:word16]
	*dxOut = dx_68
	branch dx_68 != dx_67 l0800_9FC9
// DataOut: ah ax bp bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FD9:
	word16 dx_84
	ax_105 = fn0800_9F02(ax_60, bp, out dx_84)
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FFD:
	*dsOut = Mem0[0x0800:0x9D3B:selector]
	*bpOut = Mem0[ss:sp + 0x0004:word16]
	return ax_105
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> Sequence dx:ax:(int32) (ax + 0x0026 ^ ax + 0x0026) cl:<invalid> ah:<invalid> ds:<invalid> bx:<invalid> bl:<invalid> cx:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid>

fn0800_9F9F_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:v3 + 0x0006 ax:<invalid> dx:<invalid> Sequence dx:ax:(int32) (ax + 0x0026 ^ ax + 0x0026) ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> cx:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid>



word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A162_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A162:
	word16 ax_36
	word16 si_18 = wArg04 + 0x0001 - Mem0[ds:0x007B:word16] + 0x003F >>u 0x06
	branch si_18 != Mem0[ds:0x2698:word16] l0800_A18D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A18D:
	word16 ax_67 = (si_18 << 0x06) + Mem0[ds:0x007B:word16]
	word16 si_63 = si_18 << 0x06
	word16 dx_64 = Mem0[ds:0x0091:word16]
	byte al_68 = (byte) ax_67
	branch ax_67 <=u dx_64 l0800_A1A5
// DataOut: al ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A19F:
	si_63 = dx_64 - Mem0[ds:0x007B:word16]
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1A5:
	word16 ax_76 = fn0800_A401(al_68, ds, Mem0[ds:0x007B:word16], si_63)
	*dlOut = (byte) ax_76
	branch ax_76 != 0xFFFF l0800_A1C1
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1C1:
	Mem92[ds:0x0091:word16] = Mem0[ds:0x007B:word16] + ax_76
	Mem93[ds:0x008F:word16] = 0x0000
	ax_36 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1B6:
	Mem89[ds:0x2698:word16] = si_63 >>u 0x06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A17B:
	Mem56[ds:0x008D:word16] = wArg04
	Mem57[ds:0x008B:word16] = wArg02
	*dlOut = (byte) wArg02
	ax_36 = 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1D1:
	return ax_36
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A162_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A1D6_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1D6:
	byte dl_16
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0089:word16], wArg04, Mem0[ds:0x0087:word16], out dl_16) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1EC:
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0091:word16], wArg04, Mem0[ds:0x008F:word16], out dl_16) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out dl_16) != 0x0000 l0800_A211
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp

l0800_A211:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A20C:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A213:
	return dl_16
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A1D6_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A215(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A215_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A215:
	word16 ax_116
	word16 dx_15
	word16 ax_17 = fn0800_8C69(Mem0[ds:0x008D:word16], 0x04, 0x0000, wLoc0C, out dx_15) + Mem0[ds:0x008B:word16]
	ui32 dx_ax_26 = SEQ(dx_15 + (ax_17 <u 0x0000), ax_17 + wArg02) + _
	word16 ax_27 = (word16) dx_ax_26
	word16 dx_28 = SLICE(dx_ax_26, word16, 16)
	branch dx_28 < 0x000F l0800_A246
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A237:
	branch dx_28 > 0x000F l0800_A23E
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A239:
	branch ax_27 <=u 0xFFFF l0800_A246
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A246:
	word16 dx_76
	word16 ax_77 = fn0800_8CCB(Mem0[ds:0x008B:word16], wArg04, Mem0[ds:0x008D:word16], wArg02, bp, out dx_76)
	byte dl_84
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0089:word16], dx_76, Mem0[ds:0x0087:word16], out dl_84) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A26C:
	byte dl_94
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0091:word16], dx_76, Mem0[ds:0x008F:word16], out dl_94) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A27F:
	word16 ax_96 = Mem0[ds:0x008D:word16]
	word16 dx_97 = Mem0[ds:0x008B:word16]
	Mem102[ss:fp - 0x000C:word16] = dx_76
	Mem105[ss:fp - 0x000E:word16] = ax_77
	byte dl_107
	branch fn0800_A162(ds, wArg00, wArg02, out dl_107) == 0x0000 l0800_A23E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A299:
	*dxOut = ax_96
	ax_116 = dx_97
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A23E:
	*dxOut = 0xFFFF
	ax_116 = 0xFFFF
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A29F:
	return ax_116
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A215_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A2A3(byte al, selector ds, word16 wArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0004(16) Stack +0006(32)
fn0800_A2A3_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(32)

l0800_A2A3:
	msdos_unknown_2144()
	word16 dx_12 = (word16) ptrArg06
	word16 ax_17 = DPB(ax, bArg04, 0)
	branch C l0800_A2C6
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_A2C6:
	ax_17 = fn0800_8D2B(ds, ax_17)
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2BA:
	branch wArg04 != 0x0000 l0800_A2C4
// DataOut: al ax di dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C4:
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C0:
	ax_17 = dx_12
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2CA:
	return ax_17
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A2A3_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A401_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A401:
	word16 ax_18
	word16 ax_9 = DPB(ax, 0x4A, 8)
	word16 bx_14
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_14) l0800_A415
// DataOut: ax bx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A415:
	fn0800_8D2B(ds, ax_9)
	ax_18 = bx_14
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A410:
	ax_18 = 0xFFFF
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A41B:
	return ax_18
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp

fn0800_A401_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp



word16 fn0800_A471(byte bl, selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(32)
fn0800_A471_entry:
// DataOut: bl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0002(32)

l0800_A471:
	selector es_20 = SLICE(ptrArg02, selector, 16)
	word16 si_161 = (word16) ptrArg02
	word16 ax_124 = 0x0000
	byte dl_145 = 0x00
	word16 dx_146 = 0x0000
	*dxOut = dx_146
	ui32 dh_bx_135 = DPB(dh_bx, 0x00, 8)
	word16 di_160 = 0x2251
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A487:
	byte bl_220 = Mem0[es_20:si_161:byte]
	bx = DPB(bx, bl_220, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_220, 0) (alias)
	si_161 = si_161 + 0x0001
	branch (Mem0[ds:bx + 0x2251:byte] & 0x01) != 0x00 l0800_A487
// DataOut: ax bl di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A490:
	word16 bp_219 = 0x0000
	branch bl_220 == 0x2B l0800_A49E
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A498:
	branch bl_220 != 0x2D l0800_A4A2
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49D:
	bp_219 = 0x0001
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49E:
	bl_220 = Mem0[es_20:si_161:byte]
	bx = DPB(bx, bl_220, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_220, 0) (alias)
	si_161 = si_161 + 0x0001
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A2:
	branch bl_220 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A7:
	byte bl_133 = bl_220 - 0x30
	bx = DPB(bx, bl_133, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_133, 0) (alias)
	branch bl_133 <u 0x00 l0800_A4D6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4AC:
	ui32 dl_ax_143 = SEQ(dl_145, ax_124 + bx) + dh_bx_135
	ax_124 = (word16) dl_ax_143 (alias)
	dl_145 = SLICE(dl_ax_143, byte, 16) (alias)
	*dxOut = SLICE(dl_ax_143, word16, 16)
	branch dl_ax_143 == 0x00000000 l0800_A49E
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B4:
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4C8:
	byte bl_162 = Mem0[es_20:si_161:byte]
	si_161 = si_161 + 0x0001
	branch bl_162 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D1:
	bx = DPB(bx, bl_162 - 0x30, 0) (alias)
	branch bl_162 >=u 0x30 l0800_A4B6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B6:
	int32 dx_ax_177 = ax_124 *u 0x000A
	int32 dx_ax_200 = SEQ((word16) (di_160 *u 0x000A), (word16) dx_ax_177 + bx) + SEQ(SLICE(dx_ax_177, word16, 16), bx)
	di_160 = 0x000A
	ax_124 = (word16) dx_ax_200 (alias)
	*dxOut = SLICE(dx_ax_200, word16, 16)
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D6:
	word16 bp_93 = bp_219 - 0x0001
	branch bp_93 < 0x0000 l0800_A4E0
	branch bp_93 < 0x0001 l0800_A4E0
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D9:
	word16 ax_120 = -ax_124
	ax_124 = -ax_120
	*dxOut = (ax_120 == 0x0000) - -dx_146 - (ax_124 == 0x0000)
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4E0:
	return ax_124
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dx:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp

fn0800_A471_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:di bl:<invalid> si:si dx:<invalid> es:es dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_A4F6(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds
// LiveOut: ds
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_A4F6_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A4F6:
	word16 ax_23 = fn0800_A53C(0x00, ds, DPB(ptrLoc08, wArg02, 0), 0x00, bp)
	branch ax_23 != 0xFFFF l0800_A513
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A513:
	word16 dx_60 = ax_23 & 0xFFFE
	branch (wArg06 & 0x0080) != 0x0000 l0800_A520
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A51D:
	dx_60 = ax_23 & 0xFFFE | 0x0001
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A520:
	branch fn0800_A53C(0x01, ds, DPB(ptrLoc0A, wArg02, 0), 0x01, dx_60) == 0xFFFF l0800_A50F
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_A538:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):<invalid> -2(fp):bp

l0800_A50F:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A53A:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A4F6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A53C(byte al, selector ds, segptr32 ptrArg02, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0006(8) Stack +0008(16)
fn0800_A53C_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(8) Stack +0008(16)

l0800_A53C:
	word16 ax_25
	msdos_unknown_2143()
	word16 ax_16 = DPB(ax, bArg06, 0)
	branch C l0800_A553
// DataOut: ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A553:
	ax_25 = fn0800_8D2B(ds, ax_16)
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A550:
	ax_25 = wArg08
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A557:
	return ax_25
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A53C_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A559(byte al, selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A559_entry:
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A559:
	byte al_19
	*dlOut = (byte) wArg02
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A56E
// DataOut: al di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A56E:
	Mem34[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_19 = fn0800_A57F(al, ds, wArg02)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_A565:
	al_19 = (byte) fn0800_8D2B(ds, 0x0006) (alias)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_A57D:
	return al_19
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_A559_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A57F_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A57F:
	byte al_16
	word16 ax_9 = DPB(ax, 0x3E, 8)
	branch msdos_close_file(wArg02) l0800_A597
// DataOut: ax bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A597:
	al_16 = (byte) fn0800_8D2B(ds, ax_9) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A58B:
	Mem22[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_16 = 0x00 (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A59B:
	return al_16
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp

fn0800_A57F_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp



word16 fn0800_A59D(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A59D_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A59D:
	word16 wLoc08_108
	word16 ax_124
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A5B2
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5B2:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_A5C4
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5C4:
	word16 ax_104 = 0x4400
	word16 dx_92
	branch msdos_ioctl_get_device_info(wArg02, out dx_92) l0800_A60C
// DataOut: ax bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5CE:
	branch (dl & 0x80) != 0x00 l0800_A608
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5D3:
	ax_104 = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_A60C
// DataOut: ax bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5DE:
	ax_104 = 0x4202
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_A60C
// DataOut: ax bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4201 bx:<invalid> cx:0x0000 dx:0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5F3:
	ax_104 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_A60C
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4202 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A60C:
	wLoc08_108 = ax_104
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A5FA:
	branch false l0800_A608
// DataOut: di ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5FF:
	branch false l0800_A606
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A601:
	branch false l0800_A608
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A608:
	ax_124 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A606:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5BF:
	ax_124 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5AC:
	wLoc08_108 = 0x0006
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A60D:
	ax_124 = fn0800_8D2B(ds, wLoc08_108)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A610:
	return ax_124
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp

fn0800_A59D_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp



byte fn0800_A614(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al di dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_A614_entry:
	*diOut = di
	*dsOut = ds
	*dlOut = dl
// DataOut: bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A614:
	word16 si_10 = 0xFFFF
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0012:word16] == wArg02 l0800_A62A
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A62A:
	word16 bx_68 = (word16) ptrArg02
	selector es_69 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_69:bx_68 + 0x0006:word16] == 0x0000 l0800_A65F
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A634:
	branch Mem0[es_69:bx_68:word16] >= 0x0000 l0800_A647
// DataOut: bp bx di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A63A:
	byte dl_187
	branch fn0800_A6B7(ds, DPB(ptrLoc08, bx_68, 0), wArg04, out dl_187, out ds) != 0x0000 l0800_A6B2
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_A647:
	word16 bx_165 = (word16) ptrArg02
	selector es_166 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[es_166:bx_165 + 0x0002:word16] & 0x0004) == 0x0000 l0800_A65F
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_A652:
	*dlOut = fn0800_9E75(ds, Mem0[es_166:bx_165 + 0x000A:word16], out ds)
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +0002(32)

l0800_A65F:
	word16 bx_85 = (word16) ptrArg02
	selector es_86 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_86:bx_85 + 0x0004:byte] < 0x00 l0800_A675
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +0002(32)

l0800_A669:
	word16 ax_143 = (int16) Mem0[es_86:bx_85 + 0x0004:byte]
	byte dl_147
	si_10 = DPB(ax_143, fn0800_A559((byte) ax_143, ds, ax_143, out dl_147), 0)
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_A675:
	word16 bx_99 = (word16) ptrArg02
	selector es_100 = SLICE(ptrArg02, selector, 16)
	Mem101[es_100:bx_99 + 0x0002:word16] = 0x0000
	Mem102[es_100:bx_99 + 0x0006:word16] = 0x0000
	Mem103[es_100:bx_99:word16] = 0x0000
	Mem104[es_100:bx_99 + 0x0004:byte] = 0xFF
	branch Mem104[es_100:bx_99 + 0x0010:word16] == 0x0000 l0800_A6B2
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0)

l0800_A695:
	word16 dx_120
	byte sil_121
	word16 di_122
	selector ds_123
	word16 ax_124 = fn0800_8E6A(fp - 0x0002, ds, Mem104[es_100:bx_99 + 0x0010:word16], 0x0000, 0x0000, 0x0000, 0x0000, out dx_120, out sil_121, out di_122, out ds_123)
	Mem128[ss:fp - 0x0006:word16] = dx_120
	Mem130[ss:fp - 0x0008:word16] = ax_124
	*dlOut = fn0800_97F8((byte) ax_124, ds_123, ptrArg00)
	Mem0[Mem130[ss:fp + 0x0002:segptr32] + 0x0010:word16] = 0x0000
// DataOut: di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_A627:
// DataOut: di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp

l0800_A6B2:
	return (byte) si_10
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A614_exit:
// DataOut: al di dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A6B7(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A6B7_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A6B7:
	word16 ax_30
	branch (wArg02 | wArg04) != 0x0000 l0800_A6C9
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6C9:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0012:word16] == wArg02 l0800_A6DB
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6DB:
	word16 bx_102 = (word16) ptrArg02
	selector es_103 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_103:bx_102:word16] < 0x0000 l0800_A732
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A732:
	word16 bx_135 = (word16) ptrArg02
	selector es_136 = SLICE(ptrArg02, selector, 16)
	word16 ax_138 = Mem0[es_136:bx_135 + 0x0006:word16] + Mem0[es_136:bx_135:word16]
	Mem142[es_136:bx_135:word16] = Mem0[es_136:bx_135:word16] - (ax_138 + 0x0001)
	word16 ax_146 = Mem142[es_136:bx_135 + 0x000A:word16]
	word16 dx_147 = Mem142[es_136:bx_135 + 0x0008:word16]
	Mem149[es_136:bx_135 + 0x000E:word16] = ax_146
	Mem150[es_136:bx_135 + 0x000C:word16] = dx_147
	byte dl_159
	selector ds_160
	branch fn0800_C632(ds, (int16) Mem150[es_136:bx_135 + 0x0004:byte], dx_147, ax_146, ax_138 + 0x0001, out dl_159, out ds_160) == ax_138 + 0x0001 l0800_A778
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32)

l0800_A765:
	word16 bx_166 = (word16) ptrArg02
	selector es_167 = SLICE(ptrArg02, selector, 16)
	branch (Mem150[es_167:bx_166 + 0x0002:word16] & 0x0200) != 0x0000 l0800_A778
// DataOut: bx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A770:
	Mem172[es_167:bx_166 + 0x0002:word16] = Mem150[es_167:bx_166 + 0x0002:word16] | 0x0010
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6E4:
	branch (Mem0[es_103:bx_102 + 0x0002:word16] & 0x0008) != 0x0000 l0800_A701
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6EC:
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem0[es_103:bx_102 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6FB:
	branch Mem0[es_103:bx_102 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A701:
	word16 bx_110 = (word16) ptrArg02
	selector es_111 = SLICE(ptrArg02, selector, 16)
	Mem112[es_111:bx_110:word16] = 0x0000
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem112[es_111:bx_110 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A718:
	branch Mem112[es_111:bx_110 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: bx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A71E:
	word16 dx_122 = Mem112[es_111:bx_110 + 0x0008:word16]
	Mem124[es_111:bx_110 + 0x000E:word16] = Mem112[es_111:bx_110 + 0x000A:word16]
	Mem125[es_111:bx_110 + 0x000C:word16] = dx_122
	*dlOut = (byte) dx_122
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6D5:
	ax_30 = 0xFFFF
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6C3:
	selector ds_60
	*dlOut = fn0800_A877(ds, out ds_60)
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A778:
	ax_30 = 0x0000
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A77A:
	return ax_30
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A6B7_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> si:si dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A77D(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_A77D_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_A77D:
	word16 di_141 = wArg06
	word16 cx_16 = 0x0000
	word16 wLoc06_171 = wArg02
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A1:
	branch cx_16 == 0x000A l0800_A7D8
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A6:
	di_141 = di_141 - 0x0001
	branch di_141 <= 0x0000 l0800_A7D8
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A9:
	word16 ax_156
	word16 bx_144 = (word16) ptrArg08
	selector es_145 = SLICE(ptrArg08, selector, 16)
	word16 v17_147 = Mem0[es_145:bx_144:word16] - 0x0001
	Mem148[es_145:bx_144:word16] = v17_147
	branch v17_147 < 0x0000 l0800_A7C6
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_A7C6:
	ptrLoc0E = DPB(ptrLoc0E, wArg08, 0) (alias)
	ax_156 = fn0800_AEC2(ds, ptrLoc0E, wArg0A, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7B1:
	word16 ax_173 = Mem148[es_145:bx_144 + 0x000E:word16]
	Mem176[es_145:bx_144 + 0x000C:word16] = Mem148[es_145:bx_144 + 0x000C:word16] + 0x0001
	ax_156 = DPB(ax_173, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7D1:
	cx_16 = ax_156
	byte cl_163 = (byte) ax_156
	branch ax_156 != 0xFFFF l0800_A798
// DataOut: cl cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A798:
	Mem169[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = cl_163
	wLoc06_171 = wLoc06_171 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7D8:
	word16 ax_112
	branch cx_16 != 0xFFFF l0800_A7F3
	branch cx_16 != 0xFFFF l0800_A7F3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7DD:
	branch wArg04 != wArg04 l0800_A7F3
	branch wArg04 != wArg04 l0800_A7F3
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7E8:
	branch wLoc06_171 != wArg02 l0800_A7F3
	branch wLoc06_171 != wArg02 l0800_A7F3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7F3:
	Mem103[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = 0x00
	branch (Mem103[SLICE(ptrArg08, selector, 16):(word16) ptrArg08 + 0x0002:word16] & 0x0010) == 0x0000 l0800_A80B
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A80B:
	*dxOut = wArg04
	ax_112 = wArg02
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A805:
	*dxOut = 0x0000
	ax_112 = 0x0000
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A7ED:
	*dxOut = 0x0000
	ax_112 = 0x0000
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A811:
	return ax_112
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A77D_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A817(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP al ds
// LiveOut: ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_A817_entry:
// DataOut: al ds si ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_A817:
	word16 ax_55
	word32 es_bx_10 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg06, selector, 16), (word16) ptrArg06)
	word16 bx_12 = (word16) es_bx_10
	bool C_30 = msdos_find_first_file(wArg0A, SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	msdos_set_DTA(SLICE(es_bx_10, selector, 16), bx_12)
	word16 ax_23 = DPB(ax, 0x4E, 8)
	*dlOut = (byte) bx_12
	branch C_30 l0800_A844
// DataOut: bx dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A844:
	ax_55 = fn0800_8D2B(ds, ax_23)
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A840:
	ax_55 = 0x0000
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A848:
	return ax_55
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A817_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A84A(byte al, selector ds, segptr32 ptrArg02, ptr16 & axOut, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP al ds
// LiveOut: DP ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32)
fn0800_A84A_entry:
// DataOut: al ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A84A:
	word32 es_bx_10 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	word16 bx_12 = (word16) es_bx_10
	bool C_24 = msdos_find_next_file()
	msdos_set_DTA(SLICE(es_bx_10, selector, 16), bx_12)
	word16 ax_23 = DPB(ax, 0x4F, 8)
	*dlOut = (byte) bx_12
	branch C_24 l0800_A871
// DataOut: bx dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A871:
	*axOut = fn0800_8D2B(ds, ax_23)
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A86D:
	*axOut = 0x0000
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A875:
	return C_24
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A84A_exit:
// DataOut: ax dl
// DataOut (flags): DP
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A877(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
fn0800_A877_entry:
	*dsOut = ds
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A877:
	word16 si_19 = Mem0[ds:0x24E8:word16]
	ds_38 = ds
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A8A8:
	selector ds_38
	si_19 = si_19 - 0x0001
	branch si_19 != 0x0000 l0800_A88F
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A88F:
	word16 bx_61 = (word16) ptrLoc06
	branch (Mem0[SLICE(ptrLoc06, selector, 16):bx_61 + 0x0002:word16] & 0x0003) == 0x0000 l0800_A8A4
// DataOut: bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(8)

l0800_A89A:
	ptrLoc0E = DPB(ptrLoc0E, bx_61, 0) (alias)
	fn0800_A6B7(ds_38, ptrLoc0E, ds, out dl, out ds_38)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(8)

l0800_A8A4:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A8AF:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_A877_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di si:si ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(32)
fn0800_A8B7_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8B7:
	word16 dx_118
	word16 si_122
	word16 ax_151
	word16 di_121 = 0x0000
	byte cl_22 = Mem0[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte]
	branch cl_22 != 0x72 l0800_A8D5
// DataOut: cl di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8D5:
	branch cl_22 != 0x77 l0800_A8DF
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DF:
	branch cl_22 != 0x61 l0800_A8EF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8EF:
	ax_151 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A8E4:
	dx_118 = 0x0902
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DA:
	dx_118 = 0x0302
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8E7:
	di_121 = 0x0080
	si_122 = 0x0002
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8CD:
	dx_118 = 0x0001
	si_122 = 0x0001
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8F3:
	byte cl_113 = Mem0[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte]
	branch cl_113 == 0x2B l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A901:
	branch Mem0[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte] != 0x2B l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90A:
	branch cl_113 == 0x74 l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90F:
	branch cl_113 != 0x62 l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A914:
	branch cl_113 != 0x2B l0800_A91F
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A919:
	cl_113 = Mem0[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte]
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A91F:
	dx_118 = dx_118 & 0xFFFC | 0x0004
	di_121 = 0x0180
	si_122 = 0x0003
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A92B:
	word16 dx_103
	branch cl_113 != 0x74 l0800_A936
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A936:
	branch cl_113 != 0x62 l0800_A941
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A941:
	dx_103 = dx_118 | Mem0[ds:0x2512:word16] & 0xC000
	branch (dx_103 & 0x8000) == 0x0000 l0800_A953
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A93B:
	dx_103 = dx_118 | 0x8000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A950:
	si_122 = si_122 | 0x0040
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A930:
	dx_103 = dx_118 | 0x4000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A953:
	Mem72[ds:0x2354:word16] = 0xC7B5
	Mem78[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:word16] = dx_103
	Mem83[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16] = di_121
	ax_151 = si_122
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A967:
	return ax_151
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>

fn0800_A8B7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> si:si dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>



word16 fn0800_A96D(word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, segptr32 ptrArg0C, word16 wArg0E, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax di dl ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)
fn0800_A96D_entry:
	def fp
	def wArg04
	def ptrLoc0A
	def ss
	def ptrLoc0E
	def ptrLoc12
	def ds
	def ptrArg0C
	def si
	def di
	def wArg0E
	def wArg0C
	def ptrArg00
	def wArg02
	def wLoc06
	def wLoc04
	def wArg0A
	def wArg08
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A96D:
	bp_6 = fp - 0x0002
	wLoc0A_14 = wArg04
	ptrLoc0A_16 = DPB(ptrLoc0A, wArg04, 0) (alias)
	wLoc0E_22 = fp - 0x0004
	ptrLoc0E_24 = DPB(ptrLoc0E, fp - 0x0004, 0) (alias)
	wLoc12_29 = fp - 0x0006
	ptrLoc12_31 = DPB(ptrLoc12, fp - 0x0006, 0) (alias)
	ax_33 = fn0800_A8B7(ds, ptrLoc12_31, ptrLoc0E_24, ptrLoc0A_16)
	es_bx_36 = ptrArg0C
	bx_37 = (word16) ptrArg0C (alias)
	es_38 = SLICE(ptrArg0C, selector, 16) (alias)
	Mem39[es_38:bx_37 + 0x0002:word16] = ax_33
	ax_40 = ax_33
	branch ax_33 == 0x0000 l0800_A9B9
// DataOut: bp bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Local -0006(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A991:
	branch Mem39[es_38:bx_37 + 0x0004:byte] >= 0x00 l0800_A9CD
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Local -0006(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A998:
	wLoc08_209 = wLoc06
	ax_211 = wLoc04
	ax_212 = wLoc04 | wArg02
	wLoc0A_216 = ax_212
	wLoc0C_219 = wArg0A
	wLoc0E_222 = wArg08
	al_224 = fn0800_B140(si, di, ds, wArg08, wArg0A, ax_212, wLoc06, out ds_223)
	es_bx_226 = ptrArg0C
	bx_227 = (word16) ptrArg0C (alias)
	es_228 = SLICE(ptrArg0C, selector, 16) (alias)
	Mem229[es_228:bx_227 + 0x0004:byte] = al_224
	al_230 = al_224
	branch al_224 >= 0x00 l0800_A9CD
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -000A(16) Stack +000C(32) Stack +000E(16)

l0800_A9CD:
	ds_124 = PHI(ds, ds_223)
	es_bx_125 = ptrArg0C
	bx_126 = (word16) ptrArg0C (alias)
	es_127 = SLICE(ptrArg0C, selector, 16) (alias)
	al_128 = Mem39[es_127:bx_126 + 0x0004:byte]
	ax_129 = (int16) al_128
	wLoc08_131 = ax_129
	fn0800_8D76(ax_129)
	branch 0x0000 == 0x0000 l0800_A9E7
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cl:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +000C(32) Stack +000E(16)

l0800_A9DE:
	es_bx_200 = ptrArg0C
	bx_201 = (word16) ptrArg0C (alias)
	es_202 = SLICE(ptrArg0C, selector, 16) (alias)
	v17_203 = Mem39[es_202:bx_201 + 0x0002:word16] | 0x0200
	Mem204[es_202:bx_201 + 0x0002:word16] = v17_203
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +000C(32) Stack +000E(16)

l0800_A9E7:
	wLoc08_140 = 0x0200
	es_bx_141 = ptrArg0C
	bx_142 = (word16) ptrArg0C (alias)
	es_143 = SLICE(ptrArg0C, selector, 16) (alias)
	branch (Mem39[es_143:bx_142 + 0x0002:word16] & 0x0200) == 0x0000 l0800_A9FB
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9FB:
	ax_196 = 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x02 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9F6:
	ax_194 = 0x0001
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x02 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9FD:
	ax_147 = PHI(ax_194, ax_196)
	wLoc0A_150 = ax_147
	wLoc10_160 = wArg0E
	sp_161 = fp - 0x0012
	wLoc12_163 = wArg0C
	ptrLoc12_164 = DPB(ptrLoc12, wArg0C, 0) (alias)
	ax_166 = fn0800_BA89(fp - 0x0002, ds_124, ptrLoc12_164, wArg0E, ax_147, 0x0200, out ds_165)
	sp_167 = fp - 0x0006
	ax_168 = ax_166
	branch ax_166 == 0x0000 l0800_AA1F
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AA1F:
	es_bx_186 = Mem39[ss:fp + 0x000C:segptr32]
	bx_187 = (word16) es_bx_186 (alias)
	es_188 = SLICE(es_bx_186, selector, 16) (alias)
	Mem0[es_bx_186 + 0x0010:word16] = 0x0000
	dx_190 = Mem189[ss:fp + 0x000E:word16]
	ax_192 = Mem189[ss:fp + 0x000C:word16]
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp

l0800_AA12:
	sp_172 = fp - 0x0008
	Mem173[ss:fp - 0x0008:word16] = Mem39[ss:fp + 0x000E:word16]
	sp_174 = fp - 0x000A
	Mem175[ss:fp - 0x000A:word16] = Mem173[ss:fp + 0x000C:word16]
	fn0800_A614(fp - 0x0002, ds_165, ptrArg00, wArg02, out dl_178, out di_179, out ds_180)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp

l0800_A9B9:
	ds_105 = PHI(ds, ds_223)
	es_bx_111 = ptrArg0C
	bx_112 = (word16) ptrArg0C (alias)
	es_113 = SLICE(ptrArg0C, selector, 16) (alias)
	Mem114[es_113:bx_112 + 0x0004:byte] = 0xFF
	Mem115[es_113:bx_112 + 0x0002:word16] = 0x0000
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_A9C7:
	di_86 = PHI(di, di_179)
	ds_87 = PHI(ds_105, ds_180)
	dx_93 = 0x0000
	ax_95 = 0x0000
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_AA2E:
	di_56 = PHI(di_86, di)
	ds_57 = PHI(ds_87, ds_165)
	dx_62 = PHI(dx_93, dx_190)
	ax_64 = PHI(ax_95, ax_192)
	return ax_64
// DataOut: ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

fn0800_A96D_exit:
	use dx_62 (=> dxOut)
	use si (=> siOut)
	use di_56 (=> diOut)
	use ds_57 (=> dsOut)
// DataOut: ax di dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_AA34(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
fn0800_AA34_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AA34:
	word16 wLoc06_11 = 0x2358
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA42:
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA64
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA4C:
	wLoc06_11 = wLoc06_11 + 0x0014
	branch wLoc06_11 <u (word16) (Mem0[ds:0x24E8:word16] *s 0x0014) + 0x2358 l0800_AA42
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA64:
	word16 ax_44
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA74
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AA74:
	*dxOut = ds
	ax_44 = wLoc06_11
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA6E:
	*dxOut = 0x0000
	ax_44 = 0x0000
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA7A:
	return ax_44
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AA34_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AA7E(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax di dl ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_AA7E_entry:
	*dsOut = ds
	*siOut = si
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA7E:
	word16 ax_30
	word16 dx_10
	word16 ax_11 = fn0800_AA34(ds, out dx_10)
	branch (ax_11 | dx_10) != 0x0000 l0800_AA97
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA97:
	word16 dx_78
	word16 si_79
	word16 di_80
	selector ds_81
	ax_30 = fn0800_A96D(fp - 0x0002, si, di, ds, 0x0000, wArg06, wArg08, wArg02, wArg04, DPB(ptrLoc0A, ax_11, 0), dx_10, out dx_78, out si_79, out di_80, out ds_81)
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AA91:
	*dxOut = 0x0000
	ax_30 = 0x0000
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AAAF:
	return ax_30
// DataOut: ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AA7E_exit:
// DataOut: ax di dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AAB3(word16 dx, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds dx ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_AAB3_entry:
	*dsOut = ds
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAB3:
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB91:
	branch wArg06 == 0x0000 l0800_AB9A
	branch wArg06 == 0x0000 l0800_AB9A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB97:
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AABB:
	word16 ax_105
	word16 v10_95 = wArg06 + 0x0001
	wArg06 = v10_95
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0006:word16] <=u v10_95 l0800_AACF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AACF:
	ax_105 = Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0006:word16]
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AACA:
	ax_105 = v10_95
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAD6:
	word16 di_108 = ax_105
	word16 bx_110 = (word16) ptrArg02
	selector es_111 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[es_111:bx_110 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAE3:
	branch Mem0[es_111:bx_110 + 0x0006:word16] == 0x0000 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAEA:
	branch Mem0[es_111:bx_110 + 0x0006:word16] >=u v10_95 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAF3:
	branch Mem0[es_111:bx_110:word16] != 0x0000 l0800_AB50
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB50:
	word16 v18_163 = wArg06 - 0x0001
	wArg06 = v18_163
	branch v18_163 == 0x0000 l0800_AB8C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB5A:
	di_108 = di_108 - 0x0001
	branch di_108 == 0x0000 l0800_AB8C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB5D:
	word16 ax_207
	word16 bx_194 = (word16) ptrArg02
	selector es_195 = SLICE(ptrArg02, selector, 16)
	word16 v19_196 = Mem0[es_195:bx_194:word16] - 0x0001
	Mem197[es_195:bx_194:word16] = v19_196
	branch v19_196 < 0x0000 l0800_AB7A
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB7A:
	ptrLoc0A = DPB(ptrLoc0A, wArg02, 0) (alias)
	ax_207 = fn0800_AEC2(ds, ptrLoc0A, wArg04, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB65:
	word16 ax_224 = Mem197[es_195:bx_194 + 0x000E:word16]
	Mem227[es_195:bx_194 + 0x000C:word16] = Mem197[es_195:bx_194 + 0x000C:word16] + 0x0001
	ax_207 = DPB(ax_224, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB85:
	dx = ax_207
	byte dl_213 = (byte) ax_207
	branch ax_207 != 0xFFFF l0800_AB47
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB47:
	Mem220[SLICE(ptrArg08, selector, 16):(word16) ptrArg08:byte] = dl_213
	wArg08 = wArg08 + 0x0001
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB8C:
	branch dx == 0xFFFF l0800_AB3D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAF9:
	wArg06 = v10_95 - 0x0001
	word16 di_257 = 0x0000
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB0E:
	word16 bx_263 = (word16) ptrArg02
	selector es_264 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_264:bx_263 + 0x0006:word16] <=u wArg06 l0800_AB00
// DataOut: bx di dil ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB00:
	word16 bx_295 = (word16) ptrArg02
	selector es_296 = SLICE(ptrArg02, selector, 16)
	di_257 = di_257 + Mem0[es_296:bx_295 + 0x0006:word16]
	wArg06 = wArg06 - Mem0[es_296:bx_295 + 0x0006:word16]
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB1A:
	word16 ax_277 = (int16) Mem0[es_264:bx_263 + 0x0004:byte]
	ptrLoc0C = DPB(ptrLoc0C, wArg08, 0) (alias)
	word16 ax_281 = fn0800_8F50((byte) ax_277, ds, ax_277, ptrLoc0C, di_257)
	dx = ax_281
	wArg08 = wArg08 + ax_281
	branch ax_281 == di_257 l0800_AB91
// DataOut: di dil dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB36:
	wArg06 = wArg06 + (di_257 - ax_281)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:0xFF bx:<invalid> ah:0x3F cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_AB3D:
	word16 bx_138 = (word16) ptrArg02
	selector es_139 = SLICE(ptrArg02, selector, 16)
	Mem141[es_139:bx_138 + 0x0002:word16] = Mem0[es_139:bx_138 + 0x0002:word16] | 0x0020
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0006(16)

l0800_AB9A:
	return wArg06
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_AAB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_ABA3(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_ABA3_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABA3:
	word16 ax_117
	word16 sp_103 = fp - 0x000A
	branch wArg06 != 0x0000 l0800_ABB6
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABB6:
	word16 dx_101
	word16 ax_81 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_101)
	branch dx_101 >u 0x0001 l0800_ABF2
// DataOut: ax di ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABCD:
	branch dx_101 <u 0x0001 l0800_ABD3
// DataOut: ax di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABCF:
	branch false l0800_ABF2
// DataOut: di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABF2:
	word16 si_102 = wArg08 + 0x0001
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC0B:
	word16 dx_147
	si_102 = si_102 - 0x0001
	branch si_102 == 0x0000 l0800_AC26
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC12:
	word16 sp_120 = sp_103 - 0x0002
	Mem121[ss:sp_120:word16] = wArg04
	Mem123[ss:sp_120 - 0x0002:word16] = wArg02
	Mem125[ss:sp_120 - 0x0004:word16] = wArg06
	Mem128[ss:sp_120 - 0x0006:word16] = wArg0C
	Mem131[ss:sp_120 - 0x0008:word16] = wArg0A
	sp_103 = sp_120 + 0x0002
	branch fn0800_AAB3(dx_101, ds, ptrArg00, wArg02, wArg04, ptrArg06, wArg08, out ds) == 0x0000 l0800_ABF8
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABF8:
	wArg04 = dx_147
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, bp, out dx_147)
	dx_101 = dx_147
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC26:
	ax_117 = wArg08 - si_102
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ABD3:
	selector ds_166
	ax_117 = (uint32) (uint16) (ax_81 - fn0800_AAB3(dx_101, ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_81, DPB(ptrLoc0E, wArg02, 0), wArg04, out ds_166)) /u wArg06
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_ABB2:
	ax_117 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AC2B:
	return ax_117
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_ABA3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_AC31(word16 bp, word16 wArg00, segptr32 ptrArg02, ptr16 & bpOut, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(32)
fn0800_AC31_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(32)

l0800_AC31:
	word16 cx_102
	word16 bx_13 = (word16) ptrArg02
	selector es_14 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_14:bx_13:word16] >= 0x0000 l0800_AC4D
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC4D:
	int32 dx_ax_129 = (int32) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16]
	word16 dx_131 = SLICE(dx_ax_129, word16, 16)
	ax = ((word16) dx_ax_129 ^ dx_131) - dx_131
	cx_102 = ax
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC41:
	cx_102 = Mem0[es_14:bx_13 + 0x0006:word16] + Mem0[es_14:bx_13:word16] + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC5C:
	branch (Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_ACAA
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC67:
	word16 bx_62 = (word16) ptrArg02
	selector es_63 = SLICE(ptrArg02, selector, 16)
	word16 wLoc06_67 = Mem0[es_63:bx_62 + 0x000C:word16]
	branch Mem0[es_63:bx_62:word16] >= 0x0000 l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_ACA3:
	cx_102 = cx_102 - 0x0001
	ax = cx_102
	branch cx_102 != 0x0000 l0800_AC96
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC96:
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] != 0x0A l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_ACA2:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC7E:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC8D:
	cx_102 = cx_102 - 0x0001
	ax = cx_102
	branch cx_102 != 0x0000 l0800_AC80
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC80:
	word16 v18_84 = wLoc06_67 - 0x0001
	ptrLoc06 = DPB(ptrLoc06, v18_84, 0) (alias)
	wLoc06_67 = v18_84
	branch Mem0[SLICE(ptrLoc06, selector, 16):v18_84:byte] != 0x0A l0800_AC8D
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC8C:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC94:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16)

l0800_ACAA:
	return ax
	*siOut = wArg00
	*bpOut = Mem0[ss:bp:word16]
	return si
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AC31_exit:
// DataOut: ax bp si sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 bp:<invalid> Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:si Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_ACB3(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +000A(16)
fn0800_ACB3_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_ACB3:
	word16 ax_107
	word16 bp_128 = fp - 0x0002
	word16 si_11 = wArg0A
	word16 sp_131 = fp - 0x0004
	byte dl_21
	selector ds_22
	branch fn0800_A6B7(ds, DPB(ptrLoc08, wArg02, 0), wArg04, out dl_21, out ds_22) == 0x0000 l0800_ACCE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_ACCE:
	branch wArg0A != 0x0001 l0800_ACEA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_ACD3:
	word16 bx_119 = (word16) ptrArg02
	branch Mem0[SLICE(ptrArg02, selector, 16):bx_119:word16] <= 0x0000 l0800_ACEA
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(16)

l0800_ACDC:
	word16 ax_133 = (word16) (int32) fn0800_AC31(fp - 0x0002, wLoc0A, DPB(ptrLoc08, bx_119, 0), out bp_128, out si_11)
	Mem135[ss:bp_128 + 0x0008:word16] = Mem0[ss:bp_128 + 0x0008:word16] - ax_133
	Mem139[ss:bp_128 + 0x000A:word16] = v18
	sp_131 = fp - 0x0004
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_ACEA:
	ptr32 es_bx_73 = Mem0[ss:bp_128 + 0x0004:segptr32]
	Mem0[es_bx_73 + 0x0002:word16] = Mem0[es_bx_73 + 0x0002:word16] & 0xFE5F
	Mem0[Mem0[es_bx_73:word16]:word16] = 0x0000
	word16 dx_82 = Mem0[es_bx_73 + 0x0008:word16]
	Mem0[es_bx_73 + 0x000E:word16] = Mem0[es_bx_73 + 0x000A:word16]
	Mem0[es_bx_73 + 0x000C:word16] = dx_82
	word16 sp_85 = sp_131 - 0x0002
	Mem86[ss:sp_85:word16] = si_11
	Mem88[ss:sp_85 - 0x0002:word16] = Mem86[ss:bp_128 + 0x000A:word16]
	Mem90[ss:sp_85 - 0x0004:word16] = Mem88[ss:bp_128 + 0x0008:word16]
	word16 ax_92 = (int16) Mem0[es_bx_73 + 0x0004:byte]
	Mem95[ss:sp_85 - 0x0006:word16] = ax_92
	word16 dx_98
	word16 ax_99 = fn0800_8E29((byte) ax_92, ds_22, wArg00, wArg02, wArg04, bArg06, out dx_98)
	branch dx_98 != 0xFFFF l0800_AD2A
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD20:
	branch ax_99 != 0xFFFF l0800_AD2A
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD2A:
	ax_107 = 0x0000
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD25:
	ax_107 = 0xFFFF
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_ACC9:
	ax_107 = 0xFFFF
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AD2C:
	return ax_107
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_ACB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_AD2F(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AD2F_entry:
	*siOut = si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AD2F:
	word16 bp_40 = fp - 0x0002
	word16 dx_19
	word16 ax_20 = fn0800_97B6(ds, (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte], out dx_19)
	branch dx_19 != 0xFFFF l0800_AD52
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AD4D:
	branch ax_20 == 0xFFFF l0800_AD7B
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AD52:
	word16 bx_52 = (word16) ptrArg02
	branch Mem0[SLICE(ptrArg02, selector, 16):bx_52:word16] >= 0x0000 l0800_AD6B
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_AD6B:
	word16 si_85
	int32 dx_ax_88 = (int32) fn0800_AC31(fp - 0x0002, wLoc0C, DPB(ptrLoc0A, wArg02, 0), out bp_40, out si_85)
	word16 v19_91 = Mem0[ss:bp_40 - 0x0004:word16] - (word16) dx_ax_88
	Mem92[ss:bp_40 - 0x0004:word16] = v19_91
	Mem96[ss:bp_40 - 0x0002:word16] = Mem92[ss:bp_40 - 0x0002:word16] - SLICE(dx_ax_88, word16, 16) - (v19_91 <u 0x0000)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AD5B:
	word16 si_65
	int32 dx_ax_68 = (int32) fn0800_AC31(fp - 0x0002, wLoc0C, DPB(ptrLoc0A, bx_52, 0), out bp_40, out si_65)
	word16 v16_71 = Mem0[ss:bp_40 - 0x0004:word16] + (word16) dx_ax_68
	Mem72[ss:bp_40 - 0x0004:word16] = v16_71
	Mem76[ss:bp_40 - 0x0002:word16] = Mem72[ss:bp_40 - 0x0002:word16] + SLICE(dx_ax_68, word16, 16) + (v16_71 <u 0x0000)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AD7B:
	return Mem0[ss:bp_40 - 0x0004:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:0x42 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AD2F_exit:
// DataOut: ax si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> si:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AD85(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_AD85_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD85:
	word16 ax_142
	word16 sp_11 = fp - 0x000A
	branch wArg06 == 0x0000 l0800_AE07
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD94:
	word16 dx_94
	word16 ax_95 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_94)
	branch dx_94 >u 0x0001 l0800_ADC9
// DataOut: ax di ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAB:
	branch dx_94 <u 0x0001 l0800_ADB1
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAD:
	branch false l0800_ADC9
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADC9:
	word16 si_106 = 0x0000
	branch 0x0000 >=u wArg08 l0800_AE07
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADD0:
	word16 sp_117 = sp_11 - 0x0002
	Mem118[ss:sp_117:word16] = wArg04
	Mem120[ss:sp_117 - 0x0002:word16] = wArg02
	Mem122[ss:sp_117 - 0x0004:word16] = wArg06
	Mem125[ss:sp_117 - 0x0006:word16] = wArg0C
	Mem128[ss:sp_117 - 0x0008:word16] = wArg0A
	word16 ax_132 = fn0800_B4BE(ds, ptrArg00, wArg02, wArg04, ptrArg06, wArg08, out ds)
	sp_11 = sp_117 + 0x0002
	branch false l0800_ADEA
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADE6:
	branch ax_132 == wArg06 l0800_ADEE
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADEE:
	wArg04 = dx_152
	word16 dx_152
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, bp, out dx_152)
	si_106 = si_106 + 0x0001
	branch si_106 <u wArg08 l0800_ADD0
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AE07:
	ax_142 = wArg08
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ADEA:
	ax_142 = si_106
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ADB1:
	selector ds_173
	ax_142 = (uint32) (uint16) fn0800_B4BE(ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_95, DPB(ptrLoc0E, wArg02, 0), wArg04, out ds_173) /u wArg06
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_AE0A:
	return ax_142
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_AD85_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



selector fn0800_AE10(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
fn0800_AE10_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AE10:
	word16 si_12 = 0x0014
	ds_31 = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE40:
	selector ds_31
	si_12 = si_12 - 0x0001
	branch si_12 != 0x0000 l0800_AE24
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE24:
	word16 bx_49 = (word16) ptrLoc06
	branch (Mem0[SLICE(ptrLoc06, selector, 16):bx_49 + 0x0002:word16] & 0x0300) != 0x0300 l0800_AE3C
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(8)

l0800_AE33:
	ptrLoc0C = DPB(ptrLoc0C, bx_49, 0) (alias)
	byte dl_72
	fn0800_A6B7(ds_31, ptrLoc0C, ds, out dl_72, out ds_31)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(8)

l0800_AE3C:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE47:
	return ds_31
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AE10_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AE4C(selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_AE4C_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE4C:
	branch (Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AE5D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE5A:
	ds = fn0800_AE10(ds)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE5D:
	word16 ax_51
	word16 bx_18 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 wLoc04_21 = Mem0[es_19:bx_18 + 0x0006:word16]
	word16 ax_22 = Mem0[es_19:bx_18 + 0x000A:word16]
	word16 dx_23 = Mem0[es_19:bx_18 + 0x0008:word16]
	Mem24[es_19:bx_18 + 0x000E:word16] = ax_22
	Mem25[es_19:bx_18 + 0x000C:word16] = dx_23
	selector ds_36
	word16 ax_37 = fn0800_B97F(ds, (int16) Mem25[es_19:bx_18 + 0x0004:byte], DPB(ptrLoc08, dx_23, 0), ax_22, wLoc04_21, out ds_36)
	word16 bx_40 = (word16) ptrArg02
	selector es_41 = SLICE(ptrArg02, selector, 16)
	Mem42[es_41:bx_40:word16] = ax_37
	branch ax_37 <= 0x0000 l0800_AE95
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(32)

l0800_AE95:
	word16 bx_67 = (word16) ptrArg02
	selector es_68 = SLICE(ptrArg02, selector, 16)
	branch Mem42[es_68:bx_67:word16] != 0x0000 l0800_AEAE
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Stack +0002(32)

l0800_AEAE:
	word16 bx_85 = (word16) ptrArg02
	selector es_86 = SLICE(ptrArg02, selector, 16)
	Mem87[es_86:bx_85:word16] = 0x0000
	Mem89[es_86:bx_85 + 0x0002:word16] = Mem87[es_86:bx_85 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE9E:
	Mem83[es_68:bx_67 + 0x0002:word16] = Mem42[es_68:bx_67 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBB:
	ax_51 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE8C:
	Mem59[es_41:bx_40 + 0x0002:word16] = Mem42[es_41:bx_40 + 0x0002:word16] & 0xFFDF
	ax_51 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBE:
	return ax_51
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AE4C_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AEC2_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AEC2:
	word16 bx_9 = (word16) ptrArg02
	selector es_10 = SLICE(ptrArg02, selector, 16)
	Mem13[es_10:bx_9:word16] = Mem0[es_10:bx_9:word16] + 0x0001
	selector ds_23
	return fn0800_AED6(ds, DPB(ptrLoc06, bx_9, 0), wArg04, out ds_23)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_AEC2_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_AED6(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_AED6_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_AED6:
	word16 ax_101
	branch (wArg02 | wArg04) != 0x0000 l0800_AEE8
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AEE8:
	word16 ax_123
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16] <= 0x0000 l0800_AF0B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF0B:
	word16 bx_125 = (word16) ptrArg02
	selector es_126 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_126:bx_125:word16] < 0x0000 l0800_AF7F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF14:
	branch (Mem0[es_126:bx_125 + 0x0002:word16] & 0x0110) != 0x0000 l0800_AF7F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF1C:
	branch (Mem0[es_126:bx_125 + 0x0002:word16] & 0x0001) == 0x0000 l0800_AF7F
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF24:
	word16 bx_162 = (word16) ptrArg02
	selector es_163 = SLICE(ptrArg02, selector, 16)
	Mem165[es_163:bx_162 + 0x0002:word16] = Mem0[es_163:bx_162 + 0x0002:word16] | 0x0080
	branch Mem165[es_163:bx_162 + 0x0006:word16] == 0x0000 l0800_AF43
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF43:
	branch (Mem165[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AF51
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF4E:
	ds = fn0800_AE10(ds)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF51:
	ptrLoc0A = DPB(ptrLoc0A, 0x4EE4, 0) (alias)
	word16 ax_215 = fn0800_B97F(ds, (int16) Mem165[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte], ptrLoc0A, ds, 0x0001, out ds)
	branch ax_215 != 0x0000 l0800_AF9E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(32)

l0800_AF9E:
	branch Mem165[ds:0x4EE4:byte] != 0x0D l0800_AFB0
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFA5:
	branch (Mem165[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AF43
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFB0:
	word16 bx_246 = (word16) ptrArg02
	selector es_247 = SLICE(ptrArg02, selector, 16)
	Mem249[es_247:bx_246 + 0x0002:word16] = Mem165[es_247:bx_246 + 0x0002:word16] & 0xFFDF
	ax_123 = DPB(ax_215, Mem249[ds:0x4EE4:byte], 0) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF6D:
	branch fn0800_A59D(ds, (int16) Mem165[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte]) == 0x0001 l0800_AF8A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF8A:
	word16 bx_234 = (word16) ptrArg02
	selector es_235 = SLICE(ptrArg02, selector, 16)
	Mem241[es_235:bx_234 + 0x0002:word16] = Mem165[es_235:bx_234 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF7F:
	word16 bx_143 = (word16) ptrArg02
	selector es_144 = SLICE(ptrArg02, selector, 16)
	Mem146[es_144:bx_143 + 0x0002:word16] = Mem0[es_144:bx_143 + 0x0002:word16] | 0x0010
	word16 bx_149 = (word16) ptrArg02
	selector es_150 = SLICE(ptrArg02, selector, 16)
	Mem152[es_150:bx_149 + 0x0002:word16] = Mem146[es_150:bx_149 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF34:
	selector ds_174
	branch fn0800_AE4C(ds, DPB(ptrLoc08, bx_162, 0), out ds_174) == 0x0000 l0800_AEF1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF3F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AEF1:
	word16 bx_112 = (word16) ptrArg02
	selector es_113 = SLICE(ptrArg02, selector, 16)
	Mem115[es_113:bx_112:word16] = Mem0[es_113:bx_112:word16] - 0x0001
	word16 ax_116 = Mem115[es_113:bx_112 + 0x000E:word16]
	word16 si_117 = Mem115[es_113:bx_112 + 0x000C:word16]
	Mem119[es_113:bx_112 + 0x000C:word16] = Mem115[es_113:bx_112 + 0x000C:word16] + 0x0001
	ax_123 = DPB(ax_116, Mem119[ax_116:si_117:byte], 0) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AFBB:
	ax_101 = DPB(ax_123, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AEE2:
	ax_101 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AFBD:
	return ax_101
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_AED6_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> si:si Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_AFCB(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_AFCB_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFCB:
	word16 ax_189
	word16 di_16 = (word16) ptrArg02
	selector es_17 = SLICE(ptrArg02, selector, 16)
	branch (es_17 | di_16) == 0x0000 l0800_AFFC
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFDC:
	byte ah_83 = Mem0[es_17:di_16:byte]
	word16 cx_206 = 0xFFFF
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:es | di -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5:
	branch cx_206 == 0x0000 l0800_AFE7
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5_1:
	di_16 = di_207 + 0x0001
	cx_206 = cx_206 - 0x0001
	di_207 = di_16
	branch 0x00 != Mem0[es_17:di_207:byte] l0800_AFE5
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE7:
	word16 cx_96 = ~cx_206
	word16 cx_113 = cx_96 - 0x0001
	branch cx_96 == 0x0001 l0800_AFFC
// DataOut: ah cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFEC:
	ptr32 es_di_100 = Mem0[ds:0x26AA:segptr32]
	word16 di_101 = (word16) es_di_100
	word16 wLoc06_109 = di_101
	branch (SLICE(es_di_100, selector, 16) | di_101) != 0x0000 l0800_B009
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B009:
	ptr32 es_di_122 = Mem0[ds:di_101:segptr32]
	word16 di_123 = (word16) es_di_122
	selector es_124 = SLICE(es_di_122, selector, 16)
	branch (es_124 | di_123) == 0x0000 l0800_AFFC
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B012:
	byte al_130 = Mem0[Mem0[es_di_122:byte]:byte]
	branch al_130 == 0x00 l0800_AFFC
// DataOut: ah al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B019:
	branch ah_83 != al_130 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B01D:
	byte Z_157 = cond(Mem0[es_124:cx_113 + di_123:byte] - 0x3D)
	branch Mem0[es_124:cx_113 + di_123:byte] != 0x3D l0800_B002
// DataOut: ah bx cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B025:
	selector ds_162 = SLICE(ptrArg02, selector, 16)
	word16 si_163 = (word16) ptrArg02
	cx_166 = cx_113
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029:
	word16 cx_166
	branch cx_166 == 0x0000 l0800_B02B
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029_1:
	Z_157 = cond(Mem0[ds_162:si_209:byte] - Mem0[es_124:di_123:byte]) (alias)
	si_163 = si_209 + 0x0001
	di_123 = di_123 + 0x0001
	cx_166 = cx_166 - 0x0001
	si_209 = si_163
	branch Mem0[ds_162:si_209:byte] != Mem0[es_124:di_123:byte] l0800_B029
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B02B:
	branch Z_157 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B002:
	word16 v23_148 = wLoc06_109 + 0x0004
	wLoc06_109 = v23_148
	di_101 = v23_148 (alias)
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B030:
	ax_189 = di_123 + 0x0001
	*dxOut = es_124
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_AFFC:
	*dxOut = 0x0000
	ax_189 = 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_B035:
	return ax_189
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp

fn0800_AFCB_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> dx:<invalid> di:di si:si al:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> Sequence ds:si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp



selector fn0800_B03B(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: es
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es esi rax rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_B03B_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B03B:
	word16 di_17 = (word16) ptrArg02
	selector es_18 = SLICE(ptrArg02, selector, 16)
	selector ds_21 = SLICE(ptrArg06, selector, 16)
	word16 si_22 = (word16) ptrArg06
	word16 cx_25 = wArg0A >>u 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B04E:
	branch cx_25 == 0x0000 l0800_B050
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B050:
	branch wArg0A >>u 0x0001 >=u 0x0000 l0800_B053
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B052:
	Mem55[es_18:di_17:byte] = Mem0[ds_21:si_22:byte]
// DataOut: es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B053:
	return es_18
// DataOut: es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_B03B_exit:
// DataOut: es
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:si di:di ds:ds ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_B04E_1:
	Mem36[es_18:di_17:word16] = Mem0[ds_21:si_22:word16]
	si_22 = si_22 + 0x0002
	di_17 = di_17 + 0x0002
	cx_25 = cx_25 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(8)
fn0800_B05F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(8)

l0800_B05F:
	word16 di_12 = (word16) ptrArg02
	selector es_13 = SLICE(ptrArg02, selector, 16)
	word16 cx_15 = wArg06
	word16 ax_20 = DPB(ax, bArg08, 8)
	branch (di_12 & 0x0001) == 0x0000 l0800_B079
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B075:
	branch wArg06 == 0x0000 l0800_B080
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B077:
	Mem53[es_13:di_12:byte] = bArg08
	di_12 = di_12 + 0x0001
	cx_15 = wArg06 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B079:
	word16 cx_38 = cx_15 >>u 0x0001
	cx_45 = cx_38
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di + 0x0001 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07B:
	word16 cx_45
	branch cx_45 == 0x0000 l0800_B07D
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07D:
	branch cx_38 >=u 0x0000 l0800_B080
// DataOut: al di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07F:
	Mem50[es_13:di_12:byte] = bArg08
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B080:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp

fn0800_B05F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di -4(fp):di -2(fp):bp

l0800_B07B_1:
	Mem46[es_13:di_12:word16] = ax_20
	di_12 = di_12 + 0x0002
	cx_45 = cx_45 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B083(word16 wArg02, word16 wArg04, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)
fn0800_B083_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)

l0800_B083:
	fn0800_B05F(DPB(ptrLoc0A, wArg02, 0), wArg08, bArg06)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B083_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> dx:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ax -2(fp):bp



void fn0800_B0A1(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0A1_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0A1:
	word16 ax_120
	byte dl_25
	branch fn0800_8F2F(wArg02, wArg08, wArg04, wArg06, out dl_25) l0800_B0BE
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0BE:
	ax_120 = 0x0000
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0B8:
	ax_120 = 0x0001
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0C1:
	selector ds_32 = SLICE(ptrArg02, selector, 16)
	word16 si_105 = (word16) ptrArg02
	word16 di_107 = (word16) ptrArg06
	selector es_37 = SLICE(ptrArg06, selector, 16)
	word16 cx_109 = wArg0A
	branch ax_120 == 0x0000 l0800_B0D4
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0CE:
	si_105 = si_105 + wArg0A - 0x0001
	di_107 = di_107 + wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0D4:
	branch (di_107 & 0x0001) == 0x0000 l0800_B0DE
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DA:
	branch wArg0A == 0x0000 l0800_B0ED
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DC:
	Mem104[es_37:di_107:byte] = Mem0[ds_32:si_105:byte]
	si_105 = si_105 + 0x0001
	di_107 = di_107 + 0x0001
	cx_109 = wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DE:
	word16 si_73 = si_105 - ax_120
	word16 di_75 = di_107 - ax_120
	word16 cx_77 = cx_109 >>u 0x0001
	cx_87 = cx_77
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E4:
	word16 cx_87
	branch cx_87 == 0x0000 l0800_B0E6
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E6:
	branch cx_77 >=u 0x0000 l0800_B0ED
// DataOut: ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E8:
	Mem100[es_37:di_75 + ax_120:byte] = Mem0[ds_32:si_73 + ax_120:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0ED:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_B0A1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:si di:di ds:ds ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_B0E4_1:
	Mem90[es_37:di_75:word16] = Mem0[ds_32:si_73:word16]
	si_73 = si_73 + 0x0002
	di_75 = di_75 + 0x0002
	cx_87 = cx_87 - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



selector fn0800_B0F3(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0F3_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0F3:
	fn0800_B0A1(DPB(ptrLoc0C, wArg06, 0), wArg08, DPB(ptrLoc08, wArg02, 0), wArg04, wArg0A)
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B0F3_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B113(byte al, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_B113_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_B113:
	word16 ax_19
	branch msdos_create_truncate_file(wArg02, SLICE(ptrArg04, selector, 16), (word16) ptrArg04, out ax_19) l0800_B126
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B126:
	fn0800_8D2B(ds, ax_19)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B124:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B12A:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp

fn0800_B113_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp



void fn0800_B12E(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_B12E_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_B12E:
	word16 ax_17
	msdos_write_file(wArg02, 0x0000, SEQ(ds, 0x0000), out ax_17)
	return
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B12E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> cx:0x0000 dx:0x0000 ah:0x40 -2(fp):bp



byte fn0800_B140(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si
// LiveOut: al ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B140_entry:
	*dsOut = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B140:
	word16 si_114 = wArg06
	branch (wArg06 & 0xC000) != 0x0000 l0800_B15C
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B154:
	si_114 = wArg06 | Mem0[ds:0x2512:word16] & 0xC000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B15C:
	word16 di_113
	byte al_284
	word16 ax_162 = fn0800_A53C(0x00, ds, DPB(ptrLoc10, wArg02, 0), 0x00, di)
	word16 wLoc04_157 = ax_162
	branch (si_114 & 0x0100) == 0x0000 l0800_B1F2
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B174:
	word16 di_268 = wArg08 & Mem0[ds:0x2514:word16]
	ax_162 = di_268
	branch (di_268 & 0x0180) != 0x0000 l0800_B186
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B17F:
	ax_162 = fn0800_8D2B(ds, 0x0001)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B186:
	word16 wLoc0C_282
	branch ax_162 != 0xFFFF l0800_B1AF
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1AF:
	branch (si_114 & 0x0400) == 0x0000 l0800_B1F2
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1B5:
	wLoc0C_282 = 0x0050
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B18C:
	branch Mem0[ds:0x2516:word16] == 0x0002 l0800_B19D
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B19D:
	byte al_297
	word16 ax_296
	branch (di_268 & 0x0080) == 0x0000 l0800_B1A7
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1A7:
	ax_296 = 0x0001
	al_297 = 0x01 (alias)
// DataOut: al ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1A3:
	ax_296 = 0x0000
	al_297 = 0x00 (alias)
// DataOut: al ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1AA:
	wLoc04_157 = ax_296
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1BB:
	branch (si_114 & 0x00F0) == 0x0000 l0800_B1DD
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1DD:
	fn0800_B113(al_297, ds, ax_296, DPB(ptrLoc0E, wArg02, 0))
	di_113 = 0xFFFF
	branch false l0800_B265
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B1EF:
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B1C1:
	ptrLoc0E = DPB(ptrLoc0E, wArg02, 0) (alias)
	fn0800_B113(0x00, ds, 0x0000, ptrLoc0E)
	di_113 = 0xFFFF
	ax_162 = 0xFFFF
	branch false l0800_B1D6
// DataOut: al dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1D6:
	fn0800_A57F(0xFF, ds, 0xFFFF)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1F2:
	fn0800_B2A0(ds, DPB(ptrLoc10, wArg02, 0), si_114)
	di_113 = ax_162
	branch ax_162 < 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0004(16)

l0800_B205:
	word16 ax_191 = fn0800_A2A3(0x00, ds, ax_162, 0x0000, ptrLoc0A, wLoc06)
	byte al_192 = (byte) ax_191
	branch (ax_191 & 0x0080) == 0x0000 l0800_B237
// DataOut: al ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B237:
	branch (si_114 & 0x0200) == 0x0000 l0800_B241
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B23D:
	fn0800_B12E(al_192, ds, ax_162)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B216:
	si_114 = si_114 | 0x2000
	branch (si_114 & 0x8000) == 0x0000 l0800_B241
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B220:
	fn0800_A2A3(0x01, ds, ax_162, 0x0001, DPB(ptrLoc0E, ax_191 & 0x00FF | 0x0020, 0), di)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B241:
	branch (wLoc04_157 & 0x0001) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B248:
	branch (si_114 & 0x0100) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B24E:
	branch (si_114 & 0x00F0) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B254:
	fn0800_A53C(0x01, ds, DPB(ptrLoc12, wArg02, 0), 0x01, 0x0001)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B265:
	branch di_113 < 0x0000 l0800_B298
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B269:
	word16 ax_124
	branch (si_114 & 0x0300) == 0x0000 l0800_B274
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B274:
	ax_124 = 0x0000
// DataOut: ax di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B26F:
	ax_124 = 0x1000
// DataOut: ax di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B276:
	word16 ax_136
	word16 dx_128 = si_114 & 0xF8FF | ax_124
	branch (wLoc04_157 & 0x0001) == 0x0000 l0800_B28A
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B28A:
	ax_136 = 0x0100
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B286:
	ax_136 = 0x0000
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B28D:
	Mem144[ds:(di_113 << 0x0001) + 0x24EA:word16] = dx_128 | ax_136
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B1D3:
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B298:
	al_284 = (byte) di_113 (alias)
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B193:
	wLoc0C_282 = Mem0[ds:0x2516:word16]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B197:
	al_284 = (byte) fn0800_8D2B(ds, wLoc0C_282) (alias)
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B29A:
	return al_284
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_B140_exit:
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si di:di ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ax bp ds sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_B2A0_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_B2A0:
	byte al_18 = 0x01
	branch (wArg06 & 0x0002) != 0x0000 l0800_B2BB
// DataOut: al cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B1:
	al_18 = 0x02
	branch (wArg06 & 0x0004) != 0x0000 l0800_B2BB
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:0x01 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B9:
	al_18 = 0x00
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:0x02 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2BB:
	word16 ax_32
	branch msdos_open_file(ptrArg02, al_18 | bArg06 & 0xF0, out ax_32) l0800_B2E7
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0006(16)

l0800_B2E7:
	fn0800_8D2B(ds, ax_32)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2CD:
	Mem53[ds:(ax_32 << 0x0001) + 0x24EA:word16] = wArg06 & 0xB8FF | 0x8000
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2EB:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp

fn0800_B2A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp



word16 fn0800_B2EF(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_B2EF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_B2EF:
	word16 di_27
	return fn0800_9828(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, out di_27)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B2EF_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -14(fp):fp + 0x0006 -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x236C -6(fp):ds -4(fp):0xB4BE -2(fp):bp



word16 fn0800_B30A(selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B30A_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B30A:
	word16 bx_9 = (word16) ptrArg04
	selector es_10 = SLICE(ptrArg04, selector, 16)
	Mem13[es_10:bx_9:word16] = Mem0[es_10:bx_9:word16] - 0x0001
	selector ds_29
	return fn0800_B324(ds, (byte) (int16) bArg02, DPB(ptrLoc06, bx_9, 0), wArg06, out ds_29)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B30A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_B324(selector ds, byte bArg02, segptr32 ptrArg04, selector psegArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B324_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B324:
	word16 ax_132
	word16 ax_40
	Mem12[ds:0x4EE6:byte] = bArg02
	word16 bx_16 = (word16) ptrArg04
	selector es_17 = SLICE(ptrArg04, selector, 16)
	branch Mem12[es_17:bx_16:word16] >= 0xFFFF l0800_B389
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B389:
	word16 bx_139 = (word16) ptrArg04
	selector es_140 = SLICE(ptrArg04, selector, 16)
	branch (Mem12[es_140:bx_139 + 0x0002:word16] & 0x0090) != 0x0000 l0800_B39C
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B394:
	branch (Mem12[es_140:bx_139 + 0x0002:word16] & 0x0002) != 0x0000 l0800_B3A6
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3A6:
	word16 bx_170 = (word16) ptrArg04
	selector es_171 = SLICE(ptrArg04, selector, 16)
	Mem173[es_171:bx_170 + 0x0002:word16] = Mem12[es_171:bx_170 + 0x0002:word16] | 0x0100
	branch Mem173[es_171:bx_170 + 0x0006:word16] == 0x0000 l0800_B421
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B421:
	selector es_241 = SLICE(ptrArg04, selector, 16)
	branch (Mem173[ds:((int16) Mem173[es_241:(word16) ptrArg04 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B44C
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_B435:
	word16 ax_343 = (int16) Mem173[es_241:wArg04 + 0x0004:byte]
	word16 dx_347
	fn0800_8E29((byte) ax_343, ds, ax_343, 0x0000, 0x0000, 0x02, out dx_347)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B44C:
	branch Mem173[ds:0x4EE6:byte] != 0x0A l0800_B478
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B453:
	word16 bx_306 = (word16) ptrArg04
	selector es_307 = SLICE(ptrArg04, selector, 16)
	branch (Mem173[es_307:bx_306 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B478
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B45E:
	word16 ax_321 = (int16) Mem173[es_307:bx_306 + 0x0004:byte]
	ptrLoc0A = DPB(ptrLoc0A, 0x26AE, 0) (alias)
	byte dl_325
	ax_132 = fn0800_C779((byte) ax_321, ds, ax_321, ptrLoc0A, 0x0001, out dl_325)
	branch ax_132 != 0x0001 l0800_B495
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B478:
	word16 ax_296 = (int16) Mem173[SLICE(ptrArg04, selector, 16):(word16) ptrArg04 + 0x0004:byte]
	byte dl_300
	ax_132 = fn0800_C779((byte) ax_296, ds, ax_296, DPB(ptrLoc0A, 0x4EE6, 0), 0x0001, out dl_300)
	branch ax_132 == 0x0001 l0800_B4A3
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B495:
	branch (Mem173[SLICE(ptrArg04, selector, 16):(word16) ptrArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_B4A3
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B4A0:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B3B6:
	branch Mem173[es_171:bx_170:word16] == 0x0000 l0800_B3C9
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3BC:
	ptrLoc08 = DPB(ptrLoc08, bx_170, 0) (alias)
	byte dl_228
	branch fn0800_A6B7(ds, ptrLoc08, psegArg06, out dl_228, out ds) != 0x0000 l0800_B380
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3C9:
	word16 bx_186 = (word16) ptrArg04
	selector es_187 = SLICE(ptrArg04, selector, 16)
	Mem190[es_187:bx_186:word16] = -Mem173[es_187:bx_186 + 0x0006:word16]
	ax_132 = Mem190[es_187:bx_186 + 0x000E:word16]
	word16 si_192 = Mem190[es_187:bx_186 + 0x000C:word16]
	Mem194[es_187:bx_186 + 0x000C:word16] = Mem190[es_187:bx_186 + 0x000C:word16] + 0x0001
	Mem197[ax_132:si_192:byte] = Mem194[ds:0x4EE6:byte]
	branch (Mem197[psegArg06:bx_186 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B3F8
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B3F8:
	branch Mem197[ds:0x4EE6:byte] == 0x0A l0800_B409
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B3FF:
	branch Mem197[ds:0x4EE6:byte] == 0x0D l0800_B409
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B409:
	byte dl_210
	selector ds_211
	word16 ax_212 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_210, out ds_211)
	ax_132 = ax_212
	branch ax_212 != 0x0000 l0800_B41B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B41B:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B418:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B406:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B3F5:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B39C:
	word16 bx_160 = (word16) ptrArg04
	selector es_161 = SLICE(ptrArg04, selector, 16)
	Mem163[es_161:bx_160 + 0x0002:word16] = Mem12[es_161:bx_160 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B337:
	Mem94[es_17:bx_16:word16] = Mem12[es_17:bx_16:word16] + 0x0001
	ax_132 = Mem94[es_17:bx_16 + 0x000E:word16]
	word16 si_96 = Mem94[es_17:bx_16 + 0x000C:word16]
	Mem98[es_17:bx_16 + 0x000C:word16] = Mem94[es_17:bx_16 + 0x000C:word16] + 0x0001
	Mem101[ax_132:si_96:byte] = Mem98[ds:0x4EE6:byte]
	branch (Mem101[psegArg06:bx_16 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B35D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B35D:
	branch Mem101[ds:0x4EE6:byte] == 0x0A l0800_B36E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B364:
	branch Mem101[ds:0x4EE6:byte] == 0x0D l0800_B36E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B36E:
	byte dl_125
	selector ds_126
	word16 ax_127 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_125, out ds_126)
	ax_132 = ax_127
	branch ax_127 != 0x0000 l0800_B380
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B380:
	ax_40 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B37D:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B36B:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B35A:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B4A3:
	ax_40 = DPB(ax_132, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B4A8:
	return ax_40
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_B324_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:si dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_B4BE(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_B4BE_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_B4BE:
	word16 ax_109
	word16 di_137 = wArg06
	branch (Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0008) == 0x0000 l0800_B504
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_B504:
	word16 bx_177 = (word16) ptrArg02
	selector es_178 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[es_178:bx_177 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B512
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B512:
	branch Mem0[es_178:bx_177 + 0x0006:word16] != 0x0000 l0800_B51C
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B51C:
	branch Mem0[es_178:bx_177 + 0x0006:word16] >=u wArg06 l0800_B583
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B583:
	word16 bx_436 = (word16) ptrArg02
	selector es_437 = SLICE(ptrArg02, selector, 16)
	branch Mem0[es_437:bx_436:word16] + wArg06 < 0x0000 l0800_B5B1
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B58D:
	branch Mem0[es_437:bx_436:word16] != 0x0000 l0800_B59F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B59F:
	byte dl_486
	selector ds_487
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, out dl_486, out ds_487) == 0x0000 l0800_B5B1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5AE:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B593:
	Mem480[es_437:bx_436:word16] = 0xFFFF - Mem0[es_437:bx_436 + 0x0006:word16]
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5B1:
	word16 bx_457 = (word16) ptrArg02
	selector es_458 = SLICE(ptrArg02, selector, 16)
	fn0800_B03B(DPB(ptrLoc12, Mem0[es_458:bx_457 + 0x000C:word16], 0), Mem0[es_458:bx_457 + 0x000E:word16], DPB(ptrLoc0E, wArg08, 0), wArg06)
	word16 bx_467 = (word16) ptrArg02
	selector es_468 = SLICE(ptrArg02, selector, 16)
	Mem471[es_468:bx_467:word16] = Mem0[es_468:bx_467:word16] + wArg06
	Mem473[es_468:bx_467 + 0x000C:word16] = Mem471[es_468:bx_467 + 0x000C:word16] + wArg06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B522:
	branch Mem0[es_178:bx_177:word16] == 0x0000 l0800_B535
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B528:
	byte dl_424
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, bx_177, 0), wArg04, out dl_424, out ds) != 0x0000 l0800_B4F5
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B535:
	selector es_366 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[es_366:(word16) ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B560
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B549:
	word16 ax_411 = (int16) Mem0[es_366:wArg02 + 0x0004:byte]
	word16 dx_415
	fn0800_8E29((byte) ax_411, ds, ax_411, 0x0000, 0x0000, 0x02, out dx_415)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B560:
	word16 ax_389 = (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte]
	byte dl_393
	branch fn0800_C779((byte) ax_389, ds, ax_389, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_393) <u wArg06 l0800_B57D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B57D:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B57A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B519:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5DB:
	selector es_300 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[es_300:(word16) ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B606
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5EF:
	word16 ax_345 = (int16) Mem0[es_300:wArg02 + 0x0004:byte]
	word16 dx_349
	fn0800_8E29((byte) ax_345, ds, ax_345, 0x0000, 0x0000, 0x02, out dx_349)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B606:
	word16 ax_323 = (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte]
	byte dl_327
	branch fn0800_C779((byte) ax_323, ds, ax_323, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_327) >=u wArg06 l0800_B69D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):0x0000 -10(fp):0x0002 -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B620:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B50F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B625:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0006:word16] == 0x0000 l0800_B680
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B680:
	byte dl_290
	selector ds_291
	branch fn0800_C632(ds, (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte], wArg08, wArg0A, wArg06, out dl_290, out ds_291) >=u wArg06 l0800_B69D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B69A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B62F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B677:
	di_137 = di_137 - 0x0001
	branch di_137 != 0x0000 l0800_B631
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B631:
	word16 ax_231
	word16 bx_213 = (word16) ptrArg02
	selector es_214 = SLICE(ptrArg02, selector, 16)
	word16 v17_215 = Mem0[es_214:bx_213:word16] + 0x0001
	Mem216[es_214:bx_213:word16] = v17_215
	branch v17_215 >= 0x0000 l0800_B659
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B659:
	ptrLoc0C = DPB(ptrLoc0C, wArg02, 0) (alias)
	ax_231 = fn0800_B30A(ds, Mem216[SLICE(ptrArg08, selector, 16):(word16) ptrArg08:byte], ptrLoc0C, wArg04, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B639:
	word16 ax_238 = Mem216[es_214:bx_213 + 0x000E:word16]
	word16 si_239 = Mem216[es_214:bx_213 + 0x000C:word16]
	Mem241[es_214:bx_213 + 0x000C:word16] = Mem216[es_214:bx_213 + 0x000C:word16] + 0x0001
	Mem250[ax_238:si_239:byte] = Mem241[SLICE(ptrArg08, selector, 16):(word16) ptrArg08:byte]
	ax_231 = DPB(ax_238, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B66F:
	branch ax_231 != 0xFFFF l0800_B677
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B674:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B67E:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_B4D7:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4FA:
	di_137 = di_137 - 0x0001
	branch di_137 != 0x0000 l0800_B4D9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4D9:
	ptrLoc0C = DPB(ptrLoc0C, wArg02, 0) (alias)
	ds_497 = ds
	branch fn0800_B324(ds_497, (byte) (int16) Mem0[SLICE(ptrArg08, selector, 16):(word16) ptrArg08:byte], ptrLoc0C, wArg04, out ds) != 0xFFFF l0800_B4FA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4F5:
	ax_109 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B501:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_B69D:
	ax_109 = wArg06
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> si:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B6A0:
	return ax_109
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

fn0800_B4BE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> ax:<invalid> al:<invalid> si:si es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>



word16 fn0800_B97F(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B97F_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B97F:
	word16 ax_125
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_B99A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B99A:
	byte al_101 = (byte) (wArg08 + 0x0001)
	branch wArg08 <u 0xFFFF l0800_B9B0
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9A3:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_B9B5
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9B5:
	ptrLoc10 = DPB(ptrLoc10, wArg04, 0) (alias)
	word16 ax_115 = fn0800_8F50(al_101, ds, wArg02, ptrLoc10, wArg08)
	branch ax_115 <u 0xFFFF l0800_B9DD
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9D0:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_B9E2
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9E2:
	word16 si_135 = (word16) ptrArg04
	word16 cx_132 = ax_115
	selector es_136 = SLICE(ptrArg04, selector, 16)
	word16 di_137 = si_135
	word16 bx_138 = si_135
	si_143 = si_135
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9ED:
	word16 si_143
	al_101 = Mem0[ds:si_143:byte]
	si_143 = si_143 + 0x0001
	branch al_101 == 0x1A l0800_BA21
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> al:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA21:
	word16 cx_234 = -cx_132
	word16 ax_236 = 0x0000 - (cx_234 == 0x0000)
	word16 dx_245
	fn0800_8E29((byte) ax_236, ds, wArg02, cx_234, ax_236, 0x01, out dx_245)
	Mem251[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x0200
	bx_138 = si_135
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9F3:
	branch al_101 == 0x0D l0800_B9FC
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FC:
	cx_132 = cx_132 - 0x0001
	branch cx_132 != 0x0000 l0800_B9ED
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FE:
	ptrLoc14 = DPB(ptrLoc14, fp - 0x0005, 0) (alias)
	fn0800_8F50((byte) (fp - 0x0005), ds, wArg02, ptrLoc14, 0x0001)
	Mem226[es_136:di_137:byte] = bLoc05
	bx_138 = si_135
	al_101 = bLoc05
	di_137 = di_137 + 0x0001
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9F7:
	Mem194[es_136:di_137:byte] = al_101
	di_137 = di_137 + 0x0001
	cx_132 = cx_132 - 0x0001
	branch cx_132 != 0x0000 l0800_B9ED
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FA:
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA19:
	branch di_137 != bx_138 l0800_BA1F
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA1F:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA41:
	ax_125 = di_137 - bx_138
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA1D:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9DD:
	ax_125 = ax_115
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9B0:
	ax_125 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B990:
	ax_125 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BA44:
	return ax_125
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_B97F_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_BA4A(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh di dil dl ds dx eax edi edx es rax rdi rdx
// Preserved: bp di ds sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BA4A_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BA4A:
	word16 ax_27
	word16 ax_20
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_20) l0800_BA60
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BA60:
	ax_27 = fn0800_8D2B(ds, ax_20)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA5C:
	ax_27 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA64:
	return ax_27
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp

fn0800_BA4A_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> di:di al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp



selector fn0800_BA67(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_BA67_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_BA67:
	selector ds_25
	branch fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc0C, wArg02, 0), wArg04, 0x0000, out ds_25) != 0x0000 l0800_BA87
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_BA7F:
	ptr32 es_bx_44 = Mem0[ss:fp + 0x0002:segptr32]
	Mem0[es_bx_44 + 0x0002:word16] = Mem0[es_bx_44 + 0x0002:word16] & 0xFFEF
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

l0800_BA87:
	return ds_25
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

fn0800_BA67_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



word16 fn0800_BA89(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16)
fn0800_BA89_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16)

l0800_BA89:
	word16 ax_150
	word16 bp_169 = fp - 0x0002
	word16 sp_10 = fp - 0x0006
	word16 di_14 = wArg0A
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0012:word16] != wArg02 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAA0:
	branch wArg0A > 0x0002 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAA5:
	branch wArg0C <=u 0x7FFF l0800_BAB1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAB1:
	branch Mem0[ds:0x26B2:word16] != 0x0000 l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAB8:
	branch wArg02 != 0x236C l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BAC7:
	branch Mem0[ds:0x26B0:word16] != 0x0000 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BACE:
	branch wArg02 != 0x2358 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BAD5:
	Mem245[ds:0x26B0:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BABF:
	Mem248[ds:0x26B2:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BADB:
	word16 bx_97 = (word16) ptrArg02
	branch Mem0[SLICE(ptrArg02, selector, 16):bx_97:word16] == 0x0000 l0800_BAF6
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0004(16)

l0800_BAE4:
	fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc10, bx_97, 0), wArg04, 0x0001, out ds)
	sp_10 = fp - 0x0006
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BAF6:
	ptr32 es_bx_111 = Mem0[ss:fp + 0x0002:segptr32]
	branch (Mem0[es_bx_111 + 0x0002:word16] & 0x0004) == 0x0000 l0800_BB0E
// DataOut: bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB01:
	word16 sp_211 = sp_10 - 0x0002
	Mem212[ss:sp_211:word16] = Mem0[es_bx_111 + 0x000A:word16]
	Mem214[ss:sp_211 - 0x0002:word16] = Mem0[es_bx_111 + 0x0008:word16]
	fn0800_9E75(ds, wArg02, out ds)
	sp_10 = sp_211 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB0E:
	ptr32 es_bx_121 = Mem0[ss:fp + 0x0002:segptr32]
	Mem0[es_bx_121 + 0x0002:word16] = Mem0[es_bx_121 + 0x0002:word16] & 0xFFF3
	Mem0[es_bx_121 + 0x0006:word16] = 0x0000
	word16 ax_128 = Mem127[ss:fp + 0x0004:word16]
	word16 dx_129 = Mem127[ss:fp + 0x0002:word16]
	Mem0[es_bx_121 + 0x000A:word16] = ax_128
	Mem0[es_bx_121 + 0x0008:word16] = dx_129 + 0x0005
	Mem0[es_bx_121 + 0x000E:word16] = ax_128
	Mem0[es_bx_121 + 0x000C:word16] = dx_129 + 0x0005
	branch wArg0A == 0x0002 l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB3A:
	word16 si_153 = wArg0C
	branch false l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB3E:
	Mem157[ds:0x2352:word16] = 0xC7F0
	branch (Mem157[ss:fp + 0x0006:word16] | Mem157[ss:fp + 0x0008:word16]) != 0x0000 l0800_BB6B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB4C:
	Mem188[ss:sp_10 - 0x0002:word16] = wArg0C
	word16 dx_190
	selector ds_194
	word16 ax_195 = fn0800_9F7F(fp - 0x0002, ds, wArg00, out dx_190, out bp_169, out si_153, out di_14, out ds_194)
	Mem198[ss:bp_169 + 0x000A:word16] = dx_190
	Mem199[ss:bp_169 + 0x0008:word16] = ax_195
	branch (ax_195 | dx_190) != 0x0000 l0800_BB5E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5E:
	ptr32 es_bx_204 = Mem199[ss:bp_169 + 0x0004:segptr32]
	Mem0[es_bx_204 + 0x0002:word16] = Mem0[es_bx_204 + 0x0002:word16] | 0x0004
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB6B:
	ptr32 es_bx_171 = Mem157[ss:bp_169 + 0x0004:segptr32]
	word16 ax_174 = Mem157[ss:bp_169 + 0x000A:word16]
	word16 dx_175 = Mem157[ss:bp_169 + 0x0008:word16]
	Mem0[es_bx_171 + 0x000E:word16] = ax_174
	Mem0[es_bx_171 + 0x000C:word16] = dx_175
	Mem0[es_bx_171 + 0x000A:word16] = ax_174
	Mem0[es_bx_171 + 0x0008:word16] = dx_175
	Mem0[es_bx_171 + 0x0006:word16] = si_153
	branch di_14 != 0x0001 l0800_BB92
// DataOut: bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB8D:
	Mem0[es_bx_171 + 0x0002:word16] = Mem0[es_bx_171 + 0x0002:word16] | 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB92:
	ax_150 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5B:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BAAB:
	ax_150 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB94:
	return ax_150
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_BA89_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_BC49(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, segptr32 ptrArg0A, word16 wArg0C, segptr32 ptrArg0E, word16 wArg10, segptr32 ptrArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut: sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BC49_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC49:
	branch (wArg06 | wArg08) == 0x0000 l0800_BC62
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC5B:
	Mem185[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC62:
	branch (wArg0A | wArg0C) == 0x0000 l0800_BC71
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(32) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC6A:
	Mem180[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC71:
	branch (wArg0E | wArg10) == 0x0000 l0800_BC80
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(32) Stack +0012(16) Stack +0014(16)

l0800_BC79:
	Mem175[SLICE(ptrArg0E, selector, 16):(word16) ptrArg0E:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(16) Stack +0014(16)

l0800_BC80:
	branch (wArg12 | wArg14) == 0x0000 l0800_BC8F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(32)

l0800_BC88:
	Mem170[SLICE(ptrArg12, selector, 16):(word16) ptrArg12:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC8F:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9D:
	word16 bx_67 = (word16) ptrArg02
	branch Mem0[SLICE(ptrArg02, selector, 16):bx_67:byte] == 0x20 l0800_BC9A
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9A:
	wArg02 = wArg02 + 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BCA6:
	segptr32 ptrLoc62_78 = DPB(ptrLoc62, bx_67, 0)
	word16 ax_79 = fn0800_BFC7(ptrLoc62_78, wArg04)
	word16 si_162 = ax_79
	branch ax_79 <= 0x0050 l0800_BCB9
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB6:
	si_162 = 0x0050
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB9:
	Mem92[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = 0x00
	segptr32 ptrLoc64_103 = DPB(ptrLoc64, wArg02, 0)
	segptr32 ptrLoc68_109 = DPB(ptrLoc68, fp - 0x0059, 0)
	fn0800_C01E(ptrLoc68_109, ss, ptrLoc64_103, si_162)
	word16 v18_111 = fp - 0x0059 + si_162
	segptr32 ptrLoc06_113 = DPB(ptrLoc06, v18_111, 0)
	Mem117[SLICE(ptrLoc06_113, selector, 16):v18_111:byte] = 0x00
	word16 wLoc06_112 = v18_111
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)

l0800_BCE2:
	word16 v19_125 = wLoc06_112 - 0x0001
	ptrLoc06_113 = DPB(ptrLoc06_113, v19_125, 0) (alias)
	selector es_131 = SLICE(ptrLoc06_113, selector, 16)
	byte al_132 = Mem117[es_131:v19_125:byte]
	wLoc06_112 = v19_125
	byte SZO_128 = cond(v19_125)
	word16 ax_133 = (int16) al_132
	word16 cx_135 = 0x0007
	word16 bx_136 = 0xBE1F
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BCF5:
	word16 ax_141 = Mem117[0x0800:bx_136:word16]
	byte SCZO_142 = cond(ax_141 - ax_133)
	branch ax_141 == ax_133 l0800_BD04
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD04:
	call Mem117[0x0800:bx_136 + 0x000E:word16] (retsize: 4; depth: 98)
		uses: 0x0000,0x0000,al_132,ax_133,ax_141,bp,bx_138,cx_140,di,es_131,false,fp - 0x0002,fp - 0x0059,fp - 0x005E,ptrLoc06_127,ptrLoc62_78,ptrLoc64_103,ptrLoc68_109,SCZO_142,SCZO_142,si,si_87,ss,ss,ss,SZO_128,v19_125,wArg02_63,wArg04
		defs: al_161,ax_156,bp_149,bx_158,C_155,cx_160,di_153,es_159,SCZO_151,si_152,sp_148,ss_150,SZO_154,Z_157
	return
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

fn0800_BC49_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

l0800_BCFD:
	bx_136 = bx_136 + 0x0002
	cx_135 = cx_135 - 0x0001
	branch cx_135 != 0x0000 l0800_BCF5
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD02:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)



void fn0800_BE3B(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, word16 wArg10, word16 wArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BE3B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BE3B:
	fn0800_BC49(DPB(ptrLoc16, wArg02, 0), wArg04, DPB(ptrLoc12, wArg06, 0), wArg08, DPB(ptrLoc0E, wArg0A, 0), wArg0C, DPB(ptrLoc0A, wArg0E, 0), wArg10, DPB(ptrLoc06, wArg12, 0), wArg14)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BE3B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> al:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_BEA2(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_BEA2_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_BEA2:
	Mem11[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] = 0x00
	word16 di_33
	return fn0800_9828(ds, DPB(ptrLoc0C, wArg06, 0), wArg08, out di_33)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BEA2_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -14(fp):fp + 0x000A -12(fp):<invalid> -10(fp):<invalid> -8(fp):fp + 0x0002 -6(fp):ss -4(fp):0xBE64 -2(fp):bp



void fn0800_BF5F(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds es si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF5F_entry:
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF5F:
	word16 di_117 = (word16) ptrArg02
	selector es_20 = SLICE(ptrArg02, selector, 16)
	word16 cx_119 = 0xFFFF
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70:
	branch cx_119 == 0x0000 l0800_BF72
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70_1:
	di_117 = di_117 + 0x0001
	cx_119 = cx_119 - 0x0001
	branch 0x00 != Mem0[es_20:di_117:byte] l0800_BF70
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF72:
	word16 si_38 = di_117 - 0x0001
	word16 di_112 = (word16) ptrArg06
	selector es_42 = SLICE(ptrArg06, selector, 16)
	word16 cx_114 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C:
	branch cx_114 == 0x0000 l0800_BF7E
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C_2:
	di_112 = di_112 + 0x0001
	cx_114 = cx_114 - 0x0001
	branch 0x00 != Mem0[es_42:di_112:byte] l0800_BF7C
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7E:
	word16 cx_108 = ~cx_114
	word16 di_53 = di_112 - cx_108
	word16 di_106 = si_38
	word16 si_105 = di_53
	branch (di_53 & 0x0001) == 0x0000 l0800_BF8F
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8D:
	Mem104[es_20:si_38:byte] = Mem0[es_42:di_53:byte]
	si_105 = di_53 + 0x0001
	di_106 = si_38 + 0x0001
	cx_108 = cx_108 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8F:
	word16 cx_71 = cx_108 >>u 0x0001
	cx_79 = cx_71
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF91:
	word16 cx_79
	branch cx_79 == 0x0000 l0800_BF93
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF93:
	branch cx_71 >=u 0x0000 l0800_BF96
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF95:
	Mem100[es_20:di_106:byte] = Mem0[es_42:si_105:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF96:
	return
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF5F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> dx:es al:<invalid> cx:<invalid> di:di si:si ds:ds es:es ax:di -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BF91_1:
	Mem82[es_20:di_106:word16] = Mem0[es_42:si_105:word16]
	si_105 = si_105 + 0x0002
	di_106 = di_106 + 0x0002
	cx_79 = cx_79 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)



void fn0800_BF9E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF9E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF9E:
	word16 di_16 = (word16) ptrArg06
	selector es_17 = SLICE(ptrArg06, selector, 16)
	word16 si_18 = di_16
	word16 cx_22 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE:
	branch cx_22 == 0x0000 l0800_BFB0
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE_1:
	di_16 = di_71 + 0x0001
	cx_22 = cx_22 - 0x0001
	di_71 = di_16
	branch 0x00 != Mem0[es_17:di_71:byte] l0800_BFAE
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFB0:
	word16 cx_33 = ~cx_22
	word16 di_41 = (word16) ptrArg02
	selector es_42 = SLICE(ptrArg02, selector, 16)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBA:
	branch cx_33 == 0x0000 l0800_BFBC
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBC:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF9E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> cx:<invalid> di:di ax:<invalid> ds:ds dx:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BFBA_2:
	Mem49[es_42:di_41:byte] = Mem0[es_17:si_18:byte]
	si_18 = si_18 + 0x0001
	di_41 = di_41 + 0x0001
	cx_33 = cx_33 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_BFC7(segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_BFC7_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_BFC7:
	word16 di_12 = (word16) ptrArg02
	selector es_13 = SLICE(ptrArg02, selector, 16)
	word16 ax_14 = 0x0000
	branch 0x0000 != wArg04 l0800_BFD9
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BFD5:
	branch 0x0000 == di_12 l0800_BFE3
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFD9:
	word16 cx_34 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD:
	branch cx_34 == 0x0000 l0800_BFDF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD_1:
	di_12 = di_63 + 0x0001
	cx_34 = cx_34 - 0x0001
	di_63 = di_12
	branch 0x00 != Mem0[es_13:di_63:byte] l0800_BFDD
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDF:
	ax_14 = ~cx_34 - 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFE3:
	return ax_14
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:0x0000 di:<invalid> -4(fp):di -2(fp):bp

fn0800_BFC7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> di:di cx:0x0000 -4(fp):di -2(fp):bp



word16 fn0800_BFE6(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_BFE6_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_BFE6:
	word16 di_18 = (word16) ptrArg06
	selector es_19 = SLICE(ptrArg06, selector, 16)
	word16 ax_23 = wArg0A
	word16 cx_111 = wArg0A
	branch wArg0A == 0x0000 l0800_C018
// DataOut: ax cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFA:
	di_109 = di_18
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE:
	word16 di_109
	branch cx_111 == 0x0000 l0800_C000
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE_1:
	di_109 = di_112 + 0x0001
	cx_111 = cx_111 - 0x0001
	di_112 = di_109
	branch 0x00 != Mem0[es_19:di_112:byte] l0800_BFFE
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C000:
	word16 bx_67 = wArg0A - cx_111
	word16 cx_106 = bx_67
	word16 di_104 = di_18
	selector ds_74 = SLICE(ptrArg02, selector, 16)
	word16 si_102 = (word16) ptrArg02
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009:
	branch cx_106 == 0x0000 l0800_C00B
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009_2:
	si_102 = si_114 + 0x0001
	di_104 = di_113 + 0x0001
	cx_106 = cx_106 - 0x0001
	di_113 = di_104
	si_114 = si_102
	branch Mem0[ds_74:si_114:byte] != Mem0[es_19:di_113:byte] l0800_C009
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C00B:
	ax_23 = DPB(wArg0A, 0x00, 8) - DPB(bx_67, 0x00, 8)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C018:
	return ax_23
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> di:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp

fn0800_BFE6_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:ds Sequence es:di:<invalid> si:si ax:<invalid> cx:<invalid> ds:ds di:di bx:<invalid> al:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp



void fn0800_C01E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_C01E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_C01E:
	word16 di_16 = (word16) ptrArg06
	selector es_17 = SLICE(ptrArg06, selector, 16)
	word16 si_18 = di_16
	word16 cx_24 = wArg0A
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030:
	branch cx_24 == 0x0000 l0800_C032
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030_1:
	di_16 = di_84 + 0x0001
	cx_24 = cx_24 - 0x0001
	di_84 = di_16
	branch 0x00 != Mem0[es_17:di_84:byte] l0800_C030
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C032:
	word16 di_43 = (word16) ptrArg02
	selector es_44 = SLICE(ptrArg02, selector, 16)
	word16 cx_47 = wArg0A - cx_24
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E:
	branch cx_47 == 0x0000 l0800_C040
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C040:
	word16 cx_59 = cx_24
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C042:
	branch cx_59 == 0x0000 l0800_C044
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C044:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_C01E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> bx:<invalid> cx:<invalid> di:di ds:ds dx:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_C042_1:
	Mem63[es_44:di_43:byte] = 0x00
	di_43 = di_43 + 0x0001
	cx_59 = cx_59 - 0x0001
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E_2:
	Mem54[es_44:di_43:byte] = Mem0[es_17:si_18:byte]
	si_18 = si_18 + 0x0001
	di_43 = di_43 + 0x0001
	cx_47 = cx_47 - 0x0001
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_C04F(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax di ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_C04F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_C04F:
	selector ds_9
	*diOut = fn0800_C379(ds, out ds_9)
	word16 si_26 = Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16]
	int32 dx_ax_33 = (int32) (si_26 + 0xF844 >> 0x0002)
	int32 dx_ax_60 = (int32) (si_26 + 0xF844 & 0x0003)
	word16 dx_46
	word16 dx_73
	word16 wLoc06_285 = (word16) (SEQ(Mem0[ds_9:0x26E4:word16], Mem0[ds_9:0x26E2:word16] + 0xA600) + 0x12CEA600) + fn0800_8F18(0x1F80, SLICE(dx_ax_33, word16, 16), 0x0786, (word16) dx_ax_33, out dx_46) + fn0800_8F18(0x3380, SLICE(dx_ax_60, word16, 16), 0x01E1, (word16) dx_ax_60, out dx_73)
	branch (si_26 + 0xF844 & 0x0003) == 0x0000 l0800_C0B9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0B0:
	wLoc06_285 = v22
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0B9:
	word16 cx_104 = 0x0000
	word16 si_102 = (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0003:byte] - 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0D0:
	branch si_102 > 0x0000 l0800_C0C8
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0C8:
	si_102 = si_102 - 0x0001
	cx_104 = cx_104 + (int16) Mem0[ds_9:si_102 + 0x26B4:byte]
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0D4:
	word16 bx_113 = (word16) ptrArg02
	selector es_114 = SLICE(ptrArg02, selector, 16)
	word16 ax_118 = (int16) Mem0[es_114:bx_113 + 0x0002:byte]
	word16 cx_120 = cx_104 + (ax_118 - 0x0001)
	branch Mem0[es_114:bx_113 + 0x0003:byte] <= 0x02 l0800_C0EE
// DataOut: bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0E6:
	branch (Mem0[es_114:bx_113:word16] & 0x0003) != 0x0000 l0800_C0EE
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0ED:
	cx_120 = cx_120 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0EE:
	word16 ax_136 = DPB(ax_118 - 0x0001, 0x00, 8)
	word16 ax_145 = (word16) (cx_120 *s 0x0018) + ax_136
	branch Mem0[ds_9:0x26E6:word16] == 0x0000 l0800_C128
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C10B:
	word16 ax_264 = fn0800_C553(ds_9, Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16] + 0xF84E, 0x0000, cx_120, (byte) DPB(ax_145, 0x00, 8))
	ax_145 = ax_264
	branch ax_264 == 0x0000 l0800_C128
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0006(32)

l0800_C127:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0006(32)

l0800_C128:
	word16 dx_168
	word16 ax_169 = fn0800_8F18(0x0E10, ax_136, 0x0000, ax_145, out dx_168)
	int32 dx_ax_184 = (int32) DPB(ax_169, 0x00, 8)
	int32 dx_ax_212 = (int32) DPB((word16) ptrArg06, 0x00, 8)
	word16 dx_199
	word16 cx_218 = fn0800_8F18(0x003C, SLICE(dx_ax_184, word16, 16), 0x0000, (word16) dx_ax_184, out dx_199) + (word16) dx_ax_212
	*dxOut = v31
	return wLoc06_285 + ax_169 + (word16) (SEQ(dx_199, cx_218) + dx_ax_212)
// DataOut: ax di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C04F_exit:
// DataOut: ax di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> es:<invalid> di:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_C379(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: di ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
fn0800_C379_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0012(16)

l0800_C379:
	segptr32 ptrLoc0C_142 = DPB(ptrLoc0C, 0x26E8, 0)
	word16 dx_20
	word16 ax_21 = fn0800_AFCB(ds, ptrLoc0C_142, out dx_20)
	branch (ax_21 | dx_20) != 0x0000 l0800_C397
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000E(16) Local -0012(16)

l0800_C397:
	ptrLoc0C_142 = DPB(ptrLoc0C, ax_21, 0) (alias)
	branch fn0800_BFC7(ptrLoc0C_142, dx_20) >=u 0x0004 l0800_C3AA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3AA:
	selector es_153 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[es_153:(word16) ptrLoc06:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3BD:
	branch ((int16) Mem0[ds:(int16) Mem0[es_153:ax_21 + 0x0001:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3D1:
	branch ((int16) Mem0[ds:(int16) Mem0[es_153:ax_21 + 0x0002:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3E5:
	branch Mem0[es_153:ax_21 + 0x0003:byte] == 0x2D l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3EF:
	branch Mem0[es_153:ax_21 + 0x0003:byte] == 0x2B l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3F6:
	branch (Mem0[ds:(int16) Mem0[es_153:ax_21 + 0x0003:byte] + 0x2251:byte] & 0x02) == 0x00 l0800_C42C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C404:
	selector es_192 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[es_192:(word16) ptrLoc06 + 0x0003:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C418:
	branch ((int16) Mem0[ds:(int16) Mem0[es_192:ax_21 + 0x0004:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C467:
	fn0800_B083(Mem0[ds:0x26DE:word16], Mem0[ds:0x26E0:word16], 0x00, 0x0004)
	fn0800_C01E(DPB(ptrLoc12, Mem0[ds:0x26DA:word16], 0), Mem0[ds:0x26DC:word16], DPB(ptrLoc0E, ax_21, 0), 0x0003)
	ptr32 es_bx_233 = Mem0[ds:0x26DA:segptr32]
	Mem0[es_bx_233 + 0x0003:byte] = 0x00
	word16 dx_246
	word16 ax_247 = fn0800_A471((byte) es_bx_233, ds, DPB(ptrLoc0C, ax_21 + 0x0003, 0), out dx_246)
	word16 dx_264
	word16 ax_265 = fn0800_8F18(0x0E10, dx_246, 0x0000, ax_247, out dx_264)
	Mem266[ds:0x26E4:word16] = dx_264
	Mem267[ds:0x26E2:word16] = ax_265
	Mem268[ds:0x26E6:word16] = 0x0000
	word16 si_269 = 0x0003
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C542:
	branch Mem268[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06 + si_269:byte] == 0x00 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C54B:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4CA:
	branch (Mem268[ds:(int16) Mem268[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06 + si_269:byte] + 0x2251:byte] & 0x0C) == 0x00 l0800_C541
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C541:
	si_269 = si_269 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4DA:
	branch fn0800_BFC7(DPB(ptrLoc0C, ax_21 + si_269, 0), dx_20) <u 0x0003 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_C4ED:
	selector es_306 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem268[ds:(int16) Mem268[es_306:(word16) ptrLoc06 + 0x0001 + si_269:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C501:
	branch ((int16) Mem268[ds:(int16) Mem268[es_306:ax_21 + 0x0002 + si_269:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C515:
	fn0800_C01E(DPB(ptrLoc12, Mem268[ds:0x26DE:word16], 0), Mem268[ds:0x26E0:word16], DPB(ptrLoc0E, ax_21 + si_269, 0), 0x0003)
	Mem0[Mem268[ds:0x26DE:segptr32] + 0x0003:byte] = 0x00
	Mem347[ds:0x26E6:word16] = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C3A7:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C394:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C42C:
	Mem70[ds:0x26E6:word16] = 0x0001
	Mem71[ds:0x26E4:word16] = 0x0000
	Mem72[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(DPB(ptrLoc10, Mem72[ds:0x26DA:word16], 0), Mem72[ds:0x26DC:word16], DPB(ptrLoc0C_142, 0x26EB, 0))
	fn0800_BF9E(DPB(ptrLoc10, Mem72[ds:0x26DE:word16], 0), Mem72[ds:0x26E0:word16], DPB(ptrLoc0C_142, 0x26EF, 0))
	Mem100[ds:0x26E6:word16] = 0x0001
	Mem101[ds:0x26E4:word16] = 0x0000
	Mem102[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(DPB(ptrLoc10, Mem102[ds:0x26DA:word16], 0), Mem102[ds:0x26DC:word16], DPB(ptrLoc0C_142, 0x26EB, 0))
	fn0800_BF9E(DPB(ptrLoc10, Mem102[ds:0x26DE:word16], 0), Mem102[ds:0x26E0:word16], DPB(ptrLoc0C_142, 0x26EF, 0))
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C54E:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C379_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_C553_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C553:
	branch wArg04 != 0x0000 l0800_C589
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C589:
	branch wArg04 <u 0x0003 l0800_C59A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(8)

l0800_C58F:
	branch (wArg02 + 0x0046 & 0x0003) == 0x0000 l0800_C59D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(8)

l0800_C59A:
	wArg06 = wArg06 - 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(8)

l0800_C59D:
	wArg06 = wArg06 + Mem0[ds:(wArg04 - 0x0001 << 0x0001) + 0x26C0:word16]
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C55D:
	word16 si_135 = wArg06
	branch wArg06 <u 0x003B l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C566:
	branch (wArg02 + 0x0046 & 0x0003) != 0x0000 l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C571:
	si_135 = wArg06 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C572:
	wArg04 = 0x0000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C57C:
	branch Mem0[ds:(wArg04 << 0x0001) + 0x26C0:word16] <=u si_135 l0800_C579
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C579:
	wArg04 = wArg04 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C587:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5AA:
	word16 ax_35
	branch wArg04 <u 0x0004 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B0:
	branch wArg04 == 0x0004 l0800_C5BA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B2:
	branch wArg04 >u 0x000A l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B8:
	branch wArg04 != 0x000A l0800_C626
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5BA:
	word16 cx_117
	word16 bx_67 = wArg04 << 0x0001
	branch wArg02 <= 0x0010 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5C5:
	branch wArg04 != 0x0004 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D4:
	cx_117 = Mem0[ds:bx_67 + 0x26C0:word16]
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5CB:
	cx_117 = Mem0[ds:bx_67 + 0x26BE:word16] + 0x0007
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D8:
	branch ((byte) (wArg02 + 0x07B2) & 0x03) == 0x00 l0800_C5E5
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E4:
	cx_117 = cx_117 - 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E5:
	word16 cx_97 = cx_117 - (uint32) ((uint16) (((wArg02 + 0x0001 >> 0x0002) + cx_117) + 0x0171)) % 0x0007
	branch wArg04 != 0x0004 l0800_C61A
// DataOut: ax cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61A:
	branch wArg06 <u cx_97 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61E:
	branch wArg06 != cx_97 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C620:
	branch bArg08 >u 0x01 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C60C:
	branch wArg06 >u cx_97 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C610:
	branch wArg06 != cx_97 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C612:
	branch bArg08 <u 0x02 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62B:
	ax_35 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C618:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C626:
	ax_35 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62D:
	return ax_35
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>

fn0800_C553_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> si:si cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>



word16 fn0800_C632(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_C632_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C632:
	word16 ax_122
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_C64E
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C64E:
	byte al_103 = (byte) (wArg08 + 0x0001)
	branch wArg08 >=u 0xFFFF l0800_C65C
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C65C:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_C677
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C668:
	word16 dx_369
	al_103 = (byte) fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x02, out dx_369) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C677:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_C696
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C696:
	Mem129[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 wLoc08_137 = wArg08
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C727:
	word16 wLoc06_163 = fp - 0x0090
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C731:
	branch wLoc08_137 == 0x0000 l0800_C73A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(32) Local -000E(32) Stack +0008(16)

l0800_C73A:
	word16 si_311 = wLoc06_163 - (fp - 0x0090)
	*dlOut = (byte) (0x0000 - (si_311 <u 0x0000))
	branch false l0800_C770
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C74E:
	byte dl_344
	word16 ax_345 = fn0800_C779((byte) (fp - 0x0090), ds, wArg02, DPB(ptrLoc9A, fp - 0x0090, 0), si_311, out dl_344)
	*dlOut = (byte) ax_345
	branch ax_345 == si_311 l0800_C770
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> Sequence es:bx:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C770:
	ax_122 = wArg08
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C762:
	branch ax_345 == 0xFFFF l0800_C71A
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C767:
// DataOut: ax dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C737:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(32) Local -000E(32) Stack +0008(16)

l0800_C6B4:
	wLoc08_137 = wLoc08_137 - 0x0001
	byte al_239 = Mem129[SLICE(ptrLoc0E, selector, 16):(word16) ptrLoc0E:byte]
	branch al_239 != 0x0A l0800_C6D1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(0) Local -0009(8) Local -000E(32) Stack +0008(16)

l0800_C6C7:
	Mem304[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = 0x0D
	wLoc06_163 = wLoc06_163 + 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(0) Local -0009(8) Local -000E(32) Stack +0008(16)

l0800_C6D1:
	Mem249[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = al_239
	word16 v23_250 = wLoc06_163 + 0x0001
	word16 dx_255 = v23_250 - (fp - 0x0090)
	wLoc06_163 = v23_250
	word16 bx_259 = 0x0000 - (dx_255 <u 0x0000)
	branch bx_259 < 0x0000 l0800_C731
// DataOut: di ds dx ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6EF:
	branch bx_259 != 0x0000 l0800_C6F7
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6F1:
	branch dx_255 <u 0x0080 l0800_C731
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6F7:
	word16 si_271 = v23_250 - (fp - 0x0090)
	ptrLoc9A = DPB(ptrLoc9A, fp - 0x0090, 0) (alias)
	byte dl_286
	word16 ax_287 = fn0800_C779((byte) (fp - 0x0090), ds, wArg02, ptrLoc9A, si_271, out dl_286)
	*dlOut = (byte) ax_287
	branch ax_287 == si_271 l0800_C727
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C715:
	branch ax_287 != 0xFFFF l0800_C71F
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0008(16)

l0800_C71F:
// DataOut: ax dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C76A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C71A:
	ax_122 = 0xFFFF
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C76E:
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:0xFFFF bx:<invalid> ah:0xFF al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C683:
	byte dl_121
	ax_122 = fn0800_C779(al_103, ds, wArg02, DPB(ptrLoc9A, wArg04, 0), wArg08, out dl_121)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C657:
	ax_122 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C644:
	ax_122 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C773:
	return ax_122
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

fn0800_C632_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> si:si bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp



word16 fn0800_C779(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_C779_entry:
	*dlOut = dl
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C779:
	word16 wLoc04_37
	word16 ax_24
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0001) == 0x0000 l0800_C78F
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C78F:
	dl_60 = (byte) ptrArg04 (alias)
	*dlOut = dl_60
	word16 ax_61
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_61) l0800_C7AF
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_C7AF:
	wLoc04_37 = ax_61
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7A0:
	Mem71[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x1000
	ax_24 = ax_61
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_C789:
	wLoc04_37 = 0x0005
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7B0:
	ax_24 = fn0800_8D2B(ds, wLoc04_37)
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 bx:<invalid> ax:0x0005 ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_C7B3:
	return ax_24
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_C779_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



