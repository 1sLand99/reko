byte fn0800_0150(ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ah bx dx
// Trashed: SCZO ah bx dx es Top
// Preserved: di si sp
fn0800_0150_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0150:
	word16 bx_16
	word16 dx_17
	byte ah_15 = fn0800_01E6(0x2714, 0x2714, Mem0[0x0800:0x025A:selector], out dx_17, out bx_16)
	dxOut = dx_17
	bxOut = bx_16
	return ah_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0150_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0163()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_0163_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0163:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0163_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0164(byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0800_0164_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0164_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0164:
	msdos_terminate(bArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0176(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15]
// LiveOut:
// Trashed: ax bx dx es Top
// Preserved: ds sp
fn0800_0176_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0176:
	word32 es_bx_10 = msdos_get_interrupt_vector(0x00)
	Mem12[ds:0x005B:word16] = SLICE(es_bx_10, word16, 0)
	Mem14[ds:0x005D:word16] = SLICE(es_bx_10, selector, 16)
	word32 es_bx_17 = msdos_get_interrupt_vector(0x04)
	Mem19[ds:0x005F:word16] = SLICE(es_bx_17, word16, 0)
	Mem21[ds:0x0061:word16] = SLICE(es_bx_17, selector, 16)
	word32 es_bx_24 = msdos_get_interrupt_vector(0x05)
	Mem26[ds:0x0063:word16] = SLICE(es_bx_24, word16, 0)
	Mem28[ds:0x0065:word16] = SLICE(es_bx_24, selector, 16)
	word32 es_bx_31 = msdos_get_interrupt_vector(0x06)
	Mem33[ds:0x0067:word16] = SLICE(es_bx_31, word16, 0)
	Mem35[ds:0x0069:word16] = SLICE(es_bx_31, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x016D))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0176_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_01B9(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: ax dx
// Trashed: ax dx Top
// Preserved: ds sp
fn0800_01B9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01B9:
	msdos_set_interrupt_vector(0x00, Mem7[ds:0x005B:segptr32])
	msdos_set_interrupt_vector(0x04, Mem16[ds:0x005F:segptr32])
	msdos_set_interrupt_vector(0x05, Mem25[ds:0x0063:segptr32])
	ptr32 ds_dx_36 = Mem34[ds:0x0067:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_36)
	dxOut = SLICE(ds_dx_36, word16, 0)
	return 0x2506
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01B9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_01E6(word16 si, word16 di, selector es, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15] si:[0..15]
// LiveOut: ah bx dx
// Trashed: SCZO ah bx dx Top
// Preserved: es sp
fn0800_01E6_entry:
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01E6:
	byte ah_35
	branch si == 0x26FC l0800_01F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F0:
	ah_35 = 0xFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01EC:
	ah_35 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F2:
	word16 dx_13 = di
	word16 bx_15 = si
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F6:
	branch bx_15 == di l0800_021D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_021D:
	branch dx_13 == di l0800_023C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_023C:
	dxOut = dx_13
	bxOut = bx_15
	return ah_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0221:
	Mem27[es:dx_13:byte] = 0xFF
	branch Mem80[es:dx_13:byte] == 0x00 l0800_0235
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0235:
	call SEQ(0x0800, Mem31[es:dx_13 + 0x0002:word16]) (retsize: 2;)
		uses: ah:ah_35,bx:dx_20,dx:dx_20,sp:fp - 2,Stack +0002:es,Top:Top_98
		defs: Top:Top_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_022E:
	call Mem31[es:dx_13 + 0x0002:ptr32] (retsize: 4;)
		uses: ah:ah_35,bx:dx_20,dx:dx_20,sp:fp - 2,Stack +0004:es,Top:Top_98
		defs: Top:Top_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01FA:
	branch Mem80[es:bx_15:byte] == 0xFF l0800_0218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0200:
	byte CZ_58
	branch si == 0x26FC l0800_020C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_020C:
	CZ_58 = SLICE(cond(Mem80[es:bx_15 + 0x0001:byte] - ah_35), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0206:
	CZ_58 = SLICE(cond(ah_35 - Mem80[es:bx_15 + 0x0001:byte]), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0210:
	branch CZ_58 l0800_0218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0212:
	ah_35 = Mem80[es:bx_15 + 0x0001:byte]
	dx_13 = bx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0218:
	bx_15 = bx_15 + 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_023D(char * ds_dx, word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Sequence ds:dx:[0..31]
// LiveOut:
// Trashed: C ax bx Top
// Preserved: sp
fn0800_023D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_023D:
	word16 ax_10
	msdos_write_file(0x0002, cx, ds_dx, out ax_10)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_023D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void main(word16 edx_16_16, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] edx_16_16:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds edx es si sp Top
// Preserved: P
main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_025E:
	Mem15[ds:0x2A27:word16] = 0x0001
	Mem16[ds:0x2E4D:word16] = 0x0000
	Mem17[ds:0x2A1F:word16] = 0x0000
	Mem18[ds:0x2E4F:word16] = 0x0000
	Mem19[ds:0x2A1D:word16] = 0x0000
	Mem20[ds:0x2A17:word16] = 0x0000
	Mem21[ds:0x2A1B:word16] = 0x0000
	Mem22[ds:0x2A11:word16] = 0x0000
	Mem23[ds:0x2A0F:word16] = 0x0000
	Mem24[ds:0x2A0D:word16] = 0x0000
	Mem25[ds:0x2A0B:word16] = 0x3000
	Mem26[ds:0x2E31:word16] = 0x8000
	Mem27[ds:0x2E2F:word16] = 0x1000
	Mem28[ds:0x2A21:word16] = 0x0001
	Mem29[ds:0x29F5:word16] = 0x0000
	Mem30[ds:0x29F3:word16] = 0x0000
	Mem31[ds:0x29F1:word16] = 0x0000
	Mem32[ds:0x29EF:word16] = 0x0000
	Mem33[ds:0x2A13:word16] = 0x0000
	Mem34[ds:0x2A23:word16] = 0x0001
	word16 bx_36
	word16 dx_38
	word16 cx_37 = fn0800_2C9A(ds, out dx_38, out bx_36)
	word16 di_54
	word16 si_460
	fn0800_B2EF(cx_37, dx_38, bx_36, ds, SEQ(ds, 0x07E8), out si_460, out di_54)
	word16 sp_84 = <invalid>
	word16 dx_66
	selector ds_129
	word16 bp_125
	word16 dx_112 = SLICE((uint32) (uint16) fn0800_0541(fn0800_0402(cx_37, dx_38, bx_36, ds, out dx_66), SEQ(edx_16_16, dx_66), di_54, ds, out bp_125, out ds_129), word16, 0)
	Mem91[ss:sp_84 - 2:word16] = 0x0001
	Mem93[ss:sp_84 - 4:word16] = 0x0001
	fn0800_2DBF(ds_129, Mem93[ss:sp_84 - 4:word16], Mem93[ss:sp_84 - 2:word16])
	Mem100[ss:sp_84 - 2:word16] = 0x0000
	Mem102[ss:sp_84 - 4:word16] = 0x0000
	word16 cx_104 = fn0800_9764(ds_129, Mem102[ss:sp_84 - 4:segptr32])
	Mem113[ss:bp_125 - 0x0002:word16] = dx_112
	Mem114[ss:bp_125 - 0x0004:word16] = 0x0000
	word16 sp_111 = sp_84
	word16 bx_115 = Mem114[ds_129:0x2A25:word16]
	branch bx_115 >u 0x0008 l0800_0338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_031A:
	switch (bx_115 << 0x0001) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0335:
	dx_112 = fn0800_19EE(cx_104, dx_112, ds_129, out bp_125, out ds_129)
	sp_111 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_032B:
	dx_112 = fn0800_18D9(cx_104, dx_112, ds_129, out bp_125, out ds_129)
	sp_111 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0326:
	dx_112 = fn0800_12E2(cx_104, dx_112, ds_129, out bp_125, out ds_129)
	sp_111 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0330:
	dx_112 = fn0800_112D(cx_104, dx_112, bp_125, ds_129, out ds_129)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0321:
	dx_112 = fn0800_0DE8(cx_104, dx_112, bp_125, ds_129, out ds_129)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0338:
	word16 sp_216 = sp_111 - 2
	Mem218[ss:sp_216:word16] = 0x0000
	Mem220[ss:sp_216 - 2:word16] = 0x0000
	fn0800_9764(ds_129, Mem220[ss:sp_216 - 2:segptr32])
	word16 ax_232 = 0x0000 - Mem220[ss:bp_125 - 0x0004:word16]
	Mem238[ss:bp_125 - 0x0002:word16] = dx_112 - Mem220[ss:bp_125 - 0x0002:word16] - (ax_232 <u 0x0000)
	Mem239[ss:bp_125 - 0x0004:word16] = ax_232
	Mem242[ss:sp_216:word16] = Mem239[ds_129:0x29F1:word16]
	Mem245[ss:sp_216 - 2:word16] = Mem242[ds_129:0x29EF:word16]
	Mem248[ss:sp_216 - 4:word16] = Mem245[ds_129:0x29F5:word16]
	Mem251[ss:sp_216 - 6:word16] = Mem248[ds_129:0x29F3:word16]
	word16 ax_252 = fn0800_0B79(Mem251[ss:sp_216 - 6:word32], Mem251[ss:sp_216 - 2:ui32])
	Mem267[ss:sp_216:word16] = 0x0000
	Mem269[ss:sp_216 - 2:word16] = 0x003C
	Mem272[ss:sp_216 - 4:word16] = Mem269[ss:bp_125 - 0x0002:word16]
	Mem275[ss:sp_216 - 6:word16] = Mem272[ss:bp_125 - 0x0004:word16]
	word16 dx_279
	word16 ax_276 = fn0800_8BCA(Mem275[ss:sp_216 - 6:word32], Mem275[ss:sp_216 - 2:word16], Mem275[ss:sp_216:word16], out dx_279)
	word16 sp_280 = <invalid>
	Mem286[ss:sp_280 - 2:word16] = dx_279
	Mem288[ss:sp_280 - 4:word16] = ax_276
	Mem294[ss:sp_280 - 6:word16] = 0x0000
	Mem296[ss:sp_280 - 8:word16] = 0x003C
	Mem299[ss:sp_280 - 10:word16] = 0x0000
	Mem301[ss:sp_280 - 12:word16] = 0x0E10
	Mem304[ss:sp_280 - 14:word16] = Mem301[ss:bp_125 - 0x0002:word16]
	Mem307[ss:sp_280 - 16:word16] = Mem304[ss:bp_125 - 0x0004:word16]
	word16 dx_311
	word16 ax_308 = fn0800_8BCA(Mem307[ss:sp_280 - 16:word32], Mem307[ss:sp_280 - 12:word16], Mem307[ss:sp_280 - 10:word16], out dx_311)
	word16 sp_312 = <invalid>
	Mem318[ss:sp_312 - 2:word16] = dx_311
	Mem320[ss:sp_312 - 4:word16] = ax_308
	word16 cx_461
	word16 bx_462
	word16 dx_324
	word16 ax_321 = fn0800_8BBB(Mem320[ss:sp_312 - 4:word32], Mem320[ss:sp_312:word16], Mem320[ss:sp_312 + 2:word16], out cx_461, out dx_324, out bx_462)
	word16 sp_325 = <invalid>
	Mem331[ss:sp_325 - 2:word16] = dx_324
	Mem333[ss:sp_325 - 4:word16] = ax_321
	Mem339[ss:sp_325 - 6:word16] = 0x0000
	Mem341[ss:sp_325 - 8:word16] = 0x0E10
	Mem344[ss:sp_325 - 10:word16] = 0x0000
	Mem346[ss:sp_325 - 12:word16] = 0x5180
	Mem349[ss:sp_325 - 14:word16] = Mem346[ss:bp_125 - 0x0002:word16]
	Mem352[ss:sp_325 - 16:word16] = Mem349[ss:bp_125 - 0x0004:word16]
	word16 dx_356
	word16 ax_353 = fn0800_8BCA(Mem352[ss:sp_325 - 16:word32], Mem352[ss:sp_325 - 12:word16], Mem352[ss:sp_325 - 10:word16], out dx_356)
	word16 sp_357 = <invalid>
	Mem363[ss:sp_357 - 2:word16] = dx_356
	Mem365[ss:sp_357 - 4:word16] = ax_353
	word16 bx_463
	word16 cx_368
	word16 dx_369
	word16 ax_366 = fn0800_8BBB(Mem365[ss:sp_357 - 4:word32], Mem365[ss:sp_357:word16], Mem365[ss:sp_357 + 2:word16], out cx_368, out dx_369, out bx_463)
	word16 sp_370 = <invalid>
	Mem376[ss:sp_370 - 2:word16] = dx_369
	Mem378[ss:sp_370 - 4:word16] = ax_366
	Mem387[ss:sp_370 - 6:word16] = (uint16) ((uint32) (uint16) ax_252 % 0x0064)
	word32 dx_ax_390 = (uint32) (uint16) ax_252
	Mem396[ss:sp_370 - 8:word16] = (uint16) (dx_ax_390 /u 0x0064)
	Mem399[ss:sp_370 - 10:word16] = Mem396[ds_129:0x29F1:word16]
	Mem402[ss:sp_370 - 12:word16] = Mem399[ds_129:0x29EF:word16]
	Mem405[ss:sp_370 - 14:word16] = Mem402[ds_129:0x29F5:word16]
	Mem408[ss:sp_370 - 16:word16] = Mem405[ds_129:0x29F3:word16]
	Mem410[ss:sp_370 - 18:word16] = ds_129
	Mem413[ss:sp_370 - 20:word16] = 0x05DC
	Mem416[ss:sp_370 - 22:word16] = 0x0008
	Mem419[ss:sp_370 - 24:word16] = Mem416[ds_129:0x2A13:word16]
	Mem421[ss:sp_370 - 26:word16] = ds_129
	Mem424[ss:sp_370 - 28:word16] = 0x07EB
	word16 si_464
	word16 di_465
	fn0800_B2EF(cx_368, (uint16) (dx_ax_390 % 0x0064), 0x0064, ds_129, Mem424[ss:sp_370 - 28:word32], out si_464, out di_465)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0402(word16 cx, word16 dx, word16 bx, selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: cx dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di ds si sp
fn0800_0402_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0402:
	branch Mem10[ds:0x2A27:word16] != Mem10[ds:0x269A:word16] l0800_0410
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_040D:
	word16 di_612
	fn0800_0DCE(cx, dx, bx, ds, out di_612)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0410:
	ptr32 es_bx_32 = Mem10[ds:0x269C:segptr32]
	selector es_36 = SLICE(es_bx_32, selector, 16)
	word16 bx_34 = SLICE(es_bx_32, word16, 0) + (Mem10[ds:0x2A27:word16] << 0x0002)
	byte ch_169 = SLICE(cx_46, byte, 8)
	word16 cx_46
	branch fn0800_BFC7(SEQ(Mem10[es_36:bx_34 + 0x0002:word16], Mem41[es_36:bx_34:word16]), out cx_46) <=u 0x0001 l0800_044D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_042F:
	ptr32 es_bx_59 = Mem44[ds:0x269C:segptr32]
	selector es_63 = SLICE(es_bx_59, selector, 16)
	word16 bx_61 = SLICE(es_bx_59, word16, 0) + (Mem44[ds:0x2A27:word16] << 0x0002)
	word16 cx_75
	word16 dx_613
	selector es_617
	word16 bx_614
	word16 si_615
	word16 di_616
	fn0800_0D24(ds, 0x0001, SEQ(Mem44[es_63:bx_61 + 0x0002:word16], Mem66[es_63:bx_61:word16]), out cx_75, out dx_613, out bx_614, out si_615, out di_616, out es_617, out ds)
	ch_169 = SLICE(cx_75, byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_044D:
	byte cl_114
	selector es_116
	word16 bx_113
	word16 dx_115
	word16 ax_112 = fn0800_0C29(ds, SEQ(ds, 0x0829), Mem89[Mem89[ds:Mem89[ds:0x269C:word16] + (Mem89[ds:0x2A27:word16] << 0x0002):segptr32]:byte], out cl_114, out dx_115, out bx_113, out es_116)
	Mem122[ds:0x2A25:word16] = ax_112
	word16 cx_144 = SEQ(ch_169, cl_114)
	branch ax_112 < 0x0009 l0800_0492
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0474:
	ptr32 es_bx_128 = Mem122[ds:0x269C:segptr32]
	selector es_132 = SLICE(es_bx_128, selector, 16)
	word16 bx_130 = SLICE(es_bx_128, word16, 0) + (Mem122[ds:0x2A27:word16] << 0x0002)
	word16 si_618
	word16 di_619
	selector es_620
	fn0800_0D24(ds, 0x0001, SEQ(Mem122[es_132:bx_130 + 0x0002:word16], Mem135[es_132:bx_130:word16]), out cx_144, out dx_115, out bx_113, out si_618, out di_619, out es_620, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0492:
	Mem160[ds:0x2A27:word16] = Mem158[ds:0x2A27:word16] + 0x0001
	branch Mem160[ds:0x2A25:word16] > 0x0002 l0800_04A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04A0:
	branch Mem160[ds:0x2A27:word16] != Mem160[ds:0x269A:word16] l0800_04AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04A9:
	word16 di_621
	fn0800_0DCE(cx_144, dx_115, bx_113, ds, out di_621)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04AC:
	word16 ax_185 = Mem160[ds:0x2A27:word16]
	Mem187[ds:0x2A27:word16] = Mem160[ds:0x2A27:word16] + 0x0001
	ptr32 es_bx_190 = Mem187[ds:0x269C:segptr32]
	selector es_194 = SLICE(es_bx_190, selector, 16)
	word16 bx_192 = SLICE(es_bx_190, word16, 0) + (ax_185 << 0x0002)
	fn0800_BF9E(SEQ(ds, 0x4348), SEQ(Mem187[es_194:bx_192 + 0x0002:word16], Mem200[es_194:bx_192:word16]))
	dx_115 = fn0800_0C6C(ds, SEQ(ds, 0x4348))
	word16 di_238 = 0x4348
	word16 cx_242 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E4:
	branch cx_242 == 0x0000 l0800_04E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E4_1:
	di_238 = di_238 + 0x0001
	cx_242 = cx_242 - 0x0001
	branch Mem235[ds:di_238:byte] == 0x00 l0800_04E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E6:
	word16 di_256 = di_238 - 0x0001
	word16 cx_253 = ~cx_242
	bool Z_267 = SLICE(cond(di_256), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04ED:
	branch cx_253 == 0x0000 l0800_04EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04ED_2:
	Z_267 = SLICE(cond(0x2E - Mem235[ds:di_256:byte]), bool, 2) (alias)
	di_256 = di_256 - 0x0001
	cx_253 = cx_253 - 0x0001
	branch Mem235[ds:di_256:byte] == 0x2E l0800_04ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04EF:
	branch Z_267 l0800_04F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F1:
	di_256 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F8:
	word16 di_278 = di_256 + 0x0001
	word16 di_304 = 0x4348
	word16 cx_308 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0507:
	branch cx_308 == 0x0000 l0800_0509
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0507_1:
	di_304 = di_304 + 0x0001
	cx_308 = cx_308 - 0x0001
	branch Mem303[ds:di_304:byte] == 0x00 l0800_0507
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0509:
	cx_144 = ~cx_308
	word16 di_322 = di_304 - cx_144
	bool Z_332 = SLICE(cond(di_322), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0510:
	branch cx_144 == 0x0000 l0800_0512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0510_2:
	Z_332 = SLICE(cond(0x5C - Mem303[ds:di_322:byte]), bool, 2) (alias)
	di_322 = di_322 + 0x0001
	cx_144 = cx_144 - 0x0001
	branch Mem303[ds:di_322:byte] == 0x5C l0800_0510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0512:
	branch Z_332 l0800_051B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0514:
	di_322 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_051B:
	branch di_278 >u di_322 - 0x0001 l0800_0538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0523:
	word16 di_369 = 0x4348
	word16 si_370 = 0x0833
	word16 cx_371 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0530:
	branch cx_371 == 0x0000 l0800_0532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0530_1:
	di_369 = di_369 + 0x0001
	cx_371 = cx_371 - 0x0001
	branch Mem366[ds:di_369:byte] == 0x00 l0800_0530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0532:
	word16 di_385 = di_369 - 0x0001
	cx_144 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0536:
	branch cx_144 == 0x0000 l0800_0538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0538:
	Mem391[ds:0x2A19:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0536_2:
	Mem397[ds:di_385:byte] = Mem393[ds:si_370:byte]
	si_370 = si_370 + 0x0001
	di_385 = di_385 + 0x0001
	cx_144 = cx_144 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_049D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_053E:
	dxOut = dx_115
	return cx_144
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0402_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0541(byte ch, word32 edx, word16 di, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[8..15] di:[0..15] ds:[0..15] edx:[16..31] ss:[0..15]
// LiveOut: bp ds edx sp
// Trashed: SCZO ax bp bx cx di ds edx es si sp Top
// Preserved: D
fn0800_0541_entry:
	byte ch = SLICE(cx, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0541:
	word16 bp_1184 = fp - 2
	word16 ax_17 = Mem15[ds:0x2A27:word16]
	word32 edx_1656 = edx
	branch ax_17 != Mem15[ds:0x269A:word16] l0800_0555
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0555:
	segptr32 ptrLoc06_1792
	branch Mem15[Mem15[ds:Mem15[ds:0x269C:word16] + (ax_17 << 0x0002):segptr32]:byte] != 0x2D l0800_056B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_056B:
	branch Mem15[Mem15[ds:Mem15[ds:0x269C:word16] + (Mem15[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0584:
	bpOut = bp
	dsOut = ds
	return (word16) edx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0581:
	ptrLoc06_1792 = ptrLoc06 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0568:
	ptrLoc06_1792 = ptrLoc06 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_086D:
	word16 edx_16_16_581 = SLICE(edx, word16, 16)
	branch Mem48[Mem48[ds:Mem48[ds:0x269C:word16] + (Mem48[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2D l0800_0886
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0886:
	edx_1656 = edx (alias)
	branch Mem48[Mem48[ds:Mem48[ds:0x269C:word16] + (Mem48[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_089F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_089F:
	word16 ax_71 = Mem48[ds:0x2A21:word16]
	branch ax_71 == 0x0001 l0800_08AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08AE:
	word16 di_1819 = 0x4271
	word16 si_107 = 0x085B
	word16 cx_82 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BB:
	branch cx_82 == 0x0000 l0800_08BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BB_1:
	di_1819 = di_1819 + 0x0001
	cx_82 = cx_82 - 0x0001
	branch Mem77[ds:di_1819:byte] == 0x00 l0800_08BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BD:
	word16 di_110 = di_1819 - 0x0001
	word16 cx_114 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C1:
	branch cx_114 == 0x0000 l0800_08C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C3:
	branch Mem101[ds:0x2E31:word16] <=u 0x8000 l0800_08D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08CB:
	Mem104[ds:0x2E31:word16] = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08D1:
	Mem106[ds:0x2E2F:word16] = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C1_2:
	Mem111[ds:di_110:byte] = Mem101[ds:si_107:byte]
	si_107 = si_107 + 0x0001
	di_110 = di_110 + 0x0001
	cx_114 = cx_114 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08A7:
	branch ax_71 == 0x0002 l0800_08D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08D9:
	word16 di_121 = 0x4271
	word16 si_122 = 0x085D
	word16 cx_123 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E6:
	branch cx_123 == 0x0000 l0800_08E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E6_1:
	di_121 = di_121 + 0x0001
	cx_123 = cx_123 - 0x0001
	branch Mem118[ds:di_121:byte] == 0x00 l0800_08E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E8:
	word16 di_137 = di_121 - 0x0001
	word16 cx_139 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EC:
	branch cx_139 == 0x0000 l0800_08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EE:
	branch Mem142[ds:0x2E31:word16] <=u 0x1000 l0800_08FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08F6:
	Mem145[ds:0x2E31:word16] = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08FC:
	Mem147[ds:0x2E2F:word16] = 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EC_2:
	Mem152[ds:di_137:byte] = Mem142[ds:si_122:byte]
	si_122 = si_122 + 0x0001
	di_137 = di_137 + 0x0001
	cx_139 = cx_139 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08AC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0902:
	branch Mem157[ds:0x2A23:word16] != 0x0002 l0800_0911
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0909:
	Mem163[ds:0x2A1D:word16] = 0x0000
	Mem164[ds:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0911:
	branch Mem166[ds:0x2E4F:word16] == 0x0000 l0800_092D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0918:
	word16 di_1821 = 0x4271
	word16 si_194 = 0x0653
	word16 cx_195 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0925:
	branch cx_195 == 0x0000 l0800_0927
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0925_1:
	di_1821 = di_1821 + 0x0001
	cx_195 = cx_195 - 0x0001
	branch Mem190[ds:di_1821:byte] == 0x00 l0800_0925
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0927:
	word16 di_209 = di_1821 - 0x0001
	word16 cx_211 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092B:
	branch cx_211 == 0x0000 l0800_092D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092D:
	branch Mem215[ds:0x2A1D:word16] == 0x0000 l0800_0949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0934:
	word16 di_1822 = 0x4271
	word16 si_228 = 0x085F
	word16 cx_229 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0941:
	branch cx_229 == 0x0000 l0800_0943
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0941_1:
	di_1822 = di_1822 + 0x0001
	cx_229 = cx_229 - 0x0001
	branch Mem224[ds:di_1822:byte] == 0x00 l0800_0941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0943:
	word16 di_243 = di_1822 - 0x0001
	word16 cx_245 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0947:
	branch cx_245 == 0x0000 l0800_0949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0949:
	word16 di_1823 = 0x4271
	word16 si_258 = 0x0861
	word16 cx_259 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0956:
	branch cx_259 == 0x0000 l0800_0958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0956_1:
	di_1823 = di_1823 + 0x0001
	cx_259 = cx_259 - 0x0001
	branch Mem254[ds:di_1823:byte] == 0x00 l0800_0956
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0958:
	word16 di_273 = di_1823 - 0x0001
	word16 cx_275 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095C:
	branch cx_275 == 0x0000 l0800_095E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095E:
	branch Mem278[ds:0x2A25:word16] != 0x0000 l0800_0987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0965:
	branch Mem278[Mem278[ds:(Mem278[ds:0x2A23:word16] << 0x0002) + 0x0545:segptr32]:byte] == 0x00 l0800_0987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0977:
	edx_1656 = SEQ(edx_16_16_581, fn0800_09A3(ds, out bp_1184, out ds)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095C_2:
	Mem322[ds:di_273:byte] = Mem278[ds:si_258:byte]
	si_258 = si_258 + 0x0001
	di_273 = di_273 + 0x0001
	cx_275 = cx_275 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0947_2:
	Mem331[ds:di_243:byte] = Mem327[ds:si_228:byte]
	si_228 = si_228 + 0x0001
	di_243 = di_243 + 0x0001
	cx_245 = cx_245 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092B_2:
	Mem339[ds:di_209:byte] = Mem216[ds:si_194:byte]
	si_194 = si_194 + 0x0001
	di_209 = di_209 + 0x0001
	cx_211 = cx_211 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_089C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0883:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_058A:
	word16 bx_1799
	byte cl_369
	word16 dx_370
	selector es_371
	word16 ax_367 = fn0800_0C29(ds, SEQ(ds, 0x0838), Mem48[Mem48[ds:Mem48[ds:0x269C:word16] + (Mem48[ds:0x2A27:word16] << 0x0002):segptr32] + 0x0001:byte], out cl_369, out dx_370, out bx_1799, out es_371)
	word16 si_377 = ax_367
	word16 cx_399 = SEQ(ch, cl_369)
	branch ax_367 < 0x000B l0800_05CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05B1:
	ptr32 es_bx_383 = Mem366[ds:0x269C:segptr32]
	selector es_387 = SLICE(es_bx_383, selector, 16)
	word16 bx_385 = SLICE(es_bx_383, word16, 0) + (Mem366[ds:0x2A27:word16] << 0x0002)
	word16 bx_1800
	fn0800_0D24(ds, 0x0002, SEQ(Mem366[es_387:bx_385 + 0x0002:word16], Mem390[es_387:bx_385:word16]), out cx_399, out dx_370, out bx_1800, out si_377, out di, out es_371, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05CF:
	segptr32 ptrLoc06_1408
	word32 edx_1784 = SEQ(edx_16_16_581, dx_370)
	branch si_377 < 0x0006 l0800_05D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05D7:
	ptr32 es_bx_420 = Mem416[ds:0x269C:segptr32]
	selector es_424 = SLICE(es_bx_420, selector, 16)
	word16 bx_422 = SLICE(es_bx_420, word16, 0) + (Mem416[ds:0x2A27:word16] << 0x0002)
	branch fn0800_BFC7(SEQ(Mem416[es_424:bx_422 + 0x0002:word16], Mem429[es_424:bx_422:word16]), out cx_399) != 0x0002 l0800_0622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0622:
	ptr32 es_bx_447 = Mem432[ds:0x269C:segptr32]
	selector es_450 = SLICE(es_bx_447, selector, 16)
	word16 bx_449 = SLICE(es_bx_447, word16, 0) + (Mem432[ds:0x2A27:word16] << 0x0002)
	word16 dx_452 = Mem432[es_450:bx_449:word16]
	edx_1784 = SEQ(edx_16_16_581, dx_452 + 0x0002) (alias)
	ptrLoc06_1408 = SEQ(Mem432[es_450:bx_449 + 0x0002:word16], dx_452 + 0x0002) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05F6:
	Mem461[ds:0x2A27:word16] = Mem432[ds:0x2A27:word16] + 0x0001
	branch Mem461[ds:0x2A27:word16] != Mem461[ds:0x269A:word16] l0800_0606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0603:
	si_377 = fn0800_0DCE(cx_399, dx_370, bx_422, ds, out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0606:
	ptr32 es_bx_480 = Mem461[ds:0x269C:segptr32]
	selector es_484 = SLICE(es_bx_480, selector, 16)
	word16 bx_482 = SLICE(es_bx_480, word16, 0) + (Mem461[ds:0x2A27:word16] << 0x0002)
	word16 dx_486 = Mem461[es_484:bx_482:word16]
	edx_1784 = SEQ(edx_16_16_581, dx_486) (alias)
	ptrLoc06_1408 = SEQ(Mem461[es_484:bx_482 + 0x0002:word16], dx_486) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_063F:
	word16 edx_16_16_587 = SLICE(edx_1784, word16, 16)
	es_371 = SLICE(ptrLoc06_1408, selector, 16) (alias)
	branch (int16) Mem493[ptrLoc06_1408:byte] != 0x0000 l0800_0659
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_064A:
	word16 bx_1818
	word16 dx_519
	fn0800_0D24(ds, 0x0002, SEQ(ds, 0x05DC), out cx_399, out dx_519, out bx_1818, out si_377, out di, out es_371, out ds)
	edx_1784 = SEQ(edx_16_16_587, dx_519) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05D4:
	ptrLoc06_1408 = ptrLoc06_1792 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0659:
	word16 wLoc06_1425 = SLICE(ptrLoc06_1408, word16, 0)
	word16 wLoc04_1419 = SLICE(ptrLoc06_1408, word16, 16)
	word16 edx_16_16_1323 = SLICE(edx_1784, word16, 16)
	ch = SLICE(cx_399, byte, 8) (alias)
	ch = SLICE(cx_399, byte, 8) (alias)
	branch si_377 <=u 0x000A l0800_0663
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0663:
	word16 bx_535 = si_377 << 0x0001
	switch (bx_535) { l0800_069D l0800_0716 l0800_0765 l0800_080A l0800_07A9 l0800_074C l0800_066A l0800_0682 l0800_0679 l0800_068B l0800_0694 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0694:
	Mem538[ds:0x2A15:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_068B:
	Mem539[ds:0x2A17:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0679:
	Mem540[ds:0x2A1D:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0682:
	Mem541[ds:0x2A1B:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_066A:
	Mem542[ds:0x2A1F:word16] = 0x0001
	Mem543[ds:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_074C:
	ch = SLICE((uint16) (uint8) fn0800_BF18(cx_399, edx_1784, bx_535, si_377, di, es_371, ds, 0x0853, ds, out edx_1784, out di), byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07A9:
	word16 di_1824 = wLoc06_1425
	word16 cx_618 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BB:
	branch cx_618 == 0x0000 l0800_07BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BB_1:
	di_1824 = di_1824 + 0x0001
	cx_618 = cx_618 - 0x0001
	branch Mem613[wLoc04_1419:di_1824:byte] == 0x00 l0800_07BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BD:
	word16 cx_629 = ~cx_618
	word16 cx_632 = cx_629 >>u 0x0001
	word16 si_634 = di_1824 - cx_629
	word16 di_640 = 0x42E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CC:
	branch cx_632 == 0x0000 l0800_07CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CE:
	word16 cx_653 = cx_632 * 0x0002 + (cx_629 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D0:
	branch cx_653 == 0x0000 l0800_07D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D2:
	word16 dx_668 = fn0800_0C6C(ds, SEQ(ds, 0x42E3))
	di = 0x42E3
	word16 cx_683 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07E8:
	branch cx_683 == 0x0000 l0800_07EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07E8_1:
	di = di + 0x0001
	cx_683 = cx_683 - 0x0001
	branch Mem676[ds:di:byte] == 0x00 l0800_07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07EA:
	word16 cx_694 = ~cx_683
	ch = SLICE(cx_694 - 0x0002, byte, 8) (alias)
	edx_1784 = SEQ(edx_16_16_1323, dx_668) (alias)
	branch Mem676[ds:cx_694 + 0x42E1:byte] == 0x5C l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07F7:
	word16 di_1826 = 0x42E3
	word16 si_704 = 0x0859
	word16 cx_705 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0800:
	branch cx_705 == 0x0000 l0800_0802
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0800_2:
	di_1826 = di_1826 + 0x0001
	cx_705 = cx_705 - 0x0001
	branch Mem676[ds:di_1826:byte] == 0x00 l0800_0800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0802:
	di = di_1826 - 0x0001
	word16 cx_718 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0806:
	ch = SLICE(cx_718, byte, 8) (alias)
	branch cx_718 == 0x0000 l0800_0808
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0808:
	edx_1784 = SEQ(edx_16_16_1323, dx_668) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0806_3:
	Mem726[ds:di:byte] = Mem722[ds:si_704:byte]
	si_704 = si_704 + 0x0001
	di = di + 0x0001
	cx_718 = cx_718 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D0_1:
	Mem735[ds:di_640:byte] = Mem658[wLoc04_1419:si_634:byte]
	si_634 = si_634 + 0x0001
	di_640 = di_640 + 0x0001
	cx_653 = cx_653 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CC_2:
	Mem745[ds:di_640:word16] = Mem741[wLoc04_1419:si_634:word16]
	si_634 = si_634 + 0x0002
	di_640 = di_640 + 0x0002
	cx_632 = cx_632 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_080A:
	word16 di_1827 = wLoc06_1425
	word16 cx_763 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081C:
	branch cx_763 == 0x0000 l0800_081E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081C_1:
	di_1827 = di_1827 + 0x0001
	cx_763 = cx_763 - 0x0001
	branch Mem758[wLoc04_1419:di_1827:byte] == 0x00 l0800_081C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081E:
	word16 cx_774 = ~cx_763
	word16 cx_777 = cx_774 >>u 0x0001
	word16 si_779 = di_1827 - cx_774
	word16 di_785 = 0x427E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082D:
	branch cx_777 == 0x0000 l0800_082F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082F:
	word16 cx_798 = cx_777 * 0x0002 + (cx_774 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0831:
	branch cx_798 == 0x0000 l0800_0833
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0833:
	word16 dx_813 = fn0800_0C6C(ds, SEQ(ds, 0x427E))
	di = 0x427E
	word16 cx_828 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0849:
	branch cx_828 == 0x0000 l0800_084B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0849_1:
	di = di + 0x0001
	cx_828 = cx_828 - 0x0001
	branch Mem821[ds:di:byte] == 0x00 l0800_0849
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_084B:
	word16 cx_839 = ~cx_828
	ch = SLICE(cx_839 - 0x0002, byte, 8) (alias)
	edx_1784 = SEQ(edx_16_16_1323, dx_813) (alias)
	branch Mem821[ds:cx_839 + 0x427C:byte] == 0x5C l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0858:
	word16 di_1829 = 0x427E
	word16 si_849 = 0x0859
	word16 cx_850 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0861:
	branch cx_850 == 0x0000 l0800_0863
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0861_2:
	di_1829 = di_1829 + 0x0001
	cx_850 = cx_850 - 0x0001
	branch Mem821[ds:di_1829:byte] == 0x00 l0800_0861
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0863:
	di = di_1829 - 0x0001
	word16 cx_863 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0867:
	ch = SLICE(cx_863, byte, 8) (alias)
	edx_1784 = SEQ(edx_16_16_1323, dx_813) (alias)
	branch cx_863 == 0x0000 l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0867_3:
	Mem871[ds:di:byte] = Mem867[ds:si_849:byte]
	si_849 = si_849 + 0x0001
	di = di + 0x0001
	cx_863 = cx_863 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0831_1:
	Mem880[ds:di_785:byte] = Mem803[wLoc04_1419:si_779:byte]
	si_779 = si_779 + 0x0001
	di_785 = di_785 + 0x0001
	cx_798 = cx_798 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082D_2:
	Mem890[ds:di_785:word16] = Mem886[wLoc04_1419:si_779:word16]
	si_779 = si_779 + 0x0002
	di_785 = di_785 + 0x0002
	cx_777 = cx_777 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0765:
	ch = SLICE((uint16) (uint8) fn0800_BF18(cx_399, edx_1784, bx_535, si_377, di, es_371, ds, 0x0856, ds, out edx_1784, out di), byte, 8) (alias)
	word16 edx_16_16_1325 = SLICE(edx_1784, word16, 16)
	branch Mem909[ds:0x2A21:word16] > 0x0002 l0800_0796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0782:
	branch Mem909[ds:0x2A21:word16] == 0x0000 l0800_078C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_078C:
	branch Mem909[ds:0x2A25:word16] == 0x0000 l0800_0796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0796:
	word16 si_1802
	selector es_1803
	word16 cx_946
	word16 dx_949
	word16 bx_1801
	fn0800_0D24(ds, 0x0005, ptrLoc06_1408, out cx_946, out dx_949, out bx_1801, out si_1802, out di, out es_1803, out ds)
	ch = SLICE(cx_946, byte, 8) (alias)
	edx_1784 = SEQ(edx_16_16_1325, dx_949) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0793:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0789:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0716:
	word32 edx_979
	ch = SLICE((uint16) (uint8) fn0800_BF18(cx_399, edx_1784, bx_535, si_377, di, es_371, ds, 0x084F, ds, out edx_979, out di), byte, 8) (alias)
	word16 edx_16_16_1327 = SLICE(edx_979, word16, 16)
	word16 dx_1005 = SLICE(edx_979, word16, 0)
	branch Mem974[ds:0x2E4F:word16] != 0x0000 l0800_0743
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0733:
	selector es_1806
	word16 bx_1804
	word16 si_1805
	word16 cx_1002
	fn0800_0D24(ds, 0x0004, ptrLoc06_1408, out cx_1002, out dx_1005, out bx_1804, out si_1805, out di, out es_1806, out ds)
	ch = SLICE(cx_1002, byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0743:
	Mem1016[ds:0x2A1F:word16] = 0x0000
	edx_1784 = SEQ(edx_16_16_1327, dx_1005) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_069D:
	branch Mem1017[ds:0x2A19:word16] == 0x0000 l0800_06A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06A7:
	word16 di_1028 = wLoc06_1425
	word16 cx_1024 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06AF:
	branch cx_1024 == 0x0000 l0800_06B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06AF_1:
	di_1028 = di_1830 + 0x0001
	cx_1024 = cx_1024 - 0x0001
	di_1830 = di_1028
	branch Mem1017[wLoc04_1419:di_1830:byte] == 0x00 l0800_06AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B1:
	word16 cx_1035 = ~cx_1024
	byte ch_1156 = SLICE(cx_1035 - 0x0001, byte, 8)
	branch cx_1035 <=u 0x0002 l0800_06C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B9:
	word16 dx_1809
	word16 bx_1810
	word16 si_1811
	word16 di_1812
	selector es_1813
	word16 cx_1059
	fn0800_0D24(ds, 0x0003, ptrLoc06_1408, out cx_1059, out dx_1809, out bx_1810, out si_1811, out di_1812, out es_1813, out ds)
	ch_1156 = SLICE(cx_1059, byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06C9:
	word16 bx_1807
	selector es_1808
	byte cl_1096
	word16 dx_1097
	word16 ax_1094 = fn0800_0C29(ds, SEQ(ds, 0x0844), Mem1074[ptrLoc06_1408:byte], out cl_1096, out dx_1097, out bx_1807, out es_1808)
	Mem1104[ds:0x2A23:word16] = ax_1094
	word16 cx_1118 = SEQ(ch_1156, cl_1096)
	branch ax_1094 < 0x0006 l0800_06F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06E3:
	word16 si_1815
	word16 di_1816
	word16 bx_1814
	selector es_1817
	fn0800_0D24(ds, 0x0003, ptrLoc06_1408, out cx_1118, out dx_1097, out bx_1814, out si_1815, out di_1816, out es_1817, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06F3:
	fn0800_BEA2(cx_1118, dx_1097, ds, SEQ(ds, 0x4271), SEQ(ds, 0x084B), out di)
	ch = SLICE(cx_1118, byte, 8) (alias)
	edx_1784 = SEQ(edx_16_16_1323, dx_1097) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06A4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0660:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0869:
	Mem1176[ds:0x2A27:word16] = Mem1174[ds:0x2A27:word16] + 0x0001
	edx = edx_1784 (alias)
	ptrLoc06_1792 = ptrLoc06_1408 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0552:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0987:
	bpOut = Mem1180[ss:bp_1184:word16]
	dsOut = ds
	return (word16) edx_1656
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0541_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_09A3(selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_09A3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09A3:
	word16 ax_34 = ((int16) Mem27[ds:0x0A74:byte] << 0x08) + (uint16) ((uint8) Mem27[ds:0x0A75:byte])
	word16 bp_51
	selector ds_55
	word16 dx_56
	word16 si_418
	word16 di_419
	word16 ax_50 = fn0800_4311(ds, ax_34 + 0x0020, ((int16) Mem15[ds:0x0A72:byte] << 0x08) + (uint16) ((uint8) Mem15[ds:0x0A73:byte]) + (ax_34 <u 0x0000) + (ax_34 <u 0x0020), out dx_56, out bp_51, out si_418, out di_419, out ds_55)
	Mem66[ss:bp_51 - 0x0002:word16] = dx_56
	Mem67[ss:bp_51 - 0x0004:word16] = ax_50
	Mem68[ss:bp_51 - 0x0006:word16] = dx_56
	Mem69[ss:bp_51 - 0x0008:word16] = ax_50
	word16 sp_59 = <invalid>
	Mem72[ss:sp_59 + 0x0002:word16] = Mem69[ss:bp_51 - 0x0002:word16]
	Mem74[ss:sp_59:word16] = ax_50
	Mem76[ss:sp_59 - 2:word16] = ds_55
	Mem79[ss:sp_59 - 4:word16] = 0x0A6E
	selector ds_103
	word16 bp_81 = fn0800_867A(Mem79[ss:sp_59 - 4:word16], Mem79[ss:sp_59 - 2:selector], Mem79[ss:sp_59:word16], Mem79[ss:sp_59 + 2:selector], out ds_103)
	word16 sp_89 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A4F:
	word16 si_100 = Mem99[ss:bp_81 + 0x0004:word16]
	Mem104[ss:sp_89 + 0x0006:word16] = ds_103
	ptr32 es_di_106 = Mem104[ss:bp_81 - 0x0008:segptr32]
	selector ds_105 = Mem104[ss:bp_81 + 0x0006:selector]
	selector es_376 = SLICE(es_di_106, selector, 16)
	word16 di_114 = SLICE(es_di_106, word16, 0)
	word16 cx_110 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5E:
	branch cx_110 == 0x0000 l0800_0A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5E_1:
	di_114 = di_114 + 0x0001
	cx_110 = cx_110 - 0x0001
	branch Mem104[es_376:di_114:byte] == 0x00 l0800_0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A60:
	word16 cx_121 = ~cx_110
	word16 di_123 = di_114 - cx_121
	word16 ax_146 = 0x0000
	bool Z_135 = SLICE(cond(di_123), bool, 2)
	di_130 = di_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A64:
	word16 di_130
	branch cx_121 == 0x0000 l0800_0A66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A64_2:
	Z_135 = SLICE(cond(Mem104[ds_105:si_423:byte] - Mem104[es_376:di_424:byte]), bool, 2) (alias)
	si_100 = si_423 + 0x0001
	di_130 = di_424 + 0x0001
	cx_121 = cx_121 - 0x0001
	si_423 = si_100
	di_424 = di_130
	branch Mem104[ds_105:si_423:byte] != Mem104[es_376:di_424:byte] l0800_0A64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A66:
	branch Z_135 l0800_0A6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A68:
	word16 ax_143 = 0x0000 - (di_123 <u 0x0000)
	ax_146 = ax_143 - 0xFFFF - (ax_143 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A6D:
	ds_103 = Mem104[ss:sp_89 + 0x0006:selector]
	branch ax_146 != 0x0000 l0800_09FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09FF:
	ptr32 es_di_179 = Mem104[ss:bp_81 - 0x0008:segptr32]
	selector es_385 = SLICE(es_di_179, selector, 16)
	word16 di_187 = SLICE(es_di_179, word16, 0)
	word16 cx_183 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A07:
	branch cx_183 == 0x0000 l0800_0A09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A07_1:
	di_187 = di_425 + 0x0001
	cx_183 = cx_183 - 0x0001
	di_425 = di_187
	branch Mem104[es_385:di_425:byte] == 0x00 l0800_0A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A09:
	word16 di_209 = Mem104[ss:bp_81 - 0x0008:word16]
	Mem213[ss:sp_89 + 0x0006:word16] = (int16) Mem104[es_385:Mem104[ss:bp_81 - 0x0008:word16] + (~cx_183 - 0x0001) + 0x0001:byte] << 0x08
	word16 cx_217 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A25:
	branch cx_217 == 0x0000 l0800_0A27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A25_2:
	di_209 = di_426 + 0x0001
	cx_217 = cx_217 - 0x0001
	di_426 = di_209
	branch Mem213[es_385:di_426:byte] == 0x00 l0800_0A25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A27:
	word16 dx_246 = Mem213[ss:sp_89 + 0x0006:word16] + (uint16) ((uint8) Mem213[es_385:(Mem213[ss:bp_81 - 0x0008:word16] + (~cx_217 - 0x0001)) + 0x0002:byte])
	word16 di_247 = Mem213[ss:bp_81 - 0x0008:word16]
	word16 cx_251 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A42:
	branch cx_251 == 0x0000 l0800_0A44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A42_3:
	di_247 = di_427 + 0x0001
	cx_251 = cx_251 - 0x0001
	di_427 = di_247
	branch Mem213[es_385:di_427:byte] == 0x00 l0800_0A42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A44:
	Mem274[ss:bp_81 - 0x0008:word16] = Mem213[ss:bp_81 - 0x0008:word16] + ((dx_246 + (~cx_251 - 0x0001)) + 0x0003)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A72:
	ptr32 es_di_276 = Mem104[ss:bp_81 - 0x0008:segptr32]
	selector es_390 = SLICE(es_di_276, selector, 16)
	word16 di_284 = SLICE(es_di_276, word16, 0)
	word16 cx_280 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7A:
	branch cx_280 == 0x0000 l0800_0A7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7A_1:
	di_284 = di_428 + 0x0001
	cx_280 = cx_280 - 0x0001
	di_428 = di_284
	branch Mem104[es_390:di_428:byte] == 0x00 l0800_0A7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7C:
	Mem300[ss:bp_81 - 0x0008:word16] = Mem104[ss:bp_81 - 0x0008:word16] + ~cx_280
	ptr32 es_bx_301 = Mem300[ss:bp_81 - 0x0008:segptr32]
	Mem317[ss:sp_89 + 0x0006:word16] = ((int16) Mem300[es_bx_301:byte] << 0x08) + (uint16) ((uint8) Mem300[es_bx_301 + 0x0001:byte]) + 0x0002
	Mem320[ss:sp_89 + 0x0004:word16] = Mem317[ss:bp_81 - 0x0006:word16]
	Mem322[ss:sp_89 + 0x0002:word16] = SLICE(es_bx_301, word16, 0)
	Mem325[ss:sp_89:word16] = Mem322[ss:bp_81 + 0x000A:word16]
	Mem328[ss:sp_89 - 0x0002:word16] = Mem325[ss:bp_81 + 0x0008:word16]
	fn0800_B0F3(Mem328[ss:sp_89 - 0x0002:word32], Mem328[ss:sp_89 + 0x0002:word32], Mem328[ss:sp_89 + 0x0006:word16])
	Mem343[ss:sp_89 + 0x0006:word16] = Mem328[ss:bp_81 - 0x0002:word16]
	Mem346[ss:sp_89 + 0x0004:word16] = Mem343[ss:bp_81 - 0x0004:word16]
	word16 cx_420
	selector ds_352
	word16 dx_353
	word16 bx_421
	fn0800_4346(ds_103, Mem346[ss:sp_89 + 0x0006:word16], out cx_420, out dx_353, out bx_421, out ds_352)
	bpOut = Mem346[ss:bp_81:word16]
	dsOut = ds_352
	return dx_353
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_09A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0ABC(word16 di, selector ds, word16 wArg02, word32 dwArg04, ptr16 & dxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: cx di dx
// Trashed: SCZDO ax bx cx di dx es Top
// Preserved: bp si sp
fn0800_0ABC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ABC:
	fn0800_35A3(wArg02, di, fp - 0x0010, ss, dwArg04)
	word16 ax_52 = fn0800_0B79(SEQ(Mem45[ds:0x2A09:word16], Mem48[ds:0x2A07:word16]), SEQ(Mem25[ds:0x2A05:word16], Mem42[ds:0x2A03:word16]))
	word16 dx_74 = (uint16) ((uint32) (uint16) ax_52 % 0x0064)
	word16 si_108
	word16 di_267
	fn0800_B2EF(ax_52, dx_74, 0x0064, ds, SEQ(ds, 0x0866), out si_108, out di_267)
	word16 bx_124 = 0x0064
	branch Mem105[ds:0x2A25:word16] == 0x0002 l0800_0B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B2A:
	branch si_108 == 0x0000 l0800_0B47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B2E:
	word16 si_268
	word16 di_269
	fn0800_B2EF(ax_52, dx_74, si_108 << 0x0002, ds, SEQ(ds, 0x0889), out si_268, out di_269)
	bx_124 = si_108 << 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B47:
	word16 di_165
	word16 si_270
	fn0800_B2EF(ax_52, dx_74, bx_124, ds, SEQ(ds, 0x0827), out si_270, out di_165)
	word16 ax_173 = Mem160[ds:0x2A09:word16]
	word16 dx_174 = Mem160[ds:0x2A07:word16]
	Mem176[ds:0x29F3:word16] = v30_175
	ui32 v31_v30_200 = SEQ(Mem176[ds:0x29F5:word16], Mem160[ds:0x29F3:word16]) + SEQ(ax_173, dx_174)
	Mem180[ds:0x29F5:word16] = SLICE(v31_v30_200, word16, 16)
	word16 ax_181 = Mem180[ds:0x2A05:word16]
	word16 dx_182 = Mem180[ds:0x2A03:word16]
	Mem184[ds:0x29EF:word16] = v32_183
	ui32 v33_v32_202 = SEQ(Mem184[ds:0x29F1:word16], Mem180[ds:0x29EF:word16]) + SEQ(ax_181, dx_182)
	Mem188[ds:0x29F1:word16] = SLICE(v33_v32_202, word16, 16)
	Mem191[ds:0x2A13:word16] = Mem188[ds:0x2A13:word16] + 0x0001
	dxOut = dx_182
	diOut = di_165
	word16 v30_175 = (word16) v31_v30_200
	word16 v32_183 = (word16) v33_v32_202
	return ax_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0ABC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0B79(word32 dwArg02, ui32 dwArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0B79_entry:
	word16 wArg02 = SLICE(dwArg02, word16, 0)
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg06 = SLICE(dwArg06, word16, 0)
	word16 wArg08 = SLICE(dwArg06, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B79:
	word16 sp_4 = fp - 2
	branch (wArg02 | wArg04) == 0x0000 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B84:
	branch (wArg06 | wArg08) == 0x0000 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B8C:
	word32 dwArg02_204 = dwArg02
	ui32 dwArg06_208 = dwArg06
	branch wArg04 >u wArg08 l0800_0BCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B99:
	dwArg02_204 = dwArg02 (alias)
	dwArg06_208 = dwArg06 (alias)
	branch wArg02 >u wArg06 l0800_0BCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BCE:
	ui32 ax_dx_148 = dwArg02_204 - dwArg06_208
	word16 wArg06_159 = SLICE(dwArg06_208, word16, 0)
	word16 wArg08_158 = SLICE(dwArg06_208, word16, 16)
	word16 wArg02_157 = SLICE(dwArg02_204, word16, 0)
	word16 wArg04_156 = SLICE(dwArg02_204, word16, 16)
	word16 dx_31 = (word16) ax_dx_148
	word16 ax_34 = SLICE(ax_dx_148, word16, 16)
	branch ax_34 >u 0x0006 l0800_0BA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BDF:
	branch ax_34 != 0x0006 l0800_0BE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BE1:
	branch dx_31 >u 0x8DB8 l0800_0BA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BA2:
	word16 sp_46 = sp_4 - 2
	Mem48[ss:sp_46:word16] = 0x0000
	Mem50[ss:sp_46 - 2:word16] = 0x000A
	Mem54[ss:sp_46 - 4:word16] = wArg04_156
	Mem57[ss:sp_46 - 6:word16] = wArg02_157
	word16 dx_61
	word16 cx_214
	word16 bx_215
	word16 ax_58 = fn0800_8BC2(Mem57[ss:sp_46 - 6:word32], Mem57[ss:sp_46 - 2:word16], Mem57[ss:sp_46:word16], out cx_214, out dx_61, out bx_215)
	word16 sp_62 = <invalid>
	Mem75[ss:sp_62 + 0x0006:word16] = 0x0000
	Mem77[ss:sp_62 + 0x0004:word16] = 0x000A
	Mem80[ss:sp_62 + 0x0002:word16] = wArg08_158
	Mem83[ss:sp_62:word16] = wArg06_159
	word16 sp_88 = <invalid>
	sp_4 = sp_88 + 0x0008
	dwArg02_204 = SEQ(dx_61, ax_58) (alias)
	word16 dx_87
	word16 cx_216
	word16 bx_217
	dwArg06_208 = SEQ(dx_87, fn0800_8BC2(Mem83[ss:sp_62:word32], Mem83[ss:sp_62 + 4:word16], Mem83[ss:sp_62 + 6:word16], out cx_216, out dx_87, out bx_217)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BE7:
	word16 sp_101 = sp_4 - 2
	Mem102[ss:sp_101:word16] = wArg04_156
	Mem105[ss:sp_101 - 2:word16] = wArg02_157
	ui32 cx_bx_150 = dwArg02_204 - dwArg06_208
	word16 dx_117
	byte ch_218
	word16 ax_116 = fn0800_8F18(0x2710, SLICE(cx_bx_150, word16, 16), 0x0000, (word16) cx_bx_150, out ch_218, out dx_117)
	Mem124[ss:sp_101 - 4:word16] = dx_117
	Mem126[ss:sp_101 - 6:word16] = ax_116
	word16 cx_219
	word16 dx_220
	word16 bx_221
	return fn0800_8BC2(Mem126[ss:sp_101 - 6:word32], Mem126[ss:sp_101 - 2:word16], Mem126[ss:sp_101:word16], out cx_219, out dx_220, out bx_221)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B9E:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0B79_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C08(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_0C08_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C08:
	word16 si_12 = wArg02
	word16 cx_13 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C15:
	word16 ax_21 = (uint16) ((uint32) (uint16) si_12 /u 0x0002)
	si_12 = ax_21
	branch ax_21 != 0x0000 l0800_0C14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C14:
	cx_13 = cx_13 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C24:
	return cx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C08_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C29(selector ds, word32 dwArg02, byte bArg06, ptr16 & clOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..7]
// LiveOut: ax bx cl dx es
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp sp
fn0800_0C29_entry:
	word16 wArg02 = SLICE(dwArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C29:
	word16 dx_91
	byte al_26 = SLICE((uint16) (uint8) fn0800_97CC(ds, (int16) bArg06, out dx_91), byte, 0)
	segptr32 ptrLoc06_66 = dwArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C4F:
	word16 wLoc06_67 = SLICE(ptrLoc06_66, word16, 0)
	word16 wLoc04_75 = SLICE(ptrLoc06_66, word16, 16)
	selector es_36 = SLICE(ptrLoc06_66, selector, 16)
	word16 bx_37 = SLICE(ptrLoc06_66, word16, 0)
	branch Mem34[ptrLoc06_66:byte] == 0x00 l0800_0C5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C58:
	branch Mem34[ptrLoc06_66:byte] != al_26 l0800_0C4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C4C:
	ptrLoc06_66 = SEQ(wLoc04_75, wLoc06_67 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C5D:
	clOut = al_26
	word16 ax_51 = wLoc06_67 - wArg02
	dxOut = 0x0000 - (ax_51 <u 0x0000)
	bxOut = bx_37
	esOut = es_36
	return ax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C29_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: dx
// Trashed: SCZO ax bx dx es Top
// Preserved: bp sp
fn0800_0C6C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C6C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C88:
	word16 wArg02_49 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_53 = SLICE(ptrArg02, word16, 16)
	branch Mem11[ptrArg02:byte] != 0x00 l0800_0C71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C71:
	Mem39[ptrArg02:byte] = SLICE((uint16) (uint8) fn0800_97CC(ds, (int16) Mem11[ptrArg02:byte], out dx), byte, 0)
	ptrArg02 = SEQ(wArg04_53, wArg02_49 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C91:
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C6C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C93(word16 si, word16 di, selector ds, word32 dwArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_0C93_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C93:
	word16 bx_29
	word16 dx_163 = fn0800_3509(si, di, fp - 0x0068, ss, dwArg02, out bx_29)
	word16 si_39 = 0x2714
	word16 di_403 = fp - 0x0068
	word16 cx_48 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB9:
	branch cx_48 == 0x0000 l0800_0CBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB9_1:
	di_403 = di_403 + 0x0001
	cx_48 = cx_48 - 0x0001
	branch Mem41[ss:di_403:byte] == 0x00 l0800_0CB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBB:
	word16 cx_131 = ~cx_48
	word16 di_61 = di_403 - cx_131
	word16 ax_84 = 0x0000
	bool Z_73 = SLICE(cond(di_61), bool, 2)
	di_68 = di_61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBF:
	word16 di_68
	branch cx_131 == 0x0000 l0800_0CC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBF_2:
	Z_73 = SLICE(cond(Mem41[ds:si_404:byte] - Mem41[ss:di_405:byte]), bool, 2) (alias)
	si_39 = si_404 + 0x0001
	di_68 = di_405 + 0x0001
	cx_131 = cx_131 - 0x0001
	si_404 = si_39
	di_405 = di_68
	branch Mem41[ds:si_404:byte] != Mem41[ss:di_405:byte] l0800_0CBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC1:
	branch Z_73 l0800_0CC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC3:
	word16 ax_81 = 0x0000 - (di_61 <u 0x0000)
	ax_84 = ax_81 - 0xFFFF - (ax_81 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC8:
	branch ax_84 == 0x0000 l0800_0D0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CCC:
	word16 di_402
	word16 si_401
	fn0800_B2EF(cx_131, dx_163, bx_29, ds, SEQ(ds, 0x088F), out si_401, out di_402)
	word16 di_161 = fp - 0x0068
	dx_163 = ds
	word16 cx_173 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF5:
	branch cx_173 == 0x0000 l0800_0CF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF5_1:
	di_161 = di_161 + 0x0001
	cx_173 = cx_173 - 0x0001
	branch Mem169[ss:di_161:byte] == 0x00 l0800_0CF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF7:
	word16 cx_184 = ~cx_173
	word16 cx_187 = cx_184 >>u 0x0001
	word16 si_189 = di_161 - cx_184
	word16 di_195 = 0x2714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D06:
	branch cx_187 == 0x0000 l0800_0D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D08:
	cx_131 = cx_187 * 0x0002 + (cx_184 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0A:
	branch cx_131 == 0x0000 l0800_0D0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0D:
	word16 di_400
	word16 si_399
	word16 ax_240 = fn0800_B2EF(cx_131, dx_163, bx_29, ds, SEQ(ds, 0x089E), out si_399, out di_400)
	dxOut = dx_163
	return ax_240
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C93_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0A_1:
	Mem261[ds:di_195:byte] = Mem213[ss:si_189:byte]
	si_189 = si_189 + 0x0001
	di_195 = di_195 + 0x0001
	cx_131 = cx_131 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D06_2:
	Mem271[ds:di_195:word16] = Mem267[ss:si_189:word16]
	si_189 = si_189 + 0x0002
	di_195 = di_195 + 0x0002
	cx_187 = cx_187 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0D24(selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax bx cx di ds dx es si
// Trashed: SCZDO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_0D24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D24:
	selector ds_24
	word16 dx_211
	fn0800_0DA9(ds, SEQ(Mem14[ds:0x29DD:word16], Mem17[ds:0x29DB:word16]), SEQ(ds, 0x4477), out dx_211, out ds_24)
	selector ds_47
	word16 dx_212
	fn0800_0DA9(ds_24, SEQ(Mem37[ds_24:0x29D9:word16], Mem40[ds_24:0x29D7:word16]), SEQ(ds_24, 0x4412), out dx_212, out ds_47)
	selector ds_70
	word16 dx_71
	word16 cx_69 = fn0800_0DA9(ds_47, SEQ(Mem60[ds_47:0x29D5:word16], Mem63[ds_47:0x29D3:word16]), SEQ(ds_47, 0x43AD), out dx_71, out ds_70)
	word16 si_213
	word16 di_214
	fn0800_B2EF(cx_69, dx_71, wArg02 << 0x0002, ds_70, SEQ(ds_70, 0x08A2), out si_213, out di_214)
	selector es_103 = SLICE(ptrArg04, selector, 16)
	word16 bx_104 = SLICE(ptrArg04, word16, 0)
	branch Mem92[ptrArg04:byte] == 0x00 l0800_0D92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D83:
	word16 si_215
	word16 di_216
	fn0800_B2EF(cx_69, dx_71, bx_104, ds_70, SEQ(ds_70, 0x08A6), out si_215, out di_216)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D92:
	word16 di_139
	word16 si_140
	fn0800_B2EF(cx_69, dx_71, bx_104, ds_70, SEQ(ds_70, 0x0827), out si_140, out di_139)
	word16 dx_152
	word16 ax_151 = fn0800_8B5A(cx_69, dx_71, bx_104, si_140, ds_70, 0x0001, out dx_152)
	cxOut = cx_69
	dxOut = dx_152
	bxOut = bx_104
	siOut = si_140
	diOut = di_139
	esOut = es_103
	dsOut = ds_70
	return ax_151
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0D24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0DA9(selector ds, word32 dwArg02, word32 dwArg06, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_0DA9_entry:
	word16 wArg02 = SLICE(dwArg02, word16, 0)
	word16 wArg04 = SLICE(dwArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DA9:
	branch (wArg02 | wArg04) == 0x0000 l0800_0DCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DB4:
	word16 dx_90
	dx = fn0800_8F7F(SLICE((uint16) (uint8) fn0800_A614(ds, dwArg02, out cx, out dx_90, out ds), byte, 0), ds, dwArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DCC:
	dxOut = dx
	dsOut = ds
	return cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DA9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0DCE(word16 cx, word16 dx, word16 bx, selector ds, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax di dx si Top
// Preserved: sp
fn0800_0DCE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DCE:
	word16 di_20
	word16 si_21
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x07E8), out si_21, out di_20)
	word16 dx_52
	fn0800_8B5A(cx, dx, bx, si_21, ds, 0x0000, out dx_52)
	diOut = di_20
	return si_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DCE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0DE8(word16 cx, word16 dx, word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds dx
// Trashed: SCZDOP ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_0DE8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DE8:
	word16 bx_18 = Mem17[ds:0x2A25:word16]
	word16 di_996
	word16 si_995
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08AC), out si_995, out di_996)
	branch Mem32[ds:0x2E4F:word16] == 0x0000 l0800_0E2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E1B:
	word16 di_998
	word16 si_997
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08BA), out si_997, out di_998)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E2A:
	branch Mem65[ds:0x2A1F:word16] == 0x0000 l0800_0E3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E31:
	word16 si_1003
	word16 di_1004
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08CF), out si_1003, out di_1004)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E3C:
	word16 si_999
	word16 di_1000
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08DC), out si_999, out di_1000)
	word16 si_1001
	selector ds_117
	word16 di_1002
	word16 dx_118
	fn0800_37BE(fn0800_3678(ds, SEQ(ds, 0x427E), out dx_118, out si_1001, out ds_117), dx_118, ds_117, SEQ(ds_117, 0x4477), out di_1002)
	word16 di_163
	selector ds_161
	word16 si_164
	word16 cx_160 = fn0800_4234(ds_117, SEQ(ds_117, 0x4477), SEQ(ds_117, 0x08EC), out si_164, out di_163, out ds_161)
	Mem171[ds_161:0x29DD:word16] = dx_118
	Mem172[ds_161:0x29DB:word16] = 0x4477
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10F4:
	byte ch_1005
	word16 dx_1006
	selector ds_191
	branch fn0800_2DE2(cx_160, dx_118, si_164, di_163, ds_161, SEQ(ds_161, 0x4541), out ch_1005, out dx_1006, out ds_191) == 0x0000 l0800_1106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1106:
	word16 dx_1008
	word16 cx_1007
	selector ds_214
	fn0800_A614(ds_191, SEQ(Mem180[ds_191:0x29DD:word16], Mem205[ds_191:0x29DB:word16]), out cx_1007, out dx_1008, out ds_214)
	word16 dx_228 = fn0800_8F7F(0x77, ds_214, SEQ(ds_214, 0x4477))
	dsOut = ds_214
	return dx_228
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DE8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1103:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E7C:
	branch fn0800_388C(fn0800_3764(si_164, di_163, ds_191), ds_191, out cx_160, out dx_118, out si_164, out di_163, out ds_161) != 0x0000 l0800_0E89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E89:
	word16 dx_273
	word16 ax_270 = fn0800_0C93(si_164, di_163, ds_161, SEQ(ds_161, 0x4541), out dx_273)
	fn0800_4194(ds_161, SEQ(Mem269[ds_161:0x29E5:word16], Mem285[ds_161:0x29E3:word16]))
	Mem297[ds_161:0x2A09:word16] = dx_273
	Mem298[ds_161:0x2A07:word16] = ax_270
	Mem299[ds_161:0x2A05:word16] = dx_273
	Mem300[ds_161:0x2A03:word16] = ax_270
	word16 sp_296 = fp - 0x0002
	si_164 = 0x0000
	branch Mem300[ds_161:0x2A09:word16] >u 0x0000 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EB9:
	branch Mem300[ds_161:0x2A09:word16] != 0x0000 l0800_0EC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EBB:
	branch Mem300[ds_161:0x2A07:word16] >u 0x0012 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EC2:
	branch Mem300[ds_161:0x2A15:word16] != 0x0000 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ECF:
	word16 dx_324
	word16 ax_318 = fn0800_3992(0x0000, di_163, ds_161, out dx_324, out di_163, out ds_161)
	word16 ax_330 = ax_318
	branch ax_318 == 0x0000 l0800_0EDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EDC:
	word16 bx_335 = Mem300[ds_161:0x2A23:word16]
	branch bx_335 <=u 0x0005 l0800_0EE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EE8:
	switch (bx_335 << 0x0001) { l0800_0FF4 l0800_0EEF l0800_1002 l0800_0FFB l0800_0FCC l0800_0FED }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FED:
	ax_330 = fn0800_67BF(ds_161, out dx_324, out bp, out di_163, out ds_161)
	sp_296 = <invalid>
	si_164 = ax_330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FCC:
	selector ds_367
	word16 dx_1015
	branch fn0800_3F0A(ds_161, SEQ(Mem300[ds_161:0x29E5:word16], Mem359[ds_161:0x29E3:word16]), out dx_1015, out ds_367) != 0x4D5A l0800_0FE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FE6:
	ax_330 = fn0800_669C(ds_367, out dx_324, out bp, out di_163, out ds_161)
	sp_296 = <invalid>
	si_164 = ax_330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FDF:
	ax_330 = fn0800_5E64(ds_367, out dx_324, out bp, out di_163, out ds_161)
	sp_296 = <invalid>
	si_164 = ax_330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FFB:
	ax_330 = fn0800_73AC(ds_161, out dx_324, out bp, out di_163, out ds_161)
	si_164 = ax_330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1002:
	ax_330 = fn0800_741D(ds_161, out dx_324)
	si_164 = ax_330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EEF:
	branch Mem300[ds_161:0x2A09:word16] <u 0x0000 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EF6:
	branch Mem300[ds_161:0x2A09:word16] != 0x0000 l0800_0EFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EF8:
	branch Mem300[ds_161:0x2A07:word16] <u 0x0012 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EFF:
	ax_330 = fn0800_8CAA(ax_318, 0x08, fn0800_3F58(ds_161, SEQ(Mem300[ds_161:0x29E5:word16], Mem444[ds_161:0x29E3:word16]), out di_163, out ds_161), out dx_324)
	sp_296 = <invalid>
	branch dx_324 != 0x0052 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F17:
	branch ax_330 != 0x4E43 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F1C:
	si_164 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F1F:
	branch si_164 == 0x0000 l0800_0F26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F26:
	word16 sp_486 = sp_296 - 2
	Mem488[ss:sp_486:word16] = Mem483[ds_161:0x2A09:word16]
	Mem491[ss:sp_486 - 2:word16] = Mem488[ds_161:0x2A07:word16]
	Mem494[ss:sp_486 - 4:word16] = Mem491[ds_161:0x2A09:word16]
	Mem497[ss:sp_486 - 6:word16] = Mem494[ds_161:0x2A07:word16]
	fn0800_75EA(ds_161, Mem497[ss:sp_486 - 6:word16], Mem497[ss:sp_486 - 4:word16], Mem497[ss:sp_486 - 2:word16], Mem497[ss:sp_486:word16], out bp, out si_164, out di_163, out ds_161)
	word16 sp_507 = <invalid>
	sp_296 = sp_507 + 0x0008
	ax_330 = Mem497[ds_161:0x2A05:word16]
	dx_324 = Mem497[ds_161:0x2A03:word16]
	branch ax_330 >=u Mem497[ds_161:0x2A09:word16] l0800_0F4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F4C:
	branch ax_330 != Mem497[ds_161:0x2A09:word16] l0800_0F57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F4E:
	branch dx_324 >=u Mem497[ds_161:0x2A07:word16] l0800_0F57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F57:
	branch Mem497[ds_161:0x2A15:word16] != 0x0000 l0800_0F61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F61:
	Mem528[ss:sp_507 + 0x0006:word16] = Mem497[ds_161:0x29E5:word16]
	Mem531[ss:sp_507 + 0x0004:word16] = Mem528[ds_161:0x29E3:word16]
	fn0800_BA67(ds_161, Mem531[ss:sp_507 + 0x0004:segptr32])
	Mem544[ss:sp_507 + 0x0006:word16] = Mem531[ds_161:0x29E1:word16]
	Mem547[ss:sp_507 + 0x0004:word16] = Mem544[ds_161:0x29DF:word16]
	fn0800_BA67(ds_161, Mem547[ss:sp_507 + 0x0004:segptr32])
	Mem560[ss:sp_507 + 0x0006:word16] = Mem547[ds_161:0x29E1:word16]
	Mem563[ss:sp_507 + 0x0004:word16] = Mem560[ds_161:0x29DF:word16]
	Mem567[ss:sp_507 + 0x0002:word16] = 0x524E
	Mem569[ss:sp_507:word16] = 0x4300
	selector ds_574
	word16 dx_1016
	word16 di_1017
	fn0800_409C(ds_161, Mem569[ss:sp_507:word16], Mem569[ss:sp_507 + 2:word16], Mem569[ss:sp_507 + 4:word32], out dx_1016, out di_1017, out ds_574)
	Mem585[ss:sp_507 + 0x0006:word16] = Mem569[ds_574:0x29E1:word16]
	Mem588[ss:sp_507 + 0x0004:word16] = Mem585[ds_574:0x29DF:word16]
	Mem591[ss:sp_507 + 0x0002:word16] = Mem588[ds_574:0x2A09:word16]
	Mem594[ss:sp_507:word16] = Mem591[ds_574:0x2A07:word16]
	selector ds_599
	word16 dx_1018
	word16 di_1019
	fn0800_409C(ds_574, Mem594[ss:sp_507:word16], Mem594[ss:sp_507 + 2:word16], Mem594[ss:sp_507 + 4:word32], out dx_1018, out di_1019, out ds_599)
	Mem610[ss:sp_507 + 0x0006:word16] = Mem594[ds_599:0x2A09:word16]
	Mem613[ss:sp_507 + 0x0004:word16] = Mem610[ds_599:0x2A07:word16]
	Mem616[ss:sp_507 + 0x0002:word16] = Mem613[ds_599:0x29E1:word16]
	Mem619[ss:sp_507:word16] = Mem616[ds_599:0x29DF:word16]
	Mem622[ss:sp_507 - 2:word16] = Mem619[ds_599:0x29E5:word16]
	Mem625[ss:sp_507 - 4:word16] = Mem622[ds_599:0x29E3:word16]
	word16 sp_635 = <invalid>
	word16 si_1020
	ax_330 = fn0800_3B0A(ds_599, Mem625[ss:sp_507 + 4:word16], Mem625[ss:sp_507 + 6:word16], out dx_324, out bp, out si_1020, out di_163, out ds_161)
	sp_296 = sp_635 + 0x000C
	si_164 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F5E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F54:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F49:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F23:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FF4:
	ax_330 = fn0800_6AD4(bp, 0x0000, ds_161, out dx_324, out bp, out di_163, out ds_161)
	si_164 = ax_330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EE5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1007:
	word16 sp_665 = sp_296 - 2
	Mem667[ss:sp_665:word16] = Mem662[ds_161:0x29E1:word16]
	Mem670[ss:sp_665 - 2:word16] = Mem667[ds_161:0x29DF:word16]
	fn0800_4194(ds_161, Mem670[ss:sp_665 - 2:word32])
	Mem682[ds_161:0x2A05:word16] = dx_324
	Mem686[ds_161:0x2A03:word16] = ax_330
	sp_296 = sp_665 + 0x0002
	word16 ax_687 = Mem686[ds_161:0x2A05:word16]
	word16 dx_688 = Mem686[ds_161:0x2A03:word16]
	branch ax_687 <u Mem686[ds_161:0x2A09:word16] l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1029:
	branch ax_687 != Mem686[ds_161:0x2A09:word16] l0800_1031
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_102B:
	branch dx_688 <u Mem686[ds_161:0x2A07:word16] l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1031:
	branch Mem686[ds_161:0x2A15:word16] != 0x0000 l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1038:
	word16 dx_699 = Mem686[ds_161:0x2A07:word16]
	Mem700[ds_161:0x2A05:word16] = Mem686[ds_161:0x2A09:word16]
	Mem701[ds_161:0x2A03:word16] = dx_699
	si_164 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1049:
	branch si_164 != 0x0004 l0800_105C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_104E:
	word16 dx_712 = Mem710[ds_161:0x2A07:word16]
	Mem713[ds_161:0x2A05:word16] = Mem710[ds_161:0x2A09:word16]
	Mem714[ds_161:0x2A03:word16] = dx_712
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ED6:
	si_164 = 0x000E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EC9:
	si_164 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_105C:
	branch Mem718[ds_161:0x427E:byte] == 0x00 l0800_10B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1063:
	branch si_164 == 0x0003 l0800_106D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1068:
	branch si_164 != 0x0004 l0800_10B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_106D:
	word16 dx_729 = Mem718[ds_161:0x2A07:word16]
	Mem730[ds_161:0x2A05:word16] = Mem718[ds_161:0x2A09:word16]
	Mem731[ds_161:0x2A03:word16] = dx_729
	word16 sp_737 = sp_296 - 2
	Mem742[ss:sp_737:word16] = Mem731[ds_161:0x29E5:word16]
	Mem745[ss:sp_737 - 2:word16] = Mem742[ds_161:0x29E3:word16]
	fn0800_BA67(ds_161, Mem745[ss:sp_737 - 2:segptr32])
	Mem758[ss:sp_737:word16] = Mem745[ds_161:0x29E1:word16]
	Mem761[ss:sp_737 - 2:word16] = Mem758[ds_161:0x29DF:word16]
	fn0800_BA67(ds_161, Mem761[ss:sp_737 - 2:segptr32])
	Mem774[ss:sp_737:word16] = Mem761[ds_161:0x2A09:word16]
	Mem777[ss:sp_737 - 2:word16] = Mem774[ds_161:0x2A07:word16]
	Mem780[ss:sp_737 - 4:word16] = Mem777[ds_161:0x29E1:word16]
	Mem783[ss:sp_737 - 6:word16] = Mem780[ds_161:0x29DF:word16]
	Mem786[ss:sp_737 - 8:word16] = Mem783[ds_161:0x29E5:word16]
	Mem789[ss:sp_737 - 10:word16] = Mem786[ds_161:0x29E3:word16]
	word16 dx_1013
	word16 si_1014
	fn0800_3B0A(ds_161, Mem789[ss:sp_737 - 2:word16], Mem789[ss:sp_737:word16], out dx_1013, out bp, out si_1014, out di_163, out ds_161)
	word16 sp_799 = <invalid>
	sp_296 = sp_799 + 0x000C
	si_164 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10B7:
	word16 sp_812 = sp_296 - 2
	Mem814[ss:sp_812:word16] = Mem809[ds_161:0x29E5:word16]
	Mem817[ss:sp_812 - 2:word16] = Mem814[ds_161:0x29E3:word16]
	selector ds_823
	word16 cx_1009
	word16 dx_1010
	fn0800_A614(ds_161, Mem817[ss:sp_812 - 2:segptr32], out cx_1009, out dx_1010, out ds_823)
	Mem832[ss:sp_812:word16] = Mem817[ds_823:0x29E1:word16]
	Mem835[ss:sp_812 - 2:word16] = Mem832[ds_823:0x29DF:word16]
	word16 cx_1011
	word16 dx_1012
	fn0800_A614(ds_823, Mem835[ss:sp_812 - 2:segptr32], out cx_1011, out dx_1012, out ds_161)
	branch si_164 <= 0x0002 l0800_10E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E5:
	si_164 = fn0800_37DF(si_164, di_163, ds_161, out ds_161)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10D8:
	Mem871[ss:sp_812:word16] = ds_161
	Mem874[ss:sp_812 - 2:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_161, Mem874[ss:sp_812 - 2:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E8:
	word16 sp_885 = sp_296 - 2
	Mem888[ss:sp_885:word16] = ds_161
	Mem891[ss:sp_885 - 2:word16] = 0x4541
	Mem894[ss:sp_885 - 4:word16] = si_164
	cx_160 = fn0800_0ABC(di_163, ds_161, Mem894[ss:sp_885 - 4:word16], Mem894[ss:sp_885 - 2:word32], out dx_118, out di_163)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E86:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_112D(word16 cx, word16 dx, word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds dx
// Trashed: SCZDOP bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_112D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_112D:
	word16 bx_18 = Mem17[ds:0x2A25:word16]
	word16 di_597
	word16 si_596
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08F0), out si_596, out di_597)
	branch Mem32[ds:0x2E4F:word16] == 0x0000 l0800_116F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1160:
	word16 di_599
	word16 si_598
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08FE), out si_598, out di_599)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_116F:
	word16 di_113
	word16 si_112
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x0913), out si_112, out di_113)
	branch Mem71[ds:0x2A25:word16] == 0x0001 l0800_1184
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1184:
	cx = fn0800_3678(ds, SEQ(ds, 0x427E), out dx, out si_112, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1181:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12C2:
	byte ch_600
	word16 dx_119
	selector ds_122
	branch fn0800_2DE2(cx, dx, si_112, di_113, ds, SEQ(ds, 0x4541), out ch_600, out dx_119, out ds_122) == 0x0000 l0800_12D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D4:
	dsOut = ds_122
	return dx_119
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_112D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1192:
	branch fn0800_388C(fn0800_3764(si_112, di_113, ds_122), ds_122, out cx, out dx, out si_112, out di_113, out ds) != 0x0000 l0800_119F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_119F:
	word16 dx_172
	word16 ax_169 = fn0800_0C93(si_112, di_113, ds, SEQ(ds, 0x4541), out dx_172)
	fn0800_4194(ds, SEQ(Mem168[ds:0x29E5:word16], Mem184[ds:0x29E3:word16]))
	Mem196[ds:0x2A05:word16] = dx_172
	Mem197[ds:0x2A03:word16] = ax_169
	word16 sp_195 = fp - 0x0002
	word16 dx_198 = dx_172
	branch dx_172 >u 0x0000 l0800_11CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11C3:
	branch Test(ULT,false) l0800_11CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11C5:
	branch ax_169 >=u 0x0012 l0800_11CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11CF:
	word16 bx_207 = Mem197[ds:0x2A23:word16]
	branch bx_207 >u 0x0005 l0800_1243
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11D8:
	switch (bx_207 << 0x0001) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1229:
	ax_169 = fn0800_4BB1(ax_169, dx_172, ds, out dx_198, out bp, out di_113, out ds)
	si_112 = ax_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1208:
	selector ds_240
	word16 dx_241
	word16 ax_236 = fn0800_3F0A(ds, SEQ(Mem197[ds:0x29E5:word16], Mem232[ds:0x29E3:word16]), out dx_241, out ds_240)
	sp_195 = fp - 0x0002
	branch ax_236 != 0x4D5A l0800_1222
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1222:
	ax_169 = fn0800_4B97(ax_236, dx_241, ds_240, out dx_198, out bp, out di_113, out ds)
	si_112 = ax_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_121B:
	ax_169 = fn0800_46FE(ds_240, out dx_198, out bp, out di_113, out ds)
	sp_195 = <invalid>
	si_112 = ax_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1237:
	ax_169 = fn0800_518F(ax_169, dx_172, ds, out dx_198, out bp, out di_113, out ds)
	si_112 = ax_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_123E:
	ax_169 = fn0800_51A9(ds, out dx_198, out bp, out di_113, out ds)
	sp_195 = <invalid>
	si_112 = ax_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11DF:
	ax_169 = fn0800_8CAA(ax_169, 0x08, fn0800_3F58(ds, SEQ(Mem197[ds:0x29E5:word16], Mem310[ds:0x29E3:word16]), out di_113, out ds), out dx_198)
	sp_195 = <invalid>
	branch dx_198 != 0x0052 l0800_1203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11F7:
	branch ax_169 != 0x4E43 l0800_1203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1203:
	si_112 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11FC:
	ax_169 = fn0800_5374(ds, out dx_198, out bp, out di_113, out ds)
	sp_195 = <invalid>
	si_112 = ax_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1230:
	ax_169 = fn0800_4C55(ax_169, bp, ds, out dx_198, out bp, out di_113, out ds)
	si_112 = ax_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11CA:
	si_112 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1243:
	word16 sp_383 = sp_195 - 2
	Mem387[ss:sp_383:word16] = Mem376[ds:0x29E1:word16]
	Mem390[ss:sp_383 - 2:word16] = Mem387[ds:0x29DF:word16]
	fn0800_4194(ds, Mem390[ss:sp_383 - 2:word32])
	Mem403[ds:0x2A09:word16] = dx_198
	Mem407[ds:0x2A07:word16] = ax_169
	Mem410[ss:sp_383:word16] = Mem407[ds:0x29E5:word16]
	Mem413[ss:sp_383 - 2:word16] = Mem410[ds:0x29E3:word16]
	fn0800_4194(ds, Mem413[ss:sp_383 - 2:word32])
	Mem422[ds:0x2A05:word16] = dx_198
	Mem423[ds:0x2A03:word16] = ax_169
	branch si_112 == 0x0000 l0800_127F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1271:
	word16 dx_431 = Mem423[ds:0x2A03:word16]
	Mem432[ds:0x2A09:word16] = Mem423[ds:0x2A05:word16]
	Mem433[ds:0x2A07:word16] = dx_431
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_127F:
	Mem440[ss:sp_383:word16] = Mem435[ds:0x29E5:word16]
	Mem443[ss:sp_383 - 2:word16] = Mem440[ds:0x29E3:word16]
	word16 cx_601
	word16 dx_602
	selector ds_449
	fn0800_A614(ds, Mem443[ss:sp_383 - 2:segptr32], out cx_601, out dx_602, out ds_449)
	Mem458[ss:sp_383:word16] = Mem443[ds_449:0x29E1:word16]
	Mem461[ss:sp_383 - 2:word16] = Mem458[ds_449:0x29DF:word16]
	word16 dx_604
	word16 cx_603
	fn0800_A614(ds_449, Mem461[ss:sp_383 - 2:segptr32], out cx_603, out dx_604, out ds)
	branch Mem461[ds:0x2A25:word16] == 0x0002 l0800_12A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12A2:
	branch si_112 == 0x0000 l0800_12B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12B3:
	si_112 = fn0800_37DF(si_112, di_113, ds, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12A6:
	Mem502[ss:sp_383:word16] = ds
	Mem505[ss:sp_383 - 2:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds, Mem505[ss:sp_383 - 2:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12B6:
	word16 sp_516 = sp_195 - 2
	Mem519[ss:sp_516:word16] = ds
	Mem522[ss:sp_516 - 2:word16] = 0x4541
	Mem526[ss:sp_516 - 4:word16] = si_112
	cx = fn0800_0ABC(di_113, ds, Mem526[ss:sp_516 - 4:word16], Mem526[ss:sp_516 - 2:word32], out dx, out di_113)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_119C:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_12E2(word16 cx, word16 dx, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_12E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E2:
	word16 bx_22 = Mem21[ds:0x2A25:word16]
	word16 di_1961
	word16 si_1960
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, SEQ(ds, 0x0916), out si_1960, out di_1961)
	branch Mem36[ds:0x2E4F:word16] == 0x0000 l0800_1321
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1312:
	word16 di_1966
	word16 si_1965
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, SEQ(ds, 0x0925), out si_1965, out di_1966)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1321:
	word16 di_1963
	word16 si_1962
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, SEQ(ds, 0x093A), out si_1962, out di_1963)
	word16 cx_1964
	word16 dx_103
	selector ds_102
	word16 ax_99 = fn0800_AA7E(ds, SEQ(ds, 0x4348), SEQ(ds, 0x093D), out cx_1964, out dx_103, out ds_102)
	Mem110[ds_102:0x29D1:word16] = dx_103
	Mem111[ds_102:0x29CF:word16] = ax_99
	word16 ax_112 = Mem111[ds_102:0x2A25:word16]
	branch ax_112 == 0x0003 l0800_1353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1353:
	branch (Mem111[ds_102:0x29CF:word16] | Mem111[ds_102:0x29D1:word16]) == 0x0000 l0800_135F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_135F:
	word16 cx_1968
	word16 dx_1969
	word16 bx_1970
	word16 si_1971
	word16 di_1972
	selector es_1973
	fn0800_0D24(ds_102, 0x0007, SEQ(ds_102, 0x4348), out cx_1968, out dx_1969, out bx_1970, out si_1971, out di_1972, out es_1973, out ds_102)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_135C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_134B:
	branch ax_112 == 0x0004 l0800_1371
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1371:
	branch (Mem111[ds_102:0x29CF:word16] | Mem111[ds_102:0x29D1:word16]) == 0x0000 l0800_13C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_137A:
	word16 di_1975
	word16 cx_1974
	branch fn0800_3E27(ds_102, SEQ(Mem111[ds_102:0x29D1:word16], Mem152[ds_102:0x29CF:word16]), out cx_1974, out dx_103, out di_1975, out ds_102) != 0x4D5A l0800_13BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13BA:
	Mem170[ds_102:0x29D1:word16] = 0x0000
	Mem171[ds_102:0x29CF:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_138D:
	word16 cx_1976
	word16 dx_1977
	word16 bx_1978
	fn0800_ACB3(ds_102, SEQ(Mem181[ds_102:0x29D1:word16], Mem184[ds_102:0x29CF:word16]), 0x00000000, 0x0002, out cx_1976, out dx_1977, out bx_1978)
	word16 ax_205 = fn0800_AD2F(ds_102, SEQ(Mem187[ds_102:0x29D1:word16], Mem201[ds_102:0x29CF:word16]), out dx_103)
	Mem216[ds_102:0x29ED:word16] = dx_103
	Mem217[ds_102:0x29EB:word16] = ax_205
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C6:
	branch (Mem219[ds_102:0x29CF:word16] | Mem219[ds_102:0x29D1:word16]) != 0x0000 l0800_13F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13CF:
	word16 si_1990
	word16 di_1991
	fn0800_4234(ds_102, SEQ(ds_102, 0x4348), SEQ(ds_102, 0x0941), out si_1990, out di_1991, out ds_102)
	Mem250[ds_102:0x29D1:word16] = dx_103
	Mem251[ds_102:0x29CF:word16] = 0x4348
	Mem252[ds_102:0x29ED:word16] = 0x0000
	Mem253[ds_102:0x29EB:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13F2:
	byte cl_1982
	word16 dx_1983
	fn0800_2CCF(ds_102, SEQ(ss, fp - 0x0068), 0x0004, 0x0000, out cl_1982, out dx_1983)
	byte cl_1984
	word16 dx_1985
	fn0800_2CCF(ds_102, SEQ(ss, fp - 0x0068), 0x0004, 0x0000, out cl_1984, out dx_1985)
	selector ds_345
	word16 di_1987
	word16 si_1986
	fn0800_4152(ds_102, SEQ(ss, fp - 0x0070), 0x000C, 0x0000, SEQ(Mem321[ds_102:0x29D1:word16], Mem324[ds_102:0x29CF:word16]), out si_1986, out di_1987, out ds_345)
	word16 dx_1988
	word16 di_1989
	fn0800_409C(ds_345, Mem363[ds_345:0x29EB:word16], Mem360[ds_345:0x29ED:word16], SEQ(Mem340[ds_345:0x29D1:word16], Mem357[ds_345:0x29CF:word16]), out dx_1988, out di_1989, out ds_102)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1350:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1478:
	word16 sp_397 = <invalid>
	word16 si_1967
	word16 dx_394
	selector ds_393
	word16 bp_1765
	word16 di_1770
	word16 cx_1775 = fn0800_1CF6(ds_102, 0x0000, out dx_394, out bp_1765, out si_1967, out di_1770, out ds_393)
	word16 sp_402 = sp_397 + 0x0002
	word16 si_403 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1527:
	word16 sp_407 = sp_402 - 2
	Mem410[ss:sp_407:word16] = ds_393
	Mem413[ss:sp_407 - 2:word16] = 0x4541
	sp_402 = sp_407 + 0x0002
	word16 dx_1980
	byte ch_1979
	branch fn0800_2DE2(cx_1775, dx_394, si_403, di_1770, ds_393, Mem413[ss:sp_407 - 2:segptr32], out ch_1979, out dx_1980, out ds_393) == 0x0000 l0800_1539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1536:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1486:
	Mem437[ss:sp_407:word16] = ds_393
	Mem440[ss:sp_407 - 2:word16] = 0x4541
	Mem442[ss:sp_407 - 4:word16] = ss
	Mem446[ss:sp_407 - 6:word16] = bp_1765 - 0x006E
	word16 bx_1981
	fn0800_3509(si_403, di_1770, Mem446[ss:sp_407 - 6:word16], Mem446[ss:sp_407 - 4:selector], Mem446[ss:sp_407 - 2:word32], out bx_1981)
	Mem460[ss:sp_407:word16] = ds_393
	Mem463[ss:sp_407 - 2:word16] = 0x4541
	Mem465[ss:sp_407 - 4:word16] = ss
	Mem468[ss:sp_407 - 6:word16] = bp_1765 - 0x0084
	fn0800_35A3(si_403, di_1770, Mem468[ss:sp_407 - 6:word16], Mem468[ss:sp_407 - 4:selector], Mem468[ss:sp_407 - 2:word32])
	Mem482[ss:sp_407:word16] = ss
	Mem485[ss:sp_407 - 2:word16] = bp_1765 - 0x006E
	word16 dx_489
	word16 ax_486 = fn0800_283D(ds_393, Mem485[ss:sp_407 - 2:segptr32], out dx_489)
	Mem496[ss:bp_1765 - 0x0002:word16] = dx_489
	Mem497[ss:bp_1765 - 0x0004:word16] = ax_486
	branch (ax_486 | dx_489) != 0x0000 l0800_14CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14BC:
	Mem503[ss:sp_407:word16] = ss
	Mem506[ss:sp_407 - 2:word16] = bp_1765 - 0x006E
	word16 dx_512
	word16 ax_507 = fn0800_1F5C(ds_393, Mem506[ss:sp_407 - 2:segptr32], out dx_512, out di_1770, out ds_393)
	Mem521[ss:bp_1765 - 0x0002:word16] = dx_512
	Mem522[ss:bp_1765 - 0x0004:word16] = ax_507
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14CD:
	byte ch_1772
	word16 sp_528 = sp_402 - 2
	Mem529[ss:sp_528:word16] = Mem525[ss:bp_1765 - 0x0002:word16]
	Mem532[ss:sp_528 - 2:word16] = Mem529[ss:bp_1765 - 0x0004:word16]
	Mem534[ss:sp_528 - 4:word16] = ss
	Mem537[ss:sp_528 - 6:word16] = bp_1765 - 0x0084
	word16 dx_541
	word16 ax_538 = fn0800_2931(Mem537[ss:sp_528 - 6:segptr32], Mem537[ss:sp_528 - 2:segptr32], out dx_541)
	Mem548[ss:bp_1765 - 0x0006:word16] = dx_541
	Mem549[ss:bp_1765 - 0x0008:word16] = ax_538
	branch (ax_538 | dx_541) != 0x0000 l0800_14FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14FD:
	Mem556[ss:sp_528:word16] = Mem549[ss:bp_1765 - 0x0006:word16]
	Mem559[ss:sp_528 - 2:word16] = Mem556[ss:bp_1765 - 0x0008:word16]
	word16 sp_570 = <invalid>
	word16 si_1992
	ch_1772 = SLICE((uint16) (uint8) fn0800_23EC(ds_393, Mem559[ss:sp_528 - 2:segptr32], out bp_1765, out si_1992, out di_1770, out ds_393), byte, 8) (alias)
	sp_402 = sp_570 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14E9:
	Mem581[ss:sp_528:word16] = Mem549[ss:bp_1765 - 0x0002:word16]
	Mem584[ss:sp_528 - 2:word16] = Mem581[ss:bp_1765 - 0x0004:word16]
	Mem586[ss:sp_528 - 4:word16] = ss
	Mem589[ss:sp_528 - 6:word16] = bp_1765 - 0x0084
	ch_1772 = SLICE((uint16) (uint8) fn0800_2085(ds_393, Mem589[ss:sp_528 - 6:segptr32], Mem589[ss:sp_528 - 2:segptr32]), byte, 8) (alias)
	sp_402 = sp_528 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1509:
	ptr32 es_bx_604 = Mem603[ds_393:0x2E51:segptr32]
	dx_394 = (uint16) (uint8) Mem603[es_bx_604 + 0x0005:byte] (alias)
	si_403 = 0x0001
	cx_1775 = SEQ(ch_1772, 0x08) (alias)
	branch ((uint16) (uint8) Mem603[es_bx_604 + 0x0004:byte] << 0x08) + dx_394 >=u 0xFF8C l0800_1539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1539:
	branch si_403 != 0x0000 l0800_1551
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1551:
	selector ds_630
	fn0800_1E5E(ds_393, out ds_630)
	word16 sp_642 = sp_402 - 2
	Mem643[ss:sp_642:word16] = 0x0001
	selector ds_649
	word16 dx_1993
	word16 si_1994
	word16 di_1995
	word16 bp_1328
	word16 cx_647 = fn0800_1CF6(ds_630, Mem643[ss:sp_642:word16], out dx_1993, out bp_1328, out si_1994, out di_1995, out ds_649)
	word16 sp_653 = <invalid>
	Mem661[ss:sp_653:word16] = 0x0001
	Mem666[ss:sp_653 - 2:word16] = 0x0000
	fn0800_2DBF(ds_649, Mem666[ss:sp_653 - 2:word16], Mem666[ss:sp_653:word16])
	word16 dx_1649 = Mem666[ds_649:0x29CF:word16]
	Mem672[ds_649:0x29E1:word16] = Mem666[ds_649:0x29D1:word16]
	Mem673[ds_649:0x29DF:word16] = dx_1649
	Mem675[ss:sp_653:word16] = ds_649
	Mem678[ss:sp_653 - 2:word16] = 0x0945
	Mem680[ss:sp_653 - 4:word16] = ds_649
	Mem683[ss:sp_653 - 6:word16] = 0x4477
	word16 di_1996
	fn0800_37BE(cx_647, dx_1649, ds_649, Mem683[ss:sp_653 - 6:word32], out di_1996)
	Mem697[ss:sp_653:word16] = ds_649
	Mem700[ss:sp_653 - 2:word16] = 0x0941
	Mem702[ss:sp_653 - 4:word16] = ds_649
	Mem705[ss:sp_653 - 6:word16] = 0x4477
	word16 di_1629
	word16 si_1201
	selector ds_1606
	word16 cx_1659 = fn0800_4234(ds_649, Mem705[ss:sp_653 - 6:word32], Mem705[ss:sp_653 - 2:word32], out si_1201, out di_1629, out ds_1606)
	Mem718[ds_1606:0x29DD:word16] = dx_1649
	Mem719[ds_1606:0x29DB:word16] = 0x4477
	word16 sp_1638 = sp_653 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1897:
	word16 sp_721 = sp_1638 - 2
	Mem724[ss:sp_721:word16] = ds_1606
	Mem727[ss:sp_721 - 2:word16] = 0x4541
	word16 sp_1668 = sp_721 + 0x0002
	word16 dx_735
	byte ch_1998
	branch fn0800_2DE2(cx_1659, dx_1649, si_1201, di_1629, ds_1606, Mem727[ss:sp_721 - 2:segptr32], out ch_1998, out dx_735, out ds_1606) == 0x0000 l0800_18A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15A3:
	Mem751[ss:sp_721:word16] = ds_1606
	Mem754[ss:sp_721 - 2:word16] = 0x093D
	Mem756[ss:sp_721 - 4:word16] = ds_1606
	Mem759[ss:sp_721 - 6:word16] = 0x4541
	word16 di_764
	word16 si_765
	selector ds_1287
	fn0800_4234(ds_1606, Mem759[ss:sp_721 - 6:word32], Mem759[ss:sp_721 - 2:word32], out si_765, out di_764, out ds_1287)
	Mem772[ds_1287:0x29E5:word16] = dx_735
	Mem773[ds_1287:0x29E3:word16] = 0x4541
	Mem775[ss:sp_721:word16] = ds_1287
	Mem778[ss:sp_721 - 2:word16] = 0x4541
	Mem780[ss:sp_721 - 4:word16] = ss
	Mem784[ss:sp_721 - 6:word16] = bp_1328 - 0x006E
	word16 bx_2002
	fn0800_3509(si_765, di_764, Mem784[ss:sp_721 - 6:word16], Mem784[ss:sp_721 - 4:selector], Mem784[ss:sp_721 - 2:word32], out bx_2002)
	Mem798[ss:sp_721:word16] = ds_1287
	Mem801[ss:sp_721 - 2:word16] = 0x4541
	Mem803[ss:sp_721 - 4:word16] = ss
	Mem806[ss:sp_721 - 6:word16] = bp_1328 - 0x0084
	fn0800_35A3(si_765, di_764, Mem806[ss:sp_721 - 6:word16], Mem806[ss:sp_721 - 4:selector], Mem806[ss:sp_721 - 2:word32])
	Mem820[ss:sp_721:word16] = ds_1287
	Mem823[ss:sp_721 - 2:word16] = 0x4541
	word16 dx_2003
	fn0800_0C93(si_765, di_764, ds_1287, Mem823[ss:sp_721 - 2:word32], out dx_2003)
	Mem838[ss:sp_721:word16] = ss
	Mem841[ss:sp_721 - 2:word16] = bp_1328 - 0x006E
	word16 dx_845
	word16 ax_842 = fn0800_283D(ds_1287, Mem841[ss:sp_721 - 2:segptr32], out dx_845)
	Mem854[ss:sp_721:word16] = dx_845
	Mem856[ss:sp_721 - 2:word16] = ax_842
	Mem858[ss:sp_721 - 4:word16] = ss
	Mem861[ss:sp_721 - 6:word16] = bp_1328 - 0x0084
	word16 dx_865
	word16 ax_862 = fn0800_2931(Mem861[ss:sp_721 - 6:segptr32], Mem861[ss:sp_721 - 2:segptr32], out dx_865)
	Mem873[ss:bp_1328 - 0x0006:word16] = dx_865
	Mem874[ss:bp_1328 - 0x0008:word16] = ax_862
	Mem877[ss:sp_721:word16] = Mem874[ds_1287:0x29D1:word16]
	Mem880[ss:sp_721 - 2:word16] = Mem877[ds_1287:0x29CF:word16]
	fn0800_4194(ds_1287, Mem880[ss:sp_721 - 2:word32])
	Mem894[ds_1287:0x29E9:word16] = dx_865 - (ax_862 <u 0x0004)
	Mem895[ds_1287:0x29E7:word16] = ax_862 - 0x0004
	int32 dx_ax_897 = (int32) Mem895[ds_1287:0x29E9:word16]
	word16 dx_2004
	word16 ax_901 = fn0800_8C8A(SLICE(dx_ax_897, word16, 0), 0x08, SLICE(dx_ax_897, word16, 16), out dx_2004)
	ptr32 es_di_910 = Mem895[ss:bp_1328 - 0x0008:segptr32]
	word16 sp_905 = <invalid>
	Mem912[ss:sp_905 - 2:word16] = ax_901
	selector es_1788 = SLICE(es_di_910, selector, 16)
	word16 di_1789 = SLICE(es_di_910, word16, 0)
	word16 cx_916 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1632:
	branch cx_916 == 0x0000 l0800_1634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1632_1:
	di_1789 = di_1789 + 0x0001
	cx_916 = cx_916 - 0x0001
	branch Mem912[es_1788:di_1789:byte] == 0x00 l0800_1632
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1634:
	word16 cx_927 = ~cx_916
	word16 di_2027 = di_1789 - cx_927
	bool Z_940 = SLICE(cond(di_2027), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163A:
	branch cx_927 == 0x0000 l0800_163C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163A_2:
	Z_940 = SLICE(cond(0x00 - Mem912[es_1788:di_2027:byte]), bool, 2) (alias)
	di_2027 = di_2027 + 0x0001
	cx_927 = cx_927 - 0x0001
	branch Mem912[es_1788:di_2027:byte] == 0x00 l0800_163A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163C:
	branch Z_940 l0800_1645
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163E:
	di_2027 = 0x0001
	es_1788 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1645:
	Mem971[es_1788:di_2027:byte] = Mem912[ss:sp_905 + 0x0002:byte]
	ptr32 es_di_984 = Mem971[ss:bp_1328 - 0x0008:segptr32]
	Mem987[ss:sp_905 - 2:word16] = SLICE((int32) Mem971[ds_1287:0x29E9:word16], word16, 0)
	selector es_1023 = SLICE(es_di_984, selector, 16)
	word16 di_1004 = SLICE(es_di_984, word16, 0)
	word16 cx_1001 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165C:
	branch cx_1001 == 0x0000 l0800_165E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165C_1:
	di_1004 = di_1004 + 0x0001
	cx_1001 = cx_1001 - 0x0001
	branch Mem987[es_1023:di_1004:byte] == 0x00 l0800_165C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165E:
	word16 cx_1002 = ~cx_1001
	word16 di_1005 = di_1004 - cx_1002
	bool Z_1015 = SLICE(cond(di_1005), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1664:
	branch cx_1002 == 0x0000 l0800_1666
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1664_2:
	Z_1015 = SLICE(cond(0x00 - Mem987[es_1023:di_1005:byte]), bool, 2) (alias)
	di_1005 = di_1005 + 0x0001
	cx_1002 = cx_1002 - 0x0001
	branch Mem987[es_1023:di_1005:byte] == 0x00 l0800_1664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1666:
	branch Z_1015 l0800_166F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1668:
	di_1005 = 0x0001
	es_1023 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_166F:
	Mem1047[es_1023:di_1005 + 0x0001:byte] = Mem987[ss:sp_905 + 0x0002:byte]
	word16 dx_1059
	word16 ax_1056 = fn0800_8C8A(Mem1047[ds_1287:0x29E7:word16], 0x08, Mem1047[ds_1287:0x29E9:word16], out dx_1059)
	ptr32 es_di_1070 = Mem1047[ss:bp_1328 - 0x0008:segptr32]
	word16 sp_1060 = <invalid>
	Mem1072[ss:sp_1060 - 2:word16] = ax_1056
	byte dh_1236 = SLICE(dx_1059, byte, 8)
	selector es_1108 = SLICE(es_di_1070, selector, 16)
	word16 di_1080 = SLICE(es_di_1070, word16, 0)
	word16 cx_1076 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_168E:
	branch cx_1076 == 0x0000 l0800_1690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_168E_1:
	di_1080 = di_1080 + 0x0001
	cx_1076 = cx_1076 - 0x0001
	branch Mem1072[es_1108:di_1080:byte] == 0x00 l0800_168E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1690:
	word16 cx_1087 = ~cx_1076
	word16 di_1090 = di_1080 - cx_1087
	bool Z_1100 = SLICE(cond(di_1090), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1696:
	branch cx_1087 == 0x0000 l0800_1698
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1696_2:
	Z_1100 = SLICE(cond(0x00 - Mem1072[es_1108:di_1090:byte]), bool, 2) (alias)
	di_1090 = di_1090 + 0x0001
	cx_1087 = cx_1087 - 0x0001
	branch Mem1072[es_1108:di_1090:byte] == 0x00 l0800_1696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1698:
	branch Z_1100 l0800_16A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_169A:
	di_1090 = 0x0001
	es_1108 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16A1:
	Mem1131[es_1108:di_1090 + 0x0002:byte] = Mem1072[ss:sp_1060 + 0x0002:byte]
	ptr32 es_di_1137 = Mem1131[ss:bp_1328 - 0x0008:segptr32]
	selector es_1173 = SLICE(es_di_1137, selector, 16)
	word16 di_1145 = SLICE(es_di_1137, word16, 0)
	word16 cx_1141 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B3:
	branch cx_1141 == 0x0000 l0800_16B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B3_1:
	di_1145 = di_1145 + 0x0001
	cx_1141 = cx_1141 - 0x0001
	branch Mem1131[es_1173:di_1145:byte] == 0x00 l0800_16B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B5:
	word16 cx_1152 = ~cx_1141
	word16 di_1155 = di_1145 - cx_1152
	bool Z_1165 = SLICE(cond(di_1155), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BB:
	branch cx_1152 == 0x0000 l0800_16BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BB_2:
	Z_1165 = SLICE(cond(0x00 - Mem1131[es_1173:di_1155:byte]), bool, 2) (alias)
	di_1155 = di_1155 + 0x0001
	cx_1152 = cx_1152 - 0x0001
	branch Mem1131[es_1173:di_1155:byte] == 0x00 l0800_16BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BD:
	branch Z_1165 l0800_16C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BF:
	di_1155 = 0x0001
	es_1173 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16C6:
	byte dl_1192 = Mem1131[ds_1287:0x29E7:byte]
	Mem1194[es_1173:di_1155 + 0x0003:byte] = dl_1192
	Mem1199[ds_1287:0x2A05:word16] = 0x0000
	Mem1200[ds_1287:0x2A03:word16] = 0x0000
	Mem1214[ss:sp_1060 - 2:word16] = Mem1200[ds_1287:0x29E5:word16]
	Mem1217[ss:sp_1060 - 4:word16] = Mem1214[ds_1287:0x29E3:word16]
	fn0800_4194(ds_1287, Mem1217[ss:sp_1060 - 4:word32])
	Mem1238[ds_1287:0x2A09:word16] = SEQ(dh_1236, dl_1192)
	Mem1239[ds_1287:0x2A07:word16] = 0x0000
	Mem1244[ss:sp_1060 - 2:word16] = 0x0000
	Mem1247[ss:sp_1060 - 4:word16] = Mem1244[ds_1287:0x29E9:word16]
	Mem1250[ss:sp_1060 - 6:word16] = Mem1247[ds_1287:0x29E7:word16]
	Mem1253[ss:sp_1060 - 8:word16] = Mem1250[ds_1287:0x29E1:word16]
	Mem1256[ss:sp_1060 - 10:word16] = Mem1253[ds_1287:0x29DF:word16]
	word16 di_1195 = 0x0001
	si_1201 = 0x0000
	word16 cx_2005
	word16 dx_2006
	word16 bx_2007
	word16 ax_1257 = fn0800_ACB3(ds_1287, Mem1256[ss:sp_1060 - 10:segptr32], Mem1256[ss:sp_1060 - 6:ui32], Mem1256[ss:sp_1060 - 2:word16], out cx_2005, out dx_2006, out bx_2007)
	word16 sp_1266 = sp_1060
	branch Mem1256[ds_1287:0x2A09:word16] >=u 0x0000 l0800_171B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_171B:
	branch Mem1256[ds_1287:0x2A09:word16] >u 0x0000 l0800_1724
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_171D:
	branch Mem1256[ds_1287:0x2A07:word16] <=u 0x0012 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1724:
	branch Mem1256[ds_1287:0x2A21:word16] == 0x0000 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_172B:
	Mem1280[ss:sp_1060 - 2:word16] = Mem1256[ds_1287:0x29E5:word16]
	Mem1283[ss:sp_1060 - 4:word16] = Mem1280[ds_1287:0x29E3:word16]
	word16 dx_1301
	word16 ax_1298 = fn0800_8CAA(ax_1257, 0x08, fn0800_3F58(ds_1287, Mem1283[ss:sp_1060 - 4:word32], out di_1195, out ds_1287), out dx_1301)
	sp_1266 = <invalid>
	branch dx_1301 != 0x0052 l0800_1748
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1743:
	branch ax_1298 == 0x4E43 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1748:
	word16 ax_1349
	Mem1317[ss:sp_1266 - 2:word16] = Mem1283[ds_1287:0x2A09:word16]
	Mem1320[ss:sp_1266 - 4:word16] = Mem1317[ds_1287:0x2A07:word16]
	Mem1323[ss:sp_1266 - 6:word16] = Mem1320[ds_1287:0x2A09:word16]
	Mem1326[ss:sp_1266 - 8:word16] = Mem1323[ds_1287:0x2A07:word16]
	word16 di_2012
	fn0800_75EA(ds_1287, Mem1326[ss:sp_1266 - 8:word16], Mem1326[ss:sp_1266 - 6:word16], Mem1326[ss:sp_1266 - 4:word16], Mem1326[ss:sp_1266 - 2:word16], out bp_1328, out si_1201, out di_2012, out ds_1287)
	word16 sp_1336 = <invalid>
	sp_1266 = sp_1336 + 0x0008
	word16 ax_1342 = Mem1326[ds_1287:0x2A05:word16]
	word16 dx_1343 = Mem1326[ds_1287:0x2A03:word16]
	branch ax_1342 <u Mem1326[ds_1287:0x2A09:word16] l0800_1778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_176B:
	branch ax_1342 != Mem1326[ds_1287:0x2A09:word16] l0800_1773
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_176D:
	branch dx_1343 <u Mem1326[ds_1287:0x2A07:word16] l0800_1778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1778:
	ax_1349 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1773:
	ax_1349 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_177A:
	di_1195 = ax_1349
	branch ax_1349 == 0x0000 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1780:
	Mem1367[ss:sp_1336 + 0x0006:word16] = 0x0001
	word16 dx_1374 = -Mem1367[ds_1287:0x2A03:word16]
	Mem1379[ss:sp_1336 + 0x0004:word16] = -Mem1367[ds_1287:0x2A05:word16] - (dx_1374 == 0x0000)
	Mem1381[ss:sp_1336 + 0x0002:word16] = dx_1374
	Mem1384[ss:sp_1336:word16] = Mem1381[ds_1287:0x29E1:word16]
	Mem1387[ss:sp_1336 - 2:word16] = Mem1384[ds_1287:0x29DF:word16]
	word16 dx_2016
	word16 bx_2017
	word16 cx_2015
	fn0800_ACB3(ds_1287, Mem1387[ss:sp_1336 - 2:segptr32], Mem1387[ss:sp_1336 + 2:ui32], Mem1387[ss:sp_1336 + 6:word16], out cx_2015, out dx_2016, out bx_2017)
	sp_1266 = sp_1336 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1718:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A2:
	branch di_1195 != 0x0000 l0800_17A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A9:
	word16 ax_1410 = Mem1406[ds_1287:0x2A09:word16]
	word16 dx_1411 = Mem1406[ds_1287:0x2A07:word16]
	Mem1412[ds_1287:0x2A05:word16] = ax_1410
	Mem1413[ds_1287:0x2A03:word16] = dx_1411
	word16 sp_1416 = sp_1266 - 2
	Mem1418[ss:sp_1416:word16] = Mem1413[ds_1287:0x29E5:word16]
	Mem1421[ss:sp_1416 - 2:word16] = Mem1418[ds_1287:0x29E3:word16]
	fn0800_BA67(ds_1287, Mem1421[ss:sp_1416 - 2:segptr32])
	word16 sp_1430 = sp_1416 + 0x0002
	branch Mem1421[ds_1287:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17CC:
	branch Mem1421[ds_1287:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17CE:
	branch Mem1421[ds_1287:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17D5:
	Mem1442[ss:sp_1416:word16] = Mem1421[ds_1287:0x29E5:word16]
	Mem1445[ss:sp_1416 - 2:word16] = Mem1442[ds_1287:0x29E3:word16]
	word16 di_2022
	word16 dx_1463
	word16 ax_1460 = fn0800_8CAA(ax_1410, 0x08, fn0800_3F58(ds_1287, Mem1445[ss:sp_1416 - 2:word32], out di_2022, out ds_1287), out dx_1463)
	sp_1430 = <invalid>
	branch dx_1463 != 0x0052 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17ED:
	branch ax_1460 == 0x4E43 l0800_181E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17F2:
	word16 sp_1477 = sp_1430 - 2
	Mem1479[ss:sp_1477:word16] = Mem1474[ds_1287:0x29D1:word16]
	Mem1482[ss:sp_1477 - 2:word16] = Mem1479[ds_1287:0x29CF:word16]
	Mem1486[ss:sp_1477 - 4:word16] = 0x524E
	Mem1488[ss:sp_1477 - 6:word16] = 0x4300
	word16 dx_2018
	word16 di_2019
	selector ds_1493
	fn0800_409C(ds_1287, Mem1488[ss:sp_1477 - 6:word16], Mem1488[ss:sp_1477 - 4:word16], Mem1488[ss:sp_1477 - 2:word32], out dx_2018, out di_2019, out ds_1493)
	Mem1504[ss:sp_1477:word16] = Mem1488[ds_1493:0x29D1:word16]
	Mem1507[ss:sp_1477 - 2:word16] = Mem1504[ds_1493:0x29CF:word16]
	Mem1510[ss:sp_1477 - 4:word16] = Mem1507[ds_1493:0x2A09:word16]
	Mem1513[ss:sp_1477 - 6:word16] = Mem1510[ds_1493:0x2A07:word16]
	word16 di_2021
	word16 dx_2020
	fn0800_409C(ds_1493, Mem1513[ss:sp_1477 - 6:word16], Mem1513[ss:sp_1477 - 4:word16], Mem1513[ss:sp_1477 - 2:word32], out dx_2020, out di_2021, out ds_1287)
	sp_1430 = sp_1477 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_181E:
	word16 sp_1531 = sp_1430 - 2
	Mem1533[ss:sp_1531:word16] = Mem1528[ds_1287:0x2A09:word16]
	Mem1536[ss:sp_1531 - 2:word16] = Mem1533[ds_1287:0x2A07:word16]
	Mem1539[ss:sp_1531 - 4:word16] = Mem1536[ds_1287:0x29D1:word16]
	Mem1542[ss:sp_1531 - 6:word16] = Mem1539[ds_1287:0x29CF:word16]
	Mem1545[ss:sp_1531 - 8:word16] = Mem1542[ds_1287:0x29E5:word16]
	Mem1548[ss:sp_1531 - 10:word16] = Mem1545[ds_1287:0x29E3:word16]
	word16 di_2025
	word16 si_2024
	word16 dx_2023
	fn0800_3B0A(ds_1287, Mem1548[ss:sp_1531 - 2:word16], Mem1548[ss:sp_1531:word16], out dx_2023, out bp_1328, out si_2024, out di_2025, out ds_1287)
	word16 sp_1558 = <invalid>
	sp_1266 = sp_1558 + 0x000C
	si_1201 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_183F:
	word16 sp_1570 = sp_1266 - 2
	Mem1572[ss:sp_1570:word16] = Mem1567[ds_1287:0x29D1:word16]
	Mem1575[ss:sp_1570 - 2:word16] = Mem1572[ds_1287:0x29CF:word16]
	Mem1578[ss:sp_1570 - 4:word16] = Mem1575[ds_1287:0x29ED:word16]
	Mem1581[ss:sp_1570 - 6:word16] = Mem1578[ds_1287:0x29EB:word16]
	word16 dx_2008
	word16 di_1585
	selector ds_1586
	fn0800_409C(ds_1287, Mem1581[ss:sp_1570 - 6:word16], Mem1581[ss:sp_1570 - 4:word16], Mem1581[ss:sp_1570 - 2:word32], out dx_2008, out di_1585, out ds_1586)
	Mem1597[ss:sp_1570:word16] = Mem1581[ds_1586:0x29E5:word16]
	Mem1600[ss:sp_1570 - 2:word16] = Mem1597[ds_1586:0x29E3:word16]
	word16 cx_2009
	word16 dx_2010
	fn0800_A614(ds_1586, Mem1600[ss:sp_1570 - 2:segptr32], out cx_2009, out dx_2010, out ds_1606)
	Mem1614[ss:sp_1570:word16] = ds_1606
	Mem1617[ss:sp_1570 - 2:word16] = 0x4541
	Mem1625[ss:sp_1570 - 4:word16] = si_1201
	word16 dx_2011
	byte ch_1658 = SLICE(fn0800_0ABC(di_1585, ds_1606, Mem1625[ss:sp_1570 - 4:word16], Mem1625[ss:sp_1570 - 2:word32], out dx_2011, out di_1629), byte, 8)
	ptr32 es_bx_1639 = Mem1625[ds_1606:0x2E51:segptr32]
	dx_1649 = (uint16) (uint8) Mem1625[es_bx_1639 + 0x0005:byte] (alias)
	sp_1638 = sp_1570 + 0x0002
	word16 bx_1641 = SLICE(es_bx_1639, word16, 0)
	cx_1659 = SEQ(ch_1658, 0x08) (alias)
	branch ((uint16) (uint8) Mem1625[es_bx_1639 + 0x0004:byte] << 0x08) + dx_1649 <u 0xFF8C l0800_1897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188A:
	Mem1654[ss:sp_1570:word16] = ds_1606
	Mem1657[ss:sp_1570 - 2:word16] = 0x0952
	word16 si_2013
	word16 di_2014
	fn0800_B2EF(cx_1659, dx_1649, bx_1641, ds_1606, Mem1657[ss:sp_1570 - 2:word32], out si_2013, out di_2014)
	sp_1668 = sp_1570 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18A9:
	word16 sp_1674 = sp_1668 - 2
	Mem1676[ss:sp_1674:word16] = Mem1671[ds_1606:0x29DD:word16]
	Mem1679[ss:sp_1674 - 2:word16] = Mem1676[ds_1606:0x29DB:word16]
	word16 cx_1999
	word16 dx_2000
	selector ds_1685
	fn0800_A614(ds_1606, Mem1679[ss:sp_1674 - 2:segptr32], out cx_1999, out dx_2000, out ds_1685)
	Mem1693[ss:sp_1674:word16] = ds_1685
	Mem1696[ss:sp_1674 - 2:word16] = 0x4477
	fn0800_8F7F(0x77, ds_1685, Mem1696[ss:sp_1674 - 2:segptr32])
	selector ds_1710
	word16 bp_1714 = fn0800_1E5E(ds_1685, out ds_1710)
	Mem1721[ss:sp_1674:word16] = Mem1696[ds_1710:0x29D1:word16]
	Mem1724[ss:sp_1674 - 2:word16] = Mem1721[ds_1710:0x29CF:word16]
	word16 cx_2001
	word16 dx_1729
	selector ds_1730
	fn0800_A614(ds_1710, Mem1724[ss:sp_1674 - 2:segptr32], out cx_2001, out dx_1729, out ds_1730)
	bpOut = Mem1724[ss:bp_1714:word16]
	dsOut = ds_1730
	return dx_1729
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_153D:
	word16 sp_1745 = sp_402 - 2
	Mem1746[ss:sp_1745:word16] = Mem1743[ds_393:0x29D1:word16]
	Mem1749[ss:sp_1745 - 2:word16] = Mem1746[ds_393:0x29CF:word16]
	word16 cx_1997
	word16 dx_1754
	selector ds_1755
	fn0800_A614(ds_393, Mem1749[ss:sp_1745 - 2:segptr32], out cx_1997, out dx_1754, out ds_1755)
	bpOut = Mem1749[ss:bp_1765:word16]
	dsOut = ds_1755
	return dx_1754
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_12E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_18D9(word16 cx, word16 dx, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_18D9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18D9:
	word16 si_428
	word16 di_429
	fn0800_B2EF(cx, dx, Mem18[ds:0x2A25:word16] << 0x0002, ds, SEQ(ds, 0x096C), out si_428, out di_429)
	word16 dx_60
	word16 cx_430
	selector ds_101
	word16 ax_56 = fn0800_AA7E(ds, SEQ(ds, 0x4348), SEQ(ds, 0x097D), out cx_430, out dx_60, out ds_101)
	Mem67[ds_101:0x29D1:word16] = dx_60
	Mem68[ds_101:0x29CF:word16] = ax_56
	branch (ax_56 | dx_60) != 0x0000 l0800_192A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_191B:
	word16 bx_433
	word16 si_434
	word16 di_435
	selector es_436
	word16 dx_432
	word16 cx_431
	fn0800_0D24(ds_101, 0x0007, SEQ(ds_101, 0x4348), out cx_431, out dx_432, out bx_433, out si_434, out di_435, out es_436, out ds_101)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_192A:
	word16 bp_103
	word16 si_110
	word16 di_106
	selector ds_107
	word16 dx_108
	word16 cx_105 = fn0800_1CF6(ds_101, 0x0001, out dx_108, out bp_103, out si_110, out di_106, out ds_107)
	word16 sp_111 = <invalid>
	Mem121[ss:sp_111:word16] = 0x0000
	Mem123[ss:sp_111 - 2:word16] = 0x0000
	fn0800_2DBF(ds_107, Mem123[ss:sp_111 - 2:word16], Mem123[ss:sp_111:word16])
	word16 sp_125 = sp_111 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19BC:
	word16 sp_128 = sp_125 - 2
	Mem130[ss:sp_128:word16] = ss
	Mem134[ss:sp_128 - 2:word16] = bp_103 - 0x006E
	Mem136[ss:sp_128 - 4:word16] = ss
	Mem139[ss:sp_128 - 6:word16] = bp_103 - 0x0008
	Mem141[ss:sp_128 - 8:word16] = ss
	Mem144[ss:sp_128 - 10:word16] = bp_103 - 0x0004
	selector ds_156
	branch fn0800_29C5(cx_105, dx_108, si_110, di_106, ds_107, Mem144[ss:sp_128 - 10:segptr32], Mem144[ss:sp_128 - 6:segptr32], Mem144[ss:sp_128 - 2:segptr32], out ds_156) == 0x0000 l0800_19D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D8:
	selector ds_172
	word16 bp_176 = fn0800_1E5E(ds_156, out ds_172)
	Mem183[ss:sp_128:word16] = Mem144[ds_172:0x29D1:word16]
	Mem186[ss:sp_128 - 2:word16] = Mem183[ds_172:0x29CF:word16]
	word16 dx_191
	selector ds_192
	word16 cx_437
	fn0800_A614(ds_172, Mem186[ss:sp_128 - 2:segptr32], out cx_437, out dx_191, out ds_192)
	bpOut = Mem186[ss:bp_176:word16]
	dsOut = ds_192
	return dx_191
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_18D9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1940:
	Mem204[ss:sp_128:word16] = ss
	Mem207[ss:sp_128 - 2:word16] = bp_103 - 0x006E
	word16 dx_438
	fn0800_0C93(si_110, di_106, ds_156, Mem207[ss:sp_128 - 2:word32], out dx_438)
	Mem223[ss:sp_128:word16] = Mem207[ss:bp_103 - 0x0006:word16]
	Mem226[ss:sp_128 - 2:word16] = Mem223[ss:bp_103 - 0x0008:word16]
	word16 di_439
	fn0800_23EC(ds_156, Mem226[ss:sp_128 - 2:segptr32], out bp_103, out si_110, out di_439, out ds_107)
	word16 sp_236 = <invalid>
	Mem247[ss:sp_236 + 0x0002:word16] = Mem226[ss:bp_103 - 0x0006:word16]
	Mem250[ss:sp_236:word16] = Mem247[ss:bp_103 - 0x0008:word16]
	fn0800_22FE(ds_107, Mem250[ss:sp_236:segptr32])
	ptr32 es_di_262 = Mem250[ss:bp_103 - 0x0004:segptr32]
	selector es_300 = SLICE(es_di_262, selector, 16)
	word16 di_264 = SLICE(es_di_262, word16, 0) + 0x0002
	word16 cx_268 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196E:
	branch cx_268 == 0x0000 l0800_1970
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196E_1:
	di_264 = di_264 + 0x0001
	cx_268 = cx_268 - 0x0001
	branch Mem250[es_300:di_264:byte] == 0x00 l0800_196E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1970:
	word16 cx_279 = ~cx_268
	word16 di_282 = di_264 - cx_279
	bool Z_292 = SLICE(cond(di_282), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1976:
	branch cx_279 == 0x0000 l0800_1978
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1976_2:
	Z_292 = SLICE(cond(0x00 - Mem250[es_300:di_282:byte]), bool, 2) (alias)
	di_282 = di_282 + 0x0001
	cx_279 = cx_279 - 0x0001
	branch Mem250[es_300:di_282:byte] == 0x00 l0800_1976
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1978:
	branch Z_292 l0800_1981
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_197A:
	di_282 = 0x0001
	es_300 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1981:
	word16 di_303 = di_282 - 0x0001
	branch Mem250[es_300:di_303 + 0x0001:byte] != 0x00 l0800_19AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_198D:
	word16 dx_318 = Mem250[ds_107:0x2E51:word16]
	branch Mem250[ds_107:0x2E53:word16] != Mem250[ss:bp_103 - 0x0002:word16] l0800_19A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_199C:
	branch dx_318 + 0x0008 == Mem250[ss:bp_103 - 0x0004:word16] l0800_19AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19A1:
	Mem345[ss:sp_236 + 0x0002:word16] = Mem250[ss:bp_103 - 0x0002:word16]
	Mem348[ss:sp_236:word16] = Mem345[ss:bp_103 - 0x0004:word16]
	fn0800_2201(ds_107, Mem348[ss:sp_236:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19AD:
	Mem365[ss:sp_236 + 0x0002:word16] = ss
	Mem369[ss:sp_236:word16] = bp_103 - 0x006E
	Mem372[ss:sp_236 - 0x0002:word16] = 0x000D
	cx_105 = fn0800_0ABC(di_303, ds_107, Mem372[ss:sp_236 - 0x0002:word16], Mem372[ss:sp_236:word32], out dx_108, out di_106)
	sp_125 = sp_236 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_19EE(word16 cx, word16 dx, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_19EE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19EE:
	word16 di_1209
	word16 si_1208
	fn0800_B2EF(cx, dx, Mem21[ds:0x2A25:word16] << 0x0002, ds, SEQ(ds, 0x0986), out si_1208, out di_1209)
	word16 dx_63
	word16 cx_1210
	selector ds_62
	word16 ax_59 = fn0800_AA7E(ds, SEQ(ds, 0x4348), SEQ(ds, 0x0997), out cx_1210, out dx_63, out ds_62)
	Mem70[ds_62:0x29D1:word16] = dx_63
	Mem71[ds_62:0x29CF:word16] = ax_59
	branch (ax_59 | dx_63) != 0x0000 l0800_1A40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A31:
	word16 di_1215
	word16 si_1214
	word16 bx_1213
	word16 dx_1212
	selector es_1216
	word16 cx_1211
	fn0800_0D24(ds_62, 0x0007, SEQ(ds_62, 0x4348), out cx_1211, out dx_1212, out bx_1213, out si_1214, out di_1215, out es_1216, out ds_62)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A40:
	branch Mem100[ds_62:0x2A27:word16] != Mem100[ds_62:0x269A:word16] l0800_1A7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A49:
	ptr32 es_bx_112 = Mem109[ds_62:0x269C:segptr32]
	Mem116[es_bx_112 + 0x0006:word16] = ss
	Mem117[es_bx_112 + 0x0004:word16] = fp - 0x000E
	Mem118[ds_62:0x2A27:word16] = 0x0001
	Mem119[ds_62:0x269A:word16] = 0x0002
	Mem120[ds_62:0x2A1B:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A7D:
	fn0800_2DBF(ds_62, 0x0001, 0x0000)
	word16 sp_148 = <invalid>
	word16 bp_1037
	word16 si_1068
	word16 di_1102
	selector ds_1062
	word16 dx_1103
	word16 cx_1101 = fn0800_1CF6(ds_62, 0x0001, out dx_1103, out bp_1037, out si_1068, out di_1102, out ds_1062)
	word16 sp_1111 = sp_148 + 0x0002
	branch Mem138[ds_1062:0x2A25:word16] == 0x0007 l0800_1A9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A9E:
	Mem157[ss:sp_148:word16] = ds_1062
	Mem160[ss:sp_148 - 2:word16] = 0x099B
	Mem162[ss:sp_148 - 4:word16] = ds_1062
	Mem165[ss:sp_148 - 6:word16] = 0x44DC
	si_1068 = fn0800_37BE(cx_1101, dx_1103, ds_1062, Mem165[ss:sp_148 - 6:word32], out di_1102)
	sp_1111 = sp_148 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A9B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CB4:
	word16 sp_179 = sp_1111 - 2
	Mem181[ss:sp_179:word16] = ss
	Mem185[ss:sp_179 - 2:word16] = bp_1037 - 0x0072
	Mem187[ss:sp_179 - 4:word16] = ss
	Mem190[ss:sp_179 - 6:word16] = bp_1037 - 0x0008
	Mem192[ss:sp_179 - 8:word16] = ss
	Mem195[ss:sp_179 - 10:word16] = bp_1037 - 0x0004
	selector ds_207
	branch fn0800_29C5(cx_1101, dx_1103, si_1068, di_1102, ds_1062, Mem195[ss:sp_179 - 10:segptr32], Mem195[ss:sp_179 - 6:segptr32], Mem195[ss:sp_179 - 2:segptr32], out ds_207) == 0x0000 l0800_1CD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CD0:
	Mem221[ss:sp_179:word16] = Mem195[ds_207:0x29D1:word16]
	Mem224[ss:sp_179 - 2:word16] = Mem221[ds_207:0x29CF:word16]
	selector ds_230
	word16 cx_1217
	word16 dx_1194
	fn0800_A614(ds_207, Mem224[ss:sp_179 - 2:segptr32], out cx_1217, out dx_1194, out ds_230)
	branch Mem224[ds_230:0x2A25:word16] != 0x0007 l0800_1CF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CE5:
	Mem239[ss:sp_179:word16] = ds_230
	Mem242[ss:sp_179 - 2:word16] = 0x44DC
	dx_1194 = fn0800_8F7F(0xDC, ds_230, Mem242[ss:sp_179 - 2:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CF0:
	bpOut = Mem254[ss:bp_1037:word16]
	dsOut = ds_230
	return dx_1194
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_19EE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CCD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AB1:
	Mem263[ss:sp_179:word16] = ss
	Mem266[ss:sp_179 - 2:word16] = bp_1037 - 0x0072
	word16 dx_1218
	fn0800_0C93(si_1068, di_1102, ds_207, Mem266[ss:sp_179 - 2:word32], out dx_1218)
	Mem282[ss:sp_179:word16] = Mem266[ss:bp_1037 - 0x0006:word16]
	Mem285[ss:sp_179 - 2:word16] = Mem282[ss:bp_1037 - 0x0008:word16]
	selector ds_1001
	fn0800_24FE(ds_207, Mem285[ss:sp_179 - 2:segptr32], out ds_1001)
	Mem303[ss:sp_179:word16] = 0x0000
	ptr32 es_di_304 = Mem303[ss:bp_1037 - 0x0008:segptr32]
	selector es_1114 = SLICE(es_di_304, selector, 16)
	word16 di_1115 = SLICE(es_di_304, word16, 0)
	word16 cx_305 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD1:
	branch cx_305 == 0x0000 l0800_1AD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD1_1:
	di_1115 = di_1115 + 0x0001
	cx_305 = cx_305 - 0x0001
	branch Mem303[es_1114:di_1115:byte] == 0x00 l0800_1AD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD3:
	word16 cx_316 = ~cx_305
	word16 di_1230 = di_1115 - cx_316
	bool Z_329 = SLICE(cond(di_1230), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD9:
	branch cx_316 == 0x0000 l0800_1ADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD9_2:
	Z_329 = SLICE(cond(0x00 - Mem303[es_1114:di_1230:byte]), bool, 2) (alias)
	di_1230 = di_1230 + 0x0001
	cx_316 = cx_316 - 0x0001
	branch Mem303[es_1114:di_1230:byte] == 0x00 l0800_1AD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADB:
	branch Z_329 l0800_1AE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADD:
	di_1230 = 0x0001
	es_1114 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE4:
	ptr32 es_di_361 = Mem303[ss:bp_1037 - 0x0008:segptr32]
	Mem368[ss:sp_179 - 2:word16] = (int16) Mem303[es_1114:di_1230:byte] << 0x08
	selector es_1120 = SLICE(es_di_361, selector, 16)
	word16 di_1121 = SLICE(es_di_361, word16, 0)
	word16 cx_372 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFB:
	branch cx_372 == 0x0000 l0800_1AFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFB_1:
	di_1121 = di_1121 + 0x0001
	cx_372 = cx_372 - 0x0001
	branch Mem368[es_1120:di_1121:byte] == 0x00 l0800_1AFB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFD:
	word16 cx_383 = ~cx_372
	word16 di_1232 = di_1121 - cx_383
	bool Z_396 = SLICE(cond(di_1232), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B03:
	branch cx_383 == 0x0000 l0800_1B05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B03_2:
	Z_396 = SLICE(cond(0x00 - Mem368[es_1120:di_1232:byte]), bool, 2) (alias)
	di_1232 = di_1232 + 0x0001
	cx_383 = cx_383 - 0x0001
	branch Mem368[es_1120:di_1232:byte] == 0x00 l0800_1B03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B05:
	branch Z_396 l0800_1B0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B07:
	di_1232 = 0x0001
	es_1120 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B0E:
	ptr32 es_di_438 = Mem368[ss:bp_1037 - 0x0008:segptr32]
	Mem440[ss:sp_179 - 2:word16] = Mem368[ss:sp_179 - 2:word16] + (uint16) ((uint8) Mem368[es_1120:di_1232 + 0x0001:byte])
	Mem442[ss:sp_179 - 4:word16] = 0x0000
	selector es_1126 = SLICE(es_di_438, selector, 16)
	word16 di_1127 = SLICE(es_di_438, word16, 0)
	word16 cx_443 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B26:
	branch cx_443 == 0x0000 l0800_1B28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B26_1:
	di_1127 = di_1127 + 0x0001
	cx_443 = cx_443 - 0x0001
	branch Mem442[es_1126:di_1127:byte] == 0x00 l0800_1B26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B28:
	word16 cx_454 = ~cx_443
	word16 di_1234 = di_1127 - cx_454
	bool Z_467 = SLICE(cond(di_1234), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2E:
	branch cx_454 == 0x0000 l0800_1B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2E_2:
	Z_467 = SLICE(cond(0x00 - Mem442[es_1126:di_1234:byte]), bool, 2) (alias)
	di_1234 = di_1234 + 0x0001
	cx_454 = cx_454 - 0x0001
	branch Mem442[es_1126:di_1234:byte] == 0x00 l0800_1B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B30:
	branch Z_467 l0800_1B39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B32:
	di_1234 = 0x0001
	es_1126 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B39:
	ptr32 es_di_499 = Mem442[ss:bp_1037 - 0x0008:segptr32]
	Mem506[ss:sp_179 - 6:word16] = (int16) Mem442[es_1126:di_1234 + 0x0002:byte] << 0x08
	selector es_1132 = SLICE(es_di_499, selector, 16)
	word16 di_1133 = SLICE(es_di_499, word16, 0)
	word16 cx_510 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B50:
	branch cx_510 == 0x0000 l0800_1B52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B50_1:
	di_1133 = di_1133 + 0x0001
	cx_510 = cx_510 - 0x0001
	branch Mem506[es_1132:di_1133:byte] == 0x00 l0800_1B50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B52:
	word16 cx_521 = ~cx_510
	word16 di_1236 = di_1133 - cx_521
	bool Z_534 = SLICE(cond(di_1236), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B58:
	branch cx_521 == 0x0000 l0800_1B5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B58_2:
	Z_534 = SLICE(cond(0x00 - Mem506[es_1132:di_1236:byte]), bool, 2) (alias)
	di_1236 = di_1236 + 0x0001
	cx_521 = cx_521 - 0x0001
	branch Mem506[es_1132:di_1236:byte] == 0x00 l0800_1B58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B5A:
	branch Z_534 l0800_1B63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B5C:
	di_1236 = 0x0001
	es_1132 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B63:
	word16 ax_570 = Mem506[ss:sp_179 - 4:word16] + (Mem506[ss:sp_179 - 6:word16] + (uint16) ((uint8) Mem506[es_1132:di_1236 + 0x0003:byte]))
	Mem578[ss:sp_179 - 2:word16] = Mem506[ss:sp_179 - 2:word16] + (ax_570 <u 0x0000)
	Mem580[ss:sp_179 - 4:word16] = ax_570
	Mem603[ss:sp_179 - 6:word16] = Mem580[ds_1001:0x29D1:word16]
	Mem606[ss:sp_179 - 8:word16] = Mem603[ds_1001:0x29CF:word16]
	word16 bx_1220
	word16 cx_1219
	word16 dx_1029
	fn0800_ACB3(ds_1001, Mem606[ss:sp_179 - 8:segptr32], Mem606[ss:sp_179 - 4:ui32], Mem606[ss:sp_179:word16], out cx_1219, out dx_1029, out bx_1220)
	branch Mem606[ds_1001:0x2A25:word16] != 0x0007 l0800_1B92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B92:
	Mem620[ss:sp_179:word16] = ds_1001
	selector es_621 = Mem620[ss:sp_179:selector]
	Mem625[ss:sp_179:word16] = es_621
	Mem627[ss:sp_179 - 2:word16] = 0x44DC
	word16 di_1237 = 0x427E
	word16 cx_632 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA1:
	branch cx_632 == 0x0000 l0800_1BA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA1_1:
	di_1237 = di_1237 + 0x0001
	cx_632 = cx_632 - 0x0001
	branch Mem627[es_621:di_1237:byte] == 0x00 l0800_1BA1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA3:
	word16 di_654 = Mem627[ss:sp_179 - 2:word16]
	selector es_658 = Mem627[ss:sp_179:selector]
	Mem663[ss:sp_179:word16] = ds_1001
	word16 cx_643 = ~cx_632
	word16 cx_646 = cx_643 >>u 0x0001
	word16 si_648 = di_1237 - cx_643
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB2:
	branch cx_646 == 0x0000 l0800_1BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB4:
	word16 cx_667 = cx_646 * 0x0002 + (cx_643 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB6:
	branch cx_667 == 0x0000 l0800_1BB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB8:
	selector ds_673 = Mem672[ss:sp_179:selector]
	branch Mem672[ds_673:0x2A25:word16] != 0x0008 l0800_1C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC0:
	branch Mem672[ds_673:0x427E:byte] == 0x00 l0800_1BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC7:
	branch Mem672[ss:bp_1037 - 0x0072:byte] != 0x5C l0800_1BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BFC:
	Mem685[ss:sp_179:word16] = ss
	Mem689[ss:sp_179 - 2:word16] = bp_1037 - 0x0072
	Mem692[ss:sp_179 - 4:word16] = ds_673
	selector es_693 = Mem692[ss:sp_179 - 4:selector]
	word16 di_1238 = 0x44DC
	word16 cx_699 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0B:
	branch cx_699 == 0x0000 l0800_1C0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0B_1:
	di_1238 = di_1238 + 0x0001
	cx_699 = cx_699 - 0x0001
	branch Mem692[es_693:di_1238:byte] == 0x00 l0800_1C0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0D:
	word16 cx_710 = ~cx_699
	word16 di_1239 = di_1238 - cx_710
	bool Z_723 = SLICE(cond(di_1239), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C13:
	branch cx_710 == 0x0000 l0800_1C15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C13_2:
	Z_723 = SLICE(cond(0x00 - Mem692[es_693:di_1239:byte]), bool, 2) (alias)
	di_1239 = di_1239 + 0x0001
	cx_710 = cx_710 - 0x0001
	branch Mem692[es_693:di_1239:byte] == 0x00 l0800_1C13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C15:
	branch Z_723 l0800_1C1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C17:
	di_1239 = 0x0001
	es_693 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C1E:
	Mem750[ss:sp_179 - 4:word16] = es_693
	word16 di_734 = di_1239 - 0x0001
	Mem752[ss:sp_179 - 6:word16] = di_734
	word16 bx_1228
	fn0800_3509(si_648, di_734, Mem752[ss:sp_179 - 6:word16], Mem752[ss:sp_179 - 4:selector], Mem752[ss:sp_179 - 2:word32], out bx_1228)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BCD:
	Mem773[ss:sp_179:word16] = ss
	Mem776[ss:sp_179 - 2:word16] = bp_1037 - 0x0071
	Mem778[ss:sp_179 - 4:word16] = ds_673
	selector es_779 = Mem778[ss:sp_179 - 4:selector]
	word16 di_1240 = 0x44DC
	word16 cx_785 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDC:
	branch cx_785 == 0x0000 l0800_1BDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDC_1:
	di_1240 = di_1240 + 0x0001
	cx_785 = cx_785 - 0x0001
	branch Mem778[es_779:di_1240:byte] == 0x00 l0800_1BDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDE:
	word16 cx_796 = ~cx_785
	word16 di_1241 = di_1240 - cx_796
	bool Z_809 = SLICE(cond(di_1241), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE4:
	branch cx_796 == 0x0000 l0800_1BE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE4_2:
	Z_809 = SLICE(cond(0x00 - Mem778[es_779:di_1241:byte]), bool, 2) (alias)
	di_1241 = di_1241 + 0x0001
	cx_796 = cx_796 - 0x0001
	branch Mem778[es_779:di_1241:byte] == 0x00 l0800_1BE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE6:
	branch Z_809 l0800_1BEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE8:
	di_1241 = 0x0001
	es_779 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BEF:
	Mem836[ss:sp_179 - 4:word16] = es_779
	word16 di_820 = di_1241 - 0x0001
	Mem838[ss:sp_179 - 6:word16] = di_820
	word16 bx_1227
	fn0800_3509(si_648, di_820, Mem838[ss:sp_179 - 6:word16], Mem838[ss:sp_179 - 4:selector], Mem838[ss:sp_179 - 2:word32], out bx_1227)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C29:
	word16 sp_857 = sp_1111 - 2
	Mem870[ss:sp_857:word16] = ds_673
	Mem873[ss:sp_857 - 2:word16] = 0x44DC
	word16 si_880
	word16 dx_1226
	fn0800_3678(ds_673, Mem873[ss:sp_857 - 2:segptr32], out dx_1226, out si_880, out ds_1001)
	Mem887[ss:sp_857:word16] = ss
	Mem901[ss:sp_857 - 2:word16] = bp_1037 - 0x0072
	Mem903[ss:sp_857 - 4:word16] = ds_1001
	selector es_904 = Mem903[ss:sp_857 - 4:selector]
	word16 di_1242 = 0x44DC
	word16 cx_910 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C43:
	branch cx_910 == 0x0000 l0800_1C45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C43_1:
	di_1242 = di_1242 + 0x0001
	cx_910 = cx_910 - 0x0001
	branch Mem903[es_904:di_1242:byte] == 0x00 l0800_1C43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C45:
	word16 cx_921 = ~cx_910
	word16 di_1243 = di_1242 - cx_921
	bool Z_934 = SLICE(cond(di_1243), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4B:
	branch cx_921 == 0x0000 l0800_1C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4B_2:
	Z_934 = SLICE(cond(0x00 - Mem903[es_904:di_1243:byte]), bool, 2) (alias)
	di_1243 = di_1243 + 0x0001
	cx_921 = cx_921 - 0x0001
	branch Mem903[es_904:di_1243:byte] == 0x00 l0800_1C4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4D:
	branch Z_934 l0800_1C56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4F:
	di_1243 = 0x0001
	es_904 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C56:
	Mem961[ss:sp_857 - 4:word16] = es_904
	word16 di_945 = di_1243 - 0x0001
	Mem963[ss:sp_857 - 6:word16] = di_945
	dx_1029 = fn0800_35A3(si_880, di_945, Mem963[ss:sp_857 - 6:word16], Mem963[ss:sp_857 - 4:selector], Mem963[ss:sp_857 - 2:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB6_1:
	Mem985[es_658:di_654:byte] = Mem672[es_621:si_648:byte]
	si_648 = si_648 + 0x0001
	di_654 = di_654 + 0x0001
	cx_667 = cx_667 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB2_2:
	Mem995[es_658:di_654:word16] = Mem991[es_621:si_648:word16]
	si_648 = si_648 + 0x0002
	di_654 = di_654 + 0x0002
	cx_646 = cx_646 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B8F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C61:
	word16 sp_1000 = sp_1111 - 2
	Mem1008[ss:sp_1000:word16] = ds_1001
	Mem1011[ss:sp_1000 - 2:word16] = 0x09A8
	Mem1013[ss:sp_1000 - 4:word16] = ds_1001
	Mem1016[ss:sp_1000 - 6:word16] = 0x44DC
	word16 di_1222
	word16 si_1221
	selector ds_1019
	fn0800_4234(ds_1001, Mem1016[ss:sp_1000 - 6:word32], Mem1016[ss:sp_1000 - 2:word32], out si_1221, out di_1222, out ds_1019)
	Mem1030[ds_1019:0x29E1:word16] = dx_1029
	Mem1031[ds_1019:0x29DF:word16] = 0x44DC
	word16 dx_1033 = Mem1031[ds_1019:0x29CF:word16]
	Mem1034[ds_1019:0x29E5:word16] = Mem1031[ds_1019:0x29D1:word16]
	Mem1035[ds_1019:0x29E3:word16] = dx_1033
	word16 dx_1223
	word16 di_1040
	selector ds_1041
	word16 ax_1036 = fn0800_5374(ds_1019, out dx_1223, out bp_1037, out di_1040, out ds_1041)
	word16 sp_1045 = <invalid>
	Mem1053[ss:sp_1045 - 2:word16] = Mem1035[ds_1041:0x29E1:word16]
	Mem1056[ss:sp_1045 - 4:word16] = Mem1053[ds_1041:0x29DF:word16]
	word16 dx_1225
	word16 cx_1224
	fn0800_A614(ds_1041, Mem1056[ss:sp_1045 - 4:segptr32], out cx_1224, out dx_1225, out ds_1062)
	si_1068 = ax_1036
	branch ax_1036 == 0x0000 l0800_1CA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C9D:
	Mem1073[ss:sp_1045 - 2:word16] = ds_1062
	Mem1076[ss:sp_1045 - 4:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_1062, Mem1076[ss:sp_1045 - 4:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA8:
	Mem1089[ss:sp_1045 - 2:word16] = ss
	Mem1093[ss:sp_1045 - 4:word16] = bp_1037 - 0x0072
	Mem1096[ss:sp_1045 - 6:word16] = ax_1036
	cx_1101 = fn0800_0ABC(di_1040, ds_1062, Mem1096[ss:sp_1045 - 6:word16], Mem1096[ss:sp_1045 - 4:word32], out dx_1103, out di_1102)
	sp_1111 = sp_1045
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1CF6(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: bp cx di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_1CF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CF6:
	Mem18[ds:0x45A8:word16] = 0x0000
	Mem19[ds:0x45A6:word16] = 0x0000
	Mem20[ds:0x29ED:word16] = 0x0000
	Mem21[ds:0x29EB:word16] = 0x0000
	word16 dx_499
	word16 cx_498
	word16 bx_500
	word16 ax_37 = fn0800_ACB3(ds, SEQ(Mem30[ds:0x29D1:word16], Mem33[ds:0x29CF:word16]), 0xFFFFFFFC, 0x0002, out cx_498, out dx_499, out bx_500)
	word16 di_501
	selector ds_102
	word16 dx_58 = fn0800_3E5D(ds, SEQ(Mem36[ds:0x29D1:word16], Mem50[ds:0x29CF:word16]), out di_501, out ds_102)
	Mem66[ds_102:0x29ED:word16] = dx_58
	Mem67[ds_102:0x29EB:word16] = ax_37
	fn0800_4194(ds_102, SEQ(Mem67[ds_102:0x29D1:word16], Mem70[ds_102:0x29CF:word16]))
	branch dx_58 >u Mem73[ds_102:0x29ED:word16] l0800_1D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D52:
	branch dx_58 <u Mem73[ds_102:0x29ED:word16] l0800_1D5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D54:
	branch ax_37 >=u Mem73[ds_102:0x29EB:word16] l0800_1D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D5A:
	word16 cx_506
	word16 dx_507
	word16 bx_508
	word16 si_509
	word16 di_510
	selector es_511
	fn0800_0D24(ds_102, 0x000B, SEQ(ds_102, 0x4348), out cx_506, out dx_507, out bx_508, out si_509, out di_510, out es_511, out ds_102)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D69:
	word16 cx_502
	word16 dx_503
	word16 bx_504
	word16 ax_133 = fn0800_ACB3(ds_102, SEQ(Mem126[ds_102:0x29D1:word16], Mem129[ds_102:0x29CF:word16]), SEQ(Mem119[ds_102:0x29ED:word16], Mem123[ds_102:0x29EB:word16]), 0x0000, out cx_502, out dx_503, out bx_504)
	word16 di_505
	selector ds_153
	branch fn0800_3E5D(ds_102, SEQ(Mem132[ds_102:0x29D1:word16], Mem146[ds_102:0x29CF:word16]), out di_505, out ds_153) != 0x524E l0800_1D9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D96:
	branch ax_133 == 0x4341 l0800_1DAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D9B:
	word16 cx_512
	word16 dx_513
	word16 bx_514
	word16 si_515
	word16 di_516
	selector es_517
	fn0800_0D24(ds_153, 0x000B, SEQ(ds_153, 0x4348), out cx_512, out dx_513, out bx_514, out si_515, out di_516, out es_517, out ds_153)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DAA:
	word16 bp_249
	word16 si_256
	selector ds_253
	word16 sp_262
	selector ds_205
	word16 cx_518
	word16 dx_519
	word16 di_520
	word16 ax_201 = fn0800_3E27(ds_153, SEQ(Mem192[ds_153:0x29D1:word16], Mem197[ds_153:0x29CF:word16]), out cx_518, out dx_519, out di_520, out ds_205)
	selector ds_225
	word16 cx_521
	word16 dx_522
	word16 di_523
	fn0800_3E27(ds_205, SEQ(Mem200[ds_205:0x29D1:word16], Mem217[ds_205:0x29CF:word16]), out cx_521, out dx_522, out di_523, out ds_225)
	branch wArg02 == 0x0000 l0800_1DE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DE4:
	word16 sp_257 = <invalid>
	word16 dx_254
	word16 di_524
	word16 ax_248 = fn0800_4311(ds_225, 0xFFF0, 0x0000, out dx_254, out bp_249, out si_256, out di_524, out ds_253)
	Mem264[ds_253:0x2E53:word16] = dx_254
	Mem265[ds_253:0x2E51:word16] = ax_248
	sp_262 = sp_257 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DD1:
	word16 sp_282 = <invalid>
	word16 dx_279
	word16 di_525
	word16 ax_273 = fn0800_4311(ds_225, ax_201, 0x0000, out dx_279, out bp_249, out si_256, out di_525, out ds_253)
	Mem289[ds_253:0x2E53:word16] = dx_279
	Mem290[ds_253:0x2E51:word16] = ax_273
	sp_262 = sp_282 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DF8:
	word16 sp_295 = sp_262 - 2
	Mem297[ss:sp_295:word16] = 0x0000
	Mem301[ss:sp_295 - 2:word16] = Mem297[ds_253:0x29ED:word16]
	Mem304[ss:sp_295 - 4:word16] = Mem301[ds_253:0x29EB:word16]
	Mem307[ss:sp_295 - 6:word16] = Mem304[ds_253:0x29D1:word16]
	Mem310[ss:sp_295 - 8:word16] = Mem307[ds_253:0x29CF:word16]
	word16 cx_526
	word16 dx_527
	word16 bx_528
	fn0800_ACB3(ds_253, Mem310[ss:sp_295 - 8:segptr32], Mem310[ss:sp_295 - 4:ui32], Mem310[ss:sp_295:word16], out cx_526, out dx_527, out bx_528)
	Mem323[ss:sp_295:word16] = Mem310[ds_253:0x29D1:word16]
	Mem326[ss:sp_295 - 2:word16] = Mem323[ds_253:0x29CF:word16]
	Mem331[ss:sp_295 - 4:word16] = 0x0000
	Mem334[ss:sp_295 - 6:word16] = si_256
	Mem337[ss:sp_295 - 8:word16] = Mem334[ds_253:0x2E53:word16]
	Mem340[ss:sp_295 - 10:word16] = Mem337[ds_253:0x2E51:word16]
	word16 si_348
	word16 di_344
	selector ds_345
	byte ch_468 = SLICE((uint16) (uint8) fn0800_4110(ds_253, Mem340[ss:sp_295 - 10:word32], Mem340[ss:sp_295 - 6:word16], Mem340[ss:sp_295 - 4:word16], Mem340[ss:sp_295 - 2:word32], out si_348, out di_344, out ds_345), byte, 8)
	Mem356[ss:sp_295:word16] = 0x0000
	Mem360[ss:sp_295 - 2:word16] = si_348 - 0x0008
	word16 ax_361 = Mem360[ds_345:0x2E51:word16]
	Mem366[ss:sp_295 - 4:word16] = Mem360[ds_345:0x2E53:word16]
	Mem368[ss:sp_295 - 6:word16] = ax_361 + 0x0008
	word16 cx_392 = SEQ(ch_468, cl_371)
	byte cl_371
	word16 dx_372
	branch fn0800_2CCF(ds_345, Mem368[ss:sp_295 - 6:segptr32], Mem368[ss:sp_295 - 2:word16], Mem368[ss:sp_295:word16], out cl_371, out dx_372) == Mem368[ss:bp_249 - 0x0002:word16] l0800_1E59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E4A:
	Mem383[ss:sp_295:word16] = ds_345
	Mem386[ss:sp_295 - 2:word16] = 0x4348
	Mem389[ss:sp_295 - 4:word16] = 0x000D
	word16 bx_529
	word16 si_530
	selector es_531
	fn0800_0D24(ds_345, Mem389[ss:sp_295 - 4:word16], Mem389[ss:sp_295 - 2:segptr32], out cx_392, out dx_372, out bx_529, out si_530, out di_344, out es_531, out ds_345)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E59:
	word16 si_408 = Mem407[ss:sp_262:word16]
	word16 bp_411 = Mem407[ss:bp_249:word16]
	dxOut = dx_372
	bpOut = bp_411
	siOut = si_408
	diOut = di_344
	dsOut = ds_345
	return cx_392
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1CF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1E5E(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: bp ds
// Trashed: SCZO ax bp bx cx di ds dx es Top
// Preserved: D si sp
fn0800_1E5E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E5E:
	ptr32 es_bx_9 = Mem7[ds:0x2E51:segptr32]
	word16 ax_20 = ((uint16) (uint8) Mem7[es_bx_9 + 0x0004:byte] << 0x08) + (uint16) ((uint8) Mem7[es_bx_9 + 0x0005:byte])
	byte cl_331
	word16 dx_332
	word16 ax_37 = fn0800_2CCF(ds, SEQ(Mem28[ds:0x2E53:word16], Mem28[ds:0x2E51:word16] + 0x0008), ax_20 - 0x0008, 0x0000, out cl_331, out dx_332)
	ptr32 es_bx_50 = Mem36[ds:0x2E51:segptr32]
	Mem54[es_bx_50 + 0x0006:byte] = SLICE(ax_37 >>u 0x08, byte, 0)
	Mem56[es_bx_50 + 0x0007:byte] = SLICE(ax_37, byte, 0)
	word16 dx_61 = Mem59[ds:0x29EB:word16]
	word16 cx_333
	word16 dx_334
	word16 bx_335
	fn0800_ACB3(ds, SEQ(Mem70[ds:0x29D1:word16], Mem73[ds:0x29CF:word16]), SEQ(Mem59[ds:0x29ED:word16] + (dx_61 <u 0x0004), dx_61 + 0x0004), 0x0000, out cx_333, out dx_334, out bx_335)
	word16 si_140 = ax_20
	word16 cx_96
	word16 di_97
	word16 dx_336
	selector ds_137
	word16 ax_94 = fn0800_3E27(ds, SEQ(Mem76[ds:0x29D1:word16], Mem90[ds:0x29CF:word16]), out cx_96, out dx_336, out di_97, out ds_137)
	branch ax_20 <=u ax_94 l0800_1EF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1EF7:
	branch ax_20 >=u ax_94 l0800_1F19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1EFB:
	fn0800_3C99(ax_20, di_97, ds_137, SEQ(Mem125[ds_137:0x29D1:word16], Mem128[ds_137:0x29CF:word16]), Mem122[ds_137:0x29EB:word16], Mem119[ds_137:0x29ED:word16], out bp, out si_140, out ds_137)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ED7:
	bp = fn0800_3BC3(cx_96, 0x0000, ds_137, SEQ(Mem164[ds_137:0x29D1:word16], Mem167[ds_137:0x29CF:word16]), SEQ(Mem158[ds_137:0x29ED:word16], Mem161[ds_137:0x29EB:word16]), out si_140, out ds_137)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F19:
	word16 cx_337
	word16 dx_338
	word16 bx_339
	fn0800_ACB3(ds_137, SEQ(Mem201[ds_137:0x29D1:word16], Mem204[ds_137:0x29CF:word16]), SEQ(Mem194[ds_137:0x29ED:word16], Mem198[ds_137:0x29EB:word16]), 0x0000, out cx_337, out dx_338, out bx_339)
	selector ds_242
	word16 si_340
	word16 di_341
	fn0800_4152(ds_137, SEQ(Mem231[ds_137:0x2E53:word16], Mem234[ds_137:0x2E51:word16]), si_140, 0x0000, SEQ(Mem207[ds_137:0x29D1:word16], Mem220[ds_137:0x29CF:word16]), out si_340, out di_341, out ds_242)
	selector ds_261
	word16 cx_342
	word16 dx_343
	word16 bx_344
	fn0800_4346(ds_242, Mem237[ds_242:0x2E53:word16], out cx_342, out dx_343, out bx_344, out ds_261)
	dsOut = ds_261
	return bp
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1E5E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1F5C(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_1F5C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F5C:
	selector es_347 = SLICE(ptrArg02, selector, 16)
	word16 di_24 = SLICE(ptrArg02, word16, 0)
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6C:
	branch cx_20 == 0x0000 l0800_1F6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6C_1:
	di_24 = di_24 + 0x0001
	cx_20 = cx_20 - 0x0001
	branch Mem15[es_347:di_24:byte] == 0x00 l0800_1F6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6E:
	word16 cx_31 = ~cx_20
	word16 di_34 = di_24 - cx_31
	bool Z_44 = SLICE(cond(di_34), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F75:
	branch cx_31 == 0x0000 l0800_1F77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F75_2:
	Z_44 = SLICE(cond(0x3A - Mem15[es_347:di_34:byte]), bool, 2) (alias)
	di_34 = di_34 + 0x0001
	cx_31 = cx_31 - 0x0001
	branch Mem15[es_347:di_34:byte] == 0x3A l0800_1F75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F77:
	branch Z_44 l0800_1F80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F79:
	di_34 = 0x0001
	es_347 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F80:
	branch (di_34 - 0x0001 | es_347) == 0x0000 l0800_1FAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F87:
	selector es_111 = SLICE(ptrArg02, selector, 16)
	word16 di_354 = SLICE(ptrArg02, word16, 0)
	word16 cx_79 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F8F:
	branch cx_79 == 0x0000 l0800_1F91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F8F_1:
	di_354 = di_354 + 0x0001
	cx_79 = cx_79 - 0x0001
	branch Mem15[es_111:di_354:byte] == 0x00 l0800_1F8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F91:
	word16 cx_102 = ~cx_79
	word16 di_101 = di_354 - cx_102
	bool Z_103 = SLICE(cond(di_101), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F98:
	branch cx_102 == 0x0000 l0800_1F9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F98_2:
	Z_103 = SLICE(cond(0x3A - Mem15[es_111:di_101:byte]), bool, 2) (alias)
	di_101 = di_101 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem15[es_111:di_101:byte] == 0x3A l0800_1F98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F9A:
	branch Z_103 l0800_1FA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F9C:
	di_101 = 0x0001
	es_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FA3:
	ptrArg02 = SEQ(es_111, di_101) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FAD:
	ptr32 es_bx_145 = Mem144[ds:0x2E51:segptr32]
	word16 ax_156 = ((uint16) (uint8) Mem144[es_bx_145 + 0x0004:byte] << 0x08) + (uint16) ((uint8) Mem144[es_bx_145 + 0x0005:byte])
	word16 wArg04_396 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_399 = SLICE(ptrArg02, word16, 0)
	word16 ax_160 = Mem159[ds:0x2E53:word16]
	word16 dx_162 = Mem159[ds:0x2E51:word16] + ax_156
	selector es_359 = SLICE(ptrArg02, selector, 16)
	word16 di_173 = SLICE(ptrArg02, word16, 0)
	word16 cx_169 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FDE:
	branch cx_169 == 0x0000 l0800_1FE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FDE_1:
	di_173 = di_468 + 0x0001
	cx_169 = cx_169 - 0x0001
	di_468 = di_173
	branch Mem164[es_359:di_468:byte] == 0x00 l0800_1FDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FE0:
	word16 cx_180 = ~cx_169
	word16 ax_192 = dx_162 - Mem187[ds:0x2E51:word16]
	word16 ax_196 = ax_192 + (cx_180 + 0x0003)
	segptr32 ptrLoc06_392 = SEQ(ax_160, dx_162)
	word16 dx_463
	Mem215[ptrLoc06_392:byte] = SLICE(fn0800_8C8A(ax_196, 0x08, 0x0000 - (ax_192 <u 0x0000) + (ax_196 <u 0x0000), out dx_463), byte, 0)
	Mem224[ptrLoc06_392 + 0x0001:byte] = SLICE(dx_162 - Mem215[ds:0x2E51:word16] + (cx_180 + 0x0003), byte, 0)
	word16 sp_206 = <invalid>
	Mem228[ss:sp_206 - 2:word16] = ax_160
	Mem231[ss:sp_206 - 4:word16] = dx_162 + 0x0002
	word16 di_232 = wArg02_399
	word16 cx_236 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202C:
	branch cx_236 == 0x0000 l0800_202E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202C_2:
	di_232 = di_232 + 0x0001
	cx_236 = cx_236 - 0x0001
	branch Mem231[wArg04_396:di_232:byte] == 0x00 l0800_202C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202E:
	word16 di_258 = Mem231[ss:sp_206 - 4:word16]
	selector es_262 = Mem231[ss:sp_206 - 2:selector]
	Mem267[ss:sp_206 - 2:word16] = ds
	word16 cx_247 = ~cx_236
	word16 cx_250 = cx_247 >>u 0x0001
	word16 si_252 = di_232 - cx_247
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203D:
	branch cx_250 == 0x0000 l0800_203F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203F:
	word16 cx_271 = cx_250 * 0x0002 + (cx_247 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2041:
	byte bLoc08_403 = SLICE(ax_156, byte, 0)
	byte bLoc0A_404 = SLICE(cx_180 + 0x0003, byte, 0)
	branch cx_271 == 0x0000 l0800_2043
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2043:
	selector ds_277 = Mem276[ss:sp_206 - 2:selector]
	Mem283[ax_160:dx_162 + (cx_180 + 0x0003) - 0x0001:byte] = 0x00
	ptr32 es_bx_288 = Mem283[ds_277:0x2E51:segptr32]
	Mem292[es_bx_288 + 0x0004:byte] = SLICE(ax_156 + (cx_180 + 0x0003) >>u 0x08, byte, 0)
	Mem295[es_bx_288 + 0x0005:byte] = bLoc08_403 + bLoc0A_404
	Mem300[ss:sp_206 - 2:word16] = 0x0000
	Mem302[ss:sp_206 - 4:word16] = 0x0000
	Mem304[ss:sp_206 - 6:word16] = 0x0000
	Mem307[ss:sp_206 - 8:word16] = cx_180 + 0x0003
	fn0800_2688(ds_277, Mem307[ss:sp_206 - 8:ui32], Mem307[ss:sp_206 - 4:word16], Mem307[ss:sp_206 - 2:word16])
	word16 di_321 = Mem307[ss:sp_206:word16]
	dxOut = ax_160
	diOut = di_321
	dsOut = ds_277
	return dx_162
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1F5C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2041_1:
	Mem332[es_262:di_258:byte] = Mem276[wArg04_396:si_252:byte]
	si_252 = si_252 + 0x0001
	di_258 = di_258 + 0x0001
	cx_271 = cx_271 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203D_3:
	Mem342[es_262:di_258:word16] = Mem338[wArg04_396:si_252:word16]
	si_252 = si_252 + 0x0002
	di_258 = di_258 + 0x0002
	cx_250 = cx_250 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_2085(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx
// Trashed: SCZDO ax bx cx es Top
// Preserved: bp di ds si sp
fn0800_2085_entry:
	selector psegArg04_549 = SLICE(ptrArg02, selector, 16)
	word16 wArg02_553 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2085:
	ptr32 es_bx_17 = Mem15[ds:0x2E51:segptr32]
	word16 ax_28 = ((uint16) (uint8) Mem15[es_bx_17 + 0x0004:byte] << 0x08) + (uint16) ((uint8) Mem15[es_bx_17 + 0x0005:byte])
	word16 dx_32 = Mem29[ds:0x2E51:word16] + ax_28
	selector es_490 = SLICE(ptrArg02, selector, 16)
	word16 di_43 = SLICE(ptrArg02, word16, 0)
	word16 cx_39 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20BE:
	branch cx_39 == 0x0000 l0800_20C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20BE_1:
	di_43 = di_786 + 0x0001
	cx_39 = cx_39 - 0x0001
	di_786 = di_43
	branch Mem34[es_490:di_786:byte] == 0x00 l0800_20BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20C0:
	word16 bx_73 = Mem57[ds:0x2E51:word16] + (((int16) Mem57[ptrArg06:byte] << 0x08) + (uint16) ((uint8) Mem57[ptrArg06 + 0x0001:byte]))
	word16 cx_50 = ~cx_39
	word16 dx_71 = Mem57[ds:0x2E53:word16]
	fn0800_B0F3(SEQ(Mem91[ds:0x2E53:word16], bx_73 - 0x0001 + (cx_50 + 0x0004)), SEQ(Mem86[ds:0x2E53:word16], bx_73 - 0x0001), dx_32 - (bx_73 - 0x0001))
	word16 di_119 = wArg02_553
	word16 cx_123 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_211F:
	branch cx_123 == 0x0000 l0800_2121
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_211F_2:
	di_119 = di_119 + 0x0001
	cx_123 = cx_123 - 0x0001
	branch Mem118[psegArg04_549:di_119:byte] == 0x00 l0800_211F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2121:
	word16 cx_134 = ~cx_123
	word16 cx_137 = cx_134 >>u 0x0001
	word16 si_139 = di_119 - cx_134
	word16 di_145 = bx_73 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2130:
	branch cx_137 == 0x0000 l0800_2132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2132:
	word16 cx_158 = cx_137 * 0x0002 + (cx_134 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2134:
	byte bLoc0E_619 = SLICE(cx_50 + 0x0004, byte, 0)
	byte bLoc0C_618 = SLICE(ax_28, byte, 0)
	branch cx_158 == 0x0000 l0800_2136
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2136:
	selector es_203 = dx_71
	word16 di_175 = bx_73 - 0x0001
	word16 cx_171 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_213F:
	branch cx_171 == 0x0000 l0800_2141
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_213F_1:
	di_175 = di_175 + 0x0001
	cx_171 = cx_171 - 0x0001
	branch Mem163[dx_71:di_175:byte] == 0x00 l0800_213F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2141:
	word16 cx_182 = ~cx_171
	word16 di_185 = di_175 - cx_182
	bool Z_195 = SLICE(cond(di_185), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2147:
	branch cx_182 == 0x0000 l0800_2149
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2147_2:
	Z_195 = SLICE(cond(0x00 - Mem163[dx_71:di_185:byte]), bool, 2) (alias)
	di_185 = di_185 + 0x0001
	cx_182 = cx_182 - 0x0001
	branch Mem163[dx_71:di_185:byte] == 0x00 l0800_2147
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2149:
	branch Z_195 l0800_2152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_214B:
	di_185 = 0x0001
	es_203 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2152:
	Mem211[es_203:di_185:byte] = 0x00
	selector es_258 = dx_71
	word16 di_230 = bx_73 - 0x0001
	word16 cx_226 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2164:
	branch cx_226 == 0x0000 l0800_2166
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2164_1:
	di_230 = di_230 + 0x0001
	cx_226 = cx_226 - 0x0001
	branch Mem211[dx_71:di_230:byte] == 0x00 l0800_2164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2166:
	word16 cx_237 = ~cx_226
	word16 di_240 = di_230 - cx_237
	bool Z_250 = SLICE(cond(di_240), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216C:
	branch cx_237 == 0x0000 l0800_216E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216C_2:
	Z_250 = SLICE(cond(0x00 - Mem211[dx_71:di_240:byte]), bool, 2) (alias)
	di_240 = di_240 + 0x0001
	cx_237 = cx_237 - 0x0001
	branch Mem211[dx_71:di_240:byte] == 0x00 l0800_216C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216E:
	branch Z_250 l0800_2177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2170:
	di_240 = 0x0001
	es_258 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2177:
	Mem266[es_258:di_240 + 0x0001:byte] = 0x00
	selector es_313 = dx_71
	word16 di_285 = bx_73 - 0x0001
	word16 cx_281 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2189:
	branch cx_281 == 0x0000 l0800_218B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2189_1:
	di_285 = di_285 + 0x0001
	cx_281 = cx_281 - 0x0001
	branch Mem266[dx_71:di_285:byte] == 0x00 l0800_2189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_218B:
	word16 cx_292 = ~cx_281
	word16 di_295 = di_285 - cx_292
	bool Z_305 = SLICE(cond(di_295), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2191:
	branch cx_292 == 0x0000 l0800_2193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2191_2:
	Z_305 = SLICE(cond(0x00 - Mem266[dx_71:di_295:byte]), bool, 2) (alias)
	di_295 = di_295 + 0x0001
	cx_292 = cx_292 - 0x0001
	branch Mem266[dx_71:di_295:byte] == 0x00 l0800_2191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2193:
	branch Z_305 l0800_219C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2195:
	di_295 = 0x0001
	es_313 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_219C:
	Mem321[es_313:di_295 + 0x0002:byte] = 0x00
	selector es_368 = dx_71
	word16 di_340 = bx_73 - 0x0001
	word16 cx_336 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21AE:
	branch cx_336 == 0x0000 l0800_21B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21AE_1:
	di_340 = di_340 + 0x0001
	cx_336 = cx_336 - 0x0001
	branch Mem321[dx_71:di_340:byte] == 0x00 l0800_21AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B0:
	word16 cx_347 = ~cx_336
	word16 di_350 = di_340 - cx_347
	bool Z_360 = SLICE(cond(di_350), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B6:
	byte ch_729 = SLICE(cx_347, byte, 8)
	branch cx_347 == 0x0000 l0800_21B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B6_2:
	cx_347 = cx_347 - 0x0001
	Z_360 = SLICE(cond(0x00 - Mem321[dx_71:di_350:byte]), bool, 2) (alias)
	di_350 = di_350 + 0x0001
	ch_729 = SLICE(cx_347, byte, 8) (alias)
	branch Mem321[dx_71:di_350:byte] == 0x00 l0800_21B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B8:
	branch Z_360 l0800_21C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21BA:
	di_350 = 0x0001
	es_368 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21C1:
	Mem376[es_368:di_350 + 0x0003:byte] = 0x00
	ptr32 es_bx_411 = Mem376[ds:0x2E51:segptr32]
	Mem415[es_bx_411 + 0x0004:byte] = SLICE(ax_28 + (cx_50 + 0x0004) >>u 0x08, byte, 0)
	Mem418[es_bx_411 + 0x0005:byte] = bLoc0C_618 + bLoc0E_619
	fn0800_2688(ds, (uint32) (uint16) (cx_50 + 0x0004), 0x0000, 0x0000)
	return (byte) SEQ(ch_729, cl_453)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2085_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2134_1:
	Mem475[dx_71:di_145:byte] = Mem163[psegArg04_549:si_139:byte]
	si_139 = si_139 + 0x0001
	di_145 = di_145 + 0x0001
	cx_158 = cx_158 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2130_3:
	Mem485[dx_71:di_145:word16] = Mem481[psegArg04_549:si_139:word16]
	si_139 = si_139 + 0x0002
	di_145 = di_145 + 0x0002
	cx_137 = cx_137 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_2201(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_2201_entry:
	word16 wArg02_232 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_236 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2201:
	ptr32 es_bx_14 = Mem12[ds:0x2E51:segptr32]
	word16 dx_45 = Mem31[ds:0x2E51:word16] + (((int16) Mem31[ptrArg02:byte] << 0x08) + (uint16) ((uint8) Mem31[ptrArg02 + 0x0001:byte])) - wArg02_232
	word16 ax_25 = ((uint16) (uint8) Mem12[es_bx_14 + 0x0004:byte] << 0x08) + (uint16) ((uint8) Mem12[es_bx_14 + 0x0005:byte])
	word16 ax_51 = wArg02_232 + dx_45
	fn0800_B0F3(ptrArg02, SEQ(wArg04_236, ax_51), Mem26[ds:0x2E51:word16] + ax_25 - ax_51)
	ptr32 es_bx_88 = Mem72[ds:0x2E51:segptr32]
	Mem92[es_bx_88 + 0x0004:byte] = SLICE(ax_25 - dx_45 >>u 0x08, byte, 0)
	Mem95[es_bx_88 + 0x0005:byte] = SLICE(ax_25 - dx_45, byte, 0)
	word16 ax_104 = -dx_45
	fn0800_2688(ds, SEQ(-0x0000 - (ax_104 == 0x0000), ax_104), 0x0000, 0x0000)
	word16 dx_123 = Mem111[ds:0x45AE:word16]
	branch Mem111[ds:0x45B0:word16] != wArg04_236 l0800_22EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22B7:
	branch dx_123 != wArg02_232 l0800_22EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22EA:
	branch Mem111[ds:0x45AE:word16] <=u wArg02_232 l0800_22F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22F2:
	Mem137[ds:0x45AA:word16] = Mem111[ds:0x45AA:word16] - dx_45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22F9:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22BC:
	selector es_186 = SLICE(ptrArg02, selector, 16)
	word16 di_150 = SLICE(ptrArg02, word16, 0) + 0x0002
	word16 cx_154 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C7:
	branch cx_154 == 0x0000 l0800_22C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C7_1:
	di_150 = di_150 + 0x0001
	cx_154 = cx_154 - 0x0001
	branch Mem111[es_186:di_150:byte] == 0x00 l0800_22C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C9:
	word16 cx_165 = ~cx_154
	word16 di_168 = di_150 - cx_165
	bool Z_178 = SLICE(cond(di_168), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22CF:
	branch cx_165 == 0x0000 l0800_22D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22CF_2:
	Z_178 = SLICE(cond(0x00 - Mem111[es_186:di_168:byte]), bool, 2) (alias)
	di_168 = di_168 + 0x0001
	cx_165 = cx_165 - 0x0001
	branch Mem111[es_186:di_168:byte] == 0x00 l0800_22CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22D1:
	branch Z_178 l0800_22DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22D3:
	di_168 = 0x0001
	es_186 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22DA:
	Mem200[ds:0x45AC:word16] = es_186
	Mem201[ds:0x45AA:word16] = di_168
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2201_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_22FE(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_22FE_entry:
	word16 wArg02_225 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_239 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22FE:
	ptr32 es_bx_14 = Mem12[ds:0x2E51:segptr32]
	word16 ax_25 = ((uint16) (uint8) Mem12[es_bx_14 + 0x0004:byte] << 0x08) + (uint16) ((uint8) Mem12[es_bx_14 + 0x0005:byte])
	byte bLoc08_251 = SLICE(ax_25, byte, 0)
	word16 dx_29 = Mem26[ds:0x2E51:word16] + ax_25
	selector es_209 = SLICE(ptrArg02, selector, 16)
	word16 di_210 = SLICE(ptrArg02, word16, 0)
	word16 cx_36 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2336:
	branch cx_36 == 0x0000 l0800_2338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2336_1:
	di_210 = di_210 + 0x0001
	cx_36 = cx_36 - 0x0001
	branch Mem31[es_209:di_210:byte] == 0x00 l0800_2336
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2338:
	word16 cx_47 = ~cx_36
	word16 di_313 = di_210 - cx_47
	bool Z_60 = SLICE(cond(di_313), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_233E:
	branch cx_47 == 0x0000 l0800_2340
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_233E_2:
	Z_60 = SLICE(cond(0x00 - Mem31[es_209:di_313:byte]), bool, 2) (alias)
	di_313 = di_313 + 0x0001
	cx_47 = cx_47 - 0x0001
	branch Mem31[es_209:di_313:byte] == 0x00 l0800_233E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2340:
	branch Z_60 l0800_2349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2342:
	di_313 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2349:
	word16 di_89 = di_313 + 0x0004 - wArg02_225
	word16 ax_95 = wArg02_225 + di_89
	fn0800_B0F3(ptrArg02, SEQ(wArg04_239, ax_95), dx_29 - ax_95)
	ptr32 es_bx_142 = Mem121[ds:0x2E51:segptr32]
	Mem146[es_bx_142 + 0x0004:byte] = SLICE(ax_25 - di_89 >>u 0x08, byte, 0)
	Mem149[es_bx_142 + 0x0005:byte] = bLoc08_251 - SLICE(di_89, byte, 0)
	word16 ax_158 = -di_89
	fn0800_2688(ds, SEQ(-0x0000 - (ax_158 == 0x0000), ax_158), 0x0000, 0x0000)
	Mem179[ds:0x45AC:word16] = wArg04_239
	word16 dx_178 = wArg02_225 + di_89
	Mem180[ds:0x45AA:word16] = dx_178
	branch (dx_178 | wArg04_239) == 0x0000 l0800_23D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23D8:
	branch Mem180[ds:0x45AA:word16] <=u wArg02_225 l0800_23E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23E0:
	Mem190[ds:0x45AA:word16] = Mem180[ds:0x45AA:word16] - di_89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23E7:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23C6:
	Mem202[ds:0x45AC:word16] = wArg04_239
	Mem203[ds:0x45AA:word16] = wArg02_225
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_22FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_23EC(selector ds, segptr32 ptrArg02, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: bp cx di ds si sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_23EC_entry:
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23EC:
	selector ds_24
	word16 si_26 = fn0800_24FE(ds, ptrArg02, out ds_24)
	selector es_431 = wArg04
	word16 di_432 = wArg02
	word16 cx_40 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240D:
	branch cx_40 == 0x0000 l0800_240F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240D_1:
	di_432 = di_432 + 0x0001
	cx_40 = cx_40 - 0x0001
	branch Mem35[wArg04:di_432:byte] == 0x00 l0800_240D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240F:
	word16 cx_51 = ~cx_40
	word16 di_54 = di_432 - cx_51
	bool Z_64 = SLICE(cond(di_54), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2415:
	branch cx_51 == 0x0000 l0800_2417
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2415_2:
	Z_64 = SLICE(cond(0x00 - Mem35[wArg04:di_54:byte]), bool, 2) (alias)
	di_54 = di_54 + 0x0001
	cx_51 = cx_51 - 0x0001
	branch Mem35[wArg04:di_54:byte] == 0x00 l0800_2415
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2417:
	branch Z_64 l0800_2420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2419:
	di_54 = 0x0001
	es_431 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2420:
	word16 ax_83 = (int16) Mem35[es_431:di_54:byte]
	selector es_139 = wArg04
	word16 di_111 = wArg02
	word16 cx_107 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2437:
	branch cx_107 == 0x0000 l0800_2439
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2437_1:
	di_111 = di_111 + 0x0001
	cx_107 = cx_107 - 0x0001
	branch Mem103[wArg04:di_111:byte] == 0x00 l0800_2437
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2439:
	word16 cx_118 = ~cx_107
	word16 di_121 = di_111 - cx_118
	bool Z_131 = SLICE(cond(di_121), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_243F:
	branch cx_118 == 0x0000 l0800_2441
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_243F_2:
	Z_131 = SLICE(cond(0x00 - Mem103[wArg04:di_121:byte]), bool, 2) (alias)
	di_121 = di_121 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch Mem103[wArg04:di_121:byte] == 0x00 l0800_243F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2441:
	branch Z_131 l0800_244A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2443:
	di_121 = 0x0001
	es_139 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_244A:
	word16 dx_164 = (ax_83 << 0x08) + (uint16) ((uint8) Mem103[es_139:di_121 + 0x0001:byte])
	selector es_210 = wArg04
	word16 di_182 = wArg02
	word16 cx_178 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2462:
	branch cx_178 == 0x0000 l0800_2464
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2462_1:
	di_182 = di_182 + 0x0001
	cx_178 = cx_178 - 0x0001
	branch Mem177[wArg04:di_182:byte] == 0x00 l0800_2462
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2464:
	word16 cx_189 = ~cx_178
	word16 di_192 = di_182 - cx_189
	bool Z_202 = SLICE(cond(di_192), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246A:
	branch cx_189 == 0x0000 l0800_246C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246A_2:
	Z_202 = SLICE(cond(0x00 - Mem177[wArg04:di_192:byte]), bool, 2) (alias)
	di_192 = di_192 + 0x0001
	cx_189 = cx_189 - 0x0001
	branch Mem177[wArg04:di_192:byte] == 0x00 l0800_246A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246C:
	branch Z_202 l0800_2475
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246E:
	di_192 = 0x0001
	es_210 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2475:
	word16 ax_221 = (int16) Mem177[es_210:di_192 + 0x0002:byte]
	selector es_277 = wArg04
	word16 di_249 = wArg02
	word16 cx_245 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248C:
	branch cx_245 == 0x0000 l0800_248E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248C_1:
	di_249 = di_249 + 0x0001
	cx_245 = cx_245 - 0x0001
	branch Mem241[wArg04:di_249:byte] == 0x00 l0800_248C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248E:
	word16 cx_256 = ~cx_245
	word16 di_259 = di_249 - cx_256
	bool Z_269 = SLICE(cond(di_259), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2494:
	branch cx_256 == 0x0000 l0800_2496
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2494_2:
	Z_269 = SLICE(cond(0x00 - Mem241[wArg04:di_259:byte]), bool, 2) (alias)
	di_259 = di_259 + 0x0001
	cx_256 = cx_256 - 0x0001
	branch Mem241[wArg04:di_259:byte] == 0x00 l0800_2494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2496:
	branch Z_269 l0800_249F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2498:
	di_259 = 0x0001
	es_277 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_249F:
	word16 di_280 = di_259 - 0x0001
	word16 dx_302 = (ax_221 << 0x08) + (uint16) ((uint8) Mem241[es_277:di_280 + 0x0004:byte])
	ui32 ax_dx_455 = SEQ(dx_164 + (dx_302 <u 0x0000), dx_302) - SEQ(Mem323[ds_24:0x45A8:word16], Mem323[ds_24:0x45A6:word16])
	word16 bp_382
	selector ds_386
	word16 si_389
	byte ch_565 = SLICE((uint16) (uint8) fn0800_3C99(si_26, di_280, ds_24, SEQ(Mem354[ds_24:0x29D1:word16], Mem357[ds_24:0x29CF:word16]), (word16) ax_dx_455, SLICE(ax_dx_455, word16, 16), out bp_382, out si_389, out ds_386), byte, 8)
	word16 sp_390 = <invalid>
	Mem400[ss:sp_390 + 0x000A:word16] = Mem360[ss:bp_382 - 0x0002:word16]
	Mem403[ss:sp_390 + 0x0008:word16] = Mem400[ss:bp_382 - 0x0004:word16]
	word16 dx_407 = -Mem403[ss:bp_382 - 0x0008:word16]
	Mem412[ss:sp_390 + 0x0006:word16] = -Mem403[ss:bp_382 - 0x0006:word16] - (dx_407 == 0x0000)
	Mem414[ss:sp_390 + 0x0004:word16] = dx_407
	fn0800_2688(ds_386, Mem414[ss:sp_390 + 0x0004:ui32], Mem414[ss:sp_390 + 0x0008:word16], Mem414[ss:sp_390 + 0x000A:word16])
	word16 di_426 = Mem414[ss:sp_390 + 0x000C:word16]
	bpOut = Mem414[ss:bp_382:word16]
	siOut = si_389
	diOut = di_426
	dsOut = ds_386
	return (byte) SEQ(ch_565, cl_417)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_23EC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_24FE(selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_24FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_24FE:
	selector es_49 = SLICE(ptrArg02, selector, 16)
	word16 di_21 = SLICE(ptrArg02, word16, 0)
	word16 cx_17 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250D:
	branch cx_17 == 0x0000 l0800_250F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250D_1:
	di_21 = di_21 + 0x0001
	cx_17 = cx_17 - 0x0001
	branch Mem12[es_49:di_21:byte] == 0x00 l0800_250D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250F:
	word16 cx_28 = ~cx_17
	word16 di_31 = di_21 - cx_28
	bool Z_41 = SLICE(cond(di_31), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2515:
	branch cx_28 == 0x0000 l0800_2517
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2515_2:
	Z_41 = SLICE(cond(0x00 - Mem12[es_49:di_31:byte]), bool, 2) (alias)
	di_31 = di_31 + 0x0001
	cx_28 = cx_28 - 0x0001
	branch Mem12[es_49:di_31:byte] == 0x00 l0800_2515
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2517:
	branch Z_41 l0800_2520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2519:
	di_31 = 0x0001
	es_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2520:
	word16 ax_60 = (int16) Mem12[es_49:di_31:byte]
	selector es_116 = SLICE(ptrArg02, selector, 16)
	word16 di_514 = SLICE(ptrArg02, word16, 0)
	word16 cx_84 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2537:
	branch cx_84 == 0x0000 l0800_2539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2537_1:
	di_514 = di_514 + 0x0001
	cx_84 = cx_84 - 0x0001
	branch Mem80[es_116:di_514:byte] == 0x00 l0800_2537
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2539:
	word16 cx_100 = ~cx_84
	word16 di_103 = di_514 - cx_100
	bool Z_108 = SLICE(cond(di_103), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_253F:
	branch cx_100 == 0x0000 l0800_2541
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_253F_2:
	Z_108 = SLICE(cond(0x00 - Mem80[es_116:di_103:byte]), bool, 2) (alias)
	di_103 = di_103 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch Mem80[es_116:di_103:byte] == 0x00 l0800_253F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2541:
	branch Z_108 l0800_254A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2543:
	di_103 = 0x0001
	es_116 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_254A:
	word16 dx_141 = (ax_60 << 0x08) + (uint16) ((uint8) Mem80[es_116:di_103 + 0x0001:byte])
	selector es_187 = SLICE(ptrArg02, selector, 16)
	word16 di_159 = SLICE(ptrArg02, word16, 0)
	word16 cx_155 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2562:
	branch cx_155 == 0x0000 l0800_2564
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2562_1:
	di_159 = di_159 + 0x0001
	cx_155 = cx_155 - 0x0001
	branch Mem154[es_187:di_159:byte] == 0x00 l0800_2562
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2564:
	word16 cx_166 = ~cx_155
	word16 di_169 = di_159 - cx_166
	bool Z_179 = SLICE(cond(di_169), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256A:
	branch cx_166 == 0x0000 l0800_256C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256A_2:
	Z_179 = SLICE(cond(0x00 - Mem154[es_187:di_169:byte]), bool, 2) (alias)
	di_169 = di_169 + 0x0001
	cx_166 = cx_166 - 0x0001
	branch Mem154[es_187:di_169:byte] == 0x00 l0800_256A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256C:
	branch Z_179 l0800_2575
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256E:
	di_169 = 0x0001
	es_187 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2575:
	word16 ax_198 = (int16) Mem154[es_187:di_169 + 0x0002:byte]
	selector es_254 = SLICE(ptrArg02, selector, 16)
	word16 di_226 = SLICE(ptrArg02, word16, 0)
	word16 cx_222 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258C:
	branch cx_222 == 0x0000 l0800_258E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258C_1:
	di_226 = di_226 + 0x0001
	cx_222 = cx_222 - 0x0001
	branch Mem218[es_254:di_226:byte] == 0x00 l0800_258C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258E:
	word16 cx_233 = ~cx_222
	word16 di_236 = di_226 - cx_233
	bool Z_246 = SLICE(cond(di_236), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2594:
	branch cx_233 == 0x0000 l0800_2596
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2594_2:
	Z_246 = SLICE(cond(0x00 - Mem218[es_254:di_236:byte]), bool, 2) (alias)
	di_236 = di_236 + 0x0001
	cx_233 = cx_233 - 0x0001
	branch Mem218[es_254:di_236:byte] == 0x00 l0800_2594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2596:
	branch Z_246 l0800_259F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2598:
	di_236 = 0x0001
	es_254 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_259F:
	word16 dx_279 = (ax_198 << 0x08) + (uint16) ((uint8) Mem218[es_254:di_236 + 0x0003:byte])
	word16 dx_716
	word16 bx_717
	word16 cx_715
	word16 ax_337 = fn0800_ACB3(ds, SEQ(Mem330[ds:0x29D1:word16], Mem333[ds:0x29CF:word16]), SEQ(dx_141 + (dx_279 <u 0x0000), dx_279) - SEQ(Mem218[ds:0x45A8:word16], Mem218[ds:0x45A6:word16]), 0x0000, out cx_715, out dx_716, out bx_717)
	word16 di_718
	word16 dx_372
	selector ds_357
	word16 ax_369 = fn0800_8C8A(ax_337, 0x08, fn0800_3E5D(ds, SEQ(Mem336[ds:0x29D1:word16], Mem350[ds:0x29CF:word16]), out di_718, out ds_357), out dx_372)
	word16 sp_373 = <invalid>
	branch dx_372 != 0x0052 l0800_25FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_25F7:
	branch ax_369 == 0x4E43 l0800_260B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_25FC:
	Mem386[ss:sp_373 - 2:word16] = ds_357
	Mem389[ss:sp_373 - 4:word16] = 0x4348
	Mem392[ss:sp_373 - 6:word16] = 0x000C
	word16 dx_720
	word16 cx_719
	selector es_723
	word16 di_722
	word16 bx_721
	fn0800_0D24(ds_357, Mem392[ss:sp_373 - 6:word16], Mem392[ss:sp_373 - 4:segptr32], out cx_719, out dx_720, out bx_721, out si, out di_722, out es_723, out ds_357)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_260B:
	selector ds_429
	branch (ax_337 & 0x00FF) == 0x0000 l0800_2655
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2655:
	Mem422[ss:sp_373 - 2:word16] = Mem411[ds_357:0x29D1:word16]
	Mem425[ss:sp_373 - 4:word16] = Mem422[ds_357:0x29CF:word16]
	word16 di_724
	word16 dx_430 = fn0800_3E5D(ds_357, Mem425[ss:sp_373 - 4:word32], out di_724, out ds_429)
	Mem437[ds_429:0x2A05:word16] = dx_430
	Mem438[ds_429:0x2A03:word16] = ax_337 & 0x00FF
	Mem439[ds_429:0x2A09:word16] = dx_430
	Mem440[ds_429:0x2A07:word16] = ax_337 & 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2616:
	Mem450[ss:sp_373 - 2:word16] = Mem411[ds_357:0x29D1:word16]
	Mem453[ss:sp_373 - 4:word16] = Mem450[ds_357:0x29CF:word16]
	selector ds_457
	word16 di_725
	Mem466[ds_457:0x2A09:word16] = fn0800_3E5D(ds_357, Mem453[ss:sp_373 - 4:word32], out di_725, out ds_457)
	Mem467[ds_457:0x2A07:word16] = ax_337 & 0x00FF
	Mem470[ss:sp_373 - 2:word16] = Mem467[ds_457:0x29D1:word16]
	Mem473[ss:sp_373 - 4:word16] = Mem470[ds_457:0x29CF:word16]
	word16 di_726
	Mem485[ds_429:0x2A05:word16] = fn0800_3E5D(ds_457, Mem473[ss:sp_373 - 4:word32], out di_726, out ds_429)
	Mem486[ds_429:0x2A03:word16] = ax_337 & 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_267D:
	dsOut = ds_429
	return si
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_24FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_2688(selector ds, ui32 dwArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp sp
fn0800_2688_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2688:
	ptr32 es_bx_11 = Mem7[ds:0x2E51:segptr32]
	word16 sp_106 = fp - 0x0012
	word16 dx_23 = Mem7[ds:0x2E53:word16]
	word16 bx_24 = SLICE(es_bx_11, word16, 0) + (((uint16) ((uint8) Mem7[es_bx_11 + 0x0004:byte]) << 0x08) + (uint16) ((uint8) Mem7[es_bx_11 + 0x0005:byte]))
	segptr32 ptrLoc06_411 = SEQ(Mem26[ds:0x2E53:word16], Mem26[ds:0x2E51:word16] + 0x0008)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27B3:
	word16 wLoc06_264 = SLICE(ptrLoc06_411, word16, 0)
	word16 wLoc04_263 = SLICE(ptrLoc06_411, word16, 16)
	branch wLoc04_263 == dx_23 l0800_27C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C1:
	branch wLoc06_264 == bx_24 l0800_27C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C9:
	branch (wArg06 | wArg08) != 0x0000 l0800_27DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27D1:
	Mem51[ds:0x45A6:word16] = v22_50
	ui32 v23_v22_251 = SEQ(Mem51[ds:0x45A8:word16], Mem35[ds:0x45A6:word16]) + dwArg02
	Mem55[ds:0x45A8:word16] = SLICE(v23_v22_251, word16, 16)
	word16 v22_50 = (word16) v23_v22_251
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27DF:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2688_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27BE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26C3:
	segptr32 ptrLoc06_278 = SEQ(wLoc04_263, wLoc06_264 + 0x0002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26D3:
	ptrLoc06_278 = SEQ(wLoc04_341, wLoc06_279 + 0x0001) (alias)
	word16 wLoc06_279 = SLICE(ptrLoc06_418, word16, 0)
	word16 wLoc04_341 = SLICE(ptrLoc06_418, word16, 16)
	ptrLoc06_418 = ptrLoc06_278
	branch Mem78[ptrLoc06_418:byte] != 0x00 l0800_26D3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_277D:
	word16 wLoc06_282 = SLICE(ptrLoc06_278, word16, 0)
	word16 wLoc04_317 = SLICE(ptrLoc06_278, word16, 16)
	branch Mem85[ptrLoc06_278:byte] == 0x00 l0800_2789
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2789:
	word16 ax_96 = wLoc06_282 + 0x0001 - Mem92[ds:0x2E51:word16]
	word16 dx_415
	Mem115[ptrLoc06_411:byte] = SLICE(fn0800_8C8A(ax_96, 0x08, 0x0000 - (ax_96 <u 0x0000), out dx_415), byte, 0)
	Mem124[ptrLoc06_411 + 0x0001:byte] = SLICE(wLoc06_282 + 0x0001 - Mem115[ds:0x2E51:word16], byte, 0)
	sp_106 = <invalid>
	ptrLoc06_411 = SEQ(wLoc04_317, wLoc06_282 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2786:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26E2:
	word16 wLoc06_286 = SLICE(ptrLoc06_419, word16, 0)
	word16 wLoc04_288 = SLICE(ptrLoc06_419, word16, 16)
	ptrLoc06_278 = SEQ(wLoc04_288, wLoc06_286 + 0x0001) (alias)
	ptrLoc06_419 = ptrLoc06_278
	branch Mem130[ptrLoc06_419:byte] != 0x00 l0800_26E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26EE:
	word16 sp_149 = sp_106 - 2
	Mem150[ss:sp_149:word16] = ((int16) Mem130[ptrLoc06_278:byte] << 0x08) + (uint16) ((uint8) Mem130[ptrLoc06_278 + 0x0001:byte])
	word16 ax_157 = ((int16) Mem150[ptrLoc06_278 + 0x0002:byte] << 0x08) + (uint16) ((uint8) Mem150[ptrLoc06_278 + 0x0003:byte])
	sp_106 = sp_149 + 2
	word16 ax_163 = Mem150[ss:sp_149:word16] + (ax_157 <u 0x0000)
	byte bLoc12_312 = SLICE(ax_157, byte, 0)
	branch ax_163 < wArg08 l0800_2779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2727:
	branch ax_163 != wArg08 l0800_272E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2729:
	branch ax_157 <u wArg06 l0800_2779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_272E:
	int32 dx_ax_182 = (int32) SLICE(SEQ(ax_163, ax_157) + dwArg02, word16, 16)
	word16 dx_416
	Mem199[ptrLoc06_278:byte] = SLICE(fn0800_8C8A(SLICE(dx_ax_182, word16, 0), 0x08, SLICE(dx_ax_182, word16, 16), out dx_416), byte, 0)
	Mem208[ptrLoc06_278 + 0x0001:byte] = SLICE((int32) SLICE(SEQ(ax_163, ax_157) + dwArg02, word16, 16), byte, 0)
	int32 dx_ax_257 = SEQ(ax_163, ax_157) + dwArg02
	word16 dx_417
	Mem230[ptrLoc06_278 + 0x0002:byte] = SLICE(fn0800_8C8A((word16) dx_ax_257, 0x08, SLICE(dx_ax_257, word16, 16), out dx_417), byte, 0)
	Mem234[ptrLoc06_278 + 0x0003:byte] = bLoc12_312 + SLICE(dwArg02, byte, 0)
	sp_106 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2779:
	ptrLoc06_278 = SEQ(wLoc04_288, wLoc06_286 + 0x0005) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_283D(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_283D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_283D:
	selector es_299 = SLICE(ptrArg02, selector, 16)
	word16 di_24 = SLICE(ptrArg02, word16, 0)
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284D:
	branch cx_20 == 0x0000 l0800_284F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284D_1:
	di_24 = di_24 + 0x0001
	cx_20 = cx_20 - 0x0001
	branch Mem15[es_299:di_24:byte] == 0x00 l0800_284D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284F:
	word16 cx_31 = ~cx_20
	word16 di_34 = di_24 - cx_31
	bool Z_44 = SLICE(cond(di_34), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2856:
	branch cx_31 == 0x0000 l0800_2858
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2856_2:
	Z_44 = SLICE(cond(0x3A - Mem15[es_299:di_34:byte]), bool, 2) (alias)
	di_34 = di_34 + 0x0001
	cx_31 = cx_31 - 0x0001
	branch Mem15[es_299:di_34:byte] == 0x3A l0800_2856
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2858:
	branch Z_44 l0800_2861
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_285A:
	di_34 = 0x0001
	es_299 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2861:
	branch (di_34 - 0x0001 | es_299) == 0x0000 l0800_288E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2868:
	selector es_111 = SLICE(ptrArg02, selector, 16)
	word16 di_306 = SLICE(ptrArg02, word16, 0)
	word16 cx_79 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2870:
	branch cx_79 == 0x0000 l0800_2872
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2870_1:
	di_306 = di_306 + 0x0001
	cx_79 = cx_79 - 0x0001
	branch Mem15[es_111:di_306:byte] == 0x00 l0800_2870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2872:
	word16 cx_102 = ~cx_79
	word16 di_101 = di_306 - cx_102
	bool Z_103 = SLICE(cond(di_101), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2879:
	branch cx_102 == 0x0000 l0800_287B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2879_2:
	Z_103 = SLICE(cond(0x3A - Mem15[es_111:di_101:byte]), bool, 2) (alias)
	di_101 = di_101 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem15[es_111:di_101:byte] == 0x3A l0800_2879
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_287B:
	branch Z_103 l0800_2884
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_287D:
	di_101 = 0x0001
	es_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2884:
	ptrArg02 = SEQ(es_111, di_101) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_288E:
	ptr32 es_bx_145 = Mem144[ds:0x2E51:segptr32]
	word16 dx_157 = Mem144[ds:0x2E53:word16]
	word16 bx_158 = SLICE(es_bx_145, word16, 0) + (((uint16) ((uint8) Mem144[es_bx_145 + 0x0004:byte]) << 0x08) + (uint16) ((uint8) Mem144[es_bx_145 + 0x0005:byte]))
	segptr32 ptrLoc0A_511 = SEQ(Mem162[ds:0x2E53:word16], Mem162[ds:0x2E51:word16] + 0x0008)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2917:
	word16 wLoc0A_346 = SLICE(ptrLoc0A_511, word16, 0)
	word16 wLoc08_345 = SLICE(ptrLoc0A_511, word16, 16)
	branch wLoc08_345 != dx_157 l0800_28C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2922:
	branch wLoc0A_346 != bx_158 l0800_28C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28C2:
	word16 si_182 = wLoc0A_346 + 0x0002
	selector es_322 = SLICE(ptrArg02, selector, 16)
	word16 di_198 = SLICE(ptrArg02, word16, 0)
	word16 cx_194 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D4:
	branch cx_194 == 0x0000 l0800_28D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D4_1:
	di_198 = di_198 + 0x0001
	cx_194 = cx_194 - 0x0001
	branch Mem188[es_322:di_198:byte] == 0x00 l0800_28D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D6:
	word16 cx_205 = ~cx_194
	word16 di_207 = di_198 - cx_205
	word16 ax_230 = 0x0000
	bool Z_219 = SLICE(cond(di_207), bool, 2)
	di_214 = di_207
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DA:
	word16 di_214
	branch cx_205 == 0x0000 l0800_28DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DA_2:
	Z_219 = SLICE(cond(Mem188[wLoc08_345:si_521:byte] - Mem188[es_322:di_522:byte]), bool, 2) (alias)
	si_182 = si_521 + 0x0001
	di_214 = di_522 + 0x0001
	cx_205 = cx_205 - 0x0001
	si_521 = si_182
	di_522 = di_214
	branch Mem188[wLoc08_345:si_521:byte] != Mem188[es_322:di_522:byte] l0800_28DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DC:
	branch Z_219 l0800_28E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DE:
	word16 ax_227 = 0x0000 - (di_207 <u 0x0000)
	ax_230 = ax_227 - 0xFFFF - (ax_227 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28E3:
	branch ax_230 != 0x0000 l0800_28F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28F4:
	ptrLoc0A_511 = SEQ(Mem188[ds:0x2E53:word16], Mem188[ds:0x2E51:word16] + (((int16) Mem188[ptrLoc0A_511:byte] << 0x08) + (uint16) ((uint8) Mem188[ptrLoc0A_511 + 0x0001:byte]))) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28E8:
	dxOut = wLoc08_345
	return wLoc0A_346
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2927:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_283D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2931(segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_2931_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2931:
	selector es_237 = SLICE(ptrArg06, selector, 16)
	word16 di_17 = SLICE(ptrArg06, word16, 0) + 0x0002
	word16 cx_21 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2941:
	branch cx_21 == 0x0000 l0800_2943
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2941_1:
	di_17 = di_17 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch Mem14[es_237:di_17:byte] == 0x00 l0800_2941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2943:
	word16 cx_32 = ~cx_21
	word16 di_35 = di_17 - cx_32
	bool Z_45 = SLICE(cond(di_35), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2949:
	branch cx_32 == 0x0000 l0800_294B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2949_2:
	Z_45 = SLICE(cond(0x00 - Mem14[es_237:di_35:byte]), bool, 2) (alias)
	di_35 = di_35 + 0x0001
	cx_32 = cx_32 - 0x0001
	branch Mem14[es_237:di_35:byte] == 0x00 l0800_2949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_294B:
	branch Z_45 l0800_2954
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_294D:
	di_35 = 0x0001
	es_237 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2954:
	segptr32 ptrArg06_283 = SEQ(es_237, di_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29B4:
	word16 wArg06_284 = SLICE(ptrArg06_283, word16, 0)
	word16 wArg08_286 = SLICE(ptrArg06_283, word16, 16)
	branch Mem76[ptrArg06_283:byte] != 0x00 l0800_2960
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2960:
	word16 si_109 = wArg06_284
	selector es_263 = SLICE(ptrArg02, selector, 16)
	word16 di_104 = SLICE(ptrArg02, word16, 0)
	word16 cx_100 = 0xFFFF
	word16 wArg08_301 = SLICE(ptrArg06_283, word16, 16)
	word16 wArg06_302 = SLICE(ptrArg06_283, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_296F:
	branch cx_100 == 0x0000 l0800_2971
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_296F_1:
	di_104 = di_104 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch Mem86[es_263:di_104:byte] == 0x00 l0800_296F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2971:
	word16 cx_103 = ~cx_100
	word16 di_105 = di_104 - cx_103
	word16 ax_128 = 0x0000
	bool Z_117 = SLICE(cond(di_105), bool, 2)
	di_112 = di_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2975:
	word16 di_112
	branch cx_103 == 0x0000 l0800_2977
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2975_2:
	Z_117 = SLICE(cond(Mem86[wArg08_286:si_423:byte] - Mem86[es_263:di_424:byte]), bool, 2) (alias)
	si_109 = si_423 + 0x0001
	di_112 = di_424 + 0x0001
	cx_103 = cx_103 - 0x0001
	si_423 = si_109
	di_424 = di_112
	branch Mem86[wArg08_286:si_423:byte] != Mem86[es_263:di_424:byte] l0800_2975
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2977:
	branch Z_117 l0800_297E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2979:
	word16 ax_125 = 0x0000 - (di_105 <u 0x0000)
	ax_128 = ax_125 - 0xFFFF - (ax_125 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_297E:
	branch ax_128 != 0x0000 l0800_298D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_298D:
	selector es_197 = SLICE(ptrArg06_283, selector, 16)
	word16 di_169 = SLICE(ptrArg06_283, word16, 0)
	word16 cx_165 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2995:
	branch cx_165 == 0x0000 l0800_2997
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2995_1:
	di_169 = di_169 + 0x0001
	cx_165 = cx_165 - 0x0001
	branch Mem86[es_197:di_169:byte] == 0x00 l0800_2995
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2997:
	word16 cx_176 = ~cx_165
	word16 di_179 = di_169 - cx_176
	bool Z_189 = SLICE(cond(di_179), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299D:
	branch cx_176 == 0x0000 l0800_299F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299D_2:
	Z_189 = SLICE(cond(0x00 - Mem86[es_197:di_179:byte]), bool, 2) (alias)
	di_179 = di_179 + 0x0001
	cx_176 = cx_176 - 0x0001
	branch Mem86[es_197:di_179:byte] == 0x00 l0800_299D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299F:
	branch Z_189 l0800_29A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29A1:
	di_179 = 0x0001
	es_197 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29A8:
	ptrArg06_283 = SEQ(es_197, di_179 + 0x0004) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2983:
	dxOut = wArg08_301
	return wArg06_302
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29BD:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2931_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_29C5(word16 cx, word16 dx, word16 si, word16 di, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut: ax ds
// Trashed: SCZDOP ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_29C5_entry:
	byte ch_850 = SLICE(cx, byte, 8)
	ch_850 = SLICE(cx, byte, 8) (alias)
	word16 wArg0C = SLICE(ptrArg0A, word16, 16)
	word16 wArg0A = SLICE(ptrArg0A, word16, 0)
	word16 wArg06 = SLICE(ptrArg06, word16, 0)
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29C5:
	branch (Mem15[ds:0x45AE:word16] | Mem15[ds:0x45B0:word16]) != 0x0000 l0800_2A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29D6:
	branch (Mem15[ds:0x45AA:word16] | Mem15[ds:0x45AC:word16]) != 0x0000 l0800_2A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29DF:
	word16 cx_36 = <invalid>
	ch_850 = SLICE(cx_36, byte, 8) (alias)
	word16 dx_1494
	byte ch_1493
	branch fn0800_2DE2(cx, dx, si, di, ds, SEQ(ds, 0x4541), out ch_1493, out dx_1494, out ds) != 0x0000 l0800_29F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29F6:
	word16 dx_53 = Mem31[ds:0x2E51:word16]
	Mem56[ds:0x45B0:word16] = Mem31[ds:0x2E53:word16]
	Mem57[ds:0x45AE:word16] = dx_53 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A07:
	word16 bx_1492
	fn0800_3509(si, di, fp - 0x006C, ss, SEQ(ds, 0x4541), out bx_1492)
	fn0800_35A3(si, di, fp - 0x007A, ss, SEQ(ds, 0x4541))
	ptr32 es_bx_107 = Mem95[ds:0x2E51:segptr32]
	word16 dx_119 = Mem95[ds:0x2E53:word16]
	word16 bx_120 = SLICE(es_bx_107, word16, 0) + (((uint16) ((uint8) Mem95[es_bx_107 + 0x0004:byte]) << 0x08) + (uint16) ((uint8) Mem95[es_bx_107 + 0x0005:byte]))
	word16 cx_168 = SEQ(ch_850, 0x08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C53:
	word16 dx_127 = Mem125[ds:0x45AE:word16]
	branch Mem125[ds:0x45B0:word16] == dx_119 l0800_2C62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C62:
	branch dx_127 == bx_120 l0800_2C6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C6A:
	Mem138[ds:0x45AC:word16] = 0x0000
	Mem139[ds:0x45AA:word16] = 0x0000
	Mem140[ds:0x45B0:word16] = 0x0000
	Mem141[ds:0x45AE:word16] = 0x0000
	selector ds_1495
	word16 ax_164 = fn0800_29C5(cx_168, 0x0000, si, di, ds, wArg02, wArg06, wArg0A, out ds_1495)
	dsOut = ds
	return ax_164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C67:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C5F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A4C:
	branch (Mem125[ds:0x45AA:word16] | Mem125[ds:0x45AC:word16]) != 0x0000 l0800_2A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A58:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B54:
	branch Mem190[Mem190[ds:0x45AA:segptr32]:byte] == 0x00 l0800_2B61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B61:
	ptr32 es_bx_196 = Mem190[ds:0x45AE:segptr32]
	word16 bx_209 = Mem190[ds:0x2E51:word16] + (((int16) Mem190[es_bx_196:byte] << 0x08) + (uint16) ((uint8) Mem190[es_bx_196 + 0x0001:byte]))
	Mem211[ds:0x45B0:word16] = Mem190[ds:0x2E53:word16]
	Mem212[ds:0x45AE:word16] = bx_209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B5E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A5B:
	branch fn0800_4357(SEQ(Mem220[ds:0x45AC:word16], Mem223[ds:0x45AA:word16]), SEQ(ss, fp - 0x007A)) != 0x0000 l0800_2A75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A75:
	word16 dx_242 = Mem226[ds:0x45AE:word16]
	Mem245[ptrArg02 + 0x0002:word16] = Mem226[ds:0x45B0:word16]
	Mem246[ptrArg02:word16] = dx_242
	word16 dx_249 = Mem246[ds:0x45AA:word16]
	Mem252[ptrArg06 + 0x0002:word16] = Mem246[ds:0x45AC:word16]
	Mem253[ptrArg06:word16] = dx_249
	ptr32 es_di_254 = Mem253[ds:0x45AE:segptr32]
	selector es_258 = SLICE(es_di_254, selector, 16)
	word16 di_1496 = SLICE(es_di_254, word16, 0) + 0x0002
	word16 cx_277 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB3:
	branch cx_277 == 0x0000 l0800_2AB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB3_1:
	di_1496 = di_1496 + 0x0001
	cx_277 = cx_277 - 0x0001
	branch Mem273[es_258:di_1496:byte] == 0x00 l0800_2AB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB5:
	word16 cx_288 = ~cx_277
	word16 cx_291 = cx_288 >>u 0x0001
	word16 si_293 = di_1496 - cx_288
	word16 di_299 = wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC4:
	branch cx_291 == 0x0000 l0800_2AC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC6:
	word16 cx_312 = cx_291 * 0x0002 + (cx_288 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC8:
	branch cx_312 == 0x0000 l0800_2ACA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ACA:
	selector es_325 = Mem324[ds:0x45AC:selector]
	word16 di_1497 = Mem328[ds:0x45AA:word16]
	word16 cx_333 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADD:
	branch cx_333 == 0x0000 l0800_2ADF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADD_1:
	di_1497 = di_1497 + 0x0001
	cx_333 = cx_333 - 0x0001
	branch Mem328[es_325:di_1497:byte] == 0x00 l0800_2ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADF:
	word16 cx_344 = ~cx_333
	word16 si_347 = di_1497 - cx_344
	word16 di_1498 = wArg0A
	word16 cx_365 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF3:
	branch cx_365 == 0x0000 l0800_2AF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF3_2:
	di_1498 = di_1498 + 0x0001
	cx_365 = cx_365 - 0x0001
	branch Mem364[wArg0C:di_1498:byte] == 0x00 l0800_2AF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF5:
	word16 di_379 = di_1498 - 0x0001
	word16 cx_386 = cx_344
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF7:
	branch cx_386 == 0x0000 l0800_2AF9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF9:
	ptr32 es_di_392 = Mem391[ds:0x45AA:segptr32]
	selector es_425 = SLICE(es_di_392, selector, 16)
	word16 di_1499 = SLICE(es_di_392, word16, 0)
	word16 cx_393 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B02:
	branch cx_393 == 0x0000 l0800_2B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B02_1:
	di_1499 = di_1499 + 0x0001
	cx_393 = cx_393 - 0x0001
	branch Mem391[es_425:di_1499:byte] == 0x00 l0800_2B02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B04:
	word16 cx_404 = ~cx_393
	word16 di_1500 = di_1499 - cx_404
	bool Z_417 = SLICE(cond(di_1500), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0A:
	branch cx_404 == 0x0000 l0800_2B0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0A_2:
	Z_417 = SLICE(cond(0x00 - Mem391[es_425:di_1500:byte]), bool, 2) (alias)
	di_1500 = di_1500 + 0x0001
	cx_404 = cx_404 - 0x0001
	branch Mem391[es_425:di_1500:byte] == 0x00 l0800_2B0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0C:
	branch Z_417 l0800_2B15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0E:
	di_1500 = 0x0001
	es_425 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B15:
	Mem439[ds:0x45AC:word16] = es_425
	Mem440[ds:0x45AA:word16] = di_1500 + 0x0004
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF7_3:
	Mem471[wArg0C:di_379:byte] = Mem391[es_325:si_347:byte]
	si_347 = si_347 + 0x0001
	di_379 = di_379 + 0x0001
	cx_386 = cx_386 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC8_1:
	Mem480[wArg0C:di_299:byte] = Mem317[es_258:si_293:byte]
	si_293 = si_293 + 0x0001
	di_299 = di_299 + 0x0001
	cx_312 = cx_312 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC4_2:
	Mem490[wArg0C:di_299:word16] = Mem486[es_258:si_293:word16]
	si_293 = si_293 + 0x0002
	di_299 = di_299 + 0x0002
	cx_291 = cx_291 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A72:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B2B:
	ptr32 es_di_494 = Mem226[ds:0x45AA:segptr32]
	selector es_530 = SLICE(es_di_494, selector, 16)
	word16 di_1501 = SLICE(es_di_494, word16, 0)
	word16 cx_498 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B34:
	branch cx_498 == 0x0000 l0800_2B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B34_1:
	di_1501 = di_1501 + 0x0001
	cx_498 = cx_498 - 0x0001
	branch Mem226[es_530:di_1501:byte] == 0x00 l0800_2B34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B36:
	word16 cx_509 = ~cx_498
	word16 di_1502 = di_1501 - cx_509
	bool Z_522 = SLICE(cond(di_1502), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3C:
	branch cx_509 == 0x0000 l0800_2B3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3C_2:
	Z_522 = SLICE(cond(0x00 - Mem226[es_530:di_1502:byte]), bool, 2) (alias)
	di_1502 = di_1502 + 0x0001
	cx_509 = cx_509 - 0x0001
	branch Mem226[es_530:di_1502:byte] == 0x00 l0800_2B3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3E:
	branch Z_522 l0800_2B47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B40:
	di_1502 = 0x0001
	es_530 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B47:
	Mem544[ds:0x45AC:word16] = es_530
	Mem545[ds:0x45AA:word16] = di_1502 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A55:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C12:
	word16 dx_549 = Mem547[ds:0x45AE:word16]
	branch Mem547[ds:0x45B0:word16] == dx_119 l0800_2C21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C21:
	branch dx_549 == bx_120 l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C26:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C1E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B8A:
	branch Mem547[ds:0x2A1B:word16] == 0x0000 l0800_2BBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B91:
	word16 di_568 = fp - 0x006C
	word16 cx_572 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9B:
	branch cx_572 == 0x0000 l0800_2B9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9B_1:
	di_568 = di_1503 + 0x0001
	cx_572 = cx_572 - 0x0001
	di_1503 = di_568
	branch Mem564[ss:di_1503:byte] == 0x00 l0800_2B9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9D:
	branch fn0800_BFE6(SEQ(Mem597[ds:0x45B0:word16], Mem597[ds:0x45AE:word16] + 0x0002), SEQ(ss, fp - 0x006C), ~cx_572 - 0x0001) == 0x0000 l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BBB:
	branch Mem624[ds:0x2A1B:word16] != 0x0000 l0800_2BEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BC2:
	si = Mem624[ds:0x45AE:word16] + 0x0002
	selector ds_633 = Mem632[ds:0x45B0:selector]
	word16 di_1504 = fp - 0x006C
	word16 cx_643 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BD8:
	branch cx_643 == 0x0000 l0800_2BDA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BD8_2:
	di_1504 = di_1504 + 0x0001
	cx_643 = cx_643 - 0x0001
	branch Mem635[ss:di_1504:byte] == 0x00 l0800_2BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDA:
	word16 cx_654 = ~cx_643
	word16 di_656 = di_1504 - cx_654
	word16 ax_679 = 0x0000
	bool Z_668 = SLICE(cond(di_656), bool, 2)
	di_663 = di_656
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDE:
	word16 di_663
	branch cx_654 == 0x0000 l0800_2BE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDE_3:
	Z_668 = SLICE(cond(Mem635[ds_633:si:byte] - Mem635[ss:di_1506:byte]), bool, 2) (alias)
	si = si + 0x0001
	di_663 = di_1506 + 0x0001
	cx_654 = cx_654 - 0x0001
	di_1506 = di_663
	branch Mem635[ds_633:si:byte] != Mem635[ss:di_1506:byte] l0800_2BDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE0:
	branch Z_668 l0800_2BE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE2:
	word16 ax_676 = 0x0000 - (di_656 <u 0x0000)
	ax_679 = ax_676 - 0xFFFF - (ax_676 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE7:
	branch ax_679 == 0x0000 l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C29:
	ptr32 es_di_709 = Mem708[ds:0x45AE:segptr32]
	selector es_747 = SLICE(es_di_709, selector, 16)
	word16 di_1507 = SLICE(es_di_709, word16, 0) + 0x0002
	word16 cx_715 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C35:
	branch cx_715 == 0x0000 l0800_2C37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C35_1:
	di_1507 = di_1507 + 0x0001
	cx_715 = cx_715 - 0x0001
	branch Mem708[es_747:di_1507:byte] == 0x00 l0800_2C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C37:
	cx_168 = ~cx_715
	word16 di_1508 = di_1507 - cx_168
	bool Z_739 = SLICE(cond(di_1508), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3D:
	branch cx_168 == 0x0000 l0800_2C3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3D_2:
	Z_739 = SLICE(cond(0x00 - Mem708[es_747:di_1508:byte]), bool, 2) (alias)
	di_1508 = di_1508 + 0x0001
	cx_168 = cx_168 - 0x0001
	branch Mem708[es_747:di_1508:byte] == 0x00 l0800_2C3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3F:
	branch Z_739 l0800_2C48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C41:
	di_1508 = 0x0001
	es_747 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C48:
	word16 di_750 = di_1508 - 0x0001
	Mem761[ds:0x45AC:word16] = es_747
	Mem762[ds:0x45AA:word16] = di_750 + 0x0001
	di = di_750 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BEC:
	ptr32 es_bx_765 = Mem764[ds:0x45AE:segptr32]
	word16 bx_778 = Mem764[ds:0x2E51:word16] + (((int16) Mem764[es_bx_765:byte] << 0x08) + (uint16) ((uint8) Mem764[es_bx_765 + 0x0001:byte]))
	Mem780[ds:0x45B0:word16] = Mem764[ds:0x2E53:word16]
	Mem781[ds:0x45AE:word16] = bx_778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29EE:
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_29C5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2C9A(selector ds, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: si sp
fn0800_2C9A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C9A:
	word16 cx_12 = 0x0000
	word16 si_11 = 0x2A29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CA0:
	word16 dx_13 = cx_12
	word16 bx_14 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CBD:
	branch bx_14 != 0x0000 l0800_2CA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CA7:
	word16 ax_25
	branch (dx_13 & 0x0001) == 0x0000 l0800_2CB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CB6:
	ax_25 = dx_13 >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CAD:
	ax_25 = dx_13 >>u 0x0001 ^ 0xA001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CBA:
	dx_13 = ax_25
	bx_14 = bx_14 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CC1:
	Mem43[ds:si_11:word16] = dx_13
	si_11 = si_11 + 0x0002
	cx_12 = cx_12 + 0x0001
	branch cx_12 <u 0x0100 l0800_2CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CCD:
	dxOut = dx_13
	bxOut = bx_14
	return cx_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2C9A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax cl dx
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp si sp
fn0800_2CCF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CCF:
	word16 si_12 = wArg06
	word16 ax_38 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CFD:
	byte bArg08_55 = SLICE(ax_38, byte, 0)
	word16 wArg02_59 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_64 = SLICE(ptrArg02, word16, 16)
	si_12 = si_12 - 0x0001
	branch si_12 != 0x0000 l0800_2CD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CD8:
	cl = 0x08
	dx = ax_38 >>u 0x08
	ax_38 = Mem22[ds:(((uint16) (uint8) (bArg08_55 ^ Mem22[ptrArg02:byte]) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ ax_38 >>u 0x08
	ptrArg02 = SEQ(wArg04_64, wArg02_59 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D04:
	clOut = cl
	dxOut = dx
	return ax_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2CCF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2D0A(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_2D0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D0A:
	word16 bp_23
	word16 dx_28
	word16 si_242
	word16 di_119
	selector ds_114
	word16 ax_22 = fn0800_4311(ds, 0xFFF0, 0x0000, out dx_28, out bp_23, out si_242, out di_119, out ds_114)
	Mem38[ss:bp_23 - 0x0002:word16] = dx_28
	Mem39[ss:bp_23 - 0x0004:word16] = ax_22
	word16 sp_31 = <invalid>
	Mem42[ss:sp_31 + 0x0002:word16] = Mem39[ss:bp_23 + 0x0006:word16]
	Mem45[ss:sp_31:word16] = Mem42[ss:bp_23 + 0x0004:word16]
	word16 dx_49
	word16 ax_46 = fn0800_AD2F(ds_114, Mem45[ss:sp_31:segptr32], out dx_49)
	Mem56[ss:bp_23 - 0x000A:word16] = dx_49
	Mem57[ss:bp_23 - 0x000C:word16] = ax_46
	word16 si_151 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D8F:
	branch (Mem63[ss:bp_23 + 0x0008:word16] | Mem63[ss:bp_23 + 0x000A:word16]) != 0x0000 l0800_2D3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D3A:
	word16 ax_78
	word16 dx_77
	branch Mem63[ss:bp_23 + 0x000A:word16] <u 0x0000 l0800_2D4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D40:
	branch Mem63[ss:bp_23 + 0x000A:word16] >u 0x0000 l0800_2D48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D42:
	branch Mem63[ss:bp_23 + 0x0008:word16] <=u 0xFFF0 l0800_2D4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D4F:
	dx_77 = Mem63[ss:bp_23 + 0x000A:word16]
	ax_78 = Mem63[ss:bp_23 + 0x0008:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D48:
	dx_77 = 0x0000
	ax_78 = 0xFFF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D55:
	Mem88[ss:bp_23 - 0x0006:word16] = dx_77
	Mem90[ss:bp_23 - 0x0008:word16] = ax_78
	Mem97[ss:sp_31 + 0x0002:word16] = Mem90[ss:bp_23 + 0x0006:word16]
	Mem100[ss:sp_31:word16] = Mem97[ss:bp_23 + 0x0004:word16]
	Mem103[ss:sp_31 - 0x0002:word16] = Mem100[ss:bp_23 - 0x0006:word16]
	Mem105[ss:sp_31 - 0x0004:word16] = ax_78
	Mem108[ss:sp_31 - 0x0006:word16] = Mem105[ss:bp_23 - 0x0002:word16]
	Mem111[ss:sp_31 - 0x0008:word16] = Mem108[ss:bp_23 - 0x0004:word16]
	word16 si_123
	fn0800_4110(ds_114, Mem111[ss:sp_31 - 0x0008:word32], Mem111[ss:sp_31 - 0x0004:word16], Mem111[ss:sp_31 - 0x0002:word16], Mem111[ss:sp_31:word32], out si_123, out di_119, out ds_114)
	Mem131[ss:sp_31 + 0x0002:word16] = si_123
	Mem134[ss:sp_31:word16] = Mem131[ss:bp_23 - 0x0008:word16]
	Mem137[ss:sp_31 - 0x0002:word16] = Mem134[ss:bp_23 - 0x0002:word16]
	Mem140[ss:sp_31 - 0x0004:word16] = Mem137[ss:bp_23 - 0x0004:word16]
	byte cl_248
	word16 dx_249
	si_151 = fn0800_2CCF(ds_114, Mem140[ss:sp_31 - 0x0004:segptr32], Mem140[ss:sp_31:word16], Mem140[ss:sp_31 + 0x0002:word16], out cl_248, out dx_249)
	word16 ax_152 = Mem140[ss:bp_23 - 0x0006:word16]
	word16 dx_153 = Mem140[ss:bp_23 - 0x0008:word16]
	Mem155[ss:bp_23 + 0x0008:word16] = v29_154
	Mem140[ss:bp_23 + 0x0008:ui32] = SEQ(Mem155[ss:bp_23 + 0x000A:word16], Mem140[ss:bp_23 + 0x0008:word16])
	ui32 v30_v29_214 = Mem140[ss:bp_23 + 0x0008:ui32] - SEQ(ax_152, dx_153)
	Mem159[ss:bp_23 + 0x000A:word16] = SLICE(v30_v29_214, word16, 16)
	word16 v29_154 = (word16) v30_v29_214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D97:
	Mem165[ss:sp_31 + 0x0002:word16] = 0x0000
	Mem168[ss:sp_31:word16] = Mem165[ss:bp_23 - 0x000A:word16]
	Mem171[ss:sp_31 - 0x0002:word16] = Mem168[ss:bp_23 - 0x000C:word16]
	Mem174[ss:sp_31 - 0x0004:word16] = Mem171[ss:bp_23 + 0x0006:word16]
	Mem177[ss:sp_31 - 0x0006:word16] = Mem174[ss:bp_23 + 0x0004:word16]
	word16 cx_243
	word16 bx_245
	word16 dx_244
	fn0800_ACB3(ds_114, Mem177[ss:sp_31 - 0x0006:segptr32], Mem177[ss:sp_31 - 0x0002:ui32], Mem177[ss:sp_31 + 0x0002:word16], out cx_243, out dx_244, out bx_245)
	Mem191[ss:sp_31 + 0x0002:word16] = Mem177[ss:bp_23 - 0x0002:word16]
	Mem194[ss:sp_31:word16] = Mem191[ss:bp_23 - 0x0004:word16]
	word16 cx_246
	word16 bx_247
	selector ds_198
	word16 dx_199
	fn0800_4346(ds_114, Mem194[ss:sp_31 + 0x0002:word16], out cx_246, out dx_199, out bx_247, out ds_198)
	word16 bp_211 = Mem194[ss:bp_23:word16]
	dxOut = dx_199
	bpOut = bp_211
	diOut = di_119
	dsOut = ds_198
	return si_151
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2D0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: ax Top
// Preserved: bp sp
fn0800_2DBF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DBF:
	Mem10[ds:0x4656:word16] = 0xFFFF
	Mem11[ds:0x4654:word16] = 0x0000
	Mem13[ds:0x4652:word16] = Mem11[ds:0x2A27:word16]
	Mem15[ds:0x4650:word16] = wArg02
	Mem17[ds:0x464E:word16] = wArg04
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2DBF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2DE2(word16 cx, word16 dx, word16 si, word16 di, selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx ds dx
// Trashed: SCZDOP ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_2DE2_entry:
	word16 wArg04_1523 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_1525 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DE2:
	branch Mem15[ds:0x4654:word16] != 0x0000 l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DF1:
	branch Mem15[ds:0x4652:word16] != Mem15[ds:0x4656:word16] l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DFA:
	branch Mem15[ds:0x464E:word16] == 0x0000 l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E01:
	si = fn0800_3479(ds, SEQ(ss, fp - 0x0012), 0x0000, out cx, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E11:
	branch Mem49[ds:0x4654:word16] != 0x0000 l0800_2E1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E1B:
	Mem52[ds:0x4617:word16] = 0x0000
	word16 dx_72
	branch (fn0800_A77D(ds, SEQ(ds, 0x45B2), 0x0065, SEQ(Mem52[ds:0x461D:word16], Mem57[ds:0x461B:word16]), out dx_72) | dx_72) != 0x0000 l0800_2E3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E3F:
	selector es_123 = ds
	word16 di_104 = 0x45B2
	word16 cx_101 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E49:
	branch cx_101 == 0x0000 l0800_2E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E49_1:
	di_104 = di_104 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch Mem84[ds:di_104:byte] == 0x00 l0800_2E49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E4B:
	word16 cx_102 = ~cx_101
	word16 di_105 = di_104 - cx_102
	bool Z_115 = SLICE(cond(di_105), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E52:
	branch cx_102 == 0x0000 l0800_2E54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E52_2:
	Z_115 = SLICE(cond(0x0D - Mem84[ds:di_105:byte]), bool, 2) (alias)
	di_105 = di_105 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem84[ds:di_105:byte] == 0x0D l0800_2E52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E54:
	branch Z_115 l0800_2E5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E56:
	di_105 = 0x0001
	es_123 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E5D:
	word16 di_130 = di_105 - 0x0001 | es_123
	branch di_130 == 0x0000 l0800_2E8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E64:
	selector es_151 = ds
	word16 di_153 = 0x45B2
	word16 cx_157 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E6E:
	branch cx_157 == 0x0000 l0800_2E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E6E_1:
	di_153 = di_153 + 0x0001
	cx_157 = cx_157 - 0x0001
	branch Mem150[ds:di_153:byte] == 0x00 l0800_2E6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E70:
	cx_102 = ~cx_157
	word16 di_171 = di_153 - cx_102
	bool Z_181 = SLICE(cond(di_171), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E77:
	branch cx_102 == 0x0000 l0800_2E79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E77_2:
	Z_181 = SLICE(cond(0x0D - Mem150[ds:di_171:byte]), bool, 2) (alias)
	di_171 = di_171 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem150[ds:di_171:byte] == 0x0D l0800_2E77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E79:
	branch Z_181 l0800_2E82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E7B:
	di_171 = 0x0001
	es_151 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E82:
	di_130 = di_171 - 0x0001
	Mem198[es_151:di_130:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E8B:
	branch (int16) Mem205[ds:0x45B2:byte] != 0x0000 l0800_2EA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EA5:
	di = 0x45B2
	word16 cx_234 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EAF:
	branch cx_234 == 0x0000 l0800_2EB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EAF_1:
	di = di + 0x0001
	cx_234 = cx_234 - 0x0001
	branch Mem227[ds:di:byte] == 0x00 l0800_2EAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EB1:
	Mem250[ds:0x4619:word16] = ~cx_234 - 0x0001
	word16 dx_262 = fn0800_0C6C(ds, SEQ(ds, 0x45B2))
	branch Mem259[ds:0x464E:word16] != 0x0000 l0800_2EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EFE:
	si = fn0800_33CD(ds, SEQ(ss, fp - 0x0012), 0x0000, SEQ(ds, 0x45B2), out cx, out dx)
	Mem314[ds:0x4654:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ECA:
	selector es_317 = SLICE(ptrArg02, selector, 16)
	word16 di_324 = SLICE(ptrArg02, word16, 0)
	word16 di_2153 = 0x45B2
	word16 cx_330 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ED9:
	branch cx_330 == 0x0000 l0800_2EDB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ED9_2:
	di_2153 = di_2153 + 0x0001
	cx_330 = cx_330 - 0x0001
	branch Mem325[ds:di_2153:byte] == 0x00 l0800_2ED9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EDB:
	word16 cx_341 = ~cx_330
	word16 cx_344 = cx_341 >>u 0x0001
	word16 si_346 = di_2153 - cx_341
	word16 di_352 = di_324
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEA:
	branch cx_344 == 0x0000 l0800_2EEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEC:
	word16 cx_365 = cx_344 * 0x0002 + (cx_341 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEE:
	branch cx_365 == 0x0000 l0800_2EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EF0:
	Mem374[ds:0x4617:word16] = Mem370[ds:0x4617:word16] + 0x0001
	chOut = <invalid>
	dxOut = dx_262
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEE_1:
	Mem389[es_317:di_352:byte] = Mem370[ds:si_346:byte]
	si_346 = si_346 + 0x0001
	di_352 = di_352 + 0x0001
	cx_365 = cx_365 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEA_3:
	Mem399[es_317:di_352:word16] = Mem395[ds:si_346:word16]
	si_346 = si_346 + 0x0002
	di_352 = di_352 + 0x0002
	cx_344 = cx_344 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E93:
	selector ds_2145
	byte ch_2144
	word16 dx_435
	word16 ax_423 = fn0800_2DE2(cx_102, dx_72, si, di_130, ds, wArg02_1525, out ch_2144, out dx_435, out ds_2145)
	chOut = <invalid>
	dxOut = dx_435
	dsOut = ds
	return ax_423
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E3C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F1B:
	word16 cx_486
	word16 dx_487
	selector ds_488
	fn0800_A614(ds, SEQ(Mem68[ds:0x461D:word16], Mem479[ds:0x461B:word16]), out cx_486, out dx_487, out ds_488)
	Mem495[ds_488:0x4654:word16] = 0x0000
	Mem496[ds_488:0x461D:word16] = 0x0000
	Mem497[ds_488:0x461B:word16] = 0x0000
	Mem499[ds_488:0x4652:word16] = Mem497[ds_488:0x4652:word16] + 0x0001
	byte ch_2137
	selector ds_2138
	word16 dx_510
	word16 ax_509 = fn0800_2DE2(cx_486, dx_487, si, di, ds_488, wArg02_1525, out ch_2137, out dx_510, out ds_2138)
	chOut = <invalid>
	dxOut = dx_510
	dsOut = ds_488
	return ax_509
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F51:
	word16 ax_525 = Mem524[ds:0x4652:word16]
	branch ax_525 != Mem524[ds:0x4656:word16] l0800_2F5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F5D:
	branch ax_525 != Mem524[ds:0x269A:word16] l0800_2F6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F6B:
	ptr32 es_bx_533 = Mem524[ds:0x269C:segptr32]
	selector es_537 = SLICE(es_bx_533, selector, 16)
	word16 bx_535 = SLICE(es_bx_533, word16, 0) + (Mem524[ds:0x4652:word16] << 0x0002)
	fn0800_BF9E(SEQ(ds, 0x45B2), SEQ(Mem524[es_537:bx_535 + 0x0002:word16], Mem542[es_537:bx_535:word16]))
	di = 0x45B2
	word16 cx_569 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F94:
	branch cx_569 == 0x0000 l0800_2F96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F94_1:
	di = di + 0x0001
	cx_569 = cx_569 - 0x0001
	branch Mem562[ds:di:byte] == 0x00 l0800_2F94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F96:
	Mem585[ds:0x4619:word16] = ~cx_569 - 0x0001
	word16 dx_597 = fn0800_0C6C(ds, SEQ(ds, 0x45B2))
	word16 ax_604 = Mem594[ds:0x4652:word16]
	Mem605[ds:0x4656:word16] = ax_604
	Mem606[ds:0x4617:word16] = 0x0000
	branch Mem606[Mem606[ds:Mem606[ds:0x269C:word16] + (ax_604 << 0x0002):segptr32]:byte] != 0x40 l0800_3007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3007:
	word16 dx_628 = fn0800_335C(si, di, ds, SEQ(ds, 0x45B2))
	branch Mem621[ds:0x464E:word16] != 0x0000 l0800_3051
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3051:
	si = fn0800_33CD(ds, SEQ(ss, fp - 0x0012), 0x0000, SEQ(ds, 0x45B2), out cx, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3019:
	selector es_675 = SLICE(ptrArg02, selector, 16)
	word16 di_682 = SLICE(ptrArg02, word16, 0)
	word16 di_2155 = 0x45B2
	word16 cx_688 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3028:
	branch cx_688 == 0x0000 l0800_302A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3028_1:
	di_2155 = di_2155 + 0x0001
	cx_688 = cx_688 - 0x0001
	branch Mem683[ds:di_2155:byte] == 0x00 l0800_3028
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_302A:
	word16 cx_699 = ~cx_688
	word16 cx_702 = cx_699 >>u 0x0001
	word16 si_704 = di_2155 - cx_699
	word16 di_710 = di_682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3039:
	branch cx_702 == 0x0000 l0800_303B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303B:
	word16 cx_723 = cx_702 * 0x0002 + (cx_699 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303D:
	branch cx_723 == 0x0000 l0800_303F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303F:
	Mem732[ds:0x4617:word16] = Mem728[ds:0x4617:word16] + 0x0001
	Mem734[ds:0x4652:word16] = Mem732[ds:0x4652:word16] + 0x0001
	chOut = <invalid>
	dxOut = dx_628
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303D_1:
	Mem749[es_675:di_710:byte] = Mem728[ds:si_704:byte]
	si_704 = si_704 + 0x0001
	di_710 = di_710 + 0x0001
	cx_723 = cx_723 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3039_2:
	Mem759[es_675:di_710:word16] = Mem755[ds:si_704:word16]
	si_704 = si_704 + 0x0002
	di_710 = di_710 + 0x0002
	cx_702 = cx_702 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2FC7:
	ptr32 es_bx_771 = Mem767[ds:0x269C:segptr32]
	selector es_775 = SLICE(es_bx_771, selector, 16)
	word16 bx_773 = SLICE(es_bx_771, word16, 0) + (Mem767[ds:0x4652:word16] << 0x0002)
	word16 ax_776 = Mem767[es_775:bx_773:word16]
	selector ds_786
	word16 di_788
	word16 si_789
	word16 cx_785 = fn0800_4234(ds, SEQ(Mem767[es_775:bx_773 + 0x0002:word16], ax_776 + 0x0001), SEQ(ds, 0x0A13), out si_789, out di_788, out ds_786)
	Mem796[ds_786:0x461D:word16] = dx_597
	Mem797[ds_786:0x461B:word16] = ax_776 + 0x0001
	Mem798[ds_786:0x4654:word16] = 0x0001
	selector ds_2147
	byte ch_2146
	word16 dx_807
	word16 ax_806 = fn0800_2DE2(cx_785, dx_597, si_789, di_788, ds_786, wArg02_1525, out ch_2146, out dx_807, out ds_2147)
	chOut = <invalid>
	dxOut = dx_807
	dsOut = ds_786
	return ax_806
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F63:
	chOut = <invalid>
	dxOut = dx
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F5A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3066:
	word16 si_1039 = si
	branch si != 0x0000 l0800_306D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_306D:
	branch Mem840[ds:0x2A1B:word16] == 0x0000 l0800_309E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3074:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_309A:
	branch si_1039 != 0x0000 l0800_3076
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3076:
	branch fn0800_31B4(si_1039, di, ds, SEQ(ds, 0x45B2), out cx, out dx) == 0x0000 l0800_309E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3085:
	si_1039 = fn0800_33CD(ds, SEQ(ss, fp - 0x0012), 0x0000, SEQ(ds, 0x45B2), out cx, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_309E:
	branch si_1039 == 0x0000 l0800_30F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30A2:
	word16 bx_912 = Mem910[ds:0x4619:word16]
	Mem913[ds:bx_912 + 0x45B2:byte] = 0x00
	branch Mem913[ds:0x4617:word16] != 0x0000 l0800_30C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30B2:
	branch Mem913[ds:0x4650:word16] == 0x0000 l0800_30C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30B9:
	fn0800_B2EF(cx, dx, bx_912, ds, SEQ(ds, 0x0A17), out si_1039, out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30C9:
	branch (Mem955[ds:0x461B:word16] | Mem955[ds:0x461D:word16]) == 0x0000 l0800_30DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30DA:
	Mem962[ds:0x4652:word16] = Mem955[ds:0x4652:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30D2:
	Mem964[ds:0x4654:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30DE:
	byte ch_2140
	selector ds_2141
	word16 dx_994
	word16 ax_991 = fn0800_2DE2(cx, dx, si_1039, di, ds, wArg02_1525, out ch_2140, out dx_994, out ds_2141)
	chOut = <invalid>
	dxOut = dx_994
	dsOut = ds
	return ax_991
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_306A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30F0:
	word16 bx_2139
	fn0800_3509(si_1039, di, wArg02_1525, wArg04_1523, SEQ(ds, 0x45B2), out bx_2139)
	word16 di_1064 = fp - 0x0012
	word16 cx_1076 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311B:
	branch cx_1076 == 0x0000 l0800_311D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311B_1:
	di_1064 = di_1064 + 0x0001
	cx_1076 = cx_1076 - 0x0001
	branch Mem1072[ss:di_1064:byte] == 0x00 l0800_311B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311D:
	word16 cx_1087 = ~cx_1076
	word16 si_1090 = di_1064 - cx_1087
	word16 di_1096 = wArg02_1525
	word16 cx_1110 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3132:
	branch cx_1110 == 0x0000 l0800_3134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3132_2:
	di_1096 = di_1096 + 0x0001
	cx_1110 = cx_1110 - 0x0001
	branch Mem1109[wArg04_1523:di_1096:byte] == 0x00 l0800_3132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3134:
	word16 di_1124 = di_1096 - 0x0001
	word16 cx_1131 = cx_1087
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3136:
	branch cx_1131 == 0x0000 l0800_3138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3138:
	word16 dx_1147 = fn0800_0C6C(ds, ptrArg02)
	word16 si_1154 = wArg02_1525
	word16 di_1160 = 0x4348
	word16 cx_1167 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315A:
	branch cx_1167 == 0x0000 l0800_315C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315A_1:
	di_1160 = di_1160 + 0x0001
	cx_1167 = cx_1167 - 0x0001
	branch Mem1162[ds:di_1160:byte] == 0x00 l0800_315A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315C:
	word16 cx_1178 = ~cx_1167
	word16 di_1180 = di_1160 - cx_1178
	word16 ax_1203 = 0x0000
	bool Z_1192 = SLICE(cond(di_1180), bool, 2)
	di_1187 = di_1180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3160:
	word16 di_1187
	branch cx_1178 == 0x0000 l0800_3162
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3160_2:
	Z_1192 = SLICE(cond(Mem1162[wArg04_1523:si_1154:byte] - Mem1162[ds:di_1187:byte]), bool, 2) (alias)
	si_1154 = si_1154 + 0x0001
	di_1187 = di_1187 + 0x0001
	cx_1178 = cx_1178 - 0x0001
	branch Mem1162[wArg04_1523:si_1154:byte] != Mem1162[ds:di_1187:byte] l0800_3160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3162:
	branch Z_1192 l0800_3169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3164:
	word16 ax_1200 = 0x0000 - (di_1180 <u 0x0000)
	ax_1203 = ax_1200 - 0xFFFF - (ax_1200 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3169:
	branch ax_1203 == 0x0000 l0800_3195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_316E:
	si_1154 = wArg02_1525
	word16 di_1242 = 0x4477
	word16 cx_1249 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3181:
	branch cx_1249 == 0x0000 l0800_3183
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3181_1:
	di_1242 = di_1242 + 0x0001
	cx_1249 = cx_1249 - 0x0001
	branch Mem1244[ds:di_1242:byte] == 0x00 l0800_3181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3183:
	cx_1178 = ~cx_1249
	word16 di_1262 = di_1242 - cx_1178
	word16 ax_1285 = 0x0000
	bool Z_1274 = SLICE(cond(di_1262), bool, 2)
	di_1187 = di_1262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3187:
	branch cx_1178 == 0x0000 l0800_3189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3187_2:
	Z_1274 = SLICE(cond(Mem1244[wArg04_1523:si_1154:byte] - Mem1244[ds:di_1187:byte]), bool, 2) (alias)
	si_1154 = si_1154 + 0x0001
	di_1187 = di_1187 + 0x0001
	cx_1178 = cx_1178 - 0x0001
	branch Mem1244[wArg04_1523:si_1154:byte] != Mem1244[ds:di_1187:byte] l0800_3187
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3189:
	branch Z_1274 l0800_3190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_318B:
	word16 ax_1282 = 0x0000 - (di_1262 <u 0x0000)
	ax_1285 = ax_1282 - 0xFFFF - (ax_1282 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3190:
	branch ax_1285 != 0x0000 l0800_31A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31A7:
	Mem1314[ds:0x4617:word16] = Mem1244[ds:0x4617:word16] + 0x0001
	chOut = <invalid>
	dxOut = dx_1147
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3195:
	byte ch_2142
	selector ds_2143
	word16 dx_1363
	word16 ax_1351 = fn0800_2DE2(cx_1178, dx_1147, si_1154, di_1187, ds, wArg02_1525, out ch_2142, out dx_1363, out ds_2143)
	chOut = <invalid>
	dxOut = dx_1363
	dsOut = ds
	return ax_1351
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2DE2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3136_3:
	Mem1414[wArg04_1523:di_1124:byte] = Mem1136[ss:si_1090:byte]
	si_1090 = si_1090 + 0x0001
	di_1124 = di_1124 + 0x0001
	cx_1131 = cx_1131 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_31B4(word16 si, word16 di, selector ds, word32 dwArg02, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_31B4_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31B4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31BD:
	word16 bx_467
	fn0800_3509(si, di, fp - 0x0084, ss, dwArg02, out bx_467)
	fn0800_35A3(si, di, fp - 0x0010, ss, dwArg02)
	word16 cx_87
	word16 dx_88
	branch fn0800_32CD(ds, SEQ(ss, fp - 0x001E), fp - 0x0084, ss, Mem56[ds:(Mem56[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16], out cx_87, out dx_88) != 0x0000 l0800_323E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_323E:
	branch Mem84[ds:0x09AC:word16] != 0x0000 l0800_3253
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3253:
	word16 di_107 = fp - 0x0084
	word16 cx_111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_325E:
	branch cx_111 == 0x0000 l0800_3260
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_325E_1:
	di_107 = di_107 + 0x0001
	cx_111 = cx_111 - 0x0001
	branch Mem104[ss:di_107:byte] == 0x00 l0800_325E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3260:
	Mem133[ss:~cx_111 - 0x0002 + (fp - 0x0084):byte] = 0x00
	word16 bx_466
	fn0800_3509(si, di_107, wArg02, wArg04, SEQ(ss, fp - 0x0084), out bx_466)
	word16 di_172 = fp - 0x0010
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3298:
	branch cx_184 == 0x0000 l0800_329A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3298_2:
	di_172 = di_172 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem180[ss:di_172:byte] == 0x00 l0800_3298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_329A:
	word16 cx_195 = ~cx_184
	si = di_172 - cx_195
	word16 di_204 = wArg02
	word16 cx_218 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32AE:
	branch cx_218 == 0x0000 l0800_32B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32AE_3:
	di_204 = di_204 + 0x0001
	cx_218 = cx_218 - 0x0001
	branch Mem217[wArg04:di_204:byte] == 0x00 l0800_32AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B0:
	di = di_204 - 0x0001
	word16 cx_239 = cx_195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B2:
	branch cx_239 == 0x0000 l0800_32B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B4:
	Mem246[ds:0x09AC:word16] = Mem244[ds:0x09AC:word16] - 0x0001
	word16 bx_247 = Mem246[ds:0x09AC:word16]
	Mem251[ds:(bx_247 << 0x0001) + 0x09AE:word16] = Mem246[ds:(bx_247 << 0x0001) + 0x09AE:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B2_4:
	Mem258[wArg04:di:byte] = Mem244[ss:si:byte]
	si = si + 0x0001
	di = di + 0x0001
	cx_239 = cx_239 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3245:
	Mem262[ds:0x09AE:word16] = 0x0000
	cxOut = <invalid>
	dxOut = <invalid>
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31FF:
	word16 di_465
	fn0800_BEA2(cx_87, dx_88, ds, dwArg02, SEQ(ds, 0x0A27), out di_465)
	Mem315[ds:0x09AC:word16] = Mem302[ds:0x09AC:word16] + 0x0001
	Mem319[ds:(Mem315[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16] = 0x0000
	cxOut = <invalid>
	dxOut = <invalid>
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_31B4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_32CD(selector ds, word32 dwArg02, word16 wArg06, selector psegArg08, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_32CD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32CD:
	word16 di_26 = wArg06
	word16 cx_30 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E7:
	branch cx_30 == 0x0000 l0800_32E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E7_1:
	di_26 = di_26 + 0x0001
	cx_30 = cx_30 - 0x0001
	branch Mem25[psegArg08:di_26:byte] == 0x00 l0800_32E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E9:
	word16 cx_41 = ~cx_30
	word16 cx_213 = cx_41 >>u 0x0001
	word16 si_196 = di_26 - cx_41
	word16 di_199 = fp - 0x0068
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32F8:
	branch cx_213 == 0x0000 l0800_32FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FA:
	word16 cx_203 = cx_213 * 0x0002 + (cx_41 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FC:
	branch cx_203 == 0x0000 l0800_32FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FE:
	word16 di_371 = fp - 0x0068
	word16 si_186 = 0x0A32
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330C:
	branch cx_81 == 0x0000 l0800_330E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330C_1:
	di_371 = di_371 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem75[ss:di_371:byte] == 0x00 l0800_330C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330E:
	word16 di_190 = di_371 - 0x0001
	word16 cx_194 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3312:
	branch cx_194 == 0x0000 l0800_3314
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3314:
	word16 dx_120
	word16 cx_119
	branch fn0800_33CD(ds, dwArg02, 0x0010, SEQ(ss, fp - 0x0068), out cx_119, out dx_120) == 0x0000 l0800_334D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_334D:
	branch wArg0A != 0x0000 l0800_3336
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3336:
	branch fn0800_3479(ds, dwArg02, 0x0010, out cx_119, out dx_120) != 0x0000 l0800_3353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_334A:
	wArg0A = wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3353:
	cxOut = cx_119
	dxOut = dx_120
	return wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_332D:
	cxOut = cx_119
	dxOut = dx_120
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_32CD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3312_2:
	Mem191[ss:di_190:byte] = Mem187[ds:si_186:byte]
	si_186 = si_186 + 0x0001
	di_190 = di_190 + 0x0001
	cx_194 = cx_194 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FC_1:
	Mem200[ss:di_199:byte] = Mem71[psegArg08:si_196:byte]
	si_196 = si_196 + 0x0001
	di_199 = di_199 + 0x0001
	cx_203 = cx_203 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32F8_2:
	Mem210[ss:di_199:word16] = Mem206[psegArg08:si_196:word16]
	si_196 = si_196 + 0x0002
	di_199 = di_199 + 0x0002
	cx_213 = cx_213 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_335C(word16 si, word16 di, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_335C_entry:
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_335C:
	word16 cx_34
	word16 dx_308
	branch fn0800_33CD(ds, SEQ(ss, fp - 0x0010), 0x0010, ptrArg02, out cx_34, out dx_308) != 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_337D:
	dx_308 = fn0800_35A3(si, di, fp - 0x001E, ss, ptrArg02)
	word16 si_100 = fp - 0x0010
	word16 di_352 = fp - 0x001E
	word16 cx_83 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A0:
	branch cx_83 == 0x0000 l0800_33A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A0_1:
	di_352 = di_352 + 0x0001
	cx_83 = cx_83 - 0x0001
	branch Mem76[ss:di_352:byte] == 0x00 l0800_33A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A2:
	word16 cx_107 = ~cx_83
	word16 di_96 = di_352 - cx_107
	word16 ax_119 = 0x0000
	bool Z_108 = SLICE(cond(di_96), bool, 2)
	di_103 = di_96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A6:
	word16 di_103
	branch cx_107 == 0x0000 l0800_33A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A6_2:
	Z_108 = SLICE(cond(Mem76[ss:si_353:byte] - Mem76[ss:di_354:byte]), bool, 2) (alias)
	si_100 = si_353 + 0x0001
	di_103 = di_354 + 0x0001
	cx_107 = cx_107 - 0x0001
	si_353 = si_100
	di_354 = di_103
	branch Mem76[ss:si_353:byte] != Mem76[ss:di_354:byte] l0800_33A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A8:
	branch Z_108 l0800_33AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33AA:
	word16 ax_116 = 0x0000 - (di_96 <u 0x0000)
	ax_119 = ax_116 - 0xFFFF - (ax_116 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33AF:
	branch ax_119 != 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33B4:
	word16 di_161 = wArg02
	word16 si_153 = 0x0A36
	word16 cx_154 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33BF:
	branch cx_154 == 0x0000 l0800_33C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33BF_1:
	di_161 = di_161 + 0x0001
	cx_154 = cx_154 - 0x0001
	branch Mem76[wArg04:di_161:byte] == 0x00 l0800_33BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C1:
	word16 di_168 = di_161 - 0x0001
	word16 cx_170 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C5:
	branch cx_170 == 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C7:
	return dx_308
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_335C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C5_2:
	Mem191[wArg04:di_168:byte] = Mem177[ds:si_153:byte]
	si_153 = si_153 + 0x0001
	di_168 = di_168 + 0x0001
	cx_170 = cx_170 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_33CD(selector ds, segptr32 ptrArg02, word16 wArg06, word32 dwArg08, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_33CD_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33CD:
	word16 cx_33
	word16 dx_34
	branch fn0800_A817(0x23, ds, dwArg08, SEQ(ds, 0x4623), wArg06, out cx_33, out dx_34) == 0x0000 l0800_33F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33F1:
	word16 di_51 = 0x0A3B
	word16 si_52 = 0x4641
	word16 cx_53 = 0x0002
	word16 ax_54 = 0x0000
	bool Z_67 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33FE:
	branch cx_53 == 0x0000 l0800_3400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33FE_1:
	Z_67 = SLICE(cond(Mem48[ds:si_476:byte] - Mem48[ds:di_477:byte]), bool, 2) (alias)
	si_52 = si_476 + 0x0001
	di_51 = di_477 + 0x0001
	cx_53 = cx_53 - 0x0001
	si_476 = si_52
	di_477 = di_51
	branch Mem48[ds:si_476:byte] != Mem48[ds:di_477:byte] l0800_33FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3400:
	branch Z_67 l0800_3407
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3402:
	ax_54 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3407:
	branch ax_54 == 0x0000 l0800_3431
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_340B:
	word16 di_109 = 0x0A3D
	word16 si_106 = 0x4641
	word16 cx_100 = 0x0003
	word16 ax_101 = 0x0000
	bool Z_114 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3418:
	branch cx_100 == 0x0000 l0800_341A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3418_1:
	Z_114 = SLICE(cond(Mem95[ds:si_478:byte] - Mem95[ds:di_479:byte]), bool, 2) (alias)
	si_106 = si_478 + 0x0001
	di_109 = di_479 + 0x0001
	cx_100 = cx_100 - 0x0001
	si_478 = si_106
	di_479 = di_109
	branch Mem95[ds:si_478:byte] != Mem95[ds:di_479:byte] l0800_3418
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_341A:
	branch Z_114 l0800_3421
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_341C:
	ax_101 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3421:
	branch ax_101 == 0x0000 l0800_3431
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3425:
	branch ((int16) Mem95[ds:0x4638:byte] & wArg06) == wArg06 l0800_3444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3444:
	branch (wArg02 | wArg04) == 0x0000 l0800_3473
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_344C:
	word16 di_170 = 0x4641
	word16 cx_174 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345B:
	branch cx_174 == 0x0000 l0800_345D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345B_1:
	di_170 = di_170 + 0x0001
	cx_174 = cx_174 - 0x0001
	branch Mem169[ds:di_170:byte] == 0x00 l0800_345B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345D:
	word16 cx_185 = ~cx_174
	word16 cx_188 = cx_185 >>u 0x0001
	word16 si_190 = di_170 - cx_185
	word16 di_196 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346C:
	branch cx_188 == 0x0000 l0800_346E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346E:
	cx_100 = cx_188 * 0x0002 + (cx_185 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3470:
	branch cx_100 == 0x0000 l0800_3472
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3472:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3473:
	cxOut = cx_100
	dxOut = dx_34
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3470_1:
	Mem234[wArg04:di_196:byte] = Mem214[ds:si_190:byte]
	si_190 = si_190 + 0x0001
	di_196 = di_196 + 0x0001
	cx_100 = cx_100 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346C_2:
	Mem244[wArg04:di_196:word16] = Mem240[ds:si_190:word16]
	si_190 = si_190 + 0x0002
	di_196 = di_196 + 0x0002
	cx_188 = cx_188 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3431:
	word16 cx_266
	word16 dx_267
	word16 ax_264 = fn0800_3479(ds, ptrArg02, wArg06, out cx_266, out dx_267)
	cxOut = cx_266
	dxOut = dx_267
	return ax_264
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33EA:
	cxOut = cx_33
	dxOut = dx_34
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_33CD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3479(selector ds, segptr32 ptrArg02, word16 wArg06, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_3479_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3479:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_347E:
	word16 cx_26
	word16 dx_27
	branch fn0800_A84A(0x23, ds, SEQ(ds, 0x4623), out cx_26, out dx_27) == 0x0000 l0800_3494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3494:
	word16 di_44 = 0x0A3B
	word16 si_45 = 0x4641
	word16 cx_46 = 0x0002
	word16 ax_47 = 0x0000
	bool Z_60 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A1:
	branch cx_46 == 0x0000 l0800_34A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A1_1:
	Z_60 = SLICE(cond(Mem41[ds:si_421:byte] - Mem41[ds:di_422:byte]), bool, 2) (alias)
	si_45 = si_421 + 0x0001
	di_44 = di_422 + 0x0001
	cx_46 = cx_46 - 0x0001
	si_421 = si_45
	di_422 = di_44
	branch Mem41[ds:si_421:byte] != Mem41[ds:di_422:byte] l0800_34A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A3:
	branch Z_60 l0800_34AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A5:
	ax_47 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34AA:
	branch ax_47 == 0x0000 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34AE:
	word16 di_102 = 0x0A3D
	word16 si_104 = 0x4641
	word16 cx_106 = 0x0003
	word16 ax_117 = 0x0000
	bool Z_107 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BB:
	branch cx_106 == 0x0000 l0800_34BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BB_1:
	Z_107 = SLICE(cond(Mem88[ds:si_423:byte] - Mem88[ds:di_424:byte]), bool, 2) (alias)
	si_104 = si_423 + 0x0001
	di_102 = di_424 + 0x0001
	cx_106 = cx_106 - 0x0001
	si_423 = si_104
	di_424 = di_102
	branch Mem88[ds:si_423:byte] != Mem88[ds:di_424:byte] l0800_34BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BD:
	branch Z_107 l0800_34C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BF:
	ax_117 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34C4:
	branch ax_117 == 0x0000 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34C8:
	branch ((int16) Mem88[ds:0x4638:byte] & wArg06) != wArg06 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34D4:
	branch (wArg02 | wArg04) == 0x0000 l0800_3503
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34DC:
	word16 di_164 = 0x4641
	word16 cx_168 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34EB:
	branch cx_168 == 0x0000 l0800_34ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34EB_1:
	di_164 = di_164 + 0x0001
	cx_168 = cx_168 - 0x0001
	branch Mem163[ds:di_164:byte] == 0x00 l0800_34EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34ED:
	word16 cx_179 = ~cx_168
	word16 cx_182 = cx_179 >>u 0x0001
	word16 si_184 = di_164 - cx_179
	word16 di_190 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FC:
	branch cx_182 == 0x0000 l0800_34FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FE:
	cx_106 = cx_182 * 0x0002 + (cx_179 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3500:
	branch cx_106 == 0x0000 l0800_3502
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3502:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3503:
	cxOut = cx_106
	dxOut = <invalid>
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3500_1:
	Mem228[wArg04:di_190:byte] = Mem208[ds:si_184:byte]
	si_184 = si_184 + 0x0001
	di_190 = di_190 + 0x0001
	cx_106 = cx_106 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FC_2:
	Mem238[wArg04:di_190:word16] = Mem234[ds:si_184:word16]
	si_184 = si_184 + 0x0002
	di_190 = di_190 + 0x0002
	cx_182 = cx_182 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_348D:
	cxOut = cx_26
	dxOut = <invalid>
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3479_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3509(word16 si, word16 di, word16 wArg02, selector psegArg04, word32 dwArg06, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: bx dx
// Trashed: SCZDO ax bx dx es Top
// Preserved: bp di ds si sp
fn0800_3509_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3509:
	word16 bx_44 = fn0800_BE3B(si, di, dwArg06, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x005A), SEQ(ss, fp - 0x0010), SEQ(ss, fp - 0x0016))
	word16 di_398 = fp - 0x0006
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354B:
	branch cx_81 == 0x0000 l0800_354D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354B_1:
	di_398 = di_398 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem77[ss:di_398:byte] == 0x00 l0800_354B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354D:
	word16 cx_92 = ~cx_81
	word16 cx_115 = cx_92 >>u 0x0001
	word16 si_229 = di_398 - cx_92
	word16 di_103 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355C:
	branch cx_115 == 0x0000 l0800_355E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355E:
	word16 cx_117 = cx_115 * 0x0002 + (cx_92 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3560:
	branch cx_117 == 0x0000 l0800_3562
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3562:
	word16 di_138 = fp - 0x005A
	word16 cx_150 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357D:
	branch cx_150 == 0x0000 l0800_357F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357D_1:
	di_138 = di_138 + 0x0001
	cx_150 = cx_150 - 0x0001
	branch Mem146[ss:di_138:byte] == 0x00 l0800_357D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357F:
	word16 cx_161 = ~cx_150
	word16 si_164 = di_138 - cx_161
	word16 di_170 = wArg02
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3594:
	branch cx_184 == 0x0000 l0800_3596
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3594_2:
	di_170 = di_170 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem183[psegArg04:di_170:byte] == 0x00 l0800_3594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3596:
	word16 di_198 = di_170 - 0x0001
	word16 cx_205 = cx_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3598:
	branch cx_205 == 0x0000 l0800_359A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_359A:
	bxOut = bx_44
	return psegArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3509_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3598_3:
	Mem224[psegArg04:di_198:byte] = Mem210[ss:si_164:byte]
	si_164 = si_164 + 0x0001
	di_198 = di_198 + 0x0001
	cx_205 = cx_205 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3560_1:
	Mem233[psegArg04:di_103:byte] = Mem122[ss:si_229:byte]
	si_229 = si_229 + 0x0001
	di_103 = di_103 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355C_2:
	Mem243[psegArg04:di_103:word16] = Mem239[ss:si_229:word16]
	si_229 = si_229 + 0x0002
	di_103 = di_103 + 0x0002
	cx_115 = cx_115 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_35A3(word16 si, word16 di, word16 wArg02, selector psegArg04, word32 dwArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: dx
// Trashed: SCZDO ax bx dx es Top
// Preserved: bp di ds si sp
fn0800_35A3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35A3:
	fn0800_BE3B(si, di, dwArg06, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x005A), SEQ(ss, fp - 0x0010), SEQ(ss, fp - 0x0016))
	word16 di_397 = fp - 0x0010
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E5:
	branch cx_81 == 0x0000 l0800_35E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E5_1:
	di_397 = di_397 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem77[ss:di_397:byte] == 0x00 l0800_35E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E7:
	word16 cx_92 = ~cx_81
	word16 cx_115 = cx_92 >>u 0x0001
	word16 si_229 = di_397 - cx_92
	word16 di_103 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F6:
	branch cx_115 == 0x0000 l0800_35F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F8:
	word16 cx_117 = cx_115 * 0x0002 + (cx_92 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FA:
	branch cx_117 == 0x0000 l0800_35FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FC:
	word16 di_138 = fp - 0x0016
	word16 cx_150 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3617:
	branch cx_150 == 0x0000 l0800_3619
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3617_1:
	di_138 = di_138 + 0x0001
	cx_150 = cx_150 - 0x0001
	branch Mem146[ss:di_138:byte] == 0x00 l0800_3617
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3619:
	word16 cx_161 = ~cx_150
	word16 si_164 = di_138 - cx_161
	word16 di_170 = wArg02
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_362E:
	branch cx_184 == 0x0000 l0800_3630
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_362E_2:
	di_170 = di_170 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem183[psegArg04:di_170:byte] == 0x00 l0800_362E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3630:
	word16 di_198 = di_170 - 0x0001
	word16 cx_205 = cx_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3632:
	branch cx_205 == 0x0000 l0800_3634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3634:
	return psegArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_35A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3632_3:
	Mem224[psegArg04:di_198:byte] = Mem210[ss:si_164:byte]
	si_164 = si_164 + 0x0001
	di_198 = di_198 + 0x0001
	cx_205 = cx_205 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FA_1:
	Mem233[psegArg04:di_103:byte] = Mem122[ss:si_229:byte]
	si_229 = si_229 + 0x0001
	di_103 = di_103 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F6_2:
	Mem243[psegArg04:di_103:word16] = Mem239[ss:si_229:word16]
	si_229 = si_229 + 0x0002
	di_103 = di_103 + 0x0002
	cx_115 = cx_115 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_363D(selector ds, segptr32 ptrArg02, word32 dwArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_363D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_363D:
	word16 cx_30
	word16 dx_31
	branch fn0800_A817(SLICE(fp - 0x002E, byte, 0), ds, dwArg06, SEQ(ss, fp - 0x002E), 0x0000, out cx_30, out dx_31) == 0x0000 l0800_3662
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3662:
	Mem48[ptrArg02:word16] = wLoc18
	Mem50[ptrArg02 + 0x0002:word16] = wLoc16
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_365B:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_363D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3678(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: cx ds dx si
// Trashed: SCZO ax bx cx ds dx es si Top
// Preserved: DP bp di sp
fn0800_3678_entry:
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3678:
	selector es_274 = wArg04
	word16 di_25 = wArg02
	word16 cx_21 = 0xFFFF
	segptr32 ptrLoc06_329 = ptrArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3693:
	branch cx_21 == 0x0000 l0800_3695
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3693_1:
	di_25 = di_25 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch Mem16[wArg04:di_25:byte] == 0x00 l0800_3693
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3695:
	word16 cx_32 = ~cx_21
	word16 di_35 = di_25 - cx_32
	bool Z_45 = SLICE(cond(di_35), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369C:
	branch cx_32 == 0x0000 l0800_369E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369C_2:
	Z_45 = SLICE(cond(0x5C - Mem16[wArg04:di_35:byte]), bool, 2) (alias)
	di_35 = di_35 + 0x0001
	cx_32 = cx_32 - 0x0001
	branch Mem16[wArg04:di_35:byte] == 0x5C l0800_369C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369E:
	branch Z_45 l0800_36A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36A0:
	di_35 = 0x0001
	es_274 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36A7:
	word16 di_56 = di_35 - 0x0001
	branch (di_56 | es_274) == 0x0000 l0800_3732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36B6:
	segptr32 ptrLoc0A_322 = SEQ(es_274, di_56)
	branch es_274 != wArg04 l0800_36C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36C1:
	branch di_56 == wArg02 l0800_36D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36C6:
	branch Mem71[ptrLoc0A_322 - 0x0001:byte] != 0x3A l0800_3732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36D0:
	ptrLoc06_329 = SEQ(es_274, di_56 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3732:
	selector es_139 = SLICE(ptrLoc06_329, selector, 16)
	word16 di_111 = SLICE(ptrLoc06_329, word16, 0)
	word16 cx_107 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373A:
	branch cx_107 == 0x0000 l0800_373C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373A_1:
	di_111 = di_111 + 0x0001
	cx_107 = cx_107 - 0x0001
	branch Mem102[es_139:di_111:byte] == 0x00 l0800_373A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373C:
	word16 cx_118 = ~cx_107
	word16 di_121 = di_111 - cx_118
	bool Z_131 = SLICE(cond(di_121), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3743:
	branch cx_118 == 0x0000 l0800_3745
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3743_2:
	Z_131 = SLICE(cond(0x5C - Mem102[es_139:di_121:byte]), bool, 2) (alias)
	di_121 = di_121 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch Mem102[es_139:di_121:byte] == 0x5C l0800_3743
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3745:
	branch Z_131 l0800_374E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3747:
	di_121 = 0x0001
	es_139 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_374E:
	word16 di_142 = di_121 - 0x0001
	word16 dx_159 = di_142 | es_139
	segptr32 ptrLoc0A_332 = SEQ(es_139, di_142)
	branch dx_159 != 0x0000 l0800_36DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36DF:
	Mem166[ptrLoc0A_332:byte] = 0x00
	word16 cx_487
	word16 dx_488
	word16 ax_195 = fn0800_33CD(ds, 0x00000000, 0x0010, ptrArg02, out cx_487, out dx_488)
	byte al_217 = SLICE(ax_195, byte, 0)
	branch ax_195 == 0x0000 l0800_371E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36FE:
	branch fn0800_8E52(al_217, ds) == 0x0000 l0800_371E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_370E:
	word16 di_492
	selector es_493
	word16 bx_491
	word16 dx_490
	word16 cx_489
	fn0800_0D24(ds, 0x000E, ptrArg02, out cx_489, out dx_490, out bx_491, out si, out di_492, out es_493, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_371E:
	Mem259[ptrLoc0A_332:byte] = 0x5C
	ptrLoc06_329 = SEQ(es_139, di_142 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_375D:
	dxOut = dx_159
	siOut = si
	dsOut = ds
	return cx_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3678_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3764(word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D di ds si sp
fn0800_3764_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3764:
	branch Mem10[ds:0x427E:byte] == 0x00 l0800_3796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3796:
	word16 bx_25
	dx = fn0800_3509(si, di, 0x44DC, ds, SEQ(ds, 0x4541), out bx_25)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_376D:
	word16 di_254 = 0x427E
	word16 cx_49 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377C:
	branch cx_49 == 0x0000 l0800_377E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377C_1:
	di_254 = di_254 + 0x0001
	cx_49 = cx_49 - 0x0001
	branch Mem44[ds:di_254:byte] == 0x00 l0800_377C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377E:
	word16 cx_60 = ~cx_49
	word16 cx_153 = cx_60 >>u 0x0001
	word16 si_136 = di_254 - cx_60
	word16 di_139 = 0x44DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378D:
	branch cx_153 == 0x0000 l0800_378F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378F:
	word16 cx_143 = cx_153 * 0x0002 + (cx_60 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3791:
	branch cx_143 == 0x0000 l0800_3793
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3793:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37A6:
	word16 di_108 = 0x44DC
	word16 si_100 = 0x0A40
	word16 cx_101 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B3:
	branch cx_101 == 0x0000 l0800_37B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B3_1:
	di_108 = di_108 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch Mem96[ds:di_108:byte] == 0x00 l0800_37B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B5:
	word16 di_115 = di_108 - 0x0001
	word16 cx_117 = 0x000D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B9:
	branch cx_117 == 0x0000 l0800_37BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37BB:
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3764_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B9_2:
	Mem131[ds:di_115:byte] = Mem121[ds:si_100:byte]
	si_100 = si_100 + 0x0001
	di_115 = di_115 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3791_1:
	Mem140[ds:di_139:byte] = Mem89[ds:si_136:byte]
	si_136 = si_136 + 0x0001
	di_139 = di_139 + 0x0001
	cx_143 = cx_143 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378D_2:
	Mem150[ds:di_139:word16] = Mem146[ds:si_136:word16]
	si_136 = si_136 + 0x0002
	di_139 = di_139 + 0x0002
	cx_153 = cx_153 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_37BE(word16 cx, word16 dx, selector ds, word32 dwArg02, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: di si
// Trashed: SCZDO ax bx di es si Top
// Preserved: bp sp
fn0800_37BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37BE:
	word16 di_36
	word16 si_38 = fn0800_BEA2(cx, dx, ds, dwArg02, SEQ(ds, 0x0A2B), out di_36)
	diOut = di_36
	return si_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_37BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_37DF(word16 si, word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ds si
// Trashed: SCZDO ax bx cx ds dx es si Top
// Preserved: bp di sp
fn0800_37DF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37DF:
	word16 bx_352
	fn0800_3509(si, di, fp - 0x006C, ss, SEQ(ds, 0x44DC), out bx_352)
	selector es_44 = ss
	word16 di_361 = fp - 0x006C
	word16 cx_50 = 0xFFFF
	word32 dwLoc72_283 = SEQ(ds, 0x4541)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3805:
	branch cx_50 == 0x0000 l0800_3807
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3805_1:
	di_361 = di_361 + 0x0001
	cx_50 = cx_50 - 0x0001
	branch Mem43[ss:di_361:byte] == 0x00 l0800_3805
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3807:
	word16 cx_61 = ~cx_50
	word16 di_362 = di_361 - cx_61
	bool Z_74 = SLICE(cond(di_362), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380D:
	branch cx_61 == 0x0000 l0800_380F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380D_2:
	Z_74 = SLICE(cond(0x00 - Mem43[ss:di_362:byte]), bool, 2) (alias)
	di_362 = di_362 + 0x0001
	cx_61 = cx_61 - 0x0001
	branch Mem43[ss:di_362:byte] == 0x00 l0800_380D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380F:
	branch Z_74 l0800_3818
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3811:
	di_362 = 0x0001
	es_44 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3818:
	word16 di_85 = di_362 - 0x0001
	fn0800_35A3(si, di_85, di_85, es_44, dwLoc72_283)
	word16 cx_143
	word16 dx_353
	selector ds_144
	fn0800_AA7E(ds, SEQ(ss, fp - 0x006C), SEQ(ds, 0x0A4D), out cx_143, out dx_353, out ds_144)
	word32 dx_ax_350 = <invalid>
	branch (SLICE(dx_ax_350, word16, 0) | SLICE(dx_ax_350, word16, 16)) == 0x0000 l0800_3863
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_383D:
	word16 cx_354
	word16 dx_355
	fn0800_A614(ds_144, dx_ax_350, out cx_354, out dx_355, out ds_144)
	fn0800_A4F6(ds_144, 0x0180)
	fn0800_8F7F(SLICE(fp - 0x006C, byte, 0), ds_144, SEQ(ss, fp - 0x006C))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3863:
	word16 dx_222
	branch fn0800_BA4A(ds_144, SEQ(ds_144, 0x44DC), SEQ(ss, fp - 0x006C), out dx_222) != 0xFFFF l0800_3887
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3878:
	word16 cx_356
	word16 dx_357
	word16 bx_358
	word16 di_359
	selector es_360
	fn0800_0D24(ds_144, 0x000A, SEQ(ds_144, 0x44DC), out cx_356, out dx_357, out bx_358, out si, out di_359, out es_360, out ds_144)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3887:
	dsOut = ds_144
	return si
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_37DF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_388C(word16 dx, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax cx di ds dx si
// Trashed: SCZDOP ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_388C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_388C:
	selector ds_24
	word16 di_320
	word16 si_319
	fn0800_4234(ds, SEQ(ds, 0x4541), SEQ(ds, 0x0A13), out si_319, out di_320, out ds_24)
	Mem35[ds_24:0x29E5:word16] = dx
	Mem36[ds_24:0x29E3:word16] = 0x4541
	selector ds_49
	word16 di_51
	word16 si_52
	fn0800_4234(ds_24, SEQ(ds_24, 0x44DC), SEQ(ds_24, 0x0A50), out si_52, out di_51, out ds_49)
	Mem59[ds_49:0x29E1:word16] = dx
	Mem60[ds_49:0x29DF:word16] = 0x44DC
	word16 dx_74
	word16 cx_73 = fn0800_363D(ds_49, SEQ(ss, fp - 0x0006), SEQ(ds_49, 0x44DC), out dx_74)
	branch Mem70[ds_49:0x0A12:byte] != 0x00 l0800_38EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_38EF:
	word16 dx_98
	word16 cx_97 = fn0800_363D(ds_49, SEQ(ss, fp - 0x000A), SEQ(ds_49, 0x4541), out dx_98)
	branch fn0800_395B(SEQ(ss, fp - 0x000A), SEQ(ds_49, 0x461F)) < 0x0000 l0800_3927
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3913:
	branch fn0800_395B(SEQ(ss, fp - 0x000A), SEQ(ss, fp - 0x0006)) <= 0x0000 l0800_392E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_392E:
	selector ds_162
	word16 cx_321
	word16 dx_322
	fn0800_A614(ds_49, SEQ(Mem139[ds_49:0x29E5:word16], Mem153[ds_49:0x29E3:word16]), out cx_321, out dx_322, out ds_162)
	word16 cx_178
	selector ds_180
	word16 dx_323
	fn0800_A614(ds_162, SEQ(Mem156[ds_162:0x29E1:word16], Mem171[ds_162:0x29DF:word16]), out cx_178, out dx_323, out ds_180)
	word16 dx_194 = fn0800_8F7F(0xDC, ds_180, SEQ(ds_180, 0x44DC))
	cxOut = cx_178
	dxOut = dx_194
	siOut = <invalid>
	diOut = <invalid>
	dsOut = ds_180
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3927:
	cxOut = cx_97
	dxOut = dx_98
	siOut = <invalid>
	diOut = <invalid>
	dsOut = ds_49
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_38D7:
	Mem214[ds_49:0x4621:word16] = wLoc04
	Mem216[ds_49:0x461F:word16] = wLoc06
	Mem217[ds_49:0x0A12:byte] = 0x01
	cxOut = cx_73
	dxOut = dx_74
	siOut = <invalid>
	diOut = <invalid>
	dsOut = ds_49
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_388C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx es Top
// Preserved: bp sp
fn0800_395B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_395B:
	word16 ax_13 = Mem7[ptrArg02 + 0x0002:word16]
	branch ax_13 != Mem14[ptrArg06 + 0x0002:word16] l0800_3984
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3984:
	return ax_13 - Mem14[ptrArg06 + 0x0002:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3974:
	return Mem14[ptrArg02:word16] - Mem14[ptrArg06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_395B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3992(word16 si, word16 di, selector ds, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: DP bp sp
fn0800_3992_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3992:
	branch Mem12[ds:0x427E:byte] == 0x00 l0800_39AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39A0:
	branch Mem12[ds:0x2A23:word16] != 0x0001 l0800_39AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39A7:
	branch Mem12[ds:0x2A17:word16] != 0x0000 l0800_39B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39B5:
	word16 bx_625
	fn0800_3509(si, di, fp - 0x0074, ss, SEQ(ds, 0x44DC), out bx_625)
	selector es_49 = ss
	word16 di_51 = fp - 0x0074
	word16 cx_55 = 0xFFFF
	word32 dwLoc7A_509 = SEQ(ds, 0x4541)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D4:
	branch cx_55 == 0x0000 l0800_39D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D4_1:
	di_51 = di_51 + 0x0001
	cx_55 = cx_55 - 0x0001
	branch Mem48[ss:di_51:byte] == 0x00 l0800_39D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D6:
	word16 cx_66 = ~cx_55
	word16 di_639 = di_51 - cx_66
	bool Z_79 = SLICE(cond(di_639), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DC:
	branch cx_66 == 0x0000 l0800_39DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DC_2:
	Z_79 = SLICE(cond(0x00 - Mem48[ss:di_639:byte]), bool, 2) (alias)
	di_639 = di_639 + 0x0001
	cx_66 = cx_66 - 0x0001
	branch Mem48[ss:di_639:byte] == 0x00 l0800_39DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DE:
	branch Z_79 l0800_39E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39E0:
	di_639 = 0x0001
	es_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39E7:
	word16 di_90 = di_639 - 0x0001
	fn0800_35A3(si, di_90, di_90, es_49, dwLoc7A_509)
	selector ds_149
	word16 dx_627
	word16 cx_626
	fn0800_AA7E(ds, SEQ(ss, fp - 0x0074), SEQ(ds, 0x0A4D), out cx_626, out dx_627, out ds_149)
	word32 dx_ax_621 = <invalid>
	word16 dx_150 = SLICE(dx_ax_621, word16, 16)
	word16 ax_146 = SLICE(dx_ax_621, word16, 0)
	word16 ax_159 = ax_146 | dx_150
	branch ax_159 != 0x0000 l0800_3A13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A13:
	fn0800_4194(ds_149, dx_ax_621)
	branch dx_150 >u 0x0000 l0800_3A3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A23:
	branch dx_150 != 0x0000 l0800_3A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A25:
	branch ax_159 >u 0x0012 l0800_3A3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A3D:
	selector ds_199
	word16 dx_213
	word16 di_628
	word16 ax_210 = fn0800_8CAA(ax_159, 0x08, fn0800_3E5D(ds_149, dx_ax_621, out di_628, out ds_199), out dx_213)
	word16 sp_214 = <invalid>
	branch dx_213 != 0x0052 l0800_3A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A53:
	branch ax_210 == 0x4E43 l0800_3A6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A6B:
	Mem225[ss:sp_214 - 2:word16] = dx_150
	Mem228[ss:sp_214 - 4:word16] = ax_146
	selector ds_232
	word16 di_631
	branch fn0800_3E5D(ds_199, Mem228[ss:sp_214 - 4:word32], out di_631, out ds_232) != Mem228[ds_232:0x2A09:word16] l0800_3A83
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A7D:
	branch ax_210 == Mem228[ds_232:0x2A07:word16] l0800_3A96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A96:
	Mem245[ss:sp_214 - 2:word16] = ss
	Mem248[ss:sp_214 - 4:word16] = fp - 0x0074
	Mem250[ss:sp_214 - 6:word16] = ss
	Mem253[ss:sp_214 - 8:word16] = fp - 0x000E
	word16 dx_633
	fn0800_363D(ds_232, Mem253[ss:sp_214 - 8:segptr32], Mem253[ss:sp_214 - 4:word32], out dx_633)
	Mem268[ss:sp_214 - 2:word16] = ds_232
	Mem271[ss:sp_214 - 4:word16] = 0x4541
	Mem273[ss:sp_214 - 6:word16] = ss
	Mem276[ss:sp_214 - 8:word16] = fp - 0x000A
	word16 dx_634
	fn0800_363D(ds_232, Mem276[ss:sp_214 - 8:segptr32], Mem276[ss:sp_214 - 4:word32], out dx_634)
	Mem291[ss:sp_214 - 2:word16] = ss
	Mem294[ss:sp_214 - 4:word16] = fp - 0x000A
	Mem296[ss:sp_214 - 6:word16] = ss
	Mem299[ss:sp_214 - 8:word16] = fp - 0x000E
	word16 ax_300 = fn0800_395B(Mem299[ss:sp_214 - 8:segptr32], Mem299[ss:sp_214 - 4:segptr32])
	branch ax_300 >= 0x0000 l0800_3ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ADD:
	Mem314[ss:sp_214 - 2:word16] = dx_150
	Mem317[ss:sp_214 - 4:word16] = ax_146
	selector ds_321
	word16 di_635
	Mem334[ds_321:0x2A05:word16] = fn0800_3E5D(ds_232, Mem317[ss:sp_214 - 4:word32], out di_635, out ds_321) + (ax_300 <u 0x0012)
	Mem335[ds_321:0x2A03:word16] = ax_300 + 0x0012
	Mem338[ss:sp_214 - 2:word16] = dx_150
	Mem341[ss:sp_214 - 4:word16] = ax_146
	word16 cx_636
	word16 dx_346
	selector ds_347
	fn0800_A614(ds_321, Mem341[ss:sp_214 - 4:segptr32], out cx_636, out dx_346, out ds_347)
	word16 di_355 = Mem341[ss:sp_214:word16]
	dxOut = dx_346
	diOut = di_355
	dsOut = ds_347
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ACA:
	Mem361[ss:sp_214 - 2:word16] = dx_150
	Mem364[ss:sp_214 - 4:word16] = ax_146
	word16 cx_637
	word16 dx_369
	selector ds_370
	fn0800_A614(ds_232, Mem364[ss:sp_214 - 4:segptr32], out cx_637, out dx_369, out ds_370)
	word16 di_379 = Mem364[ss:sp_214:word16]
	dxOut = dx_369
	diOut = di_379
	dsOut = ds_370
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A83:
	Mem389[ss:sp_214 - 2:word16] = dx_150
	Mem392[ss:sp_214 - 4:word16] = ax_146
	word16 dx_398
	selector ds_399
	word16 cx_632
	fn0800_A614(ds_232, Mem392[ss:sp_214 - 4:segptr32], out cx_632, out dx_398, out ds_399)
	word16 di_408 = Mem392[ss:sp_214:word16]
	dxOut = dx_398
	diOut = di_408
	dsOut = ds_399
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A58:
	Mem418[ss:sp_214 - 2:word16] = dx_150
	Mem421[ss:sp_214 - 4:word16] = ax_146
	word16 dx_427
	selector ds_428
	word16 cx_630
	fn0800_A614(ds_199, Mem421[ss:sp_214 - 4:segptr32], out cx_630, out dx_427, out ds_428)
	word16 di_437 = Mem421[ss:sp_214:word16]
	dxOut = dx_427
	diOut = di_437
	dsOut = ds_428
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A2A:
	word16 dx_456
	selector ds_457
	word16 cx_629
	fn0800_A614(ds_149, dx_ax_621, out cx_629, out dx_456, out ds_457)
	dxOut = dx_456
	diOut = di
	dsOut = ds_457
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A0C:
	dxOut = dx_150
	diOut = di
	dsOut = ds_149
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39AE:
	dxOut = dx
	diOut = di
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3992_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3B0A(selector ds, word16 wArg0A, word16 wArg0C, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3B0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B0A:
	word16 bp_194 = fp - 2
	word16 ax_11 = wArg0A | wArg0C
	branch ax_11 != 0x0000 l0800_3B1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B1B:
	word16 ax_24
	word16 dx_23
	branch wArg0C < 0x0000 l0800_3B31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B21:
	branch wArg0C > 0x0000 l0800_3B2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B23:
	branch wArg0A <=u 0xFDE8 l0800_3B31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B31:
	dx_23 = wArg0C
	ax_24 = wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B2A:
	dx_23 = 0x0000
	ax_24 = 0xFDE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B37:
	word16 dx_55
	selector ds_120
	word16 ax_49 = fn0800_4311(ds, ax_24, dx_23, out dx_55, out bp_194, out si, out di, out ds_120)
	Mem65[ss:bp_194 - 0x0002:word16] = dx_55
	Mem66[ss:bp_194 - 0x0004:word16] = ax_49
	word16 sp_58 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BAB:
	branch (Mem69[ss:bp_194 + 0x000C:word16] | Mem69[ss:bp_194 + 0x000E:word16]) != 0x0000 l0800_3B4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B4F:
	word16 ax_84
	word16 dx_83
	branch Mem69[ss:bp_194 + 0x000E:word16] < 0x0000 l0800_3B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B55:
	branch Mem69[ss:bp_194 + 0x000E:word16] > 0x0000 l0800_3B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B57:
	branch Mem69[ss:bp_194 + 0x000C:word16] <=u 0xFDE8 l0800_3B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B65:
	dx_83 = Mem69[ss:bp_194 + 0x000E:word16]
	ax_84 = Mem69[ss:bp_194 + 0x000C:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B5E:
	dx_83 = 0x0000
	ax_84 = 0xFDE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B6B:
	Mem94[ss:bp_194 - 0x0006:word16] = dx_83
	Mem96[ss:bp_194 - 0x0008:word16] = ax_84
	Mem103[ss:sp_58 + 0x0002:word16] = Mem96[ss:bp_194 + 0x0006:word16]
	Mem106[ss:sp_58:word16] = Mem103[ss:bp_194 + 0x0004:word16]
	Mem109[ss:sp_58 - 0x0002:word16] = Mem106[ss:bp_194 - 0x0006:word16]
	Mem111[ss:sp_58 - 0x0004:word16] = ax_84
	Mem114[ss:sp_58 - 0x0006:word16] = Mem111[ss:bp_194 - 0x0002:word16]
	Mem117[ss:sp_58 - 0x0008:word16] = Mem114[ss:bp_194 - 0x0004:word16]
	selector ds_126
	word16 di_271
	word16 si_270
	fn0800_4110(ds_120, Mem117[ss:sp_58 - 0x0008:word32], Mem117[ss:sp_58 - 0x0004:word16], Mem117[ss:sp_58 - 0x0002:word16], Mem117[ss:sp_58:word32], out si_270, out di_271, out ds_126)
	Mem138[ss:sp_58 + 0x0002:word16] = Mem117[ss:bp_194 + 0x000A:word16]
	Mem141[ss:sp_58:word16] = Mem138[ss:bp_194 + 0x0008:word16]
	Mem144[ss:sp_58 - 0x0002:word16] = Mem141[ss:bp_194 - 0x0006:word16]
	Mem147[ss:sp_58 - 0x0004:word16] = Mem144[ss:bp_194 - 0x0008:word16]
	Mem150[ss:sp_58 - 0x0006:word16] = Mem147[ss:bp_194 - 0x0002:word16]
	Mem153[ss:sp_58 - 0x0008:word16] = Mem150[ss:bp_194 - 0x0004:word16]
	fn0800_4152(ds_126, Mem153[ss:sp_58 - 0x0008:word32], Mem153[ss:sp_58 - 0x0004:word16], Mem153[ss:sp_58 - 0x0002:word16], Mem153[ss:sp_58:word32], out si, out di, out ds_120)
	word16 ax_167 = Mem153[ss:bp_194 - 0x0006:word16]
	word16 dx_168 = Mem153[ss:bp_194 - 0x0008:word16]
	Mem170[ss:bp_194 + 0x000C:word16] = v27_169
	Mem153[ss:bp_194 + 0x000C:ui32] = SEQ(Mem170[ss:bp_194 + 0x000E:word16], Mem153[ss:bp_194 + 0x000C:word16])
	ui32 v28_v27_201 = Mem153[ss:bp_194 + 0x000C:ui32] - SEQ(ax_167, dx_168)
	Mem174[ss:bp_194 + 0x000E:word16] = SLICE(v28_v27_201, word16, 16)
	word16 v27_169 = (word16) v28_v27_201
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BB3:
	Mem178[ss:sp_58 + 0x0002:word16] = Mem69[ss:bp_194 - 0x0002:word16]
	Mem181[ss:sp_58:word16] = Mem178[ss:bp_194 - 0x0004:word16]
	word16 cx_268
	word16 bx_269
	ax_11 = fn0800_4346(ds_120, Mem181[ss:sp_58 + 0x0002:word16], out cx_268, out dx, out bx_269, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BBF:
	word16 bp_198 = Mem197[ss:bp_194:word16]
	dxOut = dx
	bpOut = bp_198
	siOut = si
	diOut = di
	dsOut = ds
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3B0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3BC3(word16 cx, word16 dx, selector ds, word32 dwArg02, word32 dwArg06, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: bp ds si
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3BC3_entry:
	word16 wArg06 = SLICE(dwArg06, word16, 0)
	word16 wArg08 = SLICE(dwArg06, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BC3:
	word16 di_301
	fn0800_37BE(cx, dx, ds, SEQ(ds, 0x43AD), out di_301)
	selector ds_48
	word16 si_302
	word16 di_303
	fn0800_4234(ds, SEQ(ds, 0x43AD), SEQ(ds, 0x0A61), out si_302, out di_303, out ds_48)
	Mem58[ds_48:0x29D5:word16] = dx
	Mem59[ds_48:0x29D3:word16] = 0x43AD
	fn0800_4194(ds_48, dwArg02)
	word16 cx_304
	word16 dx_305
	word16 bx_306
	fn0800_ACB3(ds_48, dwArg02, dwArg06, 0x0000, out cx_304, out dx_305, out bx_306)
	word16 ax_74 = 0x43AD - wArg06
	word16 bp_127
	selector ds_131
	word16 dx_307
	word16 si_308
	word16 di_309
	fn0800_3B0A(ds_48, ax_74, dx - wArg08 - (ax_74 <u 0x0000), out dx_307, out bp_127, out si_308, out di_309, out ds_131)
	word16 sp_135 = <invalid>
	Mem144[ss:sp_135 + 0x000A:word16] = Mem125[ds_131:0x29D5:word16]
	Mem147[ss:sp_135 + 0x0008:word16] = Mem144[ds_131:0x29D3:word16]
	fn0800_BA67(ds_131, Mem147[ss:sp_135 + 0x0008:segptr32])
	Mem159[ss:sp_135 + 0x000A:word16] = 0x0000
	ui32 ax_dx_257 = SEQ(Mem159[ss:bp_127 + 0x000A:word16], Mem159[ss:bp_127 + 0x0008:word16])
	Mem159[ss:bp_127 + 0x000C:ui32] = SEQ(Mem159[ss:bp_127 + 0x000E:word16], Mem159[ss:bp_127 + 0x000C:word16])
	ui32 ax_dx_258 = ax_dx_257 + Mem159[ss:bp_127 + 0x000C:ui32]
	Mem168[ss:sp_135 + 0x0008:word16] = SLICE(ax_dx_258, word16, 16)
	Mem170[ss:sp_135 + 0x0006:word16] = (word16) ax_dx_258
	Mem173[ss:sp_135 + 0x0004:word16] = Mem170[ss:bp_127 + 0x0006:word16]
	Mem176[ss:sp_135 + 0x0002:word16] = Mem173[ss:bp_127 + 0x0004:word16]
	word16 cx_310
	word16 dx_311
	word16 bx_312
	fn0800_ACB3(ds_131, Mem176[ss:sp_135 + 0x0002:segptr32], Mem176[ss:sp_135 + 0x0006:ui32], Mem176[ss:sp_135 + 0x000A:word16], out cx_310, out dx_311, out bx_312)
	Mem190[ss:sp_135 + 0x000A:word16] = Mem176[ss:bp_127 - 0x0002:word16]
	Mem193[ss:sp_135 + 0x0008:word16] = Mem190[ss:bp_127 - 0x0004:word16]
	Mem196[ss:sp_135 + 0x0006:word16] = Mem193[ss:bp_127 + 0x0006:word16]
	Mem199[ss:sp_135 + 0x0004:word16] = Mem196[ss:bp_127 + 0x0004:word16]
	Mem202[ss:sp_135 + 0x0002:word16] = Mem199[ds_131:0x29D5:word16]
	Mem205[ss:sp_135:word16] = Mem202[ds_131:0x29D3:word16]
	word16 bp_207
	selector ds_211
	word16 si_214
	word16 dx_313
	word16 di_314
	fn0800_3B0A(ds_131, Mem205[ss:sp_135 + 8:word16], Mem205[ss:sp_135 + 10:word16], out dx_313, out bp_207, out si_214, out di_314, out ds_211)
	word16 sp_215 = <invalid>
	Mem224[ss:sp_215 + 0x000A:word16] = Mem205[ds_211:0x29D5:word16]
	Mem227[ss:sp_215 + 0x0008:word16] = Mem224[ds_211:0x29D3:word16]
	selector ds_233
	word16 cx_315
	word16 dx_316
	fn0800_A614(ds_211, Mem227[ss:sp_215 + 0x0008:segptr32], out cx_315, out dx_316, out ds_233)
	Mem241[ss:sp_215 + 0x000A:word16] = ds_233
	Mem244[ss:sp_215 + 0x0008:word16] = 0x43AD
	fn0800_8F7F(0xAD, ds_233, Mem244[ss:sp_215 + 0x0008:segptr32])
	word16 bp_255 = Mem244[ss:bp_207:word16]
	siOut = si_214
	dsOut = ds_233
	return bp_255
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3BC3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_3C99(word16 si, word16 di, selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp cx ds si sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3C99_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3C99:
	word16 bx_480
	fn0800_3509(si, di, fp - 0x006C, ss, SEQ(ds, 0x4348), out bx_480)
	word16 di_43 = fp - 0x006C
	word16 si_386 = 0x0A54
	word16 cx_45 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CBE:
	branch cx_45 == 0x0000 l0800_3CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CBE_1:
	di_43 = di_43 + 0x0001
	cx_45 = cx_45 - 0x0001
	branch Mem40[ss:di_43:byte] == 0x00 l0800_3CBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC0:
	word16 di_390 = di_43 - 0x0001
	word16 cx_394 = 0x000D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC4:
	branch cx_394 == 0x0000 l0800_3CC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC6:
	selector ds_79
	word16 si_481
	word16 di_482
	fn0800_4234(ds, SEQ(ss, fp - 0x006C), SEQ(ds, 0x0A61), out si_481, out di_482, out ds_79)
	word16 cx_483
	word16 dx_484
	word16 bx_485
	fn0800_ACB3(ds_79, dwArg02, 0x00000000, 0x0000, out cx_483, out dx_484, out bx_485)
	word16 bp_136
	selector ds_140
	word16 dx_486
	word16 si_487
	word16 di_488
	fn0800_3B0A(ds_79, wArg06, wArg08, out dx_486, out bp_136, out si_487, out di_488, out ds_140)
	word16 sp_144 = <invalid>
	Mem152[ss:sp_144 + 0x000A:word16] = 0x0000
	ui32 ax_dx_410 = SEQ(Mem152[ss:bp_136 + 0x000A:word16], Mem152[ss:bp_136 + 0x0008:word16])
	Mem152[ss:bp_136 + 0x000C:ui32] = SEQ(Mem152[ss:bp_136 + 0x000E:word16], Mem152[ss:bp_136 + 0x000C:word16])
	ui32 ax_dx_411 = ax_dx_410 + Mem152[ss:bp_136 + 0x000C:ui32]
	Mem161[ss:sp_144 + 0x0008:word16] = SLICE(ax_dx_411, word16, 16)
	Mem163[ss:sp_144 + 0x0006:word16] = (word16) ax_dx_411
	Mem166[ss:sp_144 + 0x0004:word16] = Mem163[ss:bp_136 + 0x0006:word16]
	Mem169[ss:sp_144 + 0x0002:word16] = Mem166[ss:bp_136 + 0x0004:word16]
	word16 cx_489
	word16 dx_490
	word16 bx_491
	fn0800_ACB3(ds_140, Mem169[ss:sp_144 + 0x0002:segptr32], Mem169[ss:sp_144 + 0x0006:ui32], Mem169[ss:sp_144 + 0x000A:word16], out cx_489, out dx_490, out bx_491)
	Mem183[ss:sp_144 + 0x000A:word16] = Mem169[ss:bp_136 + 0x0006:word16]
	Mem186[ss:sp_144 + 0x0008:word16] = Mem183[ss:bp_136 + 0x0004:word16]
	fn0800_4194(ds_140, Mem186[ss:sp_144 + 0x0008:word32])
	ui32 bx_cx_412 = SEQ(Mem186[ss:bp_136 + 0x000A:word16], Mem186[ss:bp_136 + 0x0008:word16])
	Mem186[ss:bp_136 + 0x000C:ui32] = SEQ(Mem186[ss:bp_136 + 0x000E:word16], Mem186[ss:bp_136 + 0x000C:word16])
	ui32 dx_ax_476 = <invalid>
	ui32 dx_ax_416 = dx_ax_476 - (bx_cx_412 + Mem186[ss:bp_136 + 0x000C:ui32])
	Mem206[ss:bp_136 + 0x000E:word16] = SLICE(dx_ax_416, word16, 16)
	word16 ax_201 = (word16) dx_ax_416
	Mem207[ss:bp_136 + 0x000C:word16] = ax_201
	Mem210[ss:sp_144 + 0x000A:word16] = Mem207[ss:bp_136 + 0x000E:word16]
	Mem212[ss:sp_144 + 0x0008:word16] = ax_201
	Mem215[ss:sp_144 + 0x0006:word16] = Mem212[ss:bp_136 - 0x0002:word16]
	Mem218[ss:sp_144 + 0x0004:word16] = Mem215[ss:bp_136 - 0x0004:word16]
	Mem221[ss:sp_144 + 0x0002:word16] = Mem218[ss:bp_136 + 0x0006:word16]
	Mem224[ss:sp_144:word16] = Mem221[ss:bp_136 + 0x0004:word16]
	word16 bp_226
	selector ds_230
	word16 dx_492
	word16 si_493
	word16 di_494
	fn0800_3B0A(ds_140, Mem224[ss:sp_144 + 8:word16], Mem224[ss:sp_144 + 10:word16], out dx_492, out bp_226, out si_493, out di_494, out ds_230)
	word16 sp_234 = <invalid>
	Mem243[ss:sp_234 + 0x000A:word16] = Mem224[ss:bp_226 - 0x0002:word16]
	Mem246[ss:sp_234 + 0x0008:word16] = Mem243[ss:bp_226 - 0x0004:word16]
	selector ds_252
	word16 cx_495
	word16 dx_496
	fn0800_A614(ds_230, Mem246[ss:sp_234 + 0x0008:segptr32], out cx_495, out dx_496, out ds_252)
	Mem261[ss:sp_234 + 0x000A:word16] = Mem246[ds_252:0x29D1:word16]
	Mem264[ss:sp_234 + 0x0008:word16] = Mem261[ds_252:0x29CF:word16]
	word16 cx_497
	word16 dx_498
	selector ds_270
	fn0800_A614(ds_252, Mem264[ss:sp_234 + 0x0008:segptr32], out cx_497, out dx_498, out ds_270)
	Mem279[ss:sp_234 + 0x000A:word16] = 0x0180
	Mem281[ss:sp_234 + 0x0008:word16] = ds_270
	Mem284[ss:sp_234 + 0x0006:word16] = 0x4348
	fn0800_A4F6(ds_270, Mem284[ss:sp_234 + 0x000A:word16])
	Mem295[ss:sp_234 + 0x000A:word16] = ds_270
	Mem298[ss:sp_234 + 0x0008:word16] = 0x4348
	fn0800_8F7F(0x48, ds_270, Mem298[ss:sp_234 + 0x0008:segptr32])
	Mem309[ss:sp_234 + 0x000A:word16] = ds_270
	Mem312[ss:sp_234 + 0x0008:word16] = 0x4348
	Mem314[ss:sp_234 + 0x0006:word16] = ss
	Mem317[ss:sp_234 + 0x0004:word16] = bp_226 - 0x006A
	word16 dx_319
	branch fn0800_BA4A(ds_270, Mem317[ss:sp_234 + 0x0004:segptr32], Mem317[ss:sp_234 + 0x0008:segptr32], out dx_319) != 0xFFFF l0800_3DB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DA3:
	Mem329[ss:sp_234 + 0x000A:word16] = ss
	Mem332[ss:sp_234 + 0x0008:word16] = bp_226 - 0x006A
	Mem335[ss:sp_234 + 0x0006:word16] = 0x000A
	word16 cx_501
	word16 bx_502
	word16 si_503
	word16 di_504
	selector es_505
	fn0800_0D24(ds_270, Mem335[ss:sp_234 + 0x0006:word16], Mem335[ss:sp_234 + 0x0008:segptr32], out cx_501, out dx_319, out bx_502, out si_503, out di_504, out es_505, out ds_270)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DB2:
	Mem355[ss:sp_234 + 0x000A:word16] = ds_270
	Mem358[ss:sp_234 + 0x0008:word16] = 0x0A65
	Mem360[ss:sp_234 + 0x0006:word16] = ds_270
	Mem363[ss:sp_234 + 0x0004:word16] = 0x4348
	selector ds_366
	word16 si_499
	word16 di_500
	word16 cx_365 = fn0800_4234(ds_270, Mem363[ss:sp_234 + 0x0004:word32], Mem363[ss:sp_234 + 0x0008:word32], out si_499, out di_500, out ds_366)
	Mem377[ds_366:0x29D1:word16] = dx_319
	Mem378[ds_366:0x29CF:word16] = 0x4348
	word16 si_381 = Mem378[ss:sp_234 + 0x000E:word16]
	bpOut = Mem378[ss:bp_226:word16]
	siOut = si_381
	dsOut = ds_366
	return (byte) cx_365
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3C99_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC4_2:
	Mem391[ss:di_390:byte] = Mem387[ds:si_386:byte]
	si_386 = si_386 + 0x0001
	di_390 = di_390 + 0x0001
	cx_394 = cx_394 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3DCF(selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_3DCF_entry:
	word16 wArg04_104 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_106 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DCF:
	word16 ax_28
	word16 v10_17 = Mem13[ptrArg02:word16] - 0x0001
	Mem18[ptrArg02:word16] = v10_17
	branch v10_17 < 0x0000 l0800_3DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DF3:
	byte ch_163
	ax_28 = fn0800_AEC2(ds, ptrArg02, out ch_163, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DDE:
	word16 ax_39 = Mem18[ptrArg02 + 0x000E:word16]
	word16 si_40 = Mem18[ptrArg02 + 0x000C:word16]
	Mem42[ptrArg02 + 0x000C:word16] = Mem18[ptrArg02 + 0x000C:word16] + 0x0001
	ax_28 = (uint16) (uint8) Mem42[ax_39:si_40:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DFF:
	byte ah_124 = SLICE(ax_28, byte, 8)
	byte bLoc04_119 = SLICE(ax_28, byte, 0)
	branch ax_28 != 0xFFFF l0800_3E1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E07:
	fn0800_4271(ds, wArg02_106, wArg04_104)
	word32 dx_ax_158 = <invalid>
	word16 cx_79
	word16 bx_164
	word16 si_165
	selector es_166
	ah_124 = SLICE(fn0800_0D24(ds, 0x0008, dx_ax_158, out cx_79, out dx, out bx_164, out si_165, out di, out es_166, out ds), byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E1F:
	chOut = <invalid>
	dxOut = dx
	diOut = di
	dsOut = ds
	return SEQ(ah_124, bLoc04_119)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3DCF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E27(selector ds, word32 dwArg02, ptr16 & cxOut, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3E27_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E27:
	word16 cx_41 = <invalid>
	selector ds_24
	word16 dx_42
	word16 di_44
	selector ds_45
	byte ch_83
	word16 dx_84
	word16 di_85
	byte ch_86
	word16 ax_56 = (fn0800_3DCF(ds, dwArg02, out ch_83, out dx_84, out di_85, out ds_24) << 0x08) + fn0800_3DCF(ds_24, dwArg02, out ch_86, out dx_42, out di_44, out ds_45)
	cxOut = SEQ(SLICE(cx_41, byte, 8), 0x08)
	dxOut = dx_42
	diOut = di_44
	dsOut = ds_45
	return ax_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E27_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E5D(selector ds, word32 dwArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: di ds dx
// Trashed: SCZO bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3E5D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E5D:
	selector ds_22
	word16 di_42
	selector ds_43
	word16 cx_83
	word16 dx_84
	word16 di_85
	word16 cx_86
	word16 dx_87
	word16 dx_58 = fn0800_3E27(ds, dwArg02, out cx_83, out dx_84, out di_85, out ds_22) + (fn0800_3E27(ds_22, dwArg02, out cx_86, out dx_87, out di_42, out ds_43) <u 0x0000)
	diOut = di_42
	dsOut = ds_43
	return dx_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E5D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E9A(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_3E9A_entry:
	word16 wArg04_130 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_132 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E9A:
	word16 ax_28
	word16 v10_17 = Mem13[ptrArg02:word16] - 0x0001
	Mem18[ptrArg02:word16] = v10_17
	branch v10_17 < 0x0000 l0800_3EBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EBE:
	byte ch_177
	word16 dx_178
	ax_28 = fn0800_AEC2(ds, ptrArg02, out ch_177, out dx_178)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EA9:
	word16 ax_39 = Mem18[ptrArg02 + 0x000E:word16]
	word16 si_40 = Mem18[ptrArg02 + 0x000C:word16]
	Mem42[ptrArg02 + 0x000C:word16] = Mem18[ptrArg02 + 0x000C:word16] + 0x0001
	ax_28 = (uint16) (uint8) Mem42[ax_39:si_40:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ECA:
	byte bLoc04_154 = SLICE(ax_28, byte, 0)
	branch ax_28 != 0xFFFF l0800_3EEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ED2:
	fn0800_4271(ds, wArg02_132, wArg04_130)
	word32 dx_ax_173 = <invalid>
	word16 cx_181
	word16 dx_182
	word16 bx_183
	word16 si_184
	selector es_185
	fn0800_0D24(ds, 0x0008, dx_ax_173, out cx_181, out dx_182, out bx_183, out si_184, out di, out es_185, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EEA:
	word16 dx_114
	word16 cx_179
	word16 bx_180
	word16 ax_160 = SEQ(SLICE(fn0800_ACB3(ds, ptrArg02, 0xFFFFFFFF, 0x0001, out cx_179, out dx_114, out bx_180), byte, 8), bLoc04_154)
	dxOut = dx_114
	diOut = di
	dsOut = ds
	return ax_160
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E9A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3F0A(selector ds, word32 dwArg02, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3F0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3F0A:
	selector ds_24
	byte ch_114
	word16 dx_115
	word16 di_116
	word16 ax_18 = fn0800_3DCF(ds, dwArg02, out ch_114, out dx_115, out di_116, out ds_24)
	selector ds_45
	byte ch_117
	word16 dx_118
	word16 di_119
	word16 ax_39 = fn0800_3DCF(ds_24, dwArg02, out ch_117, out dx_118, out di_119, out ds_45)
	word16 cx_71
	word16 dx_72
	word16 bx_120
	fn0800_ACB3(ds_45, dwArg02, 0xFFFFFFFE, 0x0001, out cx_71, out dx_72, out bx_120)
	dxOut = dx_72
	dsOut = ds_45
	return (ax_18 << 0x08) + ax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3F0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3F58(selector ds, word32 dwArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: di ds dx
// Trashed: SCZO bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3F58_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3F58:
	selector ds_22
	word16 cx_116
	word16 dx_117
	word16 di_118
	word16 ax_18 = fn0800_3E27(ds, dwArg02, out cx_116, out dx_117, out di_118, out ds_22)
	word16 di_42
	selector ds_43
	word16 cx_119
	word16 dx_120
	word16 ax_39 = fn0800_3E27(ds_22, dwArg02, out cx_119, out dx_120, out di_42, out ds_43)
	word16 cx_121
	word16 dx_122
	word16 bx_123
	fn0800_ACB3(ds_43, dwArg02, 0xFFFFFFFC, 0x0001, out cx_121, out dx_122, out bx_123)
	diOut = di_42
	dsOut = ds_43
	return ax_18 + (ax_39 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3F58_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3FAD(selector ds, word32 dwArg02, ptr16 & chOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3FAD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3FAD:
	selector ds_24
	word16 di_44
	selector ds_45
	byte ch_81
	word16 dx_82
	word16 di_83
	byte ch_84
	word16 dx_85
	word16 ax_55 = (fn0800_3DCF(ds_24, dwArg02, out ch_84, out dx_85, out di_44, out ds_45) << 0x08) + fn0800_3DCF(ds, dwArg02, out ch_81, out dx_82, out di_83, out ds_24)
	chOut = <invalid>
	diOut = di_44
	dsOut = ds_45
	return ax_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3FAD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_401E(selector ds, byte bArg02, word32 dwArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_401E_entry:
	byte bArg02_72 = SLICE(wArg02, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_401E:
	selector ds_28
	word16 cx_86
	word16 dx_87
	word16 bx_88
	word16 di_89
	fn0800_4047(ds, SLICE(wArg02 >>u 0x08, byte, 0), dwArg04, out cx_86, out dx_87, out bx_88, out di_89, out ds_28)
	word16 bx_47
	word16 cx_48
	word16 dx_49
	word16 di_51
	selector ds_52
	word16 ax_46 = fn0800_4047(ds_28, bArg02_72, dwArg04, out cx_48, out dx_49, out bx_47, out di_51, out ds_52)
	cxOut = cx_48
	dxOut = dx_49
	bxOut = bx_47
	diOut = di_51
	dsOut = ds_52
	return ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_401E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4047(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_4047_entry:
	word16 wArg06_108 = SLICE(ptrArg04, word16, 16)
	word16 wArg04_110 = SLICE(ptrArg04, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4047:
	word16 dx_143
	word16 cx_133
	word16 ax_127
	word16 v10_16 = Mem11[ptrArg04:word16] + 0x0001
	Mem17[ptrArg04:word16] = v10_16
	word16 bx_128 = SLICE(ptrArg04, word16, 0)
	branch v10_16 >= 0x0000 l0800_406F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_406F:
	ax_127 = fn0800_B30A(ds, bArg02, ptrArg04, out cx_133, out dx_143, out bx_128)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4056:
	word16 ax_42 = Mem17[ptrArg04 + 0x000E:word16]
	word16 si_43 = Mem17[ptrArg04 + 0x000C:word16]
	Mem45[ptrArg04 + 0x000C:word16] = Mem17[ptrArg04 + 0x000C:word16] + 0x0001
	Mem49[ax_42:si_43:byte] = bArg02
	ax_127 = (uint16) (uint8) bArg02 (alias)
	cx_133 = SEQ(ch, bArg02) (alias)
	dx_143 = SEQ(dh, bArg02) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_407C:
	branch ax_127 != 0xFFFF l0800_4099
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4081:
	fn0800_4271(ds, wArg04_110, wArg06_108)
	word32 dx_ax_159 = <invalid>
	word16 si_165
	selector es_166
	ax_127 = fn0800_0D24(ds, 0x0009, dx_ax_159, out cx_133, out dx_143, out bx_128, out si_165, out di, out es_166, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4099:
	cxOut = cx_133
	dxOut = dx_143
	bxOut = bx_128
	diOut = di
	dsOut = ds
	return ax_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4047_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_409C(selector ds, word16 wArg02, word16 wArg04, word32 dwArg06, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_409C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_409C:
	selector ds_23
	word16 cx_77
	word16 dx_78
	word16 bx_79
	word16 di_80
	fn0800_401E(ds, wArg04, dwArg06, out cx_77, out dx_78, out bx_79, out di_80, out ds_23)
	word16 di_44
	selector ds_45
	word16 dx_46
	word16 cx_81
	word16 bx_82
	word16 ax_41 = fn0800_401E(ds_23, wArg02, dwArg06, out cx_81, out dx_46, out bx_82, out di_44, out ds_45)
	dxOut = dx_46
	diOut = di_44
	dsOut = ds_45
	return ax_41
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_409C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_40BF(selector ds, byte bArg02, word32 dwArg04, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_40BF_entry:
	byte bArg02 = SLICE(wArg02, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_40BF:
	selector ds_30
	word16 cx_93
	word16 dx_94
	word16 bx_95
	word16 di_96
	fn0800_4047(ds, bArg02 & 0xFF, dwArg04, out cx_93, out dx_94, out bx_95, out di_96, out ds_30)
	word16 dx_56
	word16 di_58
	selector ds_59
	word16 cx_97
	word16 bx_98
	word16 ax_53 = fn0800_4047(ds_30, SLICE(wArg02 >>u 0x08, byte, 0) & 0xFF, dwArg04, out cx_97, out dx_56, out bx_98, out di_58, out ds_59)
	dxOut = dx_56
	diOut = di_58
	dsOut = ds_59
	return ax_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_40BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_4110(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: cx di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4110_entry:
	word16 wArg0C = SLICE(dwArg0A, word16, 16)
	word16 wArg0A = SLICE(dwArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4110:
	byte ch_145
	word16 di_124
	word16 si_134
	word16 ax_28 = fn0800_ABA3(ds, dwArg02, 0x0001, wArg06, dwArg0A, out ch_145, out si_134, out di_124)
	word16 cx_121 = <invalid>
	branch wArg08 != 0x0000 l0800_4138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4133:
	branch ax_28 == wArg06 l0800_4150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4138:
	fn0800_4271(ds, wArg0A, wArg0C)
	word32 dx_ax_141 = <invalid>
	word16 bx_72
	word16 dx_76
	selector es_77
	fn0800_0D24(ds, 0x0008, dx_ax_141, out cx_121, out dx_76, out bx_72, out si_134, out di_124, out es_77, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4150:
	siOut = si_134
	diOut = di_124
	dsOut = ds
	return (byte) cx_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4110_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_4152(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4152_entry:
	word16 wArg0C = SLICE(dwArg0A, word16, 16)
	word16 wArg0A = SLICE(dwArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4152:
	word16 di_124
	word16 si_134
	word16 ax_116 = fn0800_AD85(ds, dwArg02, 0x0001, wArg06, dwArg0A, out si_134, out di_124)
	branch wArg08 != 0x0000 l0800_417A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4175:
	branch ax_116 == wArg06 l0800_4192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_417A:
	fn0800_4271(ds, wArg0A, wArg0C)
	word32 dx_ax_141 = <invalid>
	word16 bx_72
	word16 cx_73
	word16 dx_76
	selector es_77
	ax_116 = fn0800_0D24(ds, 0x0009, dx_ax_141, out cx_73, out dx_76, out bx_72, out si_134, out di_124, out es_77, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4192:
	siOut = si_134
	diOut = di_124
	dsOut = ds
	return (byte) ax_116
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4152_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4194(selector ds, word32 dwArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO bx cx es Top
// Preserved: bp sp
fn0800_4194_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4194:
	word16 dx_141
	fn0800_AD2F(ds, dwArg02, out dx_141)
	word16 cx_142
	word16 dx_143
	word16 bx_144
	fn0800_ACB3(ds, dwArg02, 0x00000000, 0x0002, out cx_142, out dx_143, out bx_144)
	word16 dx_66
	fn0800_AD2F(ds, dwArg02, out dx_66)
	word32 dx_ax_140 = <invalid>
	word16 cx_145
	word16 dx_146
	word16 bx_147
	fn0800_ACB3(ds, dwArg02, dx_ax_140, 0x0000, out cx_145, out dx_146, out bx_147)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4194_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4234(selector ds, word32 dwArg02, word32 dwArg06, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx di ds si
// Trashed: SCZO bx cx di ds es si Top
// Preserved: D bp sp
fn0800_4234_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4234:
	word16 dx_28
	word16 cx_26
	selector ds_101
	branch (fn0800_AA7E(ds, dwArg02, dwArg06, out cx_26, out dx_28, out ds_101) | dx_28) != 0x0000 l0800_4267
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4257:
	word16 dx_119
	word16 bx_120
	selector es_121
	fn0800_0D24(ds_101, 0x0007, dwArg02, out cx_26, out dx_119, out bx_120, out si, out di, out es_121, out ds_101)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4267:
	siOut = si
	diOut = di
	dsOut = ds_101
	return cx_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4234_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4271(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_4271_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4271:
	branch wArg04 != Mem7[ds:0x29E5:word16] l0800_428D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4280:
	branch wArg02 != Mem7[ds:0x29E3:word16] l0800_428D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_428D:
	branch wArg04 != Mem7[ds:0x29E1:word16] l0800_42A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4299:
	branch wArg02 != Mem7[ds:0x29DF:word16] l0800_42A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42A6:
	branch wArg04 != Mem7[ds:0x29D1:word16] l0800_42BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42B2:
	branch wArg02 != Mem7[ds:0x29CF:word16] l0800_42BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42BF:
	branch wArg04 != Mem7[ds:0x29DD:word16] l0800_42D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42CB:
	branch wArg02 != Mem7[ds:0x29DB:word16] l0800_42D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42D8:
	branch wArg04 != Mem7[ds:0x29D9:word16] l0800_42F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42E4:
	branch wArg02 != Mem7[ds:0x29D7:word16] l0800_42F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42F1:
	branch wArg04 != Mem7[ds:0x29D5:word16] l0800_430A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42FD:
	branch wArg02 != Mem7[ds:0x29D3:word16] l0800_430A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_430A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4303:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42EA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42D1:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42B8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_429F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4286:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4271_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4311(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_4311_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4311:
	word16 bp_19
	word16 dx_24
	word16 di_22
	selector ds_23
	word16 si_26
	word16 ax_18 = fn0800_9F89(ds, wArg02, wArg04, out dx_24, out bp_19, out si_26, out di_22, out ds_23)
	Mem32[ss:bp_19 - 0x0002:word16] = dx_24
	Mem33[ss:bp_19 - 0x0004:word16] = ax_18
	branch (ax_18 | dx_24) != 0x0000 l0800_433C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_432D:
	word16 cx_102
	word16 dx_103
	word16 bx_104
	selector es_105
	fn0800_0D24(ds_23, 0x0006, SEQ(ds_23, 0x0A6C), out cx_102, out dx_103, out bx_104, out si_26, out di_22, out es_105, out ds_23)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_433C:
	word16 ax_65 = Mem63[ss:bp_19 - 0x0004:word16]
	word16 bp_67 = Mem63[ss:bp_19:word16]
	dxOut = Mem63[ss:bp_19 - 0x0002:word16]
	bpOut = bp_67
	siOut = si_26
	diOut = di_22
	dsOut = ds_23
	return ax_65
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4311_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4346(selector ds, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_4346_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4346:
	selector ds_16
	word16 dx_17
	word16 bx_19
	word16 cx_21
	word16 ax_18 = fn0800_9E75(ds, wArg04, out cx_21, out dx_17, out bx_19, out ds_16)
	cxOut = cx_21
	dxOut = dx_17
	bxOut = bx_19
	dsOut = ds_16
	return ax_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4346_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4357(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx dl es Top
// Preserved: bp sp
fn0800_4357_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4357:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B9:
	word16 wArg02_104 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_128 = SLICE(ptrArg02, word16, 16)
	word16 wArg06_109 = SLICE(ptrArg06, word16, 0)
	word16 wArg08_120 = SLICE(ptrArg06, word16, 16)
	branch Mem11[ptrArg06:byte] != 0x00 l0800_435C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_435C:
	byte al_20 = Mem11[ptrArg06:byte]
	word16 ax_22 = (int16) al_20
	branch ax_22 == 0x002A l0800_4379
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4379:
	word16 wArg02_101 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_124 = SLICE(ptrArg02, word16, 16)
	branch Mem27[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4382:
	branch Mem27[ptrArg02:byte] != 0x00 l0800_4376
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4376:
	ptrArg02_125 = SEQ(wArg04_124, wArg02_101 + 0x0001) (alias)
	ptrArg02 = ptrArg02_125
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4388:
	ptrArg02 = ptrArg02_125
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_436A:
	branch ax_22 == 0x002E l0800_439E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_439E:
	branch Mem11[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_436F:
	branch ax_22 == 0x003F l0800_438A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_438A:
	branch Mem11[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4393:
	branch Mem11[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4399:
	ptrArg02 = SEQ(wArg04_128, wArg02_104 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4374:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43A7:
	branch al_20 == Mem11[ptrArg02:byte] l0800_43B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B3:
	ptrArg02 = SEQ(wArg04_128, wArg02_104 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B6:
	ptrArg06 = SEQ(wArg08_120, wArg06_109 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43AF:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43C2:
	word16 ax_133
	branch Mem11[ptrArg02:byte] != 0x00 l0800_43D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D0:
	ax_133 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43CB:
	ax_133 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D2:
	return ax_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4357_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx es Top
// Preserved: bp si sp
fn0800_43D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D4:
	word16 cx_12 = wArg06
	word16 si_18 = wArg02 + SLICE(wArg06 *s 0x000C, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_440F:
	si_18 = si_18 - 0x000C
	cx_12 = cx_12 - 0x0001
	branch cx_12 != 0x0000 l0800_43E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43E9:
	Mem33[psegArg04:si_18 + 0x0002:word16] = 0x0000
	Mem34[psegArg04:si_18:word16] = 0x0000
	Mem35[psegArg04:si_18 + 0x0004:word16] = 0xFFFF
	Mem36[psegArg04:si_18 + 0x0008:word16] = 0x0000
	Mem37[psegArg04:si_18 + 0x0006:word16] = 0x0000
	Mem38[psegArg04:si_18 + 0x000A:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4419:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_43D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_441C(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_441C_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	selector psegArg04 = SLICE(ptrArg02, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_441C:
	word16 di_16 = 0x0000
	word16 cx_17 = 0x0000
	word16 si_23 = wArg02
	branch wArg06 <=u 0x0000 l0800_4452
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4439:
	branch (Mem28[psegArg04:si_23:word16] | Mem28[psegArg04:si_23 + 0x0002:word16]) == 0x0000 l0800_4449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4445:
	di_16 = di_16 + 0x0001
	wLoc04 = cx_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4449:
	si_23 = si_23 + 0x000C
	cx_17 = cx_17 + 0x0001
	branch cx_17 <u wArg06 l0800_4439
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4452:
	selector psegArg04_313 = SLICE(ptrArg02, selector, 16)
	word16 wArg02_314 = SLICE(ptrArg02, word16, 0)
	branch di_16 != 0x0000 l0800_4459
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4459:
	branch di_16 == 0x0001 l0800_4461
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4461:
	selector es_69 = SLICE(ptrArg02, selector, 16)
	word16 bx_67 = SLICE(ptrArg02 + wLoc04 *s 0x000C, word16, 0)
	Mem71[es_69:bx_67 + 0x000A:word16] = Mem60[es_69:bx_67 + 0x000A:word16] + 0x0001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_445E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4525:
	branch fn0800_463B(ds, wArg02_314, psegArg04_313, wArg06) == 0x0000 l0800_453B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_453B:
	fn0800_4550(wArg02_314, psegArg04_313, wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4538:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4478:
	word16 ax_133 = SLICE(Mem94[ds:0x4658:word16] *s 0x000C, word16, 0)
	word16 bx_137 = wArg02_314 + ax_133
	word16 ax_148 = SLICE(Mem142[ds:0x465A:word16] *s 0x000C, word16, 0)
	word16 ax_139 = Mem94[psegArg04_313:bx_137 + 0x0002:word16]
	word16 dx_140 = Mem94[psegArg04_313:bx_137:word16]
	word16 bx_151 = wArg02_314 + ax_148
	Mem155[psegArg04_313:bx_151:word16] = v23_154
	ui32 v24_v23_248 = SEQ(Mem155[psegArg04_313:bx_151 + 0x0002:word16], Mem146[psegArg04_313:bx_151:word16]) + SEQ(ax_139, dx_140)
	Mem161[psegArg04_313:bx_151 + 0x0002:word16] = SLICE(v24_v23_248, word16, 16)
	word16 bx_163 = wArg02_314 + ax_133
	Mem164[psegArg04_313:bx_163 + 0x0002:word16] = 0x0000
	Mem165[psegArg04_313:bx_163:word16] = 0x0000
	word16 bx_167 = wArg02_314 + ax_148
	Mem170[psegArg04_313:bx_167 + 0x000A:word16] = Mem165[psegArg04_313:bx_167 + 0x000A:word16] + 0x0001
	word16 cx_134 = ax_133
	word16 dx_149 = ax_148
	word16 v23_154 = (word16) v24_v23_248
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44DD:
	word16 bx_178 = wArg02_314 + dx_149
	branch Mem174[psegArg04_313:bx_178 + 0x0004:word16] != 0xFFFF l0800_44C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44C3:
	word16 ax_184 = Mem174[psegArg04_313:bx_178 + 0x0004:word16]
	Mem186[ds:0x465A:word16] = ax_184
	word16 ax_189 = SLICE(ax_184 *s 0x000C, word16, 0)
	word16 bx_192 = wArg02_314 + ax_189
	Mem195[psegArg04_313:bx_192 + 0x000A:word16] = Mem186[psegArg04_313:bx_192 + 0x000A:word16] + 0x0001
	dx_149 = ax_189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44EB:
	Mem198[psegArg04_313:bx_178 + 0x0004:word16] = Mem174[ds:0x4658:word16]
	word16 bx_201 = wArg02_314 + ax_133
	Mem204[psegArg04_313:bx_201 + 0x000A:word16] = Mem198[psegArg04_313:bx_201 + 0x000A:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4517:
	word16 bx_212 = wArg02_314 + cx_134
	branch Mem208[psegArg04_313:bx_212 + 0x0004:word16] != 0xFFFF l0800_44FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44FD:
	word16 ax_218 = Mem208[psegArg04_313:bx_212 + 0x0004:word16]
	Mem220[ds:0x4658:word16] = ax_218
	word16 ax_223 = SLICE(ax_218 *s 0x000C, word16, 0)
	word16 bx_226 = wArg02_314 + ax_223
	Mem229[psegArg04_313:bx_226 + 0x000A:word16] = Mem220[psegArg04_313:bx_226 + 0x000A:word16] + 0x0001
	cx_134 = ax_223
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4456:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_454A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_441C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4550(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_4550_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4550:
	word16 sp_114 = fp - 0x0010
	word16 wLoc04_128 = 0x0000
	word16 wLoc06_129 = 0x0000
	word16 wLoc0C_132 = 0x0001
	word32 dwLoc0A_213 = 0x80000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45D6:
	word16 wLoc0A_153 = SLICE(dwLoc0A_213, word16, 0)
	word16 wLoc08_150 = SLICE(dwLoc0A_213, word16, 16)
	branch wLoc0C_132 <=u 0x0010 l0800_4573
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4573:
	word16 di_27 = 0x0000
	word16 si_28 = wArg02
	branch wArg06 <=u 0x0000 l0800_45C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_457D:
	branch Mem33[psegArg04:si_28 + 0x000A:word16] != wLoc0C_132 l0800_45BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4589:
	word16 sp_41 = sp_114 - 2
	Mem42[ss:sp_41:word16] = wLoc0C_132
	Mem45[ss:sp_41 - 2:word16] = wLoc08_150
	Mem48[ss:sp_41 - 4:word16] = wLoc0A_153
	Mem51[ss:sp_41 - 6:word16] = wLoc04_128
	Mem54[ss:sp_41 - 8:word16] = wLoc06_129
	word16 dx_58
	word16 bx_217
	word16 cx_216
	word16 ax_55 = fn0800_8BC2(Mem54[ss:sp_41 - 8:word32], Mem54[ss:sp_41 - 4:word16], Mem54[ss:sp_41 - 2:word16], out cx_216, out dx_58, out bx_217)
	word16 sp_59 = <invalid>
	Mem66[ss:sp_59 + 0x0006:word16] = dx_58
	Mem68[ss:sp_59 + 0x0004:word16] = ax_55
	word16 dx_71
	word16 ax_69 = fn0800_45E2(Mem68[ss:sp_59 + 0x0004:word16], Mem68[ss:sp_59 + 0x0006:word16], Mem68[ss:sp_59 + 0x0008:word16], out dx_71)
	Mem78[psegArg04:si_28 + 0x0008:word16] = dx_71
	Mem79[psegArg04:si_28 + 0x0006:word16] = ax_69
	ui32 v21_v20_124 = SEQ(wLoc04_128, v20_82) + dwLoc0A_213
	word16 v20_82 = (word16) v21_v20_124
	sp_114 = sp_59 + 0x000A
	wLoc06_129 = v20_82
	wLoc04_128 = SLICE(v21_v20_124, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45BA:
	si_28 = si_28 + 0x000C
	di_27 = di_27 + 0x0001
	branch di_27 <u wArg06 l0800_457D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45C3:
	wLoc0C_132 = wLoc0C_132 + 0x0001
	dwLoc0A_213 = SEQ(wLoc08_150 >>u 0x0001, __rcr(wLoc0A_153, 0x01, SLICE(cond(wLoc08_150 >>u 0x0001), bool, 1))) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45DC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4550_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_45E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45E2:
	word16 bx_11 = wArg06
	word16 wLoc04_67 = 0x0000
	word16 wLoc06_68 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_462A:
	bx_11 = bx_11 - 0x0001
	branch bx_11 != 0x0000 l0800_45F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45F7:
	word16 ax_30 = __rcl(wLoc04_67, 0x01, SLICE(cond(wLoc06_68 << 0x0001), bool, 1))
	wLoc06_68 = wLoc06_68 << 0x0001
	branch (wArg02 & 0x0001) == 0x0000 l0800_461A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4612:
	wLoc06_68 = wLoc06_68 | 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_461A:
	wLoc04_67 = ax_30
	wArg04 = wArg04 >>u 0x0001
	wArg02 = __rcr(wArg02, 0x01, SLICE(cond(wArg04 >>u 0x0001), bool, 1))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4631:
	dxOut = wLoc04_67
	return wLoc06_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_45E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_463B(selector ds, word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp di es si sp
fn0800_463B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_463B:
	word16 wLoc0C_155 = 0xFFFF
	word16 wLoc0E_156 = 0xFFFF
	word16 wLoc08_157 = 0xFFFF
	word16 wLoc0A_158 = 0xFFFF
	word16 cx_23 = 0x0000
	word16 si_24 = wArg02
	branch wArg06 <=u 0x0000 l0800_46D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4661:
	word16 ax_32 = Mem29[psegArg04:si_24 + 0x0002:word16]
	word16 dx_33 = Mem29[psegArg04:si_24:word16]
	branch (dx_33 | ax_32) == 0x0000 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4675:
	branch ax_32 >u wLoc08_157 l0800_46AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4680:
	branch ax_32 <u wLoc08_157 l0800_4687
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4682:
	branch dx_33 >=u wLoc0A_158 l0800_46AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46AB:
	branch ax_32 >u wLoc0C_155 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46B6:
	branch ax_32 <u wLoc0C_155 l0800_46BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46B8:
	branch dx_33 >=u wLoc0E_156 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46BD:
	Mem70[ds:0x4658:word16] = cx_23
	wLoc0C_155 = ax_32
	wLoc0E_156 = dx_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4687:
	Mem80[ds:0x4658:word16] = Mem77[ds:0x465A:word16]
	Mem86[ds:0x465A:word16] = cx_23
	wLoc0C_155 = wLoc08_157
	wLoc0E_156 = wLoc0A_158
	wLoc08_157 = ax_32
	wLoc0A_158 = dx_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46CD:
	si_24 = si_24 + 0x000C
	cx_23 = cx_23 + 0x0001
	branch cx_23 <u wArg06 l0800_4661
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46D5:
	branch wLoc08_157 != 0xFFFF l0800_46E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46DB:
	branch wLoc0A_158 == 0xFFFF l0800_46ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46E1:
	branch wLoc0C_155 != 0xFFFF l0800_46F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46E7:
	branch wLoc0E_156 != 0xFFFF l0800_46F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46F5:
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46ED:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_463B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_46FE(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_46FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46FE:
	branch Mem15[ds:0x2A05:word16] >u 0x0000 l0800_471F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_470D:
	branch Mem15[ds:0x2A05:word16] <u 0x0000 l0800_4716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_470F:
	branch Mem15[ds:0x2A03:word16] >=u 0x002A l0800_471F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_471F:
	word16 cx_1571
	word16 bx_1573
	word16 dx_1572
	fn0800_ACB3(ds, SEQ(Mem33[ds:0x29E5:word16], Mem37[ds:0x29E3:word16]), 0x00000028, 0x0000, out cx_1571, out dx_1572, out bx_1573)
	selector ds_62
	word16 di_1575
	byte ch_1574
	word16 ax_58 = fn0800_3FAD(ds, SEQ(Mem40[ds:0x29E5:word16], Mem54[ds:0x29E3:word16]), out ch_1574, out di_1575, out ds_62)
	branch Mem57[ds_62:0x2A05:word16] >u 0x0000 l0800_4761
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4750:
	branch Mem57[ds_62:0x2A05:word16] <u 0x0000 l0800_4758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4752:
	branch ax_58 + 0x0024 <=u Mem57[ds_62:0x2A03:word16] l0800_4761
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4761:
	selector ds_120
	word16 dx_133
	word16 di_1579
	word16 dx_1577
	word16 bx_1578
	word16 cx_1576
	word16 ax_130 = fn0800_8CAA(fn0800_ACB3(ds_62, SEQ(Mem92[ds_62:0x29E5:word16], Mem96[ds_62:0x29E3:word16]), (uint32) (uint16) (ax_58 + 0x0020), 0x0000, out cx_1576, out dx_1577, out bx_1578), 0x08, fn0800_3F58(ds_62, SEQ(Mem99[ds_62:0x29E5:word16], Mem113[ds_62:0x29E3:word16]), out di_1579, out ds_120), out dx_133)
	word16 sp_134 = <invalid>
	branch dx_133 != 0x0052 l0800_4798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4793:
	branch ax_130 == 0x4E43 l0800_47A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47A1:
	Mem145[ss:sp_134 - 2:word16] = Mem116[ds_120:0x29E5:word16]
	Mem148[ss:sp_134 - 4:word16] = Mem145[ds_120:0x29E3:word16]
	word16 dx_152
	word16 ax_149 = fn0800_AD2F(ds_120, Mem148[ss:sp_134 - 4:segptr32], out dx_152)
	Mem167[ss:sp_134 - 2:word16] = 0x0000
	Mem170[ss:sp_134 - 4:word16] = 0x0000
	Mem172[ss:sp_134 - 6:word16] = 0x0002
	Mem175[ss:sp_134 - 8:word16] = Mem172[ds_120:0x29E5:word16]
	Mem178[ss:sp_134 - 10:word16] = Mem175[ds_120:0x29E3:word16]
	word16 bx_1582
	word16 dx_1581
	word16 cx_1580
	fn0800_ACB3(ds_120, Mem178[ss:sp_134 - 10:segptr32], Mem178[ss:sp_134 - 6:ui32], Mem178[ss:sp_134 - 2:word16], out cx_1580, out dx_1581, out bx_1582)
	Mem192[ss:sp_134 - 2:word16] = Mem178[ds_120:0x29E5:word16]
	Mem195[ss:sp_134 - 4:word16] = Mem192[ds_120:0x29E3:word16]
	selector ds_200
	word16 di_1584
	byte ch_1583
	fn0800_3FAD(ds_120, Mem195[ss:sp_134 - 4:word32], out ch_1583, out di_1584, out ds_200)
	Mem212[ss:sp_134 - 2:word16] = Mem195[ds_200:0x29E5:word16]
	Mem215[ss:sp_134 - 4:word16] = Mem212[ds_200:0x29E3:word16]
	word16 di_219
	selector ds_220
	byte ch_1585
	word16 ax_216 = fn0800_3FAD(ds_200, Mem215[ss:sp_134 - 4:word32], out ch_1585, out di_219, out ds_220)
	word16 wLoc0C_1431 = ax_216
	branch di_219 == 0x0000 l0800_47F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47F0:
	wLoc0C_1431 = ax_216 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47F3:
	byte cl_1586
	word16 dx_1587
	fn0800_8C69(wLoc0C_1431, 0x09, 0x0000, out cl_1586, out dx_1587)
	word16 sp_248 = <invalid>
	Mem264[ss:sp_248 - 2:word16] = 0x0000
	Mem267[ss:sp_248 - 4:word16] = 0x0000
	Mem269[ss:sp_248 - 6:word16] = 0x0016
	Mem273[ss:sp_248 - 8:word16] = Mem269[ds_220:0x29E5:word16]
	Mem276[ss:sp_248 - 10:word16] = Mem273[ds_220:0x29E3:word16]
	word16 dx_1589
	word16 cx_1588
	word16 bx_1590
	fn0800_ACB3(ds_220, Mem276[ss:sp_248 - 10:segptr32], Mem276[ss:sp_248 - 6:ui32], Mem276[ss:sp_248 - 2:word16], out cx_1588, out dx_1589, out bx_1590)
	Mem290[ss:sp_248 - 2:word16] = Mem276[ds_220:0x29E5:word16]
	Mem293[ss:sp_248 - 4:word16] = Mem290[ds_220:0x29E3:word16]
	selector ds_298
	byte ch_1591
	word16 di_1592
	fn0800_3FAD(ds_220, Mem293[ss:sp_248 - 4:word32], out ch_1591, out di_1592, out ds_298)
	Mem309[ss:sp_248 - 2:word16] = Mem293[ds_298:0x29E5:word16]
	Mem312[ss:sp_248 - 4:word16] = Mem309[ds_298:0x29E3:word16]
	selector ds_317
	byte ch_1593
	word16 di_1594
	word16 ax_313 = fn0800_3FAD(ds_298, Mem312[ss:sp_248 - 4:word32], out ch_1593, out di_1594, out ds_317)
	Mem329[ss:sp_248 - 2:word16] = Mem326[ds_317:0x29E5:word16]
	Mem332[ss:sp_248 - 4:word16] = Mem329[ds_317:0x29E3:word16]
	selector ds_337
	byte ch_1595
	word16 di_1596
	word16 ax_333 = fn0800_3FAD(ds_317, Mem332[ss:sp_248 - 4:word32], out ch_1595, out di_1596, out ds_337)
	Mem349[ss:sp_248 - 2:word16] = Mem346[ds_337:0x29E5:word16]
	Mem352[ss:sp_248 - 4:word16] = Mem349[ds_337:0x29E3:word16]
	selector ds_357
	byte ch_1597
	word16 di_1598
	word16 ax_353 = fn0800_3FAD(ds_337, Mem352[ss:sp_248 - 4:word32], out ch_1597, out di_1598, out ds_357)
	Mem369[ss:sp_248 - 2:word16] = Mem366[ds_357:0x29E5:word16]
	Mem372[ss:sp_248 - 4:word16] = Mem369[ds_357:0x29E3:word16]
	selector ds_377
	byte ch_1599
	word16 di_1600
	word16 ax_373 = fn0800_3FAD(ds_357, Mem372[ss:sp_248 - 4:word32], out ch_1599, out di_1600, out ds_377)
	Mem389[ss:sp_248 - 2:word16] = Mem386[ds_377:0x29E5:word16]
	Mem392[ss:sp_248 - 4:word16] = Mem389[ds_377:0x29E3:word16]
	selector ds_397
	byte ch_1601
	word16 di_1602
	word16 ax_393 = fn0800_3FAD(ds_377, Mem392[ss:sp_248 - 4:word32], out ch_1601, out di_1602, out ds_397)
	Mem409[ss:sp_248 - 2:word16] = Mem406[ds_397:0x29E5:word16]
	Mem412[ss:sp_248 - 4:word16] = Mem409[ds_397:0x29E3:word16]
	selector ds_417
	byte ch_1603
	word16 di_1604
	word16 ax_413 = fn0800_3FAD(ds_397, Mem412[ss:sp_248 - 4:word32], out ch_1603, out di_1604, out ds_417)
	Mem429[ss:sp_248 - 2:word16] = Mem426[ds_417:0x29E5:word16]
	Mem432[ss:sp_248 - 4:word16] = Mem429[ds_417:0x29E3:word16]
	selector ds_437
	byte ch_1605
	word16 di_1606
	word16 ax_433 = fn0800_3FAD(ds_417, Mem432[ss:sp_248 - 4:word32], out ch_1605, out di_1606, out ds_437)
	Mem449[ss:sp_248 - 2:word16] = Mem446[ds_437:0x29E5:word16]
	Mem452[ss:sp_248 - 4:word16] = Mem449[ds_437:0x29E3:word16]
	selector ds_457
	byte ch_1607
	word16 di_1608
	word16 ax_453 = fn0800_3FAD(ds_437, Mem452[ss:sp_248 - 4:word32], out ch_1607, out di_1608, out ds_457)
	Mem469[ss:sp_248 - 2:word16] = Mem466[ds_457:0x29E1:word16]
	Mem472[ss:sp_248 - 4:word16] = Mem469[ds_457:0x29DF:word16]
	Mem475[ss:sp_248 - 6:word16] = 0x4D5A
	selector ds_480
	word16 cx_1609
	word16 dx_1610
	word16 bx_1611
	word16 di_1612
	fn0800_401E(ds_457, Mem475[ss:sp_248 - 6:word16], Mem475[ss:sp_248 - 4:word32], out cx_1609, out dx_1610, out bx_1611, out di_1612, out ds_480)
	Mem490[ss:sp_248 - 2:word16] = Mem475[ds_480:0x29E1:word16]
	Mem493[ss:sp_248 - 4:word16] = Mem490[ds_480:0x29DF:word16]
	Mem498[ss:sp_248 - 6:word16] = 0x0000
	Mem500[ss:sp_248 - 8:word16] = 0x0000
	selector ds_505
	word16 dx_1613
	word16 di_1614
	fn0800_409C(ds_480, Mem500[ss:sp_248 - 8:word16], Mem500[ss:sp_248 - 6:word16], Mem500[ss:sp_248 - 4:word32], out dx_1613, out di_1614, out ds_505)
	Mem515[ss:sp_248 - 2:word16] = Mem500[ds_505:0x29E1:word16]
	Mem518[ss:sp_248 - 4:word16] = Mem515[ds_505:0x29DF:word16]
	Mem523[ss:sp_248 - 6:word16] = 0x0000
	Mem525[ss:sp_248 - 8:word16] = 0x0000
	selector ds_530
	word16 dx_1615
	word16 di_1616
	fn0800_409C(ds_505, Mem525[ss:sp_248 - 8:word16], Mem525[ss:sp_248 - 6:word16], Mem525[ss:sp_248 - 4:word32], out dx_1615, out di_1616, out ds_530)
	Mem541[ss:sp_248 - 2:word16] = Mem525[ds_530:0x29E1:word16]
	Mem544[ss:sp_248 - 4:word16] = Mem541[ds_530:0x29DF:word16]
	Mem547[ss:sp_248 - 6:word16] = ax_353
	selector ds_552
	word16 dx_1617
	word16 di_1618
	fn0800_40BF(ds_530, Mem547[ss:sp_248 - 6:word16], Mem547[ss:sp_248 - 4:word32], out dx_1617, out di_1618, out ds_552)
	Mem563[ss:sp_248 - 2:word16] = Mem547[ds_552:0x29E1:word16]
	Mem566[ss:sp_248 - 4:word16] = Mem563[ds_552:0x29DF:word16]
	Mem569[ss:sp_248 - 6:word16] = ax_373
	selector ds_574
	word16 dx_1619
	word16 di_1620
	fn0800_40BF(ds_552, Mem569[ss:sp_248 - 6:word16], Mem569[ss:sp_248 - 4:word32], out dx_1619, out di_1620, out ds_574)
	Mem585[ss:sp_248 - 2:word16] = Mem569[ds_574:0x29E1:word16]
	Mem588[ss:sp_248 - 4:word16] = Mem585[ds_574:0x29DF:word16]
	Mem591[ss:sp_248 - 6:word16] = ax_453
	selector ds_596
	word16 dx_1621
	word16 di_1622
	fn0800_40BF(ds_574, Mem591[ss:sp_248 - 6:word16], Mem591[ss:sp_248 - 4:word32], out dx_1621, out di_1622, out ds_596)
	Mem607[ss:sp_248 - 2:word16] = Mem591[ds_596:0x29E1:word16]
	Mem610[ss:sp_248 - 4:word16] = Mem607[ds_596:0x29DF:word16]
	Mem613[ss:sp_248 - 6:word16] = ax_433
	selector ds_618
	word16 dx_1623
	word16 di_1624
	fn0800_40BF(ds_596, Mem613[ss:sp_248 - 6:word16], Mem613[ss:sp_248 - 4:word32], out dx_1623, out di_1624, out ds_618)
	Mem628[ss:sp_248 - 2:word16] = Mem613[ds_618:0x29E1:word16]
	Mem631[ss:sp_248 - 4:word16] = Mem628[ds_618:0x29DF:word16]
	Mem636[ss:sp_248 - 6:word16] = 0x0000
	selector ds_641
	word16 cx_1625
	word16 dx_1626
	word16 bx_1627
	word16 di_1628
	fn0800_401E(ds_618, Mem636[ss:sp_248 - 6:word16], Mem636[ss:sp_248 - 4:word32], out cx_1625, out dx_1626, out bx_1627, out di_1628, out ds_641)
	Mem652[ss:sp_248 - 2:word16] = Mem636[ds_641:0x29E1:word16]
	Mem655[ss:sp_248 - 4:word16] = Mem652[ds_641:0x29DF:word16]
	Mem658[ss:sp_248 - 6:word16] = ax_393
	selector ds_663
	word16 dx_1629
	word16 di_1630
	fn0800_40BF(ds_641, Mem658[ss:sp_248 - 6:word16], Mem658[ss:sp_248 - 4:word32], out dx_1629, out di_1630, out ds_663)
	Mem674[ss:sp_248 - 2:word16] = Mem658[ds_663:0x29E1:word16]
	Mem677[ss:sp_248 - 4:word16] = Mem674[ds_663:0x29DF:word16]
	Mem680[ss:sp_248 - 6:word16] = ax_413
	selector ds_685
	word16 dx_1631
	word16 di_1632
	fn0800_40BF(ds_663, Mem680[ss:sp_248 - 6:word16], Mem680[ss:sp_248 - 4:word32], out dx_1631, out di_1632, out ds_685)
	Mem696[ss:sp_248 - 2:word16] = Mem680[ds_685:0x29E1:word16]
	Mem699[ss:sp_248 - 4:word16] = Mem696[ds_685:0x29DF:word16]
	Mem702[ss:sp_248 - 6:word16] = 0x001E
	selector ds_707
	word16 dx_1633
	word16 di_1634
	fn0800_40BF(ds_685, Mem702[ss:sp_248 - 6:word16], Mem702[ss:sp_248 - 4:word32], out dx_1633, out di_1634, out ds_707)
	Mem718[ss:sp_248 - 2:word16] = Mem702[ds_707:0x29E1:word16]
	Mem721[ss:sp_248 - 4:word16] = Mem718[ds_707:0x29DF:word16]
	Mem724[ss:sp_248 - 6:word16] = ax_333
	selector ds_729
	word16 dx_1635
	word16 di_1636
	fn0800_40BF(ds_707, Mem724[ss:sp_248 - 6:word16], Mem724[ss:sp_248 - 4:word32], out dx_1635, out di_1636, out ds_729)
	Mem739[ss:sp_248 - 2:word16] = Mem724[ds_729:0x29E1:word16]
	Mem742[ss:sp_248 - 4:word16] = Mem739[ds_729:0x29DF:word16]
	Mem747[ss:sp_248 - 6:word16] = 0x0000
	word16 cx_1637
	word16 dx_1638
	word16 bx_1639
	word16 di_1640
	selector ds_1011
	fn0800_401E(ds_729, Mem747[ss:sp_248 - 6:word16], Mem747[ss:sp_248 - 4:word32], out cx_1637, out dx_1638, out bx_1639, out di_1640, out ds_1011)
	Mem762[ss:sp_248 - 2:word16] = 0x0000
	Mem769[ss:sp_248 - 4:word16] = 0x0000
	Mem771[ss:sp_248 - 6:word16] = ax_313 + 0x0020
	Mem774[ss:sp_248 - 8:word16] = Mem771[ds_1011:0x29E5:word16]
	Mem777[ss:sp_248 - 10:word16] = Mem774[ds_1011:0x29E3:word16]
	word16 cx_1641
	word16 dx_1642
	word16 bx_1643
	fn0800_ACB3(ds_1011, Mem777[ss:sp_248 - 10:segptr32], Mem777[ss:sp_248 - 6:ui32], Mem777[ss:sp_248 - 2:word16], out cx_1641, out dx_1642, out bx_1643)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49B5:
	Mem796[ss:sp_248 - 2:word16] = Mem791[ds_1011:0x29E5:word16]
	Mem799[ss:sp_248 - 4:word16] = Mem796[ds_1011:0x29E3:word16]
	byte ch_1651
	word16 dx_1652
	word16 di_1653
	word16 ax_800 = fn0800_3DCF(ds_1011, Mem799[ss:sp_248 - 4:segptr32], out ch_1651, out dx_1652, out di_1653, out ds_1011)
	word16 di_814 = ax_800
	branch ax_800 == 0x0000 l0800_4A22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49CB:
	Mem820[ss:sp_248 - 2:word16] = Mem799[ds_1011:0x29E5:word16]
	Mem823[ss:sp_248 - 4:word16] = Mem820[ds_1011:0x29E3:word16]
	byte ch_1644
	word16 ax_824 = fn0800_3FAD(ds_1011, Mem823[ss:sp_248 - 4:word32], out ch_1644, out di_814, out ds_1011)
	word16 si_838 = 0x0000
	word16 wLoc0C_1446 = di_814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A15:
	wLoc0C_1446 = wLoc0C_1446 - 0x0001
	branch wLoc0C_1446 != 0x0000 l0800_49E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49E3:
	Mem856[ss:sp_248 - 2:word16] = Mem847[ds_1011:0x29E5:word16]
	Mem859[ss:sp_248 - 4:word16] = Mem856[ds_1011:0x29E3:word16]
	selector ds_866
	byte ch_1645
	word16 dx_1646
	word16 di_1647
	si_838 = si_838 + fn0800_3DCF(ds_1011, Mem859[ss:sp_248 - 4:segptr32], out ch_1645, out dx_1646, out di_1647, out ds_866)
	Mem878[ss:sp_248 - 2:word16] = Mem859[ds_866:0x29E1:word16]
	Mem881[ss:sp_248 - 4:word16] = Mem878[ds_866:0x29DF:word16]
	Mem883[ss:sp_248 - 6:word16] = si_838
	selector ds_888
	word16 dx_1648
	word16 di_1649
	fn0800_40BF(ds_866, Mem883[ss:sp_248 - 6:word16], Mem883[ss:sp_248 - 4:word32], out dx_1648, out di_1649, out ds_888)
	Mem899[ss:sp_248 - 2:word16] = Mem883[ds_888:0x29E1:word16]
	Mem902[ss:sp_248 - 4:word16] = Mem899[ds_888:0x29DF:word16]
	Mem905[ss:sp_248 - 6:word16] = ax_824
	word16 dx_1650
	fn0800_40BF(ds_888, Mem905[ss:sp_248 - 6:word16], Mem905[ss:sp_248 - 4:word32], out dx_1650, out di_814, out ds_1011)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A1F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A22:
	branch di_814 != 0x0000 l0800_49B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A26:
	word16 di_1003
	Mem934[ss:sp_248 - 2:word16] = Mem929[ds_1011:0x29E1:word16]
	Mem937[ss:sp_248 - 4:word16] = Mem934[ds_1011:0x29DF:word16]
	word16 dx_941
	word16 ax_938 = fn0800_AD2F(ds_1011, Mem937[ss:sp_248 - 4:segptr32], out dx_941)
	branch dx_941 > 0x0000 l0800_4A56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A38:
	branch dx_941 < 0x0000 l0800_4A3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A3A:
	branch ax_938 >=u 0x0200 l0800_4A56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A56:
	Mem960[ss:sp_248 - 2:word16] = Mem937[ds_1011:0x29E1:word16]
	Mem963[ss:sp_248 - 4:word16] = Mem960[ds_1011:0x29DF:word16]
	word16 dx_1654
	di_1003 = 0x0010 - fn0800_AD2F(ds_1011, Mem963[ss:sp_248 - 4:segptr32], out dx_1654) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A3F:
	Mem986[ss:sp_248 - 2:word16] = Mem937[ds_1011:0x29E1:word16]
	Mem989[ss:sp_248 - 4:word16] = Mem986[ds_1011:0x29DF:word16]
	word16 dx_1655
	di_1003 = 0x0200 - fn0800_AD2F(ds_1011, Mem989[ss:sp_248 - 4:segptr32], out dx_1655)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A81:
	byte ah_1023 = SLICE(di_1003, byte, 8)
	branch di_1003 != 0x0000 l0800_4A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A70:
	Mem1017[ss:sp_248 - 2:word16] = Mem1012[ds_1011:0x29E1:word16]
	Mem1020[ss:sp_248 - 4:word16] = Mem1017[ds_1011:0x29DF:word16]
	Mem1025[ss:sp_248 - 6:word16] = SEQ(ah_1023, 0x00)
	word16 cx_1656
	word16 dx_1657
	word16 bx_1658
	fn0800_4047(ds_1011, Mem1025[ss:sp_248 - 6:byte], Mem1025[ss:sp_248 - 4:segptr32], out cx_1656, out dx_1657, out bx_1658, out di_1003, out ds_1011)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A88:
	Mem1041[ss:sp_248 - 2:word16] = Mem1012[ds_1011:0x29E1:word16]
	Mem1044[ss:sp_248 - 4:word16] = Mem1041[ds_1011:0x29DF:word16]
	word16 dx_1048
	word16 dx_1659
	fn0800_8C8A(fn0800_AD2F(ds_1011, Mem1044[ss:sp_248 - 4:segptr32], out dx_1048), 0x04, dx_1048, out dx_1659)
	word16 sp_1061 = <invalid>
	Mem1075[ss:sp_1061 - 2:word16] = 0x0000
	Mem1078[ss:sp_1061 - 4:word16] = dx_152
	Mem1081[ss:sp_1061 - 6:word16] = ax_149
	Mem1084[ss:sp_1061 - 8:word16] = Mem1081[ds_1011:0x29E5:word16]
	Mem1087[ss:sp_1061 - 10:word16] = Mem1084[ds_1011:0x29E3:word16]
	word16 cx_1660
	word16 dx_1661
	word16 bx_1662
	fn0800_ACB3(ds_1011, Mem1087[ss:sp_1061 - 10:segptr32], Mem1087[ss:sp_1061 - 6:ui32], Mem1087[ss:sp_1061 - 2:word16], out cx_1660, out dx_1661, out bx_1662)
	word16 bp_1100
	selector ds_1104
	word16 dx_1663
	word16 di_1664
	word16 ax_1099 = fn0800_5374(ds_1011, out dx_1663, out bp_1100, out di_1664, out ds_1104)
	word16 sp_1108 = <invalid>
	branch ax_1099 == 0x0000 l0800_4AC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4AC4:
	Mem1120[ss:sp_1108 - 2:word16] = Mem1087[ds_1104:0x29E1:word16]
	Mem1123[ss:sp_1108 - 4:word16] = Mem1120[ds_1104:0x29DF:word16]
	word16 dx_1127
	word16 ax_1124 = fn0800_AD2F(ds_1104, Mem1123[ss:sp_1108 - 4:segptr32], out dx_1127)
	Mem1134[ss:bp_1100 - 0x0006:word16] = dx_1127
	Mem1135[ss:bp_1100 - 0x0008:word16] = ax_1124
	Mem1140[ss:sp_1108 - 2:word16] = 0x0000
	Mem1143[ss:sp_1108 - 4:word16] = Mem1140[ss:bp_1100 - 0x0002:word16]
	Mem1146[ss:sp_1108 - 6:word16] = Mem1143[ss:bp_1100 - 0x0004:word16]
	Mem1149[ss:sp_1108 - 8:word16] = Mem1146[ds_1104:0x29E5:word16]
	Mem1152[ss:sp_1108 - 10:word16] = Mem1149[ds_1104:0x29E3:word16]
	word16 cx_1665
	word16 dx_1666
	word16 bx_1667
	fn0800_ACB3(ds_1104, Mem1152[ss:sp_1108 - 10:segptr32], Mem1152[ss:sp_1108 - 6:ui32], Mem1152[ss:sp_1108 - 2:word16], out cx_1665, out dx_1666, out bx_1667)
	Mem1166[ss:sp_1108 - 2:word16] = Mem1152[ds_1104:0x29E5:word16]
	Mem1169[ss:sp_1108 - 4:word16] = Mem1166[ds_1104:0x29E3:word16]
	fn0800_4194(ds_1104, Mem1169[ss:sp_1108 - 4:word32])
	ui32 dx_ax_1566 = <invalid>
	ui32 dx_ax_1405 = dx_ax_1566 - SEQ(Mem1169[ss:bp_1100 - 0x0002:word16], Mem1169[ss:bp_1100 - 0x0004:word16])
	Mem1184[ss:sp_1108 - 2:word16] = SLICE(dx_ax_1405, word16, 16)
	Mem1186[ss:sp_1108 - 4:word16] = (word16) dx_ax_1405
	Mem1189[ss:sp_1108 - 6:word16] = Mem1186[ds_1104:0x29E1:word16]
	Mem1192[ss:sp_1108 - 8:word16] = Mem1189[ds_1104:0x29DF:word16]
	Mem1195[ss:sp_1108 - 10:word16] = Mem1192[ds_1104:0x29E5:word16]
	Mem1198[ss:sp_1108 - 12:word16] = Mem1195[ds_1104:0x29E3:word16]
	word16 bp_1200
	selector ds_1204
	word16 dx_1668
	word16 si_1669
	word16 di_1670
	fn0800_3B0A(ds_1104, Mem1198[ss:sp_1108 - 4:word16], Mem1198[ss:sp_1108 - 2:word16], out dx_1668, out bp_1200, out si_1669, out di_1670, out ds_1204)
	word16 di_1214 = Mem1198[ss:bp_1200 - 0x0008:word16]
	word16 dx_1671
	Mem1230[ss:bp_1200 - 0x000A:word16] = fn0800_8CAA(Mem1198[ss:bp_1200 - 0x0008:word16], 0x09, Mem1198[ss:bp_1200 - 0x0006:word16], out dx_1671)
	word16 sp_1225 = <invalid>
	branch (di_1214 & 0x01FF) == 0x0000 l0800_4B37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B34:
	Mem1236[ss:bp_1200 - 0x000A:word16] = Mem1230[ss:bp_1200 - 0x000A:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B37:
	Mem1244[ss:sp_1225 - 2:word16] = 0x0000
	Mem1247[ss:sp_1225 - 4:word16] = 0x0000
	Mem1249[ss:sp_1225 - 6:word16] = 0x0002
	Mem1253[ss:sp_1225 - 8:word16] = Mem1249[ds_1204:0x29E1:word16]
	Mem1256[ss:sp_1225 - 10:word16] = Mem1253[ds_1204:0x29DF:word16]
	word16 cx_1672
	word16 dx_1673
	word16 bx_1674
	fn0800_ACB3(ds_1204, Mem1256[ss:sp_1225 - 10:segptr32], Mem1256[ss:sp_1225 - 6:ui32], Mem1256[ss:sp_1225 - 2:word16], out cx_1672, out dx_1673, out bx_1674)
	Mem1270[ss:sp_1225 - 2:word16] = Mem1256[ds_1204:0x29E1:word16]
	Mem1273[ss:sp_1225 - 4:word16] = Mem1270[ds_1204:0x29DF:word16]
	Mem1276[ss:sp_1225 - 6:word16] = di_1214 & 0x01FF
	selector ds_1281
	word16 dx_1675
	word16 di_1676
	fn0800_40BF(ds_1204, Mem1276[ss:sp_1225 - 6:word16], Mem1276[ss:sp_1225 - 4:word32], out dx_1675, out di_1676, out ds_1281)
	Mem1292[ss:sp_1225 - 2:word16] = Mem1276[ds_1281:0x29E1:word16]
	Mem1295[ss:sp_1225 - 4:word16] = Mem1292[ds_1281:0x29DF:word16]
	Mem1299[ss:sp_1225 - 6:word16] = Mem1295[ss:bp_1200 - 0x000A:word16]
	selector ds_1304
	word16 dx_1677
	word16 di_1678
	fn0800_40BF(ds_1281, Mem1299[ss:sp_1225 - 6:word16], Mem1299[ss:sp_1225 - 4:word32], out dx_1677, out di_1678, out ds_1304)
	Mem1315[ss:sp_1225 - 2:word16] = Mem1299[ds_1304:0x29E1:word16]
	Mem1318[ss:sp_1225 - 4:word16] = Mem1315[ds_1304:0x29DF:word16]
	Mem1321[ss:sp_1225 - 6:word16] = Mem1318[ss:bp_1200 - 0x000C:word16]
	selector ds_1326
	word16 dx_1679
	word16 di_1680
	fn0800_40BF(ds_1304, Mem1321[ss:sp_1225 - 6:word16], Mem1321[ss:sp_1225 - 4:word32], out dx_1679, out di_1680, out ds_1326)
	Mem1337[ss:sp_1225 - 2:word16] = Mem1321[ds_1326:0x29E1:word16]
	Mem1340[ss:sp_1225 - 4:word16] = Mem1337[ds_1326:0x29DF:word16]
	Mem1343[ss:sp_1225 - 6:word16] = Mem1340[ss:bp_1200 - 0x000E:word16]
	selector ds_1348
	word16 dx_1349
	word16 di_1681
	fn0800_40BF(ds_1326, Mem1343[ss:sp_1225 - 6:word16], Mem1343[ss:sp_1225 - 4:word32], out dx_1349, out di_1681, out ds_1348)
	word16 di_1359 = Mem1343[ss:sp_1225:word16]
	word16 bp_1363 = Mem1343[ss:bp_1200:word16]
	dxOut = dx_1349
	bpOut = bp_1363
	diOut = di_1359
	dsOut = ds_1348
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4ABE:
	word16 di_1365 = Mem1087[ss:sp_1108:word16]
	word16 bp_1369 = Mem1087[ss:bp_1100:word16]
	dxOut = ax_1099
	bpOut = bp_1369
	diOut = di_1365
	dsOut = ds_1104
	return ax_1099
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4798:
	word16 di_1375 = Mem116[ss:sp_134:word16]
	dxOut = dx_133
	bpOut = bp
	diOut = di_1375
	dsOut = ds_120
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4758:
	dxOut = 0x0000
	bpOut = bp
	diOut = di
	dsOut = ds_62
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4716:
	dxOut = dx
	bpOut = bp
	diOut = di
	dsOut = ds
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_46FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4B97(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_4B97_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B97:
	word16 di_18
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, SEQ(Mem0[ds:0x29E5:word16], Mem9[ds:0x29E3:word16]), out dx_20, out di_18, out ds_19) != 0x0000 l0800_4BAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BAD:
	word16 bp_32
	word16 di_35
	selector ds_36
	word16 dx_37
	word16 ax_31 = fn0800_5374(ds_19, out dx_37, out bp_32, out di_35, out ds_36)
	dxOut = dx_37
	bpOut = bp_32
	diOut = di_35
	dsOut = ds_36
	return ax_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BA9:
	dxOut = dx_20
	bpOut = bp
	diOut = di_18
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4B97_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4BB1(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_4BB1_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BB1:
	word16 di_18
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, SEQ(Mem0[ds:0x29E5:word16], Mem9[ds:0x29E3:word16]), out dx_20, out di_18, out ds_19) != 0x0000 l0800_4BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BC7:
	word16 cx_262
	word16 dx_263
	word16 bx_264
	fn0800_ACB3(ds_19, SEQ(Mem39[ds_19:0x29E5:word16], Mem42[ds_19:0x29E3:word16]), 0xFFFFFFEE, 0x0001, out cx_262, out dx_263, out bx_264)
	selector ds_70
	word16 cx_265
	word16 dx_266
	word16 bx_267
	word16 di_268
	fn0800_401E(ds_19, 0x601A, SEQ(Mem45[ds_19:0x29E1:word16], Mem59[ds_19:0x29DF:word16]), out cx_265, out dx_266, out bx_267, out di_268, out ds_70)
	selector ds_103
	word16 dx_269
	word16 bp_270
	word16 si_271
	word16 di_272
	fn0800_3B0A(ds_70, 0x0010, 0x0000, out dx_269, out bp_270, out si_271, out di_272, out ds_103)
	word16 sp_107 = <invalid>
	Mem115[ss:sp_107 + 0x000A:word16] = Mem97[ds_103:0x29E1:word16]
	Mem118[ss:sp_107 + 0x0008:word16] = Mem115[ds_103:0x29DF:word16]
	Mem123[ss:sp_107 + 0x0006:word16] = 0x0000
	Mem125[ss:sp_107 + 0x0004:word16] = 0x0000
	selector ds_130
	word16 dx_273
	word16 di_274
	fn0800_409C(ds_103, Mem125[ss:sp_107 + 0x0004:word16], Mem125[ss:sp_107 + 0x0006:word16], Mem125[ss:sp_107 + 0x0008:word32], out dx_273, out di_274, out ds_130)
	Mem140[ss:sp_107 + 0x000A:word16] = Mem125[ds_130:0x29E1:word16]
	Mem143[ss:sp_107 + 0x0008:word16] = Mem140[ds_130:0x29DF:word16]
	Mem148[ss:sp_107 + 0x0006:word16] = 0x0000
	Mem150[ss:sp_107 + 0x0004:word16] = 0x0000
	selector ds_155
	word16 dx_275
	word16 di_276
	fn0800_409C(ds_130, Mem150[ss:sp_107 + 0x0004:word16], Mem150[ss:sp_107 + 0x0006:word16], Mem150[ss:sp_107 + 0x0008:word32], out dx_275, out di_276, out ds_155)
	Mem166[ss:sp_107 + 0x000A:word16] = Mem150[ds_155:0x29E1:word16]
	Mem169[ss:sp_107 + 0x0008:word16] = Mem166[ds_155:0x29DF:word16]
	Mem172[ss:sp_107 + 0x0006:word16] = Mem169[ds_155:0x29E5:word16]
	Mem175[ss:sp_107 + 0x0004:word16] = Mem172[ds_155:0x29E3:word16]
	selector ds_180
	word16 cx_277
	word16 dx_278
	word16 di_279
	Mem190[ss:sp_107 + 0x0006:word16] = fn0800_3E27(ds_155, Mem175[ss:sp_107 + 0x0004:word32], out cx_277, out dx_278, out di_279, out ds_180)
	selector ds_195
	word16 cx_280
	word16 dx_281
	word16 bx_282
	word16 di_283
	fn0800_401E(ds_180, Mem190[ss:sp_107 + 0x0006:word16], Mem190[ss:sp_107 + 0x0008:word32], out cx_280, out dx_281, out bx_282, out di_283, out ds_195)
	word16 bp_205
	word16 di_208
	selector ds_209
	word16 dx_210
	word16 ax_204 = fn0800_5374(ds_195, out dx_210, out bp_205, out di_208, out ds_209)
	dxOut = dx_210
	bpOut = bp_205
	diOut = di_208
	dsOut = ds_209
	return ax_204
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BC3:
	dxOut = dx_20
	bpOut = bp
	diOut = di_18
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4BB1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4C55(word16 ax, word16 bp, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es Top
// Preserved: sp
fn0800_4C55_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C55:
	word16 di_20
	selector ds_21
	word16 dx_22 = fn0800_3E5D(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out di_20, out ds_21)
	branch dx_22 != 0x0000 l0800_4C72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C6D:
	branch ax == 0x03F3 l0800_4C79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C79:
	word16 dx_906
	word16 di_907
	selector ds_106
	word16 ax_174 = fn0800_409C(ds_21, 0x03F3, 0x0000, SEQ(Mem17[ds_21:0x29E1:word16], Mem38[ds_21:0x29DF:word16]), out dx_906, out di_907, out ds_106)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C8E:
	selector ds_76
	word16 di_911
	word16 dx_77 = fn0800_3E5D(ds_106, SEQ(Mem64[ds_106:0x29E5:word16], Mem69[ds_106:0x29E3:word16]), out di_911, out ds_76)
	word16 dx_912
	word16 di_913
	fn0800_409C(ds_76, ax_174, dx_77, SEQ(Mem90[ds_76:0x29E1:word16], Mem93[ds_76:0x29DF:word16]), out dx_912, out di_913, out ds_106)
	word16 wLoc08_698 = dx_77
	word16 wLoc0A_699 = ax_174
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CDA:
	word16 v21_120 = wLoc0A_699 - 0x0001
	wLoc0A_699 = v21_120
	wLoc08_698 = wLoc08_698 - (v21_120 <u 0x0000)
	word16 ax_126 = wLoc0A_699 | wLoc08_698
	branch ax_126 != 0x0000 l0800_4CBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CBC:
	selector ds_147
	word16 di_908
	word16 dx_909
	word16 di_910
	fn0800_409C(ds_147, ax_126, fn0800_3E5D(ds_106, SEQ(Mem137[ds_106:0x29E5:word16], Mem140[ds_106:0x29E3:word16]), out di_908, out ds_147), SEQ(Mem125[ds_106:0x29E1:word16], Mem134[ds_106:0x29DF:word16]), out dx_909, out di_910, out ds_106)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CEC:
	ax_174 = ax_174 | dx_77
	branch ax_174 != 0x0000 l0800_4C8E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CF4:
	selector ds_193
	selector ds_214
	word16 di_916
	word16 dx_915
	word16 di_914
	word16 ax_210 = fn0800_409C(ds_193, ax_174 - 0x0001, fn0800_3E5D(ds_106, SEQ(Mem183[ds_106:0x29E5:word16], Mem186[ds_106:0x29E3:word16]), out di_914, out ds_193) - (ax_174 <u 0x0001), SEQ(Mem125[ds_106:0x29E1:word16], Mem180[ds_106:0x29DF:word16]), out dx_915, out di_916, out ds_214)
	selector ds_232
	word16 di_917
	word16 dx_233 = fn0800_3E5D(ds_214, SEQ(Mem209[ds_214:0x29E5:word16], Mem225[ds_214:0x29E3:word16]), out di_917, out ds_232)
	selector ds_252
	word16 di_918
	word16 dx_253 = fn0800_3E5D(ds_232, SEQ(Mem242[ds_232:0x29E5:word16], Mem245[ds_232:0x29E3:word16]), out di_918, out ds_252)
	selector ds_287
	word16 di_920
	word16 dx_919
	fn0800_409C(ds_252, ax_210, dx_233, SEQ(Mem270[ds_252:0x29E1:word16], Mem273[ds_252:0x29DF:word16]), out dx_919, out di_920, out ds_287)
	word16 di_922
	word16 dx_921
	selector ds_316
	fn0800_409C(ds_287, ax_210 - 0x0001, dx_253 - (ax_210 <u 0x0001), SEQ(Mem282[ds_287:0x29E1:word16], Mem297[ds_287:0x29DF:word16]), out dx_921, out di_922, out ds_316)
	word16 dx_334
	word16 ax_331 = fn0800_AD2F(ds_316, SEQ(Mem311[ds_316:0x29E1:word16], Mem327[ds_316:0x29DF:word16]), out dx_334)
	Mem341[ds_316:0x4E8E:word16] = dx_334
	Mem342[ds_316:0x4E8C:word16] = ax_331
	word16 dx_924
	word16 bx_925
	word16 cx_923
	fn0800_ACB3(ds_316, SEQ(Mem353[ds_316:0x29E5:word16], Mem356[ds_316:0x29E3:word16]), 0x00000004, 0x0001, out cx_923, out dx_924, out bx_925)
	ui32 ax_dx_685 = SEQ(dx_253, ax_210) - SEQ(dx_233, ax_210)
	word16 ax_267 = SLICE(ax_dx_685, word16, 16)
	word16 dx_264 = (word16) ax_dx_685
	word16 wLoc04_761 = ax_267
	word16 wLoc06_762 = dx_264
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DE4:
	word16 ax_379 = wLoc06_762 | wLoc04_761
	branch ax_379 != 0x0000 l0800_4DBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DBE:
	selector ds_400
	word16 di_928
	word16 di_926
	word16 dx_927
	fn0800_409C(ds_400, ax_379, fn0800_3E5D(ds_316, SEQ(Mem390[ds_316:0x29E5:word16], Mem393[ds_316:0x29E3:word16]), out di_926, out ds_400), SEQ(Mem377[ds_316:0x29E1:word16], Mem387[ds_316:0x29DF:word16]), out dx_927, out di_928, out ds_316)
	word16 v56_425 = wLoc06_762 - 0x0001
	wLoc06_762 = v56_425
	wLoc04_761 = wLoc04_761 - (v56_425 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DEC:
	word16 v45_443 = Mem442[ds_316:0x29E5:word16]
	word16 v46_446 = Mem445[ds_316:0x29E3:word16]
	word16 cx_929
	word16 dx_930
	word16 bx_931
	word16 ax_449 = fn0800_ACB3(ds_316, SEQ(v45_443, v46_446), 0x00000004, 0x0001, out cx_929, out dx_930, out bx_931)
	word16 v48_463 = Mem462[ds_316:0x29E3:word16]
	word16 di_468
	selector ds_469
	word16 dx_480 = fn0800_3E5D(ds_316, SEQ(Mem448[ds_316:0x29E5:word16], v48_463), out di_468, out ds_469) + (ax_449 <u 0x0001)
	word16 dx_493
	byte cl_932
	word16 ax_490 = fn0800_8C69(ax_449 + 0x0001, 0x02, dx_480, out cl_932, out dx_493)
	word16 sp_494 = <invalid>
	Mem500[ss:sp_494 - 2:word16] = dx_493
	Mem502[ss:sp_494 - 4:word16] = ax_490
	Mem505[ss:sp_494 - 6:word16] = Mem502[ds_469:0x29E5:word16]
	Mem508[ss:sp_494 - 8:word16] = Mem505[ds_469:0x29E3:word16]
	word16 cx_933
	word16 dx_934
	word16 bx_935
	fn0800_ACB3(ds_469, Mem508[ss:sp_494 - 8:segptr32], Mem508[ss:sp_494 - 4:ui32], Mem508[ss:sp_494:word16], out cx_933, out dx_934, out bx_935)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4EDE:
	Mem522[ss:sp_494:word16] = Mem508[ds_469:0x29E5:word16]
	Mem525[ss:sp_494 - 2:word16] = Mem522[ds_469:0x29E3:word16]
	word16 dx_529
	word16 ax_526 = fn0800_AD2F(ds_469, Mem525[ss:sp_494 - 2:segptr32], out dx_529)
	Mem538[ss:sp_494:word16] = ax_526
	Mem540[ss:sp_494 - 2:word16] = dx_529
	Mem543[ss:sp_494 - 4:word16] = Mem540[ds_469:0x29E5:word16]
	Mem546[ss:sp_494 - 6:word16] = Mem543[ds_469:0x29E3:word16]
	fn0800_4194(ds_469, Mem546[ss:sp_494 - 6:word32])
	word16 bx_555 = Mem546[ss:sp_494 - 0x0002:word16]
	word16 dx_558 = Mem546[ss:sp_494:word16]
	branch bx_555 >=u dx_529 l0800_4F05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F05:
	branch bx_555 != dx_529 l0800_4F0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F07:
	branch dx_558 >=u ax_526 l0800_4F0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F0E:
	dxOut = dx_558
	bpOut = bp
	diOut = di_468
	dsOut = ds_469
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F0B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F02:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E41:
	Mem579[ss:sp_494:word16] = Mem546[ds_469:0x29E5:word16]
	Mem582[ss:sp_494 - 2:word16] = Mem579[ds_469:0x29E3:word16]
	selector ds_586
	word16 di_936
	word16 dx_587 = fn0800_3E5D(ds_469, Mem582[ss:sp_494 - 2:word32], out di_936, out ds_586)
	Mem601[ss:sp_494:word16] = Mem598[ds_586:0x29E1:word16]
	Mem604[ss:sp_494 - 2:word16] = Mem601[ds_586:0x29DF:word16]
	Mem607[ss:sp_494 - 4:word16] = dx_587
	Mem609[ss:sp_494 - 6:word16] = ax_526
	word16 di_613
	selector ds_614
	word16 dx_937
	fn0800_409C(ds_586, Mem609[ss:sp_494 - 6:word16], Mem609[ss:sp_494 - 4:word16], Mem609[ss:sp_494 - 2:word32], out dx_937, out di_613, out ds_614)
	word16 cx_629 = 0x0004
	word16 bx_630 = 0x4F14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E7C:
	branch Mem628[0x0800:bx_630:word16] != ax_526 l0800_4E8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E84:
	word16 ax_638 = Mem628[0x0800:bx_630 + 0x0008:word16]
	branch ax_638 == (dx_587 & 0x3FFF) l0800_4E94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E94:
	word16 dx_645
	word16 ax_646
	call Mem628[0x0800:bx_630 + 0x0010:word16] (retsize: 2;)
		uses: ax:ax_638,bx:bx_631,cx:cx_647,dx:ax_526,sp:sp_494 + 0x0002,Stack +0000:bp,Stack +FFFFFFDE:v46_446,Stack +FFFFFFE0:v45_443,Stack +FFFFFFE2:0x0004,Stack +FFFFFFE4:v48_463,Stack +FFFFFFE6:0x0001,Stack +FFFFFFE8:ax_526,Stack +FFFFFFEA:dx_587 & 0x3FFF,Stack +FFFFFFEC:dx_264,Stack +FFFFFFEE:ax_267,Stack +FFFFFFF0:ax_210,Stack +FFFFFFF2:dx_253,Stack +FFFFFFF4:ax_210,Stack +FFFFFFF6:dx_233,Stack +FFFFFFF8:ax_526,Stack +FFFFFFFA:dx_587,Stack +FFFFFFFC:ax_449 + 0x0001,Stack +FFFFFFFE:dx_480,Top:0
		defs: ax:ax_646,dx:dx_645
	dxOut = dx_645
	bpOut = fp - 2
	diOut = di_613
	dsOut = ds_614
	return ax_646
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E8D:
	bx_630 = bx_630 + 0x0002
	cx_629 = cx_629 - 0x0001
	branch cx_629 != 0x0000 l0800_4E7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E92:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4ED7:
	dxOut = ax_526
	bpOut = bp
	diOut = di_613
	dsOut = ds_614
	return 0x0009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C72:
	dxOut = dx_22
	bpOut = bp
	diOut = di_20
	dsOut = ds_21
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4C55_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4F2C(word16 ax, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_4F2C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F2C:
	word16 dx_35
	word16 di_769
	byte cl_770
	selector ds_101
	word16 ax_32 = fn0800_8C69(ax, 0x02, fn0800_3E5D(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out di_769, out ds_101), out cl_770, out dx_35)
	word16 sp_36 = <invalid>
	Mem45[ss:sp_36 - 2:word16] = Mem42[ds_101:0x29E5:word16]
	Mem48[ss:sp_36 - 4:word16] = Mem45[ds_101:0x29E3:word16]
	word16 dx_52
	word16 ax_49 = fn0800_AD2F(ds_101, Mem48[ss:sp_36 - 4:segptr32], out dx_52)
	branch dx_35 <u 0x0000 l0800_4F95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F65:
	branch dx_35 >u 0x0000 l0800_4F6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F67:
	branch ax_32 <=u 0x0012 l0800_4F95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F6D:
	Mem72[ss:sp_36 - 2:word16] = Mem60[ds_101:0x29E5:word16]
	Mem75[ss:sp_36 - 4:word16] = Mem72[ds_101:0x29E3:word16]
	selector ds_79
	word16 di_772
	wLoc16 = fn0800_3E5D(ds_101, Mem75[ss:sp_36 - 4:word32], out di_772, out ds_79)
	Mem94[ss:sp_36 - 2:word16] = Mem91[ds_79:0x29E5:word16]
	Mem97[ss:sp_36 - 4:word16] = Mem94[ds_79:0x29E3:word16]
	wLoc18 = ax_49
	word16 di_773
	wLoc0E = fn0800_3E5D(ds_79, Mem97[ss:sp_36 - 4:word32], out di_773, out ds_101)
	wLoc10 = ax_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F95:
	Mem118[ss:sp_36 - 2:word16] = Mem113[ds_101:0x29E5:word16]
	Mem121[ss:sp_36 - 4:word16] = Mem118[ds_101:0x29E3:word16]
	selector ds_125
	word16 dx_139
	word16 di_771
	word16 ax_136 = fn0800_8CAA(ax_49, 0x08, fn0800_3F58(ds_101, Mem121[ss:sp_36 - 4:word32], out di_771, out ds_125), out dx_139)
	word16 sp_140 = <invalid>
	branch dx_139 != 0x0052 l0800_4FB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FAD:
	branch ax_136 != 0x4E43 l0800_4FB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FB5:
	Mem155[ss:sp_140 - 2:word16] = Mem121[ds_125:0x29E1:word16]
	Mem158[ss:sp_140 - 4:word16] = Mem155[ds_125:0x29DF:word16]
	word16 dx_167
	word16 ax_164 = fn0800_8CAA(ax_32, 0x02, dx_35, out dx_167)
	word16 sp_168 = <invalid>
	Mem174[ss:sp_168 - 2:word16] = dx_167
	Mem176[ss:sp_168 - 4:word16] = ax_164
	selector ds_181
	word16 di_775
	word16 dx_774
	fn0800_409C(ds_125, Mem176[ss:sp_168 - 4:word16], Mem176[ss:sp_168 - 2:word16], Mem176[ss:sp_168:word32], out dx_774, out di_775, out ds_181)
	Mem193[ss:sp_168 + 0x0002:word16] = 0x0000
	Mem196[ss:sp_168:word16] = dx_52
	Mem199[ss:sp_168 - 2:word16] = ax_49
	Mem202[ss:sp_168 - 4:word16] = Mem199[ds_181:0x29E5:word16]
	Mem205[ss:sp_168 - 6:word16] = Mem202[ds_181:0x29E3:word16]
	word16 bx_778
	word16 dx_777
	word16 cx_776
	fn0800_ACB3(ds_181, Mem205[ss:sp_168 - 6:segptr32], Mem205[ss:sp_168 - 2:ui32], Mem205[ss:sp_168 + 2:word16], out cx_776, out dx_777, out bx_778)
	Mem219[ss:sp_168 + 0x0002:word16] = dx_35
	Mem222[ss:sp_168:word16] = ax_32
	Mem225[ss:sp_168 - 2:word16] = Mem222[ds_181:0x29E1:word16]
	Mem228[ss:sp_168 - 4:word16] = Mem225[ds_181:0x29DF:word16]
	Mem231[ss:sp_168 - 6:word16] = Mem228[ds_181:0x29E5:word16]
	Mem234[ss:sp_168 - 8:word16] = Mem231[ds_181:0x29E3:word16]
	word16 sp_244 = <invalid>
	word16 di_780
	word16 si_243
	word16 dx_779
	word16 bp_236
	selector ds_240
	word16 ax_235 = fn0800_3B0A(ds_181, Mem234[ss:sp_168:word16], Mem234[ss:sp_168 + 2:word16], out dx_779, out bp_236, out si_243, out di_780, out ds_240)
	word16 sp_249 = sp_244 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50BC:
	word16 sp_255 = sp_249 - 2
	Mem257[ss:sp_255:word16] = Mem252[ds_240:0x29E5:word16]
	Mem260[ss:sp_255 - 2:word16] = Mem257[ds_240:0x29E3:word16]
	selector ds_264
	word16 di_796
	branch fn0800_3F58(ds_240, Mem260[ss:sp_255 - 2:word32], out di_796, out ds_264) != 0x0000 l0800_50D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50CE:
	branch ax_235 != 0x03EC l0800_50D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50D6:
	word16 v58_281 = Mem260[ds_264:0x4E8C:word16] + 0x0004
	Mem282[ds_264:0x4E8C:word16] = v58_281
	Mem286[ds_264:0x4E8E:word16] = Mem282[ds_264:0x4E8E:word16] + (v58_281 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50D3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5006:
	Mem298[ss:sp_255:word16] = 0x0001
	Mem304[ss:sp_255 - 2:word16] = 0x0000
	Mem306[ss:sp_255 - 4:word16] = 0x0004
	Mem309[ss:sp_255 - 6:word16] = Mem306[ds_264:0x29E5:word16]
	Mem312[ss:sp_255 - 8:word16] = Mem309[ds_264:0x29E3:word16]
	word16 cx_797
	word16 dx_798
	word16 bx_799
	fn0800_ACB3(ds_264, Mem312[ss:sp_255 - 8:segptr32], Mem312[ss:sp_255 - 4:ui32], Mem312[ss:sp_255:word16], out cx_797, out dx_798, out bx_799)
	Mem325[ss:sp_255:word16] = Mem312[ds_264:0x29E1:word16]
	Mem328[ss:sp_255 - 2:word16] = Mem325[ds_264:0x29DF:word16]
	Mem334[ss:sp_255 - 4:word16] = 0x0000
	Mem336[ss:sp_255 - 6:word16] = 0x03EC
	word16 dx_800
	word16 di_801
	ax_235 = fn0800_409C(ds_264, Mem336[ss:sp_255 - 6:word16], Mem336[ss:sp_255 - 4:word16], Mem336[ss:sp_255 - 2:word32], out dx_800, out di_801, out ds_240)
	sp_249 = sp_255 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5034:
	word16 sp_354 = sp_249 - 2
	Mem356[ss:sp_354:word16] = Mem351[ds_240:0x29E5:word16]
	Mem359[ss:sp_354 - 2:word16] = Mem356[ds_240:0x29E3:word16]
	selector ds_363
	word16 di_809
	Mem373[ss:bp_236 - 0x0004:word16] = fn0800_3E5D(ds_240, Mem359[ss:sp_354 - 2:word32], out di_809, out ds_363)
	Mem375[ss:bp_236 - 0x0006:word16] = ax_235
	Mem378[ss:sp_354:word16] = Mem375[ds_363:0x29E1:word16]
	Mem381[ss:sp_354 - 2:word16] = Mem378[ds_363:0x29DF:word16]
	Mem384[ss:sp_354 - 4:word16] = Mem381[ss:bp_236 - 0x0004:word16]
	Mem386[ss:sp_354 - 6:word16] = ax_235
	word16 dx_810
	word16 di_811
	fn0800_409C(ds_363, Mem386[ss:sp_354 - 6:word16], Mem386[ss:sp_354 - 4:word16], Mem386[ss:sp_354 - 2:word32], out dx_810, out di_811, out ds_240)
	sp_249 = sp_354 + 0x0002
	word16 ax_400 = Mem386[ss:bp_236 - 0x0006:word16] | Mem386[ss:bp_236 - 0x0004:word16]
	branch ax_400 == 0x0000 l0800_50B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5062:
	Mem406[ss:sp_354:word16] = Mem386[ds_240:0x29E5:word16]
	Mem409[ss:sp_354 - 0x0002:word16] = Mem406[ds_240:0x29E3:word16]
	selector ds_413
	word16 di_802
	Mem426[ss:bp_236 - 0x0008:word16] = fn0800_3E5D(ds_240, Mem409[ss:sp_354 - 0x0002:word32], out di_802, out ds_413) - (ax_400 <u 0x0001)
	Mem427[ss:bp_236 - 0x000A:word16] = ax_400 - 0x0001
	Mem430[ss:sp_354:word16] = Mem427[ds_413:0x29E1:word16]
	Mem433[ss:sp_354 - 0x0002:word16] = Mem430[ds_413:0x29DF:word16]
	Mem436[ss:sp_354 - 0x0004:word16] = Mem433[ss:bp_236 - 0x0008:word16]
	Mem438[ss:sp_354 - 6:word16] = ax_400 - 0x0001
	selector ds_443
	word16 dx_803
	word16 di_804
	fn0800_409C(ds_413, Mem438[ss:sp_354 - 6:word16], Mem438[ss:sp_354 - 4:word16], Mem438[ss:sp_354 - 2:word32], out dx_803, out di_804, out ds_443)
	word16 dx_458
	byte cl_805
	word16 ax_455 = fn0800_8C69(Mem438[ss:bp_236 - 0x0006:word16], 0x02, Mem438[ss:bp_236 - 0x0004:word16], out cl_805, out dx_458)
	word16 sp_459 = <invalid>
	Mem465[ss:sp_459 - 2:word16] = dx_458
	Mem467[ss:sp_459 - 4:word16] = ax_455
	Mem470[ss:sp_459 - 6:word16] = Mem467[ds_443:0x29E1:word16]
	Mem473[ss:sp_459 - 8:word16] = Mem470[ds_443:0x29DF:word16]
	Mem476[ss:sp_459 - 10:word16] = Mem473[ds_443:0x29E5:word16]
	Mem479[ss:sp_459 - 12:word16] = Mem476[ds_443:0x29E3:word16]
	word16 dx_806
	word16 si_807
	word16 di_808
	fn0800_3B0A(ds_443, Mem479[ss:sp_459 - 4:word16], Mem479[ss:sp_459 - 2:word16], out dx_806, out bp_236, out si_807, out di_808, out ds_240)
	word16 sp_489 = <invalid>
	sp_249 = sp_489 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50B1:
	ax_235 = Mem498[ss:bp_236 - 0x0006:word16] | Mem498[ss:bp_236 - 0x0004:word16]
	branch ax_235 == 0x0000 l0800_50BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FB2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50E6:
	Mem506[ss:sp_140 - 2:word16] = Mem121[ds_125:0x29E1:word16]
	Mem509[ss:sp_140 - 4:word16] = Mem506[ds_125:0x29DF:word16]
	word16 dx_516
	word16 ax_513 = fn0800_8CAA(wLoc18, 0x02, wLoc16, out dx_516)
	word16 sp_517 = <invalid>
	Mem523[ss:sp_517 - 2:word16] = dx_516
	Mem525[ss:sp_517 - 4:word16] = ax_513
	word16 di_782
	word16 dx_781
	selector ds_530
	fn0800_409C(ds_125, Mem525[ss:sp_517 - 4:word16], Mem525[ss:sp_517 - 2:word16], Mem525[ss:sp_517:word32], out dx_781, out di_782, out ds_530)
	Mem541[ss:sp_517 + 0x0002:word16] = Mem525[ds_530:0x29E1:word16]
	Mem544[ss:sp_517:word16] = Mem541[ds_530:0x29DF:word16]
	word16 dx_548
	word16 ax_545 = fn0800_AD2F(ds_530, Mem544[ss:sp_517:segptr32], out dx_548)
	Mem561[ss:sp_517 + 0x0002:word16] = 0x0000
	Mem564[ss:sp_517:word16] = Mem561[ds_530:0x4E8E:word16]
	Mem567[ss:sp_517 - 2:word16] = Mem564[ds_530:0x4E8C:word16]
	Mem570[ss:sp_517 - 4:word16] = Mem567[ds_530:0x29E1:word16]
	Mem573[ss:sp_517 - 6:word16] = Mem570[ds_530:0x29DF:word16]
	word16 cx_783
	word16 dx_784
	word16 bx_785
	fn0800_ACB3(ds_530, Mem573[ss:sp_517 - 6:segptr32], Mem573[ss:sp_517 - 2:ui32], Mem573[ss:sp_517 + 2:word16], out cx_783, out dx_784, out bx_785)
	Mem587[ss:sp_517 + 0x0002:word16] = Mem573[ds_530:0x29E1:word16]
	Mem590[ss:sp_517:word16] = Mem587[ds_530:0x29DF:word16]
	Mem593[ss:sp_517 - 2:word16] = wLoc0E
	Mem596[ss:sp_517 - 4:word16] = wLoc10
	selector ds_601
	word16 dx_786
	word16 di_787
	fn0800_409C(ds_530, Mem596[ss:sp_517 - 4:word16], Mem596[ss:sp_517 - 2:word16], Mem596[ss:sp_517:word32], out dx_786, out di_787, out ds_601)
	word16 v48_609 = Mem596[ds_601:0x4E8C:word16] + 0x0004
	Mem610[ds_601:0x4E8C:word16] = v48_609
	Mem614[ds_601:0x4E8E:word16] = Mem610[ds_601:0x4E8E:word16] + (v48_609 <u 0x0000)
	Mem619[ss:sp_517 + 0x0002:word16] = 0x0000
	Mem622[ss:sp_517:word16] = dx_548
	Mem625[ss:sp_517 - 2:word16] = ax_545
	Mem628[ss:sp_517 - 4:word16] = Mem625[ds_601:0x29E1:word16]
	Mem631[ss:sp_517 - 6:word16] = Mem628[ds_601:0x29DF:word16]
	word16 cx_788
	word16 dx_789
	word16 bx_790
	fn0800_ACB3(ds_601, Mem631[ss:sp_517 - 6:segptr32], Mem631[ss:sp_517 - 2:ui32], Mem631[ss:sp_517 + 2:word16], out cx_788, out dx_789, out bx_790)
	word16 bp_644
	selector ds_648
	word16 dx_791
	word16 di_792
	Mem657[ss:bp_644 - 0x0002:word16] = fn0800_5374(ds_601, out dx_791, out bp_644, out di_792, out ds_648)
	word16 sp_652 = <invalid>
	Mem660[ss:sp_652 - 2:word16] = 0x0000
	ui32 ax_dx_696 = SEQ(Mem660[ss:bp_644 - 0x0018:word16], Mem660[ss:bp_644 - 0x001A:word16]) + SEQ(Mem660[ss:bp_644 - 0x0010:word16], Mem660[ss:bp_644 - 0x0012:word16])
	Mem669[ss:sp_652 - 4:word16] = SLICE(ax_dx_696, word16, 16)
	Mem671[ss:sp_652 - 6:word16] = (word16) ax_dx_696
	Mem674[ss:sp_652 - 8:word16] = Mem671[ds_648:0x29E5:word16]
	Mem677[ss:sp_652 - 10:word16] = Mem674[ds_648:0x29E3:word16]
	word16 cx_793
	word16 dx_794
	word16 bx_795
	fn0800_ACB3(ds_648, Mem677[ss:sp_652 - 10:segptr32], Mem677[ss:sp_652 - 6:ui32], Mem677[ss:sp_652 - 2:word16], out cx_793, out dx_794, out bx_795)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4F2C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_518F(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_518F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_518F:
	word16 di_18
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, SEQ(Mem0[ds:0x29E5:word16], Mem9[ds:0x29E3:word16]), out dx_20, out di_18, out ds_19) != 0x0000 l0800_51A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A5:
	word16 bp_32
	word16 di_35
	selector ds_36
	word16 dx_37
	word16 ax_31 = fn0800_5374(ds_19, out dx_37, out bp_32, out di_35, out ds_36)
	dxOut = dx_37
	bpOut = bp_32
	diOut = di_35
	dsOut = ds_36
	return ax_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A1:
	dxOut = dx_20
	bpOut = bp
	diOut = di_18
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_518F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_51A9(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_51A9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A9:
	word16 bp_282 = fp - 2
	word16 sp_11 = fp - 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_533D:
	word16 sp_18 = sp_11 - 2
	Mem20[ss:sp_18:word16] = Mem15[ds:0x29E5:word16]
	Mem23[ss:sp_18 - 2:word16] = Mem20[ds:0x29E3:word16]
	word16 dx_27
	word16 ax_24 = fn0800_AD2F(ds, Mem23[ss:sp_18 - 2:segptr32], out dx_27)
	Mem36[ss:sp_18:word16] = ax_24
	Mem38[ss:sp_18 - 2:word16] = dx_27
	Mem41[ss:sp_18 - 4:word16] = Mem38[ds:0x29E5:word16]
	Mem44[ss:sp_18 - 6:word16] = Mem41[ds:0x29E3:word16]
	fn0800_4194(ds, Mem44[ss:sp_18 - 6:word32])
	word16 bx_53 = Mem44[ss:sp_18 - 0x0002:word16]
	word16 dx_56 = Mem44[ss:sp_18:word16]
	branch bx_53 >=u dx_27 l0800_5364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5364:
	branch bx_53 != dx_27 l0800_536D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5366:
	branch dx_56 >=u ax_24 l0800_536D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_536D:
	word16 bp_72 = Mem44[ss:bp_282:word16]
	dxOut = dx_56
	bpOut = bp_72
	diOut = di
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_536A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5361:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51B3:
	Mem80[ss:sp_18:word16] = Mem44[ds:0x29E5:word16]
	Mem83[ss:sp_18 - 2:word16] = Mem80[ds:0x29E3:word16]
	word16 dx_87
	word16 ax_84 = fn0800_3E9A(ds, Mem83[ss:sp_18 - 2:segptr32], out dx_87, out di, out ds)
	branch ax_84 == 0x0000 l0800_51D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51D5:
	Mem102[ss:sp_18:word16] = Mem83[ds:0x29E1:word16]
	Mem105[ss:sp_18 - 2:word16] = Mem102[ds:0x29DF:word16]
	Mem108[ss:sp_18 - 4:word16] = Mem105[ds:0x29E5:word16]
	Mem111[ss:sp_18 - 6:word16] = Mem108[ds:0x29E3:word16]
	selector ds_118
	word16 di_581
	word16 dx_580
	byte ch_579
	Mem126[ss:sp_18 - 0x0004:word16] = fn0800_3DCF(ds, Mem111[ss:sp_18 - 6:segptr32], out ch_579, out dx_580, out di_581, out ds_118)
	word16 dx_583
	word16 bx_584
	word16 cx_582
	fn0800_4047(ds_118, Mem126[ss:sp_18 - 0x0004:byte], Mem126[ss:sp_18 - 0x0002:segptr32], out cx_582, out dx_583, out bx_584, out di, out ds)
	sp_11 = sp_18 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51C5:
	branch ax_84 == 0x0001 l0800_51F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51F5:
	Mem144[ss:sp_18:word16] = Mem83[ds:0x29E1:word16]
	Mem147[ss:sp_18 - 2:word16] = Mem144[ds:0x29DF:word16]
	Mem150[ss:sp_18 - 4:word16] = Mem147[ds:0x29E5:word16]
	Mem153[ss:sp_18 - 6:word16] = Mem150[ds:0x29E3:word16]
	selector ds_157
	word16 di_585
	Mem167[ss:sp_18 - 0x0004:word16] = fn0800_3E5D(ds, Mem153[ss:sp_18 - 6:word32], out di_585, out ds_157)
	Mem169[ss:sp_18 - 0x0006:word16] = ax_84
	selector ds_174
	word16 dx_586
	word16 di_587
	fn0800_409C(ds_157, Mem169[ss:sp_18 - 0x0006:word16], Mem169[ss:sp_18 - 0x0004:word16], Mem169[ss:sp_18 - 0x0002:word32], out dx_586, out di_587, out ds_174)
	Mem185[ss:sp_18:word16] = Mem169[ds_174:0x29E5:word16]
	Mem188[ss:sp_18 - 2:word16] = Mem185[ds_174:0x29E3:word16]
	selector ds_193
	byte ch_588
	word16 di_589
	word16 ax_189 = fn0800_3FAD(ds_174, Mem188[ss:sp_18 - 2:word32], out ch_588, out di_589, out ds_193)
	Mem203[ss:bp_282 - 0x0002:word16] = 0x0000
	Mem204[ss:bp_282 - 0x0004:word16] = ax_189
	Mem207[ss:sp_18:word16] = Mem204[ds_193:0x29E1:word16]
	Mem210[ss:sp_18 - 2:word16] = Mem207[ds_193:0x29DF:word16]
	Mem212[ss:sp_18 - 4:word16] = ax_189
	selector ds_217
	word16 dx_590
	word16 di_591
	word16 ax_213 = fn0800_40BF(ds_193, Mem212[ss:sp_18 - 4:word16], Mem212[ss:sp_18 - 2:word32], out dx_590, out di_591, out ds_217)
	Mem228[ss:sp_18:word16] = Mem212[ds_217:0x29E5:word16]
	Mem231[ss:sp_18 - 2:word16] = Mem228[ds_217:0x29E3:word16]
	selector ds_235
	word16 dx_248
	word16 di_592
	word16 ax_245 = fn0800_8CAA(ax_213, 0x08, fn0800_3F58(ds_217, Mem231[ss:sp_18 - 2:word32], out di_592, out ds_235), out dx_248)
	word16 sp_249 = <invalid>
	branch dx_248 != 0x0052 l0800_52BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5250:
	branch ax_245 != 0x4E43 l0800_52BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52BA:
	Mem264[ss:sp_249 - 2:word16] = Mem231[ss:bp_282 - 0x0002:word16]
	Mem267[ss:sp_249 - 4:word16] = Mem264[ss:bp_282 - 0x0004:word16]
	Mem271[ss:sp_249 - 6:word16] = Mem267[ds_235:0x29E1:word16]
	Mem274[ss:sp_249 - 8:word16] = Mem271[ds_235:0x29DF:word16]
	Mem277[ss:sp_249 - 10:word16] = Mem274[ds_235:0x29E5:word16]
	Mem280[ss:sp_249 - 12:word16] = Mem277[ds_235:0x29E3:word16]
	word16 dx_602
	word16 si_603
	fn0800_3B0A(ds_235, Mem280[ss:sp_249 - 4:word16], Mem280[ss:sp_249 - 2:word16], out dx_602, out bp_282, out si_603, out di, out ds)
	word16 sp_290 = <invalid>
	sp_11 = sp_290 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5255:
	word16 di_301
	selector ds_302
	word16 dx_303
	word16 ax_297 = fn0800_5374(ds_235, out dx_303, out bp_282, out di_301, out ds_302)
	word16 sp_306 = <invalid>
	branch ax_297 == 0x0000 l0800_5263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5263:
	Mem318[ss:sp_306 - 2:word16] = 0x0001
	word16 dx_320 = Mem318[ds_302:0x2A07:word16]
	word16 dx_326 = -(dx_320 + 0x0002)
	Mem331[ss:sp_306 - 4:word16] = -(Mem318[ds_302:0x2A09:word16] + (dx_320 <u 0x0002)) - (dx_326 == 0x0000)
	Mem333[ss:sp_306 - 6:word16] = dx_326
	Mem336[ss:sp_306 - 8:word16] = Mem333[ds_302:0x29E1:word16]
	Mem339[ss:sp_306 - 10:word16] = Mem336[ds_302:0x29DF:word16]
	word16 cx_604
	word16 dx_605
	word16 bx_606
	fn0800_ACB3(ds_302, Mem339[ss:sp_306 - 10:segptr32], Mem339[ss:sp_306 - 6:ui32], Mem339[ss:sp_306 - 2:word16], out cx_604, out dx_605, out bx_606)
	Mem353[ss:sp_306 - 2:word16] = Mem339[ds_302:0x29E1:word16]
	Mem356[ss:sp_306 - 4:word16] = Mem353[ds_302:0x29DF:word16]
	Mem359[ss:sp_306 - 6:word16] = Mem356[ds_302:0x2A07:word16]
	word16 dx_607
	fn0800_40BF(ds_302, Mem359[ss:sp_306 - 6:word16], Mem359[ss:sp_306 - 4:word32], out dx_607, out di, out ds)
	Mem375[ss:sp_306 - 2:word16] = 0x0001
	Mem378[ss:sp_306 - 4:word16] = Mem375[ds:0x2A09:word16]
	Mem381[ss:sp_306 - 6:word16] = Mem378[ds:0x2A07:word16]
	Mem384[ss:sp_306 - 8:word16] = Mem381[ds:0x29E1:word16]
	Mem387[ss:sp_306 - 10:word16] = Mem384[ds:0x29DF:word16]
	word16 cx_608
	word16 dx_609
	word16 bx_610
	fn0800_ACB3(ds, Mem387[ss:sp_306 - 10:segptr32], Mem387[ss:sp_306 - 6:ui32], Mem387[ss:sp_306 - 2:word16], out cx_608, out dx_609, out bx_610)
	sp_11 = sp_306
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_525E:
	word16 bp_401 = Mem231[ss:bp_282:word16]
	dxOut = dx_303
	bpOut = bp_401
	diOut = di_301
	dsOut = ds_302
	return ax_297
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_51A9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51CA:
	branch ax_84 != 0x0003 l0800_51D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51D2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5301:
	Mem407[ss:sp_18:word16] = Mem83[ds:0x29E5:word16]
	Mem410[ss:sp_18 - 2:word16] = Mem407[ds:0x29E3:word16]
	fn0800_4194(ds, Mem410[ss:sp_18 - 2:word32])
	Mem421[ss:sp_18:word16] = ax_84
	Mem423[ss:sp_18 - 2:word16] = dx_87
	Mem426[ss:sp_18 - 4:word16] = Mem423[ds:0x29E5:word16]
	Mem429[ss:sp_18 - 6:word16] = Mem426[ds:0x29E3:word16]
	word16 dx_593
	fn0800_AD2F(ds, Mem429[ss:sp_18 - 6:segptr32], out dx_593)
	ui32 dx_ax_574 = <invalid>
	ui32 bx_cx_537 = SEQ(Mem429[ss:sp_18 - 0x0002:word16], Mem429[ss:sp_18:word16]) - dx_ax_574
	Mem450[ss:sp_18:word16] = SLICE(bx_cx_537, word16, 16)
	Mem452[ss:sp_18 - 2:word16] = (word16) bx_cx_537
	Mem455[ss:sp_18 - 4:word16] = Mem452[ds:0x29E1:word16]
	Mem458[ss:sp_18 - 6:word16] = Mem455[ds:0x29DF:word16]
	Mem461[ss:sp_18 - 8:word16] = Mem458[ds:0x29E5:word16]
	Mem464[ss:sp_18 - 10:word16] = Mem461[ds:0x29E3:word16]
	word16 dx_594
	word16 si_595
	fn0800_3B0A(ds, Mem464[ss:sp_18 - 2:word16], Mem464[ss:sp_18:word16], out dx_594, out bp_282, out si_595, out di, out ds)
	word16 sp_474 = <invalid>
	sp_11 = sp_474 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52D8:
	word16 si_481 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52FA:
	branch si_481 != 0x0003 l0800_52DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52DC:
	word16 sp_491 = sp_11 - 2
	Mem493[ss:sp_491:word16] = Mem488[ds:0x29E1:word16]
	Mem496[ss:sp_491 - 2:word16] = Mem493[ds:0x29DF:word16]
	Mem499[ss:sp_491 - 4:word16] = Mem496[ds:0x29E5:word16]
	Mem502[ss:sp_491 - 6:word16] = Mem499[ds:0x29E3:word16]
	selector ds_509
	byte ch_596
	word16 dx_597
	word16 di_598
	Mem517[ss:sp_491 - 0x0004:word16] = fn0800_3DCF(ds, Mem502[ss:sp_491 - 6:segptr32], out ch_596, out dx_597, out di_598, out ds_509)
	word16 cx_599
	word16 dx_600
	word16 bx_601
	fn0800_4047(ds_509, Mem517[ss:sp_491 - 0x0004:byte], Mem517[ss:sp_491 - 0x0002:segptr32], out cx_599, out dx_600, out bx_601, out di, out ds)
	si_481 = si_481 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5374(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_5374_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5374:
	word16 dx_632
	word16 ax_21 = fn0800_AD2F(ds, SEQ(Mem13[ds:0x29E5:word16], Mem17[ds:0x29E3:word16]), out dx_632)
	selector ds_43
	word16 di_633
	fn0800_3E5D(ds, SEQ(Mem33[ds:0x29E5:word16], Mem36[ds:0x29E3:word16]), out di_633, out ds_43)
	Mem54[ds_43:0x2A21:word16] = ax_21 & 0x0003
	selector ds_64
	word16 di_634
	Mem72[ds_64:0x2A09:word16] = fn0800_3E5D(ds_43, SEQ(Mem54[ds_43:0x29E5:word16], Mem57[ds_43:0x29E3:word16]), out di_634, out ds_64)
	Mem73[ds_64:0x2A07:word16] = ax_21 & 0x0003
	branch Mem73[ds_64:0x2A21:word16] != 0x0000 l0800_53EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_53EF:
	selector ds_85
	word16 di_635
	Mem94[ds_85:0x2A05:word16] = fn0800_3E5D(ds_64, SEQ(Mem73[ds_64:0x29E5:word16], Mem78[ds_64:0x29E3:word16]), out di_635, out ds_85)
	Mem95[ds_85:0x2A03:word16] = ax_21 & 0x0003
	selector ds_106
	word16 cx_636
	word16 dx_637
	word16 di_638
	Mem115[ds_106:0x2E4B:word16] = fn0800_3E27(ds_85, SEQ(Mem95[ds_85:0x29E5:word16], Mem98[ds_85:0x29E3:word16]), out cx_636, out dx_637, out di_638, out ds_106)
	selector ds_126
	word16 cx_639
	word16 dx_640
	word16 di_641
	Mem135[ds_126:0x2E49:word16] = fn0800_3E27(ds_106, SEQ(Mem115[ds_106:0x29E5:word16], Mem118[ds_106:0x29E3:word16]), out cx_639, out dx_640, out di_641, out ds_126)
	selector ds_146
	word16 cx_642
	word16 dx_643
	word16 di_644
	fn0800_3E27(ds_126, SEQ(Mem135[ds_126:0x29E5:word16], Mem138[ds_126:0x29E3:word16]), out cx_642, out dx_643, out di_644, out ds_146)
	word16 sp_176 = <invalid>
	word16 bp_168
	word16 di_171
	selector ds_172
	word16 dx_173
	branch fn0800_2D0A(ds_146, out dx_173, out bp_168, out di_171, out ds_172) == Mem166[ds_172:0x2E49:word16] l0800_5458
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5458:
	Mem187[ss:sp_176 + 0x0006:word16] = 0x0001
	Mem189[ss:sp_176 + 0x0004:word16] = 0x000F
	word16 bp_191
	selector ds_195
	word16 dx_196
	word16 si_647
	word16 di_648
	word16 ax_190 = fn0800_4311(ds_172, Mem189[ss:sp_176 + 0x0004:word16], Mem189[ss:sp_176 + 0x0006:word16], out dx_196, out bp_191, out si_647, out di_648, out ds_195)
	Mem206[ss:bp_191 - 0x0006:word16] = dx_196
	Mem207[ss:bp_191 - 0x0008:word16] = ax_190
	Mem210[ds_195:0x2E73:word16] = dx_196 + 0x0001
	Mem211[ds_195:0x2E71:word16] = 0x0000
	word16 sp_199 = <invalid>
	Mem215[ss:sp_199 + 0x0002:word16] = 0x0001
	Mem217[ss:sp_199:word16] = 0x000F
	word16 bp_219
	selector ds_223
	word16 dx_224
	word16 si_649
	word16 di_650
	word16 ax_218 = fn0800_4311(ds_195, Mem217[ss:sp_199:word16], Mem217[ss:sp_199 + 2:word16], out dx_224, out bp_219, out si_649, out di_650, out ds_223)
	Mem233[ss:bp_219 - 0x0002:word16] = dx_224
	Mem234[ss:bp_219 - 0x0004:word16] = ax_218
	Mem236[ds_223:0x2E5B:word16] = dx_224 + 0x0001
	Mem237[ds_223:0x2E59:word16] = 0x0000
	word16 dx_239 = Mem237[ds_223:0x2E71:word16]
	Mem241[ds_223:0x2E6F:word16] = Mem237[ds_223:0x2E73:word16]
	Mem242[ds_223:0x2E6D:word16] = dx_239 + 0xFFFD
	word16 dx_245 = Mem242[ds_223:0x2E59:word16] + Mem242[ds_223:0x2E31:word16]
	Mem246[ds_223:0x2E57:word16] = Mem242[ds_223:0x2E5B:word16]
	Mem247[ds_223:0x2E55:word16] = dx_245
	Mem248[ds_223:0x2E4D:word16] = 0x0000
	Mem252[ds_223:0x2E45:word16] = 0x0000
	Mem253[ds_223:0x29FD:word16] = 0x0000
	Mem254[ds_223:0x29FB:word16] = 0x0000
	Mem255[ds_223:0x2A01:word16] = 0x0000
	Mem256[ds_223:0x29FF:word16] = 0x0000
	Mem258[ss:bp_219 - 0x000E:word16] = Mem256[ds_223:0x2E4F:word16]
	word16 sp_227 = <invalid>
	Mem261[ss:sp_227 + 0x0002:word16] = 0x0001
	word16 si_269
	selector ds_266
	word16 di_265
	branch fn0800_5C1A(ds_223, Mem261[ss:sp_227 + 0x0002:word16], out si_269, out di_265, out ds_266) == 0x0000 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_54F3:
	branch Mem261[ds_266:0x2A25:word16] == 0x0002 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_54FA:
	branch Mem261[ds_266:0x2A25:word16] == 0x0007 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5501:
	si_269 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5504:
	word16 si_285 = si_269
	branch si_269 != 0x0000 l0800_555D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5508:
	Mem293[ss:sp_227 + 0x0002:word16] = 0x0001
	branch fn0800_5C1A(ds_266, Mem293[ss:sp_227 + 0x0002:word16], out si_285, out di_265, out ds_266) == 0x0000 l0800_5557
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5557:
	Mem312[ds_266:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5516:
	branch Mem293[ds_266:0x2A23:word16] == 0x0001 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_551D:
	Mem317[ss:sp_227 + 0x0002:word16] = 0x0010
	word16 ax_318 = fn0800_5C1A(ds_266, Mem317[ss:sp_227 + 0x0002:word16], out si_285, out di_265, out ds_266)
	branch Mem317[ds_266:0x2A25:word16] != 0x0002 l0800_553B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5530:
	branch Mem317[ds_266:0x2E4F:word16] != 0x0000 l0800_553B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5537:
	Mem336[ds_266:0x2E4F:word16] = ax_318
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_553B:
	branch Mem338[ds_266:0x2E4F:word16] == ax_318 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5541:
	branch Mem338[ds_266:0x2E4F:word16] == 0x0000 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5548:
	si_285 = 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_554B:
	branch Mem346[ds_266:0x2E4F:word16] != 0x0000 l0800_555D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5552:
	si_285 = 0x000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_555D:
	word16 si_353 = si_285
	branch si_285 != 0x0000 l0800_557C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5561:
	word16 ax_360 = Mem358[ds_266:0x2A21:word16]
	branch ax_360 == 0x0001 l0800_5570
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5570:
	si_353 = fn0800_55E8(ds_266, out di_265, out ds_266)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5569:
	branch ax_360 == 0x0002 l0800_5577
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5577:
	si_353 = fn0800_579B(ds_266, out di_265, out ds_266)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_556E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_557C:
	Mem403[ds_266:0x2E4F:word16] = Mem358[ss:bp_219 - 0x000E:word16]
	Mem410[ss:sp_227 + 0x0002:word16] = Mem403[ss:bp_219 - 0x0006:word16]
	Mem413[ss:sp_227:word16] = Mem410[ss:bp_219 - 0x0008:word16]
	selector ds_417
	word16 cx_651
	word16 dx_652
	word16 bx_653
	fn0800_4346(ds_266, Mem413[ss:sp_227 + 0x0002:word16], out cx_651, out dx_652, out bx_653, out ds_417)
	Mem428[ss:sp_227 + 0x0002:word16] = Mem413[ss:bp_219 - 0x0002:word16]
	Mem431[ss:sp_227:word16] = Mem428[ss:bp_219 - 0x0004:word16]
	selector ds_435
	word16 cx_654
	word16 dx_655
	word16 bx_656
	fn0800_4346(ds_417, Mem431[ss:sp_227 + 0x0002:word16], out cx_654, out dx_655, out bx_656, out ds_435)
	word16 v40_443 = Mem431[ds_435:0x2A03:word16] + 0x0012
	Mem444[ds_435:0x2A03:word16] = v40_443
	Mem448[ds_435:0x2A05:word16] = Mem444[ds_435:0x2A05:word16] + (v40_443 <u 0x0000)
	Mem451[ss:sp_227 + 0x0002:word16] = 0x0000
	ui32 ax_dx_553 = SEQ(Mem451[ss:bp_219 - 0x000A:word16], Mem451[ss:bp_219 - 0x000C:word16]) + SEQ(Mem451[ds_435:0x2A05:word16], Mem451[ds_435:0x2A03:word16])
	Mem460[ss:sp_227:word16] = SLICE(ax_dx_553, word16, 16)
	Mem462[ss:sp_227 - 0x0002:word16] = (word16) ax_dx_553
	Mem465[ss:sp_227 - 0x0004:word16] = Mem462[ds_435:0x29E5:word16]
	Mem468[ss:sp_227 - 0x0006:word16] = Mem465[ds_435:0x29E3:word16]
	word16 dx_472
	word16 cx_657
	word16 bx_658
	fn0800_ACB3(ds_435, Mem468[ss:sp_227 - 0x0006:segptr32], Mem468[ss:sp_227 - 0x0002:ui32], Mem468[ss:sp_227 + 0x0002:word16], out cx_657, out dx_472, out bx_658)
	branch si_353 == 0x0000 l0800_55D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55D0:
	branch Mem468[ds_435:0x2E4D:word16] == Mem468[ds_435:0x2E4B:word16] l0800_55E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55E1:
	word16 bp_492 = Mem468[ss:bp_219:word16]
	dxOut = dx_472
	bpOut = bp_492
	diOut = di_265
	dsOut = ds_435
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55D9:
	word16 bp_497 = Mem468[ss:bp_219:word16]
	dxOut = dx_472
	bpOut = bp_497
	diOut = di_265
	dsOut = ds_435
	return 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55C9:
	word16 bp_502 = Mem468[ss:bp_219:word16]
	dxOut = dx_472
	bpOut = bp_502
	diOut = di_265
	dsOut = ds_435
	return si_353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5450:
	word16 bp_507 = Mem166[ss:bp_168:word16]
	dxOut = dx_173
	bpOut = bp_507
	diOut = di_171
	dsOut = ds_172
	return 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_53BF:
	word16 bp_527
	word16 di_530
	selector ds_531
	word16 dx_645
	word16 si_646
	fn0800_3B0A(ds_64, ax_21 & 0x0003, Mem73[ds_64:0x2A09:word16], out dx_645, out bp_527, out si_646, out di_530, out ds_531)
	word16 dx_542 = Mem525[ds_531:0x2A07:word16]
	Mem543[ds_531:0x2A05:word16] = Mem525[ds_531:0x2A09:word16]
	Mem544[ds_531:0x2A03:word16] = dx_542
	word16 bp_550 = Mem544[ss:bp_527:word16]
	dxOut = dx_542
	bpOut = bp_550
	diOut = di_530
	dsOut = ds_531
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5374_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_55E8(selector ds, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax di ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_55E8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55E8:
	word16 sp_153 = fp - 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_574B:
	word16 ax_13 = Mem12[ds:0x2A01:word16]
	word16 dx_14 = Mem12[ds:0x29FF:word16]
	branch ax_13 >=u Mem12[ds:0x2A09:word16] l0800_575B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_575B:
	branch ax_13 != Mem12[ds:0x2A09:word16] l0800_5766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_575D:
	branch dx_14 >=u Mem12[ds:0x2A07:word16] l0800_5766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5766:
	word16 sp_25 = sp_153 - 2
	Mem28[ss:sp_25:word16] = Mem12[ds:0x29E1:word16]
	Mem31[ss:sp_25 - 2:word16] = Mem28[ds:0x29DF:word16]
	word16 ax_34 = Mem31[ds:0x2E55:word16] - Mem31[ds:0x2E59:word16]
	word16 ax_38 = ax_34 - Mem31[ds:0x2E31:word16]
	Mem43[ss:sp_25 - 4:word16] = 0x0000 - (ax_34 <u 0x0000) - (ax_38 <u 0x0000)
	Mem45[ss:sp_25 - 6:word16] = ax_38
	word16 ax_47 = Mem45[ds:0x2E59:word16] + Mem45[ds:0x2E31:word16]
	Mem51[ss:sp_25 - 8:word16] = Mem45[ds:0x2E5B:word16]
	Mem53[ss:sp_25 - 10:word16] = ax_47
	word16 di_57
	selector ds_58
	word16 si_477
	fn0800_4152(ds, Mem53[ss:sp_25 - 10:word32], Mem53[ss:sp_25 - 6:word16], Mem53[ss:sp_25 - 4:word16], Mem53[ss:sp_25 - 2:word32], out si_477, out di_57, out ds_58)
	diOut = di_57
	dsOut = ds_58
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_55E8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5763:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5758:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55F1:
	word16 sp_77 = sp_153 - 2
	Mem79[ss:sp_77:word16] = 0x0010
	Mem82[ss:sp_77 - 2:word16] = ds
	Mem85[ss:sp_77 - 4:word16] = 0x290F
	selector ds_88 = fn0800_5A24(ds, Mem85[ss:sp_77 - 4:word16], Mem85[ss:sp_77 - 2:word16], Mem85[ss:sp_77:word16])
	Mem100[ss:sp_77:word16] = 0x0010
	Mem102[ss:sp_77 - 2:word16] = ds_88
	Mem105[ss:sp_77 - 4:word16] = 0x284F
	selector ds_108 = fn0800_5A24(ds_88, Mem105[ss:sp_77 - 4:word16], Mem105[ss:sp_77 - 2:word16], Mem105[ss:sp_77:word16])
	Mem120[ss:sp_77:word16] = 0x0010
	Mem122[ss:sp_77 - 2:word16] = ds_108
	Mem125[ss:sp_77 - 4:word16] = 0x278F
	selector ds_128 = fn0800_5A24(ds_108, Mem125[ss:sp_77 - 4:word16], Mem125[ss:sp_77 - 2:word16], Mem125[ss:sp_77:word16])
	Mem140[ss:sp_77:word16] = 0x0010
	sp_153 = sp_77 + 0x0002
	word16 wLoc04_442 = 0x0000
	word16 si_475
	word16 di_476
	word16 wLoc06_443 = fn0800_5C39(ds_128, Mem140[ss:sp_77:word16], out si_475, out di_476, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5736:
	word16 v11_163 = wLoc06_443 - 0x0001
	word16 v12_167 = wLoc04_442 - (v11_163 <u 0x0000)
	wLoc06_443 = v11_163
	wLoc04_442 = v12_167
	branch (wLoc06_443 | wLoc04_442) == 0x0000 l0800_574B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5748:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5633:
	word16 sp_174 = sp_153 - 2
	Mem176[ss:sp_174:word16] = ds
	Mem179[ss:sp_174 - 2:word16] = 0x290F
	word16 ax_180 = fn0800_5A8D(ds, Mem179[ss:sp_174 - 2:word16], Mem179[ss:sp_174:selector], out ds)
	Mem191[ds:0x2E47:word16] = ax_180
	word16 v17_192 = Mem191[ds:0x29FF:word16] + ax_180
	Mem193[ds:0x29FF:word16] = v17_192
	Mem197[ds:0x2A01:word16] = Mem193[ds:0x2A01:word16] + (v17_192 <u 0x0000)
	sp_153 = sp_174 + 0x0002
	branch Mem197[ds:0x2E47:word16] != 0x0000 l0800_5654
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5654:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5664:
	word16 ax_202 = Mem201[ds:0x2E47:word16]
	Mem204[ds:0x2E47:word16] = Mem201[ds:0x2E47:word16] - 0x0001
	branch ax_202 != 0x0000 l0800_5656
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5656:
	word16 si_478
	word16 di_479
	selector ds_214
	word16 ax_210 = fn0800_5B15(ds, out si_478, out di_479, out ds_214)
	word16 sp_227 = sp_153 - 2
	Mem230[ss:sp_227:word16] = SEQ(SLICE(ax_210, byte, 8), SLICE(ax_210, byte, 0) ^ Mem204[ds_214:0x2E4F:byte])
	ds = fn0800_5D2F(ds_214, Mem230[ss:sp_227:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_566F:
	branch (Mem204[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_5684
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5684:
	Mem249[ds:0x2E4F:word16] = Mem204[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5677:
	Mem256[ds:0x2E4F:word16] = Mem204[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5688:
	ptr32 es_bx_259 = Mem258[ds:0x2E6D:segptr32]
	word16 sp_265 = sp_153 - 2
	Mem268[ss:sp_265:word16] = (uint16) (uint8) Mem258[es_bx_259 + 0x0002:byte]
	word16 dx_273 = (uint16) (uint8) Mem268[es_bx_259 + 0x0001:byte]
	word16 dx_280 = Mem268[ss:sp_265:word16] + (dx_273 << 0x08 <u 0x0000)
	byte bl_281 = Mem268[es_bx_259:byte]
	Mem284[ss:sp_265:word16] = dx_273 << 0x08
	Mem288[ss:sp_265 - 2:word16] = dx_280
	int32 dx_ax_435 = SEQ(Mem288[ss:sp_265 - 2:word16], Mem288[ss:sp_265:word16]) + (int32) ((uint16) ((uint8) bl_281))
	word16 sp_308 = <invalid>
	word16 dx_307
	byte cl_480
	Mem314[ss:sp_308 - 2:word16] = fn0800_8C69((word16) dx_ax_435, Mem288[ds:0x2E45:byte], SLICE(dx_ax_435, word16, 16), out cl_480, out dx_307)
	word16 ax_317 = 0x0001 << Mem314[ds:0x2E45:byte]
	Mem320[ss:sp_308 - 4:word16] = dx_307
	int32 dx_ax_321 = (int32) (ax_317 - 0x0001)
	ui32 ax_dx_438 = SEQ(Mem320[ss:sp_308 - 4:word16], Mem320[ss:sp_308 - 2:word16]) + SEQ(Mem320[ds:0x29FD:word16] & SLICE(dx_ax_321, word16, 16), Mem320[ds:0x29FB:word16] & SLICE(dx_ax_321, word16, 0))
	Mem337[ds:0x29FD:word16] = SLICE(ax_dx_438, word16, 16)
	Mem338[ds:0x29FB:word16] = (word16) ax_dx_438
	sp_153 = sp_308
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5651:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_56E6:
	branch (v11_163 | v12_167) == 0x0000 l0800_574B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_56EE:
	word16 sp_350 = sp_153 - 2
	Mem352[ss:sp_350:word16] = ds
	Mem355[ss:sp_350 - 2:word16] = 0x284F
	selector ds_359
	Mem370[ds_359:0x2E2B:word16] = fn0800_5A8D(ds, Mem355[ss:sp_350 - 2:word16], Mem355[ss:sp_350:selector], out ds_359) + 0x0001
	Mem372[ss:sp_350:word16] = ds_359
	Mem375[ss:sp_350 - 2:word16] = 0x278F
	word16 ax_376 = fn0800_5A8D(ds_359, Mem375[ss:sp_350 - 2:word16], Mem375[ss:sp_350:selector], out ds)
	Mem388[ds:0x2E29:word16] = ax_376 + 0x0002
	word16 v19_389 = Mem388[ds:0x29FF:word16] + (ax_376 + 0x0002)
	Mem390[ds:0x29FF:word16] = v19_389
	Mem394[ds:0x2A01:word16] = Mem390[ds:0x2A01:word16] + (v19_389 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_572B:
	word16 ax_398 = Mem397[ds:0x2E29:word16]
	Mem400[ds:0x2E29:word16] = Mem397[ds:0x2E29:word16] - 0x0001
	byte ah_413 = SLICE(ax_398, byte, 8)
	branch ax_398 != 0x0000 l0800_5719
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5719:
	ptr32 es_bx_405 = Mem400[ds:0x2E55:segptr32]
	word16 sp_412 = sp_153 - 2
	Mem416[ss:sp_412:word16] = SEQ(ah_413, Mem400[SLICE(es_bx_405, selector, 16):SLICE(es_bx_405, word16, 0) - Mem400[ds:0x2E2B:word16]:byte])
	ds = fn0800_5D2F(ds, Mem416[ss:sp_412:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_579B(selector ds, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax di ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_579B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_579B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58F2:
	word16 ax_6 = Mem5[ds:0x2A01:word16]
	word16 dx_7 = Mem5[ds:0x29FF:word16]
	branch ax_6 >=u Mem5[ds:0x2A09:word16] l0800_5902
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5902:
	branch ax_6 != Mem5[ds:0x2A09:word16] l0800_590D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5904:
	branch dx_7 >=u Mem5[ds:0x2A07:word16] l0800_590D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_590D:
	word16 ax_27 = Mem24[ds:0x2E55:word16] - Mem24[ds:0x2E59:word16]
	word16 ax_31 = ax_27 - Mem24[ds:0x2E31:word16]
	word16 di_50
	selector ds_51
	word16 si_487
	fn0800_4152(ds, SEQ(Mem38[ds:0x2E5B:word16], Mem38[ds:0x2E59:word16] + Mem38[ds:0x2E31:word16]), ax_31, 0x0000 - (ax_27 <u 0x0000) - (ax_31 <u 0x0000), SEQ(Mem5[ds:0x29E1:word16], Mem21[ds:0x29DF:word16]), out si_487, out di_50, out ds_51)
	diOut = di_50
	dsOut = ds_51
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_579B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_590A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57CF:
	selector ds_72
	branch fn0800_5CD9(ds, 0x0001, out ds_72) == 0x0000 l0800_579E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_579E:
	selector ds_88
	word16 di_489
	word16 si_488
	ds = fn0800_5D2F(ds_88, SLICE(fn0800_5B15(ds_72, out si_488, out di_489, out ds_88), byte, 0) ^ Mem67[ds_88:0x2E4F:byte])
	branch (Mem103[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_57C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57C1:
	Mem121[ds:0x2E4F:word16] = Mem103[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57B4:
	Mem128[ds:0x2E4F:word16] = Mem103[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57C5:
	word16 v16_131 = Mem130[ds:0x29FF:word16] + 0x0001
	Mem132[ds:0x29FF:word16] = v16_131
	Mem136[ds:0x2A01:word16] = Mem132[ds:0x2A01:word16] + (v16_131 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57DD:
	selector ds_144
	branch fn0800_5CD9(ds_72, 0x0001, out ds_144) == 0x0000 l0800_5866
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5866:
	selector ds_158 = fn0800_593F(ds_144)
	branch Mem140[ds_158:0x2E29:word16] != 0x0009 l0800_58B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58B7:
	ds = fn0800_5975(ds_158)
	word16 v28_181 = Mem140[ds:0x29FF:word16] + Mem140[ds:0x2E29:word16]
	Mem182[ds:0x29FF:word16] = v28_181
	Mem186[ds:0x2A01:word16] = Mem182[ds:0x2A01:word16] + (v28_181 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58DA:
	word16 ax_190 = Mem189[ds:0x2E29:word16]
	Mem192[ds:0x2E29:word16] = Mem189[ds:0x2E29:word16] - 0x0001
	branch ax_190 != 0x0000 l0800_58C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58C8:
	ptr32 es_bx_197 = Mem192[ds:0x2E55:segptr32]
	ds = fn0800_5D2F(ds, Mem192[SLICE(es_bx_197, selector, 16):SLICE(es_bx_197, word16, 0) - Mem192[ds:0x2E2B:word16]:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5870:
	ds = fn0800_5A0F(ds_158)
	word16 v22_234 = Mem140[ds:0x29FF:word16] + Mem140[ds:0x2E47:word16]
	Mem235[ds:0x29FF:word16] = v22_234
	Mem239[ds:0x2A01:word16] = Mem235[ds:0x2A01:word16] + (v22_234 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_588F:
	word16 ax_243 = Mem242[ds:0x2E47:word16]
	Mem245[ds:0x2E47:word16] = Mem242[ds:0x2E47:word16] - 0x0001
	branch ax_243 != 0x0000 l0800_5881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5881:
	selector ds_255
	word16 si_494
	word16 di_495
	ds = fn0800_5D2F(ds_255, SLICE(fn0800_5B15(ds, out si_494, out di_495, out ds_255), byte, 0) ^ Mem245[ds_255:0x2E4F:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_589A:
	branch (Mem245[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_58B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58B0:
	Mem290[ds:0x2E4F:word16] = Mem245[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58A2:
	Mem297[ds:0x2E4F:word16] = Mem245[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57EB:
	selector ds_386
	selector ds_304
	branch fn0800_5CD9(ds_144, 0x0001, out ds_304) != 0x0000 l0800_580A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_580A:
	selector ds_338
	selector ds_322
	branch fn0800_5CD9(ds_304, 0x0001, out ds_322) != 0x0000 l0800_5820
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5820:
	word16 di_493
	word16 si_492
	Mem348[ds_338:0x2E29:word16] = fn0800_5B15(ds_322, out si_492, out di_493, out ds_338) + 0x0008
	ds_322 = ds_338
	branch Mem348[ds_338:0x2E29:word16] != 0x0008 l0800_5835
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5832:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58E8:
	fn0800_5CD9(ds_338, 0x0001, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5818:
	Mem366[ds_322:0x2E29:word16] = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5835:
	ds = fn0800_5975(ds_322)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57F9:
	Mem381[ds_304:0x2E29:word16] = 0x0002
	word16 si_490
	word16 di_491
	Mem397[ds_386:0x2E2B:word16] = fn0800_5B15(ds_304, out si_490, out di_491, out ds_386) + 0x0001
	ds = ds_386
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5838:
	word16 v13_402 = Mem399[ds:0x29FF:word16] + Mem399[ds:0x2E29:word16]
	Mem403[ds:0x29FF:word16] = v13_402
	Mem407[ds:0x2A01:word16] = Mem403[ds:0x2A01:word16] + (v13_402 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5858:
	word16 ax_411 = Mem410[ds:0x2E29:word16]
	Mem413[ds:0x2E29:word16] = Mem410[ds:0x2E29:word16] - 0x0001
	branch ax_411 != 0x0000 l0800_5846
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5846:
	ptr32 es_bx_418 = Mem413[ds:0x2E55:segptr32]
	ds = fn0800_5D2F(ds, Mem413[SLICE(es_bx_418, selector, 16):SLICE(es_bx_418, word16, 0) - Mem413[ds:0x2E2B:word16]:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5863:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_593F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_593F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_593F:
	selector ds_12
	Mem22[ds_12:0x2E29:word16] = fn0800_5CD9(ds, 0x0001, out ds_12) + 0x0004
	selector ds_29
	branch fn0800_5CD9(ds_12, 0x0001, out ds_29) == 0x0000 l0800_5974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_595D:
	Mem60[ds_29:0x2E29:word16] = (Mem43[ds_29:0x2E29:word16] - 0x0001 << 0x0001) + fn0800_5CD9(ds_29, 0x0001, out ds_29)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5974:
	return ds_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_593F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5975(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_5975_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5975:
	Mem5[ds:0x2E2B:word16] = 0x0000
	selector ds_105
	branch fn0800_5CD9(ds, 0x0001, out ds_105) == 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5989:
	selector ds_31
	Mem40[ds_31:0x2E2B:word16] = fn0800_5CD9(ds_105, 0x0001, out ds_31)
	branch fn0800_5CD9(ds_31, 0x0001, out ds_105) == 0x0000 l0800_59E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59E3:
	branch Mem43[ds_105:0x2E2B:word16] != 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59EA:
	Mem77[ds_105:0x2E2B:word16] = fn0800_5CD9(ds_105, 0x0001, out ds_105) + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59A4:
	selector ds_84
	Mem98[ds_84:0x2E2B:word16] = (Mem80[ds_84:0x2E2B:word16] << 0x0001) + fn0800_5CD9(ds_105, 0x0001, out ds_84) | 0x0004
	branch fn0800_5CD9(ds_84, 0x0001, out ds_105) != 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59CB:
	Mem135[ds_105:0x2E2B:word16] = (Mem119[ds_105:0x2E2B:word16] << 0x0001) + fn0800_5CD9(ds_105, 0x0001, out ds_105)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59FA:
	selector ds_142
	word16 si_175
	word16 di_176
	Mem159[ds_142:0x2E2B:word16] = (Mem151[ds_142:0x2E2B:word16] << 0x08) + fn0800_5B15(ds_105, out si_175, out di_176, out ds_142) + 0x0001
	return ds_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5975_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5A0F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_5A0F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A0F:
	selector ds_12
	Mem24[ds_12:0x2E47:word16] = (fn0800_5CD9(ds, 0x0004, out ds_12) << 0x0002) + 0x000C
	return ds_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A0F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5A24(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5A24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	word16 di_189
	word16 si_188
	selector ds_172
	word16 ax_38 = fn0800_5C39(ds, 0x0005, out si_188, out di_189, out ds_172)
	word16 wArg06_140 = ax_38
	branch ax_38 == 0x0000 l0800_5A89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A49:
	branch ax_38 <=u 0x0010 l0800_5A54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A4F:
	wArg06_140 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A54:
	branch wArg06_140 <=u 0x0000 l0800_5A7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A61:
	word16 si_74
	word16 di_78
	Mem88[wArg04:si_74:word16] = fn0800_5C39(ds_172, 0x0004, out si_74, out di_78, out ds_172)
	branch di_78 + 0x0001 <u wArg06_140 l0800_5A61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A7A:
	fn0800_4550(wArg02, wArg04, wArg06_140)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A89:
	return ds_172
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5A8D(selector ds, word16 wArg02, selector psegArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5A8D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A8D:
	word16 wLoc04_121 = 0x0000
	word16 di_18 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AA5:
	byte bLoc04_131 = SLICE(wLoc04_121, byte, 0)
	branch Mem21[psegArg04:di_18 + 0x000A:word16] == 0x0000 l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AAF:
	int32 dx_ax_30 = (int32) ((0x0001 << Mem21[psegArg04:di_18 + 0x000A:byte]) - 0x0001)
	word16 cx_35 = Mem21[ds:0x29FB:word16] & SLICE(dx_ax_30, word16, 0)
	branch (Mem21[ds:0x29FD:word16] & SLICE(dx_ax_30, word16, 16)) != Mem21[psegArg04:di_18 + 0x0008:word16] l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5ACC:
	branch cx_35 != Mem21[psegArg04:di_18 + 0x0006:word16] l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A9F:
	di_18 = di_18 + 0x000C
	wLoc04_121 = wLoc04_121 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AD2:
	selector ds_69
	word16 si_166
	word16 di_167
	fn0800_5C39(ds, Mem21[psegArg04:wArg02 + SLICE(wLoc04_121 *s 0x000C, word16, 0) + 0x000A:word16], out si_166, out di_167, out ds_69)
	branch wLoc04_121 >=u 0x0002 l0800_5AF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AF8:
	selector ds_89
	word16 si_168
	word16 di_169
	word16 ax_100 = fn0800_5C39(ds_69, wLoc04_121 - 0x0001, out si_168, out di_169, out ds_89) | 0x0001 << bLoc04_131 - 0x01
	dsOut = ds_89
	return ax_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AEF:
	dsOut = ds_69
	return wLoc04_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A8D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5B15(selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5B15_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B15:
	word16 ax_11 = Mem7[ds:0x2E73:word16]
	byte ah_288 = SLICE(ax_11, byte, 8)
	ah_288 = SLICE(ax_11, byte, 8) (alias)
	word16 dx_12 = Mem7[ds:0x2E71:word16]
	branch ax_11 == Mem7[ds:0x2E6F:word16] l0800_5B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B2E:
	branch dx_12 + 0xFFFD == Mem7[ds:0x2E6D:word16] l0800_5B37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B37:
	ui32 dx_ax_328
	fn0800_4194(ds, SEQ(Mem7[ds:0x29E5:word16], Mem20[ds:0x29E3:word16]))
	word16 dx_334
	fn0800_AD2F(ds, SEQ(Mem36[ds:0x29E5:word16], Mem39[ds:0x29E3:word16]), out dx_334)
	ui32 dx_ax_327 = <invalid>
	ui32 bx_cx_231 = SEQ(dx_12 + 0xFFFD, ax_11) - dx_ax_327
	word16 cx_57 = (word16) bx_cx_231
	word16 bx_60 = SLICE(bx_cx_231, word16, 16)
	branch bx_60 <u 0x0000 l0800_5B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B67:
	branch bx_60 >u 0x0000 l0800_5B6F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B69:
	branch cx_57 <=u 0xFFFD l0800_5B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B76:
	dx_ax_328 = bx_cx_231 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B6F:
	dx_ax_328 = 0x0000FFFD (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B7C:
	word16 v23_88 = Mem84[ds:0x29E5:word16]
	word16 v24_94 = Mem93[ds:0x29E3:word16]
	word16 ax_102 = Mem101[ds:0x2E73:word16]
	word16 dx_103 = Mem101[ds:0x2E71:word16]
	Mem104[ds:0x2E6F:word16] = ax_102
	Mem105[ds:0x2E6D:word16] = dx_103
	word16 ax_83 = SLICE(dx_ax_328, word16, 0)
	selector ds_114
	word16 di_336
	word16 si_335
	fn0800_4110(ds, SEQ(ax_102, dx_103), ax_83, SLICE(dx_ax_328, word16, 16), SEQ(v23_88, v24_94), out si_335, out di_336, out ds_114)
	ui32 v27_v26_233 = SEQ(bx_60, v26_125) - dx_ax_328
	word16 v26_125 = (word16) v27_v26_233
	word16 v27_130 = SLICE(v27_v26_233, word16, 16)
	word16 wLoc06_257 = v26_125
	word16 wLoc04_260 = v27_130
	branch Test(ULT,false) l0800_5BCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BBA:
	branch v27_130 >u 0x0000 l0800_5BC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BBC:
	branch v26_125 <=u 0x0002 l0800_5BCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BC1:
	wLoc04_260 = 0x0000
	wLoc06_257 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BCB:
	fn0800_4110(ds_114, SEQ(Mem162[ds_114:0x2E73:word16], Mem162[ds_114:0x2E71:word16] + ax_83), wLoc06_257, wLoc04_260, SEQ(Mem146[ds_114:0x29E5:word16], Mem152[ds_114:0x29E3:word16]), out si, out di, out ds)
	word16 dx_190 = -wLoc06_257
	word16 bx_339
	word16 dx_338
	word16 cx_337
	ah_288 = SLICE(fn0800_ACB3(ds, SEQ(Mem197[ds:0x29E5:word16], Mem200[ds:0x29E3:word16]), SEQ(-wLoc04_260 - (dx_190 == 0x0000), dx_190), 0x0001, out cx_337, out dx_338, out bx_339), byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B34:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B2B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C0B:
	ptr32 es_bx_217 = Mem216[ds:0x2E6D:segptr32]
	Mem219[ds:0x2E6D:word16] = Mem216[ds:0x2E6D:word16] + 0x0001
	word16 ax_292 = SEQ(ah_288, Mem219[es_bx_217:byte])
	siOut = si
	diOut = di
	dsOut = ds
	return ax_292
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5B15_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5C1A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5C1A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C1A:
	branch Mem7[ds:0x2A21:word16] != 0x0002 l0800_5C30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C30:
	word16 si_16
	word16 di_20
	selector ds_21
	word16 ax_15 = fn0800_5C39(ds, wArg02, out si_16, out di_20, out ds_21)
	siOut = si_16
	diOut = di_20
	dsOut = ds_21
	return ax_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C27:
	selector ds_36
	word16 ax_33 = fn0800_5CD9(ds, wArg02, out ds_36)
	siOut = si
	diOut = di
	dsOut = ds_36
	return ax_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5C1A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5C39(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5C39_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C39:
	word16 sp_13 = fp - 0x000C
	word16 si_147 = wArg02
	word16 di_121 = 0x0000
	word16 wLoc08_157 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CCA:
	word16 si_146 = si_147
	branch si_147 == 0x0000 l0800_5CD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CD1:
	word16 di_31 = Mem30[ss:sp_13:word16]
	siOut = Mem30[ss:sp_13 + 2:word16]
	diOut = di_31
	dsOut = ds
	return di_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5C39_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CCE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C4D:
	branch Mem30[ds:0x2E45:word16] != 0x0000 l0800_5CA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C54:
	selector ds_45
	word16 di_192
	word16 si_191
	word16 ax_41 = fn0800_5B15(ds, out si_191, out di_192, out ds_45)
	word16 ax_55 = fn0800_5B15(ds_45, out si_146, out di_121, out ds)
	word16 dx_82
	byte cl_193
	word16 ax_79 = fn0800_8C69((uint16) (uint8) Mem68[Mem68[ds:0x2E6D:segptr32] + 0x0001:byte], 0x18, 0x0000, out cl_193, out dx_82)
	word16 ax_101 = ax_79 + (ax_55 << 0x08)
	word16 ax_105 = ax_101 + ax_41
	Mem110[ds:0x29FD:word16] = dx_82 + (uint16) ((uint8) Mem68[Mem68[ds:0x2E6D:segptr32]:byte]) + (ax_79 <u 0x0000) + (ax_101 <u 0x0000) + (ax_105 <u 0x0000)
	Mem111[ds:0x29FB:word16] = ax_105
	Mem112[ds:0x2E45:word16] = 0x0010
	sp_13 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CA2:
	branch (Mem114[ds:0x29FB:word16] & 0x0001) == 0x0000 l0800_5CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CAD:
	di_121 = di_121 | wLoc08_157
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CB0:
	word16 ax_129 = Mem114[ds:0x29FD:word16]
	word16 dx_135 = __rcr(Mem114[ds:0x29FB:word16], 0x01, SLICE(cond(ax_129 >>u 0x0001), bool, 1))
	Mem136[ds:0x29FD:word16] = ax_129 >>u 0x0001
	Mem137[ds:0x29FB:word16] = dx_135
	Mem144[ds:0x2E45:word16] = Mem141[ds:0x2E45:word16] - 0x0001
	wLoc08_157 = wLoc08_157 << 0x0001
	si_147 = si_146 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5CD9(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5CD9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CD9:
	word16 di_15 = wArg02
	word16 si_16 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D25:
	word16 di_20 = di_15
	branch di_15 != 0x0000 l0800_5CE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CE5:
	branch Mem25[ds:0x2E45:word16] != 0x0000 l0800_5D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CEC:
	word16 ax_29 = fn0800_5B15(ds, out si_16, out di_20, out ds)
	Mem42[ds:0x29FD:word16] = 0x0000
	Mem43[ds:0x29FB:word16] = ax_29
	Mem44[ds:0x2E45:word16] = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D00:
	si_16 = si_16 << 0x0001
	branch (Mem49[ds:0x29FB:word16] & 0x0080) == 0x0000 l0800_5D0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D0D:
	si_16 = si_16 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D0E:
	word16 dx_61 = Mem49[ds:0x29FB:word16]
	Mem68[ds:0x29FD:word16] = __rcl(Mem49[ds:0x29FD:word16], 0x01, SLICE(cond(dx_61 << 0x0001), bool, 1))
	Mem69[ds:0x29FB:word16] = dx_61 << 0x0001
	Mem71[ds:0x2E45:word16] = Mem69[ds:0x2E45:word16] - 0x0001
	di_15 = di_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D29:
	dsOut = ds
	return si_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5CD9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5D2F(selector ds, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_5D2F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D2F:
	word16 dx_11 = Mem7[ds:0x2E59:word16]
	branch Mem7[ds:0x2E5B:word16] != Mem7[ds:0x2E57:word16] l0800_5D9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D40:
	branch dx_11 - 0x0001 != Mem7[ds:0x2E55:word16] l0800_5D9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D46:
	word16 dx_25 = 0xFFFF - Mem22[ds:0x2E31:word16]
	word16 si_150
	word16 di_151
	fn0800_4152(ds, SEQ(Mem32[ds:0x2E5B:word16], Mem32[ds:0x2E59:word16] + Mem32[ds:0x2E31:word16]), dx_25, 0x0000 - (dx_25 <u 0x0000), SEQ(Mem7[ds:0x29E1:word16], Mem19[ds:0x29DF:word16]), out si_150, out di_151, out ds)
	fn0800_B0F3(SEQ(Mem64[ds:0x2E5B:word16], Mem67[ds:0x2E59:word16]), SEQ(Mem56[ds:0x2E57:word16], Mem56[ds:0x2E55:word16] - Mem56[ds:0x2E31:word16]), Mem40[ds:0x2E31:word16])
	word16 dx_84 = Mem70[ds:0x2E59:word16] + Mem70[ds:0x2E31:word16]
	Mem86[ds:0x2E57:word16] = Mem70[ds:0x2E5B:word16]
	Mem87[ds:0x2E55:word16] = dx_84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D9E:
	Mem96[Mem89[ds:0x2E55:segptr32]:byte] = bArg02
	Mem98[ds:0x2E55:word16] = Mem96[ds:0x2E55:word16] + 0x0001
	Mem113[ds:0x2E4D:word16] = Mem98[ds:(((uint16) (uint8) (Mem98[ds:0x2E4D:byte] ^ bArg02) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem98[ds:0x2E4D:word16] >>u 0x08
	return ds
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5D2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5DCE(word16 ax, word16 dx, selector ds, word32 dwArg02, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_5DCE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DCE:
	word16 ax_55
	fn0800_4194(ds, dwArg02)
	word16 dx_130 = dx
	branch Test(ULT,false) l0800_5DEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE2:
	branch dx != 0x0000 l0800_5DE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE4:
	branch ax <u 0x0400 l0800_5DEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DEE:
	fn0800_4194(ds, dwArg02)
	ax_55 = ax & 0xFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE9:
	ax_55 = 0x0400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DFD:
	word16 si_139 = ax_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E5B:
	branch si_139 != 0x0000 l0800_5E01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E01:
	word16 cx_79
	branch fn0800_3E27(ds, dwArg02, out cx_79, out dx_130, out di, out ds) != 0x524E l0800_5E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E12:
	word16 dx_293
	word16 cx_292
	branch (fn0800_3E27(ds, dwArg02, out cx_292, out dx_293, out di, out ds) & 0xFF00) != 0x4300 l0800_5E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E40:
	word16 bx_295
	word16 cx_294
	fn0800_ACB3(ds, dwArg02, 0xFFFFFFFE, 0x0001, out cx_294, out dx_130, out bx_295)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E58:
	si_139 = si_139 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E26:
	word16 bx_297
	word16 cx_296
	fn0800_ACB3(ds, dwArg02, 0xFFFFFFFC, 0x0001, out cx_296, out dx_130, out bx_297)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E5F:
	dxOut = dx_130
	diOut = di
	dsOut = ds
	return si_139
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5DCE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5E64(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_5E64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E64:
	word16 bp_1042 = fp - 2
	word16 sp_127 = fp - 0x003E
	word16 di_21 = 0x2202
	word16 si_22 = 0x4271
	word16 cx_2148 = 0x0004
	branch true l0800_5E80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E7E:
	cx_2148 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E80:
	word16 ax_28 = 0x0000
	bool Z_41 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E82:
	branch cx_2148 == 0x0000 l0800_5E84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E82_1:
	Z_41 = SLICE(cond(Mem18[ds:si_2592:byte] - Mem18[ds:di_2593:byte]), bool, 2) (alias)
	si_22 = si_2592 + 0x0001
	di_21 = di_2593 + 0x0001
	cx_2148 = cx_2148 - 0x0001
	si_2592 = si_22
	di_2593 = di_21
	branch Mem18[ds:si_2592:byte] != Mem18[ds:di_2593:byte] l0800_5E82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E84:
	branch Z_41 l0800_5E8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E86:
	ax_28 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E8B:
	branch ax_28 == 0x0000 l0800_5EC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E8F:
	word16 di_2124 = 0x4271
	word16 si_2129 = 0x2202
	word16 cx_77 = 0x0004
	word16 dx_2156 = 0xFFFF
	branch true l0800_5EA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA1:
	cx_77 = 0x0003
	dx_2156 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA5:
	word16 cx_86 = cx_77 >>u 0x0001
	cx_2147 = cx_86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA7:
	word16 cx_2147
	branch cx_2147 == 0x0000 l0800_5EA9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA9:
	word16 cx_2137 = cx_2147 * 0x0002 + (cx_86 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAB:
	branch cx_2137 == 0x0000 l0800_5EAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAD:
	word16 cx_2127 = dx_2156
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB1:
	branch cx_2127 == 0x0000 l0800_5EB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB3:
	fn0800_09A3(ds, out bp_1042, out ds)
	word16 sp_121 = <invalid>
	sp_127 = sp_121 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EC3:
	word16 ax_141 = ((uint16) (uint8) Mem130[ds:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem130[ds:0x2E76:byte])
	branch Mem130[ds:0x2A09:word16] >u 0x0000 l0800_5EED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EDC:
	branch Mem130[ds:0x2A09:word16] != 0x0000 l0800_5EE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EDE:
	branch ax_141 <u Mem130[ds:0x2A07:word16] l0800_5EED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EED:
	branch Mem130[ds:0x2A0D:word16] <u 0x0000 l0800_5F0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EF4:
	branch Mem130[ds:0x2A0D:word16] >u 0x0000 l0800_5EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EF6:
	branch Mem130[ds:0x2A0B:word16] <=u 0x7FF0 l0800_5F0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EFE:
	Mem156[ds:0x2A0D:word16] = 0x0000
	Mem157[ds:0x2A0B:word16] = 0x7FF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F0A:
	word16 sp_165 = sp_127 - 2
	Mem170[ss:sp_165:word16] = 0x0000
	Mem173[ss:sp_165 - 2:word16] = 0x0000
	Mem175[ss:sp_165 - 4:word16] = 0x0002
	Mem179[ss:sp_165 - 6:word16] = Mem175[ds:0x29E5:word16]
	Mem182[ss:sp_165 - 8:word16] = Mem179[ds:0x29E3:word16]
	word16 dx_2455
	word16 bx_2456
	word16 cx_2454
	fn0800_ACB3(ds, Mem182[ss:sp_165 - 8:segptr32], Mem182[ss:sp_165 - 4:ui32], Mem182[ss:sp_165:word16], out cx_2454, out dx_2455, out bx_2456)
	Mem196[ss:sp_165:word16] = Mem182[ds:0x29E5:word16]
	Mem199[ss:sp_165 - 2:word16] = Mem196[ds:0x29E3:word16]
	selector ds_204
	byte ch_2457
	word16 di_2458
	Mem221[ss:bp_1042 - 0x0022:word16] = fn0800_3FAD(ds, Mem199[ss:sp_165 - 2:word32], out ch_2457, out di_2458, out ds_204)
	Mem224[ss:sp_165:word16] = Mem221[ds_204:0x29E5:word16]
	Mem227[ss:sp_165 - 2:word16] = Mem224[ds_204:0x29E3:word16]
	selector ds_232
	byte ch_2459
	word16 di_2460
	word16 ax_228 = fn0800_3FAD(ds_204, Mem227[ss:sp_165 - 2:word32], out ch_2459, out di_2460, out ds_232)
	word16 di_240 = ax_228
	branch Mem227[ss:bp_1042 - 0x0022:word16] == 0x0000 l0800_5F48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F47:
	di_240 = ax_228 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F48:
	word16 dx_254
	byte cl_2461
	word16 ax_263 = fn0800_8C69(di_240, 0x09, 0x0000, out cl_2461, out dx_254) + Mem227[ss:bp_1042 - 0x0022:word16]
	Mem267[ss:bp_1042 - 0x0002:word16] = dx_254 + (ax_263 <u 0x0000)
	Mem268[ss:bp_1042 - 0x0004:word16] = ax_263
	word16 sp_255 = <invalid>
	word16 ax_269 = Mem268[ss:bp_1042 - 0x0002:word16]
	word16 dx_270 = Mem268[ss:bp_1042 - 0x0004:word16]
	branch ax_269 <u Mem268[ds_232:0x2A09:word16] l0800_5F7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F69:
	branch ax_269 >u Mem268[ds_232:0x2A09:word16] l0800_5F71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F6B:
	branch dx_270 <=u Mem268[ds_232:0x2A07:word16] l0800_5F7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F71:
	word16 dx_280 = Mem268[ds_232:0x2A07:word16]
	Mem283[ss:bp_1042 - 0x0002:word16] = Mem268[ds_232:0x2A09:word16]
	Mem284[ss:bp_1042 - 0x0004:word16] = dx_280
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F7E:
	Mem292[ss:sp_255 - 2:word16] = Mem286[ds_232:0x29E5:word16]
	Mem295[ss:sp_255 - 4:word16] = Mem292[ds_232:0x29E3:word16]
	selector ds_300
	byte ch_2462
	word16 di_2463
	Mem310[ss:bp_1042 - 0x0024:word16] = fn0800_3FAD(ds_232, Mem295[ss:sp_255 - 4:word32], out ch_2462, out di_2463, out ds_300)
	Mem313[ss:sp_255 - 2:word16] = Mem310[ds_300:0x29E5:word16]
	Mem316[ss:sp_255 - 4:word16] = Mem313[ds_300:0x29E3:word16]
	selector ds_321
	byte ch_2464
	word16 di_2465
	Mem330[ss:bp_1042 - 0x0026:word16] = fn0800_3FAD(ds_300, Mem316[ss:sp_255 - 4:word32], out ch_2464, out di_2465, out ds_321)
	Mem333[ss:sp_255 - 2:word16] = Mem330[ds_321:0x29E5:word16]
	Mem336[ss:sp_255 - 4:word16] = Mem333[ds_321:0x29E3:word16]
	selector ds_341
	word16 di_2467
	byte ch_2466
	Mem350[ss:bp_1042 - 0x0028:word16] = fn0800_3FAD(ds_321, Mem336[ss:sp_255 - 4:word32], out ch_2466, out di_2467, out ds_341)
	Mem353[ss:sp_255 - 2:word16] = Mem350[ds_341:0x29E5:word16]
	Mem356[ss:sp_255 - 4:word16] = Mem353[ds_341:0x29E3:word16]
	selector ds_361
	word16 di_2469
	byte ch_2468
	Mem370[ss:bp_1042 - 0x002A:word16] = fn0800_3FAD(ds_341, Mem356[ss:sp_255 - 4:word32], out ch_2468, out di_2469, out ds_361)
	Mem373[ss:sp_255 - 2:word16] = Mem370[ds_361:0x29E5:word16]
	Mem376[ss:sp_255 - 4:word16] = Mem373[ds_361:0x29E3:word16]
	selector ds_381
	byte ch_2470
	word16 di_2471
	Mem390[ss:bp_1042 - 0x002C:word16] = fn0800_3FAD(ds_361, Mem376[ss:sp_255 - 4:word32], out ch_2470, out di_2471, out ds_381)
	Mem393[ss:sp_255 - 2:word16] = Mem390[ds_381:0x29E5:word16]
	Mem396[ss:sp_255 - 4:word16] = Mem393[ds_381:0x29E3:word16]
	selector ds_401
	word16 di_2473
	byte ch_2472
	Mem410[ss:bp_1042 - 0x002E:word16] = fn0800_3FAD(ds_381, Mem396[ss:sp_255 - 4:word32], out ch_2472, out di_2473, out ds_401)
	Mem413[ss:sp_255 - 2:word16] = Mem410[ds_401:0x29E5:word16]
	Mem416[ss:sp_255 - 4:word16] = Mem413[ds_401:0x29E3:word16]
	selector ds_421
	byte ch_2474
	word16 di_2475
	fn0800_3FAD(ds_401, Mem416[ss:sp_255 - 4:word32], out ch_2474, out di_2475, out ds_421)
	Mem432[ss:sp_255 - 2:word16] = Mem416[ds_421:0x29E5:word16]
	Mem435[ss:sp_255 - 4:word16] = Mem432[ds_421:0x29E3:word16]
	selector ds_440
	byte ch_2476
	word16 di_2477
	Mem449[ss:bp_1042 - 0x0030:word16] = fn0800_3FAD(ds_421, Mem435[ss:sp_255 - 4:word32], out ch_2476, out di_2477, out ds_440)
	Mem452[ss:sp_255 - 2:word16] = Mem449[ds_440:0x29E5:word16]
	Mem455[ss:sp_255 - 4:word16] = Mem452[ds_440:0x29E3:word16]
	selector ds_460
	word16 di_2479
	byte ch_2478
	Mem469[ss:bp_1042 - 0x0032:word16] = fn0800_3FAD(ds_440, Mem455[ss:sp_255 - 4:word32], out ch_2478, out di_2479, out ds_460)
	Mem472[ss:sp_255 - 2:word16] = Mem469[ds_460:0x29E5:word16]
	Mem475[ss:sp_255 - 4:word16] = Mem472[ds_460:0x29E3:word16]
	selector ds_480
	byte ch_2480
	word16 di_2481
	Mem489[ss:bp_1042 - 0x0034:word16] = fn0800_3FAD(ds_460, Mem475[ss:sp_255 - 4:word32], out ch_2480, out di_2481, out ds_480)
	Mem492[ss:sp_255 - 2:word16] = Mem489[ds_480:0x29E5:word16]
	Mem495[ss:sp_255 - 4:word16] = Mem492[ds_480:0x29E3:word16]
	selector ds_500
	word16 di_2483
	byte ch_2482
	fn0800_3FAD(ds_480, Mem495[ss:sp_255 - 4:word32], out ch_2482, out di_2483, out ds_500)
	Mem510[ss:sp_255 - 2:word16] = Mem495[ds_500:0x29E1:word16]
	Mem513[ss:sp_255 - 4:word16] = Mem510[ds_500:0x29DF:word16]
	word16 ax_522 = ((uint16) (uint8) Mem513[ds_500:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem513[ds_500:0x2E76:byte])
	Mem527[ss:sp_255 - 6:word16] = 0x0000
	Mem529[ss:sp_255 - 8:word16] = ax_522
	Mem531[ss:sp_255 - 10:word16] = ds_500
	Mem534[ss:sp_255 - 12:word16] = 0x2E77
	word16 si_2484
	word16 di_2485
	selector ds_539
	byte ah_1003 = SLICE((uint16) (uint8) fn0800_4152(ds_500, Mem534[ss:sp_255 - 12:word32], Mem534[ss:sp_255 - 8:word16], Mem534[ss:sp_255 - 6:word16], Mem534[ss:sp_255 - 4:word32], out si_2484, out di_2485, out ds_539), byte, 8)
	word16 sp_547 = sp_255
	branch Mem534[ss:bp_1042 - 0x0024:word16] != 0x0000 l0800_6064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6064:
	Mem555[ss:sp_255 - 2:word16] = 0x0000
	Mem557[ss:sp_255 - 4:word16] = 0xFFFF
	word16 dx_564
	word16 si_2486
	word16 di_562
	selector ds_563
	word16 ax_558 = fn0800_4311(ds_539, Mem557[ss:sp_255 - 4:word16], Mem557[ss:sp_255 - 2:word16], out dx_564, out bp_1042, out si_2486, out di_562, out ds_563)
	Mem573[ss:bp_1042 - 0x000A:word16] = dx_564
	Mem574[ss:bp_1042 - 0x000C:word16] = ax_558
	word16 sp_567 = <invalid>
	Mem579[ss:sp_567 + 0x0002:word16] = 0x0000
	Mem581[ss:sp_567:word16] = 0x0000
	Mem584[ss:sp_567 - 2:word16] = Mem581[ss:bp_1042 - 0x0034:word16]
	Mem587[ss:sp_567 - 4:word16] = Mem584[ds_563:0x29E5:word16]
	Mem590[ss:sp_567 - 6:word16] = Mem587[ds_563:0x29E3:word16]
	word16 dx_2487
	word16 bx_592
	word16 cx_593
	fn0800_ACB3(ds_563, Mem590[ss:sp_567 - 6:segptr32], Mem590[ss:sp_567 - 2:ui32], Mem590[ss:sp_567 + 2:word16], out cx_593, out dx_2487, out bx_592)
	Mem605[ss:bp_1042 - 0x0036:word16] = Mem590[ss:bp_1042 - 0x000C:word16]
	word16 sp_600 = sp_567 + 0x0004
	word16 si_601 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_60D6:
	branch si_601 != Mem609[ss:bp_1042 - 0x0024:word16] l0800_6096
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6096:
	word16 sp_615 = sp_600 - 2
	Mem616[ss:sp_615:word16] = Mem609[ds_563:0x29E5:word16]
	Mem619[ss:sp_615 - 2:word16] = Mem616[ds_563:0x29E3:word16]
	selector ds_624
	byte ch_2492
	word16 di_2493
	Mem633[ss:bp_1042 - 0x0022:word16] = fn0800_3FAD(ds_563, Mem619[ss:sp_615 - 2:word32], out ch_2492, out di_2493, out ds_624)
	Mem636[ss:sp_615:word16] = Mem633[ds_624:0x29E5:word16]
	Mem639[ss:sp_615 - 2:word16] = Mem636[ds_624:0x29E3:word16]
	byte ch_2494
	word16 di_2495
	word16 ax_640 = fn0800_3FAD(ds_624, Mem639[ss:sp_615 - 2:word32], out ch_2494, out di_2495, out ds_563)
	byte cl_659
	word16 dx_660
	word16 ax_666 = fn0800_8C69(ax_640, 0x04, 0x0000, out cl_659, out dx_660) + Mem639[ss:bp_1042 - 0x0022:word16]
	selector es_670 = Mem639[ss:bp_1042 - 0x000A:selector]
	bx_592 = Mem639[ss:bp_1042 - 0x0036:word16]
	Mem672[es_670:bx_592 + 0x0002:word16] = dx_660 + (ax_666 <u 0x0000)
	Mem673[es_670:bx_592:word16] = ax_666
	Mem675[ss:bp_1042 - 0x0036:word16] = Mem673[ss:bp_1042 - 0x0036:word16] + 0x0004
	word16 cx_642 = <invalid>
	di_562 = ax_640
	sp_600 = <invalid>
	si_601 = si_601 + 0x0001
	cx_593 = SEQ(SLICE(cx_642, byte, 8), cl_659) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_60DB:
	word16 sp_680 = sp_600 - 2
	Mem681[ss:sp_680:word16] = 0x667B
	Mem684[ss:sp_680 - 2:word16] = 0x0004
	Mem687[ss:sp_680 - 4:word16] = Mem684[ss:bp_1042 - 0x0024:word16]
	Mem690[ss:sp_680 - 6:word16] = Mem687[ss:bp_1042 - 0x000A:word16]
	Mem693[ss:sp_680 - 8:word16] = Mem690[ss:bp_1042 - 0x000C:word16]
	fn0800_B95E(cx_593, bx_592, si_601, di_562, ds_563, Mem693[ss:sp_680 - 8:word16], Mem693[ss:sp_680 - 6:word16], Mem693[ss:sp_680 - 4:word16], Mem693[ss:sp_680 - 2:word16], Mem693[ss:sp_680:word16])
	word16 di_713 = Mem693[ss:bp_1042 - 0x000C:word16]
	Mem720[ss:bp_1042 - 0x0038:word16] = -false
	word16 sp_711 = sp_680 + 0x0002
	word16 si_2163 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_620C:
	branch si_2163 == Mem724[ss:bp_1042 - 0x0024:word16] l0800_6214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6214:
	word16 sp_729 = sp_711 - 2
	Mem730[ss:sp_729:word16] = Mem724[ss:bp_1042 - 0x000A:word16]
	Mem733[ss:sp_729 - 2:word16] = Mem730[ss:bp_1042 - 0x000C:word16]
	word16 cx_2524
	word16 dx_2525
	word16 bx_2526
	ah_1003 = SLICE(fn0800_4346(ds_563, Mem733[ss:sp_729:word16], out cx_2524, out dx_2525, out bx_2526, out ds_539), byte, 8) (alias)
	sp_547 = sp_729 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6211:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6104:
	selector es_747 = Mem724[ss:bp_1042 - 0x000A:selector]
	word16 ax_749 = Mem724[es_747:di_713 + 0x0002:word16]
	word16 dx_750 = Mem724[es_747:di_713:word16]
	Mem751[ss:bp_1042 - 0x0012:word16] = ax_749
	Mem752[ss:bp_1042 - 0x0014:word16] = dx_750
	Mem757[ss:bp_1042 - 0x000E:word16] = ax_749 & 0x000F
	Mem758[ss:bp_1042 - 0x0010:word16] = dx_750 & 0xFFF0
	word16 sp_760 = sp_711 - 2
	Mem761[ss:sp_760:word16] = Mem758[ds_563:0x29E1:word16]
	Mem764[ss:sp_760 - 2:word16] = Mem761[ds_563:0x29DF:word16]
	Mem769[ss:sp_760 - 4:word16] = SEQ(SLICE(ax_749 & 0x000F, byte, 8), 0x00)
	selector ds_776
	word16 cx_2527
	word16 dx_2528
	word16 bx_2529
	word16 di_2530
	fn0800_4047(ds_563, Mem769[ss:sp_760 - 4:byte], Mem769[ss:sp_760 - 2:segptr32], out cx_2527, out dx_2528, out bx_2529, out di_2530, out ds_776)
	Mem785[ss:sp_760:word16] = Mem769[ds_776:0x29E1:word16]
	Mem788[ss:sp_760 - 2:word16] = Mem785[ds_776:0x29DF:word16]
	word16 sp_796 = <invalid>
	word16 dx_2531
	Mem802[ss:sp_796 - 2:word16] = fn0800_8CAA(Mem788[ss:bp_1042 - 0x0010:word16], 0x04, Mem788[ss:bp_1042 - 0x000E:word16], out dx_2531)
	word16 dx_2532
	word16 di_806
	selector ds_807
	fn0800_40BF(ds_776, Mem802[ss:sp_796 - 2:word16], Mem802[ss:sp_796:word32], out dx_2532, out di_806, out ds_807)
	Mem816[ss:bp_1042 - 0x0022:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6150:
	selector es_820 = Mem819[ss:bp_1042 - 0x000A:selector]
	ui32 ax_dx_2179 = SEQ(Mem819[es_820:di_806 + 0x0002:word16], Mem819[es_820:di_806:word16]) - SEQ(Mem819[ss:bp_1042 - 0x000E:word16], Mem819[ss:bp_1042 - 0x0010:word16])
	Mem828[ss:bp_1042 - 0x0016:word16] = SLICE(ax_dx_2179, word16, 16)
	Mem829[ss:bp_1042 - 0x0018:word16] = (word16) ax_dx_2179
	Mem831[ss:bp_1042 - 0x0010:word16] = v101_830
	ui32 v102_v101_2181 = SEQ(Mem831[ss:bp_1042 - 0x000E:word16], Mem829[ss:bp_1042 - 0x0010:word16]) + ax_dx_2179
	Mem835[ss:bp_1042 - 0x000E:word16] = SLICE(v102_v101_2181, word16, 16)
	word16 v101_830 = (word16) v102_v101_2181
	branch Mem835[ss:bp_1042 - 0x0016:word16] >u 0x0000 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6172:
	branch Mem835[ss:bp_1042 - 0x0016:word16] != 0x0000 l0800_617B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6174:
	branch Mem835[ss:bp_1042 - 0x0018:word16] >u 0x00FF l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_617B:
	ui32 ax_dx_2177 = SEQ(Mem835[ss:bp_1042 - 0x000E:word16], Mem835[ss:bp_1042 - 0x0010:word16]) - SEQ(Mem835[ss:bp_1042 - 0x0012:word16], Mem835[ss:bp_1042 - 0x0014:word16])
	word16 ax_849 = SLICE(ax_dx_2177, word16, 16)
	word16 dx_846 = (word16) ax_dx_2177
	byte ah_877 = SLICE(ax_849, byte, 8)
	branch ax_849 >u 0x0000 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_618B:
	branch Test(ULT,false) l0800_6192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_618D:
	branch dx_846 >=u 0xFFF0 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6192:
	branch Mem835[ss:bp_1042 - 0x0022:word16] == 0x00FF l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6199:
	Mem870[ss:sp_796 + 0x0002:word16] = Mem835[ds_807:0x29E1:word16]
	Mem873[ss:sp_796:word16] = Mem870[ds_807:0x29DF:word16]
	Mem879[ss:sp_796 - 0x0002:word16] = SEQ(ah_877, Mem873[ss:bp_1042 - 0x0018:byte])
	word16 di_885
	word16 cx_2552
	word16 bx_2554
	word16 dx_2553
	fn0800_4047(ds_807, Mem879[ss:sp_796 - 0x0002:byte], Mem879[ss:sp_796:segptr32], out cx_2552, out dx_2553, out bx_2554, out di_885, out ds_807)
	Mem893[ss:bp_1042 - 0x0022:word16] = Mem879[ss:bp_1042 - 0x0022:word16] + 0x0001
	di_806 = di_885 + 0x0004
	si_2163 = si_2163 + 0x0001
	branch si_2163 != Mem893[ss:bp_1042 - 0x0024:word16] l0800_6150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_61B9:
	Mem906[ss:sp_796 + 0x0002:word16] = 0x0001
	word16 ax_911 = -(Mem906[ss:bp_1042 - 0x0022:word16] + 0x0003)
	Mem916[ss:sp_796:word16] = Mem906[ss:bp_1042 - 0x0038:word16] - (ax_911 == 0x0000)
	Mem918[ss:sp_796 - 0x0002:word16] = ax_911
	Mem922[ss:sp_796 - 0x0004:word16] = Mem918[ds_807:0x29E1:word16]
	Mem925[ss:sp_796 - 0x0006:word16] = Mem922[ds_807:0x29DF:word16]
	word16 bx_2545
	word16 cx_2543
	word16 dx_2544
	byte ah_945 = SLICE(fn0800_ACB3(ds_807, Mem925[ss:sp_796 - 0x0006:segptr32], Mem925[ss:sp_796 - 0x0002:ui32], Mem925[ss:sp_796 + 0x0002:word16], out cx_2543, out dx_2544, out bx_2545), byte, 8)
	Mem939[ss:sp_796 + 0x0002:word16] = Mem925[ds_807:0x29E1:word16]
	Mem942[ss:sp_796:word16] = Mem939[ds_807:0x29DF:word16]
	Mem947[ss:sp_796 - 0x0002:word16] = SEQ(ah_945, Mem942[ss:bp_1042 - 0x0022:byte])
	word16 cx_2546
	word16 dx_2547
	word16 bx_2548
	fn0800_4047(ds_807, Mem947[ss:sp_796 - 0x0002:byte], Mem947[ss:sp_796:segptr32], out cx_2546, out dx_2547, out bx_2548, out di_713, out ds_563)
	Mem962[ss:sp_796 + 0x0002:word16] = 0x0001
	word16 ax_963 = Mem962[ss:bp_1042 - 0x0022:word16]
	Mem971[ss:sp_796:word16] = SLICE(cond(ax_963 + 0x0002), bool, 1)
	Mem973[ss:sp_796 - 0x0002:word16] = ax_963 + 0x0002
	Mem976[ss:sp_796 - 0x0004:word16] = Mem973[ds_563:0x29E1:word16]
	Mem979[ss:sp_796 - 0x0006:word16] = Mem976[ds_563:0x29DF:word16]
	word16 cx_2549
	word16 dx_2550
	word16 bx_2551
	fn0800_ACB3(ds_563, Mem979[ss:sp_796 - 0x0006:segptr32], Mem979[ss:sp_796 - 0x0002:ui32], Mem979[ss:sp_796 + 0x0002:word16], out cx_2549, out dx_2550, out bx_2551)
	sp_711 = sp_796 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6061:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6220:
	word16 sp_995 = sp_547 - 2
	Mem997[ss:sp_995:word16] = Mem992[ds_539:0x29E1:word16]
	Mem1000[ss:sp_995 - 2:word16] = Mem997[ds_539:0x29DF:word16]
	Mem1007[ss:sp_995 - 4:word16] = SEQ(ah_1003, 0x00)
	word16 cx_2488
	word16 dx_2489
	word16 bx_2490
	word16 di_2491
	selector ds_1014
	fn0800_4047(ds_539, Mem1007[ss:sp_995 - 4:byte], Mem1007[ss:sp_995 - 2:segptr32], out cx_2488, out dx_2489, out bx_2490, out di_2491, out ds_1014)
	Mem1023[ss:sp_995:word16] = Mem1007[ds_1014:0x29E1:word16]
	Mem1026[ss:sp_995 - 2:word16] = Mem1023[ds_1014:0x29DF:word16]
	word16 dx_1030
	word16 ax_1027 = fn0800_AD2F(ds_1014, Mem1026[ss:sp_995 - 2:segptr32], out dx_1030)
	Mem1043[ss:bp_1042 - 0x001A:word16] = dx_1030 + 0xFF + (ax_1027 <u 0xFFE0)
	Mem1044[ss:bp_1042 - 0x001C:word16] = ax_1027 + 0xFFE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6266:
	word16 ax_1048 = Mem1047[ss:bp_1042 - 0x001C:word16]
	byte ah_1064 = SLICE(ax_1048 & 0x000F, byte, 8)
	branch (ax_1048 & 0x000F) != 0x0000 l0800_624D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_624D:
	word16 sp_1057 = sp_547 - 2
	Mem1058[ss:sp_1057:word16] = Mem1047[ds_1014:0x29E1:word16]
	Mem1061[ss:sp_1057 - 2:word16] = Mem1058[ds_1014:0x29DF:word16]
	Mem1066[ss:sp_1057 - 4:word16] = SEQ(ah_1064, 0x00)
	word16 di_2499
	word16 cx_2496
	word16 dx_2497
	word16 bx_2498
	fn0800_4047(ds_1014, Mem1066[ss:sp_1057 - 4:byte], Mem1066[ss:sp_1057 - 2:segptr32], out cx_2496, out dx_2497, out bx_2498, out di_2499, out ds_1014)
	word16 v163_1079 = Mem1066[ss:bp_1042 - 0x001C:word16] + 0x0001
	Mem1080[ss:bp_1042 - 0x001C:word16] = v163_1079
	Mem1084[ss:bp_1042 - 0x001A:word16] = Mem1080[ss:bp_1042 - 0x001A:word16] + (v163_1079 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6271:
	word16 v64_1089 = Mem1047[ss:bp_1042 - 0x0004:word16] - (Mem1047[ss:bp_1042 - 0x0026:word16] << 0x04)
	Mem1090[ss:bp_1042 - 0x0004:word16] = v64_1089
	Mem1094[ss:bp_1042 - 0x0002:word16] = Mem1090[ss:bp_1042 - 0x0002:word16] - (v64_1089 <u 0x0000)
	word16 sp_1096 = sp_547 - 2
	Mem1097[ss:sp_1096:word16] = 0x0000
	word16 ax_1098 = Mem1097[ss:bp_1042 - 0x0026:word16]
	Mem1104[ss:sp_1096 - 2:word16] = 0x0000
	Mem1106[ss:sp_1096 - 4:word16] = ax_1098 << 0x04
	Mem1109[ss:sp_1096 - 6:word16] = Mem1106[ds_1014:0x29E5:word16]
	Mem1112[ss:sp_1096 - 8:word16] = Mem1109[ds_1014:0x29E3:word16]
	word16 cx_2500
	word16 bx_2502
	word16 dx_2501
	fn0800_ACB3(ds_1014, Mem1112[ss:sp_1096 - 8:segptr32], Mem1112[ss:sp_1096 - 4:ui32], Mem1112[ss:sp_1096:word16], out cx_2500, out dx_2501, out bx_2502)
	Mem1126[ss:sp_1096:word16] = Mem1112[ss:bp_1042 - 0x0002:word16]
	Mem1129[ss:sp_1096 - 2:word16] = Mem1126[ss:bp_1042 - 0x0004:word16]
	Mem1132[ss:sp_1096 - 4:word16] = Mem1129[ss:bp_1042 - 0x0002:word16]
	Mem1135[ss:sp_1096 - 6:word16] = Mem1132[ss:bp_1042 - 0x0004:word16]
	word16 bp_1137
	selector ds_1141
	word16 si_2503
	word16 di_2504
	fn0800_75EA(ds_1014, Mem1135[ss:sp_1096 - 6:word16], Mem1135[ss:sp_1096 - 4:word16], Mem1135[ss:sp_1096 - 2:word16], Mem1135[ss:sp_1096:word16], out bp_1137, out si_2503, out di_2504, out ds_1141)
	word16 sp_1145 = <invalid>
	Mem1155[ss:sp_1145 + 0x0006:word16] = 0x0000
	Mem1158[ss:sp_1145 + 0x0004:word16] = 0x0000
	Mem1160[ss:sp_1145 + 0x0002:word16] = 0x0020
	Mem1163[ss:sp_1145:word16] = Mem1160[ds_1141:0x29E1:word16]
	Mem1166[ss:sp_1145 - 2:word16] = Mem1163[ds_1141:0x29DF:word16]
	word16 dx_2506
	word16 bx_2507
	word16 cx_2505
	fn0800_ACB3(ds_1141, Mem1166[ss:sp_1145 - 2:segptr32], Mem1166[ss:sp_1145 + 2:ui32], Mem1166[ss:sp_1145 + 6:word16], out cx_2505, out dx_2506, out bx_2507)
	Mem1180[ss:sp_1145 + 0x0006:word16] = Mem1166[ds_1141:0x29E1:word16]
	Mem1183[ss:sp_1145 + 0x0004:word16] = Mem1180[ds_1141:0x29DF:word16]
	Mem1186[ss:sp_1145 + 0x0002:word16] = Mem1183[ss:bp_1137 - 0x0030:word16]
	selector ds_1191
	word16 dx_2508
	word16 di_2509
	fn0800_40BF(ds_1141, Mem1186[ss:sp_1145 + 0x0002:word16], Mem1186[ss:sp_1145 + 0x0004:word32], out dx_2508, out di_2509, out ds_1191)
	Mem1202[ss:sp_1145 + 0x0006:word16] = Mem1186[ds_1191:0x29E1:word16]
	Mem1205[ss:sp_1145 + 0x0004:word16] = Mem1202[ds_1191:0x29DF:word16]
	Mem1208[ss:sp_1145 + 0x0002:word16] = Mem1205[ss:bp_1137 - 0x0032:word16]
	selector ds_1213
	word16 dx_2510
	word16 di_2511
	fn0800_40BF(ds_1191, Mem1208[ss:sp_1145 + 0x0002:word16], Mem1208[ss:sp_1145 + 0x0004:word32], out dx_2510, out di_2511, out ds_1213)
	Mem1224[ss:sp_1145 + 0x0006:word16] = Mem1208[ds_1213:0x29E1:word16]
	Mem1227[ss:sp_1145 + 0x0004:word16] = Mem1224[ds_1213:0x29DF:word16]
	Mem1230[ss:sp_1145 + 0x0002:word16] = Mem1227[ss:bp_1137 - 0x002E:word16]
	selector ds_1235
	word16 dx_2512
	word16 di_2513
	fn0800_40BF(ds_1213, Mem1230[ss:sp_1145 + 0x0002:word16], Mem1230[ss:sp_1145 + 0x0004:word32], out dx_2512, out di_2513, out ds_1235)
	Mem1246[ss:sp_1145 + 0x0006:word16] = Mem1230[ds_1235:0x29E1:word16]
	Mem1249[ss:sp_1145 + 0x0004:word16] = Mem1246[ds_1235:0x29DF:word16]
	Mem1252[ss:sp_1145 + 0x0002:word16] = Mem1249[ss:bp_1137 - 0x002C:word16]
	selector ds_1257
	word16 dx_2514
	word16 di_2515
	fn0800_40BF(ds_1235, Mem1252[ss:sp_1145 + 0x0002:word16], Mem1252[ss:sp_1145 + 0x0004:word32], out dx_2514, out di_2515, out ds_1257)
	Mem1268[ss:sp_1145 + 0x0006:word16] = Mem1252[ds_1257:0x29E1:word16]
	Mem1271[ss:sp_1145 + 0x0004:word16] = Mem1268[ds_1257:0x29DF:word16]
	Mem1274[ss:sp_1145 + 0x0002:word16] = Mem1271[ss:bp_1137 - 0x001C:word16]
	selector ds_1279
	word16 dx_2516
	word16 di_2517
	fn0800_40BF(ds_1257, Mem1274[ss:sp_1145 + 0x0002:word16], Mem1274[ss:sp_1145 + 0x0004:word32], out dx_2516, out di_2517, out ds_1279)
	word16 dx_2518
	Mem1300[ss:bp_1137 - 0x0022:word16] = fn0800_8CAA(Mem1274[ds_1279:0x2A03:word16], 0x04, Mem1274[ds_1279:0x2A05:word16], out dx_2518)
	word16 sp_1295 = <invalid>
	branch (Mem1300[ds_1279:0x2A03:word16] & 0x000F) == 0x0000 l0800_6333
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6330:
	Mem1308[ss:bp_1137 - 0x0022:word16] = Mem1300[ss:bp_1137 - 0x0022:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6333:
	Mem1316[ss:sp_1295 - 2:word16] = Mem1311[ds_1279:0x29E1:word16]
	Mem1319[ss:sp_1295 - 4:word16] = Mem1316[ds_1279:0x29DF:word16]
	Mem1323[ss:sp_1295 - 6:word16] = Mem1319[ss:bp_1137 - 0x0022:word16]
	selector ds_1328
	word16 dx_2519
	word16 di_2520
	fn0800_40BF(ds_1279, Mem1323[ss:sp_1295 - 6:word16], Mem1323[ss:sp_1295 - 4:word32], out dx_2519, out di_2520, out ds_1328)
	Mem1339[ss:sp_1295 - 2:word16] = Mem1323[ds_1328:0x29E1:word16]
	Mem1342[ss:sp_1295 - 4:word16] = Mem1339[ds_1328:0x29DF:word16]
	word16 sp_1350 = <invalid>
	word16 dx_2521
	Mem1359[ss:sp_1350 - 2:word16] = Mem1342[ss:bp_1137 - 0x0022:word16] + fn0800_8CAA(Mem1342[ss:bp_1137 - 0x001C:word16], 0x04, Mem1342[ss:bp_1137 - 0x001A:word16], out dx_2521)
	selector ds_1364
	word16 dx_2522
	word16 di_2523
	fn0800_40BF(ds_1328, Mem1359[ss:sp_1350 - 2:word16], Mem1359[ss:sp_1350:word32], out dx_2522, out di_2523, out ds_1364)
	ui32 ax_dx_2173 = SEQ(Mem1359[ss:bp_1137 - 0x0002:word16], Mem1359[ss:bp_1137 - 0x0004:word16]) - SEQ(Mem1359[ds_1364:0x2A05:word16], Mem1359[ds_1364:0x2A03:word16]) + SEQ(Mem1359[ds_1364:0x4E8A:word16], Mem1359[ds_1364:0x4E88:word16])
	word16 dx_1378 = (word16) ax_dx_2173
	Mem1386[ss:bp_1137 - 0x0006:word16] = SLICE(ax_dx_2173, word16, 16) + (dx_1378 <u 0x0080)
	Mem1387[ss:bp_1137 - 0x0008:word16] = dx_1378 + 0x0080
	branch Mem1387[ds_1364:0x2A1D:word16] == 0x0000 l0800_6398
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6398:
	branch Mem1387[ds_1364:0x2A21:word16] != 0x0001 l0800_63A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_639F:
	word16 v153_1392 = Mem1387[ss:bp_1137 - 0x0008:word16] + 0x0180
	Mem1393[ss:bp_1137 - 0x0008:word16] = v153_1392
	Mem1397[ss:bp_1137 - 0x0006:word16] = Mem1393[ss:bp_1137 - 0x0006:word16] + (v153_1392 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_638D:
	word16 v95_1399 = Mem1387[ss:bp_1137 - 0x0008:word16] + 0x0200
	Mem1400[ss:bp_1137 - 0x0008:word16] = v95_1399
	Mem1404[ss:bp_1137 - 0x0006:word16] = Mem1400[ss:bp_1137 - 0x0006:word16] + (v95_1399 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_63A8:
	Mem1410[ss:sp_1350 + 0x0002:word16] = 0x0000
	word16 bx_1417 = Mem1410[ss:bp_1137 - 0x0004:word16] + (Mem1410[ss:bp_1137 - 0x0026:word16] << 0x04)
	Mem1423[ss:sp_1350:word16] = Mem1410[ss:bp_1137 - 0x0002:word16] + (bx_1417 <u 0x0000)
	Mem1425[ss:sp_1350 - 2:word16] = bx_1417
	Mem1429[ss:sp_1350 - 4:word16] = Mem1425[ds_1364:0x29E5:word16]
	Mem1432[ss:sp_1350 - 6:word16] = Mem1429[ds_1364:0x29E3:word16]
	word16 cx_2533
	word16 bx_2535
	word16 dx_2534
	fn0800_ACB3(ds_1364, Mem1432[ss:sp_1350 - 6:segptr32], Mem1432[ss:sp_1350 - 2:ui32], Mem1432[ss:sp_1350 + 2:word16], out cx_2533, out dx_2534, out bx_2535)
	Mem1445[ss:sp_1350 + 0x0002:word16] = 0x0002
	Mem1450[ss:sp_1350:word16] = 0x0000
	Mem1452[ss:sp_1350 - 2:word16] = 0x0000
	Mem1455[ss:sp_1350 - 4:word16] = Mem1452[ds_1364:0x29E1:word16]
	Mem1458[ss:sp_1350 - 6:word16] = Mem1455[ds_1364:0x29DF:word16]
	word16 cx_2536
	word16 bx_2538
	word16 dx_2537
	fn0800_ACB3(ds_1364, Mem1458[ss:sp_1350 - 6:segptr32], Mem1458[ss:sp_1350 - 2:ui32], Mem1458[ss:sp_1350 + 2:word16], out cx_2536, out dx_2537, out bx_2538)
	Mem1472[ss:sp_1350 + 0x0002:word16] = Mem1458[ds_1364:0x29E1:word16]
	Mem1475[ss:sp_1350:word16] = Mem1472[ds_1364:0x29DF:word16]
	word16 dx_1479
	word16 ax_1476 = fn0800_AD2F(ds_1364, Mem1475[ss:sp_1350:segptr32], out dx_1479)
	Mem1486[ss:bp_1137 - 0x001E:word16] = dx_1479
	Mem1487[ss:bp_1137 - 0x0020:word16] = ax_1476
	ui32 dx_bx_2175 = SEQ(Mem1487[ds_1364:0x2A09:word16], Mem1487[ds_1364:0x2A07:word16]) - SEQ(Mem1487[ss:bp_1137 - 0x0002:word16], Mem1487[ss:bp_1137 - 0x0004:word16])
	word16 bx_1497 = (word16) dx_bx_2175 - (Mem1487[ss:bp_1137 - 0x0026:word16] << 0x04)
	Mem1503[ss:sp_1350 + 0x0002:word16] = SLICE(dx_bx_2175, word16, 16) - (bx_1497 <u 0x0000)
	Mem1505[ss:sp_1350:word16] = bx_1497
	Mem1508[ss:sp_1350 - 2:word16] = Mem1505[ds_1364:0x29E1:word16]
	Mem1511[ss:sp_1350 - 4:word16] = Mem1508[ds_1364:0x29DF:word16]
	Mem1514[ss:sp_1350 - 6:word16] = Mem1511[ds_1364:0x29E5:word16]
	Mem1517[ss:sp_1350 - 8:word16] = Mem1514[ds_1364:0x29E3:word16]
	word16 bp_1519
	selector ds_1523
	word16 dx_2539
	word16 si_2540
	word16 di_2541
	fn0800_3B0A(ds_1364, Mem1517[ss:sp_1350:word16], Mem1517[ss:sp_1350 + 2:word16], out dx_2539, out bp_1519, out si_2540, out di_2541, out ds_1523)
	Mem1537[ss:bp_1519 - 0x0022:word16] = Mem1517[ss:bp_1519 - 0x0020:word16] & 0x01FF
	word16 dx_2542
	fn0800_8CAA(Mem1537[ss:bp_1519 - 0x0020:word16], 0x09, Mem1537[ss:bp_1519 - 0x001E:word16], out dx_2542)
	word16 sp_1545 = <invalid>
	branch Mem1537[ss:bp_1519 - 0x0022:word16] == 0x0000 l0800_6446
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6445:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6446:
	Mem1561[ss:sp_1545 - 2:word16] = 0x0000
	Mem1564[ss:sp_1545 - 4:word16] = 0x0000
	Mem1566[ss:sp_1545 - 6:word16] = 0x0002
	Mem1570[ss:sp_1545 - 8:word16] = Mem1566[ds_1523:0x29E1:word16]
	Mem1573[ss:sp_1545 - 10:word16] = Mem1570[ds_1523:0x29DF:word16]
	word16 cx_2555
	word16 dx_2556
	word16 bx_2557
	fn0800_ACB3(ds_1523, Mem1573[ss:sp_1545 - 10:segptr32], Mem1573[ss:sp_1545 - 6:ui32], Mem1573[ss:sp_1545 - 2:word16], out cx_2555, out dx_2556, out bx_2557)
	Mem1587[ss:sp_1545 - 2:word16] = Mem1573[ds_1523:0x29E1:word16]
	Mem1590[ss:sp_1545 - 4:word16] = Mem1587[ds_1523:0x29DF:word16]
	Mem1594[ss:sp_1545 - 6:word16] = Mem1590[ss:bp_1519 - 0x0022:word16]
	word16 di_1598
	selector ds_1599
	word16 dx_2558
	fn0800_40BF(ds_1523, Mem1594[ss:sp_1545 - 6:word16], Mem1594[ss:sp_1545 - 4:word32], out dx_2558, out di_1598, out ds_1599)
	Mem1610[ss:sp_1545 - 2:word16] = Mem1594[ds_1599:0x29E1:word16]
	Mem1613[ss:sp_1545 - 4:word16] = Mem1610[ds_1599:0x29DF:word16]
	Mem1615[ss:sp_1545 - 6:word16] = di_1598
	word16 dx_2559
	word16 di_2560
	selector ds_1620
	fn0800_40BF(ds_1599, Mem1615[ss:sp_1545 - 6:word16], Mem1615[ss:sp_1545 - 4:word32], out dx_2559, out di_2560, out ds_1620)
	branch Mem1615[ds_1620:0x2A1D:word16] == 0x0000 l0800_64B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6483:
	Mem1634[ss:sp_1545 - 2:word16] = 0x0000
	Mem1637[ss:sp_1545 - 4:word16] = 0x0000
	Mem1639[ss:sp_1545 - 6:word16] = 0x002E
	Mem1642[ss:sp_1545 - 8:word16] = Mem1639[ds_1620:0x29E1:word16]
	Mem1645[ss:sp_1545 - 10:word16] = Mem1642[ds_1620:0x29DF:word16]
	word16 bx_2578
	word16 cx_2576
	word16 dx_2577
	fn0800_ACB3(ds_1620, Mem1645[ss:sp_1545 - 10:segptr32], Mem1645[ss:sp_1545 - 6:ui32], Mem1645[ss:sp_1545 - 2:word16], out cx_2576, out dx_2577, out bx_2578)
	Mem1659[ss:sp_1545 - 2:word16] = Mem1645[ds_1620:0x29E1:word16]
	Mem1662[ss:sp_1545 - 4:word16] = Mem1659[ds_1620:0x29DF:word16]
	Mem1665[ss:sp_1545 - 6:word16] = Mem1662[ss:bp_1519 - 0x0022:word16]
	word16 di_1669
	selector ds_1670
	word16 dx_2579
	fn0800_40BF(ds_1620, Mem1665[ss:sp_1545 - 6:word16], Mem1665[ss:sp_1545 - 4:word32], out dx_2579, out di_1669, out ds_1670)
	Mem1681[ss:sp_1545 - 2:word16] = Mem1665[ds_1670:0x29E1:word16]
	Mem1684[ss:sp_1545 - 4:word16] = Mem1681[ds_1670:0x29DF:word16]
	Mem1686[ss:sp_1545 - 6:word16] = di_1669
	word16 dx_2580
	word16 di_2581
	fn0800_40BF(ds_1670, Mem1686[ss:sp_1545 - 6:word16], Mem1686[ss:sp_1545 - 4:word32], out dx_2580, out di_2581, out ds_1620)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_64B9:
	Mem1706[ss:sp_1545 - 2:word16] = 0x0000
	Mem1709[ss:sp_1545 - 4:word16] = 0x0000
	Mem1711[ss:sp_1545 - 6:word16] = 0x0018
	Mem1715[ss:sp_1545 - 8:word16] = Mem1711[ds_1620:0x29E1:word16]
	Mem1718[ss:sp_1545 - 10:word16] = Mem1715[ds_1620:0x29DF:word16]
	word16 cx_2561
	word16 dx_2562
	word16 bx_2563
	fn0800_ACB3(ds_1620, Mem1718[ss:sp_1545 - 10:segptr32], Mem1718[ss:sp_1545 - 6:ui32], Mem1718[ss:sp_1545 - 2:word16], out cx_2561, out dx_2562, out bx_2563)
	Mem1731[ss:sp_1545 - 2:word16] = Mem1718[ds_1620:0x29E1:word16]
	Mem1734[ss:sp_1545 - 4:word16] = Mem1731[ds_1620:0x29DF:word16]
	Mem1747[ss:sp_1545 - 6:word16] = ((uint16) (uint8) Mem1734[ds_1620:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem1734[ds_1620:0x2E76:byte]) - 0x0020
	selector ds_1752
	word16 di_2565
	word16 dx_2564
	fn0800_40BF(ds_1620, Mem1747[ss:sp_1545 - 6:word16], Mem1747[ss:sp_1545 - 4:word32], out dx_2564, out di_2565, out ds_1752)
	Mem1764[ss:sp_1545 - 2:word16] = 0x0000
	Mem1767[ss:sp_1545 - 4:word16] = 0x0000
	Mem1769[ss:sp_1545 - 6:word16] = 0x001C
	Mem1772[ss:sp_1545 - 8:word16] = Mem1769[ds_1752:0x29E1:word16]
	Mem1775[ss:sp_1545 - 10:word16] = Mem1772[ds_1752:0x29DF:word16]
	word16 cx_2566
	word16 bx_2568
	word16 dx_2567
	fn0800_ACB3(ds_1752, Mem1775[ss:sp_1545 - 10:segptr32], Mem1775[ss:sp_1545 - 6:ui32], Mem1775[ss:sp_1545 - 2:word16], out cx_2566, out dx_2567, out bx_2568)
	Mem1789[ss:sp_1545 - 2:word16] = Mem1775[ds_1752:0x29E1:word16]
	Mem1792[ss:sp_1545 - 4:word16] = Mem1789[ds_1752:0x29DF:word16]
	Mem1796[ss:sp_1545 - 6:word16] = Mem1792[ss:bp_1519 - 0x0028:word16]
	selector ds_1801
	word16 dx_2569
	word16 di_2570
	fn0800_40BF(ds_1752, Mem1796[ss:sp_1545 - 6:word16], Mem1796[ss:sp_1545 - 4:word32], out dx_2569, out di_2570, out ds_1801)
	Mem1812[ss:sp_1545 - 2:word16] = Mem1796[ds_1801:0x29E1:word16]
	Mem1815[ss:sp_1545 - 4:word16] = Mem1812[ds_1801:0x29DF:word16]
	Mem1818[ss:sp_1545 - 6:word16] = Mem1815[ss:bp_1519 - 0x002A:word16]
	selector ds_1823
	word16 di_2572
	word16 dx_2571
	fn0800_40BF(ds_1801, Mem1818[ss:sp_1545 - 6:word16], Mem1818[ss:sp_1545 - 4:word32], out dx_2571, out di_2572, out ds_1823)
	Mem1835[ss:sp_1545 - 2:word16] = 0x0000
	Mem1838[ss:sp_1545 - 4:word16] = 0x0000
	Mem1840[ss:sp_1545 - 6:word16] = 0x000A
	Mem1843[ss:sp_1545 - 8:word16] = Mem1840[ds_1823:0x29E1:word16]
	Mem1846[ss:sp_1545 - 10:word16] = Mem1843[ds_1823:0x29DF:word16]
	word16 cx_2573
	word16 dx_2574
	word16 bx_2575
	fn0800_ACB3(ds_1823, Mem1846[ss:sp_1545 - 10:segptr32], Mem1846[ss:sp_1545 - 6:ui32], Mem1846[ss:sp_1545 - 2:word16], out cx_2573, out dx_2574, out bx_2575)
	word16 cx_1867 = Mem1846[ss:bp_1519 - 0x0020:word16]
	word16 bx_1862 = Mem1846[ss:bp_1519 - 0x0004:word16] + (Mem1846[ss:bp_1519 - 0x0028:word16] << 0x04)
	word16 cx_1872 = cx_1867 - 0x0020 + Mem1846[ss:bp_1519 - 0x0008:word16]
	word16 dx_1865 = Mem1846[ss:bp_1519 - 0x0002:word16] + (bx_1862 <u 0x0000)
	word16 ax_1875 = Mem1846[ss:bp_1519 - 0x001E:word16] - (cx_1867 <u 0x0020) + Mem1846[ss:bp_1519 - 0x0006:word16] + (cx_1872 <u 0x0000)
	branch dx_1865 <u ax_1875 l0800_659C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6568:
	branch dx_1865 >u ax_1875 l0800_656E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_656A:
	branch bx_1862 <=u cx_1872 l0800_659C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_656E:
	word16 cx_1894 = Mem1846[ss:bp_1519 - 0x0020:word16]
	word16 bx_1889 = Mem1846[ss:bp_1519 - 0x0004:word16] + (Mem1846[ss:bp_1519 - 0x0028:word16] << 0x04)
	word16 cx_1899 = cx_1894 - 0x0020 + Mem1846[ss:bp_1519 - 0x0008:word16]
	ui32 dx_bx_2185 = SEQ(Mem1846[ss:bp_1519 - 0x0002:word16] + (bx_1889 <u 0x0000), bx_1889) - SEQ(((Mem1846[ss:bp_1519 - 0x001E:word16] - (cx_1894 <u 0x0020)) + Mem1846[ss:bp_1519 - 0x0006:word16]) + (cx_1899 <u 0x0000), cx_1899)
	Mem1908[ss:bp_1519 - 0x0008:word16] = v151_1907
	ui32 v152_v151_2187 = SEQ(Mem1908[ss:bp_1519 - 0x0006:word16], Mem1846[ss:bp_1519 - 0x0008:word16]) + dx_bx_2185
	Mem1912[ss:bp_1519 - 0x0006:word16] = SLICE(v152_v151_2187, word16, 16)
	word16 v151_1907 = (word16) v152_v151_2187
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_659C:
	0x00000010 = 0x00000010
	word16 v157_1924 = Mem1918[ss:bp_1519 - 0x0008:word16] + ((word16) (0x00000010 - SEQ(Mem1918[ss:bp_1519 - 0x0006:word16], Mem1918[ss:bp_1519 - 0x0008:word16])) & 0x000F)
	Mem1925[ss:bp_1519 - 0x0008:word16] = v157_1924
	Mem1929[ss:bp_1519 - 0x0006:word16] = Mem1925[ss:bp_1519 - 0x0006:word16] + (v157_1924 <u 0x0000)
	word16 dx_2582
	word16 ax_1934 = fn0800_8CAA(Mem1929[ss:bp_1519 - 0x0008:word16], 0x04, Mem1929[ss:bp_1519 - 0x0006:word16], out dx_2582)
	Mem1943[ss:bp_1519 - 0x0028:word16] = ax_1934
	word16 sp_1938 = <invalid>
	Mem1948[ss:sp_1938 - 2:word16] = Mem1943[ds_1823:0x29E1:word16]
	Mem1951[ss:sp_1938 - 4:word16] = Mem1948[ds_1823:0x29DF:word16]
	Mem1953[ss:sp_1938 - 6:word16] = ax_1934
	word16 di_2584
	word16 dx_2583
	selector ds_1958
	fn0800_40BF(ds_1823, Mem1953[ss:sp_1938 - 6:word16], Mem1953[ss:sp_1938 - 4:word32], out dx_2583, out di_2584, out ds_1958)
	branch Mem1953[ss:bp_1519 - 0x002A:word16] >=u Mem1953[ss:bp_1519 - 0x0028:word16] l0800_65DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_65D6:
	Mem1970[ss:bp_1519 - 0x002A:word16] = Mem1953[ss:bp_1519 - 0x0028:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_65DC:
	Mem1977[ss:sp_1938 - 2:word16] = Mem1972[ds_1958:0x29E1:word16]
	Mem1980[ss:sp_1938 - 4:word16] = Mem1977[ds_1958:0x29DF:word16]
	Mem1984[ss:sp_1938 - 6:word16] = Mem1980[ss:bp_1519 - 0x002A:word16]
	word16 di_2586
	selector ds_1989
	word16 dx_2585
	fn0800_40BF(ds_1958, Mem1984[ss:sp_1938 - 6:word16], Mem1984[ss:sp_1938 - 4:word32], out dx_2585, out di_2586, out ds_1989)
	ui32 dx_ax_2189 = SEQ(Mem1984[ss:bp_1519 - 0x0002:word16], Mem1984[ss:bp_1519 - 0x0004:word16]) + SEQ(Mem1984[ds_1989:0x4E8A:word16], Mem1984[ds_1989:0x4E88:word16])
	word16 ax_1999 = (word16) dx_ax_2189
	word16 dx_2587
	word16 ax_2009 = fn0800_8CAA(ax_1999 + 0x0020, 0x04, SLICE(dx_ax_2189, word16, 16) + (ax_1999 <u 0x0020), out dx_2587)
	Mem2018[ss:bp_1519 - 0x002C:word16] = ax_2009
	word16 sp_2013 = <invalid>
	Mem2021[ss:sp_2013 - 2:word16] = Mem2018[ds_1989:0x29E1:word16]
	Mem2024[ss:sp_2013 - 4:word16] = Mem2021[ds_1989:0x29DF:word16]
	Mem2026[ss:sp_2013 - 6:word16] = ax_2009
	word16 di_2589
	word16 dx_2588
	selector ds_2031
	fn0800_40BF(ds_1989, Mem2026[ss:sp_2013 - 6:word16], Mem2026[ss:sp_2013 - 4:word32], out dx_2588, out di_2589, out ds_2031)
	Mem2041[ss:bp_1519 - 0x002E:word16] = Mem2026[ss:bp_1519 - 0x001C:word16] + 0x0080
	branch Mem2041[ds_2031:0x2A1D:word16] == 0x0000 l0800_662F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_662F:
	branch Mem2041[ds_2031:0x2A21:word16] != 0x0001 l0800_663B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6636:
	Mem2047[ss:bp_1519 - 0x002E:word16] = Mem2041[ss:bp_1519 - 0x002E:word16] + 0x0180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6628:
	Mem2050[ss:bp_1519 - 0x002E:word16] = Mem2041[ss:bp_1519 - 0x002E:word16] + 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_663B:
	Mem2058[ss:sp_2013 - 2:word16] = Mem2053[ds_2031:0x29E1:word16]
	Mem2061[ss:sp_2013 - 4:word16] = Mem2058[ds_2031:0x29DF:word16]
	Mem2065[ss:sp_2013 - 6:word16] = Mem2061[ss:bp_1519 - 0x002E:word16]
	word16 dx_2590
	selector ds_2070
	word16 di_2591
	fn0800_40BF(ds_2031, Mem2065[ss:sp_2013 - 6:word16], Mem2065[ss:sp_2013 - 4:word32], out dx_2590, out di_2591, out ds_2070)
	ui32 dx_bx_2191 = SEQ(Mem2065[ds_2070:0x2A09:word16], Mem2065[ds_2070:0x2A07:word16]) - SEQ(Mem2065[ss:bp_1519 - 0x0002:word16], Mem2065[ss:bp_1519 - 0x0004:word16])
	word16 bx_2087 = (word16) dx_bx_2191 - (Mem2065[ss:bp_1519 - 0x0026:word16] << 0x04)
	word16 dx_2090 = SLICE(dx_bx_2191, word16, 16) - (bx_2087 <u 0x0000)
	branch (bx_2087 | dx_2090) == 0x0000 l0800_6673
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6673:
	word16 di_2098 = Mem2065[ss:sp_2013:word16]
	word16 bp_2102 = Mem2065[ss:bp_1519:word16]
	dxOut = dx_2090
	bpOut = bp_2102
	diOut = di_2098
	dsOut = ds_2070
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_666A:
	word16 di_2105 = Mem2065[ss:sp_2013:word16]
	word16 bp_2109 = Mem2065[ss:bp_1519:word16]
	dxOut = dx_2090
	bpOut = bp_2109
	diOut = di_2105
	dsOut = ds_2070
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EE4:
	word16 di_2115 = Mem130[ss:sp_127:word16]
	word16 bp_2120 = Mem130[ss:bp_1042:word16]
	dxOut = 0x0000
	bpOut = bp_2120
	diOut = di_2115
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5E64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB1_1:
	Mem2125[ds:di_2124:byte] = 0x00
	di_2124 = di_2124 + 0x0001
	cx_2127 = cx_2127 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAB_1:
	Mem2134[ds:di_2124:byte] = Mem2130[ds:si_2129:byte]
	si_2129 = si_2129 + 0x0001
	di_2124 = di_2124 + 0x0001
	cx_2137 = cx_2137 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA7_1:
	Mem2144[ds:di_2124:word16] = Mem2140[ds:si_2129:word16]
	si_2129 = si_2129 + 0x0002
	di_2124 = di_2124 + 0x0002
	cx_2147 = cx_2147 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_669C(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_669C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_669C:
	word16 bp_121 = fp - 2
	branch Mem15[ds:0x2A09:word16] <u 0x0000 l0800_66BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66AB:
	branch Mem15[ds:0x2A09:word16] >u 0x0000 l0800_66B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66AD:
	branch Mem15[ds:0x2A07:word16] <=u 0xFEFE l0800_66BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66BE:
	word16 sp_135 = fp - 0x000A
	word16 di_29 = 0x2206
	word16 si_30 = 0x4271
	word16 cx_31 = 0x0004
	branch true l0800_66D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D0:
	cx_31 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D2:
	word16 ax_36 = 0x0000
	bool Z_49 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D4:
	branch cx_31 == 0x0000 l0800_66D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D4_1:
	Z_49 = SLICE(cond(Mem26[ds:si_455:byte] - Mem26[ds:di_456:byte]), bool, 2) (alias)
	si_30 = si_455 + 0x0001
	di_29 = di_456 + 0x0001
	cx_31 = cx_31 - 0x0001
	si_455 = si_30
	di_456 = di_29
	branch Mem26[ds:si_455:byte] != Mem26[ds:di_456:byte] l0800_66D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D6:
	branch Z_49 l0800_66DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D8:
	ax_36 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66DD:
	branch ax_36 == 0x0000 l0800_6715
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66E1:
	word16 di_291 = 0x4271
	word16 si_296 = 0x2206
	word16 cx_85 = 0x0004
	word16 dx_334 = 0xFFFF
	branch true l0800_66F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F3:
	cx_85 = 0x0003
	dx_334 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F7:
	word16 cx_94 = cx_85 >>u 0x0001
	cx_314 = cx_94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F9:
	word16 cx_314
	branch cx_314 == 0x0000 l0800_66FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FB:
	word16 cx_100 = cx_314 * 0x0002 + (cx_94 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FD:
	branch cx_100 == 0x0000 l0800_66FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FF:
	word16 cx_102 = dx_334
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6703:
	branch cx_102 == 0x0000 l0800_6705
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6705:
	fn0800_09A3(ds, out bp_121, out ds)
	word16 sp_129 = <invalid>
	sp_135 = sp_129 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6715:
	word16 sp_143 = sp_135 - 2
	Mem145[ss:sp_143:word16] = Mem138[ds:0x29E1:word16]
	Mem148[ss:sp_143 - 2:word16] = Mem145[ds:0x29DF:word16]
	word16 ax_157 = ((uint16) (uint8) Mem148[ds:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem148[ds:0x2E76:byte])
	Mem162[ss:sp_143 - 4:word16] = 0x0000
	Mem164[ss:sp_143 - 6:word16] = ax_157
	Mem166[ss:sp_143 - 8:word16] = ds
	Mem169[ss:sp_143 - 10:word16] = 0x2E77
	selector ds_174
	word16 si_451
	word16 di_452
	fn0800_4152(ds, Mem169[ss:sp_143 - 10:word32], Mem169[ss:sp_143 - 6:word16], Mem169[ss:sp_143 - 4:word16], Mem169[ss:sp_143 - 2:word32], out si_451, out di_452, out ds_174)
	word16 bx_194 = Mem169[ds_174:0x2A07:word16] + (((uint16) ((uint8) Mem169[ds_174:0x2E75:byte]) << 0x08) + (uint16) ((uint8) Mem169[ds_174:0x2E76:byte]))
	word16 dx_201 = Mem169[ds_174:0x2A09:word16] + (bx_194 <u 0x0000) + (bx_194 <u 0x0040)
	Mem208[ss:bp_121 - 0x0002:word16] = dx_201
	Mem209[ss:bp_121 - 0x0004:word16] = bx_194 + 0x0040
	branch Mem209[ds_174:0x2A1D:word16] == 0x0000 l0800_6779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6779:
	branch Mem209[ds_174:0x2A21:word16] != 0x0001 l0800_6789
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6780:
	word16 v28_214 = Mem209[ss:bp_121 - 0x0004:word16] + 0x0180
	Mem215[ss:bp_121 - 0x0004:word16] = v28_214
	Mem219[ss:bp_121 - 0x0002:word16] = Mem215[ss:bp_121 - 0x0002:word16] + (v28_214 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_676E:
	word16 v25_221 = Mem209[ss:bp_121 - 0x0004:word16] + 0x0200
	Mem222[ss:bp_121 - 0x0004:word16] = v25_221
	Mem226[ss:bp_121 - 0x0002:word16] = Mem222[ss:bp_121 - 0x0002:word16] + (v25_221 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6789:
	branch Mem230[ss:bp_121 - 0x0002:word16] <u 0x0000 l0800_67A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_678F:
	branch Mem230[ss:bp_121 - 0x0002:word16] >u 0x0000 l0800_6798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6791:
	branch Mem230[ss:bp_121 - 0x0004:word16] <=u 0xFEFE l0800_67A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67A1:
	Mem244[ss:sp_143:word16] = Mem230[ds_174:0x2A09:word16]
	Mem247[ss:sp_143 - 2:word16] = Mem244[ds_174:0x2A07:word16]
	Mem250[ss:sp_143 - 4:word16] = Mem247[ds_174:0x2A09:word16]
	Mem253[ss:sp_143 - 6:word16] = Mem250[ds_174:0x2A07:word16]
	word16 bp_255
	selector ds_259
	word16 si_453
	word16 di_454
	word16 dx_260 = fn0800_75EA(ds_174, Mem253[ss:sp_143 - 6:word16], Mem253[ss:sp_143 - 4:word16], Mem253[ss:sp_143 - 2:word16], Mem253[ss:sp_143:word16], out bp_255, out si_453, out di_454, out ds_259)
	word16 sp_263 = <invalid>
	word16 di_272 = Mem253[ss:sp_263 + 0x0008:word16]
	word16 bp_276 = Mem253[ss:bp_255:word16]
	dxOut = dx_260
	bpOut = bp_276
	diOut = di_272
	dsOut = ds_259
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6798:
	word16 di_282 = Mem230[ss:sp_143 + 0x0002:word16]
	word16 bp_287 = Mem230[ss:bp_121:word16]
	dxOut = dx_201
	bpOut = bp_287
	diOut = di_282
	dsOut = ds_174
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6703_1:
	Mem292[ds:di_291:byte] = 0x00
	di_291 = di_291 + 0x0001
	cx_102 = cx_102 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FD_1:
	Mem301[ds:di_291:byte] = Mem297[ds:si_296:byte]
	si_296 = si_296 + 0x0001
	di_291 = di_291 + 0x0001
	cx_100 = cx_100 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F9_1:
	Mem311[ds:di_291:word16] = Mem307[ds:si_296:word16]
	si_296 = si_296 + 0x0002
	di_291 = di_291 + 0x0002
	cx_314 = cx_314 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66B5:
	dxOut = dx
	bpOut = bp
	diOut = di
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_669C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_67BF(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_67BF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67BF:
	word16 ax_19 = ((uint16) (uint8) Mem7[ds:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem7[ds:0x2E76:byte])
	branch Mem20[ds:0x2A09:word16] >u 0x0000 l0800_67F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E1:
	branch Mem20[ds:0x2A09:word16] != 0x0000 l0800_67E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E3:
	branch ax_19 <u Mem20[ds:0x2A07:word16] l0800_67F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67F0:
	selector ds_265
	word16 bp_261
	word16 sp_274
	selector ds_55
	word16 si_965
	word16 di_966
	fn0800_4152(ds, SEQ(ds, 0x2E77), ax_19, 0x0000, SEQ(Mem20[ds:0x29E1:word16], Mem33[ds:0x29DF:word16]), out si_965, out di_966, out ds_55)
	word16 dx_968
	word16 bx_969
	word16 cx_967
	fn0800_ACB3(ds_55, SEQ(Mem73[ds_55:0x29E1:word16], Mem76[ds_55:0x29DF:word16]), 0xFFFFFFEE, 0x0001, out cx_967, out dx_968, out bx_969)
	selector ds_101
	word16 dx_970
	branch fn0800_3F0A(ds_55, SEQ(Mem79[ds_55:0x29E5:word16], Mem93[ds_55:0x29E3:word16]), out dx_970, out ds_101) == 0x601A l0800_6839
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6839:
	word16 cx_971
	word16 dx_972
	word16 bx_973
	fn0800_ACB3(ds_101, SEQ(Mem121[ds_101:0x29E5:word16], Mem124[ds_101:0x29E3:word16]), 0x00000002, 0x0001, out cx_971, out dx_972, out bx_973)
	selector ds_163
	word16 bp_975
	word16 si_976
	word16 di_977
	word16 dx_974
	fn0800_3B0A(ds_101, 0x0010, 0x0000, out dx_974, out bp_975, out si_976, out di_977, out ds_163)
	word16 sp_167 = <invalid>
	Mem177[ss:sp_167 + 0x000A:word16] = 0x0000
	Mem180[ss:sp_167 + 0x0008:word16] = 0x0000
	Mem182[ss:sp_167 + 0x0006:word16] = 0x001A
	Mem185[ss:sp_167 + 0x0004:word16] = Mem182[ds_163:0x29E5:word16]
	Mem188[ss:sp_167 + 0x0002:word16] = Mem185[ds_163:0x29E3:word16]
	word16 cx_978
	word16 dx_979
	word16 bx_980
	fn0800_ACB3(ds_163, Mem188[ss:sp_167 + 0x0002:segptr32], Mem188[ss:sp_167 + 0x0006:ui32], Mem188[ss:sp_167 + 0x000A:word16], out cx_978, out dx_979, out bx_980)
	Mem202[ss:sp_167 + 0x000A:word16] = Mem188[ds_163:0x29E1:word16]
	Mem205[ss:sp_167 + 0x0008:word16] = Mem202[ds_163:0x29DF:word16]
	Mem208[ss:sp_167 + 0x0006:word16] = Mem205[ds_163:0x29E5:word16]
	Mem211[ss:sp_167 + 0x0004:word16] = Mem208[ds_163:0x29E3:word16]
	selector ds_216
	word16 dx_982
	word16 di_983
	word16 cx_981
	Mem226[ss:sp_167 + 0x0006:word16] = fn0800_3E27(ds_163, Mem211[ss:sp_167 + 0x0004:word32], out cx_981, out dx_982, out di_983, out ds_216)
	selector ds_231
	word16 dx_985
	word16 bx_986
	word16 di_987
	word16 cx_984
	fn0800_401E(ds_216, Mem226[ss:sp_167 + 0x0006:word16], Mem226[ss:sp_167 + 0x0008:word32], out cx_984, out dx_985, out bx_986, out di_987, out ds_231)
	word16 dx_240 = Mem226[ds_231:0x2A07:word16]
	Mem246[ss:sp_167 + 0x000A:word16] = Mem226[ds_231:0x2A09:word16] - (dx_240 <u 0x001C)
	Mem248[ss:sp_167 + 0x0008:word16] = dx_240 - 0x001C
	word16 dx_250 = Mem248[ds_231:0x2A07:word16]
	Mem257[ss:sp_167 + 0x0006:word16] = Mem248[ds_231:0x2A09:word16] - (dx_250 <u 0x001C)
	Mem259[ss:sp_167 + 0x0004:word16] = dx_250 - 0x001C
	word16 si_268
	word16 di_988
	fn0800_75EA(ds_231, Mem259[ss:sp_167 + 0x0004:word16], Mem259[ss:sp_167 + 0x0006:word16], Mem259[ss:sp_167 + 0x0008:word16], Mem259[ss:sp_167 + 0x000A:word16], out bp_261, out si_268, out di_988, out ds_265)
	word16 dx_276 = Mem259[ds_265:0x2A07:word16]
	word16 dx_281 = dx_276 - 0x001C - Mem259[ds_265:0x2A03:word16]
	ui32 ax_dx_805 = SEQ(Mem259[ds_265:0x2A09:word16] - (dx_276 <u 0x001C) - Mem259[ds_265:0x2A05:word16] - (dx_281 <u 0x0000), dx_281) + SEQ(Mem259[ds_265:0x4E8A:word16], Mem259[ds_265:0x4E88:word16])
	word16 dx_285 = (word16) ax_dx_805
	Mem294[ss:bp_261 - 0x0006:word16] = SLICE(ax_dx_805, word16, 16) + (dx_285 <u 0x000E)
	Mem295[ss:bp_261 - 0x0008:word16] = dx_285 + 0x000E
	word16 sp_269 = <invalid>
	sp_274 = sp_269 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6836:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_68F1:
	selector ds_312
	word16 dx_989
	word16 di_990
	fn0800_409C(ds_101, Mem304[ds_101:0x2A07:word16], Mem301[ds_101:0x2A09:word16], SEQ(Mem96[ds_101:0x29E1:word16], Mem298[ds_101:0x29DF:word16]), out dx_989, out di_990, out ds_312)
	word16 dx_992
	word16 bx_993
	word16 cx_991
	fn0800_ACB3(ds_312, SEQ(Mem330[ds_312:0x29E1:word16], Mem333[ds_312:0x29DF:word16]), 0x0000000E, 0x0001, out cx_991, out dx_992, out bx_993)
	word16 si_368
	word16 di_994
	fn0800_75EA(ds_312, Mem356[ds_312:0x2A07:word16], Mem353[ds_312:0x2A09:word16], Mem350[ds_312:0x2A07:word16], Mem336[ds_312:0x2A09:word16], out bp_261, out si_368, out di_994, out ds_265)
	ui32 ax_dx_809 = SEQ(Mem359[ds_265:0x2A09:word16], Mem359[ds_265:0x2A07:word16]) - SEQ(Mem359[ds_265:0x2A05:word16], Mem359[ds_265:0x2A03:word16]) + SEQ(Mem359[ds_265:0x4E8A:word16], Mem359[ds_265:0x4E88:word16])
	word16 dx_381 = (word16) ax_dx_809
	Mem390[ss:bp_261 - 0x0006:word16] = SLICE(ax_dx_809, word16, 16) + (dx_381 <u 0x000E)
	Mem391[ss:bp_261 - 0x0008:word16] = dx_381 + 0x000E
	word16 sp_369 = <invalid>
	sp_274 = sp_369 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6959:
	word16 sp_396 = sp_274 - 2
	Mem398[ss:sp_396:word16] = Mem393[ds_265:0x29E1:word16]
	Mem401[ss:sp_396 - 2:word16] = Mem398[ds_265:0x29DF:word16]
	word16 dx_995
	word16 ax_402 = fn0800_AD2F(ds_265, Mem401[ss:sp_396 - 2:segptr32], out dx_995)
	byte ah_425 = SLICE(ax_402 & 0x0001, byte, 8)
	branch (ax_402 & 0x0001) == 0x0000 l0800_6988
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_696F:
	Mem419[ss:sp_396:word16] = Mem401[ds_265:0x29E1:word16]
	Mem422[ss:sp_396 - 2:word16] = Mem419[ds_265:0x29DF:word16]
	Mem427[ss:sp_396 - 4:word16] = SEQ(ah_425, 0x90)
	word16 cx_1010
	word16 dx_1011
	word16 bx_1012
	word16 di_1013
	fn0800_4047(ds_265, Mem427[ss:sp_396 - 4:byte], Mem427[ss:sp_396 - 2:segptr32], out cx_1010, out dx_1011, out bx_1012, out di_1013, out ds_265)
	word16 v50_441 = Mem427[ss:bp_261 - 0x0008:word16] + 0x0001
	Mem442[ss:bp_261 - 0x0008:word16] = v50_441
	Mem446[ss:bp_261 - 0x0006:word16] = Mem442[ss:bp_261 - 0x0006:word16] + (v50_441 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6988:
	word16 sp_452 = sp_274 - 2
	Mem454[ss:sp_452:word16] = Mem449[ds_265:0x29E1:word16]
	Mem457[ss:sp_452 - 2:word16] = Mem454[ds_265:0x29DF:word16]
	Mem462[ss:sp_452 - 4:word16] = 0x0000
	Mem464[ss:sp_452 - 6:word16] = 0x0000
	selector ds_469
	word16 dx_996
	word16 di_997
	fn0800_409C(ds_265, Mem464[ss:sp_452 - 6:word16], Mem464[ss:sp_452 - 4:word16], Mem464[ss:sp_452 - 2:word32], out dx_996, out di_997, out ds_469)
	Mem480[ss:sp_452:word16] = Mem464[ds_469:0x29E1:word16]
	Mem483[ss:sp_452 - 2:word16] = Mem480[ds_469:0x29DF:word16]
	word16 dx_487
	word16 ax_484 = fn0800_AD2F(ds_469, Mem483[ss:sp_452 - 2:segptr32], out dx_487)
	Mem498[ds_469:0x2A05:word16] = dx_487 + 0xFF + (ax_484 <u 0xFFE0)
	Mem499[ds_469:0x2A03:word16] = ax_484 + 0xFFE0
	Mem504[ss:sp_452:word16] = 0x0000
	Mem507[ss:sp_452 - 2:word16] = 0x0000
	Mem509[ss:sp_452 - 4:word16] = 0x0002
	Mem512[ss:sp_452 - 6:word16] = Mem509[ds_469:0x29E1:word16]
	Mem515[ss:sp_452 - 8:word16] = Mem512[ds_469:0x29DF:word16]
	word16 bx_1000
	word16 dx_999
	word16 cx_998
	word16 ax_516 = fn0800_ACB3(ds_469, Mem515[ss:sp_452 - 8:segptr32], Mem515[ss:sp_452 - 4:ui32], Mem515[ss:sp_452:word16], out cx_998, out dx_999, out bx_1000)
	Mem529[ss:sp_452:word16] = Mem515[ds_469:0x29E1:word16]
	Mem532[ss:sp_452 - 2:word16] = Mem529[ds_469:0x29DF:word16]
	selector ds_536
	word16 di_1001
	word16 dx_537 = fn0800_3F58(ds_469, Mem532[ss:sp_452 - 2:word32], out di_1001, out ds_536)
	Mem546[ss:bp_261 - 0x0008:word16] = v60_545
	ui32 v61_v60_811 = SEQ(Mem546[ss:bp_261 - 0x0006:word16], Mem532[ss:bp_261 - 0x0008:word16]) - SEQ(dx_537, ax_516)
	Mem550[ss:bp_261 - 0x0006:word16] = SLICE(v61_v60_811, word16, 16)
	Mem554[ss:sp_452:word16] = Mem550[ds_536:0x29E1:word16]
	Mem557[ss:sp_452 - 2:word16] = Mem554[ds_536:0x29DF:word16]
	Mem560[ss:sp_452 - 4:word16] = Mem557[ds_536:0x2A05:word16]
	Mem563[ss:sp_452 - 6:word16] = Mem560[ds_536:0x2A03:word16]
	selector ds_568
	word16 di_1003
	word16 dx_1002
	fn0800_409C(ds_536, Mem563[ss:sp_452 - 6:word16], Mem563[ss:sp_452 - 4:word16], Mem563[ss:sp_452 - 2:word32], out dx_1002, out di_1003, out ds_568)
	Mem580[ss:sp_452:word16] = 0x0000
	Mem582[ss:sp_452 - 2:word16] = 0x0000
	Mem584[ss:sp_452 - 4:word16] = 0x0000
	Mem587[ss:sp_452 - 6:word16] = Mem584[ds_568:0x29E5:word16]
	Mem590[ss:sp_452 - 8:word16] = Mem587[ds_568:0x29E3:word16]
	word16 dx_1005
	word16 cx_1004
	word16 bx_1006
	fn0800_ACB3(ds_568, Mem590[ss:sp_452 - 8:segptr32], Mem590[ss:sp_452 - 4:ui32], Mem590[ss:sp_452:word16], out cx_1004, out dx_1005, out bx_1006)
	Mem604[ss:sp_452:word16] = Mem590[ds_568:0x29E5:word16]
	Mem607[ss:sp_452 - 2:word16] = Mem604[ds_568:0x29E3:word16]
	word16 v60_545 = (word16) v61_v60_811
	word16 cx_1007
	word16 dx_1008
	word16 di_1009
	selector ds_612
	word16 ax_608 = fn0800_3E27(ds_568, Mem607[ss:sp_452 - 2:word32], out cx_1007, out dx_1008, out di_1009, out ds_612)
	branch ax_608 == 0x601A l0800_6A1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A1E:
	Mem624[ss:sp_452:word16] = Mem607[ds_612:0x29E5:word16]
	Mem627[ss:sp_452 - 2:word16] = Mem624[ds_612:0x29E3:word16]
	selector ds_631
	word16 di_1014
	word16 dx_632 = fn0800_3E5D(ds_612, Mem627[ss:sp_452 - 2:word32], out di_1014, out ds_631)
	Mem641[ss:sp_452:word16] = ax_608
	Mem643[ss:sp_452 - 2:word16] = dx_632
	Mem646[ss:sp_452 - 4:word16] = Mem643[ds_631:0x29E5:word16]
	Mem649[ss:sp_452 - 6:word16] = Mem646[ds_631:0x29E3:word16]
	selector ds_653
	word16 di_1015
	ui32 bx_cx_814 = SEQ(Mem649[ss:sp_452 - 0x0002:word16], Mem649[ss:sp_452:word16]) + SEQ(fn0800_3E5D(ds_631, Mem649[ss:sp_452 - 6:word32], out di_1015, out ds_653), ax_608)
	Mem670[ss:bp_261 - 0x0002:word16] = SLICE(bx_cx_814, word16, 16)
	Mem671[ss:bp_261 - 0x0004:word16] = (word16) bx_cx_814
	Mem674[ss:sp_452:word16] = Mem671[ds_653:0x29E5:word16]
	Mem677[ss:sp_452 - 2:word16] = Mem674[ds_653:0x29E3:word16]
	word16 di_1016
	Mem689[ss:bp_261 - 0x000A:word16] = fn0800_3E5D(ds_653, Mem677[ss:sp_452 - 2:word32], out di_1016, out ds_612)
	Mem690[ss:bp_261 - 0x000C:word16] = ax_608
	ui32 ax_dx_816 = SEQ(Mem690[ss:bp_261 - 0x0002:word16], Mem690[ss:bp_261 - 0x0004:word16]) + SEQ(Mem690[ss:bp_261 - 0x000A:word16], Mem690[ss:bp_261 - 0x000C:word16])
	ui32 bx_cx_818 = SEQ(Mem690[ds_612:0x2A05:word16], Mem690[ds_612:0x2A03:word16]) + SEQ(Mem690[ss:bp_261 - 0x0006:word16], Mem690[ss:bp_261 - 0x0008:word16])
	word16 dx_693 = (word16) ax_dx_816
	word16 ax_696 = SLICE(ax_dx_816, word16, 16)
	word16 cx_699 = (word16) bx_cx_818
	word16 bx_702 = SLICE(bx_cx_818, word16, 16)
	branch ax_696 <u bx_702 l0800_6AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A7A:
	branch ax_696 >u bx_702 l0800_6A80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A7C:
	branch dx_693 <=u cx_699 l0800_6AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A80:
	ui32 ax_dx_825 = SEQ(Mem690[ss:bp_261 - 0x0002:word16], Mem690[ss:bp_261 - 0x0004:word16]) + SEQ(Mem690[ss:bp_261 - 0x000A:word16], Mem690[ss:bp_261 - 0x000C:word16]) - (SEQ(Mem690[ds_612:0x2A05:word16], Mem690[ds_612:0x2A03:word16]) + SEQ(Mem690[ss:bp_261 - 0x0006:word16], Mem690[ss:bp_261 - 0x0008:word16]))
	Mem729[ss:bp_261 - 0x0008:word16] = v79_728
	ui32 v80_v79_827 = SEQ(Mem729[ss:bp_261 - 0x0006:word16], Mem690[ss:bp_261 - 0x0008:word16]) + ax_dx_825
	Mem733[ss:bp_261 - 0x0006:word16] = SLICE(v80_v79_827, word16, 16)
	word16 v79_728 = (word16) v80_v79_827
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A1B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AA4:
	word16 sp_740 = sp_274 - 2
	Mem742[ss:sp_740:word16] = 0x0000
	Mem745[ss:sp_740 - 2:word16] = 0x0000
	Mem747[ss:sp_740 - 4:word16] = 0x000A
	Mem751[ss:sp_740 - 6:word16] = Mem747[ds_612:0x29E1:word16]
	Mem754[ss:sp_740 - 8:word16] = Mem751[ds_612:0x29DF:word16]
	word16 cx_1017
	word16 dx_1018
	word16 bx_1019
	fn0800_ACB3(ds_612, Mem754[ss:sp_740 - 8:segptr32], Mem754[ss:sp_740 - 4:ui32], Mem754[ss:sp_740:word16], out cx_1017, out dx_1018, out bx_1019)
	Mem768[ss:sp_740:word16] = Mem754[ds_612:0x29E1:word16]
	Mem771[ss:sp_740 - 2:word16] = Mem768[ds_612:0x29DF:word16]
	Mem775[ss:sp_740 - 4:word16] = Mem771[ss:bp_261 - 0x0006:word16]
	Mem778[ss:sp_740 - 6:word16] = Mem775[ss:bp_261 - 0x0008:word16]
	word16 di_782
	selector ds_783
	word16 dx_784
	fn0800_409C(ds_612, Mem778[ss:sp_740 - 6:word16], Mem778[ss:sp_740 - 4:word16], Mem778[ss:sp_740 - 2:word32], out dx_784, out di_782, out ds_783)
	word16 bp_795 = Mem778[ss:bp_261:word16]
	dxOut = dx_784
	bpOut = bp_795
	diOut = di_782
	dsOut = ds_783
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E9:
	dxOut = 0x0000
	bpOut = bp
	diOut = di
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_67BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_6AD4(word16 bp, word16 si, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_6AD4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AD4:
	word16 ax_22 = ((uint16) (uint8) Mem12[ds:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem12[ds:0x2E76:byte])
	branch Mem12[ds:0x2A09:word16] >u 0x0000 l0800_6B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AF4:
	branch Mem12[ds:0x2A09:word16] != 0x0000 l0800_6AFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AF6:
	branch ax_22 <u Mem12[ds:0x2A07:word16] l0800_6B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B04:
	word16 di_41
	selector ds_42
	word16 dx_43 = fn0800_3E5D(ds, SEQ(Mem12[ds:0x29E5:word16], Mem35[ds:0x29E3:word16]), out di_41, out ds_42)
	branch dx_43 != 0x0000 l0800_6B1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B16:
	branch ax_22 == 0x03F3 l0800_6B23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B23:
	word16 dx_908
	word16 di_909
	selector ds_127
	word16 ax_108 = fn0800_409C(ds_42, 0x03F3, 0x0000, SEQ(Mem38[ds_42:0x29E1:word16], Mem59[ds_42:0x29DF:word16]), out dx_908, out di_909, out ds_127)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B38:
	selector ds_97
	word16 di_913
	word16 dx_98 = fn0800_3E5D(ds_127, SEQ(Mem85[ds_127:0x29E5:word16], Mem90[ds_127:0x29E3:word16]), out di_913, out ds_97)
	word16 dx_914
	word16 di_915
	fn0800_409C(ds_97, ax_108, dx_98, SEQ(Mem111[ds_97:0x29E1:word16], Mem114[ds_97:0x29DF:word16]), out dx_914, out di_915, out ds_127)
	word16 wLoc08_664 = dx_98
	word16 wLoc0A_665 = ax_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B84:
	word16 v27_141 = wLoc0A_665 - 0x0001
	wLoc0A_665 = v27_141
	wLoc08_664 = wLoc08_664 - (v27_141 <u 0x0000)
	word16 ax_147 = wLoc0A_665 | wLoc08_664
	branch ax_147 != 0x0000 l0800_6B66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B66:
	selector ds_168
	word16 di_910
	word16 dx_911
	word16 di_912
	fn0800_409C(ds_168, ax_147, fn0800_3E5D(ds_127, SEQ(Mem158[ds_127:0x29E5:word16], Mem161[ds_127:0x29E3:word16]), out di_910, out ds_168), SEQ(Mem146[ds_127:0x29E1:word16], Mem155[ds_127:0x29DF:word16]), out dx_911, out di_912, out ds_127)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B96:
	ax_108 = ax_108 | dx_98
	branch ax_108 != 0x0000 l0800_6B38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B9E:
	selector ds_214
	selector ds_235
	word16 dx_917
	word16 di_916
	word16 di_918
	word16 ax_231 = fn0800_409C(ds_214, ax_108 + 0x0001, fn0800_3E5D(ds_127, SEQ(Mem204[ds_127:0x29E5:word16], Mem207[ds_127:0x29E3:word16]), out di_916, out ds_214) + (ax_108 <u 0x0001), SEQ(Mem146[ds_127:0x29E1:word16], Mem201[ds_127:0x29DF:word16]), out dx_917, out di_918, out ds_235)
	selector ds_253
	word16 di_919
	word16 dx_254 = fn0800_3E5D(ds_235, SEQ(Mem230[ds_235:0x29E5:word16], Mem246[ds_235:0x29E3:word16]), out di_919, out ds_253)
	selector ds_273
	word16 di_920
	word16 dx_274 = fn0800_3E5D(ds_253, SEQ(Mem263[ds_253:0x29E5:word16], Mem266[ds_253:0x29E3:word16]), out di_920, out ds_273)
	selector ds_312
	word16 di_922
	word16 dx_921
	fn0800_409C(ds_273, ax_231, dx_254, SEQ(Mem295[ds_273:0x29E1:word16], Mem298[ds_273:0x29DF:word16]), out dx_921, out di_922, out ds_312)
	selector ds_341
	word16 di_924
	word16 dx_923
	fn0800_409C(ds_312, ax_231 + 0x0001, dx_274 + (ax_231 <u 0x0001), SEQ(Mem307[ds_312:0x29E1:word16], Mem322[ds_312:0x29DF:word16]), out dx_923, out di_924, out ds_341)
	word16 dx_925
	word16 di_926
	selector ds_381
	fn0800_409C(ds_341, ((uint16) (uint8) Mem336[ds_341:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem336[ds_341:0x2E76:byte]) - 0x000C >>u 0x0002, 0x0000, SEQ(Mem362[ds_341:0x29E1:word16], Mem365[ds_341:0x29DF:word16]), out dx_925, out di_926, out ds_381)
	word16 dx_399
	word16 ax_396 = fn0800_AD2F(ds_381, SEQ(Mem376[ds_381:0x29E1:word16], Mem392[ds_381:0x29DF:word16]), out dx_399)
	Mem407[ds_381:0x4E8E:word16] = dx_399
	Mem408[ds_381:0x4E8C:word16] = ax_396
	ui32 ax_dx_650 = SEQ(dx_274, ax_231) - SEQ(dx_254, ax_231)
	word16 dx_285 = (word16) ax_dx_650
	word16 ax_292 = SLICE(ax_dx_650, word16, 16) + (dx_285 <u 0x0001)
	word16 wLoc04_727 = ax_292
	word16 wLoc06_728 = dx_285 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CAF:
	word16 ax_417 = wLoc06_728 | wLoc04_727
	branch ax_417 != 0x0000 l0800_6C89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6C89:
	selector ds_438
	word16 dx_928
	word16 di_929
	word16 di_927
	fn0800_409C(ds_438, ax_417, fn0800_3E5D(ds_381, SEQ(Mem428[ds_381:0x29E5:word16], Mem431[ds_381:0x29E3:word16]), out di_927, out ds_438), SEQ(Mem415[ds_381:0x29E1:word16], Mem425[ds_381:0x29DF:word16]), out dx_928, out di_929, out ds_381)
	word16 v58_463 = wLoc06_728 - 0x0001
	wLoc06_728 = v58_463
	wLoc04_727 = wLoc04_727 - (v58_463 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CB7:
	word16 ax_484 = ((uint16) (uint8) Mem475[ds_381:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem475[ds_381:0x2E76:byte])
	word16 di_500
	selector ds_501
	word16 si_930
	fn0800_4152(ds_381, SEQ(ds_381, 0x2E77), ax_484, 0x0000, SEQ(Mem415[ds_381:0x29E1:word16], Mem472[ds_381:0x29DF:word16]), out si_930, out di_500, out ds_501)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6E93:
	word16 dx_522
	word16 ax_519 = fn0800_AD2F(ds_501, SEQ(Mem496[ds_501:0x29E5:word16], Mem515[ds_501:0x29E3:word16]), out dx_522)
	branch dx_522 >=u Mem518[ds_501:0x2A09:word16] l0800_6EAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EAA:
	branch dx_522 != Mem518[ds_501:0x2A09:word16] l0800_6EB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EAC:
	branch ax_519 >=u Mem518[ds_501:0x2A07:word16] l0800_6EB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EB5:
	dxOut = dx_522
	bpOut = bp
	diOut = di_500
	dsOut = ds_501
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EB2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EA7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CE4:
	word16 v62_547 = Mem518[ds_501:0x29E5:word16]
	word16 v63_552 = Mem551[ds_501:0x29E3:word16]
	word16 di_557
	selector ds_558
	word16 dx_559 = fn0800_3E5D(ds_501, SEQ(v62_547, v63_552), out di_557, out ds_558)
	word16 cx_577 = 0x0007
	word16 bx_578 = 0x6EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D0D:
	branch Mem576[0x0800:bx_578:word16] != ax_519 l0800_6D1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D15:
	word16 ax_586 = Mem576[0x0800:bx_578 + 0x000E:word16]
	branch ax_586 == (dx_559 & 0x3FFF) l0800_6D26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D26:
	word16 ax_592
	word16 dx_597
	call Mem576[0x0800:bx_578 + 0x001C:word16] (retsize: 2;)
		uses: ax:ax_586,bx:bx_579,cx:cx_594,dx:ax_519,sp:fp - 0x001C,Stack +0000:v62_547,Stack +0002:si,Stack +0004:ax_519,Stack +0006:dx_559 & 0x3FFF,Stack +0008:dx_285 + 0x0001,Stack +000A:ax_292,Stack +000C:ax_231,Stack +000E:dx_274,Stack +0010:ax_231,Stack +0012:dx_254,Stack +0014:ax_519,Stack +0016:dx_559,Stack +0018:wLoc06_729,Stack +001A:wLoc04_730,Stack +001C:bp,Stack +FFFFFFF6:0x2E77,Stack +FFFFFFF8:ds_421,Stack +FFFFFFFA:ax_484,Stack +FFFFFFFC:0x0000,Stack +FFFFFFFE:v63_552,Top:0
		defs: ax:ax_592,dx:dx_597
	dxOut = dx_597
	bpOut = fp - 2
	diOut = di_557
	dsOut = ds_558
	return ax_592
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D1E:
	bx_578 = bx_578 + 0x0002
	cx_577 = cx_577 - 0x0001
	branch cx_577 != 0x0000 l0800_6D0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D23:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6E8B:
	dxOut = ax_519
	bpOut = bp
	diOut = di_557
	dsOut = ds_558
	return 0x0009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B1B:
	dxOut = dx_43
	bpOut = bp
	diOut = di_41
	dsOut = ds_42
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AFC:
	dxOut = 0x0000
	bpOut = bp
	diOut = di
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6AD4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6EE6(word16 cx, word16 dx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_6EE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EE6:
	word16 si_53
	word16 di_54
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x2223), out si_53, out di_54)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6EE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6EFF(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_6EFF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EFF:
	word16 di_19
	word16 si_20
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x2231), out si_20, out di_19)
	branch wArg02 <=u 0x0009 l0800_6F1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F13:
	word16 si_75
	word16 di_76
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x223E), out si_75, out di_76)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F1E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6EFF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6F20(word16 ax, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_6F20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F20:
	word16 dx_35
	byte cl_1320
	word16 di_1319
	selector ds_101
	word16 ax_32 = fn0800_8C69(ax, 0x02, fn0800_3E5D(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out di_1319, out ds_101), out cl_1320, out dx_35)
	word16 sp_36 = <invalid>
	Mem45[ss:sp_36 - 2:word16] = Mem42[ds_101:0x29E5:word16]
	Mem48[ss:sp_36 - 4:word16] = Mem45[ds_101:0x29E3:word16]
	word16 dx_1321
	fn0800_AD2F(ds_101, Mem48[ss:sp_36 - 4:segptr32], out dx_1321)
	Mem64[ss:sp_36 - 2:word16] = 0x0001
	Mem67[ss:sp_36 - 4:word16] = dx_35
	Mem70[ss:sp_36 - 6:word16] = ax_32
	Mem73[ss:sp_36 - 8:word16] = Mem70[ds_101:0x29E5:word16]
	Mem76[ss:sp_36 - 10:word16] = Mem73[ds_101:0x29E3:word16]
	ui32 dx_ax_1318 = <invalid>
	word16 bp_500 = fp - 2
	word16 dx_52 = SLICE(dx_ax_1318, word16, 16)
	word16 ax_49 = SLICE(dx_ax_1318, word16, 0)
	word16 dx_1323
	word16 bx_1324
	word16 cx_1322
	word16 ax_113 = fn0800_ACB3(ds_101, Mem76[ss:sp_36 - 10:segptr32], Mem76[ss:sp_36 - 6:ui32], Mem76[ss:sp_36 - 2:word16], out cx_1322, out dx_1323, out bx_1324)
	word16 sp_1195 = sp_36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FCC:
	word16 sp_92 = sp_1195 - 2
	Mem94[ss:sp_92:word16] = Mem89[ds_101:0x29E5:word16]
	Mem97[ss:sp_92 - 2:word16] = Mem94[ds_101:0x29E3:word16]
	word16 di_1325
	branch fn0800_3F58(ds_101, Mem97[ss:sp_92 - 2:word32], out di_1325, out ds_101) != 0x0000 l0800_6FE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FDE:
	branch ax_113 == 0x03EC l0800_6F6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F6D:
	Mem118[ss:sp_92:word16] = 0x0001
	Mem124[ss:sp_92 - 2:word16] = 0x0000
	Mem126[ss:sp_92 - 4:word16] = 0x0004
	Mem129[ss:sp_92 - 6:word16] = Mem126[ds_101:0x29E5:word16]
	Mem132[ss:sp_92 - 8:word16] = Mem129[ds_101:0x29E3:word16]
	word16 cx_1329
	word16 dx_1330
	word16 bx_1331
	ax_113 = fn0800_ACB3(ds_101, Mem132[ss:sp_92 - 8:segptr32], Mem132[ss:sp_92 - 4:ui32], Mem132[ss:sp_92:word16], out cx_1329, out dx_1330, out bx_1331)
	sp_1195 = sp_92 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F86:
	word16 sp_148 = sp_1195 - 2
	Mem150[ss:sp_148:word16] = Mem145[ds_101:0x29E5:word16]
	Mem153[ss:sp_148 - 2:word16] = Mem150[ds_101:0x29E3:word16]
	word16 dx_171
	word16 di_1393
	byte cl_1394
	word16 ax_168 = fn0800_8C69(ax_113, 0x02, fn0800_3E5D(ds_101, Mem153[ss:sp_148 - 2:word32], out di_1393, out ds_101), out cl_1394, out dx_171)
	word16 sp_172 = <invalid>
	branch (ax_168 | dx_171) == 0x0000 l0800_6FC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FA4:
	Mem186[ss:sp_172 - 2:word16] = 0x0001
	Mem195[ss:sp_172 - 4:word16] = dx_171 + (ax_168 <u 0x0004)
	Mem197[ss:sp_172 - 6:word16] = ax_168 + 0x0004
	Mem200[ss:sp_172 - 8:word16] = Mem197[ds_101:0x29E5:word16]
	Mem203[ss:sp_172 - 10:word16] = Mem200[ds_101:0x29E3:word16]
	word16 cx_1380
	word16 dx_1381
	word16 bx_1382
	fn0800_ACB3(ds_101, Mem203[ss:sp_172 - 10:segptr32], Mem203[ss:sp_172 - 6:ui32], Mem203[ss:sp_172 - 2:word16], out cx_1380, out dx_1381, out bx_1382)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FC4:
	sp_1195 = sp_172
	ax_113 = ax_168 | dx_171
	branch ax_113 != 0x0000 l0800_6F86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FE3:
	Mem229[ss:sp_92:word16] = Mem97[ds_101:0x29E5:word16]
	Mem232[ss:sp_92 - 2:word16] = Mem229[ds_101:0x29E3:word16]
	word16 dx_1326
	fn0800_AD2F(ds_101, Mem232[ss:sp_92 - 2:segptr32], out dx_1326)
	ui32 dx_ax_1317 = <invalid>
	ui32 dx_ax_1199 = dx_ax_1317 - dx_ax_1318
	word16 dx_248 = SLICE(dx_ax_1199, word16, 16)
	Mem252[ds_101:0x2A05:word16] = dx_248
	word16 ax_245 = (word16) dx_ax_1199
	Mem253[ds_101:0x2A03:word16] = ax_245
	Mem256[ss:sp_92:word16] = Mem253[ds_101:0x29E1:word16]
	Mem259[ss:sp_92 - 2:word16] = Mem256[ds_101:0x29DF:word16]
	Mem262[ss:sp_92 - 4:word16] = wArg04
	Mem265[ss:sp_92 - 6:word16] = wArg02
	word16 dx_1327
	word16 di_1328
	selector ds_270
	fn0800_409C(ds_101, Mem265[ss:sp_92 - 6:word16], Mem265[ss:sp_92 - 4:word16], Mem265[ss:sp_92 - 2:word32], out dx_1327, out di_1328, out ds_270)
	Mem281[ss:sp_92:word16] = Mem265[ds_270:0x29E1:word16]
	Mem284[ss:sp_92 - 2:word16] = Mem281[ds_270:0x29DF:word16]
	word16 dx_288
	word16 ax_285 = fn0800_AD2F(ds_270, Mem284[ss:sp_92 - 2:segptr32], out dx_288)
	word16 sp_294 = sp_92 + 0x0002
	branch dx_248 >=u 0x0000 l0800_7035
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7035:
	branch dx_248 >u 0x0000 l0800_7040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7037:
	branch ax_245 >u 0x0012 l0800_7040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7040:
	Mem308[ss:sp_92:word16] = 0x0000
	Mem312[ss:sp_92 - 2:word16] = Mem308[ds_270:0x4E8E:word16]
	Mem315[ss:sp_92 - 4:word16] = Mem312[ds_270:0x4E8C:word16]
	Mem318[ss:sp_92 - 6:word16] = Mem315[ds_270:0x29E1:word16]
	Mem321[ss:sp_92 - 8:word16] = Mem318[ds_270:0x29DF:word16]
	word16 dx_1333
	word16 bx_1334
	word16 cx_1332
	word16 ax_322 = fn0800_ACB3(ds_270, Mem321[ss:sp_92 - 8:segptr32], Mem321[ss:sp_92 - 4:ui32], Mem321[ss:sp_92:word16], out cx_1332, out dx_1333, out bx_1334)
	Mem335[ss:sp_92:word16] = Mem321[ds_270:0x29E1:word16]
	Mem338[ss:sp_92 - 2:word16] = Mem335[ds_270:0x29DF:word16]
	selector ds_342
	word16 di_1335
	word16 dx_343 = fn0800_3E5D(ds_270, Mem338[ss:sp_92 - 2:word32], out di_1335, out ds_342)
	Mem357[ss:sp_92:word16] = 0x0000
	Mem360[ss:sp_92 - 2:word16] = dx_288
	Mem363[ss:sp_92 - 4:word16] = ax_285
	Mem366[ss:sp_92 - 6:word16] = Mem363[ds_342:0x29E1:word16]
	Mem369[ss:sp_92 - 8:word16] = Mem366[ds_342:0x29DF:word16]
	word16 cx_1336
	word16 dx_1337
	word16 bx_1338
	fn0800_ACB3(ds_342, Mem369[ss:sp_92 - 8:segptr32], Mem369[ss:sp_92 - 4:ui32], Mem369[ss:sp_92:word16], out cx_1336, out dx_1337, out bx_1338)
	Mem382[ss:sp_92:word16] = Mem369[ds_342:0x29E1:word16]
	Mem385[ss:sp_92 - 2:word16] = Mem382[ds_342:0x29DF:word16]
	Mem390[ss:sp_92 - 4:word16] = 0x0000
	Mem392[ss:sp_92 - 6:word16] = 0x0000
	selector ds_397
	word16 dx_1339
	word16 di_1340
	fn0800_409C(ds_342, Mem392[ss:sp_92 - 6:word16], Mem392[ss:sp_92 - 4:word16], Mem392[ss:sp_92 - 2:word32], out dx_1339, out di_1340, out ds_397)
	Mem408[ss:sp_92:word16] = Mem392[ds_397:0x29E1:word16]
	Mem411[ss:sp_92 - 2:word16] = Mem408[ds_397:0x29DF:word16]
	Mem414[ss:sp_92 - 4:word16] = dx_35
	Mem417[ss:sp_92 - 6:word16] = ax_32
	selector ds_422
	word16 dx_1341
	word16 di_1342
	fn0800_409C(ds_397, Mem417[ss:sp_92 - 6:word16], Mem417[ss:sp_92 - 4:word16], Mem417[ss:sp_92 - 2:word32], out dx_1341, out di_1342, out ds_422)
	Mem433[ss:sp_92:word16] = Mem417[ds_422:0x29E1:word16]
	Mem436[ss:sp_92 - 2:word16] = Mem433[ds_422:0x29DF:word16]
	Mem439[ss:sp_92 - 4:word16] = dx_343
	Mem442[ss:sp_92 - 6:word16] = ax_322
	selector ds_447
	word16 dx_1343
	word16 di_1344
	fn0800_409C(ds_422, Mem442[ss:sp_92 - 6:word16], Mem442[ss:sp_92 - 4:word16], Mem442[ss:sp_92 - 2:word32], out dx_1343, out di_1344, out ds_447)
	Mem459[ss:sp_92:word16] = 0x0000
	Mem462[ss:sp_92 - 2:word16] = dx_52
	Mem465[ss:sp_92 - 4:word16] = ax_49
	Mem468[ss:sp_92 - 6:word16] = Mem465[ds_447:0x29E5:word16]
	Mem471[ss:sp_92 - 8:word16] = Mem468[ds_447:0x29E3:word16]
	word16 cx_1345
	word16 dx_1346
	word16 bx_1347
	fn0800_ACB3(ds_447, Mem471[ss:sp_92 - 8:segptr32], Mem471[ss:sp_92 - 4:ui32], Mem471[ss:sp_92:word16], out cx_1345, out dx_1346, out bx_1347)
	Mem490[ss:sp_92:word16] = dx_248 - (ax_245 <u 0x0008)
	Mem492[ss:sp_92 - 2:word16] = ax_245 - 0x0008
	Mem495[ss:sp_92 - 4:word16] = dx_248
	Mem498[ss:sp_92 - 6:word16] = ax_245
	word16 si_1348
	word16 di_1349
	fn0800_75EA(ds_447, Mem498[ss:sp_92 - 6:word16], Mem498[ss:sp_92 - 4:word16], Mem498[ss:sp_92 - 2:word16], Mem498[ss:sp_92:word16], out bp_500, out si_1348, out di_1349, out ds_270)
	word16 v58_514 = Mem498[ds_270:0x2A03:word16] + 0x0008
	Mem515[ds_270:0x2A03:word16] = v58_514
	Mem519[ds_270:0x2A05:word16] = Mem515[ds_270:0x2A05:word16] + (v58_514 <u 0x0000)
	word16 sp_508 = <invalid>
	sp_294 = sp_508 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_703D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7032:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_70F9:
	word16 ax_523 = Mem522[ds_270:0x2A05:word16]
	word16 dx_524 = Mem522[ds_270:0x2A03:word16]
	branch ax_523 >=u Mem522[ss:bp_500 - 0x0016:word16] l0800_7108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7108:
	branch ax_523 != Mem522[ss:bp_500 - 0x0016:word16] l0800_7112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_710A:
	branch dx_524 >=u Mem522[ss:bp_500 - 0x0018:word16] l0800_7112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7112:
	word16 sp_537 = sp_294 - 2
	Mem539[ss:sp_537:word16] = 0x0000
	Mem543[ss:sp_537 - 2:word16] = Mem539[ss:bp_500 - 0x0002:word16]
	Mem546[ss:sp_537 - 4:word16] = Mem543[ss:bp_500 - 0x0004:word16]
	Mem550[ss:sp_537 - 6:word16] = Mem546[ds_270:0x29E1:word16]
	Mem553[ss:sp_537 - 8:word16] = Mem550[ds_270:0x29DF:word16]
	word16 cx_1350
	word16 dx_1351
	word16 bx_1352
	fn0800_ACB3(ds_270, Mem553[ss:sp_537 - 8:segptr32], Mem553[ss:sp_537 - 4:ui32], Mem553[ss:sp_537:word16], out cx_1350, out dx_1351, out bx_1352)
	Mem566[ss:sp_537:word16] = 0x0000
	word16 dx_568 = Mem566[ss:bp_500 - 0x0014:word16]
	Mem575[ss:sp_537 - 2:word16] = Mem566[ss:bp_500 - 0x0012:word16] - (dx_568 <u 0x0004)
	Mem577[ss:sp_537 - 4:word16] = dx_568 - 0x0004
	Mem580[ss:sp_537 - 6:word16] = Mem577[ds_270:0x29E5:word16]
	Mem583[ss:sp_537 - 8:word16] = Mem580[ds_270:0x29E3:word16]
	word16 cx_1353
	word16 dx_1354
	word16 bx_1355
	fn0800_ACB3(ds_270, Mem583[ss:sp_537 - 8:segptr32], Mem583[ss:sp_537 - 4:ui32], Mem583[ss:sp_537:word16], out cx_1353, out dx_1354, out bx_1355)
	word16 dx_595 = Mem583[ss:bp_500 - 0x0010:word16]
	Mem602[ss:sp_537:word16] = Mem583[ss:bp_500 - 0x000E:word16] + (dx_595 <u 0x0004)
	Mem604[ss:sp_537 - 2:word16] = dx_595 + 0x0004
	Mem607[ss:sp_537 - 4:word16] = Mem604[ds_270:0x29E1:word16]
	Mem610[ss:sp_537 - 6:word16] = Mem607[ds_270:0x29DF:word16]
	Mem613[ss:sp_537 - 8:word16] = Mem610[ds_270:0x29E5:word16]
	Mem616[ss:sp_537 - 10:word16] = Mem613[ds_270:0x29E3:word16]
	selector ds_622
	word16 si_625
	word16 dx_1356
	word16 di_1357
	word16 bp_618
	word16 ax_617 = fn0800_3B0A(ds_270, Mem616[ss:sp_537 - 2:word16], Mem616[ss:sp_537:word16], out dx_1356, out bp_618, out si_625, out di_1357, out ds_622)
	word16 sp_626 = <invalid>
	Mem635[ss:sp_626 + 0x000A:word16] = Mem616[ds_622:0x29E5:word16]
	Mem638[ss:sp_626 + 0x0008:word16] = Mem635[ds_622:0x29E3:word16]
	word16 di_641
	selector ds_642
	branch fn0800_3F58(ds_622, Mem638[ss:sp_626 + 0x0008:word32], out di_641, out ds_642) == 0x0000 l0800_7181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7181:
	branch ax_617 == 0x03EC l0800_7189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7189:
	Mem658[ss:sp_626 + 0x000A:word16] = 0x0001
	Mem664[ss:sp_626 + 0x0008:word16] = 0x0000
	Mem666[ss:sp_626 + 0x0006:word16] = 0x0004
	Mem669[ss:sp_626 + 0x0004:word16] = Mem666[ds_642:0x29E5:word16]
	Mem672[ss:sp_626 + 0x0002:word16] = Mem669[ds_642:0x29E3:word16]
	word16 cx_1375
	word16 dx_1376
	word16 bx_1377
	fn0800_ACB3(ds_642, Mem672[ss:sp_626 + 0x0002:segptr32], Mem672[ss:sp_626 + 0x0006:ui32], Mem672[ss:sp_626 + 0x000A:word16], out cx_1375, out dx_1376, out bx_1377)
	Mem685[ss:sp_626 + 0x000A:word16] = Mem672[ds_642:0x29E1:word16]
	Mem688[ss:sp_626 + 0x0008:word16] = Mem685[ds_642:0x29DF:word16]
	Mem694[ss:sp_626 + 0x0006:word16] = 0x0000
	Mem696[ss:sp_626 + 0x0004:word16] = 0x03EC
	word16 dx_1378
	word16 di_1379
	word16 ax_697 = fn0800_409C(ds_642, Mem696[ss:sp_626 + 0x0004:word16], Mem696[ss:sp_626 + 0x0006:word16], Mem696[ss:sp_626 + 0x0008:word32], out dx_1378, out di_1379, out ds_642)
	word16 sp_1196 = sp_626 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_71B7:
	word16 sp_714 = sp_1196 - 2
	Mem716[ss:sp_714:word16] = Mem711[ds_642:0x29E5:word16]
	Mem719[ss:sp_714 - 2:word16] = Mem716[ds_642:0x29E3:word16]
	selector ds_723
	word16 di_1390
	Mem733[ss:bp_618 - 0x0002:word16] = fn0800_3E5D(ds_642, Mem719[ss:sp_714 - 2:word32], out di_1390, out ds_723)
	Mem735[ss:bp_618 - 0x0004:word16] = ax_697
	Mem738[ss:sp_714:word16] = Mem735[ds_723:0x29E1:word16]
	Mem741[ss:sp_714 - 2:word16] = Mem738[ds_723:0x29DF:word16]
	Mem744[ss:sp_714 - 4:word16] = Mem741[ss:bp_618 - 0x0002:word16]
	Mem746[ss:sp_714 - 6:word16] = ax_697
	word16 dx_1391
	word16 di_1392
	fn0800_409C(ds_723, Mem746[ss:sp_714 - 6:word16], Mem746[ss:sp_714 - 4:word16], Mem746[ss:sp_714 - 2:word32], out dx_1391, out di_1392, out ds_642)
	sp_1196 = sp_714 + 0x0002
	word16 ax_760 = Mem746[ss:bp_618 - 0x0004:word16] | Mem746[ss:bp_618 - 0x0002:word16]
	branch ax_760 == 0x0000 l0800_7234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_71E5:
	Mem766[ss:sp_714:word16] = Mem746[ds_642:0x29E5:word16]
	Mem769[ss:sp_714 - 0x0002:word16] = Mem766[ds_642:0x29E3:word16]
	selector ds_773
	word16 di_1383
	Mem786[ss:bp_618 - 0x0006:word16] = fn0800_3E5D(ds_642, Mem769[ss:sp_714 - 0x0002:word32], out di_1383, out ds_773) + (ax_760 <u 0x0001)
	Mem787[ss:bp_618 - 0x0008:word16] = ax_760 + 0x0001
	Mem790[ss:sp_714:word16] = Mem787[ds_773:0x29E1:word16]
	Mem793[ss:sp_714 - 0x0002:word16] = Mem790[ds_773:0x29DF:word16]
	Mem796[ss:sp_714 - 0x0004:word16] = Mem793[ss:bp_618 - 0x0006:word16]
	Mem798[ss:sp_714 - 6:word16] = ax_760 + 0x0001
	selector ds_803
	word16 dx_1384
	word16 di_1385
	fn0800_409C(ds_773, Mem798[ss:sp_714 - 6:word16], Mem798[ss:sp_714 - 4:word16], Mem798[ss:sp_714 - 2:word32], out dx_1384, out di_1385, out ds_803)
	word16 dx_818
	byte cl_1386
	word16 ax_815 = fn0800_8C69(Mem798[ss:bp_618 - 0x0004:word16], 0x02, Mem798[ss:bp_618 - 0x0002:word16], out cl_1386, out dx_818)
	word16 sp_819 = <invalid>
	Mem825[ss:sp_819 - 2:word16] = dx_818
	Mem827[ss:sp_819 - 4:word16] = ax_815
	Mem830[ss:sp_819 - 6:word16] = Mem827[ds_803:0x29E1:word16]
	Mem833[ss:sp_819 - 8:word16] = Mem830[ds_803:0x29DF:word16]
	Mem836[ss:sp_819 - 10:word16] = Mem833[ds_803:0x29E5:word16]
	Mem839[ss:sp_819 - 12:word16] = Mem836[ds_803:0x29E3:word16]
	word16 dx_1387
	word16 si_1388
	word16 di_1389
	fn0800_3B0A(ds_803, Mem839[ss:sp_819 - 4:word16], Mem839[ss:sp_819 - 2:word16], out dx_1387, out bp_618, out si_1388, out di_1389, out ds_642)
	word16 sp_849 = <invalid>
	sp_1196 = sp_849 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7234:
	ax_697 = Mem858[ss:bp_618 - 0x0004:word16] | Mem858[ss:bp_618 - 0x0002:word16]
	branch ax_697 == 0x0000 l0800_723F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_723C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7186:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_717E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_723F:
	word16 v80_867 = Mem866[ds_642:0x4E8C:word16] + 0x0004
	Mem868[ds_642:0x4E8C:word16] = v80_867
	Mem872[ds_642:0x4E8E:word16] = Mem868[ds_642:0x4E8E:word16] + (v80_867 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_710F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7105:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_724D:
	ui32 ax_dx_1201 = SEQ(Mem522[ss:bp_500 - 0x0016:word16], Mem522[ss:bp_500 - 0x0018:word16]) + SEQ(Mem522[ds_270:0x4E8A:word16], Mem522[ds_270:0x4E88:word16])
	Mem889[ss:bp_500 - 0x0002:word16] = SLICE(ax_dx_1201, word16, 16)
	Mem890[ss:bp_500 - 0x0004:word16] = (word16) ax_dx_1201
	branch (Mem890[ds_270:0x2A03:word16] & 0x0003) == 0x0000 l0800_7274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_726C:
	word16 v60_897 = Mem890[ss:bp_500 - 0x0004:word16] + 0x0002
	Mem898[ss:bp_500 - 0x0004:word16] = v60_897
	Mem902[ss:bp_500 - 0x0002:word16] = Mem898[ss:bp_500 - 0x0002:word16] + (v60_897 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7274:
	word16 sp_920
	branch (Mem906[ss:bp_500 - 0x0004:word16] & 0x0003) == 0x0000 l0800_7298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7298:
	word16 dx_919
	word16 ax_916 = fn0800_8CAA(Mem906[ss:bp_500 - 0x0004:word16], 0x02, Mem906[ss:bp_500 - 0x0002:word16], out dx_919)
	Mem925[ss:bp_500 - 0x0002:word16] = dx_919
	Mem926[ss:bp_500 - 0x0004:word16] = ax_916
	sp_920 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_727F:
	word16 dx_933
	word16 ax_930 = fn0800_8CAA(Mem906[ss:bp_500 - 0x0004:word16], 0x02, Mem906[ss:bp_500 - 0x0002:word16], out dx_933)
	Mem944[ss:bp_500 - 0x0002:word16] = dx_933 + (ax_930 <u 0x0001)
	Mem945[ss:bp_500 - 0x0004:word16] = ax_930 + 0x0001
	sp_920 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72C6:
	word16 ax_948 = Mem947[ds_270:0x2A03:word16]
	byte ah_964 = SLICE(ax_948 & 0x0003, byte, 8)
	branch (ax_948 & 0x0003) != 0x0000 l0800_72AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72AB:
	word16 sp_956 = sp_920 - 2
	Mem958[ss:sp_956:word16] = Mem947[ds_270:0x29E1:word16]
	Mem961[ss:sp_956 - 2:word16] = Mem958[ds_270:0x29DF:word16]
	Mem966[ss:sp_956 - 4:word16] = SEQ(ah_964, 0x00)
	word16 cx_1358
	word16 dx_1359
	word16 bx_1360
	word16 di_1361
	fn0800_4047(ds_270, Mem966[ss:sp_956 - 4:byte], Mem966[ss:sp_956 - 2:segptr32], out cx_1358, out dx_1359, out bx_1360, out di_1361, out ds_270)
	word16 v101_979 = Mem966[ds_270:0x2A03:word16] + 0x0001
	Mem980[ds_270:0x2A03:word16] = v101_979
	Mem984[ds_270:0x2A05:word16] = Mem980[ds_270:0x2A05:word16] + (v101_979 <u 0x0000)
	sp_920 = sp_956 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72D1:
	word16 sp_987 = sp_920 - 2
	Mem988[ss:sp_987:word16] = Mem947[ds_270:0x29E1:word16]
	Mem991[ss:sp_987 - 2:word16] = Mem988[ds_270:0x29DF:word16]
	word16 dx_995
	word16 ax_992 = fn0800_AD2F(ds_270, Mem991[ss:sp_987 - 2:segptr32], out dx_995)
	Mem1003[ss:bp_500 - 0x0006:word16] = dx_995
	Mem1004[ss:bp_500 - 0x0008:word16] = ax_992
	Mem1007[ss:sp_987:word16] = 0x0001
	word16 dx_1011 = -Mem1007[ds_270:0x2A03:word16]
	Mem1020[ss:sp_987 - 2:word16] = -Mem1007[ds_270:0x2A05:word16] - (dx_1011 == 0x0000) - (dx_1011 <u 0x0004)
	Mem1022[ss:sp_987 - 4:word16] = dx_1011 - 0x0004
	Mem1025[ss:sp_987 - 6:word16] = Mem1022[ds_270:0x29E1:word16]
	Mem1028[ss:sp_987 - 8:word16] = Mem1025[ds_270:0x29DF:word16]
	word16 cx_1362
	word16 dx_1363
	word16 bx_1364
	fn0800_ACB3(ds_270, Mem1028[ss:sp_987 - 8:segptr32], Mem1028[ss:sp_987 - 4:ui32], Mem1028[ss:sp_987:word16], out cx_1362, out dx_1363, out bx_1364)
	Mem1042[ss:sp_987:word16] = Mem1028[ds_270:0x29E1:word16]
	Mem1045[ss:sp_987 - 2:word16] = Mem1042[ds_270:0x29DF:word16]
	word16 dx_1052
	word16 ax_1049 = fn0800_8CAA(Mem1045[ds_270:0x2A03:word16], 0x02, Mem1045[ds_270:0x2A05:word16], out dx_1052)
	word16 sp_1053 = <invalid>
	Mem1059[ss:sp_1053 - 2:word16] = dx_1052
	Mem1061[ss:sp_1053 - 4:word16] = ax_1049
	selector ds_1066
	word16 dx_1365
	word16 di_1366
	fn0800_409C(ds_270, Mem1061[ss:sp_1053 - 4:word16], Mem1061[ss:sp_1053 - 2:word16], Mem1061[ss:sp_1053:word32], out dx_1365, out di_1366, out ds_1066)
	word16 ax_1074 = Mem1061[ss:bp_500 - 0x000A:word16]
	word16 dx_1075 = Mem1061[ss:bp_500 - 0x000C:word16]
	Mem1077[ss:bp_500 - 0x001A:word16] = ax_1074 & 0x3FFF
	branch (ax_1074 & 0x3FFF) <u Mem1077[ss:bp_500 - 0x0002:word16] l0800_734D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_733A:
	branch (ax_1074 & 0x3FFF) >u Mem1077[ss:bp_500 - 0x0002:word16] l0800_7341
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_733C:
	branch dx_1075 <=u Mem1077[ss:bp_500 - 0x0004:word16] l0800_734D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7341:
	word16 ax_1086 = Mem1077[ss:bp_500 - 0x000C:word16]
	Mem1088[ss:bp_500 - 0x0002:word16] = Mem1077[ss:bp_500 - 0x001A:word16]
	Mem1089[ss:bp_500 - 0x0004:word16] = ax_1086
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_734D:
	word16 ax_1093 = Mem1092[ss:bp_500 - 0x000A:word16]
	Mem1096[ss:bp_500 - 0x0004:word16] = Mem1092[ss:bp_500 - 0x0004:word16]
	Mem1099[ss:bp_500 - 0x0002:word16] = Mem1096[ss:bp_500 - 0x0002:word16] | ax_1093 & 0xC000
	Mem1107[ss:sp_1053 + 0x0002:word16] = 0x0000
	Mem1112[ss:sp_1053:word16] = Mem1107[ds_1066:0x4E8E:word16]
	Mem1115[ss:sp_1053 - 2:word16] = Mem1112[ds_1066:0x4E8C:word16]
	Mem1118[ss:sp_1053 - 4:word16] = Mem1115[ds_1066:0x29E1:word16]
	Mem1121[ss:sp_1053 - 6:word16] = Mem1118[ds_1066:0x29DF:word16]
	word16 cx_1367
	word16 dx_1368
	word16 bx_1369
	fn0800_ACB3(ds_1066, Mem1121[ss:sp_1053 - 6:segptr32], Mem1121[ss:sp_1053 - 2:ui32], Mem1121[ss:sp_1053 + 2:word16], out cx_1367, out dx_1368, out bx_1369)
	Mem1135[ss:sp_1053 + 0x0002:word16] = Mem1121[ds_1066:0x29E1:word16]
	Mem1138[ss:sp_1053:word16] = Mem1135[ds_1066:0x29DF:word16]
	Mem1141[ss:sp_1053 - 2:word16] = Mem1138[ss:bp_500 - 0x0002:word16]
	Mem1144[ss:sp_1053 - 4:word16] = Mem1141[ss:bp_500 - 0x0004:word16]
	selector ds_1149
	word16 dx_1370
	word16 di_1371
	fn0800_409C(ds_1066, Mem1144[ss:sp_1053 - 4:word16], Mem1144[ss:sp_1053 - 2:word16], Mem1144[ss:sp_1053:word32], out dx_1370, out di_1371, out ds_1149)
	Mem1161[ss:sp_1053 + 0x0002:word16] = 0x0000
	Mem1164[ss:sp_1053:word16] = Mem1161[ss:bp_500 - 0x0006:word16]
	Mem1167[ss:sp_1053 - 2:word16] = Mem1164[ss:bp_500 - 0x0008:word16]
	Mem1170[ss:sp_1053 - 4:word16] = Mem1167[ds_1149:0x29E1:word16]
	Mem1173[ss:sp_1053 - 6:word16] = Mem1170[ds_1149:0x29DF:word16]
	word16 cx_1372
	word16 dx_1373
	word16 bx_1374
	fn0800_ACB3(ds_1149, Mem1173[ss:sp_1053 - 6:segptr32], Mem1173[ss:sp_1053 - 2:ui32], Mem1173[ss:sp_1053 + 2:word16], out cx_1372, out dx_1373, out bx_1374)
	word16 v96_1184 = Mem1173[ds_1149:0x4E8C:word16] + 0x0004
	Mem1185[ds_1149:0x4E8C:word16] = v96_1184
	Mem1189[ds_1149:0x4E8E:word16] = Mem1185[ds_1149:0x4E8E:word16] + (v96_1184 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6F20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_73AC(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_73AC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_73AC:
	selector ds_38
	word16 si_160
	word16 di_161
	fn0800_4152(ds, SEQ(ds, 0x2E77), ((uint16) (uint8) Mem12[ds:0x2E75:byte] << 0x08) + (uint16) ((uint8) Mem12[ds:0x2E76:byte]), 0x0000, SEQ(Mem0[ds:0x29E1:word16], Mem9[ds:0x29DF:word16]), out si_160, out di_161, out ds_38)
	word16 cx_162
	word16 dx_163
	word16 bx_164
	fn0800_ACB3(ds_38, SEQ(Mem56[ds_38:0x29E1:word16], Mem59[ds_38:0x29DF:word16]), 0xFFFFFFFC, 0x0001, out cx_162, out dx_163, out bx_164)
	selector ds_90
	word16 dx_165
	word16 di_166
	fn0800_409C(ds_38, Mem82[ds_38:0x2A0F:word16], Mem79[ds_38:0x2A11:word16], SEQ(Mem62[ds_38:0x29E1:word16], Mem76[ds_38:0x29DF:word16]), out dx_165, out di_166, out ds_90)
	word16 bp_112
	word16 di_115
	selector ds_116
	word16 si_167
	dxOut = fn0800_75EA(ds_90, Mem107[ds_90:0x2A07:word16], Mem104[ds_90:0x2A09:word16], Mem101[ds_90:0x2A07:word16], Mem85[ds_90:0x2A09:word16], out bp_112, out si_167, out di_115, out ds_116)
	bpOut = bp_112
	diOut = di_115
	dsOut = ds_116
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_73AC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_741D(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es si Top
// Preserved: bp di ds sp
fn0800_741D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_741D:
	word16 bp_218 = fp - 2
	word16 sp_11 = fp - 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75C1:
	word16 sp_18 = sp_11 - 2
	Mem20[ss:sp_18:word16] = Mem15[ds:0x29E5:word16]
	Mem23[ss:sp_18 - 2:word16] = Mem20[ds:0x29E3:word16]
	word16 dx_27
	word16 ax_24 = fn0800_AD2F(ds, Mem23[ss:sp_18 - 2:segptr32], out dx_27)
	branch dx_27 >=u Mem23[ds:0x2A09:word16] l0800_75D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75D8:
	branch dx_27 != Mem23[ds:0x2A09:word16] l0800_75E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75DA:
	branch ax_24 >=u Mem23[ds:0x2A07:word16] l0800_75E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75E3:
	dxOut = dx_27
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_741D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75E0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75D5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7427:
	Mem57[ss:sp_18:word16] = Mem23[ds:0x29E5:word16]
	Mem60[ss:sp_18 - 2:word16] = Mem57[ds:0x29E3:word16]
	word16 di_526
	word16 dx_525
	word16 ax_61 = fn0800_3E9A(ds, Mem60[ss:sp_18 - 2:segptr32], out dx_525, out di_526, out ds)
	branch ax_61 == 0x0000 l0800_7449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7449:
	Mem79[ss:sp_18:word16] = Mem60[ds:0x29E1:word16]
	Mem82[ss:sp_18 - 2:word16] = Mem79[ds:0x29DF:word16]
	Mem85[ss:sp_18 - 4:word16] = Mem82[ds:0x29E5:word16]
	Mem88[ss:sp_18 - 6:word16] = Mem85[ds:0x29E3:word16]
	word16 dx_528
	word16 di_529
	selector ds_95
	byte ch_527
	Mem103[ss:sp_18 - 0x0004:word16] = fn0800_3DCF(ds, Mem88[ss:sp_18 - 6:segptr32], out ch_527, out dx_528, out di_529, out ds_95)
	word16 cx_530
	word16 bx_532
	word16 dx_531
	word16 di_533
	fn0800_4047(ds_95, Mem103[ss:sp_18 - 0x0004:byte], Mem103[ss:sp_18 - 0x0002:segptr32], out cx_530, out dx_531, out bx_532, out di_533, out ds)
	sp_11 = sp_18 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7439:
	branch ax_61 == 0x0001 l0800_7469
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7469:
	Mem121[ss:sp_18:word16] = Mem60[ds:0x29E1:word16]
	Mem124[ss:sp_18 - 2:word16] = Mem121[ds:0x29DF:word16]
	Mem127[ss:sp_18 - 4:word16] = Mem124[ds:0x29E5:word16]
	Mem130[ss:sp_18 - 6:word16] = Mem127[ds:0x29E3:word16]
	selector ds_134
	word16 di_534
	Mem144[ss:sp_18 - 0x0004:word16] = fn0800_3E5D(ds, Mem130[ss:sp_18 - 6:word32], out di_534, out ds_134)
	Mem146[ss:sp_18 - 0x0006:word16] = ax_61
	selector ds_151
	word16 dx_535
	word16 di_536
	fn0800_409C(ds_134, Mem146[ss:sp_18 - 0x0006:word16], Mem146[ss:sp_18 - 0x0004:word16], Mem146[ss:sp_18 - 0x0002:word32], out dx_535, out di_536, out ds_151)
	Mem162[ss:sp_18:word16] = Mem146[ds_151:0x29E5:word16]
	Mem165[ss:sp_18 - 2:word16] = Mem162[ds_151:0x29E3:word16]
	selector ds_170
	byte ch_537
	word16 di_538
	word16 ax_166 = fn0800_3FAD(ds_151, Mem165[ss:sp_18 - 2:word32], out ch_537, out di_538, out ds_170)
	Mem179[ss:bp_218 - 0x0002:word16] = 0x0000
	Mem180[ss:bp_218 - 0x0004:word16] = ax_166
	Mem183[ss:sp_18:word16] = Mem180[ds_170:0x29E1:word16]
	Mem186[ss:sp_18 - 2:word16] = Mem183[ds_170:0x29DF:word16]
	Mem191[ss:sp_18 - 4:word16] = 0x0000
	selector ds_196
	word16 cx_539
	word16 dx_540
	word16 bx_541
	word16 di_542
	fn0800_401E(ds_170, Mem191[ss:sp_18 - 4:word16], Mem191[ss:sp_18 - 2:word32], out cx_539, out dx_540, out bx_541, out di_542, out ds_196)
	Mem207[ss:sp_18:word16] = Mem191[ss:bp_218 - 0x0002:word16]
	Mem210[ss:sp_18 - 2:word16] = Mem207[ss:bp_218 - 0x0004:word16]
	Mem213[ss:sp_18 - 4:word16] = Mem210[ss:bp_218 - 0x0002:word16]
	Mem216[ss:sp_18 - 6:word16] = Mem213[ss:bp_218 - 0x0004:word16]
	selector ds_222
	word16 si_543
	word16 di_544
	fn0800_75EA(ds_196, Mem216[ss:sp_18 - 6:word16], Mem216[ss:sp_18 - 4:word16], Mem216[ss:sp_18 - 2:word16], Mem216[ss:sp_18:word16], out bp_218, out si_543, out di_544, out ds_222)
	word16 sp_226 = <invalid>
	Mem234[ss:sp_226 + 0x0006:word16] = 0x0001
	word16 dx_236 = Mem234[ds_222:0x2A03:word16]
	word16 dx_242 = -(dx_236 + 0x0002)
	Mem247[ss:sp_226 + 0x0004:word16] = -(Mem234[ds_222:0x2A05:word16] + (dx_236 <u 0x0002)) - (dx_242 == 0x0000)
	Mem249[ss:sp_226 + 0x0002:word16] = dx_242
	Mem252[ss:sp_226:word16] = Mem249[ds_222:0x29E1:word16]
	Mem255[ss:sp_226 - 2:word16] = Mem252[ds_222:0x29DF:word16]
	word16 cx_545
	word16 dx_546
	word16 bx_547
	fn0800_ACB3(ds_222, Mem255[ss:sp_226 - 2:segptr32], Mem255[ss:sp_226 + 2:ui32], Mem255[ss:sp_226 + 6:word16], out cx_545, out dx_546, out bx_547)
	Mem269[ss:sp_226 + 0x0006:word16] = Mem255[ds_222:0x29E1:word16]
	Mem272[ss:sp_226 + 0x0004:word16] = Mem269[ds_222:0x29DF:word16]
	Mem275[ss:sp_226 + 0x0002:word16] = Mem272[ds_222:0x2A03:word16]
	word16 dx_548
	word16 di_549
	fn0800_40BF(ds_222, Mem275[ss:sp_226 + 0x0002:word16], Mem275[ss:sp_226 + 0x0004:word32], out dx_548, out di_549, out ds)
	word16 dx_289 = Mem275[ds:0x2A03:word16]
	branch Mem275[ds:0x2A05:word16] != Mem275[ss:bp_218 - 0x0002:word16] l0800_754A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7506:
	branch dx_289 != Mem275[ss:bp_218 - 0x0004:word16] l0800_754A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_754A:
	Mem298[ss:sp_226 + 0x0006:word16] = 0x0001
	Mem302[ss:sp_226 + 0x0004:word16] = Mem298[ds:0x2A05:word16]
	Mem305[ss:sp_226 + 0x0002:word16] = Mem302[ds:0x2A03:word16]
	Mem308[ss:sp_226:word16] = Mem305[ds:0x29E1:word16]
	Mem311[ss:sp_226 - 2:word16] = Mem308[ds:0x29DF:word16]
	word16 cx_561
	word16 dx_562
	word16 bx_563
	fn0800_ACB3(ds, Mem311[ss:sp_226 - 2:segptr32], Mem311[ss:sp_226 + 2:ui32], Mem311[ss:sp_226 + 6:word16], out cx_561, out dx_562, out bx_563)
	sp_11 = sp_226 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_750B:
	Mem325[ss:sp_226 + 0x0006:word16] = 0x0001
	word16 dx_329 = -Mem325[ss:bp_218 - 0x0004:word16]
	Mem334[ss:sp_226 + 0x0004:word16] = -Mem325[ss:bp_218 - 0x0002:word16] - (dx_329 == 0x0000)
	Mem336[ss:sp_226 + 0x0002:word16] = dx_329
	Mem339[ss:sp_226:word16] = Mem336[ds:0x29E5:word16]
	Mem342[ss:sp_226 - 2:word16] = Mem339[ds:0x29E3:word16]
	word16 cx_564
	word16 dx_565
	word16 bx_566
	fn0800_ACB3(ds, Mem342[ss:sp_226 - 2:segptr32], Mem342[ss:sp_226 + 2:ui32], Mem342[ss:sp_226 + 6:word16], out cx_564, out dx_565, out bx_566)
	Mem356[ss:sp_226 + 0x0006:word16] = Mem342[ss:bp_218 - 0x0002:word16]
	Mem359[ss:sp_226 + 0x0004:word16] = Mem356[ss:bp_218 - 0x0004:word16]
	Mem362[ss:sp_226 + 0x0002:word16] = Mem359[ds:0x29E1:word16]
	Mem365[ss:sp_226:word16] = Mem362[ds:0x29DF:word16]
	Mem368[ss:sp_226 - 2:word16] = Mem365[ds:0x29E5:word16]
	Mem371[ss:sp_226 - 4:word16] = Mem368[ds:0x29E3:word16]
	word16 dx_567
	word16 si_568
	word16 di_569
	fn0800_3B0A(ds, Mem371[ss:sp_226 + 4:word16], Mem371[ss:sp_226 + 6:word16], out dx_567, out bp_218, out si_568, out di_569, out ds)
	word16 sp_381 = <invalid>
	sp_11 = sp_381 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_743E:
	branch ax_61 != 0x0003 l0800_7446
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7446:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_758F:
	Mem392[ss:sp_18:word16] = Mem60[ds:0x29E5:word16]
	Mem395[ss:sp_18 - 2:word16] = Mem392[ds:0x29E3:word16]
	word16 dx_550
	fn0800_AD2F(ds, Mem395[ss:sp_18 - 2:segptr32], out dx_550)
	ui32 dx_ax_523 = <invalid>
	ui32 bx_cx_502 = SEQ(Mem395[ds:0x2A09:word16], Mem395[ds:0x2A07:word16]) - dx_ax_523
	Mem414[ss:sp_18:word16] = SLICE(bx_cx_502, word16, 16)
	Mem416[ss:sp_18 - 2:word16] = (word16) bx_cx_502
	Mem419[ss:sp_18 - 4:word16] = Mem416[ds:0x29E1:word16]
	Mem422[ss:sp_18 - 6:word16] = Mem419[ds:0x29DF:word16]
	Mem425[ss:sp_18 - 8:word16] = Mem422[ds:0x29E5:word16]
	Mem428[ss:sp_18 - 10:word16] = Mem425[ds:0x29E3:word16]
	word16 dx_551
	word16 si_552
	word16 di_553
	fn0800_3B0A(ds, Mem428[ss:sp_18 - 2:word16], Mem428[ss:sp_18:word16], out dx_551, out bp_218, out si_552, out di_553, out ds)
	word16 sp_438 = <invalid>
	sp_11 = sp_438 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7443:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7566:
	word16 si_445 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7588:
	branch si_445 != 0x0003 l0800_756A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_756A:
	word16 sp_455 = sp_11 - 2
	Mem457[ss:sp_455:word16] = Mem452[ds:0x29E1:word16]
	Mem460[ss:sp_455 - 2:word16] = Mem457[ds:0x29DF:word16]
	Mem463[ss:sp_455 - 4:word16] = Mem460[ds:0x29E5:word16]
	Mem466[ss:sp_455 - 6:word16] = Mem463[ds:0x29E3:word16]
	selector ds_473
	byte ch_554
	word16 dx_555
	word16 di_556
	Mem481[ss:sp_455 - 0x0004:word16] = fn0800_3DCF(ds, Mem466[ss:sp_455 - 6:segptr32], out ch_554, out dx_555, out di_556, out ds_473)
	word16 cx_557
	word16 dx_558
	word16 bx_559
	word16 di_560
	fn0800_4047(ds_473, Mem481[ss:sp_455 - 0x0004:byte], Mem481[ss:sp_455 - 0x0002:segptr32], out cx_557, out dx_558, out bx_559, out di_560, out ds)
	si_445 = si_445 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_758D:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_75EA(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_75EA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75EA:
	Mem16[ds:0x4680:word16] = wArg04
	Mem17[ds:0x467E:word16] = wArg02
	Mem18[ds:0x2A05:word16] = wArg04
	Mem19[ds:0x2A03:word16] = wArg02
	Mem20[ds:0x4678:word16] = wArg04
	Mem21[ds:0x4676:word16] = wArg02
	Mem28[ds:0x4E86:word16] = wArg08 - (wArg06 <u 0x0012)
	Mem29[ds:0x4E84:word16] = wArg06 - 0x0012
	word16 bp_177 = fp - 2
	word16 sp_10 = fp - 0x001A
	word16 dx_24 = wArg06 - 0x0012
	branch Mem29[ds:0x4680:word16] >u 0x0000 l0800_7634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7626:
	branch Mem29[ds:0x4680:word16] == 0x0000 l0800_762B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_762B:
	branch wArg02 >u 0x0012 l0800_7634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7634:
	Mem36[ds:0x2E4B:word16] = 0x0000
	Mem37[ds:0x2E49:word16] = 0x0000
	Mem38[ds:0x465C:word16] = 0x0000
	Mem39[ds:0x4668:word16] = 0x0000
	Mem40[ds:0x4666:word16] = 0x0000
	Mem41[ds:0x2A05:word16] = 0x0000
	Mem42[ds:0x2A03:word16] = 0x0000
	Mem43[ds:0x2A01:word16] = 0x0000
	Mem44[ds:0x29FF:word16] = 0x0000
	Mem45[ds:0x467C:word16] = 0x0000
	Mem46[ds:0x467A:word16] = 0x0000
	Mem47[ds:0x4674:word16] = 0x0000
	Mem48[ds:0x4672:word16] = 0x0000
	Mem49[ds:0x2E43:word16] = 0x0000
	Mem50[ds:0x2E45:word16] = 0x0000
	Mem51[ds:0x4E82:word16] = 0x0000
	Mem52[ds:0x4E8A:word16] = 0x0000
	Mem53[ds:0x4E88:word16] = 0x0000
	Mem54[ds:0x29F9:word16] = 0x0000
	Mem55[ds:0x29F7:word16] = 0x0000
	word16 bp_65
	selector ds_69
	word16 dx_70
	word16 si_1043
	word16 di_1044
	word16 ax_64 = fn0800_4311(ds, 0x000F, 0x0001, out dx_70, out bp_65, out si_1043, out di_1044, out ds_69)
	Mem80[ss:bp_65 - 0x0014:word16] = dx_70
	Mem81[ss:bp_65 - 0x0016:word16] = ax_64
	Mem84[ds_69:0x2E73:word16] = dx_70 + 0x0001
	Mem85[ds_69:0x2E71:word16] = 0x0000
	word16 sp_73 = <invalid>
	Mem89[ss:sp_73 + 0x0002:word16] = 0x0001
	Mem91[ss:sp_73:word16] = 0x0010
	word16 bp_93
	selector ds_97
	word16 dx_98
	word16 si_1045
	word16 di_1046
	word16 ax_92 = fn0800_4311(ds_69, Mem91[ss:sp_73:word16], Mem91[ss:sp_73 + 2:word16], out dx_98, out bp_93, out si_1045, out di_1046, out ds_97)
	Mem108[ss:bp_93 - 0x0010:word16] = dx_98
	Mem109[ss:bp_93 - 0x0012:word16] = ax_92
	Mem112[ds_97:0x2E39:word16] = dx_98 + 0x0001
	Mem113[ds_97:0x2E37:word16] = 0x0000
	word16 sp_101 = <invalid>
	Mem117[ss:sp_101 + 0x0002:word16] = 0x0001
	Mem119[ss:sp_101:word16] = 0x0010
	word16 bp_121
	selector ds_125
	word16 dx_126
	word16 si_1047
	word16 di_1048
	word16 ax_120 = fn0800_4311(ds_97, Mem119[ss:sp_101:word16], Mem119[ss:sp_101 + 2:word16], out dx_126, out bp_121, out si_1047, out di_1048, out ds_125)
	Mem136[ss:bp_121 - 0x000C:word16] = dx_126
	Mem137[ss:bp_121 - 0x000E:word16] = ax_120
	Mem140[ds_125:0x2E35:word16] = dx_126 + 0x0001
	Mem141[ds_125:0x2E33:word16] = 0x0000
	word16 sp_129 = <invalid>
	Mem145[ss:sp_129 + 0x0002:word16] = 0x0001
	Mem147[ss:sp_129:word16] = 0x0010
	word16 bp_149
	selector ds_153
	word16 dx_154
	word16 si_1049
	word16 di_1050
	word16 ax_148 = fn0800_4311(ds_125, Mem147[ss:sp_129:word16], Mem147[ss:sp_129 + 2:word16], out dx_154, out bp_149, out si_1049, out di_1050, out ds_153)
	Mem164[ss:bp_149 - 0x0008:word16] = dx_154
	Mem165[ss:bp_149 - 0x000A:word16] = ax_148
	Mem168[ds_153:0x2E41:word16] = dx_154 + 0x0001
	Mem169[ds_153:0x2E3F:word16] = 0x0000
	word16 sp_157 = <invalid>
	Mem173[ss:sp_157 + 0x0002:word16] = 0x0001
	Mem175[ss:sp_157:word16] = 0x0010
	selector ds_181
	word16 dx_182
	word16 si_1051
	word16 di_1052
	word16 ax_176 = fn0800_4311(ds_153, Mem175[ss:sp_157:word16], Mem175[ss:sp_157 + 2:word16], out dx_182, out bp_177, out si_1051, out di_1052, out ds_181)
	Mem192[ss:bp_177 - 0x0004:word16] = dx_182
	Mem193[ss:bp_177 - 0x0006:word16] = ax_176
	Mem196[ds_181:0x2E3D:word16] = dx_182 + 0x0001
	Mem197[ds_181:0x2E3B:word16] = 0x0000
	fn0800_87F8(ds_181)
	word16 sp_185 = <invalid>
	Mem208[ss:sp_185 + 0x0002:word16] = Mem197[ds_181:0x29E5:word16]
	Mem211[ss:sp_185:word16] = Mem208[ds_181:0x29E3:word16]
	word16 dx_215
	word16 ax_212 = fn0800_AD2F(ds_181, Mem211[ss:sp_185:segptr32], out dx_215)
	Mem223[ds_181:0x4664:word16] = dx_215
	Mem224[ds_181:0x4662:word16] = ax_212
	Mem227[ss:sp_185 + 0x0002:word16] = Mem224[ds_181:0x29E1:word16]
	Mem230[ss:sp_185:word16] = Mem227[ds_181:0x29DF:word16]
	word16 dx_234
	word16 ax_231 = fn0800_AD2F(ds_181, Mem230[ss:sp_185:segptr32], out dx_234)
	Mem241[ds_181:0x4660:word16] = dx_234
	Mem242[ds_181:0x465E:word16] = ax_231
	Mem245[ss:sp_185 + 0x0002:word16] = Mem242[ds_181:0x29E1:word16]
	Mem248[ss:sp_185:word16] = Mem245[ds_181:0x29DF:word16]
	int32 dx_ax_250 = (int32) Mem248[ds_181:0x2A21:word16]
	word16 ax_251 = SLICE(dx_ax_250, word16, 0)
	Mem259[ss:sp_185 - 2:word16] = SLICE(dx_ax_250, word16, 16) + 0x524E + (ax_251 <u 0x4300)
	Mem261[ss:sp_185 - 4:word16] = ax_251 + 0x4300
	selector ds_266
	word16 dx_1053
	word16 di_1054
	fn0800_409C(ds_181, Mem261[ss:sp_185 - 4:word16], Mem261[ss:sp_185 - 2:word16], Mem261[ss:sp_185:word32], out dx_1053, out di_1054, out ds_266)
	Mem277[ss:sp_185 + 0x0002:word16] = Mem261[ds_266:0x29E1:word16]
	Mem280[ss:sp_185:word16] = Mem277[ds_266:0x29DF:word16]
	Mem283[ss:sp_185 - 2:word16] = Mem280[ds_266:0x4680:word16]
	Mem286[ss:sp_185 - 4:word16] = Mem283[ds_266:0x467E:word16]
	selector ds_291
	word16 dx_1055
	word16 di_1056
	fn0800_409C(ds_266, Mem286[ss:sp_185 - 4:word16], Mem286[ss:sp_185 - 2:word16], Mem286[ss:sp_185:word32], out dx_1055, out di_1056, out ds_291)
	Mem301[ss:sp_185 + 0x0002:word16] = Mem286[ds_291:0x29E1:word16]
	Mem304[ss:sp_185:word16] = Mem301[ds_291:0x29DF:word16]
	Mem309[ss:sp_185 - 2:word16] = 0x0000
	Mem311[ss:sp_185 - 4:word16] = 0x0000
	selector ds_316
	word16 dx_1057
	word16 di_1058
	fn0800_409C(ds_291, Mem311[ss:sp_185 - 4:word16], Mem311[ss:sp_185 - 2:word16], Mem311[ss:sp_185:word32], out dx_1057, out di_1058, out ds_316)
	Mem326[ss:sp_185 + 0x0002:word16] = Mem311[ds_316:0x29E1:word16]
	Mem329[ss:sp_185:word16] = Mem326[ds_316:0x29DF:word16]
	Mem334[ss:sp_185 - 2:word16] = 0x0000
	selector ds_339
	word16 dx_1060
	word16 bx_1061
	word16 di_1062
	word16 cx_1059
	fn0800_401E(ds_316, Mem334[ss:sp_185 - 2:word16], Mem334[ss:sp_185:word32], out cx_1059, out dx_1060, out bx_1061, out di_1062, out ds_339)
	Mem349[ss:sp_185 + 0x0002:word16] = Mem334[ds_339:0x29E1:word16]
	Mem352[ss:sp_185:word16] = Mem349[ds_339:0x29DF:word16]
	Mem357[ss:sp_185 - 2:word16] = 0x0000
	selector ds_362
	word16 dx_1064
	word16 bx_1065
	word16 di_1066
	word16 cx_1063
	fn0800_401E(ds_339, Mem357[ss:sp_185 - 2:word16], Mem357[ss:sp_185:word32], out cx_1063, out dx_1064, out bx_1065, out di_1066, out ds_362)
	Mem372[ss:sp_185 + 0x0002:word16] = Mem357[ds_362:0x29E1:word16]
	Mem375[ss:sp_185:word16] = Mem372[ds_362:0x29DF:word16]
	Mem380[ss:sp_185 - 2:word16] = 0x0000
	word16 bx_382
	word16 cx_383
	word16 dx_386
	word16 di_1067
	selector ds_385
	fn0800_401E(ds_362, Mem380[ss:sp_185 - 2:word16], Mem380[ss:sp_185:word32], out cx_383, out dx_386, out bx_382, out di_1067, out ds_385)
	Mem395[ss:sp_185 + 0x0002:word16] = ds_385
	Mem398[ss:sp_185:word16] = 0x2240
	word16 si_1068
	word16 di_1069
	fn0800_B2EF(cx_383, dx_386, bx_382, ds_385, Mem398[ss:sp_185:word32], out si_1068, out di_1069)
	Mem409[ss:bp_177 - 0x0002:word16] = Mem398[ds_385:0x2E4F:word16]
	Mem412[ss:sp_185 + 0x0002:word16] = 0x0001
	word16 ax_410 = 0x0001
	branch Mem412[ds_385:0x2A1F:word16] == 0x0000 l0800_7808
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7808:
	ax_410 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7806:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_780A:
	Mem422[ss:sp_185:word16] = ax_410
	fn0800_8465(ds_385, Mem422[ss:sp_185:word16], Mem422[ss:sp_185 + 2:word16])
	Mem434[ss:sp_185 + 0x0002:word16] = 0x0001
	word16 ax_432 = 0x0001
	branch Mem434[ds_385:0x2E4F:word16] == 0x0000 l0800_781E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_781E:
	ax_432 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_781C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7820:
	Mem444[ss:sp_185:word16] = ax_432
	fn0800_8465(ds_385, Mem444[ss:sp_185:word16], Mem444[ss:sp_185 + 2:word16])
	branch Mem444[ds_385:0x2A23:word16] == 0x0001 l0800_7843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_782E:
	branch Mem444[ds_385:0x2E4F:word16] == 0x0000 l0800_7843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7835:
	Mem460[ss:sp_185 + 0x0002:word16] = 0x0010
	Mem463[ss:sp_185:word16] = Mem460[ds_385:0x2E4F:word16]
	fn0800_8465(ds_385, Mem463[ss:sp_185:word16], Mem463[ss:sp_185 + 2:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7843:
	word16 ax_475 = Mem474[ds_385:0x2A21:word16]
	byte ah_517 = SLICE(ax_475, byte, 8)
	branch ax_475 == 0x0001 l0800_7852
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7852:
	ah_517 = SLICE((uint16) (uint8) fn0800_7A02(ds_385, out ds_385), byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_784B:
	branch ax_475 == 0x0002 l0800_7857
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7857:
	ah_517 = SLICE((uint16) (uint8) fn0800_7C78(ds_385, out ds_385), byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7850:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_785A:
	word16 si_503 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7870:
	branch Mem507[ds_385:0x4E82:word16] != 0x0000 l0800_785E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_785E:
	Mem520[ss:sp_185 + 0x0002:word16] = SEQ(ah_517, Mem507[ds_385:si_503 + 0x0000:byte])
	word16 di_1070
	ah_517 = SLICE((uint16) (uint8) fn0800_8624(ds_385, Mem520[ss:sp_185 + 0x0002:byte], out di_1070, out ds_385), byte, 8) (alias)
	Mem535[ds_385:0x4E82:word16] = Mem520[ds_385:0x4E82:word16] - 0x0001
	si_503 = si_503 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7877:
	Mem543[ds_385:0x2E4F:word16] = Mem507[ss:bp_177 - 0x0002:word16]
	ui32 ax_dx_956 = SEQ(Mem543[ds_385:0x4680:word16], Mem543[ds_385:0x467E:word16]) - SEQ(Mem543[ds_385:0x2A05:word16], Mem543[ds_385:0x2A03:word16])
	word16 dx_546 = (word16) ax_dx_956
	word16 ax_549 = SLICE(ax_dx_956, word16, 16)
	branch ax_549 >u Mem543[ds_385:0x4E8A:word16] l0800_78B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7892:
	branch ax_549 <u Mem543[ds_385:0x4E8A:word16] l0800_789A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7894:
	branch dx_546 >=u Mem543[ds_385:0x4E88:word16] l0800_78B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78B3:
	Mem556[ds_385:0x4E8A:word16] = 0x0000
	Mem557[ds_385:0x4E88:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_789A:
	ui32 ax_dx_958 = SEQ(Mem543[ds_385:0x4680:word16], Mem543[ds_385:0x467E:word16]) - SEQ(Mem543[ds_385:0x2A05:word16], Mem543[ds_385:0x2A03:word16])
	Mem567[ds_385:0x4E88:word16] = v34_566
	ui32 v35_v34_960 = SEQ(Mem567[ds_385:0x4E8A:word16], Mem543[ds_385:0x4E88:word16]) - ax_dx_958
	Mem571[ds_385:0x4E8A:word16] = SLICE(v35_v34_960, word16, 16)
	word16 v34_566 = (word16) v35_v34_960
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78BF:
	branch Mem574[ds_385:0x2A21:word16] != 0x0002 l0800_78D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78C6:
	word16 v39_577 = Mem574[ds_385:0x4E88:word16] + 0x0002
	Mem578[ds_385:0x4E88:word16] = v39_577
	Mem582[ds_385:0x4E8A:word16] = Mem578[ds_385:0x4E8A:word16] + (v39_577 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78D0:
	Mem596[ss:sp_185 + 0x0002:word16] = Mem585[ds_385:0x29E1:word16]
	Mem599[ss:sp_185:word16] = Mem596[ds_385:0x29DF:word16]
	word16 dx_1071
	fn0800_AD2F(ds_385, Mem599[ss:sp_185:segptr32], out dx_1071)
	int32 dx_ax_1038 = <invalid>
	int32 dx_ax_962 = dx_ax_1038 - SEQ(Mem599[ds_385:0x4660:word16], Mem599[ds_385:0x465E:word16])
	Mem614[ds_385:0x2A05:word16] = SLICE(dx_ax_962, word16, 16)
	Mem615[ds_385:0x2A03:word16] = (word16) dx_ax_962
	Mem618[ss:sp_185 + 0x0002:word16] = 0x0000
	word16 dx_620 = Mem618[ds_385:0x465E:word16]
	Mem627[ss:sp_185:word16] = Mem618[ds_385:0x4660:word16] + (dx_620 <u 0x0008)
	Mem629[ss:sp_185 - 0x0002:word16] = dx_620 + 0x0008
	Mem632[ss:sp_185 - 0x0004:word16] = Mem629[ds_385:0x29E1:word16]
	Mem635[ss:sp_185 - 0x0006:word16] = Mem632[ds_385:0x29DF:word16]
	word16 cx_1072
	word16 dx_1073
	word16 bx_1074
	fn0800_ACB3(ds_385, Mem635[ss:sp_185 - 0x0006:segptr32], Mem635[ss:sp_185 - 0x0002:ui32], Mem635[ss:sp_185 + 0x0002:word16], out cx_1072, out dx_1073, out bx_1074)
	Mem648[ss:sp_185 + 0x0002:word16] = Mem635[ds_385:0x29E1:word16]
	Mem651[ss:sp_185:word16] = Mem648[ds_385:0x29DF:word16]
	word16 dx_653 = Mem651[ds_385:0x2A03:word16]
	Mem660[ss:sp_185 - 0x0002:word16] = Mem651[ds_385:0x2A05:word16] - (dx_653 <u 0x0012)
	Mem662[ss:sp_185 - 0x0004:word16] = dx_653 - 0x0012
	selector ds_667
	word16 dx_1075
	word16 di_1076
	fn0800_409C(ds_385, Mem662[ss:sp_185 - 0x0004:word16], Mem662[ss:sp_185 - 0x0002:word16], Mem662[ss:sp_185:word32], out dx_1075, out di_1076, out ds_667)
	Mem678[ss:sp_185 + 0x0002:word16] = Mem662[ds_667:0x29E1:word16]
	Mem681[ss:sp_185:word16] = Mem678[ds_667:0x29DF:word16]
	Mem684[ss:sp_185 - 0x0002:word16] = Mem681[ds_667:0x2E4B:word16]
	selector ds_689
	word16 cx_1077
	word16 dx_1078
	word16 bx_1079
	word16 di_1080
	fn0800_401E(ds_667, Mem684[ss:sp_185 - 0x0002:word16], Mem684[ss:sp_185:word32], out cx_1077, out dx_1078, out bx_1079, out di_1080, out ds_689)
	Mem700[ss:sp_185 + 0x0002:word16] = Mem684[ds_689:0x29E1:word16]
	Mem703[ss:sp_185:word16] = Mem700[ds_689:0x29DF:word16]
	Mem706[ss:sp_185 - 0x0002:word16] = Mem703[ds_689:0x2E49:word16]
	selector ds_711
	word16 cx_1081
	word16 dx_1082
	word16 bx_1083
	word16 di_1084
	byte ah_728 = SLICE(fn0800_401E(ds_689, Mem706[ss:sp_185 - 0x0002:word16], Mem706[ss:sp_185:word32], out cx_1081, out dx_1082, out bx_1083, out di_1084, out ds_711), byte, 8)
	Mem722[ss:sp_185 + 0x0002:word16] = Mem706[ds_711:0x29E1:word16]
	Mem725[ss:sp_185:word16] = Mem722[ds_711:0x29DF:word16]
	Mem730[ss:sp_185 - 0x0002:word16] = SEQ(ah_728, Mem725[ds_711:0x4E88:byte])
	selector ds_737
	word16 cx_1085
	word16 dx_1086
	word16 bx_1087
	word16 di_1088
	byte ah_752 = SLICE(fn0800_4047(ds_711, Mem730[ss:sp_185 - 0x0002:byte], Mem730[ss:sp_185:segptr32], out cx_1085, out dx_1086, out bx_1087, out di_1088, out ds_737), byte, 8)
	Mem746[ss:sp_185 + 0x0002:word16] = Mem730[ds_737:0x29E1:word16]
	Mem749[ss:sp_185:word16] = Mem746[ds_737:0x29DF:word16]
	Mem754[ss:sp_185 - 0x0002:word16] = SEQ(ah_752, Mem749[ds_737:0x29F7:byte])
	selector ds_761
	word16 cx_1089
	word16 dx_1090
	word16 bx_1091
	word16 di_1092
	fn0800_4047(ds_737, Mem754[ss:sp_185 - 0x0002:byte], Mem754[ss:sp_185:segptr32], out cx_1089, out dx_1090, out bx_1091, out di_1092, out ds_761)
	Mem769[ss:sp_185 + 0x0002:word16] = 0x0000
	ui32 ax_dx_964 = SEQ(Mem769[ds_761:0x4660:word16], Mem769[ds_761:0x465E:word16]) + SEQ(Mem769[ds_761:0x2A05:word16], Mem769[ds_761:0x2A03:word16])
	Mem778[ss:sp_185:word16] = SLICE(ax_dx_964, word16, 16)
	Mem780[ss:sp_185 - 0x0002:word16] = (word16) ax_dx_964
	Mem783[ss:sp_185 - 0x0004:word16] = Mem780[ds_761:0x29E1:word16]
	Mem786[ss:sp_185 - 0x0006:word16] = Mem783[ds_761:0x29DF:word16]
	word16 cx_1093
	word16 dx_1094
	word16 bx_1095
	fn0800_ACB3(ds_761, Mem786[ss:sp_185 - 0x0006:segptr32], Mem786[ss:sp_185 - 0x0002:ui32], Mem786[ss:sp_185 + 0x0002:word16], out cx_1093, out dx_1094, out bx_1095)
	Mem799[ss:sp_185 + 0x0002:word16] = 0x0000
	ui32 ax_dx_966 = SEQ(Mem799[ds_761:0x4664:word16], Mem799[ds_761:0x4662:word16]) + SEQ(Mem799[ds_761:0x4680:word16], Mem799[ds_761:0x467E:word16])
	Mem808[ss:sp_185:word16] = SLICE(ax_dx_966, word16, 16)
	Mem810[ss:sp_185 - 0x0002:word16] = (word16) ax_dx_966
	Mem813[ss:sp_185 - 0x0004:word16] = Mem810[ds_761:0x29E5:word16]
	Mem816[ss:sp_185 - 0x0006:word16] = Mem813[ds_761:0x29E3:word16]
	word16 cx_1096
	word16 dx_1097
	word16 bx_1098
	fn0800_ACB3(ds_761, Mem816[ss:sp_185 - 0x0006:segptr32], Mem816[ss:sp_185 - 0x0002:ui32], Mem816[ss:sp_185 + 0x0002:word16], out cx_1096, out dx_1097, out bx_1098)
	Mem834[ss:sp_185 + 0x0002:word16] = Mem816[ss:bp_177 - 0x0014:word16]
	Mem837[ss:sp_185:word16] = Mem834[ss:bp_177 - 0x0016:word16]
	selector ds_841
	word16 cx_1099
	word16 dx_1100
	word16 bx_1101
	fn0800_4346(ds_761, Mem837[ss:sp_185 + 0x0002:word16], out cx_1099, out dx_1100, out bx_1101, out ds_841)
	Mem852[ss:sp_185 + 0x0002:word16] = Mem837[ss:bp_177 - 0x0010:word16]
	Mem855[ss:sp_185:word16] = Mem852[ss:bp_177 - 0x0012:word16]
	selector ds_859
	word16 cx_1102
	word16 dx_1103
	word16 bx_1104
	fn0800_4346(ds_841, Mem855[ss:sp_185 + 0x0002:word16], out cx_1102, out dx_1103, out bx_1104, out ds_859)
	Mem870[ss:sp_185 + 0x0002:word16] = Mem855[ss:bp_177 - 0x000C:word16]
	Mem873[ss:sp_185:word16] = Mem870[ss:bp_177 - 0x000E:word16]
	selector ds_877
	word16 cx_1105
	word16 dx_1106
	word16 bx_1107
	fn0800_4346(ds_859, Mem873[ss:sp_185 + 0x0002:word16], out cx_1105, out dx_1106, out bx_1107, out ds_877)
	Mem888[ss:sp_185 + 0x0002:word16] = Mem873[ss:bp_177 - 0x0008:word16]
	Mem891[ss:sp_185:word16] = Mem888[ss:bp_177 - 0x000A:word16]
	selector ds_895
	word16 cx_1108
	word16 dx_1109
	word16 bx_1110
	fn0800_4346(ds_877, Mem891[ss:sp_185 + 0x0002:word16], out cx_1108, out dx_1109, out bx_1110, out ds_895)
	Mem906[ss:sp_185 + 0x0002:word16] = Mem891[ss:bp_177 - 0x0004:word16]
	Mem909[ss:sp_185:word16] = Mem906[ss:bp_177 - 0x0006:word16]
	word16 bx_911
	word16 cx_912
	fn0800_4346(ds_895, Mem909[ss:sp_185 + 0x0002:word16], out cx_912, out dx_24, out bx_911, out ds)
	Mem923[ss:sp_185 + 0x0002:word16] = ds
	Mem926[ss:sp_185:word16] = 0x223C
	word16 si_1111
	fn0800_B2EF(cx_912, dx_24, bx_911, ds, Mem926[ss:sp_185:word32], out si_1111, out di)
	sp_10 = sp_185 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7631:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7628:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_79FD:
	word16 si_940 = Mem939[ss:sp_10:word16]
	bpOut = Mem939[ss:bp_177:word16]
	siOut = si_940
	diOut = di
	dsOut = ds
	return dx_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_75EA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_7A02(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_7A02_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7A02:
	word32 dwLoc06_858 = SEQ(Mem13[ds:0x4664:word16], Mem13[ds:0x4662:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C1A:
	word16 ax_21 = Mem20[ds:0x467C:word16]
	word16 dx_22 = Mem20[ds:0x467A:word16]
	branch ax_21 >=u Mem20[ds:0x4680:word16] l0800_7C2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C2A:
	branch ax_21 != Mem20[ds:0x4680:word16] l0800_7C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C2C:
	branch dx_22 >=u Mem20[ds:0x467E:word16] l0800_7C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C35:
	word16 ax_53
	Mem33[ds:0x2E43:word16] = Mem20[ds:0x2E43:word16] >>u 0x10 - Mem20[ds:0x2E45:byte]
	branch Mem33[ds:0x2E45:word16] != 0x0000 l0800_7C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C46:
	ax_53 = ax_21 (alias)
	branch Mem33[ds:0x4E82:word16] == 0x0000 l0800_7C57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C4D:
	word16 di_57
	ax_53 = (uint16) (uint8) fn0800_8624(ds, Mem33[ds:0x2E43:byte], out di_57, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C57:
	branch Mem67[ds:0x2E45:word16] >u 0x0008 l0800_7C65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C5E:
	branch Mem67[ds:0x4E82:word16] == 0x0000 l0800_7C73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C65:
	word16 di_88
	ax_53 = (uint16) (uint8) fn0800_8624(ds, SLICE(Mem67[ds:0x2E43:word16] >>u 0x08, byte, 0), out di_88, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C73:
	dsOut = ds
	return (byte) ax_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7A02_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C32:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C27:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7A19:
	fn0800_43D4(0x284F, ds, 0x0010)
	fn0800_43D4(0x278F, ds, 0x0010)
	fn0800_43D4(0x290F, ds, 0x0010)
	ds = fn0800_7FDC(ds)
	word16 cx_862
	word16 dx_863
	word16 bx_864
	fn0800_ACB3(ds, SEQ(Mem190[ds:0x29E5:word16], Mem193[ds:0x29E3:word16]), dwLoc06_858, 0x0000, out cx_862, out dx_863, out bx_864)
	fn0800_441C(ds, SEQ(ds, 0x290F), 0x0010)
	fn0800_441C(ds, SEQ(ds, 0x284F), 0x0010)
	fn0800_441C(ds, SEQ(ds, 0x278F), 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x290F), 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x284F), 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x278F), 0x0010)
	fn0800_8489(ds, Mem321[ds:0x466A:word16], 0x0010)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BC0:
	word16 ax_334 = Mem333[ds:0x466A:word16]
	word16 dx_335 = Mem333[ds:0x466C:word16]
	word16 v18_336 = Mem333[ds:0x466A:word16] - 0x0001
	Mem337[ds:0x466A:word16] = v18_336
	Mem341[ds:0x466C:word16] = Mem337[ds:0x466C:word16] - (v18_336 <u 0x0000)
	branch (ax_334 | dx_335) == 0x0000 l0800_7BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BD8:
	branch Mem341[ds:0x2E45:word16] != 0x0000 l0800_7BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BDF:
	word16 si_348 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BF5:
	branch Mem352[ds:0x4E82:word16] != 0x0000 l0800_7BE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BE3:
	word16 di_867
	fn0800_8624(ds, Mem352[ds:si_348 + 0x0000:byte], out di_867, out ds)
	Mem380[ds:0x4E82:word16] = Mem365[ds:0x4E82:word16] - 0x0001
	si_348 = si_348 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BFC:
	word16 v29_384 = Mem383[ds:0x29F7:word16] + 0x0001
	Mem385[ds:0x29F7:word16] = v29_384
	Mem389[ds:0x29F9:word16] = Mem385[ds:0x29F9:word16] + (v29_384 <u 0x0000)
	word16 dx_404
	dwLoc06_858 = SEQ(dx_404, fn0800_AD2F(ds, SEQ(Mem389[ds:0x29E5:word16], Mem397[ds:0x29E3:word16]), out dx_404)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BD5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7ACB:
	word16 di_426
	word16 dx_866
	word16 cx_865
	word16 ax_423 = fn0800_3E27(ds, SEQ(Mem341[ds:0x29DD:word16], Mem419[ds:0x29DB:word16]), out cx_865, out dx_866, out di_426, out ds)
	Mem435[ds:0x2E47:word16] = ax_423
	word16 v25_436 = Mem435[ds:0x467A:word16] + ax_423
	Mem437[ds:0x467A:word16] = v25_436
	Mem441[ds:0x467C:word16] = Mem437[ds:0x467C:word16] + (v25_436 <u 0x0000)
	fn0800_8407(ds, Mem447[ds:0x2E47:word16], SEQ(ds, 0x290F))
	branch Mem450[ds:0x2E47:word16] == 0x0000 l0800_7B56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7AFB:
	branch Mem450[ds:0x2E45:word16] == 0x0000 l0800_7B32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B32:
	word16 ax_467 = Mem466[ds:0x2E47:word16]
	Mem469[ds:0x2E47:word16] = Mem466[ds:0x2E47:word16] - 0x0001
	branch ax_467 != 0x0000 l0800_7B24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B24:
	selector ds_479
	word16 di_873
	fn0800_8624(ds_479, SLICE((uint16) (uint8) fn0800_8359(ds, out ds_479), byte, 0) ^ Mem469[ds_479:0x2E4F:byte], out di_873, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B02:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B17:
	selector ds_522
	word16 ax_510 = Mem509[ds:0x2E47:word16]
	Mem512[ds:0x2E47:word16] = Mem509[ds:0x2E47:word16] - 0x0001
	branch ax_510 != 0x0000 l0800_7B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B04:
	Mem533[ds_522:Mem512[ds_522:0x4E82:word16] + 0x4682:byte] = SLICE((uint16) (uint8) fn0800_8359(ds, out ds_522), byte, 0) ^ Mem512[ds_522:0x2E4F:byte]
	Mem535[ds_522:0x4E82:word16] = Mem533[ds_522:0x4E82:word16] + 0x0001
	ds = ds_522
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B22:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B3D:
	branch (Mem538[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B52:
	Mem543[ds:0x2E4F:word16] = Mem538[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B45:
	Mem550[ds:0x2E4F:word16] = Mem538[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B56:
	branch (Mem552[ds:0x466A:word16] | Mem552[ds:0x466C:word16]) == 0x0000 l0800_7BC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B5F:
	selector ds_573
	word16 cx_868
	word16 dx_869
	word16 di_870
	Mem582[ds_573:0x2E29:word16] = fn0800_3E27(ds, SEQ(Mem552[ds:0x29DD:word16], Mem565[ds:0x29DB:word16]), out cx_868, out dx_869, out di_870, out ds_573)
	word16 di_592
	selector ds_593
	word16 dx_872
	word16 cx_871
	Mem602[ds_593:0x2E2B:word16] = fn0800_3E27(ds_573, SEQ(Mem582[ds_573:0x29DD:word16], Mem585[ds_573:0x29DB:word16]), out cx_871, out dx_872, out di_592, out ds_593)
	fn0800_8407(ds_593, Mem607[ds_593:0x2E2B:word16], SEQ(ds_593, 0x284F))
	fn0800_8407(ds_593, Mem626[ds_593:0x2E29:word16], SEQ(ds_593, 0x278F))
	Mem641[ds_593:0x2E29:word16] = Mem629[ds_593:0x2E29:word16] + 0x0002
	word16 v40_643 = Mem641[ds_593:0x467A:word16] + Mem641[ds_593:0x2E29:word16]
	Mem644[ds_593:0x467A:word16] = v40_643
	Mem648[ds_593:0x467C:word16] = Mem644[ds_593:0x467C:word16] + (v40_643 <u 0x0000)
	ds = ds_593
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BB5:
	word16 ax_652 = Mem651[ds:0x2E29:word16]
	Mem654[ds:0x2E29:word16] = Mem651[ds:0x2E29:word16] - 0x0001
	branch ax_652 != 0x0000 l0800_7BB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BB2:
	fn0800_8359(ds, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_7C78(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_7C78_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C78:
	word32 dwLoc06_717 = SEQ(Mem13[ds:0x4664:word16], Mem13[ds:0x4662:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E6D:
	word16 ax_21 = Mem20[ds:0x467C:word16]
	word16 dx_22 = Mem20[ds:0x467A:word16]
	branch ax_21 >=u Mem20[ds:0x4680:word16] l0800_7E7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7D:
	branch ax_21 != Mem20[ds:0x4680:word16] l0800_7E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7F:
	branch dx_22 >=u Mem20[ds:0x467E:word16] l0800_7E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E88:
	word16 ax_53
	Mem33[ds:0x2E43:word16] = Mem20[ds:0x2E43:word16] << 0x08 - Mem20[ds:0x2E45:byte]
	branch Mem33[ds:0x2E45:word16] != 0x0000 l0800_7EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E99:
	ax_53 = ax_21 (alias)
	branch Mem33[ds:0x4E82:word16] == 0x0000 l0800_7EAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EA0:
	word16 di_57
	ax_53 = (uint16) (uint8) fn0800_8624(ds, Mem33[ds:0x2E43:byte], out di_57, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EAA:
	dsOut = ds
	return (byte) ax_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7C78_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E85:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C8F:
	selector ds_121 = fn0800_7FDC(ds)
	word16 cx_721
	word16 bx_723
	word16 dx_722
	fn0800_ACB3(ds_121, SEQ(Mem103[ds_121:0x29E5:word16], Mem106[ds_121:0x29E3:word16]), dwLoc06_717, 0x0000, out cx_721, out dx_722, out bx_723)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DCD:
	word16 ax_123 = Mem122[ds_121:0x466A:word16]
	word16 dx_124 = Mem122[ds_121:0x466C:word16]
	word16 v17_125 = Mem122[ds_121:0x466A:word16] - 0x0001
	Mem126[ds_121:0x466A:word16] = v17_125
	Mem130[ds_121:0x466C:word16] = Mem126[ds_121:0x466C:word16] - (v17_125 <u 0x0000)
	branch (ax_123 | dx_124) == 0x0000 l0800_7DE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DE5:
	fn0800_854B(ds_121, 0x000F, 0x0004)
	fn0800_8600(ds_121, 0x00, out ds)
	word16 ax_168 = Mem155[ds:0x467C:word16]
	word16 dx_169 = Mem155[ds:0x467A:word16]
	branch ax_168 >u Mem155[ds:0x4680:word16] l0800_7E1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E09:
	branch ax_168 <u Mem155[ds:0x4680:word16] l0800_7E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E0B:
	branch dx_169 >=u Mem155[ds:0x467E:word16] l0800_7E1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E1E:
	fn0800_854B(ds, 0x0000, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E11:
	fn0800_854B(ds, 0x0001, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E2B:
	branch Mem211[ds:0x2E45:word16] != 0x0000 l0800_7E4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E32:
	word16 si_214 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E48:
	branch Mem218[ds:0x4E82:word16] != 0x0000 l0800_7E36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E36:
	word16 di_733
	fn0800_8624(ds, Mem218[ds:si_214 + 0x0000:byte], out di_733, out ds)
	Mem246[ds:0x4E82:word16] = Mem231[ds:0x4E82:word16] - 0x0001
	si_214 = si_214 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E4F:
	word16 v31_250 = Mem249[ds:0x29F7:word16] + 0x0001
	Mem251[ds:0x29F7:word16] = v31_250
	Mem255[ds:0x29F9:word16] = Mem251[ds:0x29F9:word16] + (v31_250 <u 0x0000)
	word16 dx_270
	dwLoc06_717 = SEQ(dx_270, fn0800_AD2F(ds, SEQ(Mem255[ds:0x29E5:word16], Mem263[ds:0x29E3:word16]), out dx_270)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DE2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CAC:
	word16 dx_725
	word16 di_726
	word16 cx_724
	word16 ax_292 = fn0800_3E27(ds_121, SEQ(Mem130[ds_121:0x29DD:word16], Mem288[ds_121:0x29DB:word16]), out cx_724, out dx_725, out di_726, out ds_121)
	Mem304[ds_121:0x2E47:word16] = ax_292
	word16 v25_305 = Mem304[ds_121:0x467A:word16] + ax_292
	Mem306[ds_121:0x467A:word16] = v25_305
	Mem310[ds_121:0x467C:word16] = Mem306[ds_121:0x467C:word16] + (v25_305 <u 0x0000)
	fn0800_7EAF(ds_121, ax_292)
	branch (Mem313[ds_121:0x466A:word16] | Mem313[ds_121:0x466C:word16]) != 0x0000 l0800_7CD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CD9:
	selector ds_334
	word16 di_729
	word16 cx_727
	word16 dx_728
	Mem343[ds_334:0x2E29:word16] = fn0800_3E27(ds_121, SEQ(Mem313[ds_121:0x29DD:word16], Mem326[ds_121:0x29DB:word16]), out cx_727, out dx_728, out di_729, out ds_334)
	selector ds_354
	word16 di_732
	word16 dx_731
	word16 cx_730
	Mem362[ds_354:0x2E2B:word16] = fn0800_3E27(ds_334, SEQ(Mem343[ds_334:0x29DD:word16], Mem346[ds_334:0x29DB:word16]), out cx_730, out dx_731, out di_732, out ds_354)
	branch Mem362[ds_354:0x2E29:word16] != 0x0000 l0800_7D1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D1D:
	branch Mem362[ds_354:0x2E29:word16] >=u 0x0007 l0800_7D68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D68:
	fn0800_854B(ds_354, 0x000F, 0x0004)
	selector ds_391
	fn0800_8600(ds_354, Mem372[ds_354:0x2E29:byte] - 0x06, out ds_391)
	word16 bx_399 = Mem386[ds_391:0x2E2B:word16]
	fn0800_854B(ds_391, (uint16) (uint8) Mem408[ds_391:(bx_399 >>u 0x08) + 0x21E2:byte], (uint16) (uint8) Mem386[ds_391:(bx_399 >>u 0x08) + 0x21F2:byte])
	fn0800_8600(ds_391, Mem413[ds_391:0x2E2B:byte] & 0xFF, out ds_121)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D24:
	word16 bx_442 = Mem362[ds_354:0x2E29:word16]
	fn0800_854B(ds_354, (uint16) (uint8) Mem447[ds_354:bx_442 + 0x21D4:byte], (uint16) (uint8) Mem362[ds_354:bx_442 + 0x21DB:byte])
	word16 bx_460 = Mem452[ds_354:0x2E2B:word16]
	fn0800_854B(ds_354, (uint16) (uint8) Mem469[ds_354:(bx_460 >>u 0x08) + 0x21E2:byte], (uint16) (uint8) Mem452[ds_354:(bx_460 >>u 0x08) + 0x21F2:byte])
	fn0800_8600(ds_354, Mem474[ds_354:0x2E2B:byte] & 0xFF, out ds_121)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D02:
	fn0800_854B(ds_354, 0x0006, 0x0003)
	fn0800_8600(ds_354, Mem508[ds_354:0x2E2B:byte], out ds_121)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DAC:
	Mem538[ds_121:0x2E29:word16] = Mem536[ds_121:0x2E29:word16] + 0x0002
	word16 v36_540 = Mem538[ds_121:0x467A:word16] + Mem538[ds_121:0x2E29:word16]
	Mem541[ds_121:0x467A:word16] = v36_540
	Mem545[ds_121:0x467C:word16] = Mem541[ds_121:0x467C:word16] + (v36_540 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DC2:
	word16 ax_549 = Mem548[ds_121:0x2E29:word16]
	Mem551[ds_121:0x2E29:word16] = Mem548[ds_121:0x2E29:word16] - 0x0001
	branch ax_549 != 0x0000 l0800_7DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DBF:
	fn0800_8359(ds_121, out ds_121)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_7EAF(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO Top
// Preserved: ax bp bx cx di ds dx es si sp
fn0800_7EAF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EAF:
	word16 si_135 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD1:
	word16 si_134 = si_135
	branch si_135 == 0x0000 l0800_7FD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7EAF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EBA:
	branch si_135 >=u 0x000C l0800_7F32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F32:
	branch (si_134 & 0x0003) != 0x0000 l0800_7EFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EFD:
	fn0800_854B(ds, 0x0000, 0x0001)
	selector ds_59
	fn0800_8600(ds_59, SLICE((uint16) (uint8) fn0800_8359(ds, out ds_59), byte, 0) ^ Mem45[ds_59:0x2E4F:byte], out ds)
	branch (Mem73[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F2D:
	Mem90[ds:0x2E4F:word16] = Mem73[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F20:
	Mem97[ds:0x2E4F:word16] = Mem73[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F31:
	si_134 = si_134 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F38:
	fn0800_854B(ds, 0x0017, 0x0005)
	branch si_134 <u 0x0048 l0800_7F8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F8F:
	fn0800_854B(ds, si_134 - 0x000C >>u 0x0002, 0x0004)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FB4:
	si_135 = si_134
	branch si_134 != 0x0000 l0800_7FA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FA5:
	selector ds_145
	fn0800_8600(ds_145, SLICE((uint16) (uint8) fn0800_8359(ds, out ds_145), byte, 0) ^ Mem153[ds_145:0x2E4F:byte], out ds)
	si_134 = si_134 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FB8:
	branch (Mem153[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7FCD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FCD:
	Mem181[ds:0x2E4F:word16] = Mem153[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FC0:
	Mem188[ds:0x2E4F:word16] = Mem153[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F4B:
	fn0800_854B(ds, 0x000F, 0x0004)
	word16 di_202 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F6C:
	branch di_202 != 0x0048 l0800_7F5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F5D:
	selector ds_214
	di_202 = fn0800_8600(ds_214, SLICE((uint16) (uint8) fn0800_8359(ds, out ds_214), byte, 0) ^ Mem222[ds_214:0x2E4F:byte], out ds) + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F71:
	branch (Mem222[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F86:
	Mem250[ds:0x2E4F:word16] = Mem222[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F79:
	Mem257[ds:0x2E4F:word16] = Mem222[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F8A:
	si_135 = si_134 - 0x0048
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EBF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF6:
	si_135 = si_134
	branch si_134 != 0x0000 l0800_7EC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EC1:
	fn0800_854B(ds, 0x0000, 0x0001)
	selector ds_290
	fn0800_8600(ds_290, SLICE((uint16) (uint8) fn0800_8359(ds, out ds_290), byte, 0) ^ Mem276[ds_290:0x2E4F:byte], out ds)
	branch (Mem304[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7EF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF1:
	Mem321[ds:0x2E4F:word16] = Mem304[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EE4:
	Mem328[ds:0x2E4F:word16] = Mem304[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF5:
	si_134 = si_134 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EFA:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_7FDC(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_7FDC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FDC:
	Mem11[ds:0x466C:word16] = 0x0000
	Mem12[ds:0x466A:word16] = 0x0000
	Mem13[ds:0x2E47:word16] = 0x0000
	word16 dx_15 = Mem13[ds:0x2A0B:word16]
	Mem16[ds:0x4670:word16] = Mem13[ds:0x2A0D:word16]
	Mem17[ds:0x466E:word16] = dx_15
	word16 cx_816
	word16 dx_817
	word16 bx_818
	fn0800_ACB3(ds, SEQ(Mem35[ds:0x29E5:word16], Mem38[ds:0x29E3:word16]), SEQ(Mem20[ds:0x4664:word16], Mem20[ds:0x4662:word16]) + SEQ(Mem20[ds:0x467C:word16], Mem20[ds:0x467A:word16]) + SEQ(Mem20[ds:0x4674:word16], Mem20[ds:0x4672:word16]), 0x0000, out cx_816, out dx_817, out bx_818)
	word16 cx_819
	word16 bx_821
	word16 dx_820
	fn0800_ACB3(ds, SEQ(Mem60[ds:0x29DD:word16], Mem63[ds:0x29DB:word16]), 0x00000000, 0x0000, out cx_819, out dx_820, out bx_821)
	word16 sp_133 = fp - 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82A1:
	branch (Mem79[ds:0x4676:word16] | Mem79[ds:0x4678:word16]) == 0x0000 l0800_82AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82AD:
	branch (Mem79[ds:0x4672:word16] | Mem79[ds:0x4674:word16]) == 0x0000 l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82B6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82AA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8042:
	word16 dx_94 = 0xFFFF - Mem79[ds:0x2E31:word16]
	ui32 ax_dx_628 = SEQ(0x0000 - (dx_94 <u 0x0000), dx_94) - SEQ(Mem79[ds:0x4674:word16], Mem79[ds:0x4672:word16])
	word16 dx_98 = (word16) ax_dx_628
	word16 ax_101 = SLICE(ax_dx_628, word16, 16)
	word16 ax_108 = Mem107[ds:0x4678:word16]
	word16 dx_109 = Mem107[ds:0x4676:word16]
	word32 dwLoc06_812 = ax_dx_628
	branch ax_108 >u ax_101 l0800_807C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8068:
	branch ax_108 <u ax_101 l0800_806F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_806A:
	dwLoc06_812 = ax_dx_628 (alias)
	branch dx_109 >=u dx_98 l0800_807C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_806F:
	dwLoc06_812 = SEQ(Mem107[ds:0x4678:word16], Mem107[ds:0x4676:word16]) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_807C:
	word16 dx_127 = Mem124[ds:0x2E71:word16] + Mem124[ds:0x2E31:word16]
	Mem128[ds:0x2E6F:word16] = Mem124[ds:0x2E73:word16]
	Mem129[ds:0x2E6D:word16] = dx_127
	word16 sp_135 = sp_133 - 2
	Mem137[ss:sp_135:word16] = Mem129[ds:0x29E5:word16]
	Mem140[ss:sp_135 - 2:word16] = Mem137[ds:0x29E3:word16]
	Mem144[ss:sp_135 - 4:word16] = SLICE(dwLoc06_812, word16, 16)
	Mem147[ss:sp_135 - 6:word16] = SLICE(dwLoc06_812, word16, 0)
	word16 ax_149 = Mem147[ds:0x2E6D:word16] + Mem147[ds:0x4672:word16]
	Mem153[ss:sp_135 - 8:word16] = Mem147[ds:0x2E73:word16]
	Mem155[ss:sp_135 - 10:word16] = ax_149
	word16 si_163
	word16 di_822
	fn0800_4110(ds, Mem155[ss:sp_135 - 10:word32], Mem155[ss:sp_135 - 6:word16], Mem155[ss:sp_135 - 4:word16], Mem155[ss:sp_135 - 2:word32], out si_163, out di_822, out ds)
	Mem172[ds:0x4676:word16] = v27_171
	ui32 v28_v27_630 = SEQ(Mem172[ds:0x4678:word16], Mem155[ds:0x4676:word16]) - dwLoc06_812
	Mem176[ds:0x4678:word16] = SLICE(v28_v27_630, word16, 16)
	Mem178[ds:0x4672:word16] = v29_177
	ui32 v30_v29_632 = SEQ(Mem178[ds:0x4674:word16], Mem176[ds:0x4672:word16]) + dwLoc06_812
	Mem182[ds:0x4674:word16] = SLICE(v30_v29_632, word16, 16)
	word16 ax_183 = Mem182[ds:0x2E6F:word16]
	word16 dx_185 = Mem182[ds:0x2E6D:word16] + Mem182[ds:0x4672:word16]
	Mem186[ds:0x2E67:word16] = ax_183
	Mem187[ds:0x2E65:word16] = dx_185
	Mem188[ds:0x2E6B:word16] = ax_183
	Mem189[ds:0x2E69:word16] = dx_185
	word16 sp_168 = sp_135 + 0x0002
	word16 v27_171 = (word16) v28_v27_630
	word16 v29_177 = (word16) v30_v29_632
	word16 ax_190 = Mem189[ds:0x4670:word16]
	word16 dx_191 = Mem189[ds:0x466E:word16]
	branch ax_190 <=u Mem189[ds:0x4674:word16] l0800_80ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80ED:
	branch ax_190 <u Mem189[ds:0x4674:word16] l0800_80F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80EF:
	branch dx_191 <u Mem189[ds:0x4672:word16] l0800_80F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80F8:
	word16 dx_201 = Mem189[ds:0x2E6D:word16] + Mem189[ds:0x466E:word16]
	Mem203[ds:0x2E67:word16] = Mem189[ds:0x2E6F:word16]
	Mem204[ds:0x2E65:word16] = dx_201
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80F5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81E9:
	branch Mem206[ds:0x2E65:word16] - 0x0001 <=u Mem206[ds:0x2E6D:word16] l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81F3:
	branch Mem206[ds:0x466C:word16] >=u 0x0000 l0800_81FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FD:
	branch Mem206[ds:0x466C:word16] != 0x0000 l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FF:
	branch Mem206[ds:0x466A:word16] >=u 0xFFFE l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8206:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_810D:
	fn0800_8832(ds)
	branch Mem206[ds:0x2E29:word16] <u 0x0002 l0800_8193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8193:
	word16 sp_233 = sp_829 - 2
	Mem236[ss:sp_233:word16] = 0x0001
	fn0800_89A8(ds, Mem236[ss:sp_233:word16])
	Mem250[ds:0x2E47:word16] = Mem236[ds:0x2E47:word16] + 0x0001
	Mem252[ds:0x465C:word16] = Mem250[ds:0x465C:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8117:
	branch Mem206[ds:0x2E6D:word16] + Mem206[ds:0x2E29:word16] <=u Mem206[ds:0x2E65:word16] l0800_813F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8124:
	branch (Mem206[ds:0x466A:word16] | Mem206[ds:0x466C:word16]) == 0x0000 l0800_8130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8130:
	Mem270[ds:0x2E29:word16] = Mem206[ds:0x2E65:word16] - Mem206[ds:0x2E6D:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_813F:
	word16 sp_272 = sp_829 - 2
	Mem275[ss:sp_272:word16] = ds
	Mem278[ss:sp_272 - 2:word16] = 0x290F
	Mem281[ss:sp_272 - 4:word16] = Mem278[ds:0x2E47:word16]
	selector ds_286 = fn0800_831D(ds, Mem281[ss:sp_272 - 4:word16], Mem281[ss:sp_272 - 2:segptr32])
	Mem295[ss:sp_272:word16] = ds_286
	Mem298[ss:sp_272 - 2:word16] = 0x278F
	Mem303[ss:sp_272 - 4:word16] = Mem298[ds_286:0x2E29:word16] - 0x0002
	selector ds_308 = fn0800_831D(ds_286, Mem303[ss:sp_272 - 4:word16], Mem303[ss:sp_272 - 2:segptr32])
	Mem318[ss:sp_272:word16] = ds_308
	Mem321[ss:sp_272 - 2:word16] = 0x284F
	Mem326[ss:sp_272 - 4:word16] = Mem321[ds_308:0x2E2B:word16] - 0x0001
	ds = fn0800_831D(ds_308, Mem326[ss:sp_272 - 4:word16], Mem326[ss:sp_272 - 2:segptr32])
	Mem342[ss:sp_272:word16] = Mem326[ds:0x2E29:word16]
	fn0800_89A8(ds, Mem342[ss:sp_272:word16])
	word16 v40_354 = Mem342[ds:0x466A:word16] + 0x0001
	Mem355[ds:0x466A:word16] = v40_354
	Mem359[ds:0x466C:word16] = Mem355[ds:0x466C:word16] + (v40_354 <u 0x0000)
	Mem360[ds:0x2E47:word16] = 0x0000
	Mem363[ds:0x465C:word16] = Mem360[ds:0x465C:word16] + Mem360[ds:0x2E29:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81A5:
	sp_168 = sp_829
	sp_829 = sp_168
	branch Mem366[ds:0x465C:word16] <u 0x0400 l0800_81E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81AD:
	word16 v45_370 = Mem366[ds:0x4666:word16] + Mem366[ds:0x465C:word16]
	Mem371[ds:0x4666:word16] = v45_370
	Mem375[ds:0x4668:word16] = Mem371[ds:0x4668:word16] + (v45_370 <u 0x0000)
	word16 sp_378 = sp_829 - 2
	Mem380[ss:sp_378:word16] = Mem375[ds:0x4680:word16]
	Mem383[ss:sp_378 - 2:word16] = Mem380[ds:0x467E:word16]
	word16 dx_391
	byte ch_826
	word16 ax_390 = fn0800_8F18(0x0063, Mem383[ds:0x4668:word16], 0x0000, Mem383[ds:0x4666:word16], out ch_826, out dx_391)
	Mem398[ss:sp_378 - 4:word16] = dx_391
	Mem400[ss:sp_378 - 6:word16] = ax_390
	word16 bx_402
	word16 cx_403
	word16 dx_404
	word16 ax_401 = fn0800_8BC2(Mem400[ss:sp_378 - 6:word32], Mem400[ss:sp_378 - 2:word16], Mem400[ss:sp_378:word16], out cx_403, out dx_404, out bx_402)
	word16 sp_405 = <invalid>
	Mem412[ss:sp_405 + 0x0006:word16] = dx_404
	Mem414[ss:sp_405 + 0x0004:word16] = ax_401
	Mem416[ss:sp_405 + 0x0002:word16] = ds
	Mem419[ss:sp_405:word16] = 0x2244
	word16 si_827
	word16 di_828
	fn0800_B2EF(cx_403, dx_404, bx_402, ds, Mem419[ss:sp_405:word32], out si_827, out di_828)
	Mem430[ds:0x465C:word16] = 0x0000
	sp_168 = sp_405 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_812D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8209:
	word16 ax_435 = Mem206[ds:0x2E69:word16] - Mem206[ds:0x2E6D:word16]
	Mem439[ds:0x4674:word16] = 0x0000 - (ax_435 <u 0x0000)
	Mem440[ds:0x4672:word16] = ax_435
	word16 ax_443 = Mem440[ds:0x2E6D:word16] - Mem440[ds:0x2E71:word16]
	word16 ax_447 = ax_443 - Mem440[ds:0x2E31:word16]
	word16 ax_461 = Mem459[ds:0x2E71:word16] + ax_447
	word16 sp_472 = sp_829 - 2
	Mem473[ss:sp_472:word16] = Mem459[ds:0x2E6D:word16] - ax_461 + Mem459[ds:0x4672:word16]
	Mem476[ss:sp_472 - 2:word16] = Mem473[ds:0x2E73:word16]
	Mem478[ss:sp_472 - 4:word16] = ax_461
	Mem481[ss:sp_472 - 6:word16] = Mem478[ds:0x2E73:word16]
	Mem484[ss:sp_472 - 8:word16] = Mem481[ds:0x2E71:word16]
	fn0800_B0F3(Mem484[ss:sp_472 - 8:word32], Mem484[ss:sp_472 - 4:word32], Mem484[ss:sp_472:word16])
	word16 dx_450 = 0x0000 - (ax_443 <u 0x0000) - (ax_447 <u 0x0000)
	sp_133 = sp_472 + 0x0002
	branch Mem484[ds:0x2E65:word16] <u Mem484[ds:0x2E69:word16] l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8269:
	word16 dx_500 = Mem484[ds:0x2E65:word16]
	branch Mem484[ds:0x2E67:word16] != Mem484[ds:0x2E6B:word16] l0800_8285
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8276:
	branch dx_500 != Mem484[ds:0x2E69:word16] l0800_8285
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_827C:
	branch (Mem484[ds:0x4676:word16] | Mem484[ds:0x4678:word16]) == 0x0000 l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8285:
	branch Mem484[ds:0x466C:word16] != 0x0000 l0800_8293
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_828C:
	branch Mem484[ds:0x466A:word16] == 0xFFFE l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82B9:
	word16 dx_519 = Mem517[ds:0x2E65:word16]
	branch Mem517[ds:0x2E67:word16] != Mem517[ds:0x2E6B:word16] l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82C6:
	branch dx_519 != Mem517[ds:0x2E69:word16] l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82CC:
	branch (Mem517[ds:0x4676:word16] | Mem517[ds:0x4678:word16]) != 0x0000 l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82D5:
	branch Mem517[ds:0x466C:word16] != 0x0000 l0800_82E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82DC:
	branch Mem517[ds:0x466A:word16] == 0xFFFE l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82E3:
	Mem538[ds:0x2E47:word16] = Mem517[ds:0x2E47:word16] + Mem517[ds:0x4672:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82ED:
	word16 sp_543 = sp_133 - 2
	Mem549[ss:sp_543:word16] = ds
	Mem552[ss:sp_543 - 2:word16] = 0x290F
	Mem555[ss:sp_543 - 4:word16] = Mem552[ds:0x2E47:word16]
	selector ds_560 = fn0800_831D(ds, Mem555[ss:sp_543 - 4:word16], Mem555[ss:sp_543 - 2:segptr32])
	word16 v18_568 = Mem555[ds_560:0x466A:word16] + 0x0001
	Mem569[ds_560:0x466A:word16] = v18_568
	Mem573[ds_560:0x466C:word16] = Mem569[ds_560:0x466C:word16] + (v18_568 <u 0x0000)
	Mem578[ss:sp_543:word16] = 0x0000
	Mem580[ss:sp_543 - 2:word16] = 0x0000
	Mem582[ss:sp_543 - 4:word16] = 0x0000
	Mem585[ss:sp_543 - 6:word16] = Mem582[ds_560:0x29DD:word16]
	Mem588[ss:sp_543 - 8:word16] = Mem585[ds_560:0x29DB:word16]
	word16 dx_824
	word16 bx_825
	word16 cx_823
	fn0800_ACB3(ds_560, Mem588[ss:sp_543 - 8:segptr32], Mem588[ss:sp_543 - 4:ui32], Mem588[ss:sp_543:word16], out cx_823, out dx_824, out bx_825)
	return ds_560
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7FDC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8293:
	Mem614[ds:0x466E:word16] = v36_613
	ui32 v37_v36_634 = SEQ(Mem614[ds:0x4670:word16], Mem484[ds:0x466E:word16]) - SEQ(dx_450, ax_447)
	Mem618[ds:0x4670:word16] = SLICE(v37_v36_634, word16, 16)
	word16 v36_613 = (word16) v37_v36_634
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_831D(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_831D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_831D:
	word16 ax_15
	branch wArg02 <=u 0x0001 l0800_8332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8332:
	ax_15 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8329:
	ax_15 = fn0800_0C08(wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8334:
	selector es_38 = SLICE(ptrArg04, selector, 16)
	word16 bx_37 = SLICE(ptrArg04 + ax_15 *s 0x000C, word16, 0)
	word16 v14_39 = Mem33[es_38:bx_37:word16] + 0x0001
	Mem40[es_38:bx_37:word16] = v14_39
	Mem44[es_38:bx_37 + 0x0002:word16] = Mem40[es_38:bx_37 + 0x0002:word16] + (v14_39 <u 0x0000)
	selector ds_62
	word16 cx_92
	word16 dx_93
	word16 bx_94
	word16 di_95
	fn0800_401E(ds, wArg02, SEQ(Mem44[ds:0x29DD:word16], Mem51[ds:0x29DB:word16]), out cx_92, out dx_93, out bx_94, out di_95, out ds_62)
	return ds_62
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_831D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8359(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8359_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8359:
	selector ds_24
	byte ch_70
	word16 dx_71
	word16 di_72
	byte al_30 = SLICE(fn0800_3DCF(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out ch_70, out dx_71, out di_72, out ds_24), byte, 0)
	word16 ax_43 = Mem31[ds_24:(((uint16) (uint8) (Mem31[ds_24:0x2E4B:byte] ^ al_30) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem31[ds_24:0x2E4B:word16] >>u 0x08
	Mem44[ds_24:0x2E4B:word16] = ax_43
	word16 v17_45 = Mem44[ds_24:0x29FF:word16] + 0x0001
	Mem46[ds_24:0x29FF:word16] = v17_45
	Mem50[ds_24:0x2A01:word16] = Mem46[ds_24:0x2A01:word16] + (v17_45 <u 0x0000)
	dsOut = ds_24
	return (byte) SEQ(SLICE(ax_43, byte, 8), al_30)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8359_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_83A1(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp di si sp
fn0800_83A1_entry:
	selector psegArg04_131 = SLICE(ptrArg02, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83A1:
	word16 di_17 = wArg06
	word16 si_18 = wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83C4:
	word16 wArg02_110 = SLICE(ptrArg02, word16, 0)
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_83B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83B0:
	branch Mem16[SLICE(ptrArg02, selector, 16):SLICE(ptrArg02 + si_18 *s 0x000C, word16, 0) + 0x000A:word16] != 0x0000 l0800_83CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83C3:
	di_17 = di_17 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83CB:
	fn0800_8489(ds, di_17, 0x0005)
	word16 si_60 = 0x0000
	word16 wLoc04_111 = wArg02_110 + 0x000A
	branch di_17 <=u 0x0000 l0800_8401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83E5:
	fn0800_8489(ds, Mem71[psegArg04_131:wLoc04_111:word16], 0x0004)
	wLoc04_111 = wLoc04_111 + 0x000C
	si_60 = si_60 + 0x0001
	branch si_60 <u di_17 l0800_83E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8401:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_83A1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8407(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_8407_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8407:
	word16 ax_19
	branch wArg02 <=u 0x0001 l0800_8420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8420:
	ax_19 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8417:
	ax_19 = fn0800_0C08(wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8422:
	selector es_44 = SLICE(ptrArg04, selector, 16)
	word16 bx_41 = SLICE(ptrArg04 + ax_19 *s 0x000C, word16, 0)
	fn0800_8489(ds, Mem48[es_44:bx_41 + 0x0006:word16], Mem35[es_44:bx_41 + 0x000A:word16])
	byte bLoc04_104 = SLICE(ax_19, byte, 0)
	branch ax_19 <=u 0x0001 l0800_845F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8445:
	fn0800_8489(ds, wArg02 - (0x0001 << bLoc04_104 - 0x01), ax_19 - 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_845F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8407_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_8465_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8465:
	branch Mem7[ds:0x2A21:word16] != 0x0002 l0800_847F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_847F:
	fn0800_8489(ds, wArg02, wArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8475:
	fn0800_854B(ds, wArg02, wArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8465_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8489(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: bp bx cx di ds dx es si sp
fn0800_8489_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8489:
	word16 di_112 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_853A:
	wArg04 = wArg04 - 0x0001
	branch wArg04 == 0x0000 l0800_8547
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8547:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8489_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8544:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8494:
	Mem35[ds:0x2E43:word16] = Mem21[ds:0x2E43:word16] >>u 0x0001
	branch (di_112 & 0x0001) == 0x0000 l0800_84A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_849E:
	Mem41[ds:0x2E43:word16] = Mem35[ds:0x2E43:word16] | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84A4:
	Mem49[ds:0x2E45:word16] = Mem47[ds:0x2E45:word16] + 0x0001
	di_112 = di_112 >>u 0x0001
	branch Mem49[ds:0x2E45:word16] == 0x0010 l0800_84B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84B5:
	selector ds_65
	word16 di_252
	fn0800_8624(ds, Mem49[ds:0x2E43:byte], out di_252, out ds_65)
	fn0800_8624(ds_65, SLICE(Mem59[ds_65:0x2E43:word16] >>u 0x08, byte, 0), out di_112, out ds)
	word16 si_90 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84E3:
	branch Mem94[ds:0x4E82:word16] != 0x0000 l0800_84D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84D1:
	fn0800_8624(ds, Mem94[ds:si_90 + 0x0000:byte], out di_112, out ds)
	Mem122[ds:0x4E82:word16] = Mem107[ds:0x4E82:word16] - 0x0001
	si_90 = si_90 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84EA:
	word16 ax_124 = Mem94[ds:0x2A01:word16]
	word16 dx_125 = Mem94[ds:0x29FF:word16]
	branch ax_124 <u Mem94[ds:0x2A05:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84F7:
	branch ax_124 >u Mem94[ds:0x2A05:word16] l0800_84FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84F9:
	branch dx_125 <=u Mem94[ds:0x2A03:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84FF:
	ui32 ax_dx_180 = SEQ(Mem94[ds:0x2A01:word16], Mem94[ds:0x29FF:word16]) - SEQ(Mem94[ds:0x2A05:word16], Mem94[ds:0x2A03:word16])
	word16 dx_135 = (word16) ax_dx_180
	word16 ax_138 = SLICE(ax_dx_180, word16, 16)
	branch ax_138 <u Mem94[ds:0x4E8A:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8514:
	branch ax_138 >u Mem94[ds:0x4E8A:word16] l0800_851C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8516:
	branch dx_135 <=u Mem94[ds:0x4E88:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_851C:
	ui32 ax_dx_182 = SEQ(Mem94[ds:0x2A01:word16], Mem94[ds:0x29FF:word16]) - SEQ(Mem94[ds:0x2A05:word16], Mem94[ds:0x2A03:word16])
	Mem153[ds:0x4E8A:word16] = SLICE(ax_dx_182, word16, 16)
	Mem154[ds:0x4E88:word16] = (word16) ax_dx_182
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8532:
	Mem159[ds:0x2E45:word16] = 0x0000
	Mem160[ds:0x2E43:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84B2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_854B(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax cx Top
// Preserved: bp bx di ds dx es si sp
fn0800_854B_entry:
	byte bArg04 = SLICE(wArg04, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_854B:
	word16 di_159 = 0x0001 << bArg04 - 0x01
	word16 wArg04_172 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85EF:
	wArg04_172 = wArg04_172 - 0x0001
	branch wArg04_172 == 0x0000 l0800_85FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85FC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_854B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85F9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_855D:
	Mem39[ds:0x2E43:word16] = Mem25[ds:0x2E43:word16] << 0x0001
	branch (wArg02 & di_159) == 0x0000 l0800_856A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8566:
	Mem45[ds:0x2E43:word16] = Mem39[ds:0x2E43:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_856A:
	Mem52[ds:0x2E45:word16] = Mem50[ds:0x2E45:word16] + 0x0001
	di_159 = di_159 >>u 0x0001
	branch Mem52[ds:0x2E45:word16] != 0x0008 l0800_85EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8578:
	fn0800_8624(ds, Mem52[ds:0x2E43:byte], out di_159, out ds)
	word16 si_75 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8598:
	branch Mem79[ds:0x4E82:word16] != 0x0000 l0800_8586
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8586:
	fn0800_8624(ds, Mem79[ds:si_75 + 0x0000:byte], out di_159, out ds)
	Mem107[ds:0x4E82:word16] = Mem92[ds:0x4E82:word16] - 0x0001
	si_75 = si_75 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_859F:
	word16 ax_109 = Mem79[ds:0x2A01:word16]
	word16 dx_110 = Mem79[ds:0x29FF:word16]
	branch ax_109 <u Mem79[ds:0x2A05:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85AC:
	branch ax_109 >u Mem79[ds:0x2A05:word16] l0800_85B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85AE:
	branch dx_110 <=u Mem79[ds:0x2A03:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85B4:
	ui32 ax_dx_165 = SEQ(Mem79[ds:0x2A01:word16], Mem79[ds:0x29FF:word16]) - SEQ(Mem79[ds:0x2A05:word16], Mem79[ds:0x2A03:word16])
	word16 dx_120 = (word16) ax_dx_165
	word16 ax_123 = SLICE(ax_dx_165, word16, 16)
	branch ax_123 <u Mem79[ds:0x4E8A:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85C9:
	branch ax_123 >u Mem79[ds:0x4E8A:word16] l0800_85D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85CB:
	branch dx_120 <=u Mem79[ds:0x4E88:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85D1:
	ui32 ax_dx_167 = SEQ(Mem79[ds:0x2A01:word16], Mem79[ds:0x29FF:word16]) - SEQ(Mem79[ds:0x2A05:word16], Mem79[ds:0x2A03:word16])
	Mem138[ds:0x4E8A:word16] = SLICE(ax_dx_167, word16, 16)
	Mem139[ds:0x4E88:word16] = (word16) ax_dx_167
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85E7:
	Mem144[ds:0x2E45:word16] = 0x0000
	Mem145[ds:0x2E43:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8600(selector ds, byte bArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8600:
	branch Mem7[ds:0x2E45:word16] == 0x0000 l0800_861B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_861B:
	word16 di_21
	selector ds_22
	fn0800_8624(ds, bArg02, out di_21, out ds_22)
	dsOut = ds_22
	return di_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_860D:
	Mem33[ds:Mem7[ds:0x4E82:word16] + 0x4682:byte] = bArg02
	Mem35[ds:0x4E82:word16] = Mem33[ds:0x4E82:word16] + 0x0001
	dsOut = ds
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8624(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: ax di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8624_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8624:
	word16 ax_10 = Mem7[ds:0x2A05:word16]
	word16 dx_11 = Mem7[ds:0x2A03:word16]
	branch ax_10 >u Mem7[ds:0x4E86:word16] l0800_8678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8634:
	branch ax_10 <u Mem7[ds:0x4E86:word16] l0800_863C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8636:
	branch dx_11 >=u Mem7[ds:0x4E84:word16] l0800_8678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_863C:
	word16 cx_36
	word16 dx_114
	word16 bx_115
	fn0800_4047(ds, bArg02, SEQ(Mem7[ds:0x29E1:word16], Mem23[ds:0x29DF:word16]), out cx_36, out dx_114, out bx_115, out di, out ds)
	ax_10 = Mem33[ds:(((uint16) (uint8) (Mem33[ds:0x2E49:byte] ^ bArg02) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem33[ds:0x2E49:word16] >>u 0x08
	Mem58[ds:0x2E49:word16] = ax_10
	word16 v18_59 = Mem58[ds:0x2A03:word16] + 0x0001
	Mem60[ds:0x2A03:word16] = v18_59
	Mem64[ds:0x2A05:word16] = Mem60[ds:0x2A05:word16] + (v18_59 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8678:
	diOut = di
	dsOut = ds
	return (byte) ax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8624_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: bp ds sp
// Trashed: SCZDO bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_867A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_867A:
	word16 si_28 = fn0800_87EF(SEQ(psegArg06, wArg04 + 0x0004))
	selector ds_20 = psegArg06
	word16 di_186 = wArg08
	selector es_22 = psegArg0A
	byte ah_239 = SLICE(ax_26, byte, 8)
	word16 si_102 = si_28 + 0x000B
	byte al_116 = (Mem33[psegArg06:si_28 + 0x000A:byte] * 0x02 + true) * 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8745:
	byte al_42 = al_116 * 0x02
	bool Z_57 = SLICE(cond(al_42), bool, 2)
	al_116 = al_42
	branch al_42 <u 0x00 l0800_8751
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8749:
	Mem51[es_22:di_186:byte] = Mem47[ds_20:si_102:byte]
	si_102 = si_102 + 0x0001
	di_186 = di_186 + 0x0001
	al_116 = al_42 * 0x02
	Z_57 = SLICE(cond(al_42 * 0x02), bool, 2) (alias)
	branch al_42 * 0x02 >=u 0x00 l0800_8744
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8751:
	branch Z_57 l0800_873C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_873C:
	si_102 = si_102 + 0x0001
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_42 <u 0x00)
	branch al_116 <u 0x00 l0800_8753
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8741:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8744:
	Mem77[es_22:di_186:byte] = Mem71[ds_20:si_102:byte]
	si_102 = si_102 + 0x0001
	di_186 = di_186 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8753:
	byte al_84 = al_116 * 0x02
	byte bh_168 = 0x00
	bool C_92 = SLICE(cond(al_84), bool, 1)
	branch al_84 == 0x00 l0800_879B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_879B:
	al_84 = Mem62[ds_20:si_102:byte] * 0x02 + (al_84 <u 0x00)
	si_102 = si_102 + 0x0001
	C_92 = SLICE(cond(al_84), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_875C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_875F:
	word16 cx_146 = 0x0002
	branch C_92 l0800_86E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86E6:
	byte al_107 = al_84 * 0x02
	bool C_106 = SLICE(cond(al_107), bool, 1)
	branch al_107 == 0x00 l0800_86BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86BC:
	al_107 = Mem62[ds_20:si_102:byte] * 0x02 + (al_107 <u 0x00)
	si_102 = si_102 + 0x0001
	C_106 = SLICE(cond(al_107), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86EA:
	al_116 = al_107 * 0x02
	bool C_124 = SLICE(cond(al_116), bool, 1)
	cx_146 = (uint16) (uint8) (C_106 + 0x04) (alias)
	branch al_116 == 0x00 l0800_86C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86C2:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_124 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F0:
	branch C_124 l0800_8701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F2:
	byte al_130 = al_116 * 0x02
	al_116 = al_130
	branch al_130 == 0x00 l0800_86C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86C8:
	si_102 = si_102 + 0x0001
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_130 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F9:
	byte cl_151 = SLICE(cx_146 - 0x0001, byte, 0) * 0x02 + (al_130 <u 0x00)
	byte ch_478 = SLICE(cx_146 - 0x0001, byte, 8)
	cx_146 = SEQ(SLICE(cx_146 - 0x0001, byte, 8), cl_151) (alias)
	branch cl_151 == 0x09 l0800_86A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A7:
	word16 cx_174 = SEQ(ch_478, 0x04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A9:
	byte al_156 = al_116 * 0x02
	al_116 = al_156
	branch al_156 == 0x00 l0800_86A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A1:
	si_102 = si_102 + 0x0001
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_156 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86AD:
	cx_174 = cx_174 - 0x0001
	bh_168 = bh_168 * 0x02 + (al_156 <u 0x00)
	byte ch_480 = SLICE(cx_174, byte, 8)
	branch cx_174 != 0x0000 l0800_86A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B1:
	word16 cx_180 = SEQ(ch_480, (bh_168 + 0x03) * 0x02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B7:
	branch cx_180 == 0x0000 l0800_86B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B7_1:
	Mem187[es_22:di_186:word16] = Mem183[ds_20:si_102:word16]
	si_102 = si_102 + 0x0002
	di_186 = di_186 + 0x0002
	cx_180 = cx_180 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8761:
	al_116 = al_84 * 0x02
	bool C_196 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_87A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87A0:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_196 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8765:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8768:
	branch C_196 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_876A:
	byte al_205 = al_116 * 0x02
	bool C_213 = SLICE(cond(al_205), bool, 1)
	word16 ax_234 = SEQ(ah_239, al_205)
	branch al_205 == 0x00 l0800_87A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87A5:
	byte al_214 = Mem62[ds_20:si_102:byte] * 0x02 + (al_205 <u 0x00)
	si_102 = si_102 + 0x0001
	C_213 = SLICE(cond(al_214), bool, 1) (alias)
	ax_234 = SEQ(ah_239, al_214) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_876F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8772:
	al_116 = SLICE(ax_234, byte, 0) (alias)
	al_116 = SLICE(ax_234, byte, 0) (alias)
	ah_239 = SLICE(ax_234, byte, 8) (alias)
	ah_239 = SLICE(ax_234, byte, 8) (alias)
	cx_146 = 0x0003 (alias)
	branch C_213 l0800_8701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8774:
	byte cl_221 = Mem62[ds_20:si_102:byte]
	si_102 = si_102 + 0x0001
	word16 cx_302 = (uint16) (uint8) cl_221
	branch cl_221 == 0x00 l0800_87B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87B4:
	word16 ax_270 = ds_20 + (si_102 >>u 0x04)
	byte al_274 = SLICE(ax_234, byte, 0)
	di_186 = (di_186 & 0x000F) + 0x8000
	es_22 = es_22 + (di_186 >>u 0x04) - 0x0800
	si_102 = si_102 & 0x000F
	ds_20 = ax_270
	ah_239 = SLICE(ax_234, byte, 8) (alias)
	al_116 = al_274 * 0x02
	bool C_280 = SLICE(cond(al_274 * 0x02), bool, 1)
	branch al_274 * 0x02 != 0x00 l0800_87E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87DD:
	al_116 = Mem248[ax_270:si_102 & 0x000F:byte] * 0x02 + (al_274 * 0x02 <u 0x00)
	si_102 = (si_102 & 0x000F) + 0x0001
	C_280 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E3:
	branch C_280 l0800_87E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E8:
	dsOut = psegLoc0A
	return si
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_867A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_877B:
	cx_146 = cx_302 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8701:
	al_116 = al_116 * 0x02
	bool C_320 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_86CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86CE:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_320 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8705:
	branch C_320 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8707:
	byte al_326 = al_116 * 0x02
	bool C_334 = SLICE(cond(al_326), bool, 1)
	branch al_326 == 0x00 l0800_86D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86D4:
	al_326 = Mem62[ds_20:si_102:byte] * 0x02 + (al_326 <u 0x00)
	si_102 = si_102 + 0x0001
	C_334 = SLICE(cond(al_326), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_870E:
	al_116 = al_326 * 0x02
	bool C_358 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_86DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86DA:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_358 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8714:
	branch C_358 l0800_8784
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8784:
	byte al_373
	byte al_364 = al_116 * 0x02
	branch al_364 == 0x00 l0800_87AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87AA:
	si_102 = si_102 + 0x0001
	al_373 = Mem62[ds_20:si_102:byte] * 0x02 + (al_364 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8788:
	al_373 = al_364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_878B:
	al_116 = al_373 * 0x02
	bh_168 = C_334 * 0x02 + (al_364 <u 0x00) | 0x04
	bool C_390 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_87AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87AF:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_390 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8794:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8797:
	branch C_390 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8799:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8716:
	bh_168 = C_334
	branch C_334 != false l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_871D:
	bh_168 = C_334 + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8722:
	byte al_403 = al_116 * 0x02
	al_116 = al_403
	branch al_403 == 0x00 l0800_86E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86E0:
	si_102 = si_102 + 0x0001
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_403 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8726:
	bh_168 = bh_168 * 0x02 + (al_403 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8728:
	word16 si_449 = di_186 - 0x0001 - SEQ(bh_168, Mem62[ds_20:si_102:byte])
	__cli()
	word16 si_431 = si_102 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8733:
	branch cx_146 == 0x0000 l0800_8736
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8736:
	__sti()
	si_102 = si_431
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8733_1:
	Mem460[es_22:di_186:byte] = Mem456[ds_20:si_449:byte]
	si_449 = si_449 + 0x0001
	di_186 = di_186 + 0x0001
	cx_146 = cx_146 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_87EF(word32 ds_si)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ds:si:[0..31]
// LiveOut: si
// Trashed: ax bx si Top
// Preserved: sp
fn0800_87EF_entry:
	selector ds = SLICE(ds_si, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87EF:
	word16 si_8 = fn0800_87F4(ds_si)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F2_thunk_fn0800_87F4:
	return fn0800_87F4(SEQ(ds, si_8))
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_87F4(word32 ds_si)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ds:si:[0..31]
// LiveOut: si
// Trashed: ax si Top
// Preserved: sp
fn0800_87F4_entry:
	word16 si = SLICE(ds_si, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F4:
	return si + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87F4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_87F8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx es Top
// Preserved: di sp
fn0800_87F8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F8:
	ptr32 es_di_10 = Mem7[ds:0x2E37:segptr32]
	selector es_80 = SLICE(es_di_10, selector, 16)
	word16 di_66 = SLICE(es_di_10, word16, 0)
	word16 ax_11 = Mem7[ds:0x2E31:word16]
	word16 cx_12 = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8804:
	branch cx_12 == 0x0000 l0800_8806
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8806:
	ptr32 es_di_16 = Mem15[ds:0x2E33:segptr32]
	selector es_78 = SLICE(es_di_16, selector, 16)
	word16 di_60 = SLICE(es_di_16, word16, 0)
	word16 ax_17 = Mem15[ds:0x2E31:word16]
	word16 cx_18 = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8810:
	branch cx_18 == 0x0000 l0800_8812
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8812:
	ptr32 es_di_22 = Mem21[ds:0x2E3B:segptr32]
	selector es_76 = SLICE(es_di_22, selector, 16)
	word16 di_54 = SLICE(es_di_22, word16, 0)
	word16 cx_23 = Mem21[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881C:
	branch cx_23 == 0x0000 l0800_881E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881E:
	ptr32 es_di_30 = Mem29[ds:0x2E3F:segptr32]
	selector es_70 = SLICE(es_di_30, selector, 16)
	word16 di_37 = SLICE(es_di_30, word16, 0)
	word16 ax_31 = 0x0000
	word16 cx_34 = Mem29[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8828:
	Mem38[es_70:di_37:word16] = ax_31
	di_37 = di_37 + 0x0002
	ax_31 = ax_31 + 0x0001
	cx_34 = cx_34 - 0x0001
	branch cx_34 != 0x0000 l0800_8828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_882C:
	Mem45[ds:0x2E2D:word16] = cx_34
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87F8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881C_1:
	Mem55[es_76:di_54:word16] = 0x0000
	di_54 = di_54 + 0x0002
	cx_23 = cx_23 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8810_1:
	Mem61[es_78:di_60:word16] = ax_17
	di_60 = di_60 + 0x0002
	cx_18 = cx_18 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8804_1:
	Mem67[es_80:di_66:word16] = ax_11
	di_66 = di_66 + 0x0002
	cx_12 = cx_12 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8832(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di si sp
fn0800_8832_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8832:
	fn0800_889A(ds)
	branch Mem10[ds:0x2E29:word16] <u 0x0002 l0800_8897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_883E:
	branch Mem10[ds:0x2E65:word16] - Mem10[ds:0x2E6D:word16] <u 0x0003 l0800_8897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_884D:
	word16 ax_30 = Mem10[ds:0x2E2D:word16]
	word16 si_28 = Mem10[ds:0x2E29:word16]
	word16 di_29 = Mem10[ds:0x2E2B:word16]
	word16 ax_33 = ax_30 + 0x0001
	branch ax_30 + 0x0001 != Mem32[ds:0x2E31:word16] l0800_8865
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8863:
	ax_33 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8865:
	Mem41[ds:0x2E2D:word16] = ax_33
	Mem43[ds:0x2E6D:word16] = Mem41[ds:0x2E6D:word16] + 0x0001
	fn0800_889A(ds)
	Mem56[ds:0x2E6D:word16] = Mem43[ds:0x2E6D:word16] - 0x0001
	Mem59[ds:0x2E2D:word16] = ax_30
	branch Mem59[ds:0x2E29:word16] <=u si_28 l0800_888F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_888F:
	Mem64[ds:0x2E29:word16] = si_28
	Mem66[ds:0x2E2B:word16] = di_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_887D:
	Mem67[ds:0x2E29:word16] = 0x0001
	Mem68[ds:0x2E2B:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8897:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8832_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_889A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di ds si sp
fn0800_889A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_889A:
	Mem13[ds:0x2E2B:word16] = 0x0000
	Mem14[ds:0x2E29:word16] = 0x0001
	ptr32 es_di_15 = Mem14[ds:0x2E6D:segptr32]
	word16 ax_18 = Mem14[es_di_15:word16]
	Mem19[ds:0x4E90:word16] = ax_18
	word16 di_17 = SLICE(es_di_15, word16, 0)
	word16 dx_22 = Mem19[ds:0x2E69:word16] - (di_17 + 0x0001)
	selector es_16 = SLICE(es_di_15, selector, 16)
	byte al_199 = SLICE(ax_18, byte, 0)
	word16 di_20 = di_17 + 0x0001
	bool Z_33 = SLICE(cond(dx_22), bool, 2)
	word16 cx_24 = dx_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BC:
	branch cx_24 == 0x0000 l0800_88BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BC_1:
	Z_33 = SLICE(cond(al_199 - Mem19[es_16:di_307:byte]), bool, 2) (alias)
	di_20 = di_307 + 0x0001
	cx_24 = cx_24 - 0x0001
	di_307 = di_20
	branch al_199 != Mem19[es_16:di_307:byte] l0800_88BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BE:
	branch Z_33 l0800_88C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88C0:
	cx_24 = cx_24 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88C1:
	Mem54[ds:0x4E94:word16] = Mem19[ds:0x2E69:word16] - Mem19[ds:0x2E6D:word16]
	word16 dx_44 = dx_22 - cx_24
	word16 ax_185 = Mem54[Mem54[ds:0x2E39:selector]:Mem54[ds:0x4E90:word16] << 0x0001:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88DC:
	branch ax_185 != Mem62[ds:0x2E31:word16] l0800_88E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88E5:
	word16 di_66 = ax_185 << 0x0001
	Mem69[ds:0x4E92:word16] = Mem62[Mem62[ds:0x2E41:selector]:di_66:word16]
	word16 bx_70 = Mem69[ds:0x2E2D:word16]
	branch bx_70 >u ax_185 l0800_8903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88FC:
	bx_70 = bx_70 + Mem69[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8903:
	ptr32 es_si_80 = Mem69[ds:0x2E6D:segptr32]
	word16 bx_110 = bx_70 - ax_185
	branch Mem69[ds:0x4E90:word16] != Mem69[SLICE(es_si_80, selector, 16):SLICE(es_si_80, word16, 0) - bx_110:word16] l0800_897E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8914:
	word16 cx_100 = Mem69[Mem69[ds:0x2E3D:selector]:di_66:word16]
	branch cx_100 <=u bx_110 l0800_892D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_892D:
	branch cx_100 <=u dx_44 l0800_893A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8931:
	bx_110 = bx_110 - (cx_100 - dx_44)
	cx_100 = dx_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_893A:
	branch cx_100 != dx_44 l0800_8963
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_893E:
	ptr32 es_di_106 = Mem69[ds:0x2E6D:segptr32]
	word16 di_108 = SLICE(es_di_106, word16, 0) + cx_100
	word16 ax_113 = Mem69[ds:0x4E94:word16] - cx_100
	selector es_215 = SLICE(es_di_106, selector, 16)
	word16 si_111 = di_108 - bx_110
	bool Z_135 = SLICE(cond(ax_113), bool, 2)
	word16 cx_115 = ax_113
	selector ds_124 = Mem123[ds:0x2E6F:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8957:
	branch cx_115 == 0x0000 l0800_8959
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8957_1:
	Z_135 = SLICE(cond(Mem123[ds_124:si_308:byte] - Mem123[es_215:di_309:byte]), bool, 2) (alias)
	si_111 = si_308 + 0x0001
	di_108 = di_309 + 0x0001
	cx_115 = cx_115 - 0x0001
	si_308 = si_111
	di_309 = di_108
	branch Mem123[ds_124:si_308:byte] != Mem123[es_215:di_309:byte] l0800_8957
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8959:
	branch Z_135 l0800_895C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_895B:
	cx_115 = cx_115 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_895C:
	cx_100 = dx_44 + (ax_113 - cx_115)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8922:
	bx_110 = 0x0001
	cx_100 = dx_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8963:
	branch cx_100 <=u Mem167[ds:0x2E2F:word16] l0800_896D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8969:
	cx_100 = Mem167[ds:0x2E2F:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_896D:
	branch cx_100 <u Mem167[ds:0x2E29:word16] l0800_897E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8973:
	Mem176[ds:0x2E29:word16] = cx_100
	Mem182[ds:0x2E2B:word16] = bx_110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_897E:
	ax_185 = Mem184[ds:0x4E92:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88E2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8984:
	branch Mem62[ds:0x2E29:word16] != 0x0002 l0800_89A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_898B:
	branch Mem62[ds:0x2E2B:word16] <=u 0x0100 l0800_89A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8996:
	Mem190[ds:0x2E29:word16] = 0x0001
	Mem191[ds:0x2E2B:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89A5:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_889A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_89A8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89A8:
	word16 dx_13 = Mem11[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89B1:
	word16 di_17 = Mem16[ds:0x2E2D:word16]
	selector es_19 = Mem16[ds:0x2E41:selector]
	word16 ax_20 = Mem16[es_19:di_17 << 0x0001:word16]
	Mem22[es_19:di_17 << 0x0001:word16] = dx_13
	branch Mem22[ds:0x2E2D:word16] == ax_20 l0800_89EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89C7:
	ptr32 es_di_25 = Mem22[ds:0x2E6D:segptr32]
	word16 di_29 = Mem22[SLICE(es_di_25, selector, 16):SLICE(es_di_25, word16, 0) - dx_13:word16]
	Mem32[Mem22[ds:0x2E39:selector]:di_29 << 0x0001:word16] = ax_20
	branch ax_20 != dx_13 l0800_89EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89E0:
	Mem36[Mem32[ds:0x2E35:selector]:di_29 << 0x0001:word16] = dx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89EA:
	word16 di_42 = Mem38[Mem38[ds:0x2E6D:segptr32]:word16]
	word16 ax_44 = Mem38[ds:0x2E2D:word16]
	selector es_45 = Mem38[ds:0x2E39:selector]
	branch Mem38[es_45:di_42 << 0x0001:word16] != dx_13 l0800_8A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A08:
	Mem54[Mem38[ds:0x2E41:selector]:Mem38[Mem38[ds:0x2E35:selector]:di_42 << 0x0001:word16] << 0x0001:word16] = ax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89FF:
	Mem55[es_45:di_42 << 0x0001:word16] = ax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A18:
	Mem61[Mem57[ds:0x2E35:selector]:di_42 << 0x0001:word16] = ax_44
	ptr32 es_di_62 = Mem61[ds:0x2E6D:segptr32]
	word16 di_64 = SLICE(es_di_62, word16, 0)
	word16 bx_68 = Mem61[ds:0x2E69:word16] - (di_64 + 0x0001)
	selector es_63 = SLICE(es_di_62, selector, 16)
	byte al_65 = Mem61[es_di_62:byte]
	word16 di_66 = di_64 + 0x0001
	bool Z_79 = SLICE(cond(bx_68), bool, 2)
	word16 cx_70 = bx_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A2F:
	branch cx_70 == 0x0000 l0800_8A31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A2F_1:
	Z_79 = SLICE(cond(al_65 - Mem61[es_63:di_233:byte]), bool, 2) (alias)
	di_66 = di_233 + 0x0001
	cx_70 = cx_70 - 0x0001
	di_233 = di_66
	branch al_65 != Mem61[es_63:di_233:byte] l0800_8A2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A31:
	branch Z_79 l0800_8A34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A33:
	cx_70 = cx_70 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A34:
	word16 bx_131 = bx_68 - cx_70
	Mem100[Mem61[ds:0x2E3D:selector]:Mem61[ds:0x2E2D:word16] << 0x0001:word16] = bx_131
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A86:
	word16 ax_103 = Mem102[ds:0x2E2D:word16]
	word16 ax_104 = ax_103 + 0x0001
	branch ax_103 + 0x0001 != dx_13 l0800_8A90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A8E:
	ax_104 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A90:
	Mem113[ds:0x2E2D:word16] = ax_104
	Mem115[ds:0x2E6D:word16] = Mem113[ds:0x2E6D:word16] + 0x0001
	word16 v20_120 = wArg02 - 0x0001
	wArg02 = v20_120
	branch v20_120 == 0x0000 l0800_8AA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AA8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_89A8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A9C:
	bx_131 = bx_131 - 0x0001
	branch bx_131 >u 0x0001 l0800_8A46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A46:
	word16 di_135 = Mem121[ds:0x2E2D:word16]
	Mem138[Mem121[ds:0x2E3D:selector]:di_135 << 0x0001:word16] = bx_131
	selector es_139 = Mem138[ds:0x2E41:selector]
	word16 v22_141 = Mem138[es_139:di_135 << 0x0001:word16]
	Mem142[es_139:di_135 << 0x0001:word16] = Mem138[ds:0x2E2D:word16]
	branch Mem142[ds:0x2E2D:word16] == v22_141 l0800_8A86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A63:
	ptr32 es_di_146 = Mem142[ds:0x2E6D:segptr32]
	word16 di_151 = Mem142[SLICE(es_di_146, selector, 16):SLICE(es_di_146, word16, 0) - dx_13:word16]
	Mem154[Mem142[ds:0x2E39:selector]:di_151 << 0x0001:word16] = v22_141
	branch v22_141 != dx_13 l0800_8A86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A7C:
	Mem158[Mem154[ds:0x2E35:selector]:di_151 << 0x0001:word16] = dx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AA5:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8ACF(word16 cx, selector ds, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp ds sp
fn0800_8ACF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8ACF:
	msdos_unknown_2143()
	branch Test(ULT,false) l0800_8AE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AE9:
	fn0800_8D64(ds, 0x4300)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8ADF:
	Mem32[ptrArg06:word16] = cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AED:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8ACF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8B0D(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax dx Top
// Preserved: bp bx cx es si sp
fn0800_8B0D_entry:
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B0D:
	word16 sp_26 = fp - 4
	branch wArg06 != 0x0000 l0800_8B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B28:
	byte al_110 = SLICE(ax, byte, 0)
	branch Mem18[ds:0x224E:word16] != 0x0000 l0800_8B1A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B1A:
	Mem22[ds:0x224E:word16] = Mem18[ds:0x224E:word16] - 0x0001
	word16 bx_23 = Mem22[ds:0x224E:word16]
	call SEQ(0x0800, Mem22[ds:(bx_23 << 0x0001) + 0x4E96:word16]) (retsize: 2;)
		uses: ax:ax_102,bx:bx_23 << 0x0001,cx:cx_31,dx:dx_104,sp:sp_26,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_34
		defs: ax:ax_103,cx:cx_32,dx:dx_105,sp:sp_27,Top:Top_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B2F:
	word16 bx_38
	word16 dx_39
	byte ah_49
	call SEQ(0x0800, Mem18[ds:0x2352:word16]) (retsize: 2;)
		uses: ah:fn0800_0150(out dx_39, out bx_38),ax:SEQ(ah_49, al_110),bx:bx_38,cx:cx_31,dx:dx_39,sp:sp_26,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_34
		defs: ah:ah_49,bx:bx_47,cx:cx_46,Top:Top_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B36:
	word16 dx_55
	word16 ax_54 = fn0800_01B9(ds, out dx_55)
	fn0800_0163()
	word16 sp_66 = fp - 4
	branch wArg04 != 0x0000 l0800_8B55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B55:
	dxOut = dx_55
	return ax_54
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B0D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B42:
	branch wArg06 != 0x0000 l0800_8B4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B46:
	word16 sp_67
	word16 cx_70
	word16 bx_73
	int8 Top_75
	word16 ax_76
	word16 dx_77
	call SEQ(0x0800, Mem58[ds:0x2354:word16]) (retsize: 2;)
		uses: ax:ax_54,bx:bx_71,cx:cx_68,dx:dx_55,sp:fp - 4,Stack +0000:bp,Stack +0002:si,Stack +0004:bp,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg04,Stack +000C:wArg06,Stack +FFFFFFFE:si,Top:Top_74
		defs: ax:ax_76,bx:bx_73,cx:cx_70,dx:dx_77,sp:sp_67,Top:Top_75
	call SEQ(0x0800, Mem58[ds:0x2356:word16]) (retsize: 2;)
		uses: ax:ax_76,bx:bx_73,cx:cx_70,dx:dx_77,sp:sp_67,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_75
		defs: sp:sp_81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B4E:
	word16 sp_93 = sp_66 - 2
	Mem94[ss:sp_93:word16] = wArg02
	fn0800_0164(Mem94[ss:sp_93:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8B5A(word16 cx, word16 dx, word16 bx, word16 si, selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_8B5A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B5A:
	word16 dx_25
	word16 ax_24 = fn0800_8B0D(0x0000, cx, dx, bx, fp - 2, si, ds, wArg02, 0x0000, 0x0000, out dx_25)
	dxOut = dx_25
	return ax_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B5A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8B69(word16 cx, word16 dx, word16 bx, word16 si, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_8B69_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B69:
	word16 dx_39
	fn0800_8B0D(0x0000, cx, dx, bx, fp - 2, si, ds, wArg02, 0x0000, 0x0001, out dx_39)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B69_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8B95(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah bx cx dx es Top
// Preserved: bp sp
fn0800_8B95_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B95:
	byte dh_10
	word16 cx_11
	byte dl_12 = msdos_get_system_date(out dh_10, out cx_11)
	Mem16[ptrArg02:word16] = cx_11
	Mem18[ptrArg02 + 0x0002:word16] = SEQ(dh_10, dl_12)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B95_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8BA8(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah bx cx dx es Top
// Preserved: bp sp
fn0800_8BA8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BA8:
	byte ch_10
	byte dh_11
	byte dl_12
	byte cl_13 = msdos_get_system_time(out ch_10, out dh_11, out dl_12)
	Mem18[ptrArg02:word16] = SEQ(ch_10, cl_13)
	Mem20[ptrArg02 + 0x0002:word16] = SEQ(dh_11, dl_12)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BA8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BBB(word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bx cx dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BBB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BBB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC0_thunk_fn0800_8BD8:
	word16 bx_17
	word16 cx_18
	word16 dx_19
	word16 ax_16 = fn0800_8BD8(0x0000, dwArg02, wArg06, wArg08, out cx_18, out dx_19, out bx_17)
	cxOut = cx_18
	dxOut = dx_19
	bxOut = bx_17
	return ax_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BBB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BC2(word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bx cx dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC8_thunk_fn0800_8BD8:
	word16 bx_15
	word16 cx_16
	word16 dx_17
	word16 ax_14 = fn0800_8BD8(0x0001, dwArg02, wArg06, wArg08, out cx_16, out dx_17, out bx_15)
	cxOut = cx_16
	dxOut = dx_17
	bxOut = bx_15
	return ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BCA(word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BCA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BCA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BD0_thunk_fn0800_8BD8:
	word16 dx_17
	word16 cx_29
	word16 bx_30
	word16 ax_14 = fn0800_8BD8(0x0002, dwArg02, wArg06, wArg08, out cx_29, out dx_17, out bx_30)
	dxOut = dx_17
	return ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BCA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BD8(word16 cx, word32 dwArg04, word16 wArg08, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Stack +0004:[0..31] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_8BD8_entry:
	word16 wArg04 = SLICE(dwArg04, word16, 0)
	word16 wArg06 = SLICE(dwArg04, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BD8:
	word16 dx_102
	word16 bx_146
	word16 di_16 = cx
	word16 ax_100 = wArg04
	word16 cx_134 = wArg0A
	branch wArg0A != 0x0000 l0800_8BF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BEF:
	branch wArg06 == 0x0000 l0800_8C5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BF3:
	branch wArg08 == 0x0000 l0800_8C5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C5C:
	bx_146 = wArg08
	word16 dx_38 = (uint16) (dwArg04 % wArg08)
	ax_100 = (uint16) (dwArg04 /u wArg08)
	branch (cx & 0x0002) == 0x0000 l0800_8C65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C64:
	ax_100 = dx_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C65:
	dx_102 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BF7:
	dx_102 = wArg06
	ui32 cx_bx_272 = SEQ(wArg0A, wArg08)
	branch (cx & 0x0001) != 0x0000 l0800_8C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BFD:
	dx_102 = wArg06
	branch wArg06 >= 0x0000 l0800_8C0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C01:
	ax_100 = -wArg04
	dx_102 = -wArg06 - (ax_100 == 0x0000)
	di_16 = cx | 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C0B:
	cx_bx_272 = SEQ(wArg0A, wArg08) (alias)
	branch wArg0A >= 0x0000 l0800_8C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C0F:
	word16 bx_76 = -wArg08
	di_16 = di_16 ^ 0x0004
	cx_bx_272 = SEQ(-wArg0A - (bx_76 == 0x0000), bx_76) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C19:
	word16 bx_194 = SLICE(cx_bx_272, word16, 0)
	word16 cx_83 = SLICE(cx_bx_272, word16, 16)
	cx_134 = 0x0020
	word16 di_111 = 0x0000
	word16 si_107 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C23:
	ax_100 = ax_100 << 0x0001
	dx_102 = __rcl(dx_102, 0x01, SLICE(cond(ax_100), bool, 1))
	si_107 = __rcl(si_107, 0x01, (dx_102 & 0x8000) != 0x0000)
	di_111 = __rcl(di_111, 0x01, (si_107 & 0x8000) != 0x0000)
	branch di_111 <u cx_83 l0800_8C3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C2F:
	branch di_111 >u cx_83 l0800_8C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C31:
	branch si_107 <u bx_194 l0800_8C3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C35:
	ui32 di_si_198 = SEQ(di_111, si_107) - cx_bx_272
	si_107 = (word16) di_si_198
	di_111 = SLICE(di_si_198, word16, 16)
	ax_100 = ax_100 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C3A:
	cx_134 = cx_134 - 0x0001
	branch cx_134 != 0x0000 l0800_8C23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C3C:
	bx_146 = di_16
	branch (di_16 & 0x0002) == 0x0000 l0800_8C49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C43:
	ax_100 = si_107
	dx_102 = di_111
	bx_146 = di_16 >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C49:
	branch (bx_146 & 0x0004) == 0x0000 l0800_8C56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C4F:
	ax_100 = -ax_100
	dx_102 = -dx_102 - (ax_100 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C56:
	cxOut = cx_134
	dxOut = dx_102
	bxOut = bx_146
	return ax_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BD8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8C69(word16 ax, byte cl, word16 dx, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax cl dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8C69_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C69:
	branch cl >=u 0x10 l0800_8C81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C81:
	clOut = cl - 0x10
	dxOut = ax << cl - 0x10
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C71:
	byte cl_28 = -cl
	clOut = cl_28 + 0x10
	dxOut = dx << cl | ax >>u cl_28 + 0x10
	return ax << cl
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8C69_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8C8A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C8A:
	branch cl >=u 0x10 l0800_8CA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CA2:
	int32 dx_ax_21 = (int32) dx
	dxOut = SLICE(dx_ax_21, word16, 16)
	return SLICE(dx_ax_21, word16, 0) >> cl - 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C92:
	dxOut = dx >> cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8C8A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8CAA(word16 ax, byte cl, word16 dx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8CAA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CAA:
	branch cl >=u 0x10 l0800_8CC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CC2:
	dxOut = 0x0000
	return dx >>u cl - 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CB2:
	dxOut = dx >>u cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8CAA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8CCB(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: ax cx dx sp
// Trashed: SCZO ax bx cx dx es sp Top
// Preserved:
fn0800_8CCB_entry:
	byte dh_31 = SLICE(dx, byte, 8)
	byte dl_42 = SLICE(dx, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CCB:
	byte cl_27 = SLICE(cx, byte, 0)
	branch cx >= 0x0000 l0800_8CDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CDE:
	word16 ax_20 = ax + bx
	byte al_36 = SLICE(ax_20, byte, 0)
	branch ax_20 >=u 0x0000 l0800_8CE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CE2:
	dh_31 = SLICE(dx + 0x1000, byte, 8) (alias)
	dl_42 = SLICE(dx + 0x1000, byte, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CE6:
	chOut = <invalid>
	dxOut = SEQ(dh_31 + (cl_27 << 0x04), dl_42) + (ax_20 >>u 0x04)
	return SEQ(SLICE(ax_20 >>u 0x04, byte, 8), al_36) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CD2:
	word16 bx_53 = ~bx
	byte cl_66 = SLICE(~cx + (bx_53 <u 0x0001), byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D0D:
	word16 ax_60 = ax - (bx_53 + 0x0001)
	byte al_75 = SLICE(ax_60, byte, 0)
	branch ax_60 >=u 0x0000 l0800_8D15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D11:
	dx = dx - 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D15:
	chOut = <invalid>
	dxOut = dx - SEQ(cl_66 << 0x04, 0x00) + (ax_60 >>u 0x04)
	return SEQ(SLICE(ax_60 >>u 0x04, byte, 8), al_75) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8CCB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_8D2B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D2B:
	word16 si_17
	word16 si_13 = wArg02
	branch wArg02 < 0x0000 l0800_8D4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D4B:
	si_17 = -wArg02
	branch si_17 > 0x0023 l0800_8D3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D52:
	Mem21[ds:0x2516:word16] = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D36:
	branch wArg02 <= 0x0058 l0800_8D3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D3B:
	si_13 = 0x0057
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D3E:
	Mem28[ds:0x2516:word16] = si_13
	si_17 = (int16) Mem28[ds:si_13 + 0x2518:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D58:
	Mem34[ds:0x007F:word16] = si_17
	return 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D2B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8D64(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_8D64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D64:
	fn0800_8D2B(ds, wArg02)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8D76(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_8D76_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D76:
	word16 dx_11
	msdos_ioctl_get_device_info(wArg02, out dx_11)
	return dx_11 & 0x0080
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D76_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8D87(byte bArg02, byte bArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0C, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..7] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +000E:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx Top
// Preserved: bp di es si sp ss
fn0800_8D87_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D87:
	selector es_34 = SLICE(ptrArg08, selector, 16)
	word16 di_123 = SLICE(ptrArg08, word16, 0)
	byte bl_23 = SLICE(wArg06, byte, 0)
	branch wArg06 >u 0x0024 l0800_8DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D9B:
	branch bl_23 <u 0x02 l0800_8DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DA0:
	word16 ax_26 = wArg0C
	word16 cx_28 = wArg0E
	branch wArg0E >= 0x0000 l0800_8DBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DAA:
	branch bArg04 == 0x00 l0800_8DBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DB0:
	Mem36[ptrArg08:byte] = 0x2D
	ax_26 = -wArg0C
	di_123 = di_123 + 0x0001
	cx_28 = -wArg0E - (ax_26 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DBC:
	word16 si_106 = fp - 0x0024
	branch cx_28 == 0x0000 l0800_8DD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DC1:
	word32 dx_ax_52 = (uint32) (uint16) cx_28
	word32 dx_ax_60 = SEQ((uint16) (dx_ax_52 % wArg06), ax_26)
	Mem68[ss:si_106:byte] = SLICE((uint16) (dx_ax_60 % wArg06), byte, 0)
	word16 ax_56 = (uint16) (dx_ax_52 /u wArg06)
	cx_28 = ax_56
	ax_26 = (uint16) (dx_ax_60 /u wArg06)
	si_106 = si_106 + 0x0001
	branch ax_56 == 0x0000 l0800_8DD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DD9:
	branch ax_26 != 0x0000 l0800_8DD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DD1:
	word32 dx_ax_79 = (uint32) (uint16) ax_26
	Mem95[ss:si_106:byte] = SLICE((uint16) (dx_ax_79 % wArg06), byte, 0)
	ax_26 = (uint16) (dx_ax_79 /u wArg06)
	si_106 = si_106 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DDD:
	word16 cx_103 = 0x0024 - fp + si_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DE5:
	byte al_115
	si_106 = si_106 - 0x0001
	byte al_110 = Mem109[ss:si_106:byte]
	branch al_110 >=u 0x0A l0800_8DF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF1:
	al_115 = al_110 - 0x0A + bArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DED:
	al_115 = al_110 + 0x30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF4:
	Mem124[es_34:di_123:byte] = al_115
	di_123 = di_123 + 0x0001
	cx_103 = cx_103 - 0x0001
	branch cx_103 != 0x0000 l0800_8DE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF7:
	Mem132[es_34:di_123:byte] = 0x00
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D87_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DCF:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8E09(word32 dwArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx Top
// Preserved: bp sp
fn0800_8E09_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E09:
	fn0800_8D87(0x61, 0x00, 0x000A, dwArg02, wArg06, 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E09_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8E29(selector ds, word16 wArg02, word32 dwArg04, byte bArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..7]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_8E29_entry:
	word16 wArg06 = SLICE(dwArg04, word16, 16)
	word16 wArg04 = SLICE(dwArg04, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E29:
	Mem13[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 ax_21 = SEQ(0x42, bArg08)
	word16 dx_19 = wArg04
	branch msdos_set_file_position(wArg02, dwArg04, bArg08, SEQ(wArg04, ax_21)) l0800_8E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E4B:
	word32 dx_ax_32 = (word32) fn0800_8D2B(ds, ax_21)
	ax_21 = SLICE(dx_ax_32, word16, 0) (alias)
	dx_19 = SLICE(dx_ax_32, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E49:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E50:
	cxOut = wArg06
	dxOut = dx_19
	bxOut = wArg02
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E29_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8E52(byte al, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ds:[0..15]
// LiveOut: ax
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_8E52_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E52:
	word16 ax_21
	__syscall(0x21)
	word16 ax_19 = SEQ(0x39, al)
	branch C l0800_8E64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E64:
	ax_21 = fn0800_8D2B(ds, ax_19)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E60:
	ax_21 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E68:
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E52_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8E6A(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp sp
fn0800_8E6A_entry:
	word16 wArg08 = SLICE(dwArg08, word16, 0)
	word16 wArg0A = SLICE(dwArg08, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E6A:
	word32 dwArg08_140 = dwArg08
	branch (wArg08 | wArg0A) != 0x0000 l0800_8E7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E75:
	dwArg08_140 = SEQ(ds, 0x4ED6) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E7D:
	word32 dx_ax_143
	branch (wArg04 | wArg06) != 0x0000 l0800_8E8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E8F:
	dx_ax_143 = SEQ(wArg06, wArg04) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E88:
	dx_ax_143 = SEQ(ds, 0x2572) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E95:
	fn0800_9CE6(dwArg08_140, dx_ax_143)
	word32 dx_ax_146 = <invalid>
	fn0800_8E09(dx_ax_146, wArg02)
	fn0800_BF5F(dwArg08_140, SEQ(ds, 0x2576))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E6A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZO ax cx dx Top
// Preserved: si sp
fn0800_8F18_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F18:
	word16 ax_14 = dx
	branch dx == 0x0000 l0800_8F21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F1F:
	ax_14 = SLICE(bx *u dx, word16, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F21:
	branch cx == 0x0000 l0800_8F28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F23:
	ax_14 = SLICE(ax *u cx, word16, 0) + ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F28:
	chOut = <invalid>
	word32 dx_ax_42 = bx *u ax
	dxOut = SLICE(dx_ax_42, word16, 16) + ax_14
	return SLICE(dx_ax_42, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F18_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8F2F(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: CZ bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: sp
fn0800_8F2F_entry:
	byte bl = SLICE(bx, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F2F:
	word16 dx_15 = dx + (ax >>u 0x04)
	word16 cx_24 = cx + (bx >>u 0x04)
	word16 bx_30 = SEQ(SLICE(bx >>u 0x04, byte, 8), bl) & 0x000F
	branch dx_15 != cx_24 l0800_8F4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F4D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F4F:
	cxOut = cx_24
	dxOut = dx_15
	bxOut = bx_30
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F50(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_8F50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F50:
	word16 ax_23
	word16 wLoc04_52
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0002) == 0x0000 l0800_8F66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F66:
	dx = SLICE(ptrArg04, word16, 0) (alias)
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_23) l0800_8F79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F79:
	wLoc04_52 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F77:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F60:
	wLoc04_52 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7A:
	ax_23 = fn0800_8D2B(ds, wLoc04_52)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7D:
	chOut = <invalid>
	dxOut = dx
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F7F(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..31]
// LiveOut: dx
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_8F7F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7F:
	word16 dx_15 = SLICE(ptrArg02, word16, 0)
	word16 ax_21 = SEQ(0x41, al)
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), dx_15) l0800_8F91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F91:
	fn0800_8D2B(ds, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F8D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F95:
	return dx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F7F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8F97(word16 cx, word32 edx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, selector psegArg0C, ptr16 & edxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] edx:[0..31] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: cx di edx
// Trashed: SCZDO ax bp bx cx di edx es si Top
// Preserved: sp
l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1981, out di_6)
	edxOut = edx_913
	diOut = di_6
	return (byte) cx_904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1980, out di_19)
	edxOut = edx_913
	diOut = di_19
	return (byte) cx_904
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F97_entry:
	def fp
	def bp
	def ss
	def si
	def di
	def es
	def ds
	def cx
	def bx
	def edx
	def wArg0A
	def psegArg0C
	def wArg08
	def wArg06
	def wArg02
	def wLoc0C
	def bLoc03
	def wArg04
	def wLoc0A
	def wLoc12
	def wLoc14
	def wLoc0E
	def wLoc10
	Top_29 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F97:
	wLoc06_1252 = 0x0000
	wLoc08_1253 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FC6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FC8:
	wLoc10_1945 = PHI((wLoc10, l0800_8FC6), (wLoc10_1947, l0800_911C), (wLoc10_1945, l0800_92AB), (wLoc10_1945, l0800_9391), (wLoc10_1826, l0800_91F1), (wLoc10_1826, l0800_91FD))
	wLoc0E_1923 = PHI((wLoc0E, l0800_8FC6), (wLoc0E_1925, l0800_911C), (wLoc0E_1923, l0800_92AB), (wLoc0E_1923, l0800_9391), (wLoc0E_1825, l0800_91F1), (wLoc0E_1825, l0800_91FD))
	wLoc14_1905 = PHI((wLoc14, l0800_8FC6), (wLoc14_1907, l0800_911C), (wLoc14_1905, l0800_92AB), (wLoc14_1905, l0800_9391), (wLoc14_1905, l0800_91F1), (wLoc14_1905, l0800_91FD))
	wLoc12_1883 = PHI((wLoc12, l0800_8FC6), (wLoc12_1885, l0800_911C), (wLoc12_1883, l0800_92AB), (wLoc12_1883, l0800_9391), (wLoc12_1827, l0800_91F1), (wLoc12_1827, l0800_91FD))
	bLoc03_1704 = PHI((bLoc03, l0800_8FC6), (bLoc03_1706, l0800_911C), (bLoc03_1260, l0800_92AB), (bLoc03_1497, l0800_9391), (bLoc03_1260, l0800_91F1), (bLoc03_1260, l0800_91FD))
	wLoc0C_1694 = PHI((wLoc0C, l0800_8FC6), (wLoc0C_1314, l0800_911C), (wLoc0C_1314, l0800_92AB), (wLoc0C_1269, l0800_9391), (wLoc0C_1314, l0800_91F1), (wLoc0C_1314, l0800_91FD))
	wLoc06_1675 = PHI((wLoc06_1252, l0800_8FC6), (wLoc06_1676, l0800_911C), (wLoc06_1678, l0800_92AB), (wLoc06_1679, l0800_9391), (wLoc06_1321, l0800_91F1), (wLoc06_1675, l0800_91FD))
	wLoc08_1597 = PHI((wLoc08_1253, l0800_8FC6), (wLoc08_1379, l0800_911C), (wLoc08_1604, l0800_92AB), (wLoc08_1605, l0800_9391), (wLoc08_1379, l0800_91F1), (wLoc08_1379, l0800_91FD))
	wArg0A_1255 = PHI((wArg0A, l0800_8FC6), (wArg0A_1259, l0800_911C), (wArg0A_1259, l0800_92AB), (wArg0A_1267, l0800_9391), (wArg0A_1259, l0800_91F1), (wArg0A_1259, l0800_91FD))
	Top_1241 = PHI((Top_29, l0800_8FC6), (Top_1242, l0800_911C), (Top_1245, l0800_92AB), (Top_1246, l0800_9391), (Top_597, l0800_91F1), (Top_564, l0800_91FD))
	edx_1217 = PHI((edx, l0800_8FC6), (edx_1219, l0800_911C), (edx_1226, l0800_92AB), (edx_1227, l0800_9391), (edx_913, l0800_91F1), (edx_913, l0800_91FD))
	bx_1207 = PHI((bx, l0800_8FC6), (bx_1209, l0800_911C), (bx_1212, l0800_92AB), (bx_1213, l0800_9391), (bx_114, l0800_91F1), (bx_114, l0800_91FD))
	cx_1197 = PHI((cx, l0800_8FC6), (cx_1199, l0800_911C), (cx_1202, l0800_92AB), (cx_1203, l0800_9391), (cx_904, l0800_91F1), (cx_904, l0800_91FD))
	di_1184 = PHI((di, l0800_8FC6), (di_1185, l0800_911C), (di_1187, l0800_92AB), (di_1188, l0800_9391), (di_566, l0800_91F1), (di_94, l0800_91FD))
	Mem51 = PHI((Mem47, l0800_8FC6), (Mem1085, l0800_911C), (Mem1086, l0800_92AB), (Mem1087, l0800_9391), (Mem595, l0800_91F1), (Mem534, l0800_91FD))
	si_52 = wArg0A_1255
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FCB:
	bLoc03_1408 = PHI((bLoc03_1407, l0800_9019), (bLoc03_1407, l0800_902B), (bLoc03_1704, l0800_8FC8))
	wLoc0C_1406 = PHI((wLoc0C_1405, l0800_9019), (wLoc0C_1405, l0800_902B), (wLoc0C_1694, l0800_8FC8))
	wArg0A_1402 = PHI((wArg0A_1401, l0800_9019), (wArg0A_1401, l0800_902B), (wArg0A_1255, l0800_8FC8))
	wLoc08_1379 = PHI((wLoc08_1459, l0800_9019), (wLoc08_1380, l0800_902B), (wLoc08_1597, l0800_8FC8))
	Top_916 = PHI((Top_1033, l0800_9019), (Top_918, l0800_902B), (Top_1241, l0800_8FC8))
	edx_910 = PHI((edx_1030, l0800_9019), (edx_914, l0800_902B), (edx_1217, l0800_8FC8))
	bx_907 = PHI((bx_1027, l0800_9019), (bx_908, l0800_902B), (bx_1207, l0800_8FC8))
	cx_904 = PHI((cx_1026, l0800_9019), (cx_922, l0800_902B), (cx_1197, l0800_8FC8))
	di_881 = PHI((di_930, l0800_9019), (di_930, l0800_902B), (di_1184, l0800_8FC8))
	si_58 = PHI((si_899, l0800_9019), (si_899, l0800_902B), (si_52, l0800_8FC8))
	Mem55 = PHI((Mem1038, l0800_9019), (Mem897, l0800_902B), (Mem51, l0800_8FC8))
	al_59 = Mem55[ds:si_58:byte]
	edx_16_16_912 = SLICE(edx_910, word16, 16) (alias)
	dx_1154 = SLICE(edx_910, word16, 0) (alias)
	si_60 = si_58 + 0x0001
	al_61 = al_59
	branch al_59 == 0x00 l0800_9042
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9042:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9042_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1976, out di_68)
	edxOut = edx_910
	diOut = di_68
	return (byte) cx_904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FD4:
	branch al_59 == 0x25 l0800_9045
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9045:
	wLoc0C_1257 = 0xFFFF
	es_79 = psegArg0C
	bLoc03_1258 = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9051:
	wLoc0C_1314 = PHI((wLoc0C_1257, l0800_9045), (wLoc0C_1314, l0800_9078), (wLoc0C_1314, l0800_9092), (wLoc0C_1314, l0800_90AA), (wLoc0C_1314, l0800_90A4), (wLoc0C_1314, l0800_90BB), (wLoc0C_1314, l0800_909E), (wLoc0C_1314, l0800_9098), (wLoc0C_1375, l0800_907E), (wLoc0C_1376, l0800_9088))
	bLoc03_1260 = PHI((bLoc03_1258, l0800_9045), (bLoc03_1377, l0800_9078), (bLoc03_1313, l0800_9092), (bLoc03_1261, l0800_90AA), (bLoc03_1262, l0800_90A4), (bLoc03_1260, l0800_90BB), (bLoc03_1312, l0800_909E), (bLoc03_1311, l0800_9098), (bLoc03_1260, l0800_907E), (bLoc03_1260, l0800_9088))
	dx_670 = PHI((dx_1154, l0800_9045), (dx_670, l0800_9078), (dx_670, l0800_9092), (dx_670, l0800_90AA), (dx_670, l0800_90A4), (dx_153, l0800_90BB), (dx_670, l0800_909E), (dx_670, l0800_9098), (dx_670, l0800_907E), (dx_1155, l0800_9088))
	di_91 = PHI((di_881, l0800_9045), (di_94, l0800_9078), (di_94, l0800_9092), (di_94, l0800_90AA), (di_94, l0800_90A4), (di_94, l0800_90BB), (di_94, l0800_909E), (di_94, l0800_9098), (di_837, l0800_907E), (di_837, l0800_9088))
	Mem83 = PHI((Mem80, l0800_9045), (Mem848, l0800_9078), (Mem504, l0800_9092), (Mem117, l0800_90AA), (Mem121, l0800_90A4), (Mem89, l0800_90BB), (Mem500, l0800_909E), (Mem496, l0800_9098), (Mem835, l0800_907E), (Mem845, l0800_9088))
	si_82 = PHI((si_60, l0800_9045), (si_85, l0800_9078), (si_85, l0800_9092), (si_85, l0800_90AA), (si_85, l0800_90A4), (si_85, l0800_90BB), (si_85, l0800_909E), (si_85, l0800_9098), (si_85, l0800_907E), (si_85, l0800_9088))
	si_85 = si_82 + 0x0001
	ax_86 = (int16) Mem83[ds:si_82:byte]
	dh_1139 = SLICE(dx_670, byte, 8) (alias)
	wArg0A_1259 = si_85
	ax_92 = di_91
	di_94 = ax_86
	edx_1788 = SEQ(edx_16_16_912, dx_670) (alias)
	branch ax_86 < 0x0000 l0800_9075
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9075:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9075_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1978, out di_101)
	edxOut = edx_1788
	diOut = di_101
	return (byte) cx_904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_905C:
	bx_111 = (uint16) (uint8) Mem89[ds:ax_86 + 0x257C:byte] (alias)
	edx_1787 = SEQ(edx_16_16_912, dx_670) (alias)
	branch bx_111 <=u 0x0015 l0800_906A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906A:
	bx_114 = bx_111 << 0x0001
	edx_913 = SEQ(edx_16_16_912, dx_670) (alias)
	switch (bx_111 << 0x0001) { l0800_93BE l0800_93BE l0800_93BE l0800_9071 l0800_9078 l0800_907E l0800_926F l0800_90C2 l0800_90C2 l0800_90CC l0800_91A1 l0800_9092 l0800_909E l0800_9098 l0800_90BD l0800_920B l0800_92B1 l0800_90B0 l0800_90C7 l0800_9127 l0800_90A4 l0800_90AA }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90AA:
	bLoc03_1261 = bLoc03_1260 | 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90A4:
	bLoc03_1262 = bLoc03_1260 & 0xDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9127:
	ax_126 = fn0800_912A(SEQ(ss, fp - 2), di_91, cx_904, bx_111 << 0x0001, ds, out cx_129, out bx_128, out bp_127, out di_1973)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9127_thunk_fn0800_912A:
	fn0800_912A(SEQ(ss, bp_127), ax_126, cx_129, bx_128, ds, out cx_142, out bx_1982, out bp_1983, out di_143)
	edxOut = edx_913
	diOut = di_143
	return (byte) cx_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90C7:
	si_151 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90B0:
	ax_152 = wLoc08_1379
	dx_153 = 0x0000
	edx_1968 = SEQ(edx_16_16_912, 0x0000) (alias)
	branch (bLoc03_1260 & 0x01) == 0x00 l0800_9110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90BB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92B1:
	di_168 = fp - 0x002C
	cx_169 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BD:
	di_464 = PHI((di_168, l0800_92B1), (di_466, l0800_92BD_1))
	Mem173 = PHI((Mem165, l0800_92B1), (Mem465, l0800_92BD_1))
	cx_170 = PHI((cx_169, l0800_92B1), (cx_467, l0800_92BD_1))
	branch cx_170 == 0x0000 l0800_92BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BF:
	v48_181 = bLoc03_1260 & 0xEF
	es_174 = bp
	al_178 = Mem173[ds:si_85:byte]
	si_179 = si_85 + 0x0001
	bLoc03_1265 = v48_181
	branch al_178 != 0x5E l0800_92D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92CA:
	bLoc03_1266 = v48_181 | 0x10
	al_190 = Mem187[ds:si_85 + 0x0001:byte]
	si_191 = si_85 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92D0:
	bLoc03_1497 = PHI((bLoc03_1265, l0800_92BF), (bLoc03_1266, l0800_92CA))
	si_1109 = PHI((si_179, l0800_92BF), (si_191, l0800_92CA))
	Mem1104 = PHI((Mem182, l0800_92BF), (Mem187, l0800_92CA))
	al_1099 = PHI((al_178, l0800_92BF), (al_190, l0800_92CA))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92D2:
	si_1108 = PHI((si_1109, l0800_92D0), (si_216, l0800_92EE), (si_216, l0800_92F2), (si_216, l0800_92F7))
	Mem207 = PHI((Mem1104, l0800_92D0), (Mem214, l0800_92EE), (Mem214, l0800_92F2), (Mem214, l0800_92F7))
	al_193 = PHI((al_1099, l0800_92D0), (al_215, l0800_92EE), (al_215, l0800_92F2), (al_215, l0800_92F7))
	cl_202 = al_193 & 0x07
	ax_196 = (uint16) (uint8) al_193 (alias)
	ch_204 = 0x01 << cl_202
	Mem209[ss:fp - 0x002C + (ax_196 >>u 0x03):byte] = Mem207[ss:fp - 0x002C + (ax_196 >>u 0x03):byte] | ch_204
	dl_194 = al_193
	di_199 = ax_196 >>u 0x03
	cx_1124 = SEQ(ch_204, cl_202) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92E4:
	cx_1123 = PHI((cx_1124, l0800_92D2), (cx_1123, l0800_92FD), (cx_1127, l0800_9311))
	di_1117 = PHI((di_199, l0800_92D2), (di_1117, l0800_92FD), (di_450, l0800_9311))
	dl_432 = PHI((dl_194, l0800_92D2), (dl_432, l0800_92FD), (dl_443, l0800_9311))
	Mem214 = PHI((Mem209, l0800_92D2), (Mem214, l0800_92FD), (Mem455, l0800_9311))
	si_213 = PHI((si_1108, l0800_92D2), (si_439, l0800_92FD), (si_439, l0800_9311))
	cl_1126 = SLICE(cx_1123, byte, 0) (alias)
	ch_1153 = SLICE(cx_1123, byte, 8) (alias)
	al_215 = Mem214[ds:si_213:byte]
	si_216 = si_213 + 0x0001
	edx_1789 = SEQ(edx_16_16_912, dh_1139, dl_432) (alias)
	branch al_215 == 0x00 l0800_9313
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9313:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9313_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2), out bp_1989, out di_224)
	edxOut = edx_1789
	diOut = di_224
	return (byte) cx_1123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92EA:
	ax_1118 = (uint16) (uint8) al_215 (alias)
	dx_1141 = SEQ(dh_1139, dl_432) (alias)
	branch al_215 == 0x5D l0800_9316
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9316:
	v64_231 = wLoc0C_1314 & 0x7FFF
	wArg0A_1267 = si_216
	wLoc0C_1269 = v64_231
	si_234 = v64_231
	branch (bLoc03_1497 & 0x01) != 0x00 l0800_932A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9327:
	di_239 = fn0800_8FAB(SEQ(ss, fp - 2), ds, out es_240)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_932A:
	wLoc08_1271 = PHI((wLoc08_1379, l0800_9316), (wLoc08_1379, l0800_9327), (wLoc08_1272, l0800_9364), (wLoc08_1272, l0800_936A))
	Top_276 = PHI((Top_916, l0800_9316), (Top_916, l0800_9327), (Top_277, l0800_9364), (Top_277, l0800_936A))
	dx_274 = PHI((dx_1141, l0800_9316), (dx_1141, l0800_9327), (dx_275, l0800_9364), (dx_275, l0800_936A))
	bx_272 = PHI((bx_114, l0800_9316), (bx_114, l0800_9327), (bx_353, l0800_9364), (bx_353, l0800_936A))
	cx_270 = PHI((cx_1123, l0800_9316), (cx_1123, l0800_9327), (cx_397, l0800_9364), (cx_397, l0800_936A))
	ax_267 = PHI((ax_1118, l0800_9316), (ax_1118, l0800_9327), (ax_1120, l0800_9364), (ax_1121, l0800_936A))
	di_266 = PHI((di_1117, l0800_9316), (di_239, l0800_9327), (di_266, l0800_9364), (di_372, l0800_936A))
	es_257 = PHI((es_174, l0800_9316), (es_240, l0800_9327), (es_283, l0800_9364), (es_283, l0800_936A))
	Mem251 = PHI((Mem232, l0800_9316), (Mem232, l0800_9327), (Mem264, l0800_9364), (Mem371, l0800_936A))
	si_245 = PHI((si_234, l0800_9316), (si_234, l0800_9327), (si_350, l0800_9364), (si_350, l0800_936A))
	si_246 = si_245 - 0x0001
	edx_1236 = SEQ(edx_16_16_912, dx_274) (alias)
	branch si_246 < 0x0000 l0800_9385
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_932D:
	v68_252 = wLoc08_1271 + 0x0001
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_267,bx:bx_272,cx:cx_270,dx:dx_274,edx:SEQ(edx_16_16_912, dx_275),sp:fp - 6,Stack +0000:bp,Stack +0002:wArg06,Stack +0004:wArg02,Stack +0005:SLICE(wArg08, byte, 8),Stack +0006:es_257,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_216,Stack +000E:psegArg0C,Stack +0010:wArg08,Stack +0012:si_216,Stack +0014:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:es,Stack +FFFFFFD8:di,Stack +FFFFFFDA:si,Stack +FFFFFFF6:v64_231,Stack +FFFFFFFA:v68_252,Stack +FFFFFFFC:wLoc06_1675,Stack +FFFFFFFE:wLoc0A,Stack +FFFFFFFF:bLoc03_1497,Top:Top_276
		defs: ax:ax_268,dx:dx_275,edx:edx_1277,Top:Top_277
	wLoc08_1272 = v68_252
	cx_281 = wArg08
	es_283 = es_257
	branch ax_268 < 0x0000 l0800_9394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9394:
	branch si_246 + 0x0001 >= v64_231 l0800_9398_thunk_fn0800_93A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9398_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1990, out di_295)
	edxOut = edx_1277
	diOut = di_295
	return (byte) wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_939A:
	branch (bLoc03_1497 & 0x01) != 0x00 l0800_939E_thunk_fn0800_93A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_939E_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1991, out di_309)
	edxOut = edx_1277
	diOut = di_309
	return (byte) wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A0:
	Mem318[es_257:di_266:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A3_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1992, out di_326)
	edxOut = edx_1277
	diOut = di_326
	return (byte) wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9341:
	bl_342 = SLICE(ax_268, byte, 0) (alias)
	ch_345 = 0x01 << (bl_342 & 0x07)
	si_350 = si_246
	al_368 = SLICE(ax_268, byte, 0) (alias)
	bx_353 = ax_268 >>u 0x03
	cx_397 = SEQ(ch_345, bl_342 & 0x07) (alias)
	branch (Mem264[ss:fp - 0x002C + (ax_268 >>u 0x03):byte] & ch_345) == 0x00 l0800_935E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_935E:
	branch (bLoc03_1497 & 0x10) == 0x00 l0800_936D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9356:
	branch (bLoc03_1497 & 0x10) == 0x00 l0800_9364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9364:
	ax_1120 = ax_268 (alias)
	branch (bLoc03_1497 & 0x01) != 0x00 l0800_932A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_936A:
	Mem371[es_257:di_266:byte] = al_368
	di_372 = di_266 + 0x0001
	ax_1121 = ax_268 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_935C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_936D:
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_268,bx:ax_268 >>u 0x03,cx:cx_397,dx:dx_275,edx:edx_1238,sp:fp - 8,Stack +0000:bp,Stack +0002:ax_268,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0007:SLICE(wArg08, byte, 8),Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_216,Stack +000E:psegArg0C,Stack +0010:wArg06,Stack +0012:wArg08,Stack +0014:si_216,Stack +0016:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD8:es,Stack +FFFFFFDA:di,Stack +FFFFFFDC:si,Stack +FFFFFFF6:v64_231,Stack +FFFFFFFA:v68_252,Stack +FFFFFFFC:wLoc06_1675,Stack +FFFFFFFE:v64_231,Stack +FFFFFFFF:bLoc03_1497,Top:Top_277
		defs: bx:bx_400,cx:cx_398,dx:dx_402,sp:sp_391,Top:Top_404
	es_407 = Mem390[ss:sp_391 + 0x0006:selector]
	edx_1238 = SEQ(edx_16_16_912, dx_402) (alias)
	branch si_246 + 0x0001 >= v64_231 l0800_938E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9385:
	Top_1247 = PHI((Top_276, l0800_932A), (Top_404, l0800_936D))
	edx_1228 = PHI((edx_1236, l0800_932A), (edx_1238, l0800_936D))
	bx_1214 = PHI((bx_272, l0800_932A), (bx_400, l0800_936D))
	cx_1204 = PHI((cx_270, l0800_932A), (cx_398, l0800_936D))
	es_425 = PHI((es_257, l0800_932A), (es_407, l0800_936D))
	Mem416 = PHI((Mem251, l0800_932A), (Mem410, l0800_936D))
	branch (bLoc03_1497 & 0x01) != 0x00 l0800_9391
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_938B:
	wLoc06_1310 = wLoc06_1675 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_938E:
	wLoc06_1680 = PHI((wLoc06_1675, l0800_936D), (wLoc06_1310, l0800_938B))
	Top_1248 = PHI((Top_404, l0800_936D), (Top_1247, l0800_938B))
	edx_1239 = PHI((edx_1238, l0800_936D), (edx_1228, l0800_938B))
	bx_1215 = PHI((bx_400, l0800_936D), (bx_1214, l0800_938B))
	cx_1205 = PHI((cx_398, l0800_936D), (cx_1204, l0800_938B))
	es_424 = PHI((es_407, l0800_936D), (es_425, l0800_938B))
	Mem428[es_424:di_266:byte] = 0x00
	di_429 = di_266 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9391:
	wLoc06_1679 = PHI((wLoc06_1675, l0800_9385), (wLoc06_1680, l0800_938E))
	Top_1246 = PHI((Top_1247, l0800_9385), (Top_1248, l0800_938E))
	edx_1227 = PHI((edx_1228, l0800_9385), (edx_1239, l0800_938E))
	bx_1213 = PHI((bx_1214, l0800_9385), (bx_1215, l0800_938E))
	cx_1203 = PHI((cx_1204, l0800_9385), (cx_1205, l0800_938E))
	di_1188 = PHI((di_266, l0800_9385), (di_429, l0800_938E))
	Mem1087 = PHI((Mem416, l0800_9385), (Mem428, l0800_938E))
	wLoc08_1605 = wLoc08_1271
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92EE:
	branch al_215 != 0x2D l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92F2:
	branch dl_432 >u Mem214[bp:si_216:byte] l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92F7:
	branch Mem214[bp:si_216:byte] == 0x5D l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92FD:
	si_439 = si_216 + 0x0001
	al_440 = Mem214[ds:si_216:byte] - dl_432
	branch al_440 == 0x00 l0800_92E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9303:
	dl_443 = dl_432 + al_440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9305:
	al_458 = PHI((al_440, l0800_9303), (al_459, l0800_9305))
	Mem453 = PHI((Mem214, l0800_9303), (Mem455, l0800_9305))
	di_449 = PHI((di_1117, l0800_9303), (di_450, l0800_9305))
	ch_445 = PHI((ch_1153, l0800_9303), (ch_447, l0800_9305))
	ch_447 = __rol(ch_445, 0x01)
	di_450 = di_449 + ((ch_445 & 0x80) != 0x00)
	Mem455[ss:fp - 0x002C + di_450:byte] = Mem453[ss:fp - 0x002C + di_450:byte] | ch_447
	al_459 = al_458 - 0x01
	cx_1127 = SEQ(ch_447, cl_1126) (alias)
	branch al_459 != 0x00 l0800_9305
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9311:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BD_1:
	Mem465[ss:di_464:word16] = 0x0000
	di_466 = di_464 + 0x0002
	cx_467 = cx_170 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920B:
	ax_469 = fn0800_920E(SEQ(ss, fp - 2), di_91, cx_904, bx_111 << 0x0001, ds, out cx_472, out bx_471, out bp_470, out di_1972)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920B_thunk_fn0800_920E:
	fn0800_920E(SEQ(ss, bp_470), ax_469, cx_472, bx_471, ds, out cx_485, out bx_1985, out bp_1986, out di_486)
	edxOut = edx_913
	diOut = di_486
	return (byte) cx_485
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90BD:
	si_494 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9098:
	bLoc03_1311 = bLoc03_1260 | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_909E:
	bLoc03_1312 = bLoc03_1260 | 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9092:
	bLoc03_1313 = bLoc03_1260 | 0x08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91A1:
	fn0800_A2D0(ds)
	wLoc0E_1825 = wArg06
	wLoc10_1826 = wArg04
	wLoc12_1827 = wArg02
	branch wLoc0A <= 0x0000 l0800_9203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9203:
	fn0800_A2D8(ds)
	branch wLoc0A < 0x0000 l0800_919E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_919E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_919E_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1996, out di_544)
	edxOut = edx_913
	diOut = di_544
	return (byte) cx_904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9208:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9208_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2), out bp_1995, out di_555)
	edxOut = edx_913
	diOut = di_555
	return (byte) cx_904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91CA:
	branch ((int16) bLoc03_1260 & 0x0001) != 0x0000 l0800_91FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91FD:
	Top_564 = fn0800_A2D8(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91D3:
	di_566 = fn0800_8FAB(SEQ(ss, fp - 2), ds, out es_1994)
	wLoc06_1321 = wLoc06_1675 + 0x0001
	branch (bLoc03_1260 & 0x04) == 0x00 l0800_91E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91E4:
	branch (bLoc03_1260 & 0x08) == 0x00 l0800_91EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91EF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91F1:
	Top_597 = fn0800_A2D4(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90CC:
	si_600 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90C2:
	si_603 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90CE:
	si_644 = PHI((si_151, l0800_90C7), (si_494, l0800_90BD), (si_603, l0800_90C2), (si_600, l0800_90CC))
	branch (ax_86 & 0x0020) != 0x0000 l0800_90DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90D4:
	branch ax_86 == 0x0058 l0800_90DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90D9:
	bLoc03_1324 = bLoc03_1260 | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90DD:
	bLoc03_1343 = PHI((bLoc03_1260, l0800_90CE), (bLoc03_1260, l0800_90D4), (bLoc03_1324, l0800_90D9))
	wLoc0E_1837 = wArg08
	wLoc10_1838 = wArg06
	wLoc12_1839 = wArg04
	wLoc14_1840 = wArg02
	ax_672 = fn0800_94B0(wLoc0C_1314 & 0x7FFF, cx_904, dx_670, bx_111 << 0x0001, fp - 2, si_644, ax_86, ds, wArg02, wArg04, wArg06, wArg08, si_644, wLoc0C_1314 & 0x7FFF, SEQ(ss, fp - 0x0008), SEQ(ss, fp - 0x000A), out cx_674, out edx_677, out bx_673, out di_675, out Top_680)
	branch wLoc0A <= 0x0000 l0800_911F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911F:
	branch wLoc0A < 0x0000 l0800_9124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9124:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9124_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1988, out di_692)
	edxOut = edx_677
	diOut = di_692
	return (byte) cx_674
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9121:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9121_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2), out bp_1987, out di_703)
	edxOut = edx_677
	diOut = di_703
	return (byte) cx_674
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9107:
	edx_1224 = edx_677 (alias)
	branch (bLoc03_1343 & 0x01) != 0x00 l0800_911C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_910D:
	wLoc06_1347 = wLoc06_1675 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9110:
	edx_1969 = PHI((edx_1968, l0800_90B0), (edx_677, l0800_910D))
	wLoc10_1948 = PHI((wLoc10_1945, l0800_90B0), (wLoc10_1838, l0800_910D))
	wLoc0E_1926 = PHI((wLoc0E_1923, l0800_90B0), (wLoc0E_1837, l0800_910D))
	wLoc14_1908 = PHI((wLoc14_1905, l0800_90B0), (wLoc14_1840, l0800_910D))
	wLoc12_1886 = PHI((wLoc12_1883, l0800_90B0), (wLoc12_1839, l0800_910D))
	wLoc06_1677 = PHI((wLoc06_1675, l0800_90B0), (wLoc06_1347, l0800_910D))
	bLoc03_1348 = PHI((bLoc03_1260, l0800_90B0), (bLoc03_1343, l0800_910D))
	Top_1243 = PHI((Top_916, l0800_90B0), (Top_680, l0800_910D))
	bx_1210 = PHI((bx_114, l0800_90B0), (bx_673, l0800_910D))
	cx_1200 = PHI((cx_904, l0800_90B0), (cx_674, l0800_910D))
	ax_723 = PHI((ax_152, l0800_90B0), (ax_672, l0800_910D))
	fn0800_8FAB(SEQ(ss, fp - 2), ds, out es_1984)
	es_di_1967 = <invalid>
	Mem724[es_di_1967:word16] = ax_723
	di_717 = SLICE(es_di_1967, word16, 0) (alias)
	edx_16_16_1220 = SLICE(edx_1969, word16, 16) (alias)
	dx_730 = SLICE(edx_1969, word16, 0) (alias)
	di_725 = di_717 + 0x0002
	edx_1222 = edx_1969 (alias)
	branch (bLoc03_1348 & 0x04) == 0x00 l0800_911C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911A:
	Mem734[es_di_1967 + 0x0002:word16] = dx_730
	di_735 = di_717 + 0x0004
	edx_1223 = SEQ(edx_16_16_1220, ax_723) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911C:
	wLoc10_1947 = PHI((wLoc10_1948, l0800_9110), (wLoc10_1948, l0800_911A), (wLoc10_1838, l0800_9107))
	wLoc0E_1925 = PHI((wLoc0E_1926, l0800_9110), (wLoc0E_1926, l0800_911A), (wLoc0E_1837, l0800_9107))
	wLoc14_1907 = PHI((wLoc14_1908, l0800_9110), (wLoc14_1908, l0800_911A), (wLoc14_1840, l0800_9107))
	wLoc12_1885 = PHI((wLoc12_1886, l0800_9110), (wLoc12_1886, l0800_911A), (wLoc12_1839, l0800_9107))
	bLoc03_1706 = PHI((bLoc03_1348, l0800_9110), (bLoc03_1348, l0800_911A), (bLoc03_1343, l0800_9107))
	wLoc06_1676 = PHI((wLoc06_1677, l0800_9110), (wLoc06_1677, l0800_911A), (wLoc06_1675, l0800_9107))
	Top_1242 = PHI((Top_1243, l0800_9110), (Top_1243, l0800_911A), (Top_680, l0800_9107))
	edx_1219 = PHI((edx_1222, l0800_9110), (edx_1223, l0800_911A), (edx_1224, l0800_9107))
	bx_1209 = PHI((bx_1210, l0800_9110), (bx_1210, l0800_911A), (bx_673, l0800_9107))
	cx_1199 = PHI((cx_1200, l0800_9110), (cx_1200, l0800_911A), (cx_674, l0800_9107))
	di_1185 = PHI((di_725, l0800_9110), (di_735, l0800_911A), (di_675, l0800_9107))
	Mem1085 = PHI((Mem724, l0800_9110), (Mem734, l0800_911A), (Mem657, l0800_9107))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_926F:
	branch (bLoc03_1260 & 0x01) != 0x00 l0800_9278
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9275:
	di_740 = fn0800_8FAB(SEQ(ss, fp - 2), ds, out es_741)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9278:
	di_1164 = PHI((di_94, l0800_926F), (di_740, l0800_9275))
	es_1160 = PHI((es_79, l0800_926F), (es_741, l0800_9275))
	si_750 = wLoc0C_1314
	branch wLoc0C_1314 >= 0x0000 l0800_9282
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_927F:
	si_754 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9282:
	si_1162 = PHI((si_750, l0800_9278), (si_754, l0800_927F))
	branch wLoc0C_1314 == 0x0000 l0800_92A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9284:
	wLoc08_1350 = PHI((wLoc08_1379, l0800_9282), (wLoc08_1351, l0800_929F))
	Top_785 = PHI((Top_916, l0800_9282), (Top_786, l0800_929F))
	edx_783 = PHI((edx_913, l0800_9282), (edx_784, l0800_929F))
	bx_781 = PHI((bx_114, l0800_9282), (bx_782, l0800_929F))
	cx_779 = PHI((cx_904, l0800_9282), (cx_790, l0800_929F))
	ax_776 = PHI((ax_92, l0800_9282), (ax_1168, l0800_929F))
	di_775 = PHI((di_1164, l0800_9282), (di_1165, l0800_929F))
	si_774 = PHI((si_1162, l0800_9282), (si_816, l0800_929F))
	v65_760 = wLoc08_1350 + 0x0001
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_776,bx:bx_781,cx:cx_779,edx:edx_783,sp:fp - 6,Stack +0000:bp,Stack +0002:wArg06,Stack +0004:wArg02,Stack +0005:SLICE(wArg08, byte, 8),Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_85,Stack +000E:psegArg0C,Stack +0010:wArg08,Stack +0012:si_85,Stack +0014:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:es,Stack +FFFFFFD8:di,Stack +FFFFFFDA:si,Stack +FFFFFFF4:wLoc14_1905,Stack +FFFFFFF6:wLoc0C_1314,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v65_760,Stack +FFFFFFFC:wLoc06_1675,Stack +FFFFFFFE:wLoc0A,Stack +FFFFFFFF:bLoc03_1260,Top:Top_785
		defs: ax:ax_777,bx:bx_782,edx:edx_784,Top:Top_786
	wLoc08_1351 = v65_760
	cx_790 = wArg08
	al_812 = SLICE(ax_777, byte, 0) (alias)
	branch ax_777 < 0x0000 l0800_92AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AE_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1993, out di_801)
	edxOut = edx_784
	diOut = di_801
	return (byte) wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9298:
	branch (bLoc03_1260 & 0x01) != 0x00 l0800_929F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_929E:
	Mem813[es_1160:di_775:byte] = al_812
	di_814 = di_775 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_929F:
	di_1165 = PHI((di_775, l0800_9298), (di_814, l0800_929E))
	Mem826 = PHI((Mem772, l0800_9298), (Mem813, l0800_929E))
	ax_1168 = ax_777
	si_816 = si_774 - 0x0001
	branch si_816 > 0x0000 l0800_9284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92A2:
	wLoc08_1604 = PHI((wLoc08_1379, l0800_9282), (wLoc08_1351, l0800_929F))
	Top_1245 = PHI((Top_916, l0800_9282), (Top_786, l0800_929F))
	edx_1226 = PHI((edx_913, l0800_9282), (edx_784, l0800_929F))
	bx_1212 = PHI((bx_114, l0800_9282), (bx_782, l0800_929F))
	cx_1202 = PHI((cx_904, l0800_9282), (cx_790, l0800_929F))
	di_1187 = PHI((di_1164, l0800_9282), (di_1165, l0800_929F))
	Mem824 = PHI((Mem89, l0800_9282), (Mem826, l0800_929F))
	branch (bLoc03_1260 & 0x01) != 0x00 l0800_92AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92A8:
	wLoc06_1374 = wLoc06_1675 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AB:
	wLoc06_1678 = PHI((wLoc06_1675, l0800_92A2), (wLoc06_1374, l0800_92A8))
	Mem1086 = PHI((Mem824, l0800_92A2), (Mem831, l0800_92A8))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_907E:
	wLoc0C_1375 = ax_86 - 0x0030
	di_837 = wLoc0C_1314
	branch wLoc0C_1314 < 0x0000 l0800_9051
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9088:
	dx_1155 = SLICE(wLoc0C_1314 *u 0x000A, word16, 16) (alias)
	wLoc0C_1376 = ax_86 - 0x0030 + SLICE(wLoc0C_1314 *u 0x000A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9078:
	bLoc03_1377 = bLoc03_1260 | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9071:
	al_877 = SLICE(ax_86, byte, 0) (alias)
	di_853 = di_91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1979, out di_857)
	edxOut = edx_913
	diOut = di_857
	return (byte) cx_904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9067:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9067_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1975, out di_868)
	edxOut = edx_1787
	diOut = di_868
	return (byte) cx_904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FD8:
	bLoc03_1407 = PHI((bLoc03_1408, l0800_8FD4), (bLoc03_1260, l0800_9071))
	wLoc0C_1405 = PHI((wLoc0C_1406, l0800_8FD4), (wLoc0C_1314, l0800_9071))
	wArg0A_1401 = PHI((wArg0A_1402, l0800_8FD4), (wArg0A_1259, l0800_9071))
	edx_909 = PHI((edx_910, l0800_8FD4), (edx_913, l0800_9071))
	bx_906 = PHI((bx_907, l0800_8FD4), (bx_114, l0800_9071))
	si_899 = PHI((si_60, l0800_8FD4), (si_85, l0800_9071))
	di_880 = PHI((di_881, l0800_8FD4), (di_853, l0800_9071))
	al_876 = PHI((al_61, l0800_8FD4), (al_877, l0800_9071))
	v17_887 = wLoc08_1379 + 0x0001
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:di_880,bx:bx_906,cx:cx_904,edx:edx_909,sp:fp - 4,Stack +0000:bp,Stack +0002:wArg06,Stack +0003:SLICE(wArg06, byte, 8),Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1401,Stack +000E:psegArg0C,Stack +0010:wArg0A_1401,Stack +0012:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:di,Stack +FFFFFFD8:si,Stack +FFFFFFF2:wLoc14_1905,Stack +FFFFFFF4:wLoc12_1883,Stack +FFFFFFF6:wLoc0C_1405,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v17_887,Stack +FFFFFFFC:wLoc06_1675,Stack +FFFFFFFE:v17_887,Stack +FFFFFFFF:bLoc03_1407,Top:Top_916
		defs: ax:ax_901,bx:bx_908,edx:edx_914,sp:sp_898,Top:Top_918
	ax_878 = (int16) al_876
	wLoc08_1380 = v17_887
	bLoc04_1860 = SLICE(wArg06, byte, 0) (alias)
	cx_922 = Mem897[ss:sp_898 + 2:word16]
	sp_923 = sp_898 + 4
	al_928 = SLICE(ax_901, byte, 0) (alias)
	branch ax_901 < 0x0000 l0800_9016
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FEC:
	ax_929 = (int16) al_928
	di_930 = ax_878
	branch ax_878 < 0x0000 l0800_902B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FF1:
	branch Mem897[ds:ax_878 + 0x257C:byte] != 0x01 l0800_902B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_902B:
	branch ax_929 == ax_878 l0800_8FCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_902F:
	Mem946[ss:sp_898 + 2:word16] = wArg08
	Mem949[ss:sp_898:word16] = wArg06
	Mem951[ss:sp_898 - 2:word16] = ax_929
	wLoc04_1861 = SEQ(bLoc03_1407, bLoc04_1860) (alias)
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_929,bx:bx_908,cx:cx_922,edx:edx_914,sp:sp_898 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1401,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFEE:wLoc14_1905,Stack +FFFFFFF0:wLoc12_1883,Stack +FFFFFFF2:wLoc10_1945,Stack +FFFFFFF4:wLoc0E_1923,Stack +FFFFFFF6:wLoc0C_1405,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v17_887,Stack +FFFFFFFC:wLoc06_1675,Stack +FFFFFFFE:wLoc04_1861,Stack +FFFFFFFF:bLoc03_1407,Top:Top_918
		defs: cx:cx_958,edx:edx_962
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_903F_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1977, out di_974)
	edxOut = edx_962
	diOut = di_974
	return (byte) cx_958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FF8:
	wLoc08_1444 = PHI((wLoc08_1380, l0800_8FF1), (wLoc08_1460, l0800_9004))
	Top_1032 = PHI((Top_918, l0800_8FF1), (Top_1054, l0800_9004))
	edx_1029 = PHI((edx_914, l0800_8FF1), (edx_1053, l0800_9004))
	cx_1025 = PHI((cx_922, l0800_8FF1), (cx_1058, l0800_9004))
	sp_1005 = PHI((sp_923, l0800_8FF1), (sp_1059, l0800_9004))
	Mem995 = PHI((Mem897, l0800_8FF1), (Mem1048, l0800_9004))
	bx_984 = PHI((bx_908, l0800_8FF1), (bx_1052, l0800_9004))
	ax_982 = PHI((ax_929, l0800_8FF1), (ax_1060, l0800_9004))
	branch SLICE(ax_982, byte, 0) < 0x00 l0800_9019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FFD:
	branch Mem995[ds:ax_982 + 0x257C:byte] != 0x01 l0800_9019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9019:
	sp_1006 = sp_1005 - 2
	Mem1007[ss:sp_1006:word16] = wArg08
	Mem1010[ss:sp_1006 - 2:word16] = wArg06
	Mem1013[ss:sp_1006 - 4:word16] = ax_982
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:bx_984,bx:ax_982,cx:cx_1025,edx:edx_1029,sp:sp_1006 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1401,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFEE:wLoc14_1905,Stack +FFFFFFF0:wLoc12_1883,Stack +FFFFFFF2:wLoc10_1945,Stack +FFFFFFF4:wLoc0E_1923,Stack +FFFFFFF6:wLoc0C_1405,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:wLoc08_1444,Stack +FFFFFFFC:wLoc06_1675,Stack +FFFFFFFE:wLoc04_1861,Stack +FFFFFFFF:bLoc03_1407,Top:Top_1032
		defs: bx:bx_1027,cx:cx_1026,edx:edx_1030,Top:Top_1033
	wLoc08_1459 = wLoc08_1444 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9004:
	v26_1040 = wLoc08_1444 + 0x0001
	sp_1044 = sp_1005 - 2
	Mem1045[ss:sp_1044:word16] = wArg08
	Mem1048[ss:sp_1044 - 2:word16] = wArg06
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:bx_984,bx:ax_982,cx:cx_1025,edx:edx_1029,sp:sp_1044 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1401,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFEE:wLoc14_1905,Stack +FFFFFFF0:wLoc12_1883,Stack +FFFFFFF2:wLoc10_1945,Stack +FFFFFFF4:wLoc0E_1923,Stack +FFFFFFF6:wLoc0C_1405,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v26_1040,Stack +FFFFFFFC:wLoc06_1675,Stack +FFFFFFFE:wLoc04_1861,Stack +FFFFFFFF:bLoc03_1407,Top:Top_1032
		defs: ax:ax_1050,bx:bx_1052,edx:edx_1053,sp:sp_1049,Top:Top_1054
	wLoc08_1460 = v26_1040
	cx_1058 = Mem1048[ss:sp_1049 + 2:word16]
	sp_1059 = sp_1049 + 4
	ax_1060 = ax_1050
	branch ax_1050 > 0x0000 l0800_8FF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9016:
	edx_1786 = PHI((edx_914, l0800_8FD8), (edx_1053, l0800_9004))
	cx_1749 = PHI((cx_922, l0800_8FD8), (cx_1058, l0800_9004))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9016_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1974, out di_1068)
	edxOut = edx_1786
	diOut = di_1068
	return (byte) cx_1749
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F97_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8FAB(word32 ss_bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di es
// Trashed: SCZO di es Top
// Preserved: sp
fn0800_8FAB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FAB:
	ptr32 es_di_7 = Mem0[ss_bp + 0x0010:segptr32]
	word16 di_12 = SLICE(es_di_7, word16, 0)
	branch (Mem0[ss_bp - 0x0001:byte] & 0x20) == 0x00 l0800_8FBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FBC:
	word16 di_13 = Mem0[es_di_7:word16]
	Mem20[ss_bp + 0x0010:word16] = Mem16[ss_bp + 0x0010:word16] + 0x0002
	esOut = ds
	return di_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FB4:
	ptr32 es_di_22 = Mem0[ds:di_12:segptr32]
	Mem24[ss_bp + 0x0010:word16] = Mem0[ss_bp + 0x0010:word16] + 0x0004
	esOut = SLICE(es_di_22, selector, 16)
	return SLICE(es_di_22, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8FAB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_912A(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_912A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_912A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_912A_thunk_fn0800_93C5:
	word16 bx_12
	word16 cx_13
	word16 bp_15
	word16 di_16
	word16 ax_11 = fn0800_93C5(ss_bp, ax, cx, bx, ds, out cx_13, out bx_12, out bp_15, out di_16)
	cxOut = cx_13
	bxOut = bx_12
	bpOut = bp_15
	diOut = di_16
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_912A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9145(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_9145_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9145:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9145_thunk_fn0800_93EF:
	fn0800_93EF(ss_bp, ax)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9145_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9169(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_9169_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9169:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9169_thunk_fn0800_93EF:
	fn0800_93EF(ss_bp, ax)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9169_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_920E(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_920E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920E_thunk_fn0800_93C5:
	word16 bx_12
	word16 cx_13
	word16 bp_15
	word16 di_16
	word16 ax_11 = fn0800_93C5(ss_bp, ax, cx, bx, ds, out cx_13, out bx_12, out bp_15, out di_16)
	cxOut = cx_13
	bxOut = bx_12
	bpOut = bp_15
	diOut = di_16
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_920E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93A6(word32 ss_bp, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: ax bp di
// Trashed: SCZO ax bp di es si Top
// Preserved: sp
fn0800_93A6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A6:
	call SEQ(0x0800, Mem15[ss_bp + 0x0006:word16]) (retsize: 2;)
		uses: ax:0xFFFF,sp:fp - 6,Stack +0002:0xFFFF,Stack +0004:Mem9[ss_bp + 0x0008:word16],Stack +0006:Mem0[ss_bp + 0x000A:word16],Top:0
	Mem27[ss_bp - 0x0004:word16] = Mem15[ss_bp - 0x0004:word16] - (Mem15[ss_bp - 0x0004:word16] <u 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93BA_thunk_fn0800_93BE:
	word16 bp_31
	word16 di_32
	word16 ax_30 = fn0800_93BE(ss_bp, out bp_31, out di_32)
	bpOut = bp_31
	diOut = di_32
	return ax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93A6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93BE(word32 ss_bp, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: ax bp di
// Trashed: ax bp di es si sp Top
// Preserved:
fn0800_93BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93BE:
	word16 ax_9 = Mem0[ss_bp - 0x0004:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9453:
	bpOut = Mem0[ss_bp:word16]
	diOut = wArg02
	return ax_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93C5(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_93C5_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 sp_11 = fp
	int8 Top_18 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93C5:
	Mem8[ss_bp - 0x0006:word16] = Mem6[ss_bp - 0x0006:word16] + 0x0001
	word16 sp_12 = sp_11 - 2
	Mem13[ss:sp_12:word16] = Mem8[ss_bp + 0x000A:word16]
	Mem16[ss:sp_12 - 2:word16] = Mem13[ss_bp + 0x0008:word16]
	word16 ax_23
	word16 bx_25
	call SEQ(0x0800, Mem16[ss_bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_22,bx:bx_24,cx:cx_20,sp:sp_12 - 2,Top:Top_18
		defs: ax:ax_23,bx:bx_25,Top:Top_19
	cx = wLoc04
	sp_11 = fp - 2
	byte al_49 = SLICE(ax_23, byte, 0)
	branch ax_23 <= 0x0000 l0800_93EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EA:
	branch ax_23 == 0x0000 l0800_93E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93ED_thunk_fn0800_93A6:
	word16 bp_40
	word16 di_41
	word16 ax_39 = fn0800_93A6(ss_bp, out bp_40, out di_41)
	cxOut = wLoc02
	bxOut = bx_25
	bpOut = bp_40
	diOut = di_41
	return ax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93D7:
	branch al_49 < 0x00 l0800_93E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93DB:
	ax = ax_23
	bx = bx_25
	branch Mem16[ds:ax_23 + 0x257C:byte] == 0x01 l0800_93C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93E4:
	word16 cx_75
	word16 ax_77
	word16 bx_79
	call wLoc02 + 0x0003 (retsize: 2;)
		uses: ax:ax_23,bx:bx_25,cx:wLoc02 + 0x0003,sp:fp,Stack +0000:wLoc02,Stack +FFFFFFFC:wLoc06,Stack +FFFFFFFE:wLoc04,Top:Top_19
		defs: ax:ax_77,bx:bx_79,cx:cx_75
	cxOut = cx_75
	bxOut = bx_79
	bpOut = bp
	diOut = di
	return ax_77
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93C5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_93EF(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_93EF_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 sp_16 = fp
	int8 Top_106 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EF:
	word16 dx_140 = 0x0000
	word16 cx_143 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93F4:
	word16 v8_10 = Mem9[ss_bp - 0x000A:word16] - 0x0001
	Mem11[ss_bp - 0x000A:word16] = v8_10
	byte cl_51 = SLICE(cx_143, byte, 0)
	branch v8_10 < 0x0000 l0800_9442
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9442:
	ax = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93F9:
	word16 sp_17 = sp_16 - 2
	Mem19[ss:sp_17:word16] = dx_140
	Mem22[ss:sp_17 - 2:word16] = cx_143
	Mem24[ss_bp - 0x0006:word16] = Mem22[ss_bp - 0x0006:word16] + 0x0001
	Mem28[ss:sp_17 - 4:word16] = Mem24[ss_bp + 0x000A:word16]
	Mem31[ss:sp_17 - 6:word16] = Mem28[ss_bp + 0x0008:word16]
	word16 sp_32
	word16 ax_36
	call SEQ(0x0800, Mem31[ss_bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_35,cx:cx_21,dx:dx_18,sp:sp_17 - 6,Top:Top_37
		defs: ax:ax_36,sp:sp_32,Top:Top_38
	cl_51 = Mem31[ss:sp_32 + 0x0004:byte] (alias)
	dx_140 = Mem31[ss:sp_32 + 6:word16]
	sp_16 = sp_32 + 8
	ax = ax_36
	byte al_55 = SLICE(ax_36, byte, 0)
	branch ax_36 <= 0x0000 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_940F:
	cl_51 = cl_51 - 0x01
	ax = ax_36 (alias)
	branch cl_51 < 0x01 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9413:
	byte ch_116 = al_55 - 0x30
	ax = ax_36 (alias)
	branch al_55 <u 0x30 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_941A:
	branch al_55 <u 0x3A l0800_9436
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_941F:
	byte ch_115 = al_55 - 0x41
	branch al_55 <u 0x41 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9424:
	branch al_55 <u 0x47 l0800_9433
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9429:
	ch_115 = al_55 - 0x61
	branch al_55 <u 0x61 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_942E:
	branch al_55 >=u 0x67 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9444:
	branch cl_51 == 0x04 l0800_944F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_944F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9450_thunk_fn0800_93A6:
	word16 di_184
	word16 bp_183
	fn0800_93A6(ss_bp, out bp_183, out di_184)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9449:
	call wLoc02 + 0x0003 (retsize: 2;)
		uses: ax:ax_101,cx:wLoc02 + 0x0003,dx:dx_98,sp:fp,Stack +0000:wLoc02,Top:Top_106
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9433:
	ch_116 = ch_115 + 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9436:
	dx_140 = SEQ(SLICE(dx_140 << 0x0004, byte, 8), SLICE(dx_140 << 0x0004, byte, 0) + ch_116) (alias)
	cx_143 = SEQ(ch_116, cl_51 - 0x01) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn0800_9485(byte cl, byte bl, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..7] cl:[0..7]
// LiveOut: C bx
// Trashed: SCZO bx Top
// Preserved: sp
fn0800_9485_entry:
	byte bl_8 = SLICE(bx, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9485:
	word16 bx_38
	bool C_40
	byte bl_16 = bl_8 - 0x30
	branch bl_8 <u 0x30 l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_948B:
	branch bl_8 <=u 0x39 l0800_94A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9490:
	branch bl_8 >u 0x5A l0800_949A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_949A:
	bl_16 = bl_8 - 0x57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9495:
	bl_16 = bl_8 - 0x37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_949D:
	branch bl_16 <=u 0x09 l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94A2:
	branch bl_16 >=u cl l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94AD:
	bx_38 = bx
	C_40 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94A6:
	C_40 = false
	bx_38 = (uint16) (uint8) bl_16 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94AF:
	bxOut = bx_38
	return C_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9485_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_94B0(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, segptr32 ptrArg0E, segptr32 ptrArg12, ptr16 & cxOut, ptr16 & edxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: ax bx cx di edx Top
// Trashed: SCZO ax bx cx di dx edx es si Top
// Preserved: bp ds sp ss
fn0800_94B0_entry:
	int8 Top_132 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94B0:
	word16 sp_137 = fp - 0x000C
	byte bLoc03_617 = 0x00
	word16 wLoc06_618 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94C6:
	word16 wLoc08_659
	word16 ax_561
	word16 v8_23 = wLoc06_618 + 0x0001
	word16 sp_28 = sp_137 - 2
	Mem29[ss:sp_28:word16] = wArg08
	Mem32[ss:sp_28 - 2:word16] = wArg06
	word16 sp_33
	word16 ax_39
	word16 bx_122
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_38,bx:bx_40,cx:cx_36,dx:dx_44,sp:sp_28 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v8_23,Stack +FFFFFFFF:0x00,Top:Top_46
		defs: ax:ax_39,bx:bx_41,dx:dx_45,sp:sp_33,Top:Top_47
	wLoc06_618 = v8_23
	cx = Mem32[ss:sp_33 + 2:word16]
	sp_137 = sp_33 + 4
	word16 ax_116 = ax_39
	byte al_57 = SLICE(ax_39, byte, 0)
	branch ax_39 < 0x0000 l0800_9549
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94D8:
	word16 ax_120 = (int16) al_57
	ax = bx_122
	bx = ax_120
	branch (SLICE(ax_120, byte, 0) & 0x80) != 0x00 l0800_94E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94DF:
	branch (Mem32[ds:ax_120 + 0x2251:byte] & 0x01) != 0x00 l0800_94C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94E7:
	ax_116 = ax_120
	byte al_82 = SLICE(ax_120, byte, 0)
	wArg0C = wArg0C - 0x0001
	branch wArg0C < 0x0001 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94ED:
	branch al_82 == 0x2B l0800_94F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F1:
	branch al_82 != 0x2D l0800_950F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F5:
	bLoc03_617 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F8:
	ax_116 = ax_120
	wArg0C = wArg0C - 0x0002
	branch wArg0C < 0x0002 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94FD:
	Mem104[ss:sp_33 + 2:word16] = wArg08
	Mem107[ss:sp_33:word16] = wArg06
	word16 sp_108
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_58,bx:bx_41,cx:cx_51,dx:dx_45,sp:sp_33,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C - 0x0002,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v8_23 + 0x0001,Stack +FFFFFFFF:bLoc03_656,Top:Top_47
		defs: ax:ax_120,bx:bx_122,dx:dx_129,sp:sp_108,Top:Top_132
	wLoc06_618 = v8_23 + 0x0001
	cx = Mem107[ss:sp_108 + 2:word16]
	sp_137 = sp_108 + 4
	ax_116 = ax_120
	branch ax_120 < 0x0000 l0800_9549
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9549:
	wLoc08_659 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_950F:
	word16 ax_211
	byte al_152 = SLICE(ax_120, byte, 0)
	word16 si_145 = 0x0000
	word16 di_147 = 0x0000
	cx = wArg0A
	byte cl_201 = SLICE(wArg0A, byte, 0)
	branch wArg0A == 0x0000 l0800_956E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_956E:
	wArg0A = 0x000A
	branch al_152 != 0x30 l0800_959E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9577:
	word16 v70_157 = wArg0C - 0x0001
	wArg0C = v70_157
	branch v70_157 < 0x0000 l0800_956B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_957C:
	word16 v71_161 = wLoc06_618 + 0x0001
	word16 sp_166 = sp_137 - 2
	Mem167[ss:sp_166:word16] = wArg08
	Mem170[ss:sp_166 - 2:word16] = wArg06
	word16 sp_171
	word16 ax_176
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_895,bx:bx_177,cx:wArg0A,dx:dx_181,sp:sp_166 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:0x000A,Stack +000E:v70_157,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v71_161,Stack +FFFFFFFF:bLoc03_677,Top:Top_183
		defs: ax:ax_176,bx:bx_178,dx:dx_182,sp:sp_171,Top:Top_184
	wLoc06_618 = v71_161
	byte al_191 = SLICE(ax_176, byte, 0)
	cx = Mem170[ss:sp_171 + 2:word16]
	sp_137 = sp_171 + 4
	wArg0A = 0x0008
	branch al_191 == 0x78 l0800_9597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9593:
	ax_211 = ax_176 (alias)
	branch al_191 != 0x58 l0800_95C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9597:
	ax_211 = ax_176
	wArg0A = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9518:
	ax_116 = ax_120 (alias)
	branch wArg0A >u 0x0024 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_951D:
	ax_116 = ax_120 (alias)
	cx = wArg0A (alias)
	branch cl_201 <u 0x02 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9522:
	ax_211 = ax_120 (alias)
	branch al_152 != 0x30 l0800_959E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_959E:
	cx = wArg0A
	ax_116 = bx_217
	word16 bx_217
	branch fn0800_9485(SLICE(wArg0A, byte, 0), ax_120, out bx_217) l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9550:
	wLoc08_659 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9555:
	word16 sp_236 = sp_137 - 2
	Mem237[ss:sp_236:word16] = wArg08
	Mem240[ss:sp_236 - 2:word16] = wArg06
	Mem247[ss:sp_236 - 4:word16] = ax_116
	word16 sp_248
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_242,bx:bx_264,cx:cx_257,dx:dx_276,sp:sp_236 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_733,Stack +000E:wArg0C_729,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:wLoc08_724,Stack +FFFFFFFC:wLoc06_720,Stack +FFFFFFFF:bLoc03_716,Top:Top_281
		defs: cx:cx_262,sp:sp_248,Top:Top_285
	sp_137 = sp_248 + 0x0006
	wLoc06_618 = wLoc06_618 - 0x0001
	ax_561 = 0x0000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95A8:
	ax_211 = 0x0000
	si_145 = bx_217
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9526:
	cx = wArg0A (alias)
	branch cl_201 != 0x10 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_952B:
	word16 v31_298 = wArg0C - 0x0001
	wArg0C = v31_298
	branch v31_298 < 0x0000 l0800_956B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_956B:
	cx = wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9530:
	word16 v32_302 = wLoc06_618 + 0x0001
	word16 sp_306 = sp_137 - 2
	Mem307[ss:sp_306:word16] = wArg08
	Mem310[ss:sp_306 - 2:word16] = wArg06
	word16 sp_311
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_895,bx:bx_177,cx:wArg0A,dx:dx_181,sp:sp_306 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:v31_298,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v32_302,Stack +FFFFFFFF:bLoc03_677,Top:Top_183
		defs: ax:ax_314,bx:bx_315,dx:dx_316,sp:sp_311,Top:Top_317
	wLoc06_618 = v32_302
	byte al_323 = SLICE(ax_211, byte, 0)
	cx = Mem310[ss:sp_311 + 2:word16]
	sp_137 = sp_311 + 4
	branch al_323 == 0x78 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9542:
	branch al_323 == 0x58 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_959C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9546:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95C8:
	cx = wArg0A
	word16 ax_344 = bx_338
	word16 bx_338
	branch fn0800_9485(SLICE(wArg0A, byte, 0), ax_211, out bx_338) l0800_95AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95AB:
	int32 dx_ax_350 = wArg0A *u si_145
	ui32 di_si_610 = SEQ(di_147, bx_338) + dx_ax_350
	ax_211 = SLICE(dx_ax_350, word16, 0) (alias)
	dx = SLICE(dx_ax_350, word16, 16) (alias)
	si_145 = (word16) di_si_610
	di_147 = SLICE(di_si_610, word16, 16)
	branch di_147 != 0x0000 l0800_95E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95E5:
	word16 v54_363 = wArg0C - 0x0001
	wArg0C = v54_363
	branch v54_363 < 0x0000 l0800_9612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95EA:
	word16 sp_372 = sp_137 - 2
	Mem373[ss:sp_372:word16] = wArg08
	Mem376[ss:sp_372 - 2:word16] = wArg06
	word16 v55_367 = wLoc06_618 + 0x0001
	word16 sp_377
	word16 ax_383
	word16 bx_385
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_382,bx:bx_384,cx:cx_380,dx:dx_388,sp:sp_372 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_739,Stack +000E:v54_363,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v55_367,Stack +FFFFFFFF:bLoc03_677,Top:Top_390
		defs: ax:ax_383,bx:bx_385,dx:dx_389,sp:sp_377,Top:Top_391
	wLoc06_618 = v55_367
	sp_137 = sp_377 + 4
	ax_344 = bx_402
	bx_122 = bx_385
	word16 bx_402
	branch fn0800_9485(SLICE(wArg0A, byte, 0), ax_383, out bx_402) l0800_95D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95D4:
	int32 dx_ax_413 = wArg0A *u si_145
	int32 dx_ax_422 = wArg0A *u di_147
	ui32 ax_si_613 = SEQ(SLICE(dx_ax_422, word16, 0), bx_402) + dx_ax_413
	word16 ax_427 = SLICE(ax_si_613, word16, 16)
	byte dl_435 = SLICE(dx_ax_422, byte, 16) + SLICE(dx_ax_422, byte, 24) + (ax_427 <u 0x0000)
	cx = SLICE(dx_ax_413, word16, 16)
	si_145 = (word16) ax_si_613
	ax_211 = SLICE(dx_ax_413, word16, 0)
	di_147 = ax_427
	dx = SEQ(SLICE(dx_ax_422, byte, 24), dl_435) (alias)
	branch dl_435 != 0x00 l0800_9636
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9636:
	byte al_441 = bLoc03_617 + 0xFF
	wLoc08_659 = 0x0002
	ax_561 = SEQ(SLICE(cond(al_441), bool, 1) + 0xFF, al_441) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95B5:
	word16 v44_457 = wArg0C - 0x0001
	wArg0C = v44_457
	branch v44_457 < 0x0000 l0800_9612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95BA:
	word16 v45_461 = wLoc06_618 + 0x0001
	word16 sp_469 = sp_137 - 2
	Mem470[ss:sp_469:word16] = wArg08
	Mem473[ss:sp_469 - 2:word16] = wArg06
	word16 sp_474
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_485,bx:bx_493,cx:cx_481,dx:dx_505,sp:sp_469 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_803,Stack +000E:v44_457,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v45_461,Stack +FFFFFFFF:bLoc03_677,Top:Top_509
		defs: ax:ax_492,bx:bx_496,dx:dx_508,sp:sp_474,Top:Top_513
	wLoc06_618 = v45_461
	sp_137 = sp_474 + 4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95D2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9602:
	word16 sp_524 = sp_137 - 2
	Mem525[ss:sp_524:word16] = wArg08
	Mem528[ss:sp_524 - 2:word16] = wArg06
	Mem531[ss:sp_524 - 4:word16] = ax_344
	word16 sp_532
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_530,bx:bx_538,cx:wArg0A_739,dx:dx_542,sp:sp_524 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_739,Stack +000E:wArg0C_820,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:wLoc06_817,Stack +FFFFFFFF:bLoc03_677,Top:Top_545
		defs: cx:cx_536,sp:sp_532,Top:Top_546
	sp_137 = sp_532 + 0x0006
	wLoc06_618 = wLoc06_618 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9612:
	wLoc08_659 = 0x0001
	ax_561 = si_145
	branch bLoc03_617 == 0x00 l0800_9622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_961B:
	ax_561 = -si_145
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9622:
	Mem584[ptrArg0E:word16] = Mem578[ptrArg0E:word16] + wLoc06_618
	Mem590[ptrArg12:word16] = wLoc08_659
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_964C:
	word16 di_594 = Mem590[ss:sp_137:word16]
	cxOut = cx
	edxOut = <invalid>
	bxOut = wLoc08_659
	diOut = di_594
	TopOut = Top_132
	return ax_561
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_94B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9652()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ah cx dx es Top
// Preserved: bp si sp
fn0800_9652_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9652:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9652_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9667()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ah cx dx es Top
// Preserved: bp si sp
fn0800_9667_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9667:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9667_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9764(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: cx
// Trashed: SCZDO bx cx es Top
// Preserved: bp sp
fn0800_9764_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9764:
	fn0800_8B95(SEQ(ss, fp - 0x0006))
	fn0800_8BA8(SEQ(ss, fp - 0x000A))
	word32 edx_53 = <invalid>
	word16 cx_52
	word16 dx_120
	word16 ax_50 = fn0800_C04F(ds, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x000A), out cx_52, out dx_120)
	word16 dx_61 = SLICE(edx_53, word16, 0)
	branch (wArg02 | wArg04) == 0x0000 l0800_97AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_979C:
	Mem74[ptrArg02 + 0x0002:word16] = dx_61
	Mem75[ptrArg02:word16] = ax_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97AC:
	return cx_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9764_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_97B6(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_97B6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97B6:
	word16 dx_26
	word16 cx_48
	word16 bx_49
	word16 ax_23 = fn0800_8E29(ds, wArg02, 0x00000000, 0x01, out cx_48, out dx_26, out bx_49)
	dxOut = dx_26
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97B6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_97CC(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_97CC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97CC:
	word16 ax_26
	byte dl_12 = SLICE(wArg02, byte, 0)
	branch wArg02 != 0xFFFF l0800_97DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97DC:
	branch (Mem7[ds:(uint16) (uint8) dl_12 + 0x2251:byte] & 0x08) == 0x00 l0800_97F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F2:
	ax_26 = (uint16) (uint8) dl_12 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97E9:
	ax_26 = (uint16) (uint8) dl_12 + 0xFFE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97D7:
	ax_26 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F6:
	dxOut = wArg02
	return (byte) ax_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97CC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_97F8(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..31]
// LiveOut: dx
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_97F8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F8:
	word16 dx_15 = SLICE(ptrArg02, word16, 0)
	word16 ax_21 = SEQ(0x41, al)
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), dx_15) l0800_980A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_980A:
	fn0800_8D2B(ds, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9806:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_980E:
	return dx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97F8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9810(word32 es_di, byte dh, byte dl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dh:[0..7] dl:[0..7] Sequence es:di:[0..31]
// LiveOut: di sp
// Trashed: SCZO ax di sp Top
// Preserved:
fn0800_9810_entry:
	selector es = SLICE(es_di, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9810:
	word16 di_10 = fn0800_9817(es_di, dh)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9815_thunk_fn0800_9817:
	return fn0800_9817(SEQ(es, di_10), dl)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9810_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9817(word32 es_di, byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] Sequence es:di:[0..31]
// LiveOut: di
// Trashed: SCZO ax di Top
// Preserved: sp
fn0800_9817_entry:
	selector es = SLICE(es_di, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9817:
	word16 ax_5 = __aam(al)
	byte al_6 = SLICE(ax_5, byte, 0)
	word16 di_15 = fn0800_9820(es_di, SLICE(ax_5, byte, 8))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_981E_thunk_fn0800_9820:
	return fn0800_9820(SEQ(es, di_15), al_6)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9817_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9820(word32 es_di, byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] Sequence es:di:[0..31]
// LiveOut: di
// Trashed: SCZO al di Top
// Preserved: sp
fn0800_9820_entry:
	word16 di = SLICE(es_di, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9820:
	byte al_7 = al + 0xD0 + __daa(al + 0x90, &(al + 0x90))
	__daa(al_7, &al_7)
	Mem12[es_di:byte] = al_7
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9820_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9828(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax di si
// Trashed: SCZDO ax di si Top
// Preserved: bp bx cx dx es sp
fn0800_9828_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9828:
	byte bLoc16_1464 = 0x50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988C:
	word16 sp_1023 = fp - 0x009E
	word16 wLoc06_1254 = fp - 0x0098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9895:
	word16 di_1007 = wLoc06_1254
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9898:
	selector psegArg06_1735 = SLICE(ptrArg04, selector, 16)
	word16 si_1134 = SLICE(ptrArg04, word16, 0)
	selector es_1006 = SLICE(ptrArg04, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_989B:
	byte al_37 = Mem36[ds:si_1134:byte]
	si_1134 = si_1134 + 0x0001
	byte al_1077 = al_37
	branch al_37 == 0x00 l0800_98B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98B3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98A1:
	branch al_37 == 0x25 l0800_98B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98B6:
	al_1077 = Mem47[ds:si_1134:byte]
	si_1134 = si_1134 + 0x0001
	branch al_1077 == 0x25 l0800_98A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98BF:
	wLoc06_1254 = di_1007
	byte ch_1177 = 0x00
	word16 wLoc10_1259 = 0x0000
	word16 wLoc04_1260 = 0x0020
	byte bLoc0D_1261 = 0x00
	word16 wLoc0A_1262 = 0xFFFF
	word16 wLoc0C_1263 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98DD:
	word16 ax_65 = (uint16) (uint8) al_1077
	byte bl_68 = SLICE(ax_65, byte, 0)
	byte bh_73 = SLICE(ax_65, byte, 8)
	byte dl_134 = SLICE(ax_65, byte, 0)
	bx = SEQ(bh_73, bl_68 - 0x20) (alias)
	cx = SEQ(ch_1177, 0x00) (alias)
	branch bl_68 >=u 0x80 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98EB:
	bx = SEQ(bh_73, Mem75[ds:bx + 0x2605:byte]) (alias)
	cx = SEQ(ch_1177, 0x00) (alias)
	branch bx <=u 0x0017 l0800_98F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98F7:
	word16 bx_2003
	ptr32 es_di_1996
	word16 bx_1983
	ptr32 es_di_1986
	ptr32 es_di_1989
	word16 bx_1993
	byte bLoc08_1303
	word16 dx_232
	word16 cx_175
	word16 di_485
	selector es_488
	word16 dx_349
	word16 ax_355
	bx = bx << 0x0001
	byte bl_449 = SLICE(bx << 0x0001, byte, 0)
	dx = ax_65 (alias)
	cx = SEQ(ch_1177, 0x00) (alias)
	switch (bx << 0x0001) { l0800_9917 l0800_9901 l0800_994C l0800_990C l0800_997A l0800_9987 l0800_99C5 l0800_99CC l0800_99D1 l0800_9935 l0800_99FA l0800_99D8 l0800_99DC l0800_99E0 l0800_9A55 l0800_9B02 l0800_9AA5 l0800_9AC5 l0800_9C46 l0800_9C82 l0800_9C82 l0800_9C82 l0800_9927 l0800_992D }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_992D:
	wLoc04_1260 = wLoc04_1260 | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9927:
	wLoc04_1260 = wLoc04_1260 & 0xFFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C46:
	word16 di_103
	selector es_110
	ptrArg04 = SEQ(psegArg06_1735, si_1134) (alias)
	branch (wLoc04_1260 & 0x0020) != 0x0000 l0800_9C5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C5E:
	ptr32 es_di_99 = Mem94[ds:wArg02:segptr32]
	es_110 = SLICE(es_di_99, selector, 16) (alias)
	di_103 = SLICE(es_di_99, word16, 0) (alias)
	wArg02 = wArg02 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C53:
	di_103 = Mem94[ss:wArg02:word16]
	word16 sp_108 = sp_1023 - 2
	Mem109[ss:sp_108:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_110 = Mem109[ss:sp_108:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C65:
	Mem125[es_110:di_103:word16] = (uint16) (uint8) (0x50 - bLoc16_1464)
	branch (wLoc04_1260 & 0x0010) == 0x0000 l0800_9C7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C78:
	Mem132[es_110:di_103 + 0x0002:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C7F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AC5:
	ptr32 es_di_140
	bool Z_159
	dx_232 = ax_65 (alias)
	ptrArg04 = SEQ(psegArg06_1735, si_1134) (alias)
	branch (wLoc04_1260 & 0x0020) != 0x0000 l0800_9AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AE2:
	es_di_140 = Mem135[ds:wArg02:segptr32]
	wArg02 = wArg02 + 0x0004
	Z_159 = SLICE(cond(SLICE(es_di_140, selector, 16) | SLICE(es_di_140, word16, 0)), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AD5:
	word16 di_149 = Mem135[ss:wArg02:word16]
	word16 sp_152 = sp_1023 - 2
	Mem153[ss:sp_152:word16] = ds
	wArg02 = wArg02 + 0x0002
	Z_159 = SLICE(cond(di_149), bool, 2) (alias)
	es_di_140 = SEQ(Mem153[ss:sp_152:selector], di_149) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AED:
	ptr32 es_di_2000 = es_di_140
	branch Z_159 l0800_9AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AEF:
	word16 sp_163 = sp_1023 - 2
	Mem166[ss:sp_163:word16] = ds
	es_di_2000 = SEQ(Mem166[ss:sp_163:selector], 0x25FE) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AF4:
	cx_175 = fn0800_9842(SLICE(es_di_2000, word16, 0), SLICE(es_di_2000, selector, 16))
	branch cx_175 <=u wLoc0C_1263 l0800_9AFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AFC:
	cx_175 = wLoc0C_1263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AFF:
	es_di_1989 = es_di_2000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA5:
	word16 sp_194 = sp_1023 - 2
	Mem195[ss:sp_194:word16] = ss
	wArg02 = wArg02 + 0x0002
	sp_1023 = sp_194 + 2
	cx_175 = 0x0001
	dx_232 = ax_65 (alias)
	ptrArg04 = SEQ(psegArg06_1735, si_1134) (alias)
	es_di_1989 = SEQ(Mem195[ss:sp_194:selector], fp - 0x0047) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B02:
	word16 cx_208 = wLoc0C_1263
	dx_232 = ax_65 (alias)
	ptrArg04 = SEQ(psegArg06_1735, si_1134) (alias)
	branch wLoc0C_1263 >= 0x0000 l0800_9B15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B12:
	cx_208 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B15:
	word16 ax_245
	word16 sp_214 = sp_1023 - 2
	Mem216[ss:sp_214:word16] = ss
	Mem219[ss:sp_214 - 2:word16] = wArg02
	Mem222[ss:sp_214 - 4:word16] = cx_208
	Mem224[ss:sp_214 - 6:word16] = ss
	Mem228[ss:sp_214 - 8:word16] = fp - 0x0047
	Mem233[ss:sp_214 - 10:word16] = ax_65
	Mem237[ss:sp_214 - 12:word16] = wLoc04_1260 & 0x0001
	branch (wLoc04_1260 & 0x0100) == 0x0000 l0800_9B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B36:
	wArg02 = wArg02 + 0x0008
	ax_245 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B2D:
	ax_245 = 0x0008
	wArg02 = wArg02 + 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B3D:
	Mem254[ss:sp_214 - 14:word16] = ax_245
	fn0800_A2CC(ds)
	Mem259[ss:sp_214 - 16:word16] = ss
	sp_1023 = sp_214 - 14
	es_di_1996 = SEQ(Mem259[ss:sp_214 - 16:selector], fp - 0x0047) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A55:
	word16 sp_269 = sp_1023 - 2
	Mem270[ss:sp_269:word16] = Mem265[ss:wArg02:word16]
	word16 di_266 = fp - 0x0048
	wArg02 = wArg02 + 0x0002
	ptrArg04 = SEQ(psegArg06_1735, si_1134) (alias)
	branch (wLoc04_1260 & 0x0020) == 0x0000 l0800_9A80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A70:
	word16 dx_277 = Mem273[ss:wArg02 + 0x0002:word16]
	Mem283[ss:sp_269 - 2:word16] = ss
	selector es_284 = Mem283[ss:sp_269 - 2:selector]
	word16 di_290 = fn0800_9810(SEQ(es_284, fp - 0x0048), SLICE(dx_277, byte, 8), SLICE(dx_277, byte, 0))
	Mem298[es_284:di_290:byte] = 0x3A
	word16 sp_291 = <invalid>
	wArg02 = wArg02 + 0x0004
	sp_269 = sp_291 + 0xFFFE
	di_266 = di_290 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A80:
	word16 sp_301 = sp_269 - 2
	Mem303[ss:sp_301:word16] = ss
	word16 dx_306 = Mem303[ss:sp_301 + 2:word16]
	selector es_304 = Mem303[ss:sp_301:selector]
	word16 di_313 = fn0800_9810(SEQ(es_304, di_266), SLICE(dx_306, byte, 8), SLICE(dx_306, byte, 0))
	Mem320[ss:di_313:byte] = 0x00
	word16 sp_314 = <invalid>
	sp_1023 = sp_314 + 0xFFFE
	wLoc04_1260 = wLoc04_1260 & 0xFFFB
	word16 di_327 = di_313 - (fp - 0x0048)
	dx_232 = wLoc0C_1263
	branch wLoc0C_1263 > di_327 l0800_9AA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA0:
	dx_232 = di_327
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA2:
	es_di_1996 = SEQ(es_304, fp - 0x0048) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99E0:
	bx_2003 = SEQ(0x10, dl_134 + 0xE9) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99DC:
	bx_1993 = SEQ(0x0A, bl_449) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99D8:
	bx_2003 = SEQ(0x08, bl_449) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99E6:
	bLoc0D_1261 = 0x00
	bx_1993 = bx_2003 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99EA:
	dx_349 = 0x0000
	bLoc08_1303 = 0x00
	ax_355 = Mem353[ss:wArg02:word16]
	bx_1983 = bx_1993 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99FA:
	int32 dx_ax_361 = (int32) Mem358[ss:wArg02:word16]
	bLoc08_1303 = 0x01
	ax_355 = SLICE(dx_ax_361, word16, 0) (alias)
	dx_349 = SLICE(dx_ax_361, word16, 16) (alias)
	bx_1983 = SEQ(0x0A, bl_449) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A0A:
	word16 di_363 = wArg02 + 0x0001
	byte bh_429 = SLICE(bx_1983, byte, 8)
	word16 di_364 = di_363 + 0x0001
	ptrArg04 = SEQ(psegArg06_1735, si_1134) (alias)
	branch (wLoc04_1260 & 0x0010) == 0x0000 l0800_9A1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A16:
	dx_349 = Mem370[ss:di_363 + 0x0001:word16]
	di_364 = di_363 + 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A1B:
	wArg02 = di_364
	branch ax_355 != 0x0000 l0800_9A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A25:
	dx = dx_349
	branch dx_349 != 0x0000 l0800_9A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A32:
	wLoc04_1260 = wLoc04_1260 | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A29:
	bx = bx_1983 (alias)
	branch wLoc0C_1263 != 0x0000 l0800_9A36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A36:
	word16 sp_412 = sp_1023 - 2
	Mem416[ss:sp_412:word16] = dx_349
	Mem420[ss:sp_412 - 2:word16] = ax_355
	Mem422[ss:sp_412 - 4:word16] = ss
	Mem426[ss:sp_412 - 6:word16] = fp - 0x0047
	word16 ax_434 = (int16) bh_429
	Mem436[ss:sp_412 - 8:word16] = ax_434
	Mem442[ss:sp_412 - 10:word16] = SEQ(SLICE(ax_434, byte, 8), bLoc08_1303)
	Mem452[ss:sp_412 - 12:word16] = bx_1983
	fn0800_8D87(Mem452[ss:sp_412 - 12:byte], Mem452[ss:sp_412 - 10:byte], Mem452[ss:sp_412 - 8:word16], Mem452[ss:sp_412 - 6:segptr32], Mem452[ss:sp_412 - 2:word16], Mem452[ss:sp_412:word16])
	Mem464[ss:sp_412:word16] = ss
	selector es_465 = Mem464[ss:sp_412:selector]
	sp_1023 = sp_412 + 2
	dx_232 = wLoc0C_1263
	branch wLoc0C_1263 >= 0x0000 l0800_9A52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A52:
	es_di_1986 = SEQ(es_465, fp - 0x0047) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A4F:
	es_di_1996 = SEQ(es_465, fp - 0x0047) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B46:
	es_488 = SLICE(es_di_1996, selector, 16) (alias)
	di_485 = SLICE(es_di_1996, word16, 0) (alias)
	branch (wLoc04_1260 & 0x0008) == 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B4D:
	dx_232 = wLoc0A_1262
	es_di_1986 = es_di_1996 (alias)
	branch wLoc0A_1262 <= 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B54:
	es_488 = SLICE(es_di_1986, selector, 16) (alias)
	di_485 = SLICE(es_di_1986, word16, 0) (alias)
	word16 cx_492 = fn0800_9842(di_485, es_488)
	branch Mem497[es_di_1986:byte] != 0x2D l0800_9B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B5D:
	cx_492 = cx_492 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B5E:
	dx_232 = dx_232 - cx_492
	branch dx_232 <= 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B62:
	wLoc10_1259 = dx_232
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B65:
	branch Mem517[es_488:di_485:byte] == 0x2D l0800_9B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B6B:
	branch bLoc0D_1261 == 0x00 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B72:
	di_485 = di_485 - 0x0001
	Mem530[es_488:di_485:byte] = bLoc0D_1261
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B76:
	branch wLoc10_1259 <= 0x0000 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B7C:
	branch wLoc0C_1263 >= 0x0000 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B83:
	wLoc10_1259 = wLoc10_1259 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B86:
	cx_175 = fn0800_9842(di_485, es_488)
	es_di_1989 = SEQ(es_488, di_485) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B89:
	word16 di_554 = SLICE(es_di_1989, word16, 0)
	selector es_666 = SLICE(es_di_1989, selector, 16)
	word16 si_1160 = di_554
	word16 bx_567 = wLoc0A_1262
	branch (wLoc04_1260 & 0x0005) != 0x0005 l0800_9BAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B9C:
	branch dl_134 != 0x6F l0800_9BB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BB1:
	branch dl_134 == 0x78 l0800_9BBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BB6:
	branch dl_134 != 0x58 l0800_9BCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BBB:
	word16 v40_588 = wLoc10_1259 - 0x0002
	wLoc04_1260 = wLoc04_1260 | 0x0040
	bx_567 = wLoc0A_1262 - 0x0002
	wLoc10_1259 = v40_588
	branch v40_588 >= 0x0000 l0800_9BCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BC7:
	wLoc10_1259 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BA4:
	branch wLoc10_1259 > 0x0000 l0800_9BAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BAA:
	wLoc10_1259 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BAF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BCC:
	cx = cx_175 + wLoc10_1259
	branch (wLoc04_1260 & 0x0002) != 0x0000 l0800_9BE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BDE:
	branch bx_567 > cx l0800_9BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BD8:
	di_1007 = fn0800_984F(SEQ(ss, fp - 2), 0x20, cx, dx_232, bx_567, di_1007, es_666)
	sp_1023 = sp_1023 + 0xFFFE
	bx_567 = bx_567 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BE2:
	branch (wLoc04_1260 & 0x0040) == 0x0000 l0800_9BF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BE9:
	di_1007 = fn0800_984F(SEQ(ss, fp - 2), dl_134, cx, dx_232, bx_567, fn0800_984F(SEQ(ss, fp - 2), 0x30, cx, dx_232, bx_567, di_1007, es_666), es_666)
	sp_1023 = sp_1023 + 0xFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BF4:
	dx = wLoc10_1259
	branch wLoc10_1259 <= 0x0000 l0800_9C22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BFB:
	word16 cx_706 = cx - wLoc10_1259
	bx_567 = bx_567 - wLoc10_1259
	byte al_716 = Mem605[es_di_1989:byte]
	branch al_716 == 0x2D l0800_9C0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C06:
	branch al_716 == 0x20 l0800_9C0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C0A:
	branch al_716 != 0x2B l0800_9C15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C0E:
	si_1160 = di_554 + 0x0001
	di_1007 = fn0800_984F(SEQ(ss, fp - 2), Mem605[ds:di_554:byte], cx_706, wLoc10_1259, bx_567, di_1007, es_666)
	sp_1023 = sp_1023 + 0xFFFE
	cx_706 = cx_706 - 0x0001
	bx_567 = bx_567 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C15:
	word16 cx_775 = wLoc10_1259
	branch wLoc10_1259 == 0x0000 l0800_9C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C19:
	di_1007 = fn0800_984F(SEQ(ss, fp - 2), 0x30, cx_775, cx_706, bx_567, di_1007, es_666)
	sp_1023 = sp_1023 + 0xFFFE
	cx_775 = cx_775 - 0x0001
	branch cx_775 != 0x0000 l0800_9C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C20:
	dx = cx_775
	cx = cx_706
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C22:
	branch cx == 0x0000 l0800_9C36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C24:
	bx_567 = bx_567 - cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C26:
	Mem811[ss:di_1007:byte] = Mem806[ds:si_1160:byte]
	byte v45_814 = bLoc16_1464 - 0x01
	si_1160 = si_1160 + 0x0001
	di_1007 = di_1007 + 0x0001
	bLoc16_1464 = v45_814
	branch v45_814 > 0x00 l0800_9C34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C31:
	di_1007 = fn0800_9858(SEQ(ss, fp - 2), cx, dx, bx_567, di_1007, es_666)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C34:
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_9C26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C36:
	bx = bx_567
	branch bx_567 <= 0x0000 l0800_9C43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C3A:
	cx = bx_567
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C3C:
	di_1007 = fn0800_984F(SEQ(ss, fp - 2), 0x20, cx, dx, bx_567, di_1007, es_666)
	sp_1023 = sp_1023 + 0xFFFE
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_9C3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C43:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A2F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9935:
	branch ch_1177 >u 0x00 l0800_9987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_993A:
	branch (wLoc04_1260 & 0x0002) != 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9941:
	wLoc04_1260 = wLoc04_1260 | 0x0008
	ch_1177 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99CC:
	wLoc04_1260 = wLoc04_1260 | 0x0100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99D1:
	wLoc04_1260 = wLoc04_1260 & 0xFFEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99C5:
	wLoc04_1260 = wLoc04_1260 | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9931:
	ch_1177 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9987:
	word16 ax_888 = (int16) (SLICE(ax_65, byte, 0) - 0x30)
	branch ch_1177 >u 0x02 l0800_99A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99A9:
	cx = SEQ(ch_1177, 0x00) (alias)
	branch ch_1177 != 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99AE:
	wLoc0C_1263 = ax_888
	branch wLoc0C_1263 == 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99B5:
	wLoc0C_1263 = ax_888 + ((wLoc0C_1263 << 0x0003) + (wLoc0C_1263 << 0x0001))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9990:
	ch_1177 = 0x02
	wLoc0A_1262 = ax_888
	branch wLoc0A_1262 < 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9999:
	wLoc0A_1262 = ax_888 + ((wLoc0A_1262 << 0x0003) + (wLoc0A_1262 << 0x0001))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_997A:
	cx = SEQ(ch_1177, 0x00) (alias)
	branch ch_1177 >=u 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_997F:
	ch_1177 = 0x04
	wLoc0C_1263 = wLoc0C_1263 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_990C:
	cx = SEQ(ch_1177, 0x00) (alias)
	branch ch_1177 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9911:
	wLoc04_1260 = wLoc04_1260 | 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_994C:
	word16 ax_941 = Mem75[ss:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_1177 >=u 0x02 l0800_996D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_996D:
	cx = SEQ(ch_1177, 0x00) (alias)
	branch ch_1177 != 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9949:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9972:
	wLoc0C_1263 = ax_941
	ch_1177 = ch_1177 + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_995B:
	word16 ax_951 = ax_941
	branch ax_941 >= 0x0000 l0800_9965
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_995F:
	ax_951 = -ax_941
	wLoc04_1260 = wLoc04_1260 | 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9965:
	wLoc0A_1262 = ax_951
	ch_1177 = 0x03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_996A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9901:
	cx = SEQ(ch_1177, 0x00) (alias)
	branch ch_1177 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9906:
	wLoc04_1260 = wLoc04_1260 | 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9917:
	cx = SEQ(ch_1177, 0x00) (alias)
	branch ch_1177 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98FE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_991C:
	branch bLoc0D_1261 == 0x2B l0800_9925
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9922:
	bLoc0D_1261 = dl_134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9925:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98DB:
	al_1077 = Mem990[ds:si_1134:byte]
	si_1134 = si_1134 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98F4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C82:
	dx = ax_65
	word16 si_1005 = si_1134
	es_1006 = psegArg06_1735
	byte al_1008 = 0x25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C8D:
	di_1007 = fn0800_984F(SEQ(ss, fp - 2), al_1008, cx, ax_65, bx, di_1007, psegArg06_1735)
	byte al_1028 = Mem1002[ds:si_1005:byte]
	sp_1023 = sp_1023 + 0xFFFE
	si_1005 = si_1005 + 0x0001
	al_1008 = al_1028
	branch al_1028 != 0x00 l0800_9C8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C96:
	branch bLoc16_1464 >= 0x50 l0800_9C9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C9C:
	fn0800_9858(SEQ(ss, fp - 2), cx, dx, bx, di_1007, es_1006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C9F:
	word16 ax_1065
	word16 sp_1061 = sp_1023 + 2
	branch 0x0000 == 0x0000 l0800_9CAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CAB:
	ax_1065 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CA6:
	ax_1065 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CAE:
	word16 di_1070 = Mem1036[ss:sp_1061:word16]
	siOut = Mem1036[ss:sp_1061 + 2:word16]
	diOut = di_1070
	return ax_1065
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9828_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98A5:
	Mem1080[ss:di_1007:byte] = al_1077
	byte v16_1083 = bLoc16_1464 - 0x01
	di_1007 = di_1007 + 0x0001
	bLoc16_1464 = v16_1083
	branch v16_1083 > 0x00 l0800_989B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98AE:
	di_1007 = fn0800_9858(SEQ(ss, fp - 2), cx, dx, bx, di_1007, es_1006)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9842(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15]
// LiveOut: cx
// Trashed: SCZO al cx Top
// Preserved: di sp
fn0800_9842_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9842:
	word16 cx_12 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9848:
	branch cx_12 == 0x0000 l0800_984A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9848_1:
	di = di_45 + 0x0001
	cx_12 = cx_12 - 0x0001
	di_45 = di
	branch Mem7[es:di_45:byte] == 0x00 l0800_9848
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_984A:
	return ~cx_12 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9842_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_984F(word32 ss_bp, byte al, word16 cx, word16 dx, word16 bx, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SZO di Top
// Preserved: C sp
fn0800_984F_entry:
	selector ss = SLICE(ss_bp, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_984F:
	Mem7[ss:di:byte] = al
	byte v8_10 = Mem7[ss_bp - 0x0014:byte] - 0x01
	Mem11[ss_bp - 0x0014:byte] = v8_10
	branch v8_10 != 0x00 l0800_988B_in_fn0800_984F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988B_in_fn0800_984F:
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9856_thunk_fn0800_9858:
	return fn0800_9858(ss_bp, cx, dx, bx, di + 0x0001, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_984F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9858(word32 ss_bp, word16 cx, word16 dx, word16 bx, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SCZO di Top
// Preserved: bx cx dx es sp
fn0800_9858_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9858:
	word16 di_20 = di - (bp - 0x0096)
	word16 ax_39
	call SEQ(0x0800, Mem34[ss_bp + 0x000E:word16]) (retsize: 2;)
		uses: ax:bp - 0x0096,bx:bx,cx:cx,dx:dx,sp:fp - 18,Stack +0002:Mem31[ss_bp + 0x000A:word16],Stack +0004:Mem28[ss_bp + 0x000C:word16],Stack +0006:di_20,Stack +0008:bp - 0x0096,Stack +000A:ss,Stack +000C:es,Stack +000E:dx,Stack +0010:cx,Stack +0012:bx,Top:0
		defs: ax:ax_39
	branch ax_39 != 0x0000 l0800_987B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9876:
	Mem46[ss_bp - 0x0016:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_987B:
	Mem49[ss_bp - 0x0014:word16] = 0x0050
	Mem52[ss_bp - 0x0012:word16] = Mem49[ss_bp - 0x0012:word16] + di_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988B:
	return bp - 0x0096
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9858_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9CE6(word32 dwArg02, word32 dwArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp si sp
fn0800_9CE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CE6:
	word16 cx_87
	fn0800_B03B(dwArg02, dwArg06, fn0800_BFC7(dwArg06, out cx_87) + 0x0001)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9CE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9D41(word16 dx, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9D41_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D41:
	selector ds_35
	word16 wLoc02_67
	branch dx == Mem0[0x0800:0x9D35:word16] l0800_9D7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D48:
	selector ds_9 = Mem0[dx:0x0002:selector]
	branch Mem0[ds_9:0x0002:word16] == 0x0000 l0800_9D5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D5C:
	branch ds_9 == Mem0[0x0800:0x9D35:word16] l0800_9D7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D7A:
	dx = Mem0[0x0800:0x9D35:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D7F:
	Mem16[0x0800:0x9D35:word16] = 0x0000
	Mem17[0x0800:0x9D37:word16] = 0x0000
	Mem18[0x0800:0x9D39:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D65:
	Mem20[0x0800:0x9D37:word16] = Mem0[ds_9:0x0008:word16]
	fn0800_9E15(ds_9)
	wLoc02_67 = ds_9
	ds_35 = Mem28[0x0800:0x9D3B:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D55:
	Mem36[0x0800:0x9D37:word16] = ds_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D94:
	ds_35 = Mem37[0x0800:0x9D3B:selector]
	wLoc02_67 = dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D9D:
	word16 bx_57
	word16 cx_58
	word16 dx_59
	word16 ax_56 = fn0800_A1D6(ds_35, 0x0000, wLoc02_67, out cx_58, out dx_59, out bx_57)
	cxOut = cx_58
	dxOut = dx_59
	bxOut = bx_57
	return ax_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9D41_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9DA4(word16 dx, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx:[0..15]
// LiveOut: ax bx
// Trashed: SCZO ax bx ds es Top
// Preserved: DP cx dx sp
fn0800_9DA4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DA4:
	word16 bx_17
	selector es_9 = Mem8[dx:0x0002:selector]
	Mem10[dx:0x0002:word16] = 0x0000
	Mem11[dx:0x0008:word16] = es_9
	word16 wLoc02_67 = dx
	branch dx == Mem11[0x0800:0x9D35:word16] l0800_9DEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DBC:
	branch Mem11[es_9:0x0002:word16] != 0x0000 l0800_9DEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DEA:
	bx_17 = fn0800_9E3E(dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DC4:
	word16 ax_25 = Mem11[dx:0x0000:word16]
	Mem31[es_9:0x0000:word16] = Mem29[es_9:0x0000:word16] + ax_25
	bx_17 = dx
	wLoc02_67 = es_9
	word16 dx_33 = dx + ax_25
	branch Mem31[dx_33:0x0002:word16] != 0x0000 l0800_9DE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DE3:
	Mem37[dx_33:0x0002:word16] = es_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DDC:
	Mem38[dx_33:0x0008:word16] = es_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DED:
	word16 ax_48 = wLoc02_67 + Mem43[wLoc02_67:0x0000:word16]
	branch Mem43[ax_48:0x0002:word16] == 0x0000 l0800_9DFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DFF:
	Mem54[wLoc02_67:0x0000:word16] = Mem43[wLoc02_67:0x0000:word16] + Mem43[ax_48:0x0000:word16]
	Mem60[ax_48 + Mem54[ax_48:0x0000:word16]:0x0002:word16] = wLoc02_67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E11_thunk_fn0800_9E15:
	bxOut = fn0800_9E15(ax_48)
	return wLoc02_67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DFE:
	bxOut = bx_17
	return ax_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9DA4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E15(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx
// Trashed: SCZO bx es Top
// Preserved: ds sp
fn0800_9E15_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E15:
	branch ds == Mem0[ds:0x0006:word16] l0800_9E36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E36:
	Mem9[0x0800:0x9D39:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E1D:
	selector es_10 = Mem0[ds:0x0006:selector]
	selector ds_11 = Mem0[ds:0x0004:selector]
	Mem12[ds_11:0x0006:word16] = es_10
	Mem13[es_10:0x0004:word16] = ds_11
	Mem14[0x0800:0x9D39:word16] = ds_11
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E15_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E3E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx
// Trashed: SCZDOP bx es Top
// Preserved: sp ss
fn0800_9E3E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E3E:
	word16 ax_5 = Mem0[0x0800:0x9D39:word16]
	branch ax_5 == 0x0000 l0800_9E67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E67:
	Mem11[0x0800:0x9D39:word16] = ds
	Mem12[ds:0x0004:word16] = ds
	Mem13[ds:0x0006:word16] = ds
	return bx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E46:
	__cli()
	selector es_21 = Mem19[ax_5:0x0006:selector]
	Mem22[ax_5:0x0006:word16] = ds
	Mem23[ds:0x0004:word16] = ax_5
	Mem27[es_21:0x0004:word16] = ds
	Mem28[ds:0x0006:word16] = es_21
	return ss
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E3E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E75(selector ds, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_9E75_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E75:
	Mem16[0x0800:0x9D3B:word16] = ds
	word16 dx_18 = wArg04
	branch wArg04 == 0x0000 l0800_9E95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E86:
	branch wArg04 != Mem16[0x0800:0x9D37:word16] l0800_9E92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E92:
	ax = fn0800_9DA4(wArg04, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E8D:
	ax = fn0800_9D41(wArg04, out cx, out dx_18, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E95:
	selector ds_43 = Mem16[0x0800:0x9D3B:selector]
	cxOut = cx
	dxOut = dx_18
	bxOut = bx
	dsOut = ds_43
	return ax
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E75_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E9E(word16 ax, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9E9E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E9E:
	word16 dx_130
	word16 ax_16 = fn0800_A215(Mem7[0x0800:0x9D3B:selector], 0x00000000, out dx_130)
	branch (ax_16 & 0x000F) == 0x0000 l0800_9EC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EB3:
	word16 dx_131
	fn0800_A215(Mem15[0x0800:0x9D3B:selector], (uint32) (uint16) (0x0010 - (ax_16 & 0x000F)), out dx_131)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EC7:
	word16 dx_75
	branch fn0800_A215(Mem57[0x0800:0x9D3B:selector], SEQ((uint16) (uint8) SLICE(ax, byte, 8) >>u 0x04, ax << 0x04), out dx_75) == 0xFFFF l0800_9EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EFE:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EE6:
	Mem90[0x0800:0x9D35:word16] = dx_75
	Mem91[0x0800:0x9D37:word16] = dx_75
	Mem93[dx_75:0x0000:word16] = ax
	Mem94[dx_75:0x0002:word16] = dx_75
	dxOut = dx_75
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E9E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F02(word16 ax, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9F02_entry:
	byte ah_9 = SLICE(ax, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F02:
	selector ds_17 = Mem7[0x0800:0x9D3B:selector]
	word16 dx_25
	word16 ax_22 = fn0800_A215(ds_17, SEQ((uint16) (uint8) ah_9 >>u 0x04, ax << 0x04), out dx_25)
	branch ax_22 == 0xFFFF l0800_9F58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F20:
	branch (ax_22 & 0x000F) != 0x0000 l0800_9F3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F3D:
	word16 dx_130
	branch fn0800_A215(ds_17, (uint32) (uint16) (-(ax_22 & 0x000F) + 0x0010), out dx_130) == 0xFFFF l0800_9F58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F58:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F55:
	dx_25 = dx_25 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F25:
	word16 cx_76 = Mem75[0x0800:0x9D37:word16]
	Mem78[0x0800:0x9D37:word16] = dx_25
	Mem81[dx_25:0x0000:word16] = ax
	Mem82[dx_25:0x0002:word16] = cx_76
	dxOut = dx_25
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F02_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx ds dx Top
// Preserved: sp
fn0800_9F5C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F5C:
	Mem10[ds:0x0000:word16] = Mem0[ds:0x0000:word16] - ax
	word16 dx_11 = dx + Mem10[ds:0x0000:word16]
	Mem13[dx_11:0x0000:word16] = ax
	Mem14[dx_11:0x0002:word16] = dx
	Mem19[dx_11 + Mem14[dx_11:0x0000:word16]:0x0002:word16] = dx_11
	dxOut = dx_11
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F5C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F7F(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax bp di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_9F7F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F7F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F87_thunk_fn0800_9F92:
	word16 bp_14
	selector ds_16
	word16 di_20
	word16 dx_21
	word16 si_23
	word16 ax_18 = fn0800_9F92(wArg02, 0x0000, ds, out dx_21, out bp_14, out si_23, out di_20, out ds_16)
	dxOut = dx_21
	bpOut = bp_14
	siOut = si_23
	diOut = di_20
	dsOut = ds_16
	return ax_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F7F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F89(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bp di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_9F89_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F89:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F8F_thunk_fn0800_9F92:
	word16 bp_12
	selector ds_14
	word16 di_18
	word16 dx_19
	word16 si_21
	word16 ax_16 = fn0800_9F92(wArg02, wArg04, ds, out dx_19, out bp_12, out si_21, out di_18, out ds_14)
	dxOut = dx_19
	bpOut = bp_12
	siOut = si_21
	diOut = di_18
	dsOut = ds_14
	return ax_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F89_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F92(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_9F92_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F92:
	Mem52[0x0800:0x9D3B:word16] = ds
	branch (ax | dx) == 0x0000 l0800_9FFD_in_fn0800_9F92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FFD_in_fn0800_9F92:
	selector ds_54 = Mem52[0x0800:0x9D3B:selector]
	dxOut = dx
	bpOut = wArg00
	siOut = si
	diOut = di
	dsOut = ds_54
	return ax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	word16 bp_62
	word16 di_64
	selector ds_65
	word16 dx_66
	word16 si_67
	word16 ax_61 = fn0800_9F9F(ax, dx, out dx_66, out bp_62, out si_67, out di_64, out ds_65)
	dxOut = dx_66
	bpOut = bp_62
	siOut = si_67
	diOut = di_64
	dsOut = ds_65
	return ax_61
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F92_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F9F(word16 ax, word16 dx, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_9F9F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9F:
	word16 dx_134
	word16 ax_120
	word16 dx_9 = dx + (ax <u 0x0013)
	branch dx_9 <u 0x0000 l0800_9FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FA7:
	branch (dx_9 & 0xFFF0) != 0x0000 l0800_9FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FE8:
	ax_120 = 0x0000 (alias)
	dx_134 = 0x0000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FAD:
	word16 ax_20 = ax + 0x0013 >>u 0x04
	branch Mem0[0x0800:0x9D35:word16] == 0x0000 l0800_9FDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FDE:
	ax_120 = fn0800_9E9E(ax_20, out dx_134)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FBE:
	word16 dx_42 = Mem0[0x0800:0x9D39:word16]
	dx_134 = dx_42
	branch dx_42 == 0x0000 l0800_9FD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FC7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FC9:
	branch Mem0[dx_134:0x0000:word16] >=u ax_20 l0800_9FED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FED:
	branch Mem0[dx_134:0x0000:word16] >u ax_20 l0800_9FE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FE3:
	ax_120 = fn0800_9F5C(ax_20, dx_134, dx_134, out dx_134)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FEF:
	fn0800_9E15(dx_134)
	Mem70[dx_134:0x0002:word16] = Mem0[dx_134:0x0008:word16]
	ax_120 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FD1:
	dx_134 = Mem0[dx_134:0x0006:word16]
	branch dx_134 != dx_42 l0800_9FC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FD9:
	ax_120 = fn0800_9F02(ax_20, out dx_134)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FFD:
	selector ds_92 = Mem89[0x0800:0x9D3B:selector]
	dxOut = dx_134
	bpOut = wArg04
	siOut = wArg02
	diOut = wArg00
	dsOut = ds_92
	return ax_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F9F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A006(word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds es si Top
// Preserved: sp
fn0800_A006_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A006:
	word16 dx_21
	word16 bp_200
	word16 si_201
	word16 di_202
	selector ds_203
	fn0800_9F89(ds, Mem10[0x0800:0x9D3F:word16], Mem7[0x0800:0x9D3D:word16], out dx_21, out bp_200, out si_201, out di_202, out ds_203)
	branch dx_21 != 0x0000 l0800_A01F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A01F:
	word16 dx_42 = Mem41[bx:0x0000:word16]
	word16 di_124 = 0x0004
	word16 si_122 = 0x0004
	word16 cx_128 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A033:
	branch cx_128 == 0x0000 l0800_A035
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A035:
	word16 dx_51 = dx_42 - 0x0001
	branch dx_42 == 0x0001 l0800_A070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A039:
	selector es_109 = dx_21 + 0x0001
	selector ds_114 = bx + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A043:
	word16 di_117 = 0x0000
	word16 si_115 = 0x0000
	word16 cx_67 = dx_51
	branch dx_51 <=u 0x1000 l0800_A052
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A04F:
	cx_67 = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A052:
	word16 cx_121 = cx_67 << 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A058:
	branch cx_121 == 0x0000 l0800_A05A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A05A:
	dx_51 = dx_51 - 0x1000
	branch dx_51 <=u 0x0000 l0800_A070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A070:
	selector ds_207
	word16 bx_206
	word16 dx_205
	word16 cx_204
	fn0800_9E75(Mem81[0x0800:0x9D3B:selector], bx, out cx_204, out dx_205, out bx_206, out ds_207)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A060:
	es_109 = es_109 + 0x1000
	ds_114 = ds_114 + 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A058_1:
	Mem118[es_109:di_117:word16] = Mem83[ds_114:si_115:word16]
	si_115 = si_115 + 0x0002
	di_117 = di_117 + 0x0002
	cx_121 = cx_121 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A033_1:
	Mem125[dx_21:di_124:word16] = Mem82[bx:si_122:word16]
	si_122 = si_122 + 0x0002
	di_124 = di_124 + 0x0002
	cx_128 = cx_128 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A01D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A006_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A080(word16 ax, word16 cx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_A080_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A080:
	branch bx == Mem0[0x0800:0x9D37:word16] l0800_A0CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0CB:
	Mem13[bx:0x0000:word16] = ax
	word16 bx_112
	word16 cx_110
	word16 dx_111
	fn0800_A1D6(ds, 0x0000, bx + ax, out cx_110, out dx_111, out bx_112)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A087:
	word16 di_38 = bx + ax
	Mem43[di_38:0x0000:word16] = cx - ax
	Mem44[di_38:0x0002:word16] = bx
	Mem50[bx:0x0000:word16] = ax
	word16 dx_52 = bx + cx
	branch Mem50[dx_52:0x0002:word16] == 0x0000 l0800_A0B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0B8:
	Mem56[dx_52:0x0008:word16] = di_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0B1:
	Mem57[dx_52:0x0002:word16] = di_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0BD:
	word16 cx_113
	word16 dx_114
	word16 bx_115
	selector ds_116
	fn0800_9E75(ds, di_38, out cx_113, out dx_114, out bx_115, out ds_116)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A080_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_A162_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A162:
	word16 dx_113
	word16 ax_57
	word16 si_18 = wArg04 + 0x0001 - Mem11[ds:0x007B:word16] + 0x003F >>u 0x06
	word16 cx_107 = SEQ(ch, 0x06)
	branch si_18 != Mem11[ds:0x2698:word16] l0800_A18D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A18D:
	word16 ax_25 = (si_18 << 0x06) + Mem11[ds:0x007B:word16]
	word16 si_22 = si_18 << 0x06
	word16 dx_23 = Mem11[ds:0x0091:word16]
	byte al_41 = SLICE(ax_25, byte, 0)
	branch ax_25 <=u dx_23 l0800_A1A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A19F:
	si_22 = dx_23 - Mem11[ds:0x007B:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1A5:
	word16 ax_42 = fn0800_A401(al_41, ds, Mem35[ds:0x007B:word16], si_22, out bx)
	cx_107 = si_22
	byte ch_111 = SLICE(si_22, byte, 8)
	dx_113 = ax_42
	branch ax_42 != 0xFFFF l0800_A1C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1C1:
	Mem55[ds:0x0091:word16] = Mem39[ds:0x007B:word16] + ax_42
	Mem56[ds:0x008F:word16] = 0x0000
	ax_57 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1B6:
	Mem64[ds:0x2698:word16] = si_22 >>u 0x06
	cx_107 = SEQ(ch_111, 0x06) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A17B:
	Mem72[ds:0x008D:word16] = wArg04
	Mem73[ds:0x008B:word16] = wArg02
	dx_113 = wArg02
	ax_57 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1D1:
	cxOut = cx_107
	dxOut = dx_113
	bxOut = bx
	return ax_57
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A162_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_A1D6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1D6:
	word16 ax_55
	word16 bx_15
	word16 cx_16
	word16 dx_17
	fn0800_8F2F(wArg02, Mem7[ds:0x0089:word16], wArg04, Mem7[ds:0x0087:word16], out cx_16, out dx_17, out bx_15)
	bool C_19 = <invalid>
	branch C_19 l0800_A20C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1EC:
	fn0800_8F2F(wArg02, Mem7[ds:0x0091:word16], wArg04, Mem7[ds:0x008F:word16], out cx_16, out dx_17, out bx_15)
	bool Z_32 = <invalid>
	bool C_31 = <invalid>
	branch Z_32 | C_31 l0800_A20C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out cx_16, out dx_17, out bx_15) != 0x0000 l0800_A211
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A211:
	ax_55 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A20C:
	ax_55 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A213:
	cxOut = cx_16
	dxOut = dx_17
	bxOut = bx_15
	return ax_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A1D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A215(selector ds, ui32 dwArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_A215_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A215:
	word16 dx_106
	word16 ax_107
	byte cl_18
	word16 dx_19
	word16 ax_25 = fn0800_8C69(Mem7[ds:0x008D:word16], 0x04, 0x0000, out cl_18, out dx_19) + Mem7[ds:0x008B:word16]
	ui32 dx_ax_120 = SEQ(dx_19 + (ax_25 <u 0x0000), ax_25) + dwArg02
	word16 ax_29 = (word16) dx_ax_120
	word16 dx_32 = SLICE(dx_ax_120, word16, 16)
	branch dx_32 < 0x000F l0800_A246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A237:
	branch dx_32 > 0x000F l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A239:
	branch ax_29 <=u 0xFFFF l0800_A246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A246:
	word16 dx_48
	byte ch_170
	word16 ax_46 = fn0800_8CCB(Mem7[ds:0x008B:word16], wArg04, Mem7[ds:0x008D:word16], wArg02, out ch_170, out dx_48)
	word16 bx_62
	word16 cx_63
	word16 dx_171
	fn0800_8F2F(ax_46, Mem57[ds:0x0089:word16], dx_48, Mem57[ds:0x0087:word16], out cx_63, out dx_171, out bx_62)
	word16 sp_50 = <invalid>
	bool C_66 = <invalid>
	branch C_66 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A26C:
	word16 cx_172
	word16 dx_173
	word16 bx_174
	fn0800_8F2F(ax_46, Mem57[ds:0x0091:word16], dx_48, Mem57[ds:0x008F:word16], out cx_172, out dx_173, out bx_174)
	bool Z_79 = <invalid>
	bool C_78 = <invalid>
	branch Z_79 | C_78 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A27F:
	word16 ax_82 = Mem57[ds:0x008D:word16]
	word16 dx_83 = Mem57[ds:0x008B:word16]
	Mem88[ss:sp_50 - 2:word16] = dx_48
	Mem91[ss:sp_50 - 4:word16] = ax_46
	word16 cx_175
	word16 dx_176
	word16 bx_177
	branch fn0800_A162(ds, Mem91[ss:sp_50 - 4:word16], Mem91[ss:sp_50 - 2:word16], out cx_175, out dx_176, out bx_177) == 0x0000 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A299:
	dx_106 = ax_82
	ax_107 = dx_83
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A23E:
	dx_106 = 0xFFFF
	ax_107 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A29F:
	dxOut = dx_106
	return ax_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A215_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A2A3(selector ds, word16 wArg04, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_A2A3_entry:
	byte bArg04 = SLICE(wArg04, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2A3:
	msdos_unknown_2144()
	word16 dx_31 = SLICE(ptrArg06, word16, 0)
	word16 ax_21 = SEQ(0x44, bArg04)
	branch C l0800_A2C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C6:
	ax_21 = fn0800_8D2B(ds, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2BA:
	branch wArg04 != 0x0000 l0800_A2C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C0:
	ax_21 = dx_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2CA:
	cxOut = wArg0A
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A2CC(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_A2CC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2CC:
	call Mem0[ds:0x26F4:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2CC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A2D0(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_A2D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D0:
	call Mem0[ds:0x26F6:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn0800_A2D4(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: Top
// Trashed: Top
// Preserved: sp
fn0800_A2D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D4:
	int8 Top_7
	call Mem0[ds:0x26F8:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn0800_A2D8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: Top
// Trashed: Top
// Preserved: sp
fn0800_A2D8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D8:
	int8 Top_7
	call Mem0[ds:0x26FA:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A36D(word32 ds_si, word32 es_di, word16 ax, word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cx:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31]
// LiveOut:
// Trashed: SCZO ax cx si Top
// Preserved: bx di dx sp
fn0800_A36D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A36D:
	byte al_11 = SLICE(ax, byte, 0)
	branch ax == 0x0000 l0800_A378
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A371:
	Mem14[es_di:byte] = al_11
	branch al_11 != 0x00 l0800_A378
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A377:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A378:
	branch cx == 0x0000 l0800_A394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A37F:
	byte al_40 = Mem38[ds_si:byte]
	branch al_40 == 0x22 l0800_A394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A385:
	branch al_40 != 0x5C l0800_A392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A38B:
	branch Mem38[ds_si + 0x0001:byte] != 0x22 l0800_A392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A390:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A392:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A394:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A36D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx
// Trashed: C ax bx es Top
// Preserved: SZO bp sp
fn0800_A401_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A401:
	word16 ax_27
	word16 ax_18 = SEQ(0x4A, al)
	word16 bx_12
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_12) l0800_A415
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A415:
	fn0800_8D2B(ds, ax_18)
	ax_27 = bx_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A410:
	ax_27 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A41B:
	bxOut = bx_12
	return ax_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A401_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A471(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax edx
// Trashed: SCZDO ax bx cx dx edx Top
// Preserved: bp di es si sp ss
fn0800_A471_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A471:
	selector es_163 = SLICE(ptrArg02, selector, 16)
	word16 si_164 = SLICE(ptrArg02, word16, 0)
	word16 ax_113 = 0x0000
	word16 dx_116 = 0x0000
	byte bh_168 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A487:
	byte bl_31 = Mem19[es_163:si_164:byte]
	si_164 = si_164 + 0x0001
	branch (Mem19[ds:(uint16) (uint8) bl_31 + 0x2251:byte] & 0x01) != 0x00 l0800_A487
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A490:
	word16 bx_254
	word16 bp_119 = 0x0000
	branch bl_31 == 0x2B l0800_A49E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A498:
	bx_254 = (uint16) (uint8) bl_31 (alias)
	branch bl_31 != 0x2D l0800_A4A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A49D:
	bp_119 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A49E:
	si_164 = si_164 + 0x0001
	bx_254 = SEQ(bh_168, Mem19[es_163:si_164:byte]) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4A2:
	Mem152 = Mem19 (alias)
	byte bh_68 = SLICE(bx_254, byte, 8)
	byte bl_53 = SLICE(bx_254, byte, 0)
	branch bl_53 >u 0x39 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4A7:
	word16 bx_70 = SEQ(bh_68, bl_53 - 0x30)
	bh_168 = bh_68 (alias)
	branch bl_53 <u 0x30 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4AC:
	int32 dx_ax_66 = ax_113 *u 0x000A
	ui24 dl_ax_172 = SLICE(dx_ax_66, word24, 0) + SEQ(SLICE(dx_ax_66, byte, 24), bx_70)
	byte dl_76 = SLICE(dl_ax_172, byte, 16)
	ax_113 = (word16) dl_ax_172
	dx_116 = SEQ(SLICE(dx_ax_66, byte, 24), dl_76) (alias)
	branch dl_76 == 0x00 l0800_A49E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4B4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4C8:
	byte bl_82 = Mem152[es_163:si_164:byte]
	si_164 = si_164 + 0x0001
	branch bl_82 >u 0x39 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D1:
	word16 bx_112 = SEQ(bh_68, bl_82 - 0x30)
	branch bl_82 >=u 0x30 l0800_A4B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4B6:
	int32 dx_ax_93 = ax_113 *u 0x000A
	int32 dx_ax_175 = SEQ(SLICE(dx_116 *u 0x000A, word16, 0), SLICE(dx_ax_93, word16, 0)) + SEQ(SLICE(dx_ax_93, word16, 16), bx_112)
	ax_113 = (word16) dx_ax_175
	dx_116 = SLICE(dx_ax_175, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D6:
	branch bp_119 < 0x0001 l0800_A4E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D9:
	ax_113 = -ax_113
	dx_116 = -dx_116 - (ax_113 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4E0:
	dxOut = dx_116
	return ax_113
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A471_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A4F6(selector ds, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_A4F6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4F6:
	word16 cx_22
	branch fn0800_A53C(ds, 0x00, out cx_22) != 0xFFFF l0800_A513
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A513:
	branch (wArg06 & 0x0080) != 0x0000 l0800_A520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A51D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A520:
	word16 cx_113
	branch fn0800_A53C(ds, 0x01, out cx_113) == 0xFFFF l0800_A50F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A538:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A50F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A53A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A4F6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A53C(selector ds, byte bArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0006:[0..7]
// LiveOut: ax cx
// Trashed: ax cx dx Top
// Preserved: SCZO bp ds sp
fn0800_A53C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A53C:
	word16 ax_22
	msdos_unknown_2143()
	word16 cx_12 = wArg08
	word16 ax_20 = SEQ(0x43, bArg06)
	branch C l0800_A553
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A553:
	ax_22 = fn0800_8D2B(ds, ax_20)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A550:
	ax_22 = wArg08
	cx_12 = ax_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A557:
	cxOut = cx_12
	return ax_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A53C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_A559(byte al, selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_A559_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A559:
	word16 ax_20
	branch wArg02 <u Mem7[ds:0x24E8:word16] l0800_A56E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A56E:
	Mem16[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	ax_20 = (uint16) (uint8) fn0800_A57F(al, ds, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A565:
	ax_20 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A57D:
	dxOut = wArg02
	return (byte) ax_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A559_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx Top
// Preserved: bp sp
fn0800_A57F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A57F:
	word16 ax_17
	word16 ax_14 = SEQ(0x3E, al)
	branch msdos_close_file(wArg02) l0800_A597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A597:
	ax_17 = fn0800_8D2B(ds, ax_14)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A58B:
	Mem24[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	ax_17 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A59B:
	return (byte) ax_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A57F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A59D(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_A59D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A59D:
	word16 wLoc08_109
	word16 ax_118
	branch wArg02 <u Mem7[ds:0x24E8:word16] l0800_A5B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5B2:
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_A5C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5C4:
	word16 ax_19 = 0x4400
	byte dl_23 = SLICE(dx, byte, 0)
	branch msdos_ioctl_get_device_info(wArg02, out dx) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5CE:
	branch (dl_23 & 0x80) != 0x00 l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5D3:
	ax_19 = 0x4201
	dx = 0x0000
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5DE:
	ax_19 = 0x4202
	dx = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5F3:
	ax_19 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A60C:
	wLoc08_109 = ax_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5FA:
	branch false l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5FF:
	branch false l0800_A606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A601:
	branch false l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A608:
	ax_118 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A606:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5BF:
	ax_118 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5AC:
	wLoc08_109 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A60D:
	ax_118 = fn0800_8D2B(ds, wLoc08_109)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A610:
	dxOut = dx
	return ax_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A59D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_A614(selector ds, segptr32 ptrArg02, ptr16 & cxOut, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: D bp si sp
fn0800_A614_entry:
	word16 wArg02_179 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_180 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A614:
	word16 si_105 = 0xFFFF
	branch Mem11[ptrArg02 + 0x0012:word16] == wArg02_179 l0800_A62A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A62A:
	branch Mem11[ptrArg02 + 0x0006:word16] == 0x0000 l0800_A65F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A634:
	branch Mem11[ptrArg02:word16] >= 0x0000 l0800_A647
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A63A:
	cx = wArg04_180
	word16 bx_246
	branch fn0800_A6B7(ds, ptrArg02, out dx, out bx_246) != 0x0000 l0800_A6B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A647:
	branch (Mem51[ptrArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_A65F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A652:
	word16 v17_58 = Mem51[ptrArg02 + 0x000A:word16]
	word16 cx_247
	word16 bx_248
	fn0800_9E75(ds, v17_58, out cx_247, out dx, out bx_248, out ds)
	cx = v17_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A65F:
	branch Mem82[ptrArg02 + 0x0004:byte] < 0x00 l0800_A675
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A669:
	word16 ax_89 = (int16) Mem82[ptrArg02 + 0x0004:byte]
	cx = ax_89
	si_105 = (uint16) (uint8) fn0800_A559(SLICE(ax_89, byte, 0), ds, ax_89, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A675:
	Mem112[ptrArg02 + 0x0002:word16] = 0x0000
	Mem113[ptrArg02 + 0x0006:word16] = 0x0000
	Mem114[ptrArg02:word16] = 0x0000
	Mem115[ptrArg02 + 0x0004:byte] = 0xFF
	branch Mem115[ptrArg02 + 0x0010:word16] == 0x0000 l0800_A6B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A695:
	fn0800_8E6A(ds, Mem129[ptrArg02 + 0x0010:word16], 0x0000, 0x0000, 0x00000000)
	word32 dx_ax_242 = <invalid>
	dx = fn0800_97F8(SLICE(SLICE(dx_ax_242, word16, 0), byte, 0), ds, dx_ax_242)
	Mem163[ptrArg02 + 0x0010:word16] = 0x0000
	cx = SLICE(dx_ax_242, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A627:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6B2:
	cxOut = cx
	dxOut = dx
	dsOut = ds
	return (byte) si_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A614_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A6B7(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax bx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_A6B7_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6B7:
	word16 bx_107
	word16 ax_103
	branch (wArg02 | wArg04) != 0x0000 l0800_A6C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6C9:
	branch Mem11[ptrArg02 + 0x0012:word16] == wArg02 l0800_A6DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6DB:
	bx_107 = wArg02 (alias)
	branch Mem11[ptrArg02:word16] < 0x0000 l0800_A732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A732:
	word16 ax_32 = Mem11[ptrArg02 + 0x0006:word16] + Mem11[ptrArg02:word16]
	Mem36[ptrArg02:word16] = Mem11[ptrArg02:word16] - (ax_32 + 0x0001)
	word16 ax_40 = Mem39[ptrArg02 + 0x000A:word16]
	word16 dx_41 = Mem39[ptrArg02 + 0x0008:word16]
	Mem42[ptrArg02 + 0x000E:word16] = ax_40
	Mem43[ptrArg02 + 0x000C:word16] = dx_41
	branch fn0800_C632(ds, (int16) Mem47[ptrArg02 + 0x0004:byte], SEQ(ax_40, dx_41), ax_32 + 0x0001, out dx, out bx_107) == ax_32 + 0x0001 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A765:
	bx_107 = wArg02 (alias)
	branch (Mem51[ptrArg02 + 0x0002:word16] & 0x0200) != 0x0000 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A770:
	Mem72[ptrArg02 + 0x0002:word16] = Mem51[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6E4:
	branch (Mem11[ptrArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_A701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6EC:
	dx = wArg02 + 0x0005
	branch Mem11[ptrArg02 + 0x000E:word16] != wArg04 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6FB:
	branch Mem11[ptrArg02 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A701:
	Mem91[ptrArg02:word16] = 0x0000
	bx_107 = wArg02 (alias)
	dx = wArg02 + 0x0005
	branch Mem91[ptrArg02 + 0x000E:word16] != wArg04 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A718:
	branch Mem91[ptrArg02 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A71E:
	dx = Mem91[ptrArg02 + 0x0008:word16]
	Mem101[ptrArg02 + 0x000E:word16] = Mem91[ptrArg02 + 0x000A:word16]
	Mem102[ptrArg02 + 0x000C:word16] = dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6D5:
	bx_107 = wArg02
	ax_103 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6C3:
	dx = fn0800_A877(ds, out bx_107)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A778:
	ax_103 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A77A:
	dxOut = dx
	bxOut = bx_107
	return ax_103
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A6B7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A77D(selector ds, word32 dwArg02, word16 wArg06, segptr32 ptrArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_A77D_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A77D:
	word16 di_16 = wArg06
	word16 cx_134 = 0x0000
	segptr32 ptrLoc06_153 = dwArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A1:
	word16 wLoc06_154 = SLICE(ptrLoc06_153, word16, 0)
	word16 wLoc04_157 = SLICE(ptrLoc06_153, word16, 16)
	branch cx_134 == 0x000A l0800_A7D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A6:
	di_16 = di_16 - 0x0001
	branch di_16 <= 0x0000 l0800_A7D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A9:
	word16 ax_48
	word16 v17_36 = Mem32[ptrArg08:word16] - 0x0001
	Mem37[ptrArg08:word16] = v17_36
	branch v17_36 < 0x0000 l0800_A7C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7C6:
	word16 dx_225
	byte ch_224
	ax_48 = fn0800_AEC2(ds, ptrArg08, out ch_224, out dx_225)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7B1:
	word16 ax_61 = Mem37[ptrArg08 + 0x000E:word16]
	word16 si_62 = Mem37[ptrArg08 + 0x000C:word16]
	Mem64[ptrArg08 + 0x000C:word16] = Mem37[ptrArg08 + 0x000C:word16] + 0x0001
	ax_48 = (uint16) (uint8) Mem64[ax_61:si_62:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7D1:
	cx_134 = ax_48
	byte cl_78 = SLICE(ax_48, byte, 0)
	branch ax_48 != 0xFFFF l0800_A798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A798:
	Mem81[ptrLoc06_153:byte] = cl_78
	cx_134 = ax_48 (alias)
	ptrLoc06_153 = SEQ(wLoc04_157, wLoc06_154 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7D8:
	word16 ax_111
	word16 dx_110
	branch cx_134 != 0xFFFF l0800_A7F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7DD:
	branch wLoc04_157 != wArg04 l0800_A7F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7E8:
	branch wLoc06_154 != wArg02 l0800_A7F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7F3:
	Mem103[ptrLoc06_153:byte] = 0x00
	branch (Mem103[ptrArg08 + 0x0002:word16] & 0x0010) == 0x0000 l0800_A80B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A80B:
	dx_110 = wArg04
	ax_111 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A805:
	dx_110 = 0x0000
	ax_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7ED:
	dx_110 = 0x0000
	ax_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A811:
	dxOut = dx_110
	return ax_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A77D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A817(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_A817_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A817:
	word16 ax_53
	word32 es_bx_12 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg06, selector, 16), SLICE(ptrArg06, word16, 0))
	word16 bx_17 = SLICE(es_bx_12, word16, 0)
	word16 cx_32 = msdos_find_first_file(wArg0A, SLICE(ptrArg02, selector, 16), SLICE(ptrArg02, word16, 0)) | SCZDOP
	msdos_set_DTA(SLICE(es_bx_12, selector, 16), bx_17)
	word16 ax_35 = SEQ(0x4E, al)
	branch fp - 6 l0800_A844
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A844:
	ax_53 = fn0800_8D2B(ds, ax_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A840:
	ax_53 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A848:
	cxOut = cx_32
	dxOut = bx_17
	return ax_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A817_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A84A(byte al, selector ds, segptr32 ptrArg02, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_A84A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A84A:
	word16 ax_49
	word32 es_bx_12 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg02, selector, 16), SLICE(ptrArg02, word16, 0))
	word16 bx_17 = SLICE(es_bx_12, word16, 0)
	word16 cx_28 = msdos_find_next_file() | SCZDOP
	msdos_set_DTA(SLICE(es_bx_12, selector, 16), bx_17)
	word16 ax_31 = SEQ(0x4F, al)
	branch fp - 6 l0800_A871
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A871:
	ax_49 = fn0800_8D2B(ds, ax_31)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A86D:
	ax_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A875:
	cxOut = cx_28
	dxOut = bx_17
	return ax_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A84A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A877(selector ds, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx dx
// Trashed: SCZO ax bx cx di es si Top
// Preserved: bp sp
fn0800_A877_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A877:
	word16 si_20 = Mem15[ds:0x24E8:word16]
	segptr32 ptrLoc06_86 = SEQ(ds, 0x2358)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8A8:
	word16 wLoc04_87 = SLICE(ptrLoc06_86, word16, 16)
	word16 wLoc06_91 = SLICE(ptrLoc06_86, word16, 0)
	si_20 = si_20 - 0x0001
	branch si_20 != 0x0000 l0800_A88F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A88F:
	bx = SLICE(ptrLoc06_86, word16, 0) (alias)
	branch (Mem32[ptrLoc06_86 + 0x0002:word16] & 0x0003) == 0x0000 l0800_A8A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A89A:
	word16 dx_112
	fn0800_A6B7(ds, bx, out dx_112, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8A4:
	ptrLoc06_86 = SEQ(wLoc04_87, wLoc06_91 + 0x0014) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8AF:
	bxOut = bx
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A877_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, ptr16 & clOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut: ax cl
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp di si sp
fn0800_A8B7_entry:
	word16 wArg0A_162 = SLICE(ptrArg0A, word16, 0)
	word16 wArg0C_165 = SLICE(ptrArg0A, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8B7:
	word16 ax_141
	word16 si_107
	word16 dx_32
	word16 di_134 = 0x0000
	byte cl_21 = Mem18[ptrArg0A:byte]
	segptr32 ptrArg0A_166 = SEQ(wArg0C_165, wArg0A_162 + 0x0001)
	branch cl_21 != 0x72 l0800_A8D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8D5:
	branch cl_21 != 0x77 l0800_A8DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8DF:
	branch cl_21 != 0x61 l0800_A8EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8EF:
	ax_141 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8E4:
	dx_32 = 0x0902
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8DA:
	dx_32 = 0x0302
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8E7:
	di_134 = 0x0080
	si_107 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8CD:
	dx_32 = 0x0001
	si_107 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8F3:
	cl_21 = Mem18[ptrArg0A_166:byte]
	segptr32 ptrArg0A_171 = SEQ(wArg0C_165, wArg0A_162 + 0x0002)
	branch cl_21 == 0x2B l0800_A914
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A901:
	branch Mem49[ptrArg0A_171:byte] != 0x2B l0800_A92B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A90A:
	branch cl_21 == 0x74 l0800_A914
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A90F:
	branch cl_21 != 0x62 l0800_A92B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A914:
	branch cl_21 != 0x2B l0800_A91F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A919:
	cl_21 = Mem49[ptrArg0A_171:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A91F:
	dx_32 = dx_32 & 0xFFFC | 0x0004
	di_134 = 0x0180
	si_107 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A92B:
	word16 dx_103
	branch cl_21 != 0x74 l0800_A936
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A936:
	branch cl_21 != 0x62 l0800_A941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A941:
	dx_103 = dx_32 | Mem49[ds:0x2512:word16] & 0xC000
	branch (dx_103 & 0x8000) == 0x0000 l0800_A953
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A93B:
	dx_103 = dx_32 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A950:
	si_107 = si_107 | 0x0040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A930:
	dx_103 = dx_32 | 0x4000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A953:
	Mem117[ds:0x2354:word16] = 0xC7B5
	Mem131[ptrArg06:word16] = dx_103
	Mem139[ptrArg02:word16] = di_134
	ax_141 = si_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A967:
	clOut = cl_21
	return ax_141
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A8B7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A96D(selector ds, word16 wArg02, word32 dwArg04, word32 dwArg08, segptr32 ptrArg0C, ptr16 & cxOut, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ax cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_A96D_entry:
	word16 wArg0E_243 = SLICE(ptrArg0C, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A96D:
	word16 dx_169
	word16 ax_170
	byte cl_30
	word16 ax_28 = fn0800_A8B7(ds, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x0004), dwArg04, out cl_30)
	Mem41[ptrArg0C + 0x0002:word16] = ax_28
	word16 cx_154 = SEQ(ch, cl_30)
	branch ax_28 == 0x0000 l0800_A9B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A991:
	branch Mem41[ptrArg0C + 0x0004:byte] >= 0x00 l0800_A9CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A998:
	byte al_73 = SLICE((uint16) (uint8) fn0800_B140(ds, dwArg08, wLoc04 | wArg02, wLoc06, out cx_154), byte, 0)
	Mem76[ptrArg0C + 0x0004:byte] = al_73
	branch al_73 >= 0x00 l0800_A9CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9CD:
	branch fn0800_8D76((int16) Mem83[ptrArg0C + 0x0004:byte]) == 0x0000 l0800_A9E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9DE:
	Mem109[ptrArg0C + 0x0002:word16] = Mem91[ptrArg0C + 0x0002:word16] | 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9E7:
	word16 ax_124
	branch (Mem116[ptrArg0C + 0x0002:word16] & 0x0200) == 0x0000 l0800_A9FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9FB:
	ax_124 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9F6:
	ax_124 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9FD:
	word16 wArg0E_251 = SLICE(ptrArg0C, word16, 16)
	word16 wArg0C_252 = SLICE(ptrArg0C, word16, 0)
	branch fn0800_BA89(ds, ptrArg0C, 0x0000, 0x0000, ax_124, 0x0200, out cx_154, out ds) == 0x0000 l0800_AA1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA1F:
	Mem168[ptrArg0C + 0x0010:word16] = 0x0000
	dx_169 = wArg0E_251
	ax_170 = wArg0C_252
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA12:
	word16 dx_298
	word16 cx_297
	fn0800_A614(ds, ptrArg0C, out cx_297, out dx_298, out ds)
	cx_154 = wArg0E_243
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9B9:
	Mem197[ptrArg0C + 0x0004:byte] = 0xFF
	Mem198[ptrArg0C + 0x0002:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9C7:
	dx_169 = 0x0000
	ax_170 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA2E:
	cxOut = cx_154
	dxOut = dx_169
	dsOut = ds
	return ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A96D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_AA34(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp sp
fn0800_AA34_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA34:
	segptr32 ptrLoc06_61 = SEQ(ds, 0x2358)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA42:
	word16 wLoc06_62 = SLICE(ptrLoc06_61, word16, 0)
	word16 wLoc04_66 = SLICE(ptrLoc06_61, word16, 16)
	branch Mem16[ptrLoc06_61 + 0x0004:byte] < 0x00 l0800_AA64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA4C:
	ptrLoc06_61 = SEQ(wLoc04_66, wLoc06_62 + 0x0014) (alias)
	branch wLoc06_62 <u SLICE(Mem27[ds:0x24E8:word16] *s 0x0014, word16, 0) + 0x2358 l0800_AA42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA64:
	branch Mem40[ptrLoc06_61 + 0x0004:byte] < 0x00 l0800_AA74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA74:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA6E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA7A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AA34_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AA7E(selector ds, word32 dwArg02, word32 dwArg06, ptr16 & cxOut, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_AA7E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA7E:
	word16 dx_52
	word16 ax_49
	fn0800_AA34(ds)
	word32 dx_ax_105 = <invalid>
	branch (SLICE(dx_ax_105, word16, 0) | SLICE(dx_ax_105, word16, 16)) != 0x0000 l0800_AA97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA97:
	ax_49 = fn0800_A96D(ds, 0x0000, dwArg06, dwArg02, dx_ax_105, out cx, out dx_52, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA91:
	dx_52 = 0x0000
	ax_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAAF:
	cxOut = cx
	dxOut = dx_52
	dsOut = ds
	return ax_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AA7E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AAB3(word16 dx, selector ds, segptr32 ptrArg02, word16 wArg06, segptr32 ptrArg08, ptr16 & chOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_AAB3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAB3:
	segptr32 ptrArg08_234 = ptrArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB91:
	word16 wArg08_248 = SLICE(ptrArg08_234, word16, 0)
	word16 wArg0A_244 = SLICE(ptrArg08_234, word16, 16)
	branch wArg06 == 0x0000 l0800_AB9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB97:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AABB:
	word16 ax_31
	word16 v10_20 = wArg06 + 0x0001
	wArg06 = v10_20
	branch Mem21[ptrArg02 + 0x0006:word16] <=u v10_20 l0800_AACF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AACF:
	ax_31 = Mem21[ptrArg02 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AACA:
	ax_31 = v10_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAD6:
	word16 di_34 = ax_31
	branch (Mem21[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAE3:
	branch Mem21[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAEA:
	branch Mem21[ptrArg02 + 0x0006:word16] >=u v10_20 l0800_AB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAF3:
	branch Mem21[ptrArg02:word16] != 0x0000 l0800_AB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB50:
	word16 v18_54 = wArg06 - 0x0001
	word16 wArg08_235 = SLICE(ptrArg08_234, word16, 0)
	word16 wArg0A_289 = SLICE(ptrArg08_234, word16, 16)
	wArg06 = v18_54
	branch v18_54 == 0x0000 l0800_AB8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB5A:
	di_34 = di_34 - 0x0001
	branch di_34 == 0x0000 l0800_AB8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB5D:
	word16 ax_101
	word16 v19_68 = Mem55[ptrArg02:word16] - 0x0001
	Mem69[ptrArg02:word16] = v19_68
	branch v19_68 < 0x0000 l0800_AB7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB7A:
	word16 dx_341
	byte ch_340
	ax_101 = fn0800_AEC2(ds, ptrArg02, out ch_340, out dx_341)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB65:
	word16 ax_93 = Mem69[ptrArg02 + 0x000E:word16]
	word16 si_94 = Mem69[ptrArg02 + 0x000C:word16]
	Mem96[ptrArg02 + 0x000C:word16] = Mem69[ptrArg02 + 0x000C:word16] + 0x0001
	ax_101 = (uint16) (uint8) Mem96[ax_93:si_94:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB85:
	dx = ax_101
	byte dl_110 = SLICE(ax_101, byte, 0)
	branch ax_101 != 0xFFFF l0800_AB47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB47:
	Mem113[ptrArg08_234:byte] = dl_110
	dx = ax_101 (alias)
	ptrArg08_234 = SEQ(wArg0A_289, wArg08_235 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB8C:
	branch dx == 0xFFFF l0800_AB3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAF9:
	wArg06 = v10_20 - 0x0001
	word16 di_127 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB0E:
	branch Mem132[ptrArg02 + 0x0006:word16] <=u wArg06 l0800_AB00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB00:
	di_127 = di_127 + Mem132[ptrArg02 + 0x0006:word16]
	wArg06 = wArg06 - Mem132[ptrArg02 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB1A:
	byte ch_342
	word16 dx_343
	word16 ax_166 = fn0800_8F50(ds, (int16) Mem158[ptrArg02 + 0x0004:byte], ptrArg08_234, di_127, out ch_342, out dx_343)
	dx = ax_166
	ptrArg08_234 = SEQ(wArg0A_244, wArg08_248 + ax_166) (alias)
	branch ax_166 == di_127 l0800_AB91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB36:
	wArg06 = wArg06 + (di_127 - ax_166)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB3D:
	Mem195[ptrArg02 + 0x0002:word16] = Mem189[ptrArg02 + 0x0002:word16] | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB9A:
	chOut = <invalid>
	return wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AAB3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_ABA3(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & chOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax cx di si
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_ABA3_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
	word16 wArg0C = SLICE(dwArg0A, word16, 16)
	word16 wArg0A = SLICE(dwArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABA3:
	word16 ax_113
	word16 sp_100 = fp - 0x000A
	branch wArg06 != 0x0000 l0800_ABB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABB6:
	byte ch_264
	word16 dx_28
	word16 ax_27 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out ch_264, out dx_28)
	branch dx_28 >u 0x0001 l0800_ABF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABCD:
	branch dx_28 <u 0x0001 l0800_ABD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABCF:
	branch Test(UGE,false) l0800_ABF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABF2:
	word16 si_46 = wArg08 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC0B:
	word16 dx_98
	si_46 = si_46 - 0x0001
	branch si_46 == 0x0000 l0800_AC26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC12:
	word16 sp_60 = sp_100 - 2
	Mem61[ss:sp_60:word16] = wArg04
	Mem64[ss:sp_60 - 2:word16] = wArg02
	Mem67[ss:sp_60 - 4:word16] = wArg06
	Mem70[ss:sp_60 - 6:word16] = wArg0C
	Mem73[ss:sp_60 - 8:word16] = wArg0A
	byte ch_266
	branch fn0800_AAB3(dx_28, ds, Mem73[ss:sp_60 - 8:segptr32], Mem73[ss:sp_60 - 4:word16], Mem73[ss:sp_60 - 2:segptr32], out ch_266) == 0x0000 l0800_ABF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABF8:
	sp_100 = <invalid>
	wArg04 = dx_98
	byte ch_267
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, out ch_267, out dx_98)
	dx_28 = dx_98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC26:
	ax_113 = wArg08 - si_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABD3:
	sp_100 = fp - 0x000A
	byte ch_265
	ax_113 = (uint16) ((uint32) (uint16) (ax_27 - fn0800_AAB3(dx_28, ds, dwArg0A, ax_27, dwArg02, out ch_265)) /u wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABB2:
	ax_113 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC2B:
	word16 di_167 = Mem166[ss:sp_100:word16]
	word16 si_169 = Mem166[ss:sp_100 + 2:word16]
	chOut = <invalid>
	siOut = si_169
	diOut = di_167
	return ax_113
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_ABA3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AC31(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_AC31_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC31:
	word16 cx_108
	word16 si_29
	branch Mem12[ptrArg02:word16] >= 0x0000 l0800_AC4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC4D:
	int32 dx_ax_22 = (int32) Mem12[ptrArg02:word16]
	word16 dx_24 = SLICE(dx_ax_22, word16, 16)
	word16 ax_26 = (SLICE(dx_ax_22, word16, 0) ^ dx_24) - dx_24
	cx_108 = ax_26
	si_29 = ax_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC41:
	word16 cx_31 = Mem12[ptrArg02 + 0x0006:word16] + Mem12[ptrArg02:word16]
	cx_108 = cx_31 + 0x0001
	si_29 = cx_31 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC5C:
	branch (Mem12[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_ACAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC67:
	word16 dx_49 = Mem12[ptrArg02 + 0x000C:word16]
	word16 ax_48 = Mem12[ptrArg02 + 0x000E:word16]
	word16 wLoc06_114 = dx_49
	segptr32 ptrLoc06_115 = SEQ(ax_48, dx_49)
	branch Mem51[ptrArg02:word16] >= 0x0000 l0800_ACA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACA3:
	word16 wLoc06_116 = SLICE(ptrLoc06_159, word16, 0)
	word16 wLoc04_131 = SLICE(ptrLoc06_159, word16, 16)
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_AC96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC96:
	ptrLoc06_115 = SEQ(wLoc04_131, wLoc06_116 + 0x0001) (alias)
	ptrLoc06_159 = ptrLoc06_115
	branch Mem66[ptrLoc06_159:byte] != 0x0A l0800_ACA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACA2:
	si_29 = si_29 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC7E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC8D:
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_AC80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC80:
	word16 v18_84 = wLoc06_114 - 0x0001
	wLoc06_114 = v18_84
	branch Mem85[SEQ(ax_48, v18_84):byte] != 0x0A l0800_AC8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC8C:
	si_29 = si_29 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC94:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACAA:
	return si_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AC31_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_ACB3(selector ds, segptr32 ptrArg02, ui32 dwArg06, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_ACB3_entry:
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
	word16 wArg08 = SLICE(dwArg06, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACB3:
	word16 ax_112
	word16 cx_101 = wArg04
	word16 bx_100
	word16 dx_102
	branch fn0800_A6B7(ds, ptrArg02, out dx_102, out bx_100) == 0x0000 l0800_ACCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACCE:
	ui32 dwArg06_198 = dwArg06
	branch wArg0A != 0x0001 l0800_ACEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACD3:
	dwArg06_198 = dwArg06 (alias)
	branch Mem18[ptrArg02:word16] <= 0x0000 l0800_ACEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACDC:
	ui32 v21_v19_128 = SEQ(wArg08, v19_61) - (int32) fn0800_AC31(ptrArg02)
	word16 v19_61 = (word16) v21_v19_128
	dwArg06_198 = v21_v19_128 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACEA:
	Mem76[ptrArg02 + 0x0002:word16] = Mem71[ptrArg02 + 0x0002:word16] & 0xFE5F
	Mem79[ptrArg02:word16] = 0x0000
	word16 dx_81 = Mem79[ptrArg02 + 0x0008:word16]
	Mem82[ptrArg02 + 0x000E:word16] = Mem79[ptrArg02 + 0x000A:word16]
	Mem83[ptrArg02 + 0x000C:word16] = dx_81
	word16 ax_99 = fn0800_8E29(ds, (int16) Mem93[ptrArg02 + 0x0004:byte], dwArg06_198, SLICE(wArg0A, byte, 0), out cx_101, out dx_102, out bx_100)
	branch dx_102 != 0xFFFF l0800_AD2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD20:
	branch ax_99 != 0xFFFF l0800_AD2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2A:
	ax_112 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD25:
	ax_112 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACC9:
	ax_112 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2C:
	cxOut = cx_101
	dxOut = dx_102
	bxOut = bx_100
	return ax_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_ACB3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AD2F(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_AD2F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2F:
	word16 dx_22
	word16 ax_19 = fn0800_97B6(ds, (int16) Mem7[ptrArg02 + 0x0004:byte], out dx_22)
	word16 wLoc04_110 = dx_22
	word16 wLoc06_111 = ax_19
	branch dx_22 != 0xFFFF l0800_AD52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD4D:
	branch ax_19 == 0xFFFF l0800_AD7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD52:
	branch Mem30[ptrArg02:word16] >= 0x0000 l0800_AD6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD6B:
	ui32 v23_v22_104 = SEQ(dx_22, v22_62) - (int32) fn0800_AC31(ptrArg02)
	word16 v22_62 = (word16) v23_v22_104
	wLoc06_111 = v22_62
	wLoc04_110 = SLICE(v23_v22_104, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD5B:
	ui32 v19_v17_106 = SEQ(dx_22, v17_87) + (int32) fn0800_AC31(ptrArg02)
	word16 v17_87 = (word16) v19_v17_106
	wLoc06_111 = v17_87
	wLoc04_110 = SLICE(v19_v17_106, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD7B:
	dxOut = wLoc04_110
	return wLoc06_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AD2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AD85(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax di si
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_AD85_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
	word16 wArg0C = SLICE(dwArg0A, word16, 16)
	word16 wArg0A = SLICE(dwArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD85:
	word16 ax_110
	word16 sp_13 = fp - 0x000A
	branch wArg06 == 0x0000 l0800_AE07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD94:
	word16 dx_28
	byte ch_271
	word16 ax_27 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out ch_271, out dx_28)
	branch dx_28 >u 0x0001 l0800_ADC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADAB:
	branch dx_28 <u 0x0001 l0800_ADB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADAD:
	branch Test(UGE,false) l0800_ADC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADC9:
	word16 si_103 = 0x0000
	branch wArg08 <=u 0x0000 l0800_AE07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADD0:
	word16 sp_53 = sp_13 - 2
	Mem54[ss:sp_53:word16] = wArg04
	Mem57[ss:sp_53 - 2:word16] = wArg02
	Mem60[ss:sp_53 - 4:word16] = wArg06
	Mem63[ss:sp_53 - 6:word16] = wArg0C
	Mem66[ss:sp_53 - 8:word16] = wArg0A
	word16 ax_68 = fn0800_B4BE(ds, Mem66[ss:sp_53 - 8:segptr32], Mem66[ss:sp_53 - 4:word16], Mem66[ss:sp_53 - 2:segptr32])
	sp_13 = sp_53 + 0x0002
	branch false l0800_ADEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADE6:
	branch ax_68 == wArg06 l0800_ADEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADEE:
	sp_13 = <invalid>
	wArg04 = dx_93
	word16 dx_93
	byte ch_272
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, out ch_272, out dx_93)
	si_103 = si_103 + 0x0001
	branch si_103 <u wArg08 l0800_ADD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE07:
	ax_110 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADEA:
	ax_110 = si_103
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADB1:
	sp_13 = fp - 0x000A
	ax_110 = (uint16) ((uint32) (uint16) fn0800_B4BE(ds, dwArg0A, ax_27, dwArg02) /u wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE0A:
	word16 di_159 = Mem157[ss:sp_13:word16]
	siOut = Mem157[ss:sp_13 + 2:word16]
	diOut = di_159
	return ax_110
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AD85_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_AE10(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_AE10_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE10:
	word16 si_14 = 0x0014
	segptr32 ptrLoc06_72 = SEQ(ds, 0x2358)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE40:
	word16 wLoc04_73 = SLICE(ptrLoc06_72, word16, 16)
	word16 wLoc06_78 = SLICE(ptrLoc06_72, word16, 0)
	si_14 = si_14 - 0x0001
	branch si_14 != 0x0000 l0800_AE24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE24:
	branch (Mem27[ptrLoc06_72 + 0x0002:word16] & 0x0300) != 0x0300 l0800_AE3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE33:
	word16 dx_103
	word16 bx_104
	fn0800_A6B7(ds, ptrLoc06_72, out dx_103, out bx_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE3C:
	ptrLoc06_72 = SEQ(wLoc04_73, wLoc06_78 + 0x0014) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE47:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AE10_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AE4C(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp sp
fn0800_AE4C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE4C:
	branch (Mem7[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AE5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE5A:
	fn0800_AE10(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE5D:
	word16 ax_111
	word16 v11_31 = Mem7[ptrArg02 + 0x0006:word16]
	word16 ax_35 = Mem34[ptrArg02 + 0x000A:word16]
	word16 dx_36 = Mem34[ptrArg02 + 0x0008:word16]
	Mem37[ptrArg02 + 0x000E:word16] = ax_35
	Mem38[ptrArg02 + 0x000C:word16] = dx_36
	word16 dx_51
	word16 ax_48 = fn0800_B97F(ds, (int16) Mem42[ptrArg02 + 0x0004:byte], SEQ(ax_35, dx_36), v11_31, out dx_51)
	Mem62[ptrArg02:word16] = ax_48
	branch ax_48 <= 0x0000 l0800_AE95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE95:
	branch Mem62[ptrArg02:word16] != 0x0000 l0800_AEAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEAE:
	Mem74[ptrArg02:word16] = 0x0000
	Mem76[ptrArg02 + 0x0002:word16] = Mem74[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE9E:
	Mem84[ptrArg02 + 0x0002:word16] = Mem62[ptrArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEBB:
	ax_111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE8C:
	Mem87[ptrArg02 + 0x0002:word16] = Mem62[ptrArg02 + 0x0002:word16] & 0xFFDF
	ax_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEBE:
	dxOut = dx_51
	return ax_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AE4C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_AEC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEC2:
	Mem13[ptrArg02:word16] = Mem7[ptrArg02:word16] + 0x0001
	word16 dx_24
	word16 ax_21 = fn0800_AED6(ds, ptrArg02, out dx_24)
	chOut = <invalid>
	dxOut = dx_24
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AEC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AED6(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_AED6_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AED6:
	word16 ax_190
	branch (wArg02 | wArg04) != 0x0000 l0800_AEE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEE8:
	byte al_114
	branch Mem11[ptrArg02:word16] <= 0x0000 l0800_AF0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF0B:
	branch Mem11[ptrArg02:word16] < 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF14:
	branch (Mem11[ptrArg02 + 0x0002:word16] & 0x0110) != 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF1C:
	branch (Mem11[ptrArg02 + 0x0002:word16] & 0x0001) == 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF24:
	Mem37[ptrArg02 + 0x0002:word16] = Mem11[ptrArg02 + 0x0002:word16] | 0x0080
	branch Mem37[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AF43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF43:
	branch (Mem43[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AF51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF4E:
	fn0800_AE10(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF51:
	branch fn0800_B97F(ds, (int16) Mem71[ptrArg02 + 0x0004:byte], SEQ(ds, 0x4EE4), 0x0001, out dx) != 0x0000 l0800_AF9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF9E:
	branch Mem79[ds:0x4EE4:byte] != 0x0D l0800_AFB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFA5:
	branch (Mem79[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AF43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFB0:
	Mem110[ptrArg02 + 0x0002:word16] = Mem79[ptrArg02 + 0x0002:word16] & 0xFFDF
	al_114 = Mem110[ds:0x4EE4:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF6D:
	branch fn0800_A59D(ds, (int16) Mem79[ptrArg02 + 0x0004:byte], out dx) == 0x0001 l0800_AF8A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF8A:
	Mem142[ptrArg02 + 0x0002:word16] = Mem121[ptrArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF7F:
	Mem150[ptrArg02 + 0x0002:word16] = Mem145[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF34:
	branch fn0800_AE4C(ds, ptrArg02, out dx) == 0x0000 l0800_AEF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF3F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEF1:
	Mem181[ptrArg02:word16] = Mem176[ptrArg02:word16] - 0x0001
	word16 ax_182 = Mem181[ptrArg02 + 0x000E:word16]
	word16 si_183 = Mem181[ptrArg02 + 0x000C:word16]
	Mem185[ptrArg02 + 0x000C:word16] = Mem181[ptrArg02 + 0x000C:word16] + 0x0001
	al_114 = Mem185[ax_182:si_183:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFBB:
	ax_190 = (uint16) (uint8) al_114 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEE2:
	ax_190 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFBD:
	dxOut = dx
	return ax_190
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AED6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_AFCB(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_AFCB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFCB:
	selector es_17 = SLICE(ptrArg02, selector, 16)
	word16 di_19 = SLICE(ptrArg02, word16, 0)
	branch (es_17 | di_19) == 0x0000 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFDC:
	byte ah_25 = Mem15[ptrArg02:byte]
	word16 cx_26 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE5:
	branch cx_26 == 0x0000 l0800_AFE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE5_1:
	di_19 = di_256 + 0x0001
	cx_26 = cx_26 - 0x0001
	di_256 = di_19
	branch Mem15[es_17:di_256:byte] == 0x00 l0800_AFE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE7:
	word16 cx_38 = ~cx_26
	branch cx_38 == 0x0001 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFEC:
	ptr32 es_di_46 = Mem15[ds:0x26AA:segptr32]
	word16 di_151 = SLICE(es_di_46, word16, 0)
	word16 wLoc06_166 = di_151
	branch (SLICE(es_di_46, selector, 16) | di_151) != 0x0000 l0800_B009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B009:
	ptr32 es_di_63 = Mem62[ds:di_151:segptr32]
	selector es_64 = SLICE(es_di_63, selector, 16)
	word16 di_66 = SLICE(es_di_63, word16, 0)
	word16 cx_79 = cx_38 - 0x0001
	branch (es_64 | di_66) == 0x0000 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B012:
	byte al_71 = Mem62[es_di_63:byte]
	branch al_71 == 0x00 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B019:
	branch ah_25 != al_71 l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B01D:
	bool Z_113 = SLICE(cond(Mem62[cx_38 - 0x0001 + es_di_63:byte] - 0x3D), bool, 2)
	branch Mem62[cx_38 - 0x0001 + es_di_63:byte] != 0x3D l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B025:
	selector ds_159 = SLICE(ptrArg02, selector, 16)
	word16 si_160 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B029:
	branch cx_79 == 0x0000 l0800_B02B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B029_1:
	Z_113 = SLICE(cond(Mem86[ds_159:si_257:byte] - Mem86[es_64:di_258:byte]), bool, 2) (alias)
	si_160 = si_257 + 0x0001
	di_66 = di_258 + 0x0001
	cx_79 = cx_79 - 0x0001
	si_257 = si_160
	di_258 = di_66
	branch Mem86[ds_159:si_257:byte] != Mem86[es_64:di_258:byte] l0800_B029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B02B:
	branch Z_113 l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B002:
	word16 v23_120 = wLoc06_166 + 0x0004
	wLoc06_166 = v23_120
	di_151 = v23_120 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B030:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFFC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B035:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AFCB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B03B(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_B03B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B03B:
	selector es_60 = SLICE(ptrArg02, selector, 16)
	word16 di_30 = SLICE(ptrArg02, word16, 0)
	selector ds_58 = SLICE(ptrArg06, selector, 16)
	word16 si_26 = SLICE(ptrArg06, word16, 0)
	word16 cx_20 = wArg0A >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B04E:
	branch cx_20 == 0x0000 l0800_B050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B050:
	branch wArg0A >>u 0x0001 >=u 0x0000 l0800_B053
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B052:
	Mem31[es_60:di_30:byte] = Mem27[ds_58:si_26:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B053:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B03B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B04E_1:
	Mem53[es_60:di_30:word16] = Mem27[ds_58:si_26:word16]
	si_26 = si_26 + 0x0002
	di_30 = di_30 + 0x0002
	cx_20 = cx_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..7]
// LiveOut:
// Trashed: SCZDO ax cx es Top
// Preserved: bp di sp
fn0800_B05F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B05F:
	word16 di_17 = SLICE(ptrArg02, word16, 0)
	selector es_21 = SLICE(ptrArg02, selector, 16)
	word16 cx_13 = wArg06
	branch (di_17 & 0x0001) == 0x0000 l0800_B079
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B075:
	branch wArg06 == 0x0000 l0800_B080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B077:
	Mem22[ptrArg02:byte] = bArg08
	di_17 = di_17 + 0x0001
	cx_13 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B079:
	word16 cx_27 = cx_13 >>u 0x0001
	cx_29 = cx_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07B:
	word16 cx_29
	word16 ax_47 = SEQ(bArg08, bArg08)
	branch cx_29 == 0x0000 l0800_B07D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07D:
	branch cx_27 >=u 0x0000 l0800_B080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07F:
	Mem34[es_21:di_17:byte] = bArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B080:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B05F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07B_1:
	Mem48[es_21:di_17:word16] = ax_47
	di_17 = di_17 + 0x0002
	cx_29 = cx_29 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B083(word32 dwArg02, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..7] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp sp
fn0800_B083_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B083:
	fn0800_B05F(dwArg02, wArg08, bArg06)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B083_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B0A1(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_B0A1_entry:
	word16 wArg08 = SLICE(ptrArg06, word16, 16)
	word16 wArg06 = SLICE(ptrArg06, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0A1:
	word16 ax_31
	word16 bx_196
	word16 cx_194
	word16 dx_195
	fn0800_8F2F(wArg02, wArg08, wArg04, wArg06, out cx_194, out dx_195, out bx_196)
	bool C_27 = <invalid>
	branch C_27 l0800_B0BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0BE:
	ax_31 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0B8:
	ax_31 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0C1:
	word16 si_47 = wArg02
	word16 di_50 = wArg06
	word16 cx_41 = wArg0A
	branch ax_31 == 0x0000 l0800_B0D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0CE:
	si_47 = wArg02 + wArg0A - 0x0001
	di_50 = wArg06 + wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0D4:
	branch (di_50 & 0x0001) == 0x0000 l0800_B0DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DA:
	branch wArg0A == 0x0000 l0800_B0ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DC:
	Mem67[wArg08:di_50:byte] = Mem17[wArg04:si_47:byte]
	si_47 = si_47 + 0x0001
	di_50 = di_50 + 0x0001
	cx_41 = wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DE:
	word16 si_115 = si_47 - ax_31
	word16 di_116 = di_50 - ax_31
	word16 cx_79 = cx_41 >>u 0x0001
	cx_117 = cx_79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E4:
	word16 cx_117
	branch cx_117 == 0x0000 l0800_B0E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E6:
	branch cx_79 >=u 0x0000 l0800_B0ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E8:
	Mem93[wArg08:di_116 + ax_31:byte] = Mem90[wArg04:si_115 + ax_31:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0ED:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B0A1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E4_1:
	Mem114[wArg08:di_116:word16] = Mem90[wArg04:si_115:word16]
	si_115 = si_115 + 0x0002
	di_116 = di_116 + 0x0002
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B0F3(word32 dwArg02, word32 dwArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp sp
fn0800_B0F3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0F3:
	fn0800_B0A1(dwArg06, dwArg02, wArg0A)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B0F3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B113(selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax cx
// Trashed: C ax cx dx Top
// Preserved: SZO bp ds sp
fn0800_B113_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B113:
	word16 ax_17
	branch msdos_create_truncate_file(wArg02, SLICE(ptrArg04, selector, 16), SLICE(ptrArg04, word16, 0), out ax_17) l0800_B126
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B126:
	ax_17 = fn0800_8D2B(ds, ax_17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B124:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B12A:
	cxOut = wArg02
	return ax_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B113_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B12E(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_B12E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B12E:
	word16 ax_16
	msdos_write_file(wArg02, 0x0000, SEQ(ds, 0x0000), out ax_16)
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B12E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_B140(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_B140_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B140:
	word16 si_16 = wArg06
	branch (wArg06 & 0xC000) != 0x0000 l0800_B15C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B154:
	si_16 = wArg06 | Mem15[ds:0x2512:word16] & 0xC000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B15C:
	word16 ax_325
	word16 di_114
	word16 cx_110
	word16 ax_42 = fn0800_A53C(ds, 0x00, out cx_110)
	word16 wLoc04_369 = ax_42
	branch (si_16 & 0x0100) == 0x0000 l0800_B1F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B174:
	word16 di_52 = wArg08 & Mem46[ds:0x2514:word16]
	branch (di_52 & 0x0180) != 0x0000 l0800_B186
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B17F:
	fn0800_8D2B(ds, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B186:
	word16 wLoc0C_372
	branch ax_42 != 0xFFFF l0800_B1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1AF:
	branch (si_16 & 0x0400) == 0x0000 l0800_B1F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1B5:
	wLoc0C_372 = 0x0050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B18C:
	branch Mem68[ds:0x2516:word16] == 0x0002 l0800_B19D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B19D:
	word16 ax_86
	branch (di_52 & 0x0080) == 0x0000 l0800_B1A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1A7:
	ax_86 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1A3:
	ax_86 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1AA:
	wLoc04_369 = ax_86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1BB:
	branch (si_16 & 0x00F0) == 0x0000 l0800_B1DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1DD:
	word16 ax_109 = fn0800_B113(ds, ax_86, dwArg02, out cx_110)
	di_114 = ax_109
	branch ax_109 >= 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1EF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1C1:
	word16 ax_130 = fn0800_B113(ds, 0x0000, dwArg02, out cx_110)
	di_114 = ax_130
	byte al_142 = SLICE(ax_130, byte, 0)
	branch ax_130 >= 0x0000 l0800_B1D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1D6:
	fn0800_A57F(al_142, ds, ax_130)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1F2:
	word16 ax_164 = fn0800_B2A0(ds, dwArg02, si_16, out cx_110)
	di_114 = ax_164
	branch ax_164 < 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B205:
	cx_110 = 0x0000
	word16 cx_507
	branch (fn0800_A2A3(ds, 0x0000, out cx_507) & 0x0080) == 0x0000 l0800_B237
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B237:
	branch (si_16 & 0x0200) == 0x0000 l0800_B241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B23D:
	cx_110 = fn0800_B12E(ds, ax_164)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B216:
	si_16 = si_16 | 0x2000
	branch (si_16 & 0x8000) == 0x0000 l0800_B241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B220:
	fn0800_A2A3(ds, 0x0001, out cx_110)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B241:
	branch (wLoc04_369 & 0x0001) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B248:
	branch (si_16 & 0x0100) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B24E:
	branch (si_16 & 0x00F0) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B254:
	fn0800_A53C(ds, 0x01, out cx_110)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B265:
	branch di_114 < 0x0000 l0800_B298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B269:
	word16 ax_284
	branch (si_16 & 0x0300) == 0x0000 l0800_B274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B274:
	ax_284 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B26F:
	ax_284 = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B276:
	word16 ax_304
	word16 dx_292 = si_16 & 0xF8FF | ax_284
	branch (wLoc04_369 & 0x0001) == 0x0000 l0800_B28A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B28A:
	ax_304 = 0x0100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B286:
	ax_304 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B28D:
	Mem323[ds:(di_114 << 0x0001) + 0x24EA:word16] = dx_292 | ax_304
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1D3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B298:
	ax_325 = di_114
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B193:
	wLoc0C_372 = Mem68[ds:0x2516:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B197:
	ax_325 = fn0800_8D2B(ds, wLoc0C_372)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B29A:
	cxOut = cx_110
	return (byte) ax_325
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B140_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_B2A0_entry:
	byte bArg06_69 = SLICE(wArg06, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2A0:
	byte al_10 = 0x01
	byte ch_84 = SLICE(wArg06, byte, 8)
	ch_84 = SLICE(wArg06, byte, 8) (alias)
	branch (wArg06 & 0x0002) != 0x0000 l0800_B2BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2B1:
	al_10 = 0x02
	branch (wArg06 & 0x0004) != 0x0000 l0800_B2BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2B9:
	al_10 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2BB:
	word16 ax_42
	word16 cx_87 = SEQ(ch_84, bArg06_69 & 0xF0)
	word16 ax_36
	branch msdos_open_file(ptrArg02, al_10 | bArg06_69 & 0xF0, out ax_36) l0800_B2E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2E7:
	ax_42 = fn0800_8D2B(ds, ax_36)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2CD:
	Mem55[ds:(ax_36 << 0x0001) + 0x24EA:word16] = wArg06 & 0xB8FF | 0x8000
	ax_42 = ax_36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2EB:
	cxOut = cx_87
	return ax_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B2A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B2EF(word16 cx, word16 dx, word16 bx, selector ds, word32 dwArg02, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax di si
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_B2EF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2EF:
	word16 di_31
	word16 si_32
	word16 ax_30 = fn0800_9828(cx, dx, bx, ds, fp + 0x0006, dwArg02, out si_32, out di_31)
	siOut = si_32
	diOut = di_31
	return ax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B2EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B30A(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_B30A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B30A:
	Mem13[ptrArg04:word16] = Mem7[ptrArg04:word16] - 0x0001
	word16 bx_26
	word16 dx_27
	word16 cx_29
	word16 ax_25 = fn0800_B324(ds, SLICE((int16) bArg02, byte, 0), ptrArg04, out cx_29, out dx_27, out bx_26)
	cxOut = cx_29
	dxOut = dx_27
	bxOut = bx_26
	return ax_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B30A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B324(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_B324_entry:
	byte dh = SLICE(dx, byte, 8)
	word16 wArg04_307 = SLICE(ptrArg04, word16, 0)
	word16 wArg06_312 = SLICE(ptrArg04, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B324:
	word16 dx_100
	word16 ax_280
	Mem14[ds:0x4EE6:byte] = bArg02
	word16 bx_128 = SLICE(ptrArg04, word16, 0)
	branch Mem14[ptrArg04:word16] >= 0xFFFF l0800_B389
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B389:
	dx_100 = dx (alias)
	branch (Mem14[ptrArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_B39C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B394:
	dx_100 = dx (alias)
	branch (Mem14[ptrArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_B3A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3A6:
	word16 wArg06_330
	Mem33[ptrArg04 + 0x0002:word16] = Mem14[ptrArg04 + 0x0002:word16] | 0x0100
	branch Mem33[ptrArg04 + 0x0006:word16] == 0x0000 l0800_B421
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B421:
	branch (Mem33[ds:((int16) Mem33[ptrArg04 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B44C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B435:
	word16 bx_443
	word16 dx_442
	word16 cx_441
	fn0800_8E29(ds, (int16) Mem56[ptrArg04 + 0x0004:byte], 0x00000000, 0x02, out cx_441, out dx_442, out bx_443)
	wArg06_330 = SLICE(ptrArg04, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B44C:
	branch Mem73[ds:0x4EE6:byte] != 0x0A l0800_B478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B453:
	branch (Mem73[ptrArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B45E:
	word16 bx_444
	branch fn0800_C779(ds, (int16) Mem92[ptrArg04 + 0x0004:byte], SEQ(ds, 0x26AE), 0x0001, out cx, out dx_100, out bx_444) != 0x0001 l0800_B495
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B478:
	branch fn0800_C779(ds, (int16) Mem118[ptrArg04 + 0x0004:byte], SEQ(ds, 0x4EE6), 0x0001, out cx, out dx_100, out bx_128) == 0x0001 l0800_B4A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B495:
	bx_128 = SLICE(ptrArg04, word16, 0) (alias)
	branch (Mem140[ptrArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_B4A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3B6:
	branch Mem33[ptrArg04:word16] == 0x0000 l0800_B3C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3BC:
	dh = SLICE(dx_100, byte, 8) (alias)
	cx = wArg06_312
	branch fn0800_A6B7(ds, ptrArg04, out dx_100, out bx_128) != 0x0000 l0800_B380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3C9:
	Mem179[ptrArg04:word16] = -Mem173[ptrArg04 + 0x0006:word16]
	word16 ax_180 = Mem179[ptrArg04 + 0x000E:word16]
	word16 si_181 = Mem179[ptrArg04 + 0x000C:word16]
	Mem183[ptrArg04 + 0x000C:word16] = Mem179[ptrArg04 + 0x000C:word16] + 0x0001
	byte dl_185 = Mem183[ds:0x4EE6:byte]
	Mem187[ax_180:si_181:byte] = dl_185
	bx_128 = wArg04_307 (alias)
	dx_100 = SEQ(dh, dl_185) (alias)
	branch (Mem187[ptrArg04 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B3F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3F8:
	branch Mem187[ds:0x4EE6:byte] == 0x0A l0800_B409
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3FF:
	branch Mem187[ds:0x4EE6:byte] == 0x0D l0800_B409
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B409:
	cx = wArg06_330
	branch fn0800_A6B7(ds, ptrArg04, out dx_100, out bx_128) != 0x0000 l0800_B41B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B41B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B418:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B406:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3F5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B39C:
	Mem232[ptrArg04 + 0x0002:word16] = Mem227[ptrArg04 + 0x0002:word16] | 0x0010
	bx_128 = SLICE(ptrArg04, word16, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B337:
	Mem236[ptrArg04:word16] = Mem14[ptrArg04:word16] + 0x0001
	word16 ax_237 = Mem236[ptrArg04 + 0x000E:word16]
	word16 si_238 = Mem236[ptrArg04 + 0x000C:word16]
	Mem240[ptrArg04 + 0x000C:word16] = Mem236[ptrArg04 + 0x000C:word16] + 0x0001
	byte dl_241 = Mem240[ds:0x4EE6:byte]
	Mem243[ax_237:si_238:byte] = dl_241
	dx_100 = SEQ(dh, dl_241) (alias)
	branch (Mem243[ptrArg04 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B35D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B35D:
	branch Mem243[ds:0x4EE6:byte] == 0x0A l0800_B36E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B364:
	branch Mem243[ds:0x4EE6:byte] == 0x0D l0800_B36E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B36E:
	cx = wArg06_312
	branch fn0800_A6B7(ds, ptrArg04, out dx_100, out bx_128) != 0x0000 l0800_B380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B380:
	ax_280 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B37D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B36B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B35A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A3:
	ax_280 = (uint16) (uint8) Mem283[ds:0x4EE6:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A8:
	cxOut = cx
	dxOut = dx_100
	bxOut = bx_128
	return ax_280
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B324_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B4BE(selector ds, segptr32 ptrArg02, word16 wArg06, segptr32 ptrArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp di si sp
fn0800_B4BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4BE:
	segptr32 ptrArg08_510
	word16 ax_411
	word16 di_16 = wArg06
	branch (Mem17[ptrArg02 + 0x0002:word16] & 0x0008) == 0x0000 l0800_B504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B504:
	branch (Mem17[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B512:
	branch Mem17[ptrArg02 + 0x0006:word16] != 0x0000 l0800_B51C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B51C:
	branch Mem17[ptrArg02 + 0x0006:word16] >=u wArg06 l0800_B583
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B583:
	branch Mem17[ptrArg02:word16] + wArg06 < 0x0000 l0800_B5B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B58D:
	branch Mem17[ptrArg02:word16] != 0x0000 l0800_B59F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B59F:
	word16 dx_673
	word16 bx_674
	branch fn0800_A6B7(ds, ptrArg02, out dx_673, out bx_674) == 0x0000 l0800_B5B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5AE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B593:
	Mem70[ptrArg02:word16] = 0xFFFF - Mem17[ptrArg02 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5B1:
	fn0800_B03B(SEQ(Mem82[ptrArg02 + 0x000E:word16], Mem88[ptrArg02 + 0x000C:word16]), ptrArg08, wArg06)
	Mem107[ptrArg02:word16] = Mem91[ptrArg02:word16] + wArg06
	Mem109[ptrArg02 + 0x000C:word16] = Mem107[ptrArg02 + 0x000C:word16] + wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B522:
	branch Mem17[ptrArg02:word16] == 0x0000 l0800_B535
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B528:
	word16 bx_666
	word16 dx_665
	branch fn0800_A6B7(ds, ptrArg02, out dx_665, out bx_666) != 0x0000 l0800_B4F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B535:
	branch (Mem137[ds:((int16) Mem137[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B560
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B549:
	word16 dx_671
	word16 cx_670
	word16 bx_672
	fn0800_8E29(ds, (int16) Mem159[ptrArg02 + 0x0004:byte], 0x00000000, 0x02, out cx_670, out dx_671, out bx_672)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B560:
	word16 dx_668
	word16 bx_669
	word16 cx_667
	branch fn0800_C779(ds, (int16) Mem187[ptrArg02 + 0x0004:byte], ptrArg08, wArg06, out cx_667, out dx_668, out bx_669) <u wArg06 l0800_B57D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B57D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B57A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B519:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5DB:
	branch (Mem17[ds:((int16) Mem17[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5EF:
	word16 dx_663
	word16 bx_664
	word16 cx_662
	fn0800_8E29(ds, (int16) Mem226[ptrArg02 + 0x0004:byte], 0x00000000, 0x02, out cx_662, out dx_663, out bx_664)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B606:
	word16 cx_659
	word16 dx_660
	word16 bx_661
	branch fn0800_C779(ds, (int16) Mem253[ptrArg02 + 0x0004:byte], ptrArg08, wArg06, out cx_659, out dx_660, out bx_661) >=u wArg06 l0800_B69D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B620:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B50F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B625:
	ptrArg08_510 = ptrArg08 (alias)
	branch Mem17[ptrArg02 + 0x0006:word16] == 0x0000 l0800_B680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B680:
	word16 bx_294
	word16 dx_295
	branch fn0800_C632(ds, (int16) Mem285[ptrArg02 + 0x0004:byte], ptrArg08, wArg06, out dx_295, out bx_294) >=u wArg06 l0800_B69D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B69A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B62F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B677:
	word16 wArg08_511 = SLICE(ptrArg08_510, word16, 0)
	word16 wArg0A_569 = SLICE(ptrArg08_510, word16, 16)
	di_16 = di_16 - 0x0001
	branch di_16 != 0x0000 l0800_B631
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B631:
	word16 ax_341
	word16 v19_318 = Mem314[ptrArg02:word16] + 0x0001
	Mem319[ptrArg02:word16] = v19_318
	branch v19_318 >= 0x0000 l0800_B659
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B659:
	word16 bx_342
	word16 cx_343
	word16 dx_344
	ax_341 = fn0800_B30A(ds, Mem331[ptrArg08_510:byte], ptrArg02, out cx_343, out dx_344, out bx_342)
	ptrArg08_510 = SEQ(wArg0A_569, wArg08_511 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B639:
	word16 ax_352 = Mem319[ptrArg02 + 0x000E:word16]
	word16 si_353 = Mem319[ptrArg02 + 0x000C:word16]
	Mem355[ptrArg02 + 0x000C:word16] = Mem319[ptrArg02 + 0x000C:word16] + 0x0001
	byte dl_362 = Mem358[ptrArg08_510:byte]
	Mem364[ax_352:si_353:byte] = dl_362
	ax_341 = (uint16) (uint8) dl_362 (alias)
	ptrArg08_510 = SEQ(wArg0A_569, wArg08_511 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B66F:
	branch ax_341 != 0xFFFF l0800_B677
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B674:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B67E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4D7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4FA:
	word16 wArg08_522 = SLICE(ptrArg08_675, word16, 0)
	word16 wArg0A_572 = SLICE(ptrArg08_675, word16, 16)
	di_16 = di_16 - 0x0001
	branch di_16 != 0x0000 l0800_B4D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4D9:
	ptrArg08_510 = SEQ(wArg0A_572, wArg08_522 + 0x0001) (alias)
	ptrArg08_675 = ptrArg08_510
	word16 bx_400
	word16 dx_401
	word16 cx_403
	branch fn0800_B324(ds, SLICE((int16) Mem390[ptrArg08_675:byte], byte, 0), ptrArg02, out cx_403, out dx_401, out bx_400) != 0xFFFF l0800_B4FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4F5:
	ax_411 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B501:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B69D:
	ax_411 = wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6A0:
	return ax_411
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B4BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B6A8(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax cx
// Trashed: SCZDO ax cx es Top
// Preserved: bp di ds si sp
fn0800_B6A8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6A8:
	word16 ax_39
	word16 cx_19 = Mem17[ds:0x4EE8:word16]
	selector es_25 = SLICE(ptrArg02, selector, 16)
	word16 di_26 = SLICE(ptrArg02, word16, 0)
	selector ds_28 = SLICE(ptrArg06, selector, 16)
	word16 si_29 = SLICE(ptrArg06, word16, 0)
	word16 cx_22 = cx_19 >>u 0x0001
	branch cx_19 >>u 0x0001 >=u 0x0000 l0800_B6C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6BD:
	byte al_27 = Mem17[ptrArg02:byte]
	Mem31[ptrArg02:byte] = Mem17[ptrArg06:byte]
	Mem34[ptrArg06:byte] = al_27
	si_29 = si_29 + 0x0001
	di_26 = di_26 + 0x0001
	ax_39 = SEQ(ah, al_27) (alias)
	branch cx_19 >>u 0x0001 == 0x0000 l0800_B6CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6C6:
	ax_39 = Mem38[es_25:di_26:word16]
	Mem43[es_25:di_26:word16] = Mem38[ds_28:si_29:word16]
	si_29 = si_29 + 0x0002
	Mem46[ds_28:si_29 - 0x0002:word16] = ax_39
	di_26 = di_26 + 0x0002
	cx_22 = cx_22 - 0x0001
	branch cx_22 != 0x0000 l0800_B6C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6CF:
	cxOut = cx_22
	return ax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B6A8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B6D6(word16 cx, word16 bx, word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & bxOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: bx cx Top
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_B6D6_entry:
	int8 Top_116 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6D6:
	word16 sp_14 = fp - 0x001A
	word16 si_17 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6E1:
	word16 sp_598
	branch si_17 >u 0x0002 l0800_B726
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B726:
	word16 bx_31 = wArg04 + SLICE(Mem24[ds:0x4EE8:word16] *s (si_17 - 0x0001), word16, 0)
	word16 ax_39 = SLICE(Mem33[ds:0x4EE8:word16] *s (si_17 >>u 0x0001), word16, 0)
	word16 sp_46 = sp_14 - 2
	Mem47[ss:sp_46:word16] = wArg06
	Mem50[ss:sp_46 - 2:word16] = bx_31
	Mem53[ss:sp_46 - 4:word16] = wArg06
	word16 bx_40 = wArg04 + ax_39
	Mem55[ss:sp_46 - 6:word16] = bx_40
	word16 sp_56
	word16 ax_58
	word16 dx_59
	word16 bx_60
	int8 Top_62
	call SEQ(0x0800, Mem55[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_39,bx:bx_40,cx:cx_118,dx:wArg06,sp:sp_46 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_61
		defs: ax:ax_58,bx:bx_60,dx:dx_59,sp:sp_56,Top:Top_62
	word16 wLoc0A_686 = bx_31
	word16 ax_109 = ax_58
	branch ax_58 <= 0x0000 l0800_B775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B766:
	Mem70[ss:sp_56 + 0x0006:word16] = wArg06
	Mem73[ss:sp_56 + 0x0004:word16] = bx_40
	Mem76[ss:sp_56 + 0x0002:word16] = wArg06
	Mem79[ss:sp_56:word16] = bx_31
	ax_109 = fn0800_B6A8(ds, Mem79[ss:sp_56:segptr32], Mem79[ss:sp_56 + 4:segptr32], out cx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B775:
	word16 cx_144
	word16 sp_146
	word16 sp_160
	Mem95[ss:sp_56 + 0x0006:word16] = wArg06
	Mem98[ss:sp_56 + 0x0004:word16] = wArg04
	Mem101[ss:sp_56 + 0x0002:word16] = wArg06
	Mem104[ss:sp_56:word16] = bx_40
	word16 sp_106
	word16 ax_110
	word16 dx_112
	word16 cx_119
	call SEQ(0x0800, Mem104[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_109,bx:bx_60,cx:cx_117,dx:dx_59,sp:sp_56,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_62
		defs: ax:ax_110,bx:bx_114,cx:cx_119,dx:dx_112,sp:sp_106,Top:Top_116
	branch ax_110 <= 0x0000 l0800_B79A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B79A:
	Mem129[ss:sp_106 + 0x0006:word16] = wArg06
	Mem132[ss:sp_106 + 0x0004:word16] = bx_31
	Mem135[ss:sp_106 + 0x0002:word16] = wArg06
	Mem138[ss:sp_106:word16] = wArg04
	word16 sp_139
	word16 ax_140
	call SEQ(0x0800, Mem138[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_110,bx:bx_114,cx:cx_119,dx:dx_112,sp:sp_106,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_116
		defs: ax:ax_140,bx:bx_142,cx:cx_144,sp:sp_139,Top:Top_143
	sp_146 = sp_139 + 0x0008
	branch ax_140 <= 0x0000 l0800_B7C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7B1:
	Mem152[ss:sp_139 + 0x0006:word16] = wArg06
	Mem155[ss:sp_139 + 0x0004:word16] = wArg04
	Mem158[ss:sp_139 + 0x0002:word16] = wArg06
	Mem161[ss:sp_139:word16] = bx_31
	sp_160 = sp_139
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B78C:
	Mem164[ss:sp_106 + 0x0006:word16] = wArg06
	Mem167[ss:sp_106 + 0x0004:word16] = bx_40
	Mem170[ss:sp_106 + 0x0002:word16] = wArg06
	Mem173[ss:sp_106:word16] = wArg04
	sp_160 = sp_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7BD:
	fn0800_B6A8(ds, Mem177[ss:sp_160:segptr32], Mem177[ss:sp_160 + 4:segptr32], out cx_144)
	sp_146 = sp_160 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7C0:
	branch si_17 != 0x0003 l0800_B7D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7D4:
	word16 dx_198 = wArg04 + Mem194[ds:0x4EE8:word16]
	word16 ax_195 = wArg06
	wLoc0C = wArg06
	wLoc0E = dx_198
	wLoc06 = dx_198
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B813:
	word16 sp_209 = sp_146 - 2
	Mem210[ss:sp_209:word16] = wArg06
	Mem213[ss:sp_209 - 2:word16] = wArg04
	Mem216[ss:sp_209 - 4:word16] = wArg06
	Mem219[ss:sp_209 - 6:word16] = wLoc06
	word16 sp_221
	word16 ax_225
	call SEQ(0x0800, Mem219[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_224,bx:bx_228,cx:cx_232,dx:dx_226,sp:sp_209 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_724,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_722,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_716,Stack +FFFFFFFE:wArg06,Top:Top_230
		defs: ax:ax_225,bx:bx_229,cx:cx_233,dx:dx_227,sp:sp_221,Top:Top_231
	sp_146 = sp_221 + 0x0008
	branch ax_225 <= 0x0000 l0800_B7EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7EC:
	branch ax_225 != 0x0000 l0800_B805
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7F0:
	Mem247[ss:sp_221 + 0x0006:word16] = wArg06
	Mem250[ss:sp_221 + 0x0004:word16] = wLoc06
	Mem253[ss:sp_221 + 0x0002:word16] = wArg06
	Mem256[ss:sp_221:word16] = wLoc0E
	fn0800_B6A8(ds, Mem256[ss:sp_221:segptr32], Mem256[ss:sp_221 + 4:segptr32], out cx_144)
	wLoc0E = wLoc0E + Mem256[ds:0x4EE8:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B805:
	sp_146 = sp_221 + 0x0008
	ax_195 = wLoc06
	branch wLoc06 >=u wLoc0A_686 l0800_B883
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B80D:
	ax_195 = Mem272[ds:0x4EE8:word16]
	wLoc06 = wLoc06 + ax_195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B82C:
	branch wLoc06 >=u wLoc0A_686 l0800_B87B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B834:
	word16 sp_289 = sp_146 - 2
	Mem290[ss:sp_289:word16] = wArg06
	Mem293[ss:sp_289 - 2:word16] = wLoc0A_686
	Mem296[ss:sp_289 - 4:word16] = wArg06
	Mem299[ss:sp_289 - 6:word16] = wArg04
	word16 sp_301
	word16 ax_305
	call SEQ(0x0800, Mem299[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:wLoc06_716,bx:bx_308,cx:cx_312,dx:dx_306,sp:sp_289 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_724,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_730,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_716,Stack +FFFFFFFE:wArg06,Top:Top_310
		defs: ax:ax_305,bx:bx_309,cx:cx_313,dx:dx_307,sp:sp_301,Top:Top_311
	sp_146 = sp_301 + 0x0008
	branch ax_305 >= 0x0000 l0800_B855
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B855:
	Mem324[ss:sp_301 + 0x0006:word16] = wArg06
	Mem327[ss:sp_301 + 0x0004:word16] = wLoc06
	Mem330[ss:sp_301 + 0x0002:word16] = wArg06
	Mem333[ss:sp_301:word16] = wLoc0A_686
	fn0800_B6A8(ds, Mem333[ss:sp_301:segptr32], Mem333[ss:sp_301 + 4:segptr32], out cx_144)
	sp_146 = sp_301 + 0x0008
	branch ax_305 == 0x0000 l0800_B87B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B868:
	word16 ax_347 = Mem333[ds:0x4EE8:word16]
	wLoc06 = wLoc06 + ax_347
	wLoc0A_686 = wLoc0A_686 - ax_347
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B84D:
	word16 v59_354 = wLoc0A_686 - Mem299[ds:0x4EE8:word16]
	wLoc0A_686 = v59_354
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B873:
	branch wLoc06 <u v59_354 l0800_B834
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B87B:
	ax_195 = wLoc06
	branch wLoc06 <u wLoc0A_686 l0800_B813
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B883:
	word16 sp_373 = sp_146 - 2
	Mem374[ss:sp_373:word16] = wArg06
	Mem377[ss:sp_373 - 2:word16] = wArg04
	Mem380[ss:sp_373 - 4:word16] = wArg06
	Mem383[ss:sp_373 - 6:word16] = wLoc06
	word16 sp_386
	word16 ax_394
	call SEQ(0x0800, Mem383[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_393,bx:bx_399,cx:cx_407,dx:dx_395,sp:sp_373 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_775,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_771,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_755,Stack +FFFFFFFE:wArg06,Top:Top_403
		defs: ax:ax_394,sp:sp_386
	branch ax_394 > 0x0000 l0800_B8AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B89A:
	wLoc06 = wLoc06 + Mem383[ds:0x4EE8:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8AA:
	wLoc04 = wArg06
	wLoc14 = wArg06
	wLoc16 = wLoc06 - Mem427[ds:0x4EE8:word16]
	wLoc10 = wArg06
	wLoc12 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8E0:
	branch wLoc12 >=u wLoc0E l0800_B8F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8E8:
	branch wLoc16 >=u wLoc0E l0800_B8C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8C8:
	Mem451[ss:sp_386 + 0x0006:word16] = wArg06
	Mem454[ss:sp_386 + 0x0004:word16] = wLoc12
	Mem457[ss:sp_386 + 0x0002:word16] = wArg06
	Mem460[ss:sp_386:word16] = wLoc16
	word16 cx_943
	fn0800_B6A8(ds, Mem460[ss:sp_386:segptr32], Mem460[ss:sp_386 + 0x0004:segptr32], out cx_943)
	word16 ax_471 = Mem460[ds:0x4EE8:word16]
	wLoc12 = wLoc12 + ax_471
	wLoc16 = wLoc16 - ax_471
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8F0:
	Mem481[ss:sp_386 + 0x0006:word16] = 0x0000
	Mem485[ss:sp_386 + 0x0004:word16] = Mem481[ds:0x4EE8:word16]
	word16 ax_489 = wLoc06 - wLoc0E
	Mem495[ss:sp_386 + 0x0002:word16] = 0x0000 - (ax_489 <u 0x0000)
	Mem497[ss:sp_386:word16] = ax_489
	word16 cx_939
	word16 bx_941
	word16 dx_940
	word16 ax_498 = fn0800_8BBB(Mem497[ss:sp_386:word32], Mem497[ss:sp_386 + 0x0004:word16], Mem497[ss:sp_386 + 0x0006:word16], out cx_939, out dx_940, out bx_941)
	word16 sp_502 = <invalid>
	Mem510[ss:sp_502 - 2:word16] = 0x0000
	Mem513[ss:sp_502 - 4:word16] = Mem510[ds:0x4EE8:word16]
	word16 dx_523 = wArg04 + SLICE(Mem513[ds:0x4EE8:word16] *s si_17, word16, 0) - wLoc06
	Mem529[ss:sp_502 - 6:word16] = 0x0000 - (dx_523 <u 0x0000)
	Mem531[ss:sp_502 - 8:word16] = dx_523
	word16 bx_533
	word16 cx_534
	word16 dx_942
	word16 ax_532 = fn0800_8BBB(Mem531[ss:sp_502 - 8:word32], Mem531[ss:sp_502 - 4:word16], Mem531[ss:sp_502 - 2:word16], out cx_534, out dx_942, out bx_533)
	word16 sp_536 = <invalid>
	si_17 = ax_532
	branch ax_532 >=u ax_498 l0800_B93D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B93D:
	Mem546[ss:sp_536 - 2:word16] = wArg06
	Mem549[ss:sp_536 - 4:word16] = wArg04
	Mem551[ss:sp_536 - 6:word16] = ax_498
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	cx = fn0800_B6D6(cx_534, bx_533, fp - 2, ax_532, ax_498, ds, stackArg2, wArg02, wArg04, out bx, out Top_116)
	sp_14 = sp_536
	wArg04 = wLoc06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B92E:
	Mem572[ss:sp_536 - 2:word16] = wArg06
	Mem575[ss:sp_536 - 4:word16] = wLoc06
	Mem577[ss:sp_536 - 6:word16] = ax_532
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	cx = fn0800_B6D6(cx_534, bx_533, fp - 2, ax_532, ax_498, ds, stackArg2, wArg02, wArg04, out bx, out Top_116)
	sp_14 = sp_536
	si_17 = ax_498
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7C5:
	word16 sp_589 = sp_146 - 2
	Mem590[ss:sp_589:word16] = wArg06
	Mem593[ss:sp_589 - 2:word16] = wArg04
	Mem596[ss:sp_589 - 4:word16] = wArg06
	Mem599[ss:sp_589 - 6:word16] = bx_40
	sp_598 = sp_589 - 6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6E6:
	branch si_17 == 0x0002 l0800_B6EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6EE:
	word16 dx_604 = wArg04 + Mem24[ds:0x4EE8:word16]
	word16 sp_608 = sp_14 - 2
	Mem609[ss:sp_608:word16] = wArg06
	Mem611[ss:sp_608 - 2:word16] = dx_604
	Mem614[ss:sp_608 - 4:word16] = wArg06
	Mem617[ss:sp_608 - 6:word16] = wArg04
	word16 sp_618
	word16 ax_619
	call SEQ(0x0800, Mem617[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:wArg06,bx:bx_621,cx:cx_118,dx:dx_604,sp:sp_608 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:dx_604,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_839,Stack +FFFFFFFE:wLoc04_837,Top:Top_61
		defs: ax:ax_619,bx:bx_623,cx:cx_625,sp:sp_618,Top:Top_624
	branch ax_619 > 0x0000 l0800_B714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B714:
	Mem633[ss:sp_618 + 0x0006:word16] = wArg06
	Mem636[ss:sp_618 + 0x0004:word16] = wArg04
	Mem639[ss:sp_618 + 0x0002:word16] = wArg06
	Mem642[ss:sp_618:word16] = dx_604
	sp_598 = sp_618
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B720:
	fn0800_B6A8(ds, Mem646[ss:sp_598:segptr32], Mem646[ss:sp_598 + 4:segptr32], out cx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B711:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6EB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B956:
	bxOut = bx
	TopOut = Top_116
	return cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B6D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B95E(word16 cx, word16 bx, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: D bp sp
fn0800_B95E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B95E:
	Mem11[ds:0x4EE8:word16] = wArg08
	branch wArg08 == 0x0000 l0800_B97D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B96B:
	Mem17[ds:0x4EEA:word16] = wArg0A
	word16 bx_78
	int8 Top_79
	fn0800_B6D6(cx, bx, fp - 2, si, di, ds, wArg06, wArg02, wArg04, out bx_78, out Top_79)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B97D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B95E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B97F(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_B97F_entry:
	word16 wArg06 = SLICE(ptrArg04, word16, 16)
	word16 wArg04 = SLICE(ptrArg04, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B97F:
	word16 ax_172
	branch wArg02 <u Mem15[ds:0x24E8:word16] l0800_B99A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B99A:
	branch wArg08 <u 0x0001 l0800_B9B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9A3:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_B9B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9B5:
	byte ch_346
	word16 ax_46 = fn0800_8F50(ds, wArg02, ptrArg04, wArg08, out ch_346, out dx)
	branch ax_46 <u 0x0001 l0800_B9DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9D0:
	branch (Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_B9E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9E2:
	word16 cx_117 = ax_46
	word16 si_66 = wArg04
	word16 di_150 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9ED:
	byte al_73 = Mem72[ds:si_66:byte]
	si_66 = si_66 + 0x0001
	branch al_73 == 0x1A l0800_BA21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA21:
	word16 cx_86 = -cx_117
	word16 cx_100
	word16 bx_347
	fn0800_8E29(ds, wArg02, SEQ(0x0000 - (cx_86 == 0x0000), cx_86), 0x01, out cx_100, out dx, out bx_347)
	Mem110[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem97[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9F3:
	branch al_73 == 0x0D l0800_B9FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FC:
	cx_117 = cx_117 - 0x0001
	branch cx_117 != 0x0000 l0800_B9ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FE:
	byte ch_348
	fn0800_8F50(ds, wArg02, SEQ(ss, fp - 0x0005), 0x0001, out ch_348, out dx)
	Mem151[wArg06:di_150:byte] = bLoc05
	di_150 = di_150 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9F7:
	Mem153[wArg06:di_150:byte] = al_73
	di_150 = di_150 + 0x0001
	cx_117 = cx_117 - 0x0001
	branch cx_117 != 0x0000 l0800_B9ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA19:
	branch di_150 != wArg04 l0800_BA1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA1F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA41:
	ax_172 = di_150 - wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA1D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9DD:
	ax_172 = ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9B0:
	ax_172 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B990:
	ax_172 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA44:
	dxOut = dx
	return ax_172
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B97F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BA4A(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax dx es Top
// Preserved: bp di ds sp
fn0800_BA4A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA4A:
	word16 ax_28
	word16 dx_19 = SLICE(ptrArg02, word16, 0)
	word16 ax_22
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_22) l0800_BA60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA60:
	ax_28 = fn0800_8D2B(ds, ax_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA5C:
	ax_28 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA64:
	dxOut = dx_19
	return ax_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA4A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BA67(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO bx cx dx es Top
// Preserved: bp sp
fn0800_BA67_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA67:
	word16 bx_26
	word16 dx_80
	word16 cx_79
	branch fn0800_ACB3(ds, ptrArg02, 0x00000000, 0x0000, out cx_79, out dx_80, out bx_26) != 0x0000 l0800_BA87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA7F:
	Mem43[ptrArg02 + 0x0002:word16] = Mem23[ptrArg02 + 0x0002:word16] & 0xFFEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA87:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA67_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BA89(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & cxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax cx ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_BA89_entry:
	word16 wArg02_227 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA89:
	word16 ax_201
	word16 bp_153 = fp - 2
	word16 di_15 = wArg0A
	branch Mem14[ptrArg02 + 0x0012:word16] != wArg02_227 l0800_BAAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAA0:
	branch wArg0A > 0x0002 l0800_BAAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAA5:
	branch wArg0C <=u 0x7FFF l0800_BAB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAB1:
	branch Mem14[ds:0x26B2:word16] != 0x0000 l0800_BAC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAB8:
	branch wArg02_227 != 0x236C l0800_BAC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAC7:
	branch Mem14[ds:0x26B0:word16] != 0x0000 l0800_BADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BACE:
	branch wArg02_227 != 0x2358 l0800_BADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAD5:
	Mem40[ds:0x26B0:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BABF:
	Mem41[ds:0x26B2:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BADB:
	branch Mem44[ptrArg02:word16] == 0x0000 l0800_BAF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAE4:
	word16 bx_342
	word16 dx_341
	fn0800_ACB3(ds, ptrArg02, 0x00000000, 0x0001, out cx, out dx_341, out bx_342)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAF6:
	word16 wArg04_246 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_247 = SLICE(ptrArg02, word16, 0)
	branch (Mem81[ptrArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_BB0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB01:
	word16 v18_88 = Mem81[ptrArg02 + 0x000A:word16]
	word16 cx_343
	word16 dx_344
	word16 bx_345
	fn0800_9E75(ds, v18_88, out cx_343, out dx_344, out bx_345, out ds)
	cx = v18_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB0E:
	Mem117[ptrArg02 + 0x0002:word16] = Mem112[ptrArg02 + 0x0002:word16] & 0xFFF3
	Mem119[ptrArg02 + 0x0006:word16] = 0x0000
	Mem123[ptrArg02 + 0x000A:word16] = wArg04_246
	Mem124[ptrArg02 + 0x0008:word16] = wArg02_247 + 0x0005
	Mem125[ptrArg02 + 0x000E:word16] = wArg04_246
	Mem126[ptrArg02 + 0x000C:word16] = wArg02_247 + 0x0005
	branch wArg0A == 0x0002 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB3A:
	word16 si_137 = wArg0C
	branch wArg0C <=u 0x0000 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB3E:
	Mem143[ds:0x2352:word16] = 0xC7F0
	branch (wArg06 | wArg08) != 0x0000 l0800_BB6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB4C:
	word16 dx_158
	word16 ax_152 = fn0800_9F7F(ds, wArg0C, out dx_158, out bp_153, out si_137, out di_15, out ds)
	Mem167[ss:bp_153 + 0x000A:word16] = dx_158
	Mem168[ss:bp_153 + 0x0008:word16] = ax_152
	cx = wArg0C
	branch (ax_152 | dx_158) != 0x0000 l0800_BB5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB5E:
	ptr32 es_bx_173 = Mem168[ss:bp_153 + 0x0004:segptr32]
	Mem177[es_bx_173 + 0x0002:word16] = Mem168[es_bx_173 + 0x0002:word16] | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB6B:
	ptr32 es_bx_183 = Mem182[ss:bp_153 + 0x0004:segptr32]
	word16 ax_184 = Mem182[ss:bp_153 + 0x000A:word16]
	word16 dx_185 = Mem182[ss:bp_153 + 0x0008:word16]
	Mem188[es_bx_183 + 0x000E:word16] = ax_184
	Mem189[es_bx_183 + 0x000C:word16] = dx_185
	Mem190[es_bx_183 + 0x000A:word16] = ax_184
	Mem191[es_bx_183 + 0x0008:word16] = dx_185
	Mem193[es_bx_183 + 0x0006:word16] = si_137
	branch di_15 != 0x0001 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB8D:
	Mem198[es_bx_183 + 0x0002:word16] = Mem193[es_bx_183 + 0x0002:word16] | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB92:
	ax_201 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB5B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAAB:
	ax_201 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB94:
	cxOut = cx
	dsOut = ds
	return ax_201
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA89_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BB98(word16 wArg02, word32 dwArg04, segptr32 ptrArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_BB98_entry:
	word16 wArg08 = SLICE(ptrArg08, word16, 0)
	word16 wArg0A = SLICE(ptrArg08, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB98:
	branch (wArg08 | wArg0A) == 0x0000 l0800_BBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBA7:
	word16 cx_152
	branch fn0800_BFC7(dwArg04, out cx_152) <u wArg02 l0800_BBD2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBD2:
	fn0800_BF9E(ptrArg08, dwArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBB6:
	fn0800_C01E(ptrArg08, dwArg04, wArg02)
	Mem90[ptrArg08 + wArg02:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBE4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BB98_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BBE9(word16 bp, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO ax bp bx cx es Top
// Preserved: sp
fn0800_BBE9_entry:
	word16 wArg02_62 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_67 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBE9:
	branch Mem7[ptrArg02 - 0x0001:byte] != 0x2E l0800_BBFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBF9:
	wArg02_62 = wArg02_62 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBFC:
	segptr32 ptrArg02_68 = SEQ(wArg04_67, wArg02_62 - 0x0001)
	word16 ax_28 = (int16) Mem22[ptrArg02_68:byte]
	word16 cx_30 = 0x0004
	word16 bx_31 = 0xBC39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC0F:
	word16 ax_34 = Mem29[0x0800:bx_31:word16]
	branch ax_34 == ax_28 l0800_BC1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC1E:
	call Mem29[0x0800:bx_31 + 0x0008:word16] (retsize: 2;)
		uses: ax:ax_34,bx:bx_32,cx:cx_44,sp:fp - 0x0004,Stack +0002:ax_28,Stack +0004:bp,Stack +0008:ptrArg02_68,Stack +000A:wArg04_67,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC17:
	bx_31 = bx_31 + 0x0002
	cx_30 = cx_30 - 0x0001
	branch cx_30 != 0x0000 l0800_BC0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC1C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC31:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BBE9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BC49(word16 bp, word16 si, word16 di, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, segptr32 ptrArg0E, segptr32 ptrArg12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: bx
// Trashed: SCZDO ax bp bx cx di dx es si Top
// Preserved: sp
fn0800_BC49_entry:
	word16 wArg06 = SLICE(ptrArg06, word16, 0)
	word16 wArg08 = SLICE(ptrArg06, word16, 16)
	word16 wArg0A = SLICE(ptrArg0A, word16, 0)
	word16 wArg0C = SLICE(ptrArg0A, word16, 16)
	word16 wArg0E = SLICE(ptrArg0E, word16, 0)
	word16 wArg10 = SLICE(ptrArg0E, word16, 16)
	word16 wArg12 = SLICE(ptrArg12, word16, 0)
	word16 wArg14 = SLICE(ptrArg12, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC49:
	branch (wArg06 | wArg08) == 0x0000 l0800_BC62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC5B:
	Mem25[ptrArg06:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC62:
	branch (wArg0A | wArg0C) == 0x0000 l0800_BC71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC6A:
	Mem37[ptrArg0A:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC71:
	branch (wArg0E | wArg10) == 0x0000 l0800_BC80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC79:
	Mem49[ptrArg0E:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC80:
	branch (wArg12 | wArg14) == 0x0000 l0800_BC8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC88:
	Mem61[ptrArg12:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC8F:
	segptr32 ptrLoc06_243 = SEQ(ss, fp - 0x005A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC9D:
	segptr32 ptrArg02_289
	word16 wArg02_235 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_237 = SLICE(ptrArg02, word16, 16)
	branch Mem69[ptrArg02:byte] == 0x20 l0800_BC9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC9A:
	ptrArg02_289 = SEQ(wArg04_237, wArg02_235 + 0x0001) (alias)
	ptrArg02 = ptrArg02_289
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCA6:
	word16 cx_379
	word16 ax_88 = fn0800_BFC7(ptrArg02, out cx_379)
	word16 si_100 = ax_88
	branch ax_88 <= 0x0050 l0800_BCB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCB6:
	si_100 = 0x0050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCB9:
	Mem110[ptrLoc06_243:byte] = 0x00
	word16 v23_141 = fp - 0x0059 + si_100
	word16 dx_133 = fn0800_C01E(SEQ(ss, fp - 0x0059), ptrArg02, si_100)
	Mem146[SEQ(ss, v23_141):byte] = 0x00
	word16 wLoc06_256 = v23_141
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCE2:
	word16 v24_153 = wLoc06_256 - 0x0001
	wLoc06_256 = v24_153
	word16 ax_160 = (int16) Mem154[SEQ(ss, v24_153):byte]
	word16 cx_162 = 0x0007
	word16 bx_163 = 0xBE1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCF5:
	word16 ax_166 = Mem161[0x0800:bx_163:word16]
	branch ax_166 == ax_160 l0800_BD04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BD04:
	word16 bx_176
	call Mem161[0x0800:bx_163 + 0x000E:word16] (retsize: 2;)
		uses: ax:ax_166,bx:bx_164,cx:cx_178,dx:dx_133,sp:fp - 0x005E,Stack +0000:si_116,Stack +0002:di,Stack +0004:si,Stack +0058:ax_160,Stack +005A:v24_153,Stack +005C:ss,Stack +005E:bp,Stack +0062:ptrArg02_289,Stack +0064:wArg04_237,Stack +0066:wArg06,Stack +0068:wArg08,Stack +006A:wArg0A,Stack +006C:wArg0C,Stack +006E:wArg0E,Stack +0070:wArg10,Stack +0072:wArg12,Stack +0074:wArg14,Stack +FFFFFFF8:fp - 0x0059,Stack +FFFFFFFA:ss,Stack +FFFFFFFC:wArg02_235,Stack +FFFFFFFE:wArg04_237,Top:0
		defs: bx:bx_176
	return bx_176
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BC49_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCFD:
	bx_163 = bx_163 + 0x0002
	cx_162 = cx_162 - 0x0001
	branch cx_162 != 0x0000 l0800_BCF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BD02:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BE3B(word16 si, word16 di, word32 dwArg02, word32 dwArg06, word32 dwArg0A, word32 dwArg0E, word32 dwArg12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: bx
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_BE3B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BE3B:
	return fn0800_BC49(fp - 2, si, di, dwArg02, dwArg06, dwArg0A, dwArg0E, dwArg12)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BE3B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BEA2(word16 cx, word16 dx, selector ds, segptr32 ptrArg02, word32 dwArg06, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: di si
// Trashed: SCZDO ax bx di es si Top
// Preserved: bp sp
fn0800_BEA2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BEA2:
	Mem12[ptrArg02:byte] = 0x00
	word16 di_34
	word16 si_35
	fn0800_9828(cx, dx, SLICE(ptrArg02, word16, 0), ds, fp + 0x000A, dwArg06, out si_35, out di_34)
	diOut = di_34
	return si_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BEA2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_BF18(word16 cx, word32 edx, word16 bx, word16 si, word16 di, selector es, selector ds, word16 wArg06, word16 wArg08, ptr16 & edxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] edx:[0..31] es:[0..15] si:[0..15] ss:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: cx di edx
// Trashed: SCZDO ax bx cx di edx es si Top
// Preserved: bp sp
fn0800_BF18_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF18:
	word16 di_40
	word32 edx_44
	word16 cx_46 = (uint16) (uint8) fn0800_8F97(cx, edx, bx, fp - 2, si, di, es, ds, 0xBEE5, 0xBF0D, fp + 0x0002, ss, wArg06, wArg08, out edx_44, out di_40)
	edxOut = edx_44
	diOut = di_40
	return (byte) cx_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF18_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BF5F(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDO ax cx dx Top
// Preserved: bp di ds si sp
fn0800_BF5F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF5F:
	word16 di_20 = SLICE(ptrArg02, word16, 0)
	selector es_126 = SLICE(ptrArg02, selector, 16)
	word16 cx_25 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF70:
	branch cx_25 == 0x0000 l0800_BF72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF70_1:
	di_20 = di_20 + 0x0001
	cx_25 = cx_25 - 0x0001
	branch Mem18[es_126:di_20:byte] == 0x00 l0800_BF70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF72:
	word16 si_43 = di_20 - 0x0001
	selector es_128 = SLICE(ptrArg06, selector, 16)
	word16 di_129 = SLICE(ptrArg06, word16, 0)
	word16 cx_47 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7C:
	branch cx_47 == 0x0000 l0800_BF7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7C_2:
	di_129 = di_129 + 0x0001
	cx_47 = cx_47 - 0x0001
	branch Mem41[es_128:di_129:byte] == 0x00 l0800_BF7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7E:
	word16 cx_58 = ~cx_47
	word16 di_60 = di_129 - cx_58
	word16 di_124 = si_43
	word16 si_123 = di_60
	branch (di_60 & 0x0001) == 0x0000 l0800_BF8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF8D:
	Mem81[es_126:si_43:byte] = Mem67[es_128:di_60:byte]
	si_123 = di_60 + 0x0001
	di_124 = si_43 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF8F:
	word16 cx_87 = cx_58 >>u 0x0001
	cx_125 = cx_87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF91:
	word16 cx_125
	branch cx_125 == 0x0000 l0800_BF93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF93:
	branch cx_87 >=u 0x0000 l0800_BF96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF95:
	Mem97[es_126:di_124:byte] = Mem93[es_128:si_123:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF96:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF5F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF91_1:
	Mem122[es_126:di_124:word16] = Mem93[es_128:si_123:word16]
	si_123 = si_123 + 0x0002
	di_124 = di_124 + 0x0002
	cx_125 = cx_125 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BF9E(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_BF9E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF9E:
	word16 di_17 = SLICE(ptrArg06, word16, 0)
	selector es_73 = SLICE(ptrArg06, selector, 16)
	word16 si_18 = di_17
	word16 cx_22 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFAE:
	branch cx_22 == 0x0000 l0800_BFB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFAE_1:
	di_17 = di_124 + 0x0001
	cx_22 = cx_22 - 0x0001
	di_124 = di_17
	branch Mem14[es_73:di_124:byte] == 0x00 l0800_BFAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFB0:
	word16 cx_33 = ~cx_22
	selector es_76 = SLICE(ptrArg02, selector, 16)
	word16 di_68 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBA:
	branch cx_33 == 0x0000 l0800_BFBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF9E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBA_2:
	Mem69[es_76:di_68:byte] = Mem52[es_73:si_18:byte]
	si_18 = si_18 + 0x0001
	di_68 = di_68 + 0x0001
	cx_33 = cx_33 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BFC7(segptr32 ptrArg02, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut: ax cx
// Trashed: SCZDO ax cx es Top
// Preserved: bp di sp
fn0800_BFC7_entry:
	word16 wArg04_68 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFC7:
	word16 di_16 = SLICE(ptrArg02, word16, 0)
	selector es_62 = SLICE(ptrArg02, selector, 16)
	word16 ax_13 = 0x0000
	branch wArg04_68 != 0x0000 l0800_BFD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFD5:
	branch di_16 == 0x0000 l0800_BFE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFD9:
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDD:
	branch cx_20 == 0x0000 l0800_BFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDD_1:
	di_16 = di_106 + 0x0001
	cx_20 = cx_20 - 0x0001
	di_106 = di_16
	branch Mem11[es_62:di_106:byte] == 0x00 l0800_BFDD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDF:
	cx = 0x0000
	ax_13 = ~cx_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFE3:
	cxOut = cx
	return ax_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BFC7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BFE6(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_BFE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFE6:
	word16 di_19 = SLICE(ptrArg06, word16, 0)
	selector es_96 = SLICE(ptrArg06, selector, 16)
	word16 ax_123 = wArg0A
	word16 cx_22 = wArg0A
	branch wArg0A == 0x0000 l0800_C018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFA:
	di_30 = di_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFE:
	word16 di_30
	branch cx_22 == 0x0000 l0800_C000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFE_1:
	di_30 = di_151 + 0x0001
	cx_22 = cx_22 - 0x0001
	di_151 = di_30
	branch Mem14[es_96:di_151:byte] == 0x00 l0800_BFFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C000:
	word16 cx_41 = wArg0A - cx_22
	word16 di_153 = di_19
	selector ds_97 = SLICE(ptrArg02, selector, 16)
	word16 si_152 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C009:
	branch cx_41 == 0x0000 l0800_C00B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C009_2:
	si_152 = si_152 + 0x0001
	di_153 = di_153 + 0x0001
	cx_41 = cx_41 - 0x0001
	branch Mem14[ds_97:si_152:byte] != Mem14[es_96:di_153:byte] l0800_C009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C00B:
	ax_123 = (uint16) (uint8) (Mem14[ds_97:si_152 - 0x0001:byte] - Mem14[es_96:di_153 - 0x0001:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C018:
	return ax_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BFE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C01E(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_C01E_entry:
	word16 wArg04_117 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C01E:
	word16 di_17 = SLICE(ptrArg06, word16, 0)
	selector es_90 = SLICE(ptrArg06, selector, 16)
	word16 si_18 = di_17
	word16 cx_23 = wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C030:
	branch cx_23 == 0x0000 l0800_C032
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C030_1:
	di_17 = di_150 + 0x0001
	cx_23 = cx_23 - 0x0001
	di_150 = di_17
	branch Mem14[es_90:di_150:byte] == 0x00 l0800_C030
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C032:
	selector es_98 = SLICE(ptrArg02, selector, 16)
	word16 di_76 = SLICE(ptrArg02, word16, 0)
	word16 cx_55 = wArg0A - cx_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C03E:
	branch cx_55 == 0x0000 l0800_C040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C040:
	word16 cx_58 = cx_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C042:
	branch cx_58 == 0x0000 l0800_C044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C044:
	return wArg04_117
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C01E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C042_1:
	Mem77[es_98:di_76:byte] = 0x00
	di_76 = di_76 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C03E_2:
	Mem86[es_98:di_76:byte] = Mem82[es_90:si_18:byte]
	si_18 = si_18 + 0x0001
	di_76 = di_76 + 0x0001
	cx_55 = cx_55 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C04F(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax cx edx
// Trashed: SCZDO ax bx cx edx es Top
// Preserved: bp si sp
fn0800_C04F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C04F:
	fn0800_C379(ds)
	word16 si_36 = Mem32[ptrArg02:word16]
	int32 dx_ax_42 = (int32) (si_36 + 0xF844 >> 0x0002)
	word16 ax_30 = Mem13[ds:0x26E4:word16] + 0x12CE + (Mem13[ds:0x26E2:word16] <u 0xA600)
	byte ch_442
	word16 dx_443
	fn0800_8F18(0x1F80, SLICE(dx_ax_42, word16, 16), 0x0786, SLICE(dx_ax_42, word16, 0), out ch_442, out dx_443)
	int32 dx_ax_436 = <invalid>
	int32 dx_ax_72 = (int32) (si_36 + 0xF844 & 0x0003)
	byte ch_444
	word16 dx_445
	fn0800_8F18(0x3380, SLICE(dx_ax_72, word16, 16), 0x01E1, SLICE(dx_ax_72, word16, 0), out ch_444, out dx_445)
	ui32 v17_v16_306 = SEQ(ax_30, v16_62) + dx_ax_436
	int32 dx_ax_437 = <invalid>
	ui32 v20_v19_308 = SEQ(SLICE(v17_v16_306, word16, 16), v19_92) + dx_ax_437
	word16 v20_96 = SLICE(v20_v19_308, word16, 16)
	word16 v16_62 = (word16) v17_v16_306
	word16 v19_92 = (word16) v20_v19_308
	word16 wLoc04_329 = v20_96
	branch (si_36 + 0xF844 & 0x0003) == 0x0000 l0800_C0B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0B0:
	0x00015180 = 0x005180
	ui32 v23_v22_309 = SEQ(v20_96, v22_101) + 0x00015180
	word16 v22_101 = (word16) v23_v22_309
	wLoc04_329 = SLICE(v23_v22_309, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0B9:
	word16 cx_108 = 0x0000
	word16 si_120 = (int16) Mem112[ptrArg02 + 0x0003:byte] - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0D0:
	branch si_120 > 0x0000 l0800_C0C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0C8:
	si_120 = si_120 - 0x0001
	cx_108 = cx_108 + (int16) Mem112[ds:si_120 + 0x26B4:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0D4:
	word16 cx_141 = cx_108 + ((int16) Mem112[ptrArg02 + 0x0002:byte] - 0x0001)
	branch Mem112[ptrArg02 + 0x0003:byte] <= 0x02 l0800_C0EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0E6:
	branch (Mem112[ptrArg02:word16] & 0x0003) != 0x0000 l0800_C0EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0ED:
	cx_141 = cx_141 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0EE:
	word16 ax_170 = SLICE(cx_141 *s 0x0018, word16, 0) + (uint16) ((uint8) Mem112[ptrArg06 + 0x0001:byte])
	word16 si_171 = ax_170
	branch Mem162[ds:0x26E6:word16] == 0x0000 l0800_C128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C10B:
	branch fn0800_C553(ds, Mem184[ptrArg02:word16] + 0xF84E, 0x0000, cx_141, SLICE((uint16) (uint8) Mem162[ptrArg06 + 0x0001:byte], byte, 0)) == 0x0000 l0800_C128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C127:
	si_171 = ax_170 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C128:
	int32 dx_ax_210 = (int32) si_171
	byte ch_446
	word16 dx_447
	fn0800_8F18(0x0E10, SLICE(dx_ax_210, word16, 16), 0x0000, SLICE(dx_ax_210, word16, 0), out ch_446, out dx_447)
	int32 dx_ax_438 = <invalid>
	int32 dx_ax_247 = (int32) (uint16) (uint8) Mem240[ptrArg06:byte]
	byte ch_448
	word16 dx_449
	fn0800_8F18(0x003C, SLICE(dx_ax_247, word16, 16), 0x0000, SLICE(dx_ax_247, word16, 0), out ch_448, out dx_449)
	int32 dx_ax_439 = <invalid>
	ui32 v27_v26_311 = SEQ(wLoc04_329, v26_235) + dx_ax_438
	ui32 bx_cx_314 = dx_ax_439 + (int32) ((uint16) ((uint8) Mem253[ptrArg06 + 0x0003:byte]))
	cxOut = (word16) bx_cx_314
	dxOut = <invalid>
	word16 v30_291 = (word16) (SEQ(SLICE(v27_v26_311, word16, 16), v30_291) + bx_cx_314)
	word16 v26_235 = (word16) v27_v26_311
	return v30_291
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C04F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_C177(selector ds, word16 wArg04, segptr32 ptrArg06, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0004:[0..15] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx edx es Top
// Preserved: bp sp
fn0800_C177_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C177:
	fn0800_C379(ds)
	ax_25 = Mem7[ds:0x26E4:word16] + 0x12CE + (Mem7[ds:0x26E2:word16] <u 0xA600)
	Mem35[ptrArg0A + 0x0002:byte] = 0x00
	ui32 v11_v10_533 = SEQ(wArg04, v10_26) - SEQ(ax_25, dx_21 + 0xA600)
	word16 dx_719
	Mem63[ptrArg0A + 0x0003:byte] = SLICE(fn0800_8BCA(v11_v10_533, 0x003C, 0x0000, out dx_719), byte, 0)
	word16 sp_54 = <invalid>
	Mem69[ss:sp_54 - 2:word16] = 0x0000
	Mem71[ss:sp_54 - 4:word16] = 0x003C
	Mem74[ss:sp_54 - 6:word16] = SLICE(v11_v10_533, word16, 16)
	word16 v10_26 = (word16) v11_v10_533
	Mem77[ss:sp_54 - 8:word16] = v10_26
	word16 dx_81
	word16 cx_720
	word16 bx_721
	word16 ax_78 = fn0800_8BBB(Mem77[ss:sp_54 - 8:word32], Mem77[ss:sp_54 - 4:word16], Mem77[ss:sp_54 - 2:word16], out cx_720, out dx_81, out bx_721)
	word16 sp_82 = <invalid>
	Mem94[ss:sp_82 - 2:word16] = 0x0000
	Mem96[ss:sp_82 - 4:word16] = 0x003C
	Mem99[ss:sp_82 - 6:word16] = dx_81
	Mem102[ss:sp_82 - 8:word16] = ax_78
	word16 dx_722
	Mem116[ptrArg0A:byte] = SLICE(fn0800_8BCA(Mem102[ss:sp_82 - 8:word32], Mem102[ss:sp_82 - 4:word16], Mem102[ss:sp_82 - 2:word16], out dx_722), byte, 0)
	word16 sp_107 = <invalid>
	Mem122[ss:sp_107 - 2:word16] = 0x0000
	Mem124[ss:sp_107 - 4:word16] = 0x003C
	Mem127[ss:sp_107 - 6:word16] = dx_81
	Mem130[ss:sp_107 - 8:word16] = ax_78
	word16 dx_134
	word16 bx_724
	word16 cx_723
	word16 ax_131 = fn0800_8BBB(Mem130[ss:sp_107 - 8:word32], Mem130[ss:sp_107 - 4:word16], Mem130[ss:sp_107 - 2:word16], out cx_723, out dx_134, out bx_724)
	word16 sp_135 = <invalid>
	Mem147[ss:sp_135 - 2:word16] = 0x0000
	Mem149[ss:sp_135 - 4:word16] = 0x88F8
	Mem152[ss:sp_135 - 6:word16] = dx_134
	Mem155[ss:sp_135 - 8:word16] = ax_131
	word16 dx_726
	word16 cx_725
	word16 bx_727
	Mem171[ptrArg06:word16] = (fn0800_8BBB(Mem155[ss:sp_135 - 8:word32], Mem155[ss:sp_135 - 4:word16], Mem155[ss:sp_135 - 2:word16], out cx_725, out dx_726, out bx_727) << 0x0002) + 0x07BC
	word16 sp_160 = <invalid>
	Mem177[ss:sp_160 - 2:word16] = 0x0000
	Mem179[ss:sp_160 - 4:word16] = 0x88F8
	Mem182[ss:sp_160 - 6:word16] = dx_134
	Mem185[ss:sp_160 - 8:word16] = ax_131
	word16 dx_189
	word16 ax_186 = fn0800_8BCA(Mem185[ss:sp_160 - 8:word32], Mem185[ss:sp_160 - 4:word16], Mem185[ss:sp_160 - 2:word16], out dx_189)
	word16 sp_190 = <invalid>
	word16 wArg04_553 = dx_189
	word16 wArg02_554 = ax_186
	branch dx_189 < 0x0000 l0800_C26F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C22B:
	branch dx_189 != 0x0000 l0800_C234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C22D:
	branch ax_186 <u 0x2250 l0800_C26F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C234:
	Mem215[ptrArg06:word16] = Mem210[ptrArg06:word16] + 0x0001
	Mem222[ss:sp_190 - 2:word16] = 0x0000
	Mem224[ss:sp_190 - 4:word16] = 0x2238
	word16 v32_209 = dx_189 - (ax_186 <u 0x2250)
	Mem227[ss:sp_190 - 6:word16] = v32_209
	Mem230[ss:sp_190 - 8:word16] = ax_186 - 0x2250
	word16 dx_729
	word16 bx_730
	word16 cx_728
	Mem244[ptrArg06:word16] = Mem230[ptrArg06:word16] + fn0800_8BBB(Mem230[ss:sp_190 - 8:word32], Mem230[ss:sp_190 - 4:word16], Mem230[ss:sp_190 - 2:word16], out cx_728, out dx_729, out bx_730)
	word16 sp_235 = <invalid>
	Mem250[ss:sp_235 - 2:word16] = 0x0000
	Mem252[ss:sp_235 - 4:word16] = 0x2238
	Mem255[ss:sp_235 - 6:word16] = v32_209
	Mem258[ss:sp_235 - 8:word16] = ax_186 - 0x2250
	sp_190 = <invalid>
	wArg04_553 = dx_262
	word16 dx_262
	wArg02_554 = fn0800_8BCA(Mem258[ss:sp_235 - 8:word32], Mem258[ss:sp_235 - 4:word16], Mem258[ss:sp_235 - 2:word16], out dx_262)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C26F:
	branch Mem272[ds:0x26E6:word16] == 0x0000 l0800_C2B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C276:
	word16 sp_280 = sp_190 - 2
	Mem282[ss:sp_280:word16] = 0x0000
	Mem284[ss:sp_280 - 2:word16] = 0x0018
	Mem288[ss:sp_280 - 4:word16] = wArg04_553
	Mem291[ss:sp_280 - 6:word16] = wArg02_554
	word16 sp_296 = <invalid>
	word16 dx_734
	Mem302[ss:sp_296 - 2:word16] = fn0800_8BCA(Mem291[ss:sp_280 - 6:word32], Mem291[ss:sp_280 - 2:word16], Mem291[ss:sp_280:word16], out dx_734)
	Mem308[ss:sp_296 - 4:word16] = 0x0000
	Mem310[ss:sp_296 - 6:word16] = 0x0018
	Mem313[ss:sp_296 - 8:word16] = wArg04_553
	Mem316[ss:sp_296 - 10:word16] = wArg02_554
	word16 sp_321 = <invalid>
	word16 dx_736
	word16 bx_737
	word16 cx_735
	Mem327[ss:sp_321 - 2:word16] = fn0800_8BBB(Mem316[ss:sp_296 - 10:word32], Mem316[ss:sp_296 - 6:word16], Mem316[ss:sp_296 - 4:word16], out cx_735, out dx_736, out bx_737)
	Mem330[ss:sp_321 - 4:word16] = 0x0000
	Mem338[ss:sp_321 - 6:word16] = Mem330[ptrArg06:word16] + 0xF84E
	sp_190 = sp_321 + 0x0002
	branch fn0800_C553(ds, Mem338[ss:sp_321 - 6:word16], Mem338[ss:sp_321 - 4:word16], Mem338[ss:sp_321 - 2:word16], Mem338[ss:sp_321:byte]) == 0x0000 l0800_C2B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2AC:
	word16 v43_352 = wArg02_554 + 0x0001
	wArg02_554 = v43_352
	wArg04_553 = wArg04_553 + (v43_352 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2B4:
	word16 sp_364 = sp_190 - 2
	Mem366[ss:sp_364:word16] = 0x0000
	Mem368[ss:sp_364 - 2:word16] = 0x0018
	Mem372[ss:sp_364 - 4:word16] = wArg04_553
	Mem375[ss:sp_364 - 6:word16] = wArg02_554
	word16 dx_731
	Mem389[ptrArg0A + 0x0001:byte] = SLICE(fn0800_8BCA(Mem375[ss:sp_364 - 6:word32], Mem375[ss:sp_364 - 2:word16], Mem375[ss:sp_364:word16], out dx_731), byte, 0)
	word16 sp_380 = <invalid>
	Mem395[ss:sp_380 - 2:word16] = 0x0000
	Mem397[ss:sp_380 - 4:word16] = 0x0018
	Mem400[ss:sp_380 - 6:word16] = wArg04_553
	Mem403[ss:sp_380 - 8:word16] = wArg02_554
	word16 dx_407
	word16 bx_733
	word16 cx_732
	word16 ax_404 = fn0800_8BBB(Mem403[ss:sp_380 - 8:word32], Mem403[ss:sp_380 - 4:word16], Mem403[ss:sp_380 - 2:word16], out cx_732, out dx_407, out bx_733)
	word16 v50_419 = dx_407 + (ax_404 <u 0x0001)
	word16 wArg02_574 = ax_404 + 0x0001
	word16 wArg04_575 = v50_419
	branch (Mem420[ptrArg06:word16] & 0x0003) != 0x0000 l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2F3:
	branch v50_419 < 0x0000 l0800_C30B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2F9:
	branch v50_419 > 0x0000 l0800_C301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2FB:
	branch ax_404 <=u 0xFFC5 l0800_C30B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C30B:
	branch v50_419 != 0x0000 l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C311:
	branch ax_404 != 0xFFC5 l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C317:
	Mem442[ptrArg06 + 0x0003:byte] = 0x02
	Mem443[ptrArg06 + 0x0002:byte] = 0x1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C301:
	wArg02_574 = ax_404
	wArg04_575 = v50_419 - (ax_404 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C326:
	Mem460[ptrArg06 + 0x0003:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C34D:
	int32 dx_ax_473 = (int32) (int16) Mem463[ds:(int16) Mem463[ptrArg06 + 0x0003:byte] + 0x26B4:byte]
	byte bArg02_597 = SLICE(wArg02_574, byte, 0)
	word16 dx_474 = SLICE(dx_ax_473, word16, 16)
	word16 ax_478 = SLICE(dx_ax_473, word16, 0)
	branch dx_474 < wArg04_575 l0800_C330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C362:
	branch dx_474 != wArg04_575 l0800_C369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C364:
	branch ax_478 <u wArg02_574 l0800_C330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C330:
	ui32 v57_v56_535 = SEQ(wArg04_575, v56_495) - (int32) ((int16) Mem463[ds:(int16) Mem463[ptrArg06 + 0x0003:byte] + 0x26B4:byte])
	Mem505[ptrArg06 + 0x0003:byte] = Mem501[ptrArg06 + 0x0003:byte] + 0x01
	word16 v56_495 = (word16) v57_v56_535
	wArg02_574 = v56_495 (alias)
	wArg04_575 = SLICE(v57_v56_535, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C369:
	Mem514[ptrArg06 + 0x0003:byte] = Mem463[ptrArg06 + 0x0003:byte] + 0x01
	Mem517[ptrArg06 + 0x0002:byte] = bArg02_597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C377:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C177_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_C379(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx edx es Top
// Preserved: bp si sp
fn0800_C379_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C379:
	fn0800_AFCB(ds, SEQ(ds, 0x26E8))
	word32 dx_ax_509 = <invalid>
	word16 dx_21 = SLICE(dx_ax_509, word16, 16)
	word16 ax_20 = SLICE(dx_ax_509, word16, 0)
	branch (ax_20 | dx_21) != 0x0000 l0800_C397
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C397:
	word16 cx_510
	branch fn0800_BFC7(dx_ax_509, out cx_510) >=u 0x0004 l0800_C3AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3AA:
	branch ((int16) Mem45[ds:(int16) Mem45[dx_ax_509:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3BD:
	branch ((int16) Mem45[ds:(int16) Mem45[dx_ax_509 + 0x0001:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3D1:
	branch ((int16) Mem45[ds:(int16) Mem45[dx_ax_509 + 0x0002:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3E5:
	branch Mem45[dx_ax_509 + 0x0003:byte] == 0x2D l0800_C404
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3EF:
	branch Mem45[dx_ax_509 + 0x0003:byte] == 0x2B l0800_C404
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3F6:
	branch (Mem45[ds:(int16) Mem45[dx_ax_509 + 0x0003:byte] + 0x2251:byte] & 0x02) == 0x00 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C404:
	branch ((int16) Mem45[ds:(int16) Mem45[dx_ax_509 + 0x0003:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C418:
	branch ((int16) Mem45[ds:(int16) Mem45[dx_ax_509 + 0x0004:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C467:
	fn0800_B083(SEQ(Mem134[ds:0x26E0:word16], Mem138[ds:0x26DE:word16]), 0x00, 0x0004)
	fn0800_C01E(SEQ(Mem162[ds:0x26DC:word16], Mem165[ds:0x26DA:word16]), dx_ax_509, 0x0003)
	Mem183[Mem168[ds:0x26DA:segptr32] + 0x0003:byte] = 0x00
	word32 edx_196 = <invalid>
	word16 dx_220
	byte ch_512
	word16 dx_511
	word16 ax_219 = fn0800_8F18(0x0E10, SLICE(edx_196, word16, 0), 0x0000, fn0800_A471(ds, SEQ(dx_21, ax_20 + 0x0003), out dx_511), out ch_512, out dx_220)
	Mem226[ds:0x26E4:word16] = dx_220
	Mem227[ds:0x26E2:word16] = ax_219
	Mem228[ds:0x26E6:word16] = 0x0000
	word16 si_229 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C542:
	branch Mem228[dx_ax_509 + si_229:byte] == 0x00 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C54B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4CA:
	branch (Mem228[ds:(int16) Mem228[dx_ax_509 + si_229:byte] + 0x2251:byte] & 0x0C) == 0x00 l0800_C541
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C541:
	si_229 = si_229 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4DA:
	word16 cx_513
	branch fn0800_BFC7(SEQ(dx_21, ax_20 + si_229), out cx_513) <u 0x0003 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4ED:
	branch ((int16) Mem259[ds:(int16) Mem259[dx_21:ax_20 + 0x0001 + si_229:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C501:
	branch ((int16) Mem259[ds:(int16) Mem259[dx_21:ax_20 + 0x0002 + si_229:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C515:
	fn0800_C01E(SEQ(Mem304[ds:0x26E0:word16], Mem307[ds:0x26DE:word16]), SEQ(dx_21, ax_20 + si_229), 0x0003)
	Mem326[Mem310[ds:0x26DE:segptr32] + 0x0003:byte] = 0x00
	Mem327[ds:0x26E6:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3A7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C394:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C42C:
	Mem329[ds:0x26E6:word16] = 0x0001
	Mem330[ds:0x26E4:word16] = 0x0000
	Mem331[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(SEQ(Mem338[ds:0x26DC:word16], Mem341[ds:0x26DA:word16]), SEQ(ds, 0x26EB))
	fn0800_BF9E(SEQ(Mem360[ds:0x26E0:word16], Mem363[ds:0x26DE:word16]), SEQ(ds, 0x26EF))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C54E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C379_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..7]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_C553_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C553:
	branch wArg04 != 0x0000 l0800_C589
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C589:
	branch wArg04 <u 0x0003 l0800_C59A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C58F:
	branch (wArg02 + 0x0046 & 0x0003) == 0x0000 l0800_C59D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C59A:
	wArg06 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C59D:
	wArg06 = wArg06 + Mem29[ds:(wArg04 - 0x0001 << 0x0001) + 0x26C0:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C55D:
	word16 si_167 = wArg06
	branch wArg06 <u 0x003B l0800_C572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C566:
	branch (wArg02 + 0x0046 & 0x0003) != 0x0000 l0800_C572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C571:
	si_167 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C572:
	wArg04 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C57C:
	branch Mem55[ds:(wArg04 << 0x0001) + 0x26C0:word16] <=u si_167 l0800_C579
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C579:
	wArg04 = wArg04 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C587:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5AA:
	word16 ax_140
	branch wArg04 <u 0x0004 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B0:
	branch wArg04 == 0x0004 l0800_C5BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B2:
	branch wArg04 >u 0x000A l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B8:
	branch wArg04 != 0x000A l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5BA:
	word16 cx_103
	branch wArg02 <= 0x0010 l0800_C5D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5C5:
	branch wArg04 != 0x0004 l0800_C5D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5D4:
	cx_103 = Mem67[ds:(wArg04 << 0x0001) + 0x26C0:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5CB:
	cx_103 = Mem67[ds:(wArg04 << 0x0001) + 0x26BE:word16] + 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5D8:
	branch (SLICE(wArg02 + 0x07B2, byte, 0) & 0x03) == 0x00 l0800_C5E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5E4:
	cx_103 = cx_103 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5E5:
	word16 cx_126 = cx_103 - (uint16) ((uint32) ((uint16) ((SLICE(wArg02 *u 0x016D, word16, 0) + ((wArg02 + 0x0001 >> 0x0002) + cx_103)) + 0x0004)) % 0x0007)
	branch wArg04 != 0x0004 l0800_C61A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C61A:
	branch wArg06 <u cx_126 l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C61E:
	branch wArg06 != cx_126 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C620:
	branch bArg08 >u 0x01 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C60C:
	branch wArg06 >u cx_126 l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C610:
	branch wArg06 != cx_126 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C612:
	branch bArg08 <u 0x02 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C62B:
	ax_140 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C618:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C626:
	ax_140 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C62D:
	return ax_140
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C553_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C632(selector ds, word16 wArg02, word32 dwArg04, word16 wArg08, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax bx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_C632_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C632:
	word16 ax_123
	branch wArg02 <u Mem15[ds:0x24E8:word16] l0800_C64E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C64E:
	branch wArg08 >=u 0x0001 l0800_C65C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C65C:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_C677
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C668:
	word16 bx_471
	word16 cx_469
	word16 dx_470
	fn0800_8E29(ds, wArg02, 0x00000000, 0x02, out cx_469, out dx_470, out bx_471)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C677:
	branch (Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_C696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C696:
	Mem62[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	bx = wArg02 << 0x0001
	word16 wLoc08_296 = wArg08
	segptr32 ptrLoc0E_309 = dwArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C727:
	segptr32 ptrLoc06_463 = SEQ(ss, fp - 0x0090)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C731:
	word16 si_175
	word16 ax_126
	word16 wLoc04_313 = SLICE(ptrLoc06_463, word16, 16)
	word16 wLoc0E_310 = SLICE(ptrLoc0E_309, word16, 0)
	word16 wLoc0C_375 = SLICE(ptrLoc0E_309, word16, 16)
	word16 wLoc06_300 = SLICE(ptrLoc06_463, word16, 0)
	segptr32 ptrLoc06_314 = ptrLoc06_463
	branch wLoc08_296 == 0x0000 l0800_C73A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C73A:
	si_175 = wLoc06_300 - (fp - 0x0090)
	dx = 0x0000 - (si_175 <u 0x0000)
	branch si_175 <=u 0x0000 l0800_C770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C74E:
	word16 cx_110
	word16 dx_473
	word16 ax_108 = fn0800_C779(ds, wArg02, SEQ(ss, fp - 0x0090), si_175, out cx_110, out dx_473, out bx)
	dx = ax_108
	branch ax_108 == si_175 l0800_C770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C770:
	ax_123 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C762:
	branch ax_108 == 0xFFFF l0800_C71A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C767:
	ax_126 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C737:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6B4:
	word16 v20_127 = wLoc08_296 - 0x0001
	wLoc08_296 = v20_127
	byte al_134 = Mem131[ptrLoc0E_309:byte]
	ptrLoc0E_309 = SEQ(wLoc0C_375, wLoc0E_310 + 0x0001) (alias)
	branch al_134 != 0x0A l0800_C6D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6C7:
	Mem141[ptrLoc06_463:byte] = 0x0D
	ptrLoc06_314 = SEQ(wLoc04_313, wLoc06_300 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6D1:
	Mem152[ptrLoc06_314:byte] = al_134
	word16 wLoc06_321 = SLICE(ptrLoc06_314, word16, 0)
	word16 dx_158 = wLoc06_321 + 0x0001 - (fp - 0x0090)
	word16 bx_161 = 0x0000 - (dx_158 <u 0x0000)
	word16 wLoc04_377 = SLICE(ptrLoc06_314, word16, 16)
	bx = bx_161
	ptrLoc06_463 = SEQ(wLoc04_377, wLoc06_321 + 0x0001) (alias)
	branch bx_161 < 0x0000 l0800_C731
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6EF:
	branch bx_161 != 0x0000 l0800_C6F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6F1:
	ptrLoc06_463 = SEQ(wLoc04_377, wLoc06_321 + 0x0001) (alias)
	branch dx_158 <u 0x0080 l0800_C731
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6F7:
	si_175 = wLoc06_321 + 0x0001 - (fp - 0x0090)
	word16 cx_196
	word16 dx_474
	word16 ax_194 = fn0800_C779(ds, wArg02, SEQ(ss, fp - 0x0090), si_175, out cx_196, out dx_474, out bx)
	dx = ax_194
	branch ax_194 == si_175 l0800_C727
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C715:
	branch ax_194 != 0xFFFF l0800_C71F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C71F:
	ax_126 = wArg08 - v20_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C76A:
	ax_123 = ax_126 + dx - si_175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C71A:
	ax_123 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C76E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C683:
	word16 cx_472
	ax_123 = fn0800_C779(ds, wArg02, dwArg04, wArg08, out cx_472, out dx, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C657:
	ax_123 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C644:
	ax_123 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C773:
	dxOut = dx
	bxOut = bx
	return ax_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C632_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C779(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_C779_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C779:
	word16 ax_37
	word16 wLoc04_62
	word16 bx_10 = wArg02 << 0x0001
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0001) == 0x0000 l0800_C78F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C78F:
	bx_10 = wArg02
	cx = wArg08
	dx = SLICE(ptrArg04, word16, 0) (alias)
	word16 ax_23
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_23) l0800_C7AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7AF:
	wLoc04_62 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7A0:
	Mem34[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem30[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x1000
	bx_10 = wArg02 << 0x0001
	ax_37 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C789:
	wLoc04_62 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7B0:
	ax_37 = fn0800_8D2B(ds, wLoc04_62)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7B3:
	cxOut = cx
	dxOut = dx
	bxOut = bx_10
	return ax_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C779_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_0ADB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: sp
fn1483_0ADB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ADB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0ADB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_0ADC(word32 ds_di, word32 ss_bp, word16 ax, word16 cx, word16 dx, byte bl, byte bh, word16 si, selector es, selector fs, byte FPUF, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg0A, word16 wArg018C, word16 wArg019D, selector psegArg01A2, byte bArg02BF, byte bArg0F9E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bh:[0..7] bl:[0..7] cs:[0..15] cx:[0..15] dx:[0..15] es:[0..15] FPUF:[0..7] fs:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +000A:[0..15] Stack +018C:[0..15] Stack +019D:[0..15] Stack +01A2:[0..15] Stack +02BF:[0..7] Stack +0F9E:[0..7]
// LiveOut:
// Trashed: SCZDOP ax bp bx cx di ds dx es si Top
// Preserved: sp
fn1483_0ADC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ADC:
	int8 Top_30 = fn1483_0D3F(ds_di, ss_bp, ax, cx, dx, bl, bh, si, es, fs, FPUF, wLoc02, wArg00, wArg02, wArg04, wArg0A, wArg018C, wArg019D, psegArg01A2, bArg02BF, bArg0F9E)
	word32 es_di_78 = <invalid>
	ST40[Top_30:real64] = Mem0[es_di_78 + 0xE086:real32] - ST[Top_30:real64]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0ADC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn1483_0C11(word32 ds_si, word32 es_di, byte al, word16 cx, word16 ecx_16_16, word16 bx, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bp:[0..15] cs:[0..15] cx:[0..15] ebx:[0..15] ecx_16_16:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31] ss:[0..15]
// LiveOut: Top
// Trashed: SCZDO bp di ds dx eax ebx ecx es si ss Top
// Preserved: sp
fn1483_0C11_entry:
	word16 si = SLICE(ds_si, word16, 0)
	word16 bx_40 = SLICE(ebx, word16, 0)
	selector es = SLICE(es_di, selector, 16)
	word16 di = SLICE(es_di, word16, 0)
	selector ds = SLICE(ds_si, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C11:
	branch al != Mem11[ss:si:byte] l1483_0C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C4D:
	word32 eax_26 = SEQ(eax_24_8, al + 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C53_thunk_fn1483_0C55:
	return fn1483_0C55(SLICE(eax_26, word16, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C1B:
	branch al - 0x8C - (al <u Mem11[ss:si:byte]) != 0x00 && cx != 0x0001 l1483_0C6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C6C:
	__daa(0x55, &0x55)
	word16 bx_59
	word16 di_60
	selector ds_61
	word16 dx_62
	selector es_64
	word16 si_65
	word16 cx_191
	ui24 dh_ax_147 = SEQ(SLICE(dx_62, byte, 8), fn1483_1BB8(ds_si, 0x55, 0x19, cx - 0x0001, ecx_16_16, 0x8000, bx_40, bp, di, es, out cx_191, out dx_62, out bx_59, out si_65, out di_60, out es_64, out ds_61)) + SEQ(Mem41[ds_61:si_65 + 0x147C:byte], Mem41[ds_61:bx_59 + 0x3303:word16])
	word16 di_72 = di_60 + Mem41[ds_61:bx_59:word16]
	word16 ax_73 = (word16) dh_ax_147
	word16 v23_92 = Mem41[ds_61:ax_73 + 0x020E + di_72:word16] + di_72
	Mem93[ds_61:ax_73 + 0x020E + di_72:word16] = v23_92
	word32 ss_bp_190 = <invalid>
	word32 ecx_63 = <invalid>
	word16 ax_88 = bx_59 - 0x0903 - (SLICE(dh_ax_147, byte, 16) <u 0x00)
	selector ss_66 = SLICE(ss_bp_190, selector, 16)
	word16 cx_95 = SLICE(ecx_63, word16, 0)
	byte al_100 = SLICE(ax_88, byte, 0)
	byte ah_101 = SLICE(ax_88, byte, 8)
	branch v23_92 != 0x0000 && cx_95 != 0x0001 l1483_0C85_thunk_fn1483_0CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C85_thunk_fn1483_0CA0:
	int8 Top_108
	fn1483_0CA0(SEQ(es_64, di_72), ss_bp_190, al_100, ah_101, cx_95 - 0x0001, dx_62, ax_73, si_65, ds_61, out Top_108)
	return Top_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C87:
	word16 ax_115 = Mem93[ds_61:ax_73:word16]
	Mem117[ss_66:bx_40:word16] = si_65
	Mem122[es_64:di_72:byte] = Mem117[ds_61:si_65:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C8F_thunk_fn1483_0C91:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	selector stackArg0 = <invalid>
	int8 Top_138
	selector es_194
	fn1483_0C91(SEQ(ds, bx), SEQ(ss, bp), ax_115 * 0x0002, cx_95 - 0x0001, si_65 + 0x0001, di_72 + 0x0001, stackArg0, out es_194, out Top_138)
	return Top_138
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C11_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C24:
	Mem140[es_di:word16] = 0x1955
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn1483_0C55(word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15]
// LiveOut: Top
// Trashed: SCZO ax di dx si sp Top
// Preserved: ax
fn1483_0C55_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C55:
	branch Z l1483_0C55_thunk_fn1483_0C11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C55_thunk_fn1483_0C11:
	return fn1483_0C11(SEQ(ds, si), SEQ(es, di), SLICE(ax, byte, 0), cx, ecx_16_16, bx, bp)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C57:
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C55_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0C91(word32 ds_bx, word32 ss_bp, word16 ax, word16 cx, word16 si, word16 di, selector psegArg00, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cx:[0..15] di:[0..15] Sequence ds:bx:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es sp Top
// Preserved:
fn1483_0C91_entry:
	byte al_12 = SLICE(ax, byte, 0)
	byte ah_19 = SLICE(ax, byte, 8)
	byte ch = SLICE(cx, byte, 8)
	word16 bx = SLICE(ds_bx, word16, 0)
	selector ds = SLICE(ds_bx, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C91:
	byte al_14 = al_12 + ch
	word16 ax_20 = SEQ(ah_19, al_14)
	branch !OVERFLOW(al_14) l1483_0C96_thunk_fn1483_0C55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C96_thunk_fn1483_0C55:
	int8 Top_31 = fn1483_0C55(ax_20)
	esOut = <invalid>
	TopOut = Top_31
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C98:
	word16 dx_33 = Mem0[ds_bx + si:word16] *s 0x0018
	branch dx_33 == 0x0000 && cx != 0x0001 l1483_0CA9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9B_thunk_fn1483_0CA0:
	int8 Top_45
	word16 di_43 = fn1483_0CA0(SEQ(psegArg00, di), ss_bp, al_14, ah_19, cx - 0x0001, dx_33, bx, si, ds, out Top_45)
	esOut = <invalid>
	TopOut = Top_45
	return di_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9D:
	Mem51[ds:bx + 0x2203 + si:word16] = Mem0[ds:bx + 0x2203 + si:word16] + (cx - 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9D_thunk_fn1483_0CA0:
	int8 Top_61
	word16 di_59 = fn1483_0CA0(SEQ(psegArg00, di), ss_bp, al_14, ah_19, cx - 0x0001, dx_33, bx, si, ds, out Top_61)
	esOut = <invalid>
	TopOut = Top_61
	return di_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C91_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CA0(word32 es_di, word32 ss_bp, byte al, byte ah, word16 cx, word16 dx, word16 bx, word16 si, selector ds, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah:[0..7] al:[0..7] bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] Sequence es:di:[0..31] Sequence ss:bp:[0..31] si:[0..15]
// LiveOut: di Top
// Trashed: SCZO ax bp bx cx di dx Top
// Preserved: sp
fn1483_0CA0_entry:
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 di = SLICE(es_di, word16, 0)
	selector ss = SLICE(ss_bp, selector, 16)
	selector es = SLICE(es_di, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CA0:
	word16 sp_85
	word16 ax_87
	word16 bx_88
	int8 Top_97
	call fn1483_FD4E (retsize: 2;)
		uses: ax:SEQ(ah + Mem0[ds:bx + si:byte], al & Mem0[ds:0x3101:byte]),bp:bp,bx:bx,cx:cx,di:di,ds:ds,dx:dx,es:es,si:si,sp:fp,ss:ss,Top:0
		defs: ax:ax_87,bx:bx_88,sp:sp_85,Top:Top_97
	byte bl_107 = SLICE(bx_88, byte, 0)
	byte ah_108 = SLICE(ax_87, byte, 8)
	byte bh_113 = SLICE(bx_88, byte, 8)
	byte bh_130 = SLICE(bx_88, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CA9_in_fn1483_0CA0:
	word16 dx_101 = Mem0[ds:si + 0x173E:word16] *s 0x0C62
	Mem105[ds:bx_88:byte] = v22
	byte bl_109 = bl_107 + ah_108
	word16 bx_114 = SEQ(bh_113, bl_109)
	Mem116[ds:bx_114 - 0x0056 + di:byte] = __rol(Mem105[ds:bx_114 - 0x0056 + di:byte], 0xE2)
	Mem118[ss_bp + 0x007B:word16] = __ror(Mem116[ss_bp + 0x007B:word16], 0x01)
	Mem123[ds:bx_114:byte] = v28
	byte bl_124 = bl_109 & Mem123[ds:bx_114:byte]
	Mem127[es_di:byte] = SLICE(ax_87 - 0x32AC, byte, 0)
	word16 bx_131 = SEQ(bh_130, bl_124)
	Mem134[ds:bx_131:word16] = v29
	Mem139[ds:di + 0x0015:word16] = ax_87 - 0xBDCB
	word16 bx_144
	int8 Top_147
	call fn1483_4FE0 (retsize: 2;)
		uses: ax:v30,bp:bp - 0x0001,bx:bx_131,cx:di + 0x0001 - si,di:di + 0x0001,ds:ds,dx:dx_101,es:es,si:si,sp:sp_85,ss:ss,Top:Top_97
		defs: bx:bx_144,Top:Top_147
	Mem151[ds:0xF7E3:word16] = v31
	Mem155[ds:bx_144 + (di + 0x0001):word16] = v32
	__inw(0x8B)
	TopOut = Top_147
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CA0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CED(word32 es_di, word32 ss_bp, word16 ax, word16 dx, word16 bx, word16 si, selector ds, selector fs, word16 wArg00, selector psegArg02, word16 wArg06, word16 wArg0A, word16 wArg10, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] ds:[0..15] dx:[0..15] fs:[0..15] Sequence es:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0006:[0..15] Stack +000A:[0..15] Stack +0010:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es si sp Top
// Preserved:
fn1483_0CED_entry:
	word16 di = SLICE(es_di, word16, 0)
	byte bl_17 = SLICE(bx, byte, 0)
	byte bh_24 = SLICE(bx, byte, 8)
	byte al_34 = SLICE(ax, byte, 0)
	byte ah_36 = SLICE(ax, byte, 8)
	selector es = SLICE(es_di, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CED:
	word16 si_8 = si + Mem0[ds:di:word16]
	word16 v8_10 = Mem0[ds:bx + 0xF7E2 + si_8:word16] + fp
	Mem11[ds:bx + 0xF7E2 + si_8:word16] = v8_10
	Mem15[es_di:word16] = ax
	bool C_27 = SLICE(cond(v8_10), bool, 1)
	word16 bx_25 = SEQ(bh_24, bl_17 + 0x01)
	branch bl_17 != 0x01 l1483_0CE5_in_fn1483_0CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CE5_in_fn1483_0CED:
	esOut = es
	TopOut = 0
	return di + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CF8:
	Mem28[ds:bx_25 + si_8:byte] = __rcr(Mem15[ds:bx_25 + si_8:byte], 0xAC, C_27)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CF9_thunk_fn1483_0CFC:
	selector es_45
	int8 Top_46
	word16 di_43 = fn1483_0CFC(SEQ(ds, di + 0x0002), ss_bp, al_34, ah_36, wArg00, dx, bl_17 + 0x01, bh_24, si_8, fs, psegArg02, wArg06, wArg10, out es_45, out Top_46)
	esOut = es_45
	TopOut = Top_46
	return di_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CED_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CFA(word32 ds_di, word32 ss_bp, byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, word16 si, selector fs, selector psegArg00, word16 wArg04, word16 wArg0E, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah:[0..7] al:[0..7] bh:[0..7] bl:[0..7] cx:[0..15] dx:[0..15] fs:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0004:[0..15] Stack +000E:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es si Top
// Preserved: sp
fn1483_0CFA_entry:
	selector ds = SLICE(ds_di, selector, 16)
	byte ch = SLICE(cx, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFA:
	Mem10[ds:si + 0xD832:byte] = Mem0[ds:si + 0xD832:byte] - ch - C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFA_thunk_fn1483_0CFC:
	selector es_31
	int8 Top_32
	word16 di_29 = fn1483_0CFC(ds_di, ss_bp, al, ah, cx, dx, bl, bh, si, fs, psegArg00, wArg04, wArg0E, out es_31, out Top_32)
	esOut = es_31
	TopOut = Top_32
	return di_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CFC(word32 ds_di, word32 ss_bp, byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, word16 si, selector fs, selector psegArg00, word16 wArg04, word16 wArg0E, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah:[0..7] al:[0..7] bh:[0..7] bl:[0..7] cx:[0..15] dx:[0..15] fs:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0004:[0..15] Stack +000E:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es si Top
// Preserved: sp
fn1483_0CFC_entry:
	selector ds = SLICE(ds_di, selector, 16)
	word16 di = SLICE(ds_di, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFC:
	word16 bx_57 = SEQ(bh, bl ^ al)
	byte al_60 = Mem0[bx_57 + ds_di:byte]
	Mem64[ss_bp + si:word16] = 0xD1FF
	word16 ax_69 = SEQ(ah, al_60)
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D04_thunk_fn1483_0C91:
	selector es_74
	int8 Top_76
	word16 di_78 = fn1483_0C91(SEQ(ds, bx_57), ss_bp, ax_69, cx, si, di, psegArg00, out es_74, out Top_76)
	esOut = es_74
	TopOut = Top_76
	return di_78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D04_thunk_fn1483_0D06:
	word16 di_90 = fn1483_0D06(SEQ(ds, bx_57), dx, fs, psegArg00, wArg04, wArg0E)
	esOut = es
	TopOut = 0
	return di_90
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0D06(word32 ds_bx, word16 dx, selector fs, word16 wArg00, word16 wArg04, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx:[0..15] fs:[0..15] Sequence ds:bx:[0..31] Stack +0000:[0..15] Stack +0004:[0..15] Stack +000E:[0..15]
// LiveOut: di
// Trashed: SCZO ax bp bx cx di dx si sp Top
// Preserved:
fn1483_0D06_entry:
	selector ds = SLICE(ds_bx, selector, 16)
	word16 bx = SLICE(ds_bx, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D06:
	Mem10[ds_bx + 0xE209:word16] = Mem0[ds_bx + 0xE209:word16] - dx - C
	branch bx == dx l1483_0D2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D11:
	msdos_display_string(SEQ(ds, 0x0D21))
	Mem42[fs:wArg04 + 0x0052 + wArg00:byte] = Mem10[fs:wArg04 + 0x0052 + wArg00:byte] & SLICE(wArg0E, byte, 0)
	di = wArg00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D2B:
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0D06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn1483_0D3F(word32 ds_di, word32 ss_bp, word16 ax, word16 cx, word16 dx, byte bl, byte bh, word16 si, selector es, selector fs, byte FPUF, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg0C, word16 wArg018E, word16 wArg019F, selector psegArg01A4, byte bArg02C1, byte bArg0FA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bh:[0..7] bl:[0..7] cs:[0..15] cx:[0..15] dx:[0..15] es:[0..15] FPUF:[0..7] fs:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +000C:[0..15] Stack +018E:[0..15] Stack +019F:[0..15] Stack +01A4:[0..15] Stack +02C1:[0..7] Stack +0FA0:[0..7]
// LiveOut: Top
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn1483_0D3F_entry:
	word16 di = SLICE(ds_di, word16, 0)
	byte al_17 = SLICE(ax, byte, 0)
	byte ah_19 = SLICE(ax, byte, 8)
	selector ss = SLICE(ss_bp, selector, 16)
	byte ch_35 = SLICE(cx, byte, 8)
	byte cl_104 = SLICE(cx, byte, 0)
	word16 bp = SLICE(ss_bp, word16, 0)
	selector ds = SLICE(ds_di, selector, 16)
	byte dh_46 = SLICE(dx, byte, 8)
	byte dl_54 = SLICE(dx, byte, 0)
	word32 es_di_52 = SEQ(es, di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D3F:
	branch P l1483_0D40_thunk_fn1483_0CFA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D40_thunk_fn1483_0CFA:
	selector es_28
	int8 Top_30
	fn1483_0CFA(ds_di, ss_bp, al_17, ah_19, cx, dx, bl, bh, si, fs, ax, wArg02, wArg0C, out es_28, out Top_30)
	return Top_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D42:
	ui24 ax_ch_500 = SEQ(SEQ(ah_19, al_17 + ch_35), ch_35) - SEQ(0xFC68, Mem7[ds:(bx_38 + 0x0002) + si:byte])
	word16 ax_43 = SLICE(ax_ch_500, word16, 8)
	word16 bx_38 = SEQ(bh, 0xB4)
	byte ch_39 = (byte) ax_ch_500
	byte ah_70 = SLICE(ax_43, byte, 8)
	byte al_99 = SLICE(ax_43, byte, 0)
	word16 dx_55 = SEQ(dh_46 ^ 0x17, dl_54)
	branch (dh_46 ^ 0x17) < 0x00 l1483_0D50_thunk_fn1483_0CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D50_thunk_fn1483_0CED:
	int8 Top_59
	selector es_64
	fn1483_0CED(es_di_52, ss_bp, ax_43, dx_55, bx_38, si, ds, fs, si, ax, wArg02, wArg06, wArg0C, out es_64, out Top_59)
	return Top_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D52:
	byte ah_71 = ah_70 + Mem45[ds_di:byte]
	word16 v19_76 = Mem75[ds:bx_38 + 0x0043 + si:word16]
	Mem77[ds:bx_38 + 0x0043 + si:word16] = bp
	Mem80[ds_di:byte] = Mem77[ds_di:byte] << 0x68
	word16 v22_82 = -Mem80[ss:v19_76 - 0x0006:word16]
	Mem83[ss:v19_76 - 0x0006:word16] = v22_82
	word16 bp_187 = v19_76
	word16 ax_100 = SEQ(ah_71, al_99)
	branch !OVERFLOW(v22_82) l1483_0D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D68_1:
	__syscall(0x04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D69:
	word16 cx_706
	word16 cx_712
	selector ds_408
	word16 di_400
	bool S_401
	word32 ds_bx_709
	word32 ds_bx_715
	Mem92[ds:si + 0x5C87:byte] = ch_39
	word16 sp_97
	word16 ax_101
	word16 cx_106
	word16 bx_108
	word16 dx_109
	int8 Top_116
	byte SCZDOP_120
	call fn1483_8A82 (retsize: 2;)
		uses: ax:ax_100,bp:v19_76,bx:bx_38,cs:cs,cx:SEQ(ch_39, cl_104),di:di,ds:ds,dx:dx_55,es:es,FPUF:FPUF,fs:fs,si:si,sp:fp + 0x0008,ss:ss,Stack +0000:wArg06,Stack +0002:es,Stack +0006:wArg0C,Stack +FFFFFFF2:0x0C58,Stack +FFFFFFF4:0x0F5F,Stack +FFFFFFF6:si,Stack +FFFFFFF8:ax,Stack +FFFFFFFC:wArg02,Top:0
		defs: ax:ax_101,bx:bx_108,cx:cx_106,dx:dx_109,SCZDOP:SCZDOP_120,sp:sp_97,Top:Top_116
	Mem123[ss:sp_97 - 2:word16] = ax_101
	Mem125[ss:sp_97 - 4:word16] = cx_106
	Mem127[ss:sp_97 - 6:word16] = dx_109
	Mem129[ss:sp_97 - 8:word16] = bx_108
	Mem131[ss:sp_97 - 10:word16] = sp_97
	Mem133[ss:sp_97 - 12:word16] = v19_76
	Mem135[ss:sp_97 - 14:word16] = si
	Mem137[ss:sp_97 - 16:word16] = di
	word16 bx_139 = bx_108 + Mem137[ds:(bx_108 - 0x0079) + di:word16] + SCZDOP_120
	Mem144[ss:v19_76 + 0xF512 + di:byte] = Mem137[ss:v19_76 + 0xF512 + di:byte] + SLICE(dx_109, byte, 8) + (bx_139 <u 0x0000)
	Mem147[ds:bx_139 + 0x007D:byte] = Mem144[ds:bx_139 + 0x007D:byte] & SLICE(ax_101, byte, 0)
	byte ch_153 = SLICE(cx_106, byte, 8)
	word16 ax_161 = __aad(si)
	word16 ax_157 = SEQ(SLICE(ax_101 - 0x8747, byte, 8), SLICE(ax_101 - 0x8747, byte, 0) + ch_153 + (ax_101 <u 0x8747))
	word16 v31_162 = Mem147[ds:ax_157 + 0x995D:word16]
	Mem163[ds:ax_157 + 0x995D:word16] = ax_157
	Mem167[ss:sp_97 - 18:word16] = sp_97 - 16
	word16 bx_174 = bx_139 + Mem167[ds:bx_139 + v31_162:word16]
	byte ah_362 = SLICE(ax_161, byte, 8)
	byte al_175 = SLICE(ax_161, byte, 0) + 0x2A + ch_153
	word16 si_164 = v31_162
	byte bl_180 = SLICE(bx_174, byte, 0)
	byte bh_382 = SLICE(bx_174, byte, 8)
	word16 sp_177 = sp_97 - 16
	word16 ax_213 = SEQ(ah_362, al_175)
	branch sp_97 - 18 && cx_106 != 0x0001 l1483_0D99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D99:
	byte v37_181 = Mem167[ds:bx_174 + v31_162:byte] - bl_180
	Mem182[ds:bx_174 + v31_162:byte] = v37_181
	byte CZ_185 = SLICE(cond(v37_181), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9B:
	cx_706 = cx_106 - 0x0001 (alias)
	word32 ds_bx_722 = SEQ(ds, bx_174)
	branch v37_181 < 0x00 l1483_0DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF7:
	word16 bx_204 = SLICE(ds_bx_722, word16, 0)
	sp_177 = fp + 420
	dl_236 = SLICE(dx_109, byte, 0) (alias)
	byte cl_190 = SLICE(cx_706, byte, 0)
	branch CZ_185 l1483_0E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E14:
	Mem192[ss:bp_187 + di:byte] = Mem189[ss:bp_187 + di:byte] ^ cl_190
	S_401 = SLICE(cond(Mem192[ss:bp_187 + di:byte]), bool, 0) (alias)
	__inw(dx_109)
	ds_bx_715 = ds_bx_722 (alias)
	branch Mem192[ss:bp_187 + di:byte] != 0x00 l1483_0DA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E19:
	ST200[Top_116:real64] = __rndint(ST199[Top_116:real64])
	si_164 = si_164 + 0x0001
	es = psegArg01A4
	bp_187 = fp + 0x018A
	byte bl_224 = SLICE(bx_204 + 0x0001, byte, 0)
	ax_213 = fp + 0x8FAA
	byte ah_246 = SLICE(fp + 0x8FAA, byte, 8)
	byte cl_252 = SLICE(cx_706 - 0x0001, byte, 0)
	byte ch_259 = SLICE(cx_706 - 0x0001, byte, 8)
	branch (SLICE(fp + 0x8FAA, byte, 8) | Mem212[ss:(fp + 0x0D8F) + si_164:byte]) == 0x00 && cx_706 != 0x0001 l1483_0DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF3:
	Mem226[bx_204:bx_204 + 0x0001 + si_164:byte] = Mem212[bx_204:bx_204 + 0x0001 + si_164:byte] + bl_224
	CZ_185 = SLICE(cond(fp + 0x8FAA - (fp + 0x018A)), bool, 2) (alias)
	cx_706 = cx_706 - 0x0001 (alias)
	ds_bx_722 = SEQ(bx_204, bx_204 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E35:
	Mem229[bx_204:bx_204 + 0x0001 + si_164:word16] = Mem212[bx_204:bx_204 + 0x0001 + si_164:word16] + (fp + 0x8FAA)
	byte cl_253 = cl_252 - Mem251[bx_204:si_164 + 0x005F:byte]
	byte al_230 = Mem229[bx_204:si_164:byte]
	byte ah_247 = ah_246 ^ Mem245[bx_204:(bx_204 + 0x0002) + (si_164 + 0x0001):byte]
	Mem255[bx_204:si_164 + 0x6347:byte] = Mem251[bx_204:si_164 + 0x6347:byte] ^ cl_253
	ui16 v57_v56_501 = SEQ(bArg02C1, v56_237) + SEQ(0xE8, dl_236)
	word16 si_231 = si_164 + 0x0001
	word16 di_233 = 0x0000
	byte v56_237 = (byte) v57_v56_501
	byte v57_244 = SLICE(v57_v56_501, byte, 8)
	byte al_260 = al_230 | ch_259
	word16 cx_264 = SEQ(ch_259, cl_253)
	branch al_260 == 0x00 l1483_0ED9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ED9:
	byte cl_497 = SLICE(cx_264, byte, 0)
	branch cx_264 == 0x0000 l1483_0EEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EEE:
	word16 si_269 = Mem268[bx_204:0x9004:word16]
	Mem273[bx_204:0x0300:word16] = Mem268[bx_204:0x0300:word16] + SEQ(ah_247, al_260 | 0x20)
	__cli()
	Mem276[bx_204:0x8602:word16] = Mem273[bx_204:0x8602:word16] + dx_109
	int8 Top_293
	call fn3024_8E10 (retsize: 4;)
		uses: ax:Mem276[bx_204:si_269:word16],bp:fp + 0x018A,bx:bx_204 + 0x0001,cs:cs,cx:cx_264,di:di_288,ds:bx_204,dx:dx_109,es:psegArg01A4,FPUF:FPUF,fs:fs,si:si_269 + 0x0002,sp:fp + 0x0002,ss:ss,Stack +0000:si,Stack +0002:ax,Stack +0004:wArg02,Stack +0006:wArg02,Stack +0008:wArg06,Stack +000A:wArg06,Stack +000C:es,Stack +000E:wArg0C,Stack +0010:wArg0C,Stack +0190:ss,Stack +01A0:al_230,Stack +01A1:0x0000,Stack +01A6:psegArg01A4,Stack +02C3:v57_244,Stack +0FA2:v56_237,Stack +FFFFFFFA:0x0C58,Stack +FFFFFFFC:0x0C58,Stack +FFFFFFFE:0x0F5F,Top:Top_116
		defs: Top:Top_293
	return Top_293
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EDB:
	__aad(Mem268[bx_204:si_231:word16] + dx_109)
	word16 si_299 = si_231 + 0x0002
	ah_247 = 0x00
	word16 cx_320 = SEQ(0x2A, cl_497)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EE4:
	di_233 = di_233 + (uint16) ((uint8) Mem308[bx_204:si_299:byte])
	Mem318[psegArg01A4:di_233:word16] = Mem308[psegArg01A4:di_233:word16] + dx_109
	cx_320 = cx_320 - 0x0001
	si_299 = si_299 + 0x0001
	byte ch_487 = SLICE(cx_320, byte, 8)
	branch cx_320 != 0x0000 l1483_0EE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EEC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ED6:
	al_260 = Mem318[bx_204:si_299:byte]
	si_231 = si_299 + 0x0001
	cx_264 = SEQ(ch_487, al_260) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E5E:
	word16 ax_337 = SEQ(FPUF, al_260)
	branch (ch_259 | al_260) != 0x00 l1483_0E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E70:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E64:
	__outw(dx_109, ax_337 + 0xE80C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E72:
	return Top_116
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF9:
	ptr32 ds_bp_356 = Mem189[ss:bp_187 + di:segptr32]
	int8 Top_371
	call fn1483_E62A (retsize: 2;)
		uses: ax:ax_361,bp:SLICE(ds_bp_356, word16, 0),bx:bx_204,cs:cs,cx:cx_708,di:di,ds:SLICE(ds_bp_356, selector, 16),dx:dx_109,es:es_358,FPUF:FPUF,fs:fs,si:si_214,sp:fp + 418,ss:ss,Stack +0000:ax,Stack +0002:es_358,Stack +0004:wArg02,Stack +0008:wArg06,Stack +000A:es,Stack +000E:wArg0C,Stack +0121:bArg02C1,Stack +0E00:bArg0FA0,Stack +FFFFFE58:0x0C58,Stack +FFFFFE5A:0x0F5F,Stack +FFFFFE5C:si,Stack +FFFFFE5E:ax,Stack +FFFFFE60:wArg00,Stack +FFFFFE62:wArg02,Stack +FFFFFE64:wArg04,Stack +FFFFFE66:wArg06,Stack +FFFFFE68:es,Stack +FFFFFE6C:wArg0C,Stack +FFFFFFEE:wArg018E,Stack +FFFFFFFA:0x0C58,Stack +FFFFFFFC:0x0F5F,Stack +FFFFFFFE:si,Stack +FFFFFFFF:wArg019F,Top:Top_116
		defs: Top:Top_371
	return Top_371
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D97:
	byte v36_379 = Mem167[ds:bx_174 + 0x0028 + di:byte] - ah_362 - (sp_97 - 18)
	Mem380[ds:bx_174 + 0x0028 + di:byte] = v36_379
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9A:
	Mem385[ds:v31_162 + 0x005A:byte] = Mem380[ds:v31_162 + 0x005A:byte] - bh_382 - (v36_379 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9D:
	byte v39_394 = Mem393[ds_di + 0x002D:byte] - (al_175 | 0x3F)
	Mem395[ds_di + 0x002D:byte] = v39_394
	Mem399[es:di:byte] = al_175 | 0x3F
	S_401 = SLICE(cond(v39_394), bool, 0) (alias)
	di_400 = di + 0x0001
	ds_bx_709 = SEQ(ds, bx_174) (alias)
	cx_706 = cx_106 - 0x0001 (alias)
	branch v39_394 >= 0x00 l1483_0DB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DA7:
	Mem402[es:di + 0x0001:byte] = al_175 | 0x3F
	di = di + 0x0002
	ds_bx_715 = SEQ(ds, bx_174) (alias)
	cx_706 = cx_106 - 0x0001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DA8:
	word16 bx_425 = SLICE(ds_bx_715, word16, 0)
	ds_408 = SLICE(ds_bx_715, selector, 16) (alias)
	branch S_401 l1483_0DBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DBE:
	cx_712 = cx_706 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DAA:
	Mem420[ss:bp_187 + si_164:word16] = -Mem410[ss:bp_187 + si_164:word16]
	__cli()
	di_400 = di - 0x0001
	Mem429[ds_408:bx_425 + 0x0045 + di_400:word16] = Mem420[ss:sp_177:word16]
	word16 bp_433 = bp_187 + 0x0001
	Mem435[ds_408:bx_425 + 0xC079 + si_164:word16] = Mem429[ds_408:bx_425 + 0xC079 + si_164:word16] + bp_433
	sp_177 = sp_177 + 4
	bp_187 = bp_433 - 0x0001
	ds_bx_709 = ds_bx_715 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DB9:
	Mem448[ds_bx_709 + di_400:byte] = Mem441[ds_bx_709 + di_400:byte] >>u 0x01
	word16 bx_445 = SLICE(ds_bx_709, word16, 0)
	ds_408 = SLICE(ds_bx_709, selector, 16) (alias)
	Mem454[ds_408:bx_445 + 0x0002 + di_400:byte] = Mem448[ds_408:bx_445 + 0x0002 + di_400:byte] + SLICE(cx_706, byte, 0)
	sp_177 = sp_177 + 2
	cx_712 = cx_706 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DBF:
	Mem463[ss:sp_177 - 2:word16] = cs
	Mem469[ss:0x0B01:word16] = es
	byte cl_471 = SLICE(cx_712, byte, 0)
	Mem473[ds_408:0x8C00:byte] = Mem469[ds_408:0x8C00:byte] + cl_471
	Mem478[ss:bp_187 + 0x8CC3:word16] = __ror(Mem473[ss:bp_187 + 0x8CC3:word16], cl_471)
	return Top_116
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0D3F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_1104(word16 ax, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] di:[0..15] dl:[0..7] ds:[0..15] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1104_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1104_entry:
	word16 sp_2 = fp
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1104:
	byte al_12 = SLICE(__aam(SLICE(ax - 0x5D97, byte, 0)), byte, 0) - 0x75 - (ax <u 0x5D97)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_110D:
	Mem22[ss:bp + 0x450F:word16] = Mem18[ss:bp + 0x450F:word16] + si + (al_12 <u 0x00)
	word16 sp_27 = sp_2 - 2
	Mem29[ss:sp_27:word16] = es
	word16 dx_32 = SEQ(0x34, dl)
	Mem33[ss:bp + 0x005E + si:word16] = dx_32
	Mem38[ds:bx + 0x675E + di:word16] = Mem33[ds:bx + 0x675E + di:word16] - 0x007D
	Mem46[ss:sp_27 - 2:word16] = dx_32
	ST51[Top_3 + 1:real64] = ST50[Top_3 + 1:real64] * lg2(ST50[Top_3:real64] + 1.0)
	ptr32 es_bx_65 = Mem46[ds:0x9F59:segptr32]
	Top_3 = Top_3 + 1
	ST67[Top_3:real64] = scalbn(ST51[Top_3:real64], ST51[Top_3 + 1:real64])
	Mem70[ss:bp + 0x1EC4:word16] = Mem46[ss:bp + 0x1EC4:word16] + bp
	sp_2 = sp_27
	si = 0x9F59
	es = SLICE(es_bx_65, selector, 16) (alias)
	bx = SLICE(es_bx_65, word16, 0) (alias)
	di = 0xBFC4
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn1483_1B91(byte al, word16 cx, word16 bx, word16 di, selector ds, selector psegArg00, ptr16 & ecxOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] Stack +0000:[0..15]
// LiveOut: SCZO ecx Top
// Trashed: SCZO ax bx di ds dx ecx Top
// Preserved: sp
fn1483_1B91_entry:
	bh = SLICE(bx, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B91:
	Mem19[ds:bx + 0x10F8 + di:word16] = ~Mem0[ds:bx + 0x10F8 + di:word16]
	word16 v18_34 = Mem29[psegArg00:bx + 0x3201 + di:word16]
	Mem35[psegArg00:bx + 0x3201 + di:word16] = di
	word16 ax_7 = SEQ(ah, al - 0x28)
	__inb(0x41)
	__sti()
	Mem45[psegArg00:0xFF1F:word16] = Mem35[psegArg00:0xFF1F:word16] + 0x0001
	ui24 ax_al_61 = SEQ(cx, SLICE(ax_7 ^ 0x2EF9, byte, 0)) - SEQ(0xA587, bh)
	word16 ax_21 = SEQ(SLICE(ax_7 ^ 0x2EF9, byte, 8), (byte) ax_al_61)
	word16 ax_53 = SEQ(SLICE(SLICE(ax_al_61, word16, 8), byte, 8), __inb(fp) - 0xF8 & 0x0A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB7_thunk_fn1483_1BB9:
	word32 ecx_56
	int8 Top_58
	word16 dx_75
	word16 bx_76
	word16 bp_77
	word16 si_78
	word16 di_79
	selector es_80
	selector ds_81
	fn1483_1BB9(ax_53, ax_21, ecx_16_16, fp, bx, bp, si, v18_34, es, psegArg00, out ecx_56, out dx_75, out bx_76, out bp_77, out si_78, out di_79, out es_80, out ds_81, out Top_58)
	ecxOut = ecx_56
	TopOut = Top_58
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1B91_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_1BB8(word32 ds_si, byte al, byte ah, word16 cx, word16 ecx_16_16, word16 dx, word16 bx, word16 bp, word16 di, selector es, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah:[0..7] al:[0..7] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..15] di:[0..15] dx:[0..15] ecx_16_16:[0..15] es:[0..15] Sequence ds:si:[0..31] ss:[0..15]
// LiveOut: ax bx di ds dx ecx es si
// Trashed: SCZO ax bp bx di ds dx ecx es si ss Top
// Preserved: sp
fn1483_1BB8_entry:
	selector ds = SLICE(ds_si, selector, 16)
	word16 si = SLICE(ds_si, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB8:
	word16 ax_15 = SEQ(ah, al | Mem0[ds_si:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB8_thunk_fn1483_1BB9:
	word16 bp_23
	word16 bx_24
	word16 di_25
	selector ds_26
	word16 dx_27
	word32 ecx_28
	word16 si_29
	selector es_32
	int8 Top_46
	word16 ax_22 = fn1483_1BB9(ax_15, cx, ecx_16_16, dx, bx, bp, si, di, es, ds, out ecx_28, out dx_27, out bx_24, out bp_23, out si_29, out di_25, out es_32, out ds_26, out Top_46)
	cxOut = <invalid>
	dxOut = dx_27
	bxOut = bx_24
	siOut = si_29
	diOut = di_25
	esOut = es_32
	dsOut = ds_26
	return ax_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1BB8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_1BB9(word16 ax, word16 cx, word16 ecx_16_16, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & ecxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] ecx_16_16:[0..15] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bp bx di ds dx ecx es si ss Top
// Trashed: SCZO ax bp bx di ds dx ecx es si sp ss Top
// Preserved:
fn1483_1BB9_entry:
	word16 sp_106 = fp
	int8 Top_259 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB9:
	byte bh_32 = SLICE(bx, byte, 8)
	byte al_123 = SLICE(ax, byte, 0)
	byte ah_138 = SLICE(ax, byte, 8)
	byte al_185 = SLICE(ax, byte, 0)
	byte cl_200 = SLICE(cx, byte, 0)
	branch C l1483_1BBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BBF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BBC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B38:
	word16 dx_101 = dx - 0x0001
	byte dh_192 = SLICE(dx_101, byte, 8)
	branch dx_101 != 0x0000 l1483_1B7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B3B:
	word16 cx_13 = cx - 0x0001
	word32 ecx_46 = SEQ(ecx_16_16, cx_13)
	word32 ecx_300 = SEQ(ecx_16_16, cx_13)
	branch dx_101 == 0x0000 && cx_13 != 0x0000 l1483_1B6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B3D:
	selector es_16 = Mem6[ss:sp_106:selector]
	word16 sp_17 = sp_106 + 2
	branch si == bx l1483_1B51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B44:
	byte ah_48 = SLICE(sp_17, byte, 8)
	byte al_34 = SLICE(sp_17, byte, 0) + bh_32 + (si <u bx)
	word16 ax_26 = si - 0x0001
	word16 ax_49 = SEQ(ah_48, al_34)
	branch al_34 == 0x00 l1483_1B13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B13:
	__sti()
	int8 Top_43
	word16 dx_44
	word32 ecx_47
	word16 ax_50
	word16 bx_51
	call Mem6[0x1483:bx:ptr32] (retsize: 4;)
		uses: ax:ax_49,bx:bx_23,dx:0x02E2,ecx:ecx_46,sp:ax_26,Top:Top_42
		defs: ax:ax_50,bx:bx_51,dx:dx_44,ecx:ecx_47,Top:Top_43
	ecxOut = ecx_47
	dxOut = dx_44
	bxOut = bx_51
	bpOut = bp
	siOut = ax
	diOut = di
	esOut = es_16
	dsOut = <invalid>
	TopOut = Top_43
	return ax_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B4E:
	Mem56[ds:ax:byte] = Mem6[ds:ax:byte] + ah_48
	Mem59[ss:ax_26 - 2:word16] = cs
	sp_17 = ax_26 - 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B51:
	es = Mem62[ss:sp_17:selector]
	byte al_68 = Mem62[ds:ax:byte]
	Mem70[es:0x02FB:byte] = al_68
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	selector stackArg0 = <invalid>
	word32 ecx_78
	byte SCZO_87 = fn1483_1B91(al_68, cx_13, bx, 0x02FC, ds, stackArg0, out ecx_78, out Top_259)
	__cli()
	Mem90[es:0x02FB:word16] = 0x0A0D
	word16 sp_64 = sp_17 + 2
	word16 cx_103 = Mem90[ss:sp_64 + 0x000C:word16]
	word16 ax_105 = Mem90[ss:sp_64 + 0x000E:word16]
	word16 di_92 = Mem90[ss:sp_64:word16]
	si = Mem90[ss:sp_64 + 0x0002:word16]
	bp = Mem90[ss:sp_64 + 0x0004:word16]
	bx = Mem90[ss:sp_64 + 0x0008:word16]
	dx_101 = Mem90[ss:sp_64 + 0x000A:word16]
	Mem108[es:di_92:byte] = SLICE(ax_105, byte, 0)
	word16 v37_115 = Mem108[ds:bx + (di_92 + 0x0001):word16] + bx
	Mem116[ds:bx + (di_92 + 0x0001):word16] = v37_115
	Mem121[ds:di_92 + 0x0001:byte] = __rcl(Mem116[ds:di_92 + 0x0001:byte], SLICE(cx_103, byte, 0), SLICE(cond(v37_115), bool, 1))
	word16 ax_111 = ax_105 - 0xECBA - SCZO_87
	sp_106 = sp_64 + 0x0010
	di = di_92 + 0x0001
	al_123 = SLICE(ax_111, byte, 0) (alias)
	ah_138 = SLICE(ax_111, byte, 8) (alias)
	ecx_300 = SEQ(SLICE(ecx_78, word16, 16), cx_103) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B6D:
	word16 sp_130 = sp_106 - 2
	Mem133[ss:sp_130:word16] = si
	byte al_126 = al_123 & 0x5C
	ecx_16_16 = SLICE(ecx_300, word16, 16) (alias)
	byte bl_148 = SLICE(bx, byte, 0)
	byte bh_144 = SLICE(bx, byte, 8)
	word16 ax_141 = SEQ(ah_138, al_126)
	branch al_126 != 0x00 l1483_1BE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BE8:
	byte bh_151 = bh_144 | Mem133[ds:bx + 0x0003:byte]
	Mem155[ss:sp_130 - 2:word16] = es
	ecxOut = ecx_300
	dxOut = dx_101
	bxOut = SEQ(bh_151, bl_148)
	bpOut = bp - 0x0002
	siOut = 0x7269
	diOut = di
	esOut = es
	dsOut = <invalid>
	TopOut = Top_259
	return ax_141 - 0x85FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1BB9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B75:
	Mem162[ss:sp_130 - 2:word16] = 0x6365
	word16 sp_163 = Mem162[ds:bx + 0x726A:word16] *s 0x0046
	di = Mem162[ss:sp_163:word16]
	si = Mem162[ss:sp_163 + 0x0002:word16]
	bx = Mem162[ss:sp_163 + 0x0008:word16]
	dh_192 = Mem162[ss:sp_163 + 0x000B:byte] (alias)
	cl_200 = Mem162[ss:sp_163 + 0x000C:byte] (alias)
	al_185 = Mem162[ss:sp_163 + 0x000E:byte] (alias)
	sp_106 = sp_163 + 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B7F:
	bp = Mem182[ds:si + 0x0065:word16] *s 0x3A64
	Mem189[ss:bp + si:byte] = Mem182[ss:bp + si:byte] & al_185
	byte dh_197 = dh_192 ^ Mem189[ds:bx + di:byte]
	word16 ax_199 = __inw(0x0C)
	Mem204[ds:0x2CF2:byte] = Mem189[ds:0x2CF2:byte] ^ cl_200
	Mem207[ds:di:byte] = Mem204[ds:di:byte] - dh_197
	Mem213[ds:di + 0xEA01:word16] = ~Mem207[ds:di + 0xEA01:word16]
	word16 sp_222 = sp_106 - 2
	Mem223[ss:sp_222:word16] = sp_106
	ds = Mem223[ss:sp_222 + 2:selector]
	dx = Mem223[ss:sp_222:word16]
	word16 v34_228 = Mem223[ds:di + 0x0B0A:word16]
	Mem229[ds:di + 0x0B0A:word16] = di
	__inb(0x41)
	__sti()
	Mem241[ds:0xFF1F:word16] = Mem229[ds:0xFF1F:word16] + 0x0001
	byte al_208 = SLICE(ax_199, byte, 0)
	bx = 0xD909
	cx = SEQ(SLICE(ax_199, byte, 8), al_208 - 0xD9)
	sp_106 = sp_222 + 4
	di = v34_228
	C = false
	ax = SEQ(SLICE(SEQ(0xAF, cl_200) + 0xA587 + (al_208 <u 0xD9), byte, 8), __inb(dx) - 0xF8 & 0x0A) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_1C50(byte ah, word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah:[0..7] dx:[0..15]
// LiveOut:
// Trashed: ax dx Top
// Preserved: sp
fn1483_1C50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1C50:
	word16 ax_7 = SEQ(ah, __inb(dx))
	call ax_7 (retsize: 2;)
		uses: ax:ax_7,dx:dx,sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1C50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



