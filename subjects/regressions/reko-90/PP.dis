void fn0800_0000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_0000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_0000_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word16 fn0800_0150(byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ss
// LiveOut: bx
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: di si sp
fn0800_0150_entry:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0150:
	return fn0800_01E6(al, 0x2714, 0x2714, Mem0[0x0800:0x025A:selector])
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0150_exit:
// DataOut: bx
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> si:si di:di ah:<invalid> dx:<invalid> bx:<invalid> -4(fp):di -2(fp):si



void fn0800_0163()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_0163_entry:
// DataOut: al ax bx di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0163:
	return
// DataOut: al ax bx di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0163_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_0164(byte al, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0002(8)
// Terminates process
fn0800_0164_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_0164_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(8)

l0800_0164:
	msdos_terminate(bArg02)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_0176(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds
// LiveOut:
// Trashed: ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: ds sp
fn0800_0176_entry:
// DataOut: cs ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0176:
	word32 es_bx_7 = msdos_get_interrupt_vector(0x00)
	Mem10[ds:0x005B:word16] = (word16) es_bx_7
	Mem11[ds:0x005D:word16] = SLICE(es_bx_7, selector, 16)
	word32 es_bx_14 = msdos_get_interrupt_vector(0x04)
	Mem17[ds:0x005F:word16] = (word16) es_bx_14
	Mem18[ds:0x0061:word16] = SLICE(es_bx_14, selector, 16)
	word32 es_bx_21 = msdos_get_interrupt_vector(0x05)
	Mem24[ds:0x0063:word16] = (word16) es_bx_21
	Mem25[ds:0x0065:word16] = SLICE(es_bx_21, selector, 16)
	word32 es_bx_28 = msdos_get_interrupt_vector(0x06)
	Mem31[ds:0x0067:word16] = (word16) es_bx_28
	Mem32[ds:0x0069:word16] = SLICE(es_bx_28, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x016D))
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0176_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2500 Sequence es:bx:<invalid> dx:0x016D ds:ds -2(fp):ds



word16 fn0800_01B9(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax dl dx
// Trashed: ah al ax dh dl ds dx eax edx rax rdx
// Preserved: ds sp
fn0800_01B9_entry:
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01B9:
	msdos_set_interrupt_vector(0x00, Mem0[ds:0x005B:segptr32])
	msdos_set_interrupt_vector(0x04, Mem0[ds:0x005F:segptr32])
	msdos_set_interrupt_vector(0x05, Mem0[ds:0x0063:segptr32])
	ptr32 ds_dx_29 = Mem0[ds:0x0067:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_29)
	word16 dx_30
	*dxOut = (word16) ds_dx_29
	return 0x2506
// DataOut: al ax bx di dl dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01B9_exit:
// DataOut: al ax dl dx
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2506 Sequence ds:dx:<invalid> ds:ds -2(fp):ds



word16 fn0800_01E6(byte al, word16 si, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es si ss
// LiveOut: bx
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: sp
fn0800_01E6_entry:
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01E6:
	byte ah_115
	branch si == 0x26FC l0800_01F0
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F0:
	ah_115 = 0xFF
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01EC:
	ah_115 = 0x00
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F2:
	word16 dx_33 = di
	word16 bx_34 = si
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F6:
	branch bx_34 == di l0800_021D
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_021D:
	branch dx_33 == di l0800_023C
// DataOut: al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_023C:
	return bx_34
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>

fn0800_01E6_exit:
// DataOut: bx
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>

l0800_0221:
	Mem78[es:dx_33:byte] = 0xFF
	branch Mem0[es:dx_33:byte] == 0x00 l0800_0235
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0235:
	word16 sp_98
	byte SCZO_100
	byte Z_101
	byte ah_102
	byte SZO_103
	byte C_104
	word16 dx_105
	word16 bx_107
	selector es_108
	selector ss_109
	byte CZ_110
	byte al_112
	call SEQ(cs, Mem78[es:dx_33 + 0x0002:word16]) (retsize: 2; depth: 4)
		uses: ah_38,al_14,bx_75,C_36,cs_15,CZ_37,di_17,dx_39,es_19,SCZO_76,si_18,sp_79,ss_16,SZO_35,wLoc02_80,Z_77
		defs: ah_102,al_112,bx_107,C_104,cs_111,CZ_110,di_106,dx_105,es_108,SCZO_100,si_99,sp_98,ss_109,SZO_103,Z_101
	es = Mem78[ss_109:sp_98:selector]
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_022E:
	word16 sp_81
	byte SCZO_83
	byte Z_84
	byte ah_85
	byte SZO_86
	byte C_87
	word16 dx_88
	word16 bx_90
	selector es_91
	selector ss_92
	byte CZ_93
	byte al_95
	call Mem78[es:dx_33 + 0x0002:ptr32] (retsize: 4; depth: 6)
		uses: ah_38,al_14,bx_75,C_36,cs_15,CZ_37,di_17,dx_39,es_19,SCZO_76,si_18,sp_79,ss_16,SZO_35,wLoc02_80,Z_77
		defs: ah_85,al_95,bx_90,C_87,cs_94,CZ_93,di_89,dx_88,es_91,SCZO_83,si_82,sp_81,ss_92,SZO_86,Z_84
	es = Mem78[ss_92:sp_81:selector]
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01FA:
	branch Mem0[es:bx_34:byte] == 0xFF l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0200:
	byte CZ_59
	branch si == 0x26FC l0800_020C
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_020C:
	CZ_59 = cond(Mem0[es:bx_34 + 0x0001:byte] - ah_115) (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0206:
	CZ_59 = cond(ah_115 - Mem0[es:bx_34 + 0x0001:byte]) (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0210:
	branch CZ_59 l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0212:
	ah_115 = Mem0[es:bx_34 + 0x0001:byte]
	dx_33 = bx_34
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0218:
	bx_34 = bx_34 + 0x0006
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)



void fn0800_023D(byte al, word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx ds dx
// LiveOut:
// Trashed: C ah ax bh bl bx eax ebx rax rbx
// Preserved: sp
fn0800_023D_entry:
// DataOut: al cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_023D:
	word16 ax_8
	msdos_write_file(0x0002, cx, ds_dx, out ax_8)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_023D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ah:0x40 bx:0x0002



void fn0800_024B(byte al, word16 cx, word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx dx ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_024B_entry:
// DataOut: al cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_024B:
	selector ds_3 = Mem0[0x0800:0x025A:selector]
	fn0800_023D(al, cx, dx, ds_3)
	word16 bx_10
	word16 si_11
	selector ds_12
	byte al_14 = (byte) fn0800_8B69(ds_3, 0x0003, out bx_10, out si_11, out ds_12)
	Mem16[ds_12:bx_10 + si_11:byte] = Mem0[ds_12:bx_10 + si_11:byte] + al_14
	Mem22[ss:fp - 0x0008:word16] = si_11
	Mem24[ds_12:0x2A27:word16] = 0x0001
	Mem25[ds_12:0x2E4D:word16] = 0x0000
	Mem26[ds_12:0x2A1F:word16] = 0x0000
	Mem27[ds_12:0x2E4F:word16] = 0x0000
	Mem28[ds_12:0x2A1D:word16] = 0x0000
	Mem29[ds_12:0x2A17:word16] = 0x0000
	Mem30[ds_12:0x2A1B:word16] = 0x0000
	Mem31[ds_12:0x2A11:word16] = 0x0000
	Mem32[ds_12:0x2A0F:word16] = 0x0000
	Mem33[ds_12:0x2A0D:word16] = 0x0000
	Mem34[ds_12:0x2A0B:word16] = 0x3000
	Mem35[ds_12:0x2E31:word16] = 0x8000
	Mem36[ds_12:0x2E2F:word16] = 0x1000
	Mem37[ds_12:0x2A21:word16] = 0x0001
	Mem38[ds_12:0x29F5:word16] = 0x0000
	Mem39[ds_12:0x29F3:word16] = 0x0000
	Mem40[ds_12:0x29F1:word16] = 0x0000
	Mem41[ds_12:0x29EF:word16] = 0x0000
	Mem42[ds_12:0x2A13:word16] = 0x0000
	Mem43[ds_12:0x2A23:word16] = 0x0001
	fn0800_2C9A(ds_12)
	Mem45[ss:fp - 0x000A:word16] = ds_12
	Mem48[ss:fp - 0x000C:word16] = 0x0094
	Mem50[ss:fp - 0x000E:word16] = ds_12
	Mem53[ss:fp - 0x0010:word16] = 0x07E8
	word16 di_56
	word16 si_289 = fn0800_B2EF(ds_12, wArg00, wArg02, out di_56)
	selector ds_60
	word16 bp_288 = fn0800_0402(fp - 0x0002, si_289, ds_12, out ds_60)
	selector ds_62
	byte dl_63 = fn0800_0541(bp_288, ds_60, out ds_62)
	Mem67[ss:fp - 0x000A:word16] = 0x0001
	Mem69[ss:fp - 0x000C:word16] = 0x0001
	fn0800_2DBF(ds_62, wArg00, wArg02)
	Mem75[ss:fp - 0x000A:word16] = 0x0000
	Mem77[ss:fp - 0x000C:word16] = 0x0000
	word16 dx_292 = DPB(dx, dl_63, 0)
	word16 di_80
	byte dl_291
	selector ds_290
	word16 ax_82 = fn0800_9764(dl_63, ds_62, ptrArg00, wArg02, out dl_291, out di_80, out ds_290)
	Mem85[ss:bp_288 - 0x0002:word16] = dx_292
	Mem86[ss:bp_288 - 0x0004:word16] = ax_82
	word16 sp_306 = fp - 0x0008
	word16 bx_87 = Mem86[ds_290:0x2A25:word16]
	branch bx_87 >u 0x0008 l0800_0338
// DataOut: bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_031A:
	switch (bx_87 << 0x0001) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> bp:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> es:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0003
// LocalsOut: Local -0002(16)

l0800_0335:
	fn0800_19EE(bp_288, ds_290)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> bp:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> es:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0003
// LocalsOut: Local -0002(16)

l0800_032B:
	fn0800_18D9(bp_288, ds_290)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> bp:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> es:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0003
// LocalsOut: Local -0002(16)

l0800_0326:
	dl_291 = fn0800_12E2(bp_288, ds_290, out bp_288, out si_289, out ds_290)
	dx_292 = DPB(dx, dl_291, 0) (alias)
	sp_306 = fp - 0x0006
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> bp:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> es:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0003
// LocalsOut: Local -0002(16)

l0800_0330:
	dl_291 = fn0800_112D(bp_288, si_289, ds_290, out bp_288, out si_289, out ds_290)
	dx_292 = DPB(dx, dl_291, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> bp:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> es:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0003
// LocalsOut: Local -0002(16)

l0800_0321:
	dl_291 = fn0800_0DE8(bp_288, si_289, ds_290, out bp_288, out si_289, out ds_290)
	dx_292 = DPB(dx, dl_291, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> bp:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> es:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0003
// LocalsOut: Local -0002(16)

l0800_0338:
	word16 sp_99 = sp_306 - 0x0002
	Mem100[ss:sp_99:word16] = 0x0000
	Mem102[ss:sp_99 - 0x0002:word16] = 0x0000
	byte dl_103
	word16 di_104
	selector ds_105
	word16 ax_108 = fn0800_9764(dl_291, ds_290, ptrArg00, wArg02, out dl_103, out di_104, out ds_105) - Mem102[ss:bp_288 - 0x0004:word16]
	Mem113[ss:bp_288 - 0x0002:word16] = dx_292 - Mem102[ss:bp_288 - 0x0002:word16] - (ax_108 <u 0x0000)
	Mem114[ss:bp_288 - 0x0004:word16] = ax_108
	Mem117[ss:sp_99:word16] = Mem114[ds_105:0x29F1:word16]
	Mem120[ss:sp_99 - 0x0002:word16] = Mem117[ds_105:0x29EF:word16]
	Mem123[ss:sp_99 - 0x0004:word16] = Mem120[ds_105:0x29F5:word16]
	Mem126[ss:sp_99 - 0x0006:word16] = Mem123[ds_105:0x29F3:word16]
	word16 di_129
	word16 ax_130 = fn0800_0B79(bp_288, si_289, di_104, wArg00, wArg02, wArg04, wArg06, out di_129)
	Mem138[ss:sp_99:word16] = 0x0000
	Mem140[ss:sp_99 - 0x0002:word16] = 0x003C
	Mem143[ss:sp_99 - 0x0004:word16] = Mem140[ss:bp_288 - 0x0002:word16]
	Mem146[ss:sp_99 - 0x0006:word16] = Mem143[ss:bp_288 - 0x0004:word16]
	word16 dx_147
	word16 bp_148
	word16 si_149
	word16 di_150
	word16 ax_151 = fn0800_8BCA(bp_288, ax_130, di_129, 0x0003, out dx_147, out bp_148, out si_149, out di_150)
	Mem153[ss:sp_99 - 0x0008:word16] = dx_147
	Mem155[ss:sp_99 - 0x000A:word16] = ax_151
	Mem161[ss:sp_99 - 0x000C:word16] = 0x0000
	Mem163[ss:sp_99 - 0x000E:word16] = 0x003C
	Mem166[ss:sp_99 - 0x0010:word16] = 0x0000
	Mem168[ss:sp_99 - 0x0012:word16] = 0x0E10
	Mem171[ss:sp_99 - 0x0014:word16] = Mem168[ss:bp_148 - 0x0002:word16]
	Mem174[ss:sp_99 - 0x0016:word16] = Mem171[ss:bp_148 - 0x0004:word16]
	word16 dx_175
	word16 bp_176
	word16 si_177
	word16 di_178
	word16 ax_179 = fn0800_8BCA(bp_148, si_149, di_150, 0x0003, out dx_175, out bp_176, out si_177, out di_178)
	Mem181[ss:sp_99 - 0x0018:word16] = dx_175
	Mem183[ss:sp_99 - 0x001A:word16] = ax_179
	word16 dx_184
	word16 bp_185
	word16 si_186
	word16 di_187
	word16 ax_188 = fn0800_8BBB(bp_176, si_177, di_178, 0x0003, out dx_184, out bp_185, out si_186, out di_187)
	Mem190[ss:sp_99 - 0x001C:word16] = dx_184
	Mem192[ss:sp_99 - 0x001E:word16] = ax_188
	Mem198[ss:sp_99 - 0x0020:word16] = 0x0000
	Mem200[ss:sp_99 - 0x0022:word16] = 0x0E10
	Mem203[ss:sp_99 - 0x0024:word16] = 0x0000
	Mem205[ss:sp_99 - 0x0026:word16] = 0x5180
	Mem208[ss:sp_99 - 0x0028:word16] = Mem205[ss:bp_185 - 0x0002:word16]
	Mem211[ss:sp_99 - 0x002A:word16] = Mem208[ss:bp_185 - 0x0004:word16]
	word16 dx_212
	word16 bp_213
	word16 si_214
	word16 di_215
	word16 ax_216 = fn0800_8BCA(bp_185, si_186, di_187, 0x0003, out dx_212, out bp_213, out si_214, out di_215)
	Mem218[ss:sp_99 - 0x002C:word16] = dx_212
	Mem220[ss:sp_99 - 0x002E:word16] = ax_216
	word16 dx_221
	word16 bp_222
	word16 si_223
	word16 di_224
	word16 ax_225 = fn0800_8BBB(bp_213, si_214, di_215, 0x0003, out dx_221, out bp_222, out si_223, out di_224)
	Mem227[ss:sp_99 - 0x0030:word16] = dx_221
	Mem229[ss:sp_99 - 0x0032:word16] = ax_225
	Mem238[ss:sp_99 - 0x0034:word16] = (uint16) ((uint32) (uint16) si_223 % 0x0064)
	Mem247[ss:sp_99 - 0x0036:word16] = (uint16) ((uint32) (uint16) si_223 /u 0x0064)
	Mem250[ss:sp_99 - 0x0038:word16] = Mem247[ds_105:0x29F1:word16]
	Mem253[ss:sp_99 - 0x003A:word16] = Mem250[ds_105:0x29EF:word16]
	Mem256[ss:sp_99 - 0x003C:word16] = Mem253[ds_105:0x29F5:word16]
	Mem259[ss:sp_99 - 0x003E:word16] = Mem256[ds_105:0x29F3:word16]
	Mem261[ss:sp_99 - 0x0040:word16] = ds_105
	Mem264[ss:sp_99 - 0x0042:word16] = 0x05DC
	Mem267[ss:sp_99 - 0x0044:word16] = 0x0008
	Mem270[ss:sp_99 - 0x0046:word16] = Mem267[ds_105:0x2A13:word16]
	Mem272[ss:sp_99 - 0x0048:word16] = ds_105
	Mem275[ss:sp_99 - 0x004A:word16] = 0x07EB
	word16 di_276
	fn0800_B2EF(ds_105, wArg00, wArg02, out di_276)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> bp:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> es:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> si:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> dh:<invalid> -16(fp):0x07E8 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0003

fn0800_024B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ds:<invalid> ax:<invalid> bp:<invalid> bx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> cx:<invalid> es:<invalid> dl:<invalid> cl:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:0x00 ch:<invalid> dh:<invalid> -84(fp):0x07EB -82(fp):<invalid> -80(fp):<invalid> -78(fp):0x0008 -76(fp):0x05DC -74(fp):<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):(uint16) (dx_ax /u 0x0064) -62(fp):(uint16) (dx_ax % 0x0064) -60(fp):0x0000 -58(fp):0x5180 -56(fp):0x0000 -54(fp):0x5180 -52(fp):0x0000 -50(fp):<invalid> -48(fp):0x5180 -46(fp):0x0000 -44(fp):0x0E10 -42(fp):0x0000 -40(fp):0x0000 -38(fp):0x0E10 -36(fp):0x0000 -34(fp):0x0E10 -32(fp):0x0000 -30(fp):<invalid> -28(fp):0x0E10 -26(fp):0x0000 -24(fp):0x003C -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x003C -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0003



void main()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_025E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_025E_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word16 fn0800_0402(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si sp
fn0800_0402_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0402:
	branch Mem0[ds:0x2A27:word16] != Mem0[ds:0x269A:word16] l0800_0410
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_040D:
	word16 si_376
	bp = fn0800_0DCE(ds, out si_376, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0410:
	ptr32 es_bx_20 = Mem0[ds:0x269C:segptr32]
	selector es_22 = SLICE(es_bx_20, selector, 16)
	word16 bx_23 = (word16) es_bx_20 + (Mem0[ds:0x2A27:word16] << 0x0002)
	Mem27[ss:fp - 0x0006:word16] = Mem0[es_22:bx_23 + 0x0002:word16]
	Mem31[ss:fp - 0x0008:word16] = Mem27[es_22:bx_23:word16]
	branch fn0800_BFC7(ptrArg00, wArg02) <=u 0x0001 l0800_044D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_042F:
	ptr32 es_bx_356 = Mem31[ds:0x269C:segptr32]
	selector es_358 = SLICE(es_bx_356, selector, 16)
	word16 bx_359 = (word16) es_bx_356 + (Mem31[ds:0x2A27:word16] << 0x0002)
	Mem363[ss:fp - 0x0006:word16] = Mem31[es_358:bx_359 + 0x0002:word16]
	Mem366[ss:fp - 0x0008:word16] = Mem363[es_358:bx_359:word16]
	Mem369[ss:fp - 0x000A:word16] = 0x0001
	word16 si_370
	word16 di_371
	fn0800_0D24(bp, ds, out si_370, out di_371, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:0x0000 ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_044D:
	word16 ax_44 = Mem31[ds:0x2A27:word16]
	Mem57[ss:fp - 0x0006:word16] = DPB(ax_44 << 0x0002, Mem31[Mem31[ds:(word16) Mem31[ds:0x269C:segptr32] + (ax_44 << 0x0002):segptr32]:byte], 0)
	Mem59[ss:fp - 0x0008:word16] = ds
	Mem62[ss:fp - 0x000A:word16] = 0x0829
	byte dl_65
	word16 ax_66 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl_65)
	Mem68[ds:0x2A25:word16] = ax_66
	branch ax_66 < 0x0009 l0800_0492
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> si:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0474:
	ptr32 es_bx_333 = Mem68[ds:0x269C:segptr32]
	selector es_335 = SLICE(es_bx_333, selector, 16)
	word16 bx_336 = (word16) es_bx_333 + (Mem68[ds:0x2A27:word16] << 0x0002)
	Mem340[ss:fp - 0x0006:word16] = Mem68[es_335:bx_336 + 0x0002:word16]
	Mem343[ss:fp - 0x0008:word16] = Mem340[es_335:bx_336:word16]
	Mem346[ss:fp - 0x000A:word16] = 0x0001
	word16 si_347
	word16 di_348
	fn0800_0D24(bp, ds, out si_347, out di_348, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0492:
	Mem81[ds:0x2A27:word16] = Mem68[ds:0x2A27:word16] + 0x0001
	branch Mem81[ds:0x2A25:word16] > 0x0002 l0800_04A0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04A0:
	branch Mem81[ds:0x2A27:word16] != Mem81[ds:0x269A:word16] l0800_04AC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04A9:
	word16 si_327
	bp = fn0800_0DCE(ds, out si_327, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04AC:
	word16 ax_115 = Mem81[ds:0x2A27:word16]
	Mem117[ds:0x2A27:word16] = Mem81[ds:0x2A27:word16] + 0x0001
	ptr32 es_bx_120 = Mem117[ds:0x269C:segptr32]
	selector es_122 = SLICE(es_bx_120, selector, 16)
	word16 bx_123 = (word16) es_bx_120 + (ax_115 << 0x0002)
	Mem127[ss:fp - 0x0006:word16] = Mem117[es_122:bx_123 + 0x0002:word16]
	Mem130[ss:fp - 0x0008:word16] = Mem127[es_122:bx_123:word16]
	Mem132[ss:fp - 0x000A:word16] = ds
	Mem135[ss:fp - 0x000C:word16] = 0x4348
	fn0800_BF9E(ptrArg00, wArg02, ptrArg04)
	Mem140[ss:fp - 0x0006:word16] = ds
	Mem143[ss:fp - 0x0008:word16] = 0x4348
	fn0800_0C6C(ds, ptrArg00)
	Mem147[ss:fp - 0x0006:word16] = ds
	selector es_148 = Mem147[ss:fp - 0x0006:selector]
	word16 di_151 = 0x4348
	word16 cx_156 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> ds:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E4:
	branch cx_156 == 0x0000 l0800_04E6
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E4_1:
	di_151 = di_151 + 0x0001
	cx_156 = cx_156 - 0x0001
	branch 0x00 != Mem147[es_148:di_151:byte] l0800_04E4
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E6:
	word16 di_165 = di_151 - 0x0001
	word16 cx_163 = ~cx_156
	byte Z_170 = cond(di_165)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04ED:
	branch cx_163 == 0x0000 l0800_04EF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04ED_2:
	Z_170 = cond(0x2E - Mem147[es_148:di_165:byte]) (alias)
	di_165 = di_165 - 0x0001
	cx_163 = cx_163 - 0x0001
	branch 0x2E != Mem147[es_148:di_165:byte] l0800_04ED
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04EF:
	branch Z_170 l0800_04F8
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04F1:
	di_165 = 0xFFFF
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04F8:
	Mem194[ss:fp - 0x0006:word16] = ds
	selector es_195 = Mem194[ss:fp - 0x0006:selector]
	Mem199[ss:fp - 0x0006:word16] = di_165 + 0x0001
	word16 di_200 = 0x4348
	word16 cx_205 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0507:
	branch cx_205 == 0x0000 l0800_0509
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0507_1:
	di_200 = di_200 + 0x0001
	cx_205 = cx_205 - 0x0001
	branch 0x00 != Mem199[es_195:di_200:byte] l0800_0507
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0509:
	word16 cx_212 = ~cx_205
	word16 di_214 = di_200 - cx_212
	byte Z_216 = cond(di_214)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0510:
	branch cx_212 == 0x0000 l0800_0512
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0510_2:
	Z_216 = cond(0x5C - Mem199[es_195:di_214:byte]) (alias)
	di_214 = di_214 + 0x0001
	cx_212 = cx_212 - 0x0001
	branch 0x5C != Mem199[es_195:di_214:byte] l0800_0510
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0512:
	branch Z_216 l0800_051B
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0514:
	di_214 = 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_051B:
	branch Mem199[ss:fp - 0x0006:word16] >u di_214 - 0x0001 l0800_0538
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0523:
	Mem260[ss:fp - 0x0006:word16] = ds
	selector es_261 = Mem260[ss:fp - 0x0006:selector]
	word16 di_264 = 0x4348
	word16 si_265 = 0x0833
	word16 cx_266 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0530:
	branch cx_266 == 0x0000 l0800_0532
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0530_1:
	di_264 = di_264 + 0x0001
	cx_266 = cx_266 - 0x0001
	branch 0x00 != Mem260[es_261:di_264:byte] l0800_0530
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0532:
	word16 di_278 = di_264 - 0x0001
	word16 cx_280 = 0x0005
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0536:
	branch cx_280 == 0x0000 l0800_0538
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0538:
	Mem258[ds:0x2A19:word16] = 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0536_2:
	Mem285[es_261:di_278:byte] = Mem260[ds:si_265:byte]
	si_265 = si_265 + 0x0001
	di_278 = di_278 + 0x0001
	cx_280 = cx_280 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_049D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_053E:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_0402_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> si:<invalid> cl:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



byte fn0800_0541(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_0541_entry:
	*dsOut = ds
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0541:
	word16 bp_159 = fp - 0x0002
	word16 ax_15 = Mem0[ds:0x2A27:word16]
	branch ax_15 != Mem0[ds:0x269A:word16] l0800_0555
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_0555:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_15 << 0x0002):segptr32]:byte] != 0x2D l0800_056B
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_056B:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_0584
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_0584:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0581:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0568:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_086D:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2D l0800_0886
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0886:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_089F
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_089F:
	word16 ax_311 = Mem0[ds:0x2A21:word16]
	branch ax_311 == 0x0001 l0800_08AE
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AE:
	Mem518[ss:fp - 0x000C:word16] = ds
	selector es_519 = Mem518[ss:fp - 0x000C:selector]
	word16 di_522 = 0x4271
	word16 si_523 = 0x085B
	word16 cx_524 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB:
	branch cx_524 == 0x0000 l0800_08BD
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB_1:
	di_522 = di_522 + 0x0001
	cx_524 = cx_524 - 0x0001
	branch 0x00 != Mem518[es_519:di_522:byte] l0800_08BB
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BD:
	word16 di_536 = di_522 - 0x0001
	word16 cx_538 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1:
	branch cx_538 == 0x0000 l0800_08C3
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C3:
	branch Mem518[ds:0x2E31:word16] <=u 0x8000 l0800_08D1
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08CB:
	Mem550[ds:0x2E31:word16] = 0x8000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D1:
	Mem549[ds:0x2E2F:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1_2:
	Mem543[es_519:di_536:byte] = Mem518[ds:si_523:byte]
	si_523 = si_523 + 0x0001
	di_536 = di_536 + 0x0001
	cx_538 = cx_538 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08A7:
	branch ax_311 == 0x0002 l0800_08D9
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D9:
	Mem480[ss:fp - 0x000C:word16] = ds
	selector es_481 = Mem480[ss:fp - 0x000C:selector]
	word16 di_484 = 0x4271
	word16 si_485 = 0x085D
	word16 cx_486 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6:
	branch cx_486 == 0x0000 l0800_08E8
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6_1:
	di_484 = di_484 + 0x0001
	cx_486 = cx_486 - 0x0001
	branch 0x00 != Mem480[es_481:di_484:byte] l0800_08E6
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E8:
	word16 di_498 = di_484 - 0x0001
	word16 cx_500 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC:
	branch cx_500 == 0x0000 l0800_08EE
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EE:
	branch Mem480[ds:0x2E31:word16] <=u 0x1000 l0800_08FC
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08F6:
	Mem512[ds:0x2E31:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08FC:
	Mem511[ds:0x2E2F:word16] = 0x00FF
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC_2:
	Mem505[es_481:di_498:byte] = Mem480[ds:si_485:byte]
	si_485 = si_485 + 0x0001
	di_498 = di_498 + 0x0001
	cx_500 = cx_500 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AC:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0902:
	branch Mem0[ds:0x2A23:word16] != 0x0002 l0800_0911
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0909:
	Mem475[ds:0x2A1D:word16] = 0x0000
	Mem476[ds:0x2E4F:word16] = 0x0000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0911:
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_092D
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0918:
	Mem439[ss:fp - 0x000C:word16] = ds
	selector es_440 = Mem439[ss:fp - 0x000C:selector]
	word16 di_443 = 0x4271
	word16 si_444 = 0x0653
	word16 cx_445 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925:
	branch cx_445 == 0x0000 l0800_0927
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925_1:
	di_443 = di_443 + 0x0001
	cx_445 = cx_445 - 0x0001
	branch 0x00 != Mem439[es_440:di_443:byte] l0800_0925
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0927:
	word16 di_457 = di_443 - 0x0001
	word16 cx_459 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B:
	branch cx_459 == 0x0000 l0800_092D
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092D:
	branch Mem0[ds:0x2A1D:word16] == 0x0000 l0800_0949
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0934:
	Mem405[ss:fp - 0x000C:word16] = ds
	selector es_406 = Mem405[ss:fp - 0x000C:selector]
	word16 di_409 = 0x4271
	word16 si_410 = 0x085F
	word16 cx_411 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941:
	branch cx_411 == 0x0000 l0800_0943
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941_1:
	di_409 = di_409 + 0x0001
	cx_411 = cx_411 - 0x0001
	branch 0x00 != Mem405[es_406:di_409:byte] l0800_0941
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0943:
	word16 di_423 = di_409 - 0x0001
	word16 cx_425 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947:
	branch cx_425 == 0x0000 l0800_0949
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0949:
	Mem349[ss:fp - 0x000C:word16] = ds
	selector es_350 = Mem349[ss:fp - 0x000C:selector]
	word16 di_353 = 0x4271
	word16 si_354 = 0x0861
	word16 cx_355 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956:
	branch cx_355 == 0x0000 l0800_0958
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956_1:
	di_353 = di_353 + 0x0001
	cx_355 = cx_355 - 0x0001
	branch 0x00 != Mem349[es_350:di_353:byte] l0800_0956
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0958:
	word16 di_367 = di_353 - 0x0001
	word16 cx_369 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C:
	branch cx_369 == 0x0000 l0800_095E
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095E:
	branch Mem349[ds:0x2A25:word16] != 0x0000 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0965:
	branch Mem349[Mem349[ds:(Mem349[ds:0x2A23:word16] << 0x0002) + 0x0545:segptr32]:byte] == 0x00 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0977:
	Mem389[ss:fp - 0x000C:word16] = ds
	Mem392[ss:fp - 0x000E:word16] = 0x2E75
	Mem394[ss:fp - 0x0010:word16] = ds
	Mem397[ss:fp - 0x0012:word16] = 0x4271
	fn0800_09A3(bp_159, ds)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C_2:
	Mem374[es_350:di_367:byte] = Mem349[ds:si_354:byte]
	si_354 = si_354 + 0x0001
	di_367 = di_367 + 0x0001
	cx_369 = cx_369 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947_2:
	Mem430[es_406:di_423:byte] = Mem405[ds:si_410:byte]
	si_410 = si_410 + 0x0001
	di_423 = di_423 + 0x0001
	cx_425 = cx_425 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B_2:
	Mem464[es_440:di_457:byte] = Mem439[ds:si_444:byte]
	si_444 = si_444 + 0x0001
	di_457 = di_457 + 0x0001
	cx_459 = cx_459 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_089C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0883:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_058A:
	word16 ax_108 = Mem0[ds:0x2A27:word16]
	Mem121[ss:fp - 0x000C:word16] = DPB(ax_108 << 0x0002, Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_108 << 0x0002):segptr32] + 0x0001:byte], 0)
	Mem123[ss:fp - 0x000E:word16] = ds
	Mem126[ss:fp - 0x0010:word16] = 0x0838
	word16 ax_131 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl)
	word16 si_133 = ax_131
	branch ax_131 < 0x000B l0800_05CF
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05B1:
	ptr32 es_bx_279 = Mem126[ds:0x269C:segptr32]
	selector es_281 = SLICE(es_bx_279, selector, 16)
	word16 bx_282 = (word16) es_bx_279 + (Mem126[ds:0x2A27:word16] << 0x0002)
	Mem286[ss:fp - 0x000C:word16] = Mem126[es_281:bx_282 + 0x0002:word16]
	Mem289[ss:fp - 0x000E:word16] = Mem286[es_281:bx_282:word16]
	Mem292[ss:fp - 0x0010:word16] = 0x0002
	word16 di_294
	dl = (byte) fn0800_0D24(bp_159, ds, out si_133, out di_294, out ds) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ah:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05CF:
	branch si_133 < 0x0006 l0800_05D7
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D7:
	ptr32 es_bx_192 = Mem126[ds:0x269C:segptr32]
	selector es_194 = SLICE(es_bx_192, selector, 16)
	word16 bx_195 = (word16) es_bx_192 + (Mem126[ds:0x2A27:word16] << 0x0002)
	Mem199[ss:fp - 0x000C:word16] = Mem126[es_194:bx_195 + 0x0002:word16]
	Mem202[ss:fp - 0x000E:word16] = Mem199[es_194:bx_195:word16]
	branch fn0800_BFC7(ptrArg00, wArg02) != 0x0002 l0800_0622
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0622:
	ptr32 es_bx_265 = Mem202[ds:0x269C:segptr32]
	selector es_267 = SLICE(es_bx_265, selector, 16)
	word16 bx_268 = (word16) es_bx_265 + (Mem202[ds:0x2A27:word16] << 0x0002)
	word16 dx_270 = Mem202[es_267:bx_268:word16]
	Mem274[ss:bp_159 - 0x0002:word16] = Mem202[es_267:bx_268 + 0x0002:word16]
	Mem275[ss:bp_159 - 0x0004:word16] = dx_270 + 0x0002
	dl = (byte) (dx_270 + 0x0002) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05F6:
	Mem239[ds:0x2A27:word16] = Mem202[ds:0x2A27:word16] + 0x0001
	branch Mem239[ds:0x2A27:word16] != Mem239[ds:0x269A:word16] l0800_0606
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0603:
	bp_159 = fn0800_0DCE(ds, out si_133, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0606:
	ptr32 es_bx_249 = Mem239[ds:0x269C:segptr32]
	selector es_251 = SLICE(es_bx_249, selector, 16)
	word16 bx_252 = (word16) es_bx_249 + (Mem239[ds:0x2A27:word16] << 0x0002)
	word16 dx_255 = Mem239[es_251:bx_252:word16]
	Mem257[ss:bp_159 - 0x0002:word16] = Mem239[es_251:bx_252 + 0x0002:word16]
	Mem258[ss:bp_159 - 0x0004:word16] = dx_255
	dl = (byte) dx_255 (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_063F:
	branch (int16) Mem202[Mem202[ss:bp_159 - 0x0004:segptr32]:byte] != 0x0000 l0800_0659
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_064A:
	Mem224[ss:fp - 0x000C:word16] = ds
	Mem227[ss:fp - 0x000E:word16] = 0x05DC
	Mem230[ss:fp - 0x0010:word16] = 0x0002
	word16 di_232
	dl = (byte) fn0800_0D24(bp_159, ds, out si_133, out di_232, out ds) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D4:
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0659:
	branch si_133 <=u 0x000A l0800_0663
// DataOut: bp bx dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0663:
	word16 bx_168 = si_133 << 0x0001
	word16 sp_170
	word16 bp_171
	selector ss_172
	byte SCZO_173
	word16 si_174
	word16 di_175
	word16 ax_176
	selector ds_177
	byte Z_178
	word16 bx_179
	selector es_180
	byte al_181
	byte SO_182
	byte CZ_183
	byte SZO_184
	byte C_185
	word16 cx_186
	word16 dx_187
	byte dl_188
	call Mem126[0x0800:bx_168 + 0x098D:word16] (retsize: 4; depth: 4)
		uses: al_151,ax_155,bp_159,bx_168,C_150,cx,CZ_164,di_157,dl_148,ds_154,dx_149,es_152,SCZO_169,si_158,SO_147,sp_160,ss,SZO_156,wLoc02_4,wLoc08_9,wLoc0A_12,Z_153
		defs: al_181,ax_176,bp_171,bx_179,C_185,cx_186,CZ_183,di_175,dl_188,ds_177,dx_187,es_180,SCZO_173,si_174,SO_182,sp_170,ss_172,SZO_184,Z_178
	return dl_188
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0660:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0869:
	Mem166[ds:0x2A27:word16] = Mem126[ds:0x2A27:word16] + 0x0001
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0552:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0987:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -18(fp):0x4271 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0541_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -18(fp):0x4271 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_09A3(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_09A3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0014(16)

l0800_09A3:
	word16 ax_34 = ((int16) Mem0[ds:0x0A74:byte] << 0x08) + DPB(bx, 0x00, 8)
	ui32 ax_dx_42 = SEQ(((int16) Mem0[ds:0x0A72:byte] << 0x08) + DPB(dx, 0x00, 8) + (ax_34 <u 0x0000), ax_34 + 0x0020)
	word16 ax_45 = SLICE(ax_dx_42 + 0x00000020, word16, 16)
	word16 dx_315 = (word16) (ax_dx_42 + 0x00000020)
	fn0800_4311(ax_45, dx_315, ds, dx_315, ax_45)
	selector ds_139
	word16 bp_70 = fn0800_867A(0x0A6E, ds, ax_45, dx_315, out ds_139)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_0A4F:
	word16 si_124 = Mem0[ss:bp_70 + 0x0004:word16]
	Mem87[ss:fp - 0x0012:word16] = ds_139
	ptr32 es_di_89 = Mem87[ss:bp_70 - 0x0008:segptr32]
	selector ds_88 = Mem87[ss:bp_70 + 0x0006:selector]
	word16 di_105 = (word16) es_di_89
	selector es_91 = SLICE(es_di_89, selector, 16)
	word16 ax_136 = 0x0000
	word16 cx_102 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> Sequence es:di:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E:
	branch cx_102 == 0x0000 l0800_0A60
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E_1:
	di_105 = di_105 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x00 != Mem87[es_91:di_105:byte] l0800_0A5E
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A60:
	word16 cx_108 = ~cx_102
	word16 di_110 = di_105 - cx_108
	byte SCZO_112 = cond(di_110)
	byte Z_114 = SCZO_112
	byte C_115 = SCZO_112
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64:
	branch cx_108 == 0x0000 l0800_0A66
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64_2:
	byte SCZO_345 = cond(Mem87[ds_88:si_362:byte] - Mem87[es_91:di_361:byte])
	Z_114 = SCZO_345 (alias)
	C_115 = SCZO_345 (alias)
	si_124 = si_362 + 0x0001
	di_110 = di_361 + 0x0001
	cx_108 = cx_108 - 0x0001
	word16 di_361 = di_110
	word16 si_362 = si_124
	branch Mem87[ds_88:si_362:byte] != Mem87[es_91:di_361:byte] l0800_0A64
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A66:
	branch Z_114 l0800_0A6D
// DataOut: ax bp sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A68:
	word16 ax_337 = 0x0000 - C_115
	ax_136 = ax_337 - 0xFFFF - (ax_337 <u 0x0000)
// DataOut: ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A6D:
	ds_139 = Mem87[ss:fp - 0x0012:selector]
	branch ax_136 != 0x0000 l0800_09FF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_09FF:
	ptr32 es_di_229 = Mem87[ss:bp_70 - 0x0008:segptr32]
	word16 di_230 = (word16) es_di_229
	selector es_231 = SLICE(es_di_229, selector, 16)
	word16 cx_237 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07:
	branch cx_237 == 0x0000 l0800_0A09
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07_1:
	di_230 = di_364 + 0x0001
	cx_237 = cx_237 - 0x0001
	word16 di_364 = di_230
	branch 0x00 != Mem87[es_231:di_364:byte] l0800_0A07
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A09:
	word16 di_258 = Mem87[ss:bp_70 - 0x0008:word16]
	Mem261[ss:fp - 0x0012:word16] = (int16) Mem87[es_231:Mem87[ss:bp_70 - 0x0008:word16] + (~cx_237 - 0x0001) + 0x0001:byte] << 0x08
	word16 cx_267 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25:
	branch cx_267 == 0x0000 l0800_0A27
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bp:<invalid> es:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25_2:
	di_258 = di_365 + 0x0001
	cx_267 = cx_267 - 0x0001
	word16 di_365 = di_258
	branch 0x00 != Mem261[es_231:di_365:byte] l0800_0A25
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bp:<invalid> es:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A27:
	word16 dx_289 = Mem261[ss:fp - 0x0012:word16] + DPB(Mem261[ss:bp_70 - 0x0008:word16] + (~cx_267 - 0x0001), 0x00, 8)
	word16 di_292 = Mem261[ss:bp_70 - 0x0008:word16]
	word16 cx_299 = 0xFFFF
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bp:<invalid> es:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42:
	branch cx_299 == 0x0000 l0800_0A44
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bp:<invalid> es:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42_3:
	di_292 = di_366 + 0x0001
	cx_299 = cx_299 - 0x0001
	word16 di_366 = di_292
	branch 0x00 != Mem261[es_231:di_366:byte] l0800_0A42
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bp:<invalid> es:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A44:
	word16 dx_314 = dx_289 + (~cx_299 - 0x0001)
	Mem317[ss:bp_70 - 0x0008:word16] = Mem261[ss:bp_70 - 0x0008:word16] + (dx_314 + 0x0003)
	dx_315 = dx_314 + 0x0003
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bp:<invalid> es:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A72:
	ptr32 es_di_145 = Mem87[ss:bp_70 - 0x0008:segptr32]
	word16 di_146 = (word16) es_di_145
	selector es_147 = SLICE(es_di_145, selector, 16)
	word16 cx_153 = 0xFFFF
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A:
	branch cx_153 == 0x0000 l0800_0A7C
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A_1:
	di_146 = di_363 + 0x0001
	cx_153 = cx_153 - 0x0001
	word16 di_363 = di_146
	branch 0x00 != Mem87[es_147:di_363:byte] l0800_0A7A
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7C:
	Mem168[ss:bp_70 - 0x0008:word16] = Mem87[ss:bp_70 - 0x0008:word16] + ~cx_153
	ptr32 es_bx_169 = Mem168[ss:bp_70 - 0x0008:segptr32]
	Mem183[ss:fp - 0x0012:word16] = ((int16) Mem168[es_bx_169:byte] << 0x08) + DPB(dx_315, 0x00, 8) + 0x0002
	Mem186[ss:fp - 0x0014:word16] = Mem183[ss:bp_70 - 0x0006:word16]
	Mem188[ss:fp - 0x0016:word16] = (word16) es_bx_169
	Mem191[ss:fp - 0x0018:word16] = Mem188[ss:bp_70 + 0x000A:word16]
	Mem194[ss:fp - 0x001A:word16] = Mem191[ss:bp_70 + 0x0008:word16]
	word16 di_200
	selector ds_201
	fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08, out di_200, out ds_201)
	Mem207[ss:fp - 0x0012:word16] = Mem194[ss:bp_70 - 0x0002:word16]
	Mem210[ss:fp - 0x0014:word16] = Mem207[ss:bp_70 - 0x0004:word16]
	selector ds_211
	fn0800_4346(ds_201, wArg00, wArg02, out ds_211)
	return
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> bx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp

fn0800_09A3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> Sequence es:bx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bx:<invalid> es:<invalid> bp:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -2(fp):bp



selector fn0800_0ABC(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0004(16) Stack +0006(16)
fn0800_0ABC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16)

l0800_0ABC:
	fn0800_35A3(ds, wArg04, wArg06)
	Mem34[ss:fp - 0x0014:word16] = Mem0[ds:0x2A05:word16]
	Mem37[ss:fp - 0x0016:word16] = Mem34[ds:0x2A03:word16]
	Mem40[ss:fp - 0x0018:word16] = Mem37[ds:0x2A09:word16]
	Mem43[ss:fp - 0x001A:word16] = Mem40[ds:0x2A07:word16]
	word16 di_46
	word16 ax_47 = fn0800_0B79(fp - 0x0002, wArg02, di, wArg00, wArg02, wArg04, wArg06, out di_46)
	Mem57[ss:fp - 0x0014:word16] = (uint16) ((uint32) (uint16) ax_47 % 0x0064)
	Mem66[ss:fp - 0x0016:word16] = (uint16) ((uint32) (uint16) ax_47 /u 0x0064)
	Mem69[ss:fp - 0x0018:word16] = Mem66[ds:0x2A05:word16]
	Mem72[ss:fp - 0x001A:word16] = Mem69[ds:0x2A03:word16]
	Mem75[ss:fp - 0x001C:word16] = Mem72[ds:0x2A09:word16]
	Mem78[ss:fp - 0x001E:word16] = Mem75[ds:0x2A07:word16]
	Mem80[ss:fp - 0x0020:word16] = ss
	Mem83[ss:fp - 0x0022:word16] = fp - 0x0010
	Mem86[ss:fp - 0x0024:word16] = 0x0014
	Mem88[ss:fp - 0x0026:word16] = 0x0014
	Mem90[ss:fp - 0x0028:word16] = ds
	Mem93[ss:fp - 0x002A:word16] = 0x0866
	word16 di_94
	word16 si_95 = fn0800_B2EF(ds, wArg00, wArg02, out di_94)
	branch Mem93[ds:0x2A25:word16] == 0x0002 l0800_0B2E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0B2A:
	branch si_95 == 0x0000 l0800_0B47
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B2E:
	Mem146[ss:fp - 0x0014:word16] = Mem93[ds:(si_95 << 0x0002) + 0x059B:word16]
	Mem149[ss:fp - 0x0016:word16] = Mem146[ds:(si_95 << 0x0002) + 0x0599:word16]
	Mem151[ss:fp - 0x0018:word16] = ds
	Mem154[ss:fp - 0x001A:word16] = 0x0889
	word16 di_155
	fn0800_B2EF(ds, wArg00, wArg02, out di_155)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B47:
	Mem105[ss:fp - 0x0014:word16] = ds
	Mem108[ss:fp - 0x0016:word16] = 0x0827
	word16 di_109
	fn0800_B2EF(ds, wArg00, wArg02, out di_109)
	word16 ax_112 = Mem108[ds:0x2A09:word16]
	word16 v30_114 = Mem108[ds:0x29F3:word16] + Mem108[ds:0x2A07:word16]
	Mem115[ds:0x29F3:word16] = v30_114
	Mem119[ds:0x29F5:word16] = Mem115[ds:0x29F5:word16] + ax_112 + (v30_114 <u 0x0000)
	word16 ax_120 = Mem119[ds:0x2A05:word16]
	word16 v32_122 = Mem119[ds:0x29EF:word16] + Mem119[ds:0x2A03:word16]
	Mem123[ds:0x29EF:word16] = v32_122
	Mem127[ds:0x29F1:word16] = Mem123[ds:0x29F1:word16] + ax_120 + (v32_122 <u 0x0000)
	Mem130[ds:0x2A13:word16] = Mem127[ds:0x2A13:word16] + 0x0001
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp

fn0800_0ABC_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp



word16 fn0800_0B79(word16 bp, word16 si, word16 di, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax di
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_0B79_entry:
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B79:
	word16 bp_120 = fp - 0x0002
	branch (wArg02 | wArg04) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B84:
	branch (wArg06 | wArg08) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B8C:
	branch wArg04 >u wArg08 l0800_0BCE
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B99:
	branch wArg02 >u wArg06 l0800_0BCE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0BCE:
	ui32 ax_dx_73 = SEQ(Mem0[ss:bp_120 + 0x0006:word16], Mem0[ss:bp_120 + 0x0004:word16] - Mem0[ss:bp_120 + 0x0008:word16]) - Mem0[ss:bp_120 + 0x0008:ui32]
	word16 ax_74 = SLICE(ax_dx_73, word16, 16)
	word16 dx_75 = (word16) ax_dx_73
	branch ax_74 >u 0x0006 l0800_0BA2
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BDF:
	branch ax_74 != 0x0006 l0800_0BE7
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE1:
	branch dx_75 >u 0x8DB8 l0800_0BA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BA2:
	Mem88[ss:fp - 0x0004:word16] = 0x0000
	Mem90[ss:fp - 0x0006:word16] = 0x000A
	Mem93[ss:fp - 0x0008:word16] = Mem90[ss:bp_120 + 0x0006:word16]
	Mem96[ss:fp - 0x000A:word16] = Mem93[ss:bp_120 + 0x0004:word16]
	word16 dx_97
	word16 bp_98
	word16 si_99
	word16 di_100
	word16 ax_101 = fn0800_8BC2(bp_120, si, di, bp, out dx_97, out bp_98, out si_99, out di_100)
	Mem103[ss:bp_98 + 0x0006:word16] = dx_97
	Mem104[ss:bp_98 + 0x0004:word16] = ax_101
	Mem110[ss:fp - 0x0004:word16] = 0x0000
	Mem112[ss:fp - 0x0006:word16] = 0x000A
	Mem115[ss:fp - 0x0008:word16] = Mem112[ss:bp_98 + 0x000A:word16]
	Mem118[ss:fp - 0x000A:word16] = Mem115[ss:bp_98 + 0x0008:word16]
	word16 dx_119
	word16 ax_123 = fn0800_8BC2(bp_98, si_99, di_100, bp, out dx_119, out bp_120, out si, out di)
	Mem125[ss:bp_120 + 0x000A:word16] = dx_119
	Mem126[ss:bp_120 + 0x0008:word16] = ax_123
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE7:
	Mem130[ss:fp - 0x0004:word16] = Mem0[ss:bp_120 + 0x0006:word16]
	Mem133[ss:fp - 0x0006:word16] = Mem130[ss:bp_120 + 0x0004:word16]
	ui32 cx_bx_139 = SEQ(Mem133[ss:bp_120 + 0x0006:word16], Mem133[ss:bp_120 + 0x0004:word16] - Mem133[ss:bp_120 + 0x0008:word16]) - Mem133[ss:bp_120 + 0x0008:ui32]
	word16 dx_146
	word16 ax_147 = fn0800_8F18(0x2710, SLICE(cx_bx_139, word16, 16), 0x0000, (word16) cx_bx_139, out dx_146)
	Mem149[ss:fp - 0x0008:word16] = dx_146
	Mem151[ss:fp - 0x000A:word16] = ax_147
	word16 dx_152
	word16 bp_153
	word16 si_154
	word16 di_155
	return fn0800_8BC2(bp_120, si, di, bp, out dx_152, out bp_153, out si_154, out di_155)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A

l0800_0B9E:
	return 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_0B79_exit:
// DataOut: ax di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A



word16 fn0800_0C08(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_0C08_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0C08:
	word16 si_10 = wArg02
	word16 cx_11 = 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0C15:
	word16 ax_20 = (uint16) ((uint32) (uint16) si_10 /u 0x0002)
	si_10 = ax_20
	branch ax_20 != 0x0000 l0800_0C14
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> bx:0x0002 ax:(uint16) (dx_ax /u 0x0002) | (uint16) (dx_ax /u 0x0002) dx:(uint16) (dx_ax % 0x0002) -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C14:
	cx_11 = cx_11 + 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:(uint16) (dx_ax /u 0x0002) cx:<invalid> bx:0x0002 ax:(uint16) (dx_ax /u 0x0002) | (uint16) (dx_ax /u 0x0002) dx:(uint16) (dx_ax % 0x0002) -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C24:
	return cx_11
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:(uint16) (dx_ax /u 0x0002) cx:<invalid> bx:0x0002 ax:(uint16) (dx_ax /u 0x0002) | (uint16) (dx_ax /u 0x0002) dx:(uint16) (dx_ax % 0x0002) -4(fp):si -2(fp):bp

fn0800_0C08_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cx:<invalid> bx:0x0002 ax:<invalid> dx:(uint16) (dx_ax % 0x0002) -4(fp):si -2(fp):bp



word16 fn0800_0C29(selector ds, word16 wArg02, word16 wArg04, byte bArg06, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0006(8)
fn0800_0C29_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(8)

l0800_0C29:
	byte dl_15
	byte al_16 = fn0800_97CC(ds, (int16) bArg06, out dl_15)
	word16 wLoc06_25 = wArg02
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C4F:
	branch Mem0[ptrLoc06:byte] == 0x00 l0800_0C5D
// DataOut: bx cl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C58:
	branch Mem0[ptrLoc06:byte] != al_16 l0800_0C4C
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C4C:
	wLoc06_25 = wLoc06_25 + 0x0001
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C5D:
	word16 ax_39 = wLoc06_25 - wArg02
	byte dl_44
	*dlOut = (byte) (0x0000 - (ax_39 <u 0x0000))
	return ax_39
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0C29_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_0C6C_entry:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C6C:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C88:
	branch Mem0[ptrArg02:byte] != 0x00 l0800_0C71
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C71:
	Mem43[ptrArg02:byte] = fn0800_97CC(ds, (int16) Mem0[ptrArg02:byte], out dl)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C91:
	return dl
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

fn0800_0C6C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>



void fn0800_0C93(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0C93_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0C93:
	fn0800_3509(ds, wArg02, wArg04)
	Mem32[ss:fp - 0x006E:word16] = ss
	word16 si_203 = 0x2714
	selector es_33 = Mem32[ss:fp - 0x006E:selector]
	word16 di_208 = fp - 0x0068
	word16 ax_196 = 0x0000
	word16 cx_209 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0CB9:
	branch cx_209 == 0x0000 l0800_0CBB
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CB9_1:
	di_208 = di_208 + 0x0001
	cx_209 = cx_209 - 0x0001
	branch 0x00 != Mem32[es_33:di_208:byte] l0800_0CB9
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBB:
	word16 cx_205 = ~cx_209
	word16 di_204 = di_208 - cx_205
	byte SCZO_50 = cond(di_204)
	byte Z_201 = SCZO_50
	byte C_202 = SCZO_50
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBF:
	branch cx_205 == 0x0000 l0800_0CC1
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBF_2:
	byte SCZO_199 = cond(Mem32[ds:si_211:byte] - Mem32[es_33:di_212:byte])
	Z_201 = SCZO_199 (alias)
	C_202 = SCZO_199 (alias)
	si_203 = si_211 + 0x0001
	di_204 = di_212 + 0x0001
	cx_205 = cx_205 - 0x0001
	word16 si_211 = si_203
	word16 di_212 = di_204
	branch Mem32[ds:si_211:byte] != Mem32[es_33:di_212:byte] l0800_0CBF
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC1:
	branch Z_201 l0800_0CC8
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC3:
	word16 ax_193 = 0x0000 - C_202
	ax_196 = ax_193 - 0xFFFF - (ax_193 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC8:
	branch ax_196 == 0x0000 l0800_0D0D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CCC:
	Mem107[ss:fp - 0x006E:word16] = ss
	Mem110[ss:fp - 0x0070:word16] = fp - 0x0068
	Mem112[ss:fp - 0x0072:word16] = ds
	Mem115[ss:fp - 0x0074:word16] = 0x088F
	word16 di_116
	fn0800_B2EF(ds, wArg00, wArg02, out di_116)
	Mem120[ss:fp - 0x006E:word16] = ss
	Mem125[ss:fp - 0x006E:word16] = Mem120[ss:fp - 0x006E:selector]
	Mem127[ss:fp - 0x0070:word16] = ds
	selector es_128 = Mem127[ss:fp - 0x0070:selector]
	Mem131[ss:fp - 0x0070:word16] = fp - 0x0068
	word16 di_134 = Mem131[ss:fp - 0x0070:word16]
	selector es_137 = Mem131[ss:fp - 0x006E:selector]
	Mem140[ss:fp - 0x006E:word16] = es_128
	Mem142[ss:fp - 0x0070:word16] = 0x2714
	word16 cx_146 = 0xFFFF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF5:
	branch cx_146 == 0x0000 l0800_0CF7
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF5_1:
	di_134 = di_134 + 0x0001
	cx_146 = cx_146 - 0x0001
	branch 0x00 != Mem142[es_137:di_134:byte] l0800_0CF5
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF7:
	word16 di_161 = Mem142[ss:fp - 0x0070:word16]
	selector es_164 = Mem142[ss:fp - 0x006E:selector]
	Mem167[ss:fp - 0x006E:word16] = ds
	word16 cx_153 = ~cx_146
	word16 cx_155 = cx_153 >>u 0x0001
	word16 si_160 = di_134 - cx_153
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D06:
	branch cx_155 == 0x0000 l0800_0D08
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D08:
	word16 cx_177 = cx_155 * 0x0002 + (cx_153 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0A:
	branch cx_177 == 0x0000 l0800_0D0C
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0C:
	ds = Mem167[ss:fp - 0x006E:selector]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0D:
	Mem86[ss:fp - 0x006E:word16] = Mem32[ss:fp + 0x0004:word16]
	Mem89[ss:fp - 0x0070:word16] = Mem86[ss:fp + 0x0002:word16]
	Mem91[ss:fp - 0x0072:word16] = ds
	Mem94[ss:fp - 0x0074:word16] = 0x089E
	word16 di_96
	fn0800_B2EF(ds, wArg00, wArg02, out di_96)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

fn0800_0C93_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

l0800_0D0A_1:
	Mem183[es_164:di_161:byte] = Mem167[es_137:si_160:byte]
	si_160 = si_160 + 0x0001
	di_161 = di_161 + 0x0001
	cx_177 = cx_177 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D06_2:
	Mem173[es_164:di_161:word16] = Mem167[es_137:si_160:word16]
	si_160 = si_160 + 0x0002
	di_161 = di_161 + 0x0002
	cx_155 = cx_155 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_0D24(word16 bp, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di dl ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_0D24_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0D24:
	selector ds_19 = fn0800_0DA9(fp - 0x0002, ds, Mem0[ds:0x29DB:word16], Mem0[ds:0x29DD:word16])
	Mem23[ss:fp - 0x0004:word16] = ds_19
	Mem27[ss:fp - 0x0006:word16] = 0x4412
	Mem30[ss:fp - 0x0008:word16] = Mem27[ds_19:0x29D9:word16]
	Mem33[ss:fp - 0x000A:word16] = Mem30[ds_19:0x29D7:word16]
	selector ds_36 = fn0800_0DA9(fp - 0x0002, ds_19, wArg00, wArg02)
	Mem40[ss:fp - 0x0004:word16] = ds_36
	Mem43[ss:fp - 0x0006:word16] = 0x43AD
	Mem46[ss:fp - 0x0008:word16] = Mem43[ds_36:0x29D5:word16]
	Mem49[ss:fp - 0x000A:word16] = Mem46[ds_36:0x29D3:word16]
	selector ds_50 = fn0800_0DA9(fp - 0x0002, ds_36, wArg00, wArg02)
	word16 bx_52 = Mem49[ss:fp + 0x0002:word16]
	Mem58[ss:fp - 0x0004:word16] = Mem49[ds_50:(bx_52 << 0x0002) + 0x055F:word16]
	Mem61[ss:fp - 0x0006:word16] = Mem58[ds_50:(bx_52 << 0x0002) + 0x055D:word16]
	Mem63[ss:fp - 0x0008:word16] = ds_50
	Mem66[ss:fp - 0x000A:word16] = 0x08A2
	word16 di_67
	fn0800_B2EF(ds_50, wArg00, wArg02, out di_67)
	ptr32 es_bx_70 = Mem66[ss:fp + 0x0004:segptr32]
	word16 bx_71 = (word16) es_bx_70
	branch Mem66[es_bx_70:byte] == 0x00 l0800_0D92
// DataOut: bp bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0D83:
	Mem100[ss:fp - 0x0004:word16] = Mem66[ss:fp + 0x0006:word16]
	Mem102[ss:fp - 0x0006:word16] = bx_71
	Mem104[ss:fp - 0x0008:word16] = ds_50
	Mem107[ss:fp - 0x000A:word16] = 0x08A6
	word16 di_108
	fn0800_B2EF(ds_50, wArg00, wArg02, out di_108)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D92:
	Mem77[ss:fp - 0x0004:word16] = ds_50
	Mem80[ss:fp - 0x0006:word16] = 0x0827
	word16 di_81
	fn0800_B2EF(ds_50, wArg00, wArg02, out di_81)
	Mem87[ss:fp - 0x0004:word16] = 0x0001
	word16 si_88
	selector ds_89
	return fn0800_8B5A(ds_50, wArg00, out si_88, out ds_89)
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0D24_exit:
// DataOut: di dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:0x01 di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_0DA9(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0DA9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0DA9:
	branch (wArg02 | wArg04) == 0x0000 l0800_0DCC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_0DB4:
	byte dl_41
	word16 di_42
	byte al_44 = fn0800_A614(fp - 0x0002, ds, DPB(ptrLoc06, wArg02, 0), wArg04, out dl_41, out di_42, out ds)
	Mem49[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0008:word16]
	Mem52[ss:fp - 0x0006:word16] = Mem49[ss:fp + 0x0006:word16]
	fn0800_8F7F(al_44, ds, ptrArg00)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_0DCC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0DA9_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_0DCE(selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds si
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_0DCE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DCE:
	word16 di_13
	fn0800_B2EF(ds, 0x07E8, ds, out di_13)
	word16 si_21
	selector ds_22
	fn0800_8B5A(ds, 0x0000, out si_21, out ds_22)
	return bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0DCE_exit:
// DataOut: bp ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -8(fp):0x07E8 -6(fp):ds -4(fp):0x0121 -2(fp):<invalid>



byte fn0800_0DE8(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_0DE8_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DE8:
	word16 di_31
	fn0800_B2EF(ds, 0x08AC, ds, out di_31)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_0E2A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_0E1B:
	word16 di_416
	fn0800_B2EF(ds, 0x08BA, ds, out di_416)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E2A:
	branch Mem0[ds:0x2A1F:word16] == 0x0000 l0800_0E3C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E31:
	word16 di_404
	fn0800_B2EF(ds, 0x08CF, ds, out di_404)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E3C:
	word16 di_50
	fn0800_B2EF(ds, 0x08DC, ds, out di_50)
	selector ds_62
	fn0800_3678(bp, ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds_62)
	Mem67[ss:fp - 0x0004:word16] = ds_62
	Mem71[ss:fp - 0x0006:word16] = 0x08DF
	Mem73[ss:fp - 0x0008:word16] = ds_62
	Mem76[ss:fp - 0x000A:word16] = 0x4477
	word16 di_81
	word16 si_82 = fn0800_37BE(ds_62, wArg00, wArg02, wArg04, wArg06, out di_81)
	Mem86[ss:fp - 0x0004:word16] = ds_62
	Mem89[ss:fp - 0x0006:word16] = 0x08EC
	Mem91[ss:fp - 0x0008:word16] = ds_62
	Mem94[ss:fp - 0x000A:word16] = 0x4477
	word16 di_95
	selector ds_110
	word16 si_108 = fn0800_4234(si_82, di_81, ds_62, wArg00, wArg02, wArg04, wArg06, out di_95, out ds_110)
	Mem101[ds_110:0x29DD:word16] = dx
	Mem102[ds_110:0x29DB:word16] = 0x4477
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10F4:
	Mem114[ss:fp - 0x0004:word16] = ds_110
	Mem117[ss:fp - 0x0006:word16] = 0x4541
	byte dl_118
	word16 bp_119
	word16 si_120
	word16 di_121
	selector ds_122
	branch fn0800_2DE2(si_108, ds_110, out dl_118, out bp_119, out si_120, out di_121, out ds_122) == 0x0000 l0800_1106
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1106:
	Mem377[ss:fp - 0x0004:word16] = Mem117[ds_122:0x29DD:word16]
	Mem380[ss:fp - 0x0006:word16] = Mem377[ds_122:0x29DB:word16]
	byte dl_381
	word16 di_382
	selector ds_383
	fn0800_A614(bp_119, ds_122, ptrArg00, wArg02, out dl_381, out di_382, out ds_383)
	Mem388[ss:fp - 0x0004:word16] = ds_383
	Mem392[ss:fp - 0x0006:word16] = 0x4477
	byte dl_393 = fn0800_8F7F(0x77, ds_383, ptrArg00)
	word16 si_397
	*siOut = Mem392[ss:fp - 0x0002:word16]
	return dl_393
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si

l0800_1103:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E7C:
	word16 bp_147 = fn0800_3764(ds_122)
	*bpOut = bp_147
	branch fn0800_388C(bp_147, si_120, di_121, ds_122, out si_108, out ds_110) != 0x0000 l0800_0E89
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E89:
	Mem156[ss:fp - 0x0004:word16] = ds_110
	Mem159[ss:fp - 0x0006:word16] = 0x4541
	fn0800_0C93(bp_147, ds_110, wArg00, wArg02)
	Mem164[ss:fp - 0x0004:word16] = Mem159[ds_110:0x29E5:word16]
	Mem167[ss:fp - 0x0006:word16] = Mem164[ds_110:0x29E3:word16]
	word16 si_168
	selector ds_169
	word16 ax_170 = fn0800_4194(bp_147, ds_110, wArg00, wArg02, out si_168, out ds_169)
	Mem172[ds_169:0x2A09:word16] = dx
	Mem173[ds_169:0x2A07:word16] = ax_170
	Mem174[ds_169:0x2A05:word16] = dx
	Mem175[ds_169:0x2A03:word16] = ax_170
	branch Mem175[ds_169:0x2A09:word16] >u 0x0000 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EB9:
	branch Mem175[ds_169:0x2A09:word16] != 0x0000 l0800_0EC2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EBB:
	branch Mem175[ds_169:0x2A07:word16] >u 0x0012 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC2:
	branch Mem175[ds_169:0x2A15:word16] != 0x0000 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ECF:
	byte dl_311
	word16 si_312
	branch fn0800_3992(bp_147, ds_169, out dl_311, out si_312, out ds_169) == 0x0000 l0800_0EDC
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EDC:
	branch Mem175[ds_169:0x2A23:word16] <=u 0x0005 l0800_0EE8
// DataOut: bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE8:
	return dl_311
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

fn0800_0DE8_exit:
// DataOut: bp dl ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si

l0800_0FF4:
	ds_169 = fn0800_6AD4(bp_147, ds_169)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1007:
	Mem327[ss:fp - 0x0004:word16] = Mem175[ds_169:0x29E1:word16]
	Mem330[ss:fp - 0x0006:word16] = Mem327[ds_169:0x29DF:word16]
	word16 ax_333 = fn0800_4194(bp_147, ds_169, wArg00, wArg02, out si_108, out ds_169)
	Mem335[ds_169:0x2A05:word16] = dx
	Mem336[ds_169:0x2A03:word16] = ax_333
	word16 ax_337 = Mem336[ds_169:0x2A05:word16]
	dx = Mem336[ds_169:0x2A03:word16]
	branch ax_337 <u Mem336[ds_169:0x2A09:word16] l0800_1049
// DataOut: bp ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1029:
	branch ax_337 != Mem336[ds_169:0x2A09:word16] l0800_1031
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_102B:
	branch dx <u Mem336[ds_169:0x2A07:word16] l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1031:
	branch Mem336[ds_169:0x2A15:word16] != 0x0000 l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1038:
	dx = Mem336[ds_169:0x2A07:word16]
	Mem360[ds_169:0x2A05:word16] = Mem336[ds_169:0x2A09:word16]
	Mem361[ds_169:0x2A03:word16] = dx
	si_108 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1049:
	branch si_108 != 0x0004 l0800_105C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_104E:
	dx = Mem336[ds_169:0x2A07:word16]
	Mem353[ds_169:0x2A05:word16] = Mem336[ds_169:0x2A09:word16]
	Mem354[ds_169:0x2A03:word16] = dx
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ED6:
	si_108 = 0x000E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC9:
	si_108 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_105C:
	branch Mem175[ds_169:0x427E:byte] == 0x00 l0800_10B7
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1063:
	branch si_108 == 0x0003 l0800_106D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1068:
	branch si_108 != 0x0004 l0800_10B7
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_106D:
	dx = Mem175[ds_169:0x2A07:word16]
	Mem261[ds_169:0x2A05:word16] = Mem175[ds_169:0x2A09:word16]
	Mem262[ds_169:0x2A03:word16] = dx
	Mem265[ss:fp - 0x0004:word16] = Mem262[ds_169:0x29E5:word16]
	Mem268[ss:fp - 0x0006:word16] = Mem265[ds_169:0x29E3:word16]
	selector ds_269 = fn0800_BA67(ds_169, wArg00, wArg02)
	Mem274[ss:fp - 0x0004:word16] = Mem268[ds_269:0x29E1:word16]
	Mem277[ss:fp - 0x0006:word16] = Mem274[ds_269:0x29DF:word16]
	selector ds_278 = fn0800_BA67(ds_269, wArg00, wArg02)
	Mem283[ss:fp - 0x0004:word16] = Mem277[ds_278:0x2A09:word16]
	Mem286[ss:fp - 0x0006:word16] = Mem283[ds_278:0x2A07:word16]
	Mem289[ss:fp - 0x0008:word16] = Mem286[ds_278:0x29E1:word16]
	Mem292[ss:fp - 0x000A:word16] = Mem289[ds_278:0x29DF:word16]
	Mem295[ss:fp - 0x000C:word16] = Mem292[ds_278:0x29E5:word16]
	Mem298[ss:fp - 0x000E:word16] = Mem295[ds_278:0x29E3:word16]
	bp_147 = fn0800_3B0A(bp_147, ds_278, wArg08, wArg0A, out ds_169)
	si_108 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10B7:
	Mem204[ss:fp - 0x0004:word16] = Mem175[ds_169:0x29E5:word16]
	Mem207[ss:fp - 0x0006:word16] = Mem204[ds_169:0x29E3:word16]
	byte dl_209
	word16 di_210
	selector ds_211
	fn0800_A614(bp_147, ds_169, ptrArg00, wArg02, out dl_209, out di_210, out ds_211)
	Mem217[ss:fp - 0x0004:word16] = Mem207[ds_211:0x29E1:word16]
	Mem220[ss:fp - 0x0006:word16] = Mem217[ds_211:0x29DF:word16]
	byte dl_221
	word16 di_222
	selector ds_223
	fn0800_A614(bp_147, ds_211, ptrArg00, wArg02, out dl_221, out di_222, out ds_223)
	branch si_108 <= 0x0002 l0800_10E5
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E5:
	bp_147 = fn0800_37DF(bp_147, ds_223, out si_108, out ds_223)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10D8:
	Mem245[ss:fp - 0x0004:word16] = ds_223
	Mem249[ss:fp - 0x0006:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_223, ptrArg00)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E8:
	Mem235[ss:fp - 0x0004:word16] = ds_223
	Mem238[ss:fp - 0x0006:word16] = 0x4541
	Mem240[ss:fp - 0x0008:word16] = si_108
	ds_110 = fn0800_0ABC(bp_147, ds_223, wArg00, wArg02, wArg04)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E86:
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_112D(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_112D_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_112D:
	word16 di_31
	fn0800_B2EF(ds, 0x08F0, ds, out di_31)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_116F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_1160:
	word16 di_313
	fn0800_B2EF(ds, 0x08FE, ds, out di_313)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_116F:
	word16 di_42
	word16 si_181 = fn0800_B2EF(ds, 0x0913, ds, out di_42)
	branch Mem0[ds:0x2A25:word16] == 0x0001 l0800_1184
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_1184:
	si_181 = fn0800_3678(bp, ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1181:
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12C2:
	Mem60[ss:fp - 0x0004:word16] = ds
	Mem64[ss:fp - 0x0006:word16] = 0x4541
	byte dl_65
	word16 bp_66
	word16 si_67
	word16 di_68
	selector ds_69
	branch fn0800_2DE2(si_181, ds, out dl_65, out bp_66, out si_67, out di_68, out ds_69) == 0x0000 l0800_12D4
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12D4:
	word16 si_284
	*siOut = Mem64[ss:fp - 0x0002:word16]
	return dl_65
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si

fn0800_112D_exit:
// DataOut: bp dl ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> si:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si

l0800_12D1:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1192:
	word16 bp_117 = fn0800_3764(ds_69)
	branch fn0800_388C(bp_117, si_67, di_68, ds_69, out si_181, out ds) != 0x0000 l0800_119F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119F:
	Mem85[ss:fp - 0x0004:word16] = ds
	Mem88[ss:fp - 0x0006:word16] = 0x4541
	fn0800_0C93(bp_117, ds, wArg00, wArg02)
	Mem95[ss:fp - 0x0004:word16] = Mem88[ds:0x29E5:word16]
	Mem98[ss:fp - 0x0006:word16] = Mem95[ds:0x29E3:word16]
	word16 si_99
	selector ds_100
	word16 ax_101 = fn0800_4194(bp_117, ds, wArg00, wArg02, out si_99, out ds_100)
	Mem104[ds_100:0x2A05:word16] = dx
	Mem105[ds_100:0x2A03:word16] = ax_101
	branch false l0800_11CF
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C3:
	branch false l0800_11CA
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C5:
	branch ax_101 >=u 0x0012 l0800_11CF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CF:
	word16 bx_223 = Mem105[ds_100:0x2A23:word16]
	branch bx_223 >u 0x0005 l0800_1243
// DataOut: bp bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11D8:
	switch (bx_223 << 0x0001) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1229:
	bp_117 = fn0800_4BB1(bp_117, ds_100, out ds_100)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1208:
	Mem262[ss:fp - 0x0004:word16] = Mem105[ds_100:0x29E5:word16]
	Mem265[ss:fp - 0x0006:word16] = Mem262[ds_100:0x29E3:word16]
	selector ds_266
	branch fn0800_3F0A(bp_117, ds_100, wArg00, wArg02, out ds_266) != 0x4D5A l0800_1222
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1222:
	bp_117 = fn0800_4B97(bp_117, ds_266, out ds_100)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_121B:
	ds_100 = fn0800_46FE(bp_117, ds_266)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1237:
	bp_117 = fn0800_518F(bp_117, ds_100, out ds_100)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_123E:
	ds_100 = fn0800_51A9(bp_117, ds_100)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11DF:
	Mem232[ss:fp - 0x0004:word16] = Mem105[ds_100:0x29E5:word16]
	Mem235[ss:fp - 0x0006:word16] = Mem232[ds_100:0x29E3:word16]
	word16 di_236
	word16 ax_243 = fn0800_8CAA(ax_101, 0x08, fn0800_3F58(bp_117, ds_100, wArg00, wArg02, out di_236, out ds_100), si, out dx)
	branch dx != 0x0052 l0800_1203
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11F7:
	branch ax_243 != 0x4E43 l0800_1203
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1203:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11FC:
	fn0800_5374(bp_117, ds_100, out ds_100)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1230:
	ds_100 = fn0800_4C55(bp_117, ds_100)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CA:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1243:
	Mem123[ss:fp - 0x0004:word16] = Mem105[ds_100:0x29E1:word16]
	Mem126[ss:fp - 0x0006:word16] = Mem123[ds_100:0x29DF:word16]
	word16 si_127
	selector ds_128
	word16 ax_129 = fn0800_4194(bp_117, ds_100, wArg00, wArg02, out si_127, out ds_128)
	Mem132[ds_128:0x2A09:word16] = dx
	Mem133[ds_128:0x2A07:word16] = ax_129
	Mem136[ss:fp - 0x0004:word16] = Mem133[ds_128:0x29E5:word16]
	Mem139[ss:fp - 0x0006:word16] = Mem136[ds_128:0x29E3:word16]
	word16 si_140
	selector ds_141
	word16 ax_142 = fn0800_4194(bp_117, ds_128, wArg00, wArg02, out si_140, out ds_141)
	Mem144[ds_141:0x2A05:word16] = dx
	Mem145[ds_141:0x2A03:word16] = ax_142
	branch si_140 == 0x0000 l0800_127F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1271:
	dx = Mem145[ds_141:0x2A03:word16]
	Mem220[ds_141:0x2A09:word16] = Mem145[ds_141:0x2A05:word16]
	Mem221[ds_141:0x2A07:word16] = dx
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_127F:
	Mem154[ss:fp - 0x0004:word16] = Mem145[ds_141:0x29E5:word16]
	Mem157[ss:fp - 0x0006:word16] = Mem154[ds_141:0x29E3:word16]
	byte dl_159
	word16 di_160
	selector ds_161
	fn0800_A614(bp_117, ds_141, ptrArg00, wArg02, out dl_159, out di_160, out ds_161)
	Mem167[ss:fp - 0x0004:word16] = Mem157[ds_161:0x29E1:word16]
	Mem170[ss:fp - 0x0006:word16] = Mem167[ds_161:0x29DF:word16]
	byte dl_171
	word16 di_172
	selector ds_173
	fn0800_A614(bp_117, ds_161, ptrArg00, wArg02, out dl_171, out di_172, out ds_173)
	branch Mem170[ds_173:0x2A25:word16] == 0x0002 l0800_12A6
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A2:
	branch si_140 == 0x0000 l0800_12B3
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B3:
	bp_117 = fn0800_37DF(bp_117, ds_173, out si_181, out ds_173)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A6:
	Mem203[ss:fp - 0x0004:word16] = ds_173
	Mem207[ss:fp - 0x0006:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_173, ptrArg00)
	si_181 = si_140
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B6:
	Mem188[ss:fp - 0x0004:word16] = ds_173
	Mem191[ss:fp - 0x0006:word16] = 0x4541
	Mem193[ss:fp - 0x0008:word16] = si_181
	ds = fn0800_0ABC(bp_117, ds_173, wArg00, wArg02, wArg04)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119C:
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> bp:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_12E2(word16 bp, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp dl ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_12E2_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_12E2:
	sp = fp
	sp = fp - 0x0002
	wLoc02 = bp
	bp = fp - 0x0002
	sp = fp - 0x0086
	sp = fp - 0x0088
	wLoc88 = si
	sp = fp - 0x008A
	wLoc8A = di
	sp = fp - 0x008C
	wLoc8C = ds
	ax = 0x4348
	sp = fp - 0x008E
	wLoc8E = 0x4348
	bx = Mem0[ds:0x2A25:word16]
	bx = bx << 0x0001
	bx = bx << 0x0001
	SCZO = cond(bx)
	v11 = Mem0[ds:bx + 0x050B:word16]
	sp = fp - 0x0090
	wLoc90 = v11
	v12 = Mem0[ds:bx + 0x0509:word16]
	sp = fp - 0x0092
	wLoc92 = v12
	sp = fp - 0x0094
	wLoc94 = ds
	ax = 0x0916
	sp = fp - 0x0096
	wLoc96 = 0x0916
	si = fn0800_B2EF(ds, wLoc96, wLoc94, out di)
	sp = fp - 0x008A
	SCZO = cond(Mem0[ds:0x2E4F:word16] - 0x0000)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_1321
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0092(16) Local -0094(16)

l0800_1312:
	v14 = Mem0[ds:0x2E4F:word16]
	sp = fp - 0x008C
	wLoc8C = v14
	sp = fp - 0x008E
	wLoc8E = ds
	ax = 0x0925
	sp = fp - 0x0090
	wLoc90 = 0x0925
	si = fn0800_B2EF(ds, wLoc90, wLoc8E, out di)
	sp = fp - 0x008A
	SCZO = cond(fp - 0x008A)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 0x0002 ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):0x4348 -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0094(16)

l0800_1321:
	sp = fp - 0x008C
	wLoc8C = ds
	ax = 0x093A
	sp = fp - 0x008E
	wLoc8E = 0x093A
	si = fn0800_B2EF(ds, wLoc8E, wLoc8C, out di)
	sp = fp - 0x008A
	SCZO = cond(fp - 0x008A)
	sp = fp - 0x008C
	wLoc8C = ds
	ax = 0x093D
	sp = fp - 0x008E
	wLoc8E = 0x093D
	sp = fp - 0x0090
	wLoc90 = ds
	ax = 0x4348
	sp = fp - 0x0092
	wLoc92 = 0x4348
	ax = fn0800_AA7E(si, di, ds, wLoc92, wLoc90, wLoc8E, wLoc8C, out dx, out si, out di, out ds)
	sp = sp + 0x0008
	Mem0[ds:0x29D1:word16] = dx
	Mem0[ds:0x29CF:word16] = ax
	ax = Mem0[ds:0x2A25:word16]
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	SCZO = cond(ax - 0x0003)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_1353
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 0x0002 ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1353:
	ax = Mem0[ds:0x29CF:word16]
	ax = ax | Mem0[ds:0x29D1:word16]
	dx_ax = SEQ(dx, ax) (alias)
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_135F
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp

l0800_135F:
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x4348
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x4348
	ax = 0x0007
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0007
	dx = fn0800_0D24(bp, ds, out si, out di, out ds)
	dx_ax = SEQ(dx, ax) (alias)
	dl = (byte) dx (alias)
	sp = sp + 0x0006
	SCZO = cond(sp)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp

l0800_136B_thunk_fn0800_1478:
	fn0800_1478(bp, ds)
	return dl
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:0x01 cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):<invalid> -142(fp):<invalid> -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp

l0800_135C:
	fn0800_1478(bp, ds)
	return dl
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp

l0800_134B:
	SCZO = cond(ax - 0x0004)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_1371
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1371:
	ax = Mem0[ds:0x29CF:word16]
	ax = ax | Mem0[ds:0x29D1:word16]
	dx_ax = SEQ(dx, ax) (alias)
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_13C6
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1378_thunk_fn0800_13C6:
	fn0800_13C6(bp, si, di, ds)
	return dl
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp

l0800_137A:
	v18 = Mem0[ds:0x29D1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v18
	v19 = Mem0[ds:0x29CF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v19
	ax = fn0800_3E27(bp, ds, wArg00, wArg02, out dx, out si, out di, out ds)
	dx_ax = SEQ(dx, ax) (alias)
	sp = sp + 0x0004
	SCZO = cond(ax - 0x4D5A)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_13BA
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13BA:
	Mem0[ds:0x29D1:word16] = 0x0000
	Mem0[ds:0x29CF:word16] = 0x0000
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> di:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp

l0800_13C0_thunk_fn0800_13C6:
	fn0800_13C6(bp, si, di, ds)
	return dl
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> di:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp

l0800_138D:
	ax = 0x0002
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0002
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0000
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0000
	v20 = Mem0[ds:0x29D1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v20
	v21 = Mem0[ds:0x29CF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v21
	ax = fn0800_ACB3(bp, ds, wArg00, wArg02, wArg08, out di, out ds)
	sp = sp + 0x000A
	SCZO = cond(sp)
	v22 = Mem0[ds:0x29D1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v22
	v23 = Mem0[ds:0x29CF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v23
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> di:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp

l0800_13A7_thunk_fn0800_13AB:
	dl = fn0800_13AB(di, ds, out bp, out si)
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	return dl
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp

l0800_1350:
	fn0800_1478(bp, ds)
	return dl
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp

fn0800_12E2_exit:
	use bp (=> bpOut)
	use si (=> siOut)
	use ds (=> dsOut)
// DataOut: bp dl ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> dx:<invalid> es:<invalid> al:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp

l0800_1478:
	fn0800_1CF6(bp, ds)
	word16 sp_246 = fp
	word16 si_10 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_1527:
	word16 sp_34 = sp_246 - 0x0002
	Mem35[ss:sp_34:word16] = ds
	Mem39[ss:sp_34 - 0x0002:word16] = 0x4541
	byte dl_40
	word16 bp_41
	word16 si_42
	word16 di_43
	selector ds_44
	branch fn0800_2DE2(si_10, ds, out dl_40, out bp_41, out si_42, out di_43, out ds_44) == 0x0000 l0800_1539
	Mem52[ss:sp_34:word16] = ds_44
	Mem55[ss:sp_34 - 0x0002:word16] = 0x4541
	sp_246 = sp_34 + 0x0002
	byte dl_56
	word16 di_59
	word16 bp_245
	branch fn0800_2DE2(si_42, ds_44, out dl_56, out bp_245, out si_10, out di_59, out ds) == 0x0000 l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1536:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1486:
	Mem178[ss:sp_34:word16] = ds
	Mem181[ss:sp_34 - 0x0002:word16] = 0x4541
	Mem183[ss:sp_34 - 0x0004:word16] = ss
	Mem186[ss:sp_34 - 0x0006:word16] = bp_245 - 0x006E
	fn0800_3509(ds, wArg04, wArg06)
	Mem190[ss:sp_34:word16] = ds
	Mem193[ss:sp_34 - 0x0002:word16] = 0x4541
	Mem195[ss:sp_34 - 0x0004:word16] = ss
	Mem198[ss:sp_34 - 0x0006:word16] = bp_245 - 0x0084
	fn0800_35A3(ds, wArg04, wArg06)
	Mem204[ss:sp_34:word16] = ss
	Mem207[ss:sp_34 - 0x0002:word16] = bp_245 - 0x006E
	word16 dx_208
	word16 bp_209
	word16 ax_210 = fn0800_283D(si_10, di_59, ds, ptrArg00, out dx_208, out bp_209)
	Mem213[ss:bp_209 - 0x0002:word16] = dx_208
	Mem214[ss:bp_209 - 0x0004:word16] = ax_210
	branch (ax_210 | dx_208) != 0x0000 l0800_14CD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_14BC:
	Mem288[ss:sp_34 + 0x0002:word16] = ss
	Mem291[ss:sp_34:word16] = bp_209 - 0x006E
	word16 dx_292
	word16 ax_294 = fn0800_1F5C(bp_209, ds, ptrArg00, wArg02, out dx_292, out ds)
	Mem297[ss:bp_209 - 0x0002:word16] = dx_292
	Mem298[ss:bp_209 - 0x0004:word16] = ax_294
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_14CD:
	word16 sp_221 = sp_246 + 0x0002
	Mem224[ss:sp_221 - 0x0002:word16] = Mem214[ss:bp_209 - 0x0002:word16]
	Mem227[ss:sp_221 - 0x0004:word16] = Mem224[ss:bp_209 - 0x0004:word16]
	Mem229[ss:sp_221 - 0x0006:word16] = ss
	Mem232[ss:sp_221 - 0x0008:word16] = bp_209 - 0x0084
	word16 dx_234
	word16 ax_235 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_234)
	Mem237[ss:bp_209 - 0x0006:word16] = dx_234
	Mem238[ss:bp_209 - 0x0008:word16] = ax_235
	word16 ax_239 = ax_235 | dx_234
	branch ax_239 != 0x0000 l0800_14FD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_14FD:
	Mem279[ss:sp_221 - 0x0002:word16] = Mem238[ss:bp_209 - 0x0006:word16]
	Mem282[ss:sp_221 - 0x0004:word16] = Mem279[ss:bp_209 - 0x0008:word16]
	bp_245 = fn0800_23EC(bp_209, ds, wArg00, wArg02, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_14E9:
	Mem264[ss:sp_221 - 0x0002:word16] = Mem238[ss:bp_209 - 0x0002:word16]
	Mem267[ss:sp_221 - 0x0004:word16] = Mem264[ss:bp_209 - 0x0004:word16]
	Mem269[ss:sp_221 - 0x0006:word16] = ss
	Mem272[ss:sp_221 - 0x0008:word16] = bp_209 - 0x0084
	ax_239 = bp_209 - 0x0084
	bp_245 = fn0800_2085(ds, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1509:
	sp_246 = sp_221
	si_10 = 0x0001
	branch (DPB(ax_239, 0x00, 8) << 0x08) + DPB(dx_234, 0x00, 8) >=u 0xFF8C l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> di:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1539:
	branch si_10 != 0x0000 l0800_1551
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1551:
	selector ds_118
	word16 bp_119 = fn0800_1E5E(bp_245, si_10, ds, out ds_118)
	word16 sp_121 = sp_246 - 0x0002
	Mem122[ss:sp_121:word16] = 0x0001
	fn0800_1CF6(bp_119, ds_118)
	Mem126[ss:sp_121:word16] = 0x0001
	Mem131[ss:sp_121 - 0x0002:word16] = 0x0000
	fn0800_2DBF(ds_118, wArg00, wArg02)
	word16 dx_136 = Mem131[ds_118:0x29CF:word16]
	Mem137[ds_118:0x29E1:word16] = Mem131[ds_118:0x29D1:word16]
	Mem138[ds_118:0x29DF:word16] = dx_136
	Mem140[ss:sp_121:word16] = ds_118
	Mem143[ss:sp_121 - 0x0002:word16] = 0x0945
	Mem145[ss:sp_121 - 0x0004:word16] = ds_118
	Mem148[ss:sp_121 - 0x0006:word16] = 0x4477
	word16 di_151
	word16 si_152 = fn0800_37BE(ds_118, wArg00, wArg02, wArg04, wArg06, out di_151)
	Mem156[ss:sp_121:word16] = ds_118
	Mem159[ss:sp_121 - 0x0002:word16] = 0x0941
	Mem161[ss:sp_121 - 0x0004:word16] = ds_118
	Mem164[ss:sp_121 - 0x0006:word16] = 0x4477
	word16 di_165
	selector ds_166
	word16 si_167 = fn0800_4234(si_152, di_151, ds_118, wArg00, wArg02, wArg04, wArg06, out di_165, out ds_166)
	Mem170[ds_166:0x29DD:word16] = dx_136
	Mem171[ds_166:0x29DB:word16] = 0x4477
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// Terminates process

l0800_159D_thunk_fn0800_1897:
	word16 bp_172
	word16 si_173
	selector ds_174
	fn0800_1897(si_167, ds_166, out bp_172, out si_173, out ds_174)
	return
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000

l0800_153D:
	word16 sp_99 = sp_246 - 0x0002
	Mem100[ss:sp_99:word16] = Mem55[ds:0x29D1:word16]
	Mem103[ss:sp_99 - 0x0002:word16] = Mem100[ds:0x29CF:word16]
	byte dl_106
	word16 di_107
	selector ds_108
	fn0800_A614(bp_245, ds, ptrArg00, wArg02, out dl_106, out di_107, out ds_108)
	return
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000

fn0800_1478_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> di:<invalid> bp:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000



byte fn0800_13AB(word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds ss
// LiveOut: bp dl si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved:
fn0800_13AB_entry:
	*bpOut = bp
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_13AB:
	byte dl_5
	word16 si_6
	word16 ax_7 = fn0800_AD2F(ds, ptrArg00, wArg02, out dl_5, out si_6)
	Mem11[ds:0x29ED:word16] = dx
	Mem12[ds:0x29EB:word16] = ax_7
// DataOut: bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_13B8_thunk_fn0800_13C6:
	fn0800_13C6(bp, si_6, di, ds)
	return dl_5
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ah:<invalid>

fn0800_13AB_exit:
// DataOut: bp dl si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ah:<invalid>



void fn0800_13C6(word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut:
// Trashed:
// Preserved:
fn0800_13C6_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_13C6:
	branch (Mem0[ds:0x29CF:word16] | Mem0[ds:0x29D1:word16]) != 0x0000 l0800_13F2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_13CF:
	word16 di_127
	fn0800_4234(si, di, ds, 0x4348, ds, 0x0941, ds, out di_127, out ds)
	Mem133[ds:0x29D1:word16] = dx
	Mem134[ds:0x29CF:word16] = 0x4348
	Mem135[ds:0x29ED:word16] = 0x0000
	Mem136[ds:0x29EB:word16] = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>
// LocalsOut: Local -0002(16)

l0800_13F2:
	Mem21[ss:bp - 0x006E:byte] = 0x52
	Mem24[ss:bp - 0x006D:byte] = 0x4E
	Mem25[ss:bp - 0x006C:byte] = 0x43
	Mem26[ss:bp - 0x006B:byte] = 0x41
	Mem27[ss:bp - 0x006A:byte] = 0x00
	Mem28[ss:bp - 0x0069:byte] = 0x0C
	Mem29[ss:bp - 0x0066:byte] = 0x00
	Mem30[ss:bp - 0x0065:byte] = 0x0C
	Mem31[ss:bp - 0x0064:byte] = 0x00
	Mem32[ss:bp - 0x0063:byte] = 0x00
	Mem37[ss:fp - 0x0002:word16] = 0x0000
	Mem40[ss:fp - 0x0004:word16] = 0x0004
	Mem42[ss:fp - 0x0006:word16] = ss
	Mem45[ss:fp - 0x0008:word16] = bp - 0x0066
	Mem54[ss:bp - 0x0068:byte] = (byte) (fn0800_2CCF(ds, ptrArg00, wArg04, wArg06) >>u 0x08)
	Mem59[ss:fp - 0x0002:word16] = 0x0000
	Mem62[ss:fp - 0x0004:word16] = 0x0004
	Mem64[ss:fp - 0x0006:word16] = ss
	Mem67[ss:fp - 0x0008:word16] = bp - 0x0066
	Mem71[ss:bp - 0x0067:byte] = (byte) fn0800_2CCF(ds, ptrArg00, wArg04, wArg06)
	Mem74[ss:fp - 0x0002:word16] = Mem71[ds:0x29D1:word16]
	Mem77[ss:fp - 0x0004:word16] = Mem74[ds:0x29CF:word16]
	Mem83[ss:fp - 0x0006:word16] = 0x0000
	Mem85[ss:fp - 0x0008:word16] = 0x000C
	Mem87[ss:fp - 0x000A:word16] = ss
	Mem90[ss:fp - 0x000C:word16] = bp - 0x006E
	selector ds_95 = fn0800_4152(bp, ds, wArg00, wArg02, wArg04, wArg08, wArg0A)
	Mem100[ss:fp - 0x0002:word16] = Mem90[ds_95:0x29D1:word16]
	Mem103[ss:fp - 0x0004:word16] = Mem100[ds_95:0x29CF:word16]
	Mem106[ss:fp - 0x0006:word16] = Mem103[ds_95:0x29ED:word16]
	Mem109[ss:fp - 0x0008:word16] = Mem106[ds_95:0x29EB:word16]
	word16 si_110
	selector ds_111
	fn0800_409C(bp, ds_95, wArg02, wArg04, wArg06, out si_110, out ds_111)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -8(fp):0x4348 -6(fp):ds -4(fp):0x0941 -2(fp):ds

l0800_1475_thunk_fn0800_1478:
	fn0800_1478(bp, ds_111)
	return
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -12(fp):bp - 0x006E -10(fp):ss -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_13C6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: -12(fp):bp - 0x006E -10(fp):ss -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_1478(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_1478_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1478:
	fn0800_1CF6(bp, ds)
	word16 sp_246 = fp
	word16 si_10 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_1527:
	word16 sp_34 = sp_246 - 0x0002
	Mem35[ss:sp_34:word16] = ds
	Mem39[ss:sp_34 - 0x0002:word16] = 0x4541
	byte dl_40
	word16 bp_41
	word16 si_42
	word16 di_43
	selector ds_44
	branch fn0800_2DE2(si_10, ds, out dl_40, out bp_41, out si_42, out di_43, out ds_44) == 0x0000 l0800_1539
	Mem52[ss:sp_34:word16] = ds_44
	Mem55[ss:sp_34 - 0x0002:word16] = 0x4541
	sp_246 = sp_34 + 0x0002
	byte dl_56
	word16 di_59
	word16 bp_245
	branch fn0800_2DE2(si_42, ds_44, out dl_56, out bp_245, out si_10, out di_59, out ds) == 0x0000 l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1536:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1486:
	Mem178[ss:sp_34:word16] = ds
	Mem181[ss:sp_34 - 0x0002:word16] = 0x4541
	Mem183[ss:sp_34 - 0x0004:word16] = ss
	Mem186[ss:sp_34 - 0x0006:word16] = bp_245 - 0x006E
	fn0800_3509(ds, wArg04, wArg06)
	Mem190[ss:sp_34:word16] = ds
	Mem193[ss:sp_34 - 0x0002:word16] = 0x4541
	Mem195[ss:sp_34 - 0x0004:word16] = ss
	Mem198[ss:sp_34 - 0x0006:word16] = bp_245 - 0x0084
	fn0800_35A3(ds, wArg04, wArg06)
	Mem204[ss:sp_34:word16] = ss
	Mem207[ss:sp_34 - 0x0002:word16] = bp_245 - 0x006E
	word16 dx_208
	word16 bp_209
	word16 ax_210 = fn0800_283D(si_10, di_59, ds, ptrArg00, out dx_208, out bp_209)
	Mem213[ss:bp_209 - 0x0002:word16] = dx_208
	Mem214[ss:bp_209 - 0x0004:word16] = ax_210
	branch (ax_210 | dx_208) != 0x0000 l0800_14CD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_14BC:
	Mem288[ss:sp_34 + 0x0002:word16] = ss
	Mem291[ss:sp_34:word16] = bp_209 - 0x006E
	word16 dx_292
	word16 ax_294 = fn0800_1F5C(bp_209, ds, ptrArg00, wArg02, out dx_292, out ds)
	Mem297[ss:bp_209 - 0x0002:word16] = dx_292
	Mem298[ss:bp_209 - 0x0004:word16] = ax_294
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_14CD:
	word16 sp_221 = sp_246 + 0x0002
	Mem224[ss:sp_221 - 0x0002:word16] = Mem214[ss:bp_209 - 0x0002:word16]
	Mem227[ss:sp_221 - 0x0004:word16] = Mem224[ss:bp_209 - 0x0004:word16]
	Mem229[ss:sp_221 - 0x0006:word16] = ss
	Mem232[ss:sp_221 - 0x0008:word16] = bp_209 - 0x0084
	word16 dx_234
	word16 ax_235 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_234)
	Mem237[ss:bp_209 - 0x0006:word16] = dx_234
	Mem238[ss:bp_209 - 0x0008:word16] = ax_235
	word16 ax_239 = ax_235 | dx_234
	branch ax_239 != 0x0000 l0800_14FD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_14FD:
	Mem279[ss:sp_221 - 0x0002:word16] = Mem238[ss:bp_209 - 0x0006:word16]
	Mem282[ss:sp_221 - 0x0004:word16] = Mem279[ss:bp_209 - 0x0008:word16]
	bp_245 = fn0800_23EC(bp_209, ds, wArg00, wArg02, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_14E9:
	Mem264[ss:sp_221 - 0x0002:word16] = Mem238[ss:bp_209 - 0x0002:word16]
	Mem267[ss:sp_221 - 0x0004:word16] = Mem264[ss:bp_209 - 0x0004:word16]
	Mem269[ss:sp_221 - 0x0006:word16] = ss
	Mem272[ss:sp_221 - 0x0008:word16] = bp_209 - 0x0084
	ax_239 = bp_209 - 0x0084
	bp_245 = fn0800_2085(ds, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1509:
	sp_246 = sp_221
	si_10 = 0x0001
	branch (DPB(ax_239, 0x00, 8) << 0x08) + DPB(dx_234, 0x00, 8) >=u 0xFF8C l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> di:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1539:
	branch si_10 != 0x0000 l0800_1551
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// LocalsOut: Local -0002(16)

l0800_1551:
	selector ds_118
	word16 bp_119 = fn0800_1E5E(bp_245, si_10, ds, out ds_118)
	word16 sp_121 = sp_246 - 0x0002
	Mem122[ss:sp_121:word16] = 0x0001
	fn0800_1CF6(bp_119, ds_118)
	Mem126[ss:sp_121:word16] = 0x0001
	Mem131[ss:sp_121 - 0x0002:word16] = 0x0000
	fn0800_2DBF(ds_118, wArg00, wArg02)
	word16 dx_136 = Mem131[ds_118:0x29CF:word16]
	Mem137[ds_118:0x29E1:word16] = Mem131[ds_118:0x29D1:word16]
	Mem138[ds_118:0x29DF:word16] = dx_136
	Mem140[ss:sp_121:word16] = ds_118
	Mem143[ss:sp_121 - 0x0002:word16] = 0x0945
	Mem145[ss:sp_121 - 0x0004:word16] = ds_118
	Mem148[ss:sp_121 - 0x0006:word16] = 0x4477
	word16 di_151
	word16 si_152 = fn0800_37BE(ds_118, wArg00, wArg02, wArg04, wArg06, out di_151)
	Mem156[ss:sp_121:word16] = ds_118
	Mem159[ss:sp_121 - 0x0002:word16] = 0x0941
	Mem161[ss:sp_121 - 0x0004:word16] = ds_118
	Mem164[ss:sp_121 - 0x0006:word16] = 0x4477
	word16 di_165
	selector ds_166
	word16 si_167 = fn0800_4234(si_152, di_151, ds_118, wArg00, wArg02, wArg04, wArg06, out di_165, out ds_166)
	Mem170[ds_166:0x29DD:word16] = dx_136
	Mem171[ds_166:0x29DB:word16] = 0x4477
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000
// Terminates process

l0800_159D_thunk_fn0800_1897:
	word16 bp_172
	word16 si_173
	selector ds_174
	fn0800_1897(si_167, ds_166, out bp_172, out si_173, out ds_174)
	return
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000

l0800_153D:
	word16 sp_99 = sp_246 - 0x0002
	Mem100[ss:sp_99:word16] = Mem55[ds:0x29D1:word16]
	Mem103[ss:sp_99 - 0x0002:word16] = Mem100[ds:0x29CF:word16]
	byte dl_106
	word16 di_107
	selector ds_108
	fn0800_A614(bp_245, ds, ptrArg00, wArg02, out dl_106, out di_107, out ds_108)
	return
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000

fn0800_1478_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> di:<invalid> bp:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):0x0000



byte fn0800_1758(word16 bp, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_1758_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1758:
	word16 ax_19
	selector ds_8 = fn0800_75EA(bp, ds, wArg00, wArg02, wArg04, wArg06)
	word16 ax_12 = Mem0[ds_8:0x2A05:word16]
	word16 dx_13 = Mem0[ds_8:0x2A03:word16]
	branch ax_12 <u Mem0[ds_8:0x2A09:word16] l0800_1778
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0800_176B:
	branch ax_12 != Mem0[ds_8:0x2A09:word16] l0800_1773
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cl:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid>

l0800_176D:
	branch dx_13 <u Mem0[ds_8:0x2A07:word16] l0800_1778
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cl:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid>

l0800_1778:
	ax_19 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cl:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid>

l0800_1773:
	ax_19 = 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cl:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid>

l0800_177A:
	branch ax_19 == 0x0000 l0800_177E_thunk_fn0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cl:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid>

l0800_177E_thunk_fn0800_17A2:
	word16 bp_71
	word16 si_72
	selector ds_73
	return fn0800_17A2(bp, ax_19, ds_8, out bp_71, out si_72, out ds_73)
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> bp:<invalid> si:<invalid> cl:<invalid> al:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid>

l0800_1780:
	Mem41[ss:fp + 0x0004:word16] = 0x0001
	word16 dx_46 = -Mem41[ds_8:0x2A03:word16]
	Mem51[ss:fp + 0x0002:word16] = -Mem41[ds_8:0x2A05:word16] - (dx_46 == 0x0000)
	Mem53[ss:fp:word16] = dx_46
	Mem56[ss:fp - 0x0002:word16] = Mem53[ds_8:0x29E1:word16]
	Mem59[ss:fp - 0x0004:word16] = Mem56[ds_8:0x29DF:word16]
	word16 di_61
	selector ds_62
	fn0800_ACB3(bp, ds_8, wArg00, wArg02, wArg08, out di_61, out ds_62)
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> bp:<invalid> si:<invalid> cl:<invalid> al:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid>

l0800_179F_thunk_fn0800_17A2:
	word16 bp_66
	word16 si_67
	selector ds_68
	return fn0800_17A2(bp, di_61, ds_62, out bp_66, out si_67, out ds_68)
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid> 2(fp):<invalid> 4(fp):0x0001

fn0800_1758_exit:
// DataOut: bp dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bp:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid> 2(fp):<invalid> 4(fp):0x0001



byte fn0800_17A2(word16 bp, word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: bp dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_17A2_entry:
	def fp
	def di
	def Mem0
	def ss
	def wArg02
	def wArg04
	def wArg06
	def ptrArg00
	def wArg00
	def bpOut
	def siOut
	def dsOut
	def wLoc02
	def wLoc04
	def bp
	def ds
	def dx
	def al
	def ah
	def cl
	def wArg08
	def wArg0A
	def dl
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_17A2:
	sp_1 = fp
	di_3 = di | di
	SZO_4 = cond(di_3)
	Z_5 = SZO_4 (alias)
	C_6 = false
	branch di_3 != 0x0000 l0800_17A9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17A9:
	ax_101 = Mem0[ds:0x2A09:word16]
	dx_102 = Mem0[ds:0x2A07:word16]
	Mem103[ds:0x2A05:word16] = ax_101
	Mem104[ds:0x2A03:word16] = dx_102
	v27_105 = Mem104[ds:0x29E5:word16]
	sp_106 = fp - 0x0002
	wLoc02_107 = v27_105
	v28_108 = Mem104[ds:0x29E3:word16]
	sp_109 = fp - 0x0004
	wLoc04_110 = v28_108
	ds_111 = fn0800_BA67(ds, wLoc04_110, wLoc02_107)
	sp_112 = sp_109 + 0x0004
	SCZO_113 = cond(Mem104[ds_111:0x2A09:word16] - 0x0000)
	C_114 = SCZO_113 (alias)
	SZO_115 = SCZO_113 (alias)
	Z_116 = SCZO_113 (alias)
	branch Mem104[ds_111:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17CC:
	branch Mem104[ds_111:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17CE:
	SCZO_220 = cond(Mem104[ds_111:0x2A07:word16] - 0x0012)
	C_221 = SCZO_220 (alias)
	branch Mem104[ds_111:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17D5:
	C_198 = PHI(C_114, C_221)
	v29_199 = Mem104[ds_111:0x29E5:word16]
	sp_200 = sp_112 - 0x0002
	Mem201[ss:sp_200:word16] = v29_199
	v30_202 = Mem201[ds_111:0x29E3:word16]
	sp_203 = sp_200 - 0x0002
	Mem204[ss:sp_203:word16] = v30_202
	dx_207 = fn0800_3F58(bp, ds_111, wArg00, wArg02, out di_205, out ds_206)
	sp_208 = sp_203 + 0x0004
	SCZO_209 = cond(sp_208)
	cl_210 = 0x08
	ax_212 = fn0800_8CAA(ax_101, cl_210, dx_207, wLoc02_107, out dx_211)
	al_213 = (byte) ax_212 (alias)
	ah_214 = SLICE(ax_212, byte, 8) (alias)
	SCZO_215 = cond(dx_211 - 0x0052)
	Z_216 = SCZO_215 (alias)
	branch dx_211 != 0x0052 l0800_17F2
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17ED:
	SCZO_217 = cond(ax_212 - 0x4E43)
	Z_218 = SCZO_217 (alias)
	branch ax_212 == 0x4E43 l0800_181E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> ah:<invalid> es:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17F2:
	Z_156 = PHI(Z_116, Z_116, Z_216, Z_218)
	al_157 = PHI(al, al, al_213, al_213)
	ah_158 = PHI(ah, ah, ah_214, ah_214)
	cl_159 = PHI(cl, cl, cl_210, cl_210)
	C_160 = PHI(C_114, C_221, C_198, C_198)
	di_161 = PHI(di_3, di_3, di_205, di_205)
	sp_162 = PHI(sp_112, sp_112, sp_208, sp_208)
	ds_163 = PHI(ds_111, ds_111, ds_206, ds_206)
	v31_164 = Mem104[ds_163:0x29D1:word16]
	sp_165 = sp_162 - 0x0002
	Mem166[ss:sp_165:word16] = v31_164
	v32_167 = Mem166[ds_163:0x29CF:word16]
	sp_168 = sp_165 - 0x0002
	Mem169[ss:sp_168:word16] = v32_167
	ax_170 = 0x524E
	dx_171 = 0x4300
	sp_172 = sp_168 - 0x0002
	Mem173[ss:sp_172:word16] = 0x524E
	sp_174 = sp_172 - 0x0002
	Mem175[ss:sp_174:word16] = 0x4300
	dl_178 = fn0800_409C(bp, ds_163, wArg02, wArg04, wArg06, out si_176, out ds_177)
	sp_179 = sp_174 + 0x0008
	SCZO_180 = cond(sp_179)
	v33_181 = Mem175[ds_177:0x29D1:word16]
	sp_182 = sp_179 - 0x0002
	Mem183[ss:sp_182:word16] = v33_181
	v34_184 = Mem183[ds_177:0x29CF:word16]
	sp_185 = sp_182 - 0x0002
	Mem186[ss:sp_185:word16] = v34_184
	v35_187 = Mem186[ds_177:0x2A09:word16]
	sp_188 = sp_185 - 0x0002
	Mem189[ss:sp_188:word16] = v35_187
	v36_190 = Mem189[ds_177:0x2A07:word16]
	sp_191 = sp_188 - 0x0002
	Mem192[ss:sp_191:word16] = v36_190
	dl_195 = fn0800_409C(bp, ds_177, wArg02, wArg04, wArg06, out si_193, out ds_194)
	sp_196 = sp_191 + 0x0008
	SCZO_197 = cond(sp_196)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_181E:
	Z_120 = PHI(Z_218, Z_156)
	al_121 = PHI(al_213, al_157)
	ah_122 = PHI(ah_214, ah_158)
	cl_123 = PHI(cl_210, cl_159)
	C_124 = PHI(C_198, C_160)
	ax_125 = PHI(ax_212, ax_170)
	di_126 = PHI(di_205, di_161)
	sp_127 = PHI(sp_208, sp_196)
	ds_128 = PHI(ds_206, ds_194)
	dl_129 = PHI(dl, dl_195)
	dx_130 = PHI(dx_211, dx_171)
	v37_131 = Mem104[ds_128:0x2A09:word16]
	sp_132 = sp_127 - 0x0002
	Mem133[ss:sp_132:word16] = v37_131
	v38_134 = Mem133[ds_128:0x2A07:word16]
	sp_135 = sp_132 - 0x0002
	Mem136[ss:sp_135:word16] = v38_134
	v39_137 = Mem136[ds_128:0x29D1:word16]
	sp_138 = sp_135 - 0x0002
	Mem139[ss:sp_138:word16] = v39_137
	v40_140 = Mem139[ds_128:0x29CF:word16]
	sp_141 = sp_138 - 0x0002
	Mem142[ss:sp_141:word16] = v40_140
	v41_143 = Mem142[ds_128:0x29E5:word16]
	sp_144 = sp_141 - 0x0002
	Mem145[ss:sp_144:word16] = v41_143
	v42_146 = Mem145[ds_128:0x29E3:word16]
	sp_147 = sp_144 - 0x0002
	Mem148[ss:sp_147:word16] = v42_146
	bp_152 = fn0800_3B0A(bp, ds_128, wArg08, wArg0A, out ds_151)
	sp_153 = sp_147 + 0x000C
	SCZO_154 = cond(sp_153)
	si_155 = 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17A6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_183F:
	wLoc02_7 = PHI(wLoc02, wLoc02_107)
	wLoc04_8 = PHI(wLoc04, wLoc04_110)
	SZO_9 = PHI(SZO_4, SZO_115)
	Z_10 = PHI(Z_5, Z_120)
	sp_11 = PHI(sp_1, sp_153)
	bp_12 = PHI(bp, bp_152)
	ds_13 = PHI(ds, ds_151)
	dx_14 = PHI(dx, dx_130)
	v8_16 = Mem0[ds_13:0x29D1:word16]
	sp_17 = sp_11 - 0x0002
	Mem18[ss:sp_17:word16] = v8_16
	v10_20 = Mem18[ds_13:0x29CF:word16]
	sp_21 = sp_17 - 0x0002
	Mem22[ss:sp_21:word16] = v10_20
	v11_23 = Mem22[ds_13:0x29ED:word16]
	sp_24 = sp_21 - 0x0002
	Mem25[ss:sp_24:word16] = v11_23
	v12_26 = Mem25[ds_13:0x29EB:word16]
	sp_27 = sp_24 - 0x0002
	Mem28[ss:sp_27:word16] = v12_26
	dl_34 = fn0800_409C(bp_12, ds_13, wArg02, wArg04, wArg06, out si_32, out ds_33)
	sp_35 = sp_27 + 0x0008
	SCZO_36 = cond(sp_35)
	v14_37 = Mem28[ds_33:0x29E5:word16]
	sp_38 = sp_35 - 0x0002
	Mem39[ss:sp_38:word16] = v14_37
	v15_40 = Mem39[ds_33:0x29E3:word16]
	sp_41 = sp_38 - 0x0002
	Mem42[ss:sp_41:word16] = v15_40
	al_47 = fn0800_A614(bp_12, ds_33, ptrArg00, wArg02, out dl_44, out di_45, out ds_46)
	sp_48 = sp_41 + 0x0004
	SCZO_49 = cond(sp_48)
	sp_50 = sp_48 - 0x0002
	Mem51[ss:sp_50:word16] = ds_46
	ax_52 = 0x4541
	sp_53 = sp_50 - 0x0002
	Mem54[ss:sp_53:word16] = 0x4541
	sp_55 = sp_53 - 0x0002
	Mem56[ss:sp_55:word16] = si_32
	ds_58 = fn0800_0ABC(bp_12, ds_46, wArg00, wArg02, wArg04)
	sp_59 = sp_55 + 0x0006
	es_bx_60 = Mem56[ds_58:0x2E51:segptr32]
	es_61 = SLICE(es_bx_60, selector, 16) (alias)
	bx_62 = (word16) es_bx_60 (alias)
	al_63 = Mem56[es_61:bx_62 + 0x0004:byte]
	ah_64 = 0x00
	ax_65 = DPB(ax_52, ah_64, 8) (alias)
	cl_66 = 0x08
	ax_67 = ax_65 << 0x08
	dl_68 = Mem56[es_61:bx_62 + 0x0005:byte]
	dh_69 = 0x00
	dx_70 = DPB(dx_14, dh_69, 8) (alias)
	ax_71 = ax_67 + dx_70
	SCZO_72 = cond(ax_71 - 0xFF8C)
	C_73 = SCZO_72 (alias)
	branch ax_71 <u 0xFF8C l0800_1897
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cl:<invalid> bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_1888_thunk_fn0800_1897:
	dl = fn0800_1897(si, ds, out bp, out si, out ds)
	dx = DPB(dx, dl, 0) (alias)
	return dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_188A:
	sp_74 = sp_59 - 0x0002
	Mem75[ss:sp_74:word16] = ds_58
	ax_76 = 0x0952
	sp_77 = sp_74 - 0x0002
	Mem78[ss:sp_77:word16] = 0x0952
	si_80 = fn0800_B2EF(ds_58, wArg00, wArg02, out di_79)
	sp_81 = sp_77 + 0x0004
	SCZO_82 = cond(sp_81)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1892_thunk_fn0800_18A9:
	dl_86 = fn0800_18A9(bp_12, ds_58, out bp_83, out si_84, out ds_85)
	dx_87 = DPB(dx_70, dl_86, 0) (alias)
	return dl_86
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_17A2_exit:
	bp_88 = PHI(bp, bp_83)
	si_89 = PHI(si, si_84)
	ds_90 = PHI(ds, ds_85)
	dl_91 = PHI(dl, dl_86)
	dx_92 = PHI(dx, dx_87)
	use bp_88 (=> bpOut)
	use si_89 (=> siOut)
	use ds_90 (=> dsOut)
// DataOut: bp dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bp:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>



byte fn0800_1897(word16 si, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si ss
// LiveOut: bp dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_1897_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1897:
	sp = fp
	sp = fp - 0x0002
	wLoc02 = ds
	ax = 0x4541
	sp = fp - 0x0004
	wLoc04 = 0x4541
	ax = fn0800_2DE2(si, ds, out dl, out bp, out si, out di, out ds)
	sp = sp + 0x0004
	ax = ax | ax
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_18A9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_18A4_thunk_fn0800_18A9:
	dl = fn0800_18A9(bp, ds, out bp, out si, out ds)
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	dx_bp = DPB(dx_bp, dl, 16) (alias)
	return dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -4(fp):0x4541 -2(fp):ds

l0800_18A6:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -4(fp):0x4541 -2(fp):ds
// LocalsOut: Local -0002(16)

l0800_15A3:
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x093D
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x093D
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x4541
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x4541
	si = fn0800_4234(si, di, ds, wArg00, wArg02, wArg04, wArg06, out di, out ds)
	sp = sp + 0x0008
	SCZO = cond(sp)
	Mem0[ds:0x29E5:word16] = dx
	Mem0[ds:0x29E3:word16] = ax
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x4541
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x4541
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ss
	ax = bp - 0x006E
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	fn0800_3509(ds, wArg04, wArg06)
	sp = sp + 0x0008
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x4541
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x4541
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ss
	ax = bp - 0x0084
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	dl = fn0800_35A3(ds, wArg04, wArg06)
	dx = DPB(dx, dl, 0) (alias)
	dx_bp = DPB(dx_bp, dl, 16) (alias)
	sp = sp + 0x0008
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x4541
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x4541
	fn0800_0C93(bp, ds, wArg00, wArg02)
	sp = sp + 0x0004
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ss
	ax = bp - 0x006E
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ax = fn0800_283D(si, di, ds, ptrArg00, out dx, out bp)
	sp = sp + 0x0002
	sp = sp + 0x0004
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = dx
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ss
	ax = bp - 0x0084
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ax = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx)
	sp = sp + 0x0008
	SCZO = cond(sp)
	Mem0[ss:bp - 0x0006:word16] = dx
	Mem0[ss:bp - 0x0008:word16] = ax
	v12 = Mem0[ds:0x29D1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v12
	v13 = Mem0[ds:0x29CF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v13
	ax = fn0800_4194(bp, ds, wArg00, wArg02, out si, out ds)
	sp = sp + 0x0004
	ax = ax - 0x0004
	SCZO = cond(ax)
	dx_ax = dx_bp - 0x0000006E
	ax = (word16) dx_ax (alias)
	dx = SLICE(dx_ax, word16, 16) (alias)
	SCZO = cond(dx_ax)
	Mem0[ds:0x29E9:word16] = dx
	Mem0[ds:0x29E7:word16] = ax
	ax = Mem0[ds:0x29E9:word16]
	dx_ax = (int32) ax
	ax = (word16) dx_ax (alias)
	dx = SLICE(dx_ax, word16, 16) (alias)
	cl = 0x08
	ax = fn0800_8C8A(ax, cl, dx, wLoc02, out dx)
	es_di = Mem0[ss:bp - 0x0008:segptr32]
	es = SLICE(es_di, selector, 16) (alias)
	di = (word16) es_di (alias)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ax = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
	cx = 0xFFFF
	cl = (byte) cx (alias)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -4(fp):0x4541 -2(fp):ds
// LocalsOut: Local -0002(0)

l0800_1632:
	branch cx == 0x0000 l0800_1634
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> bx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_1632_1:
	SCZO = cond(al - Mem0[es:di:byte])
	Z = SCZO (alias)
	di = di + 0x0001
	es_di = SEQ(es, di) (alias)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch Test(NE,Z) l0800_1632
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> bx:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_1634:
	cx = ~cx
	cl = (byte) cx (alias)
	ax = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	di = di - cx
	es_di = SEQ(es, di) (alias)
	SCZO = cond(di)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> bp:<invalid> es:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_163A:
	branch cx == 0x0000 l0800_163C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> bp:<invalid> es:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_163A_2:
	SCZO = cond(al - Mem0[es:di:byte])
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
	di = di + 0x0001
	es_di = SEQ(es, di) (alias)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch Test(NE,Z) l0800_163A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> bp:<invalid> es:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_163C:
	branch Test(EQ,Z) l0800_1645
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> bp:<invalid> es:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_163E:
	di = 0x0001
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	es = 0x0000
	es_di = SEQ(es, di) (alias)
	es_bx = SEQ(es, bx) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> bp:<invalid> es:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_1645:
	di = di - 0x0001
	ax = es
	es = ax
	es_bx = SEQ(es, bx) (alias)
	ax = Mem0[ss:sp:word16]
	al = (byte) ax (alias)
	sp = sp + 0x0002
	Mem0[es:di + 0x0001:byte] = al
	ax = Mem0[ds:0x29E9:word16]
	dx_ax = (int32) ax
	ax = (word16) dx_ax (alias)
	es_di = Mem0[ss:bp - 0x0008:segptr32]
	es = SLICE(es_di, selector, 16) (alias)
	di = (word16) es_di (alias)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ax = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
	cx = 0xFFFF
	cl = (byte) cx (alias)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_165C:
	branch cx == 0x0000 l0800_165E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_165C_1:
	SCZO = cond(al - Mem0[es:di:byte])
	Z = SCZO (alias)
	di = di + 0x0001
	es_di = SEQ(es, di) (alias)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch Test(NE,Z) l0800_165C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_165E:
	cx = ~cx
	cl = (byte) cx (alias)
	ax = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	di = di - cx
	es_di = SEQ(es, di) (alias)
	SCZO = cond(di)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_1664:
	branch cx == 0x0000 l0800_1666
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_1664_2:
	SCZO = cond(al - Mem0[es:di:byte])
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
	di = di + 0x0001
	es_di = SEQ(es, di) (alias)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch Test(NE,Z) l0800_1664
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_1666:
	branch Test(EQ,Z) l0800_166F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_1668:
	di = 0x0001
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	es = 0x0000
	es_di = SEQ(es, di) (alias)
	es_bx = SEQ(es, bx) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_166F:
	di = di - 0x0001
	SZO = cond(di)
	ax = es
	es = ax
	es_bx = SEQ(es, bx) (alias)
	ax = Mem0[ss:sp:word16]
	al = (byte) ax (alias)
	sp = sp + 0x0002
	Mem0[es:di + 0x0002:byte] = al
	dx = Mem0[ds:0x29E9:word16]
	dx_bp = SEQ(dx, bp) (alias)
	ax = Mem0[ds:0x29E7:word16]
	cl = 0x08
	ax = fn0800_8C8A(ax, cl, dx, wLoc02, out dx)
	es_di = Mem0[ss:bp - 0x0008:segptr32]
	es = SLICE(es_di, selector, 16) (alias)
	di = (word16) es_di (alias)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ax = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
	cx = 0xFFFF
	cl = (byte) cx (alias)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_168E:
	branch cx == 0x0000 l0800_1690
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_168E_1:
	SCZO = cond(al - Mem0[es:di:byte])
	Z = SCZO (alias)
	di = di + 0x0001
	es_di = SEQ(es, di) (alias)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch Test(NE,Z) l0800_168E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_1690:
	cx = ~cx
	cl = (byte) cx (alias)
	ax = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	di = di - cx
	es_di = SEQ(es, di) (alias)
	SCZO = cond(di)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_1696:
	branch cx == 0x0000 l0800_1698
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_1696_2:
	SCZO = cond(al - Mem0[es:di:byte])
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
	di = di + 0x0001
	es_di = SEQ(es, di) (alias)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch Test(NE,Z) l0800_1696
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_1698:
	branch Test(EQ,Z) l0800_16A1
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_169A:
	di = 0x0001
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	es = 0x0000
	es_di = SEQ(es, di) (alias)
	es_bx = SEQ(es, bx) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16A1:
	di = di - 0x0001
	ax = es
	es = ax
	es_bx = SEQ(es, bx) (alias)
	ax = Mem0[ss:sp:word16]
	al = (byte) ax (alias)
	sp = sp + 0x0002
	Mem0[es:di + 0x0003:byte] = al
	es_di = Mem0[ss:bp - 0x0008:segptr32]
	es = SLICE(es_di, selector, 16) (alias)
	di = (word16) es_di (alias)
	ax = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
	cx = 0xFFFF
	cl = (byte) cx (alias)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16B3:
	branch cx == 0x0000 l0800_16B5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16B3_1:
	SCZO = cond(al - Mem0[es:di:byte])
	Z = SCZO (alias)
	di = di + 0x0001
	es_di = SEQ(es, di) (alias)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch Test(NE,Z) l0800_16B3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16B5:
	cx = ~cx
	cl = (byte) cx (alias)
	ax = 0x0000
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	di = di - cx
	es_di = SEQ(es, di) (alias)
	SCZO = cond(di)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16BB:
	branch cx == 0x0000 l0800_16BD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16BB_2:
	SCZO = cond(al - Mem0[es:di:byte])
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
	di = di + 0x0001
	es_di = SEQ(es, di) (alias)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch Test(NE,Z) l0800_16BB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16BD:
	branch Test(EQ,Z) l0800_16C6
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16BF:
	di = 0x0001
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	es = 0x0000
	es_di = SEQ(es, di) (alias)
	es_bx = SEQ(es, bx) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_16C6:
	di = di - 0x0001
	ax = es
	dl = Mem0[ds:0x29E7:byte]
	dx = DPB(dx, dl, 0) (alias)
	dx_bp = DPB(dx_bp, dl, 16) (alias)
	es = ax
	Mem0[es:di + 0x0004:byte] = dl
	di = 0x0001
	es_di = SEQ(es, di) (alias)
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	Mem0[ds:0x2A05:word16] = 0x0000
	Mem0[ds:0x2A03:word16] = 0x0000
	si = 0x0000
	v23 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v23
	v24 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v24
	ax = fn0800_4194(bp, ds, wArg00, wArg02, out si, out ds)
	sp = sp + 0x0004
	Mem0[ds:0x2A09:word16] = dx
	Mem0[ds:0x2A07:word16] = ax
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0000
	v25 = Mem0[ds:0x29E9:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v25
	v26 = Mem0[ds:0x29E7:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v26
	v27 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v27
	v28 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v28
	ax = fn0800_ACB3(bp, ds, wArg00, wArg02, wArg08, out di, out ds)
	sp = sp + 0x000A
	SCZO = cond(Mem0[ds:0x2A09:word16] - 0x0000)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
	branch Test(UGE,C) l0800_171B
// DataOut: bp di ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> bp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_171B:
	branch Test(UGT,CZ) l0800_1724
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_171D:
	SCZO = cond(Mem0[ds:0x2A07:word16] - 0x0012)
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_1722_thunk_fn0800_17A2:
	dl = fn0800_17A2(bp, di, ds, out bp, out si, out ds)
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	dx_bp = DPB(dx_bp, dl, 16) (alias)
	return dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1724:
	SCZO = cond(Mem0[ds:0x2A21:word16] - 0x0000)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_1729_thunk_fn0800_17A2:
	dl = fn0800_17A2(bp, di, ds, out bp, out si, out ds)
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	dx_bp = DPB(dx_bp, dl, 16) (alias)
	return dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_172B:
	v56 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v56
	v57 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v57
	dx = fn0800_3F58(bp, ds, wArg00, wArg02, out di, out ds)
	dx_bp = SEQ(dx, bp) (alias)
	sp = sp + 0x0004
	SCZO = cond(sp)
	cl = 0x08
	ax = fn0800_8CAA(ax, cl, dx, wLoc02, out dx)
	dx_ax = SEQ(dx, ax) (alias)
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	SCZO = cond(dx - 0x0052)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_1748
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1743:
	SCZO = cond(ax - 0x4E43)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1746_thunk_fn0800_17A2:
	dl = fn0800_17A2(bp, di, ds, out bp, out si, out ds)
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	dx_bp = DPB(dx_bp, dl, 16) (alias)
	return dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1748:
	v58 = Mem0[ds:0x2A09:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v58
	v59 = Mem0[ds:0x2A07:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v59
	v60 = Mem0[ds:0x2A09:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v60
	v61 = Mem0[ds:0x2A07:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v61
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1754_thunk_fn0800_1758:
	dl = fn0800_1758(bp, ds, out bp, out si, out ds)
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	dx_bp = DPB(dx_bp, dl, 16) (alias)
	return dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1718:
	dl = fn0800_17A2(bp, di, ds, out bp, out si, out ds)
	dx = DPB(dx, dl, 0) (alias)
	dx_ax = DPB(dx_ax, dl, 16) (alias)
	dx_bp = DPB(dx_bp, dl, 16) (alias)
	return dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_1897_exit:
	use bp (=> bpOut)
	use si (=> siOut)
	use ds (=> dsOut)
// DataOut: bp dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ch:<invalid> bh:0x40 bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_17A2:
	sp_1 = fp
	di_3 = di | di
	SZO_4 = cond(di_3)
	Z_5 = SZO_4 (alias)
	C_6 = false
	branch di_3 != 0x0000 l0800_17A9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17A9:
	ax_101 = Mem0[ds:0x2A09:word16]
	dx_102 = Mem0[ds:0x2A07:word16]
	Mem103[ds:0x2A05:word16] = ax_101
	Mem104[ds:0x2A03:word16] = dx_102
	v27_105 = Mem104[ds:0x29E5:word16]
	sp_106 = fp - 0x0002
	wLoc02_107 = v27_105
	v28_108 = Mem104[ds:0x29E3:word16]
	sp_109 = fp - 0x0004
	wLoc04_110 = v28_108
	ds_111 = fn0800_BA67(ds, wLoc04_110, wLoc02_107)
	sp_112 = sp_109 + 0x0004
	SCZO_113 = cond(Mem104[ds_111:0x2A09:word16] - 0x0000)
	C_114 = SCZO_113 (alias)
	SZO_115 = SCZO_113 (alias)
	Z_116 = SCZO_113 (alias)
	branch Mem104[ds_111:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17CC:
	branch Mem104[ds_111:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17CE:
	SCZO_220 = cond(Mem104[ds_111:0x2A07:word16] - 0x0012)
	C_221 = SCZO_220 (alias)
	branch Mem104[ds_111:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17D5:
	C_198 = PHI(C_114, C_221)
	v29_199 = Mem104[ds_111:0x29E5:word16]
	sp_200 = sp_112 - 0x0002
	Mem201[ss:sp_200:word16] = v29_199
	v30_202 = Mem201[ds_111:0x29E3:word16]
	sp_203 = sp_200 - 0x0002
	Mem204[ss:sp_203:word16] = v30_202
	dx_207 = fn0800_3F58(bp, ds_111, wArg00, wArg02, out di_205, out ds_206)
	sp_208 = sp_203 + 0x0004
	SCZO_209 = cond(sp_208)
	cl_210 = 0x08
	ax_212 = fn0800_8CAA(ax_101, cl_210, dx_207, wLoc02_107, out dx_211)
	al_213 = (byte) ax_212 (alias)
	ah_214 = SLICE(ax_212, byte, 8) (alias)
	SCZO_215 = cond(dx_211 - 0x0052)
	Z_216 = SCZO_215 (alias)
	branch dx_211 != 0x0052 l0800_17F2
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17ED:
	SCZO_217 = cond(ax_212 - 0x4E43)
	Z_218 = SCZO_217 (alias)
	branch ax_212 == 0x4E43 l0800_181E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> ah:<invalid> es:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17F2:
	Z_156 = PHI(Z_116, Z_116, Z_216, Z_218)
	al_157 = PHI(al, al, al_213, al_213)
	ah_158 = PHI(ah, ah, ah_214, ah_214)
	cl_159 = PHI(cl, cl, cl_210, cl_210)
	C_160 = PHI(C_114, C_221, C_198, C_198)
	di_161 = PHI(di_3, di_3, di_205, di_205)
	sp_162 = PHI(sp_112, sp_112, sp_208, sp_208)
	ds_163 = PHI(ds_111, ds_111, ds_206, ds_206)
	v31_164 = Mem104[ds_163:0x29D1:word16]
	sp_165 = sp_162 - 0x0002
	Mem166[ss:sp_165:word16] = v31_164
	v32_167 = Mem166[ds_163:0x29CF:word16]
	sp_168 = sp_165 - 0x0002
	Mem169[ss:sp_168:word16] = v32_167
	ax_170 = 0x524E
	dx_171 = 0x4300
	sp_172 = sp_168 - 0x0002
	Mem173[ss:sp_172:word16] = 0x524E
	sp_174 = sp_172 - 0x0002
	Mem175[ss:sp_174:word16] = 0x4300
	dl_178 = fn0800_409C(bp, ds_163, wArg02, wArg04, wArg06, out si_176, out ds_177)
	sp_179 = sp_174 + 0x0008
	SCZO_180 = cond(sp_179)
	v33_181 = Mem175[ds_177:0x29D1:word16]
	sp_182 = sp_179 - 0x0002
	Mem183[ss:sp_182:word16] = v33_181
	v34_184 = Mem183[ds_177:0x29CF:word16]
	sp_185 = sp_182 - 0x0002
	Mem186[ss:sp_185:word16] = v34_184
	v35_187 = Mem186[ds_177:0x2A09:word16]
	sp_188 = sp_185 - 0x0002
	Mem189[ss:sp_188:word16] = v35_187
	v36_190 = Mem189[ds_177:0x2A07:word16]
	sp_191 = sp_188 - 0x0002
	Mem192[ss:sp_191:word16] = v36_190
	dl_195 = fn0800_409C(bp, ds_177, wArg02, wArg04, wArg06, out si_193, out ds_194)
	sp_196 = sp_191 + 0x0008
	SCZO_197 = cond(sp_196)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_181E:
	Z_120 = PHI(Z_218, Z_156)
	al_121 = PHI(al_213, al_157)
	ah_122 = PHI(ah_214, ah_158)
	cl_123 = PHI(cl_210, cl_159)
	C_124 = PHI(C_198, C_160)
	ax_125 = PHI(ax_212, ax_170)
	di_126 = PHI(di_205, di_161)
	sp_127 = PHI(sp_208, sp_196)
	ds_128 = PHI(ds_206, ds_194)
	dl_129 = PHI(dl, dl_195)
	dx_130 = PHI(dx_211, dx_171)
	v37_131 = Mem104[ds_128:0x2A09:word16]
	sp_132 = sp_127 - 0x0002
	Mem133[ss:sp_132:word16] = v37_131
	v38_134 = Mem133[ds_128:0x2A07:word16]
	sp_135 = sp_132 - 0x0002
	Mem136[ss:sp_135:word16] = v38_134
	v39_137 = Mem136[ds_128:0x29D1:word16]
	sp_138 = sp_135 - 0x0002
	Mem139[ss:sp_138:word16] = v39_137
	v40_140 = Mem139[ds_128:0x29CF:word16]
	sp_141 = sp_138 - 0x0002
	Mem142[ss:sp_141:word16] = v40_140
	v41_143 = Mem142[ds_128:0x29E5:word16]
	sp_144 = sp_141 - 0x0002
	Mem145[ss:sp_144:word16] = v41_143
	v42_146 = Mem145[ds_128:0x29E3:word16]
	sp_147 = sp_144 - 0x0002
	Mem148[ss:sp_147:word16] = v42_146
	bp_152 = fn0800_3B0A(bp, ds_128, wArg08, wArg0A, out ds_151)
	sp_153 = sp_147 + 0x000C
	SCZO_154 = cond(sp_153)
	si_155 = 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_17A6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> si:<invalid> al:<invalid> bp:<invalid> ah:<invalid> ds:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -8(fp):bp - 0x0084 -6(fp):bp - 0x0084 -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_183F:
	wLoc02_7 = PHI(wLoc02, wLoc02_107)
	wLoc04_8 = PHI(wLoc04, wLoc04_110)
	SZO_9 = PHI(SZO_4, SZO_115)
	Z_10 = PHI(Z_5, Z_120)
	sp_11 = PHI(sp_1, sp_153)
	bp_12 = PHI(bp, bp_152)
	ds_13 = PHI(ds, ds_151)
	dx_14 = PHI(dx, dx_130)
	v8_16 = Mem0[ds_13:0x29D1:word16]
	sp_17 = sp_11 - 0x0002
	Mem18[ss:sp_17:word16] = v8_16
	v10_20 = Mem18[ds_13:0x29CF:word16]
	sp_21 = sp_17 - 0x0002
	Mem22[ss:sp_21:word16] = v10_20
	v11_23 = Mem22[ds_13:0x29ED:word16]
	sp_24 = sp_21 - 0x0002
	Mem25[ss:sp_24:word16] = v11_23
	v12_26 = Mem25[ds_13:0x29EB:word16]
	sp_27 = sp_24 - 0x0002
	Mem28[ss:sp_27:word16] = v12_26
	dl_34 = fn0800_409C(bp_12, ds_13, wArg02, wArg04, wArg06, out si_32, out ds_33)
	sp_35 = sp_27 + 0x0008
	SCZO_36 = cond(sp_35)
	v14_37 = Mem28[ds_33:0x29E5:word16]
	sp_38 = sp_35 - 0x0002
	Mem39[ss:sp_38:word16] = v14_37
	v15_40 = Mem39[ds_33:0x29E3:word16]
	sp_41 = sp_38 - 0x0002
	Mem42[ss:sp_41:word16] = v15_40
	al_47 = fn0800_A614(bp_12, ds_33, ptrArg00, wArg02, out dl_44, out di_45, out ds_46)
	sp_48 = sp_41 + 0x0004
	SCZO_49 = cond(sp_48)
	sp_50 = sp_48 - 0x0002
	Mem51[ss:sp_50:word16] = ds_46
	ax_52 = 0x4541
	sp_53 = sp_50 - 0x0002
	Mem54[ss:sp_53:word16] = 0x4541
	sp_55 = sp_53 - 0x0002
	Mem56[ss:sp_55:word16] = si_32
	ds_58 = fn0800_0ABC(bp_12, ds_46, wArg00, wArg02, wArg04)
	sp_59 = sp_55 + 0x0006
	es_bx_60 = Mem56[ds_58:0x2E51:segptr32]
	es_61 = SLICE(es_bx_60, selector, 16) (alias)
	bx_62 = (word16) es_bx_60 (alias)
	al_63 = Mem56[es_61:bx_62 + 0x0004:byte]
	ah_64 = 0x00
	ax_65 = DPB(ax_52, ah_64, 8) (alias)
	cl_66 = 0x08
	ax_67 = ax_65 << 0x08
	dl_68 = Mem56[es_61:bx_62 + 0x0005:byte]
	dh_69 = 0x00
	dx_70 = DPB(dx_14, dh_69, 8) (alias)
	ax_71 = ax_67 + dx_70
	SCZO_72 = cond(ax_71 - 0xFF8C)
	C_73 = SCZO_72 (alias)
	branch ax_71 <u 0xFF8C l0800_1897
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cl:<invalid> bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_1888_thunk_fn0800_1897:
	dl = fn0800_1897(si, ds, out bp, out si, out ds)
	dx = DPB(dx, dl, 0) (alias)
	return dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_188A:
	sp_74 = sp_59 - 0x0002
	Mem75[ss:sp_74:word16] = ds_58
	ax_76 = 0x0952
	sp_77 = sp_74 - 0x0002
	Mem78[ss:sp_77:word16] = 0x0952
	si_80 = fn0800_B2EF(ds_58, wArg00, wArg02, out di_79)
	sp_81 = sp_77 + 0x0004
	SCZO_82 = cond(sp_81)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1892_thunk_fn0800_18A9:
	dl_86 = fn0800_18A9(bp_12, ds_58, out bp_83, out si_84, out ds_85)
	dx_87 = DPB(dx_70, dl_86, 0) (alias)
	return dl_86
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_17A2_exit:
	bp_88 = PHI(bp, bp_83)
	si_89 = PHI(si, si_84)
	ds_90 = PHI(ds, ds_85)
	dl_91 = PHI(dl, dl_86)
	dx_92 = PHI(dx, dx_87)
	use bp_88 (=> bpOut)
	use si_89 (=> siOut)
	use ds_90 (=> dsOut)
// DataOut: bp dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bp:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 Sequence dx:ax:<invalid> Sequence es:di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>



byte fn0800_18A9(word16 bp, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_18A9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_18A9:
	byte dl_13
	word16 di_14
	selector ds_15
	fn0800_A614(bp, ds, DPB(ptrLoc04, Mem0[ds:0x29DB:word16], 0), Mem0[ds:0x29DD:word16], out dl_13, out di_14, out ds_15)
	Mem20[ss:fp - 0x0002:word16] = ds_15
	Mem25[ss:fp - 0x0004:word16] = 0x4477
	fn0800_8F7F(0x77, ds_15, ptrArg00)
	selector ds_31
	word16 bp_32 = fn0800_1E5E(bp, si, ds_15, out ds_31)
	Mem35[ss:fp - 0x0002:word16] = Mem25[ds_31:0x29D1:word16]
	Mem38[ss:fp - 0x0004:word16] = Mem35[ds_31:0x29CF:word16]
	byte dl_40
	word16 di_41
	selector ds_42
	fn0800_A614(bp_32, ds_31, ptrArg00, wArg02, out dl_40, out di_41, out ds_42)
	word16 si_48
	*siOut = Mem38[ss:fp + 0x0002:word16]
	word16 bp_50
	*bpOut = Mem38[ss:bp_32:word16]
	return dl_40
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_18A9_exit:
// DataOut: bp dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_18D9(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_18D9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_18D9:
	word16 di_32
	word16 si_33 = fn0800_B2EF(ds, 0x096C, ds, out di_32)
	word16 dx_46
	word16 di_48
	word16 si_112
	selector ds_211
	word16 ax_50 = fn0800_AA7E(si_33, di_32, ds, 0x4348, ds, 0x097D, ds, out dx_46, out si_112, out di_48, out ds_211)
	Mem52[ds_211:0x29D1:word16] = dx_46
	Mem53[ds_211:0x29CF:word16] = ax_50
	word16 bp_135 = fp - 0x0002
	branch (ax_50 | dx_46) != 0x0000 l0800_192A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_191B:
	Mem269[ss:fp - 0x0074:word16] = ds_211
	Mem272[ss:fp - 0x0076:word16] = 0x4348
	Mem275[ss:fp - 0x0078:word16] = 0x0007
	word16 di_277
	fn0800_0D24(fp - 0x0002, ds_211, out si_112, out di_277, out ds_211)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):ds -118(fp):0x097D -116(fp):ds -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_192A:
	Mem65[ss:fp - 0x0074:word16] = 0x0001
	fn0800_1CF6(fp - 0x0002, ds_211)
	Mem72[ss:fp - 0x0074:word16] = 0x0000
	Mem74[ss:fp - 0x0076:word16] = 0x0000
	fn0800_2DBF(ds_211, wArg00, wArg02)
	word16 sp_212 = fp - 0x0072
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):ds -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_19BC:
	word16 sp_96 = sp_212 - 0x0002
	Mem97[ss:sp_96:word16] = ss
	Mem100[ss:sp_96 - 0x0002:word16] = bp_135 - 0x006E
	Mem102[ss:sp_96 - 0x0004:word16] = ss
	Mem105[ss:sp_96 - 0x0006:word16] = bp_135 - 0x0008
	Mem107[ss:sp_96 - 0x0008:word16] = ss
	Mem110[ss:sp_96 - 0x000A:word16] = bp_135 - 0x0004
	word16 bp_111
	selector ds_113
	branch fn0800_29C5(si_112, ds_211, out bp_111, out si_112, out ds_113) == 0x0000 l0800_19D8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19D8:
	selector ds_250
	word16 bp_251 = fn0800_1E5E(bp_111, si_112, ds_113, out ds_250)
	Mem254[ss:sp_96 + 0x0002:word16] = Mem110[ds_250:0x29D1:word16]
	Mem257[ss:sp_96:word16] = Mem254[ds_250:0x29CF:word16]
	byte dl_258
	word16 di_259
	selector ds_260
	fn0800_A614(bp_251, ds_250, ptrArg00, wArg02, out dl_258, out di_259, out ds_260)
	return
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

fn0800_18D9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

l0800_19D5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1940:
	Mem122[ss:sp_96 + 0x0002:word16] = ss
	Mem125[ss:sp_96:word16] = bp_111 - 0x006E
	fn0800_0C93(bp_111, ds_113, wArg00, wArg02)
	Mem130[ss:sp_96 + 0x0002:word16] = Mem125[ss:bp_111 - 0x0006:word16]
	Mem133[ss:sp_96:word16] = Mem130[ss:bp_111 - 0x0008:word16]
	selector ds_134
	bp_135 = fn0800_23EC(bp_111, ds_113, wArg00, wArg02, out ds_134)
	Mem140[ss:sp_96 + 0x0002:word16] = Mem133[ss:bp_135 - 0x0006:word16]
	Mem143[ss:sp_96:word16] = Mem140[ss:bp_135 - 0x0008:word16]
	selector ds_145 = fn0800_22FE(ds_134, ptrArg00, wArg02)
	ptr32 es_di_147 = Mem143[ss:bp_135 - 0x0004:segptr32]
	selector es_149 = SLICE(es_di_147, selector, 16)
	word16 di_150 = (word16) es_di_147 + 0x0002
	word16 cx_156 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:di:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E:
	branch cx_156 == 0x0000 l0800_1970
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E_1:
	di_150 = di_150 + 0x0001
	cx_156 = cx_156 - 0x0001
	branch 0x00 != Mem143[es_149:di_150:byte] l0800_196E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1970:
	word16 cx_164 = ~cx_156
	word16 di_167 = di_150 - cx_164
	byte Z_171 = cond(di_167)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976:
	branch cx_164 == 0x0000 l0800_1978
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976_2:
	Z_171 = cond(0x00 - Mem143[es_149:di_167:byte]) (alias)
	di_167 = di_167 + 0x0001
	cx_164 = cx_164 - 0x0001
	branch 0x00 != Mem143[es_149:di_167:byte] l0800_1976
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1978:
	branch Z_171 l0800_1981
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_197A:
	di_167 = 0x0001
	es_149 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1981:
	branch Mem143[es_149:di_167:byte] != 0x00 l0800_19AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_198D:
	word16 dx_215 = Mem143[ds_145:0x2E51:word16]
	branch Mem143[ds_145:0x2E53:word16] != Mem143[ss:bp_135 - 0x0002:word16] l0800_19A1
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_199C:
	branch dx_215 + 0x0008 == Mem143[ss:bp_135 - 0x0004:word16] l0800_19AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> bp:<invalid> si:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19A1:
	Mem223[ss:sp_96 + 0x0002:word16] = Mem143[ss:bp_135 - 0x0002:word16]
	Mem226[ss:sp_96:word16] = Mem223[ss:bp_135 - 0x0004:word16]
	ds_145 = fn0800_2201(ds_145, ptrArg00, wArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> bp:<invalid> si:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19AD:
	word16 sp_201 = sp_212 + 0x0002
	Mem203[ss:sp_201 - 0x0002:word16] = ss
	Mem206[ss:sp_201 - 0x0004:word16] = bp_135 - 0x006E
	Mem209[ss:sp_201 - 0x0006:word16] = 0x000D
	ds_211 = fn0800_0ABC(bp_135, ds_145, wArg00, wArg02, wArg04)
	sp_212 = sp_201
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)



void fn0800_19EE(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_19EE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_19EE:
	word16 di_35
	word16 si_36 = fn0800_B2EF(ds, 0x0986, ds, out di_35)
	word16 dx_49
	word16 di_51
	word16 si_1024
	selector ds_1026
	word16 ax_53 = fn0800_AA7E(si_36, di_35, ds, 0x4348, ds, 0x0997, ds, out dx_49, out si_1024, out di_51, out ds_1026)
	Mem55[ds_1026:0x29D1:word16] = dx_49
	Mem56[ds_1026:0x29CF:word16] = ax_53
	word16 bp_150 = fp - 0x0002
	branch (ax_53 | dx_49) != 0x0000 l0800_1A40
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1A31:
	Mem1017[ss:fp - 0x007A:word16] = ds_1026
	Mem1020[ss:fp - 0x007C:word16] = 0x4348
	Mem1023[ss:fp - 0x007E:word16] = 0x0007
	word16 di_1025
	fn0800_0D24(fp - 0x0002, ds_1026, out si_1024, out di_1025, out ds_1026)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):ds -124(fp):0x0997 -122(fp):ds -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A40:
	branch Mem56[ds_1026:0x2A27:word16] != Mem56[ds_1026:0x269A:word16] l0800_1A7D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):ds -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A49:
	word16 dx_1002 = Mem56[ds_1026:0x0982:word16]
	Mem1003[ss:fp - 0x000C:word16] = Mem56[ds_1026:0x0984:word16]
	Mem1004[ss:fp - 0x000E:word16] = dx_1002
	ptr32 es_bx_1007 = Mem1004[ds_1026:0x269C:segptr32]
	Mem1011[es_bx_1007 + 0x0006:word16] = ss
	Mem1012[es_bx_1007 + 0x0004:word16] = fp - 0x000E
	Mem1013[ds_1026:0x2A27:word16] = 0x0001
	Mem1014[ds_1026:0x269A:word16] = 0x0002
	Mem1015[ds_1026:0x2A1B:word16] = 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):ds -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A7D:
	Mem79[ss:fp - 0x007A:word16] = 0x0000
	Mem83[ss:fp - 0x007C:word16] = 0x0001
	fn0800_2DBF(ds_1026, wArg00, wArg02)
	Mem90[ss:fp - 0x007A:word16] = 0x0001
	fn0800_1CF6(fp - 0x0002, ds_1026)
	word16 sp_108 = fp - 0x0078
	branch Mem90[ds_1026:0x2A25:word16] == 0x0007 l0800_1A9E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):ds -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_1A9E:
	Mem988[ss:fp - 0x007A:word16] = ds_1026
	Mem991[ss:fp - 0x007C:word16] = 0x099B
	Mem993[ss:fp - 0x007E:word16] = ds_1026
	Mem996[ss:fp - 0x0080:word16] = 0x44DC
	word16 di_997
	si_1024 = fn0800_37BE(ds_1026, wArg00, wArg02, wArg04, wArg06, out di_997)
	sp_108 = fp - 0x0078
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0002 -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9B:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0002 -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CB4:
	word16 sp_110 = sp_108 - 0x0002
	Mem111[ss:sp_110:word16] = ss
	Mem114[ss:sp_110 - 0x0002:word16] = bp_150 - 0x0072
	Mem116[ss:sp_110 - 0x0004:word16] = ss
	Mem119[ss:sp_110 - 0x0006:word16] = bp_150 - 0x0008
	Mem121[ss:sp_110 - 0x0008:word16] = ss
	Mem124[ss:sp_110 - 0x000A:word16] = bp_150 - 0x0004
	word16 bp_125
	selector ds_127
	word16 si_126
	branch fn0800_29C5(si_1024, ds_1026, out bp_125, out si_126, out ds_127) == 0x0000 l0800_1CD0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> bp:<invalid> Sequence es:di:<invalid> cl:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CD0:
	Mem944[ss:sp_110 + 0x0002:word16] = Mem124[ds_127:0x29D1:word16]
	Mem947[ss:sp_110:word16] = Mem944[ds_127:0x29CF:word16]
	byte dl_948
	word16 di_949
	selector ds_950
	fn0800_A614(bp_125, ds_127, ptrArg00, wArg02, out dl_948, out di_949, out ds_950)
	branch Mem947[ds_950:0x2A25:word16] != 0x0007 l0800_1CF0
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> Sequence es:di:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CE5:
	Mem970[ss:sp_110 + 0x0002:word16] = ds_950
	Mem974[ss:sp_110:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_950, ptrArg00)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CF0:
	return
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_19EE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CCD:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> Sequence es:di:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AB1:
	Mem136[ss:sp_110 + 0x0002:word16] = ss
	Mem139[ss:sp_110:word16] = bp_125 - 0x0072
	fn0800_0C93(bp_125, ds_127, wArg00, wArg02)
	Mem144[ss:sp_110 + 0x0002:word16] = Mem139[ss:bp_125 - 0x0006:word16]
	Mem147[ss:sp_110:word16] = Mem144[ss:bp_125 - 0x0008:word16]
	word16 dx_149
	selector ds_151
	fn0800_24FE(bp_125, ds_127, ptrArg00, out dx_149, out bp_150, out ds_151)
	Mem160[ss:sp_110 + 0x0002:word16] = 0x0000
	ptr32 es_di_161 = Mem160[ss:bp_150 - 0x0008:segptr32]
	word16 di_1030 = (word16) es_di_161
	selector es_163 = SLICE(es_di_161, selector, 16)
	word16 cx_164 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> Sequence es:di:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1:
	branch cx_164 == 0x0000 l0800_1AD3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1_1:
	di_1030 = di_1030 + 0x0001
	cx_164 = cx_164 - 0x0001
	branch 0x00 != Mem160[es_163:di_1030:byte] l0800_1AD1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD3:
	word16 cx_174 = ~cx_164
	word16 di_1031 = di_1030 - cx_174
	byte Z_183 = cond(di_1031)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9:
	branch cx_174 == 0x0000 l0800_1ADB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9_2:
	Z_183 = cond(0x00 - Mem160[es_163:di_1031:byte]) (alias)
	di_1031 = di_1031 + 0x0001
	cx_174 = cx_174 - 0x0001
	branch 0x00 != Mem160[es_163:di_1031:byte] l0800_1AD9
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADB:
	branch Z_183 l0800_1AE4
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADD:
	di_1031 = 0x0001
	es_163 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AE4:
	ptr32 es_di_211 = Mem160[ss:bp_150 - 0x0008:segptr32]
	Mem215[ss:sp_110:word16] = (int16) Mem160[es_163:di_1031:byte] << 0x08
	word16 di_1032 = (word16) es_di_211
	selector es_213 = SLICE(es_di_211, selector, 16)
	word16 cx_221 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB:
	branch cx_221 == 0x0000 l0800_1AFD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB_1:
	di_1032 = di_1032 + 0x0001
	cx_221 = cx_221 - 0x0001
	branch 0x00 != Mem215[es_213:di_1032:byte] l0800_1AFB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFD:
	word16 cx_231 = ~cx_221
	word16 di_236 = di_1032 - cx_231
	byte Z_240 = cond(di_236)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03:
	branch cx_231 == 0x0000 l0800_1B05
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03_2:
	Z_240 = cond(0x00 - Mem215[es_213:di_1033:byte]) (alias)
	di_236 = di_1033 + 0x0001
	cx_231 = cx_231 - 0x0001
	word16 di_1033 = di_236
	branch 0x00 != Mem215[es_213:di_1033:byte] l0800_1B03
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B05:
	branch Z_240 l0800_1B0E
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B07:
	es_213 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B0E:
	ptr32 es_di_275 = Mem215[ss:bp_150 - 0x0008:segptr32]
	Mem279[ss:sp_110:word16] = Mem215[ss:sp_110:word16] + DPB(es_213, 0x00, 8)
	Mem281[ss:sp_110 - 0x0002:word16] = 0x0000
	word16 di_1034 = (word16) es_di_275
	selector es_277 = SLICE(es_di_275, selector, 16)
	word16 cx_282 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26:
	branch cx_282 == 0x0000 l0800_1B28
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26_1:
	di_1034 = di_1034 + 0x0001
	cx_282 = cx_282 - 0x0001
	branch 0x00 != Mem281[es_277:di_1034:byte] l0800_1B26
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B28:
	word16 cx_292 = ~cx_282
	word16 di_1035 = di_1034 - cx_292
	byte Z_301 = cond(di_1035)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E:
	branch cx_292 == 0x0000 l0800_1B30
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E_2:
	Z_301 = cond(0x00 - Mem281[es_277:di_1035:byte]) (alias)
	di_1035 = di_1035 + 0x0001
	cx_292 = cx_292 - 0x0001
	branch 0x00 != Mem281[es_277:di_1035:byte] l0800_1B2E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B30:
	branch Z_301 l0800_1B39
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B32:
	di_1035 = 0x0001
	es_277 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B39:
	ptr32 es_di_329 = Mem281[ss:bp_150 - 0x0008:segptr32]
	Mem333[ss:sp_110 - 0x0004:word16] = (int16) Mem281[es_277:di_1035 + 0x0002:byte] << 0x08
	word16 di_1036 = (word16) es_di_329
	selector es_331 = SLICE(es_di_329, selector, 16)
	word16 cx_339 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50:
	branch cx_339 == 0x0000 l0800_1B52
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50_1:
	di_1036 = di_1036 + 0x0001
	cx_339 = cx_339 - 0x0001
	branch 0x00 != Mem333[es_331:di_1036:byte] l0800_1B50
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B52:
	word16 cx_349 = ~cx_339
	word16 di_354 = di_1036 - cx_349
	byte Z_358 = cond(di_354)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58:
	branch cx_349 == 0x0000 l0800_1B5A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58_2:
	Z_358 = cond(0x00 - Mem333[es_331:di_1037:byte]) (alias)
	di_354 = di_1037 + 0x0001
	cx_349 = cx_349 - 0x0001
	word16 di_1037 = di_354
	branch 0x00 != Mem333[es_331:di_1037:byte] l0800_1B58
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5A:
	branch Z_358 l0800_1B63
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5C:
	es_331 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B63:
	word16 ax_392 = Mem333[ss:sp_110 - 0x0002:word16] + (Mem333[ss:sp_110 - 0x0004:word16] + DPB(es_331, 0x00, 8))
	word16 dx_397 = Mem333[ss:sp_110:word16] + (ax_392 <u 0x0000)
	Mem400[ss:sp_110:word16] = dx_397
	Mem402[ss:sp_110 - 0x0002:word16] = ax_392
	Mem405[ss:sp_110 - 0x0004:word16] = Mem402[ds_151:0x29D1:word16]
	Mem408[ss:sp_110 - 0x0006:word16] = Mem405[ds_151:0x29CF:word16]
	word16 di_410
	selector ds_411
	fn0800_ACB3(bp_150, ds_151, wArg00, wArg02, wArg08, out di_410, out ds_411)
	word16 sp_413 = sp_110 + 0x0004
	branch Mem408[ds_411:0x2A25:word16] != 0x0007 l0800_1B92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B92:
	Mem491[ss:sp_110 + 0x0002:word16] = ds_411
	selector es_492 = Mem491[ss:sp_110 + 0x0002:selector]
	Mem497[ss:sp_110 + 0x0002:word16] = es_492
	Mem499[ss:sp_110:word16] = 0x44DC
	word16 di_1038 = 0x427E
	word16 cx_507 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1:
	branch cx_507 == 0x0000 l0800_1BA3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1_1:
	di_1038 = di_1038 + 0x0001
	cx_507 = cx_507 - 0x0001
	branch 0x00 != Mem499[es_492:di_1038:byte] l0800_1BA1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA3:
	word16 di_526 = Mem499[ss:sp_110:word16]
	selector es_529 = Mem499[ss:sp_110 + 0x0002:selector]
	Mem534[ss:sp_110 + 0x0002:word16] = ds_411
	word16 cx_517 = ~cx_507
	word16 cx_519 = cx_517 >>u 0x0001
	word16 si_525 = di_1038 - cx_517
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2:
	branch cx_519 == 0x0000 l0800_1BB4
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB4:
	word16 cx_548 = cx_519 * 0x0002 + (cx_517 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6:
	branch cx_548 == 0x0000 l0800_1BB8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB8:
	selector ds_563 = Mem534[ss:sp_110 + 0x0002:selector]
	branch Mem534[ds_563:0x2A25:word16] != 0x0008 l0800_1C29
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC0:
	branch Mem534[ds_563:0x427E:byte] == 0x00 l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC7:
	branch Mem534[ss:bp_150 - 0x0072:byte] != 0x5C l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BFC:
	Mem673[ss:sp_110 + 0x0002:word16] = ss
	Mem676[ss:sp_110:word16] = bp_150 - 0x0072
	Mem678[ss:sp_110 - 0x0002:word16] = ds_563
	selector es_679 = Mem678[ss:sp_110 - 0x0002:selector]
	word16 di_1041 = 0x44DC
	word16 cx_689 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B:
	branch cx_689 == 0x0000 l0800_1C0D
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B_1:
	di_1041 = di_1041 + 0x0001
	cx_689 = cx_689 - 0x0001
	branch 0x00 != Mem678[es_679:di_1041:byte] l0800_1C0B
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0D:
	word16 cx_699 = ~cx_689
	word16 di_1042 = di_1041 - cx_699
	byte Z_708 = cond(di_1042)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13:
	branch cx_699 == 0x0000 l0800_1C15
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13_2:
	Z_708 = cond(0x00 - Mem678[es_679:di_1042:byte]) (alias)
	di_1042 = di_1042 + 0x0001
	cx_699 = cx_699 - 0x0001
	branch 0x00 != Mem678[es_679:di_1042:byte] l0800_1C13
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C15:
	branch Z_708 l0800_1C1E
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C17:
	di_1042 = 0x0001
	es_679 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C1E:
	Mem735[ss:sp_110 - 0x0002:word16] = es_679
	Mem737[ss:sp_110 - 0x0004:word16] = di_1042 - 0x0001
	fn0800_3509(ds_563, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BCD:
	Mem764[ss:sp_110 + 0x0002:word16] = ss
	Mem767[ss:sp_110:word16] = bp_150 - 0x0071
	Mem769[ss:sp_110 - 0x0002:word16] = ds_563
	selector es_770 = Mem769[ss:sp_110 - 0x0002:selector]
	word16 di_1043 = 0x44DC
	word16 cx_780 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC:
	branch cx_780 == 0x0000 l0800_1BDE
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC_1:
	di_1043 = di_1043 + 0x0001
	cx_780 = cx_780 - 0x0001
	branch 0x00 != Mem769[es_770:di_1043:byte] l0800_1BDC
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDE:
	word16 cx_790 = ~cx_780
	word16 di_1044 = di_1043 - cx_790
	byte Z_799 = cond(di_1044)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4:
	branch cx_790 == 0x0000 l0800_1BE6
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4_2:
	Z_799 = cond(0x00 - Mem769[es_770:di_1044:byte]) (alias)
	di_1044 = di_1044 + 0x0001
	cx_790 = cx_790 - 0x0001
	branch 0x00 != Mem769[es_770:di_1044:byte] l0800_1BE4
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE6:
	branch Z_799 l0800_1BEF
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE8:
	di_1044 = 0x0001
	es_770 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BEF:
	Mem826[ss:sp_110 - 0x0002:word16] = es_770
	Mem828[ss:sp_110 - 0x0004:word16] = di_1044 - 0x0001
	fn0800_3509(ds_563, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C29:
	word16 sp_568 = sp_108 + 0x0002
	Mem571[ss:sp_568 - 0x0002:word16] = ds_563
	Mem574[ss:sp_568 - 0x0004:word16] = 0x44DC
	si_126 = fn0800_3678(bp_150, ds_563, ptrArg00, wArg02, out ds_411)
	Mem579[ss:sp_568 - 0x0002:word16] = ss
	Mem582[ss:sp_568 - 0x0004:word16] = bp_150 - 0x0072
	Mem584[ss:sp_568 - 0x0006:word16] = ds_411
	selector es_585 = Mem584[ss:sp_568 - 0x0006:selector]
	word16 di_1039 = 0x44DC
	word16 cx_595 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43:
	branch cx_595 == 0x0000 l0800_1C45
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43_1:
	di_1039 = di_1039 + 0x0001
	cx_595 = cx_595 - 0x0001
	branch 0x00 != Mem584[es_585:di_1039:byte] l0800_1C43
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C45:
	word16 cx_605 = ~cx_595
	word16 di_1040 = di_1039 - cx_605
	byte Z_614 = cond(di_1040)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B:
	branch cx_605 == 0x0000 l0800_1C4D
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B_2:
	Z_614 = cond(0x00 - Mem584[es_585:di_1040:byte]) (alias)
	di_1040 = di_1040 + 0x0001
	cx_605 = cx_605 - 0x0001
	branch 0x00 != Mem584[es_585:di_1040:byte] l0800_1C4B
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4D:
	branch Z_614 l0800_1C56
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4F:
	di_1040 = 0x0001
	es_585 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C56:
	Mem641[ss:sp_568 - 0x0006:word16] = es_585
	di_410 = di_1040 - 0x0001
	Mem643[ss:sp_568 - 0x0008:word16] = di_410
	fn0800_35A3(ds_411, wArg04, wArg06)
	sp_413 = sp_568
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6_1:
	Mem557[es_529:di_526:byte] = Mem534[es_492:si_525:byte]
	si_525 = si_525 + 0x0001
	di_526 = di_526 + 0x0001
	cx_548 = cx_548 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2_2:
	Mem542[es_529:di_526:word16] = Mem534[es_492:si_525:word16]
	si_525 = si_525 + 0x0002
	di_526 = di_526 + 0x0002
	cx_519 = cx_519 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B8F:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C61:
	word16 sp_426 = sp_413 - 0x0002
	Mem427[ss:sp_426:word16] = ds_411
	Mem430[ss:sp_426 - 0x0002:word16] = 0x09A8
	Mem432[ss:sp_426 - 0x0004:word16] = ds_411
	Mem435[ss:sp_426 - 0x0006:word16] = 0x44DC
	word16 di_438
	selector ds_439
	fn0800_4234(si_126, di_410, ds_411, wArg00, wArg02, wArg04, wArg06, out di_438, out ds_439)
	Mem443[ds_439:0x29E1:word16] = dx_397
	Mem444[ds_439:0x29DF:word16] = 0x44DC
	word16 dx_446 = Mem444[ds_439:0x29CF:word16]
	Mem448[ds_439:0x29E5:word16] = Mem444[ds_439:0x29D1:word16]
	Mem449[ds_439:0x29E3:word16] = dx_446
	selector ds_450
	word16 ax_451 = fn0800_5374(bp_150, ds_439, out ds_450)
	Mem455[ss:sp_426:word16] = Mem449[ds_450:0x29E1:word16]
	Mem458[ss:sp_426 - 0x0002:word16] = Mem455[ds_450:0x29DF:word16]
	byte dl_459
	word16 di_460
	selector ds_461
	fn0800_A614(bp_150, ds_450, ptrArg00, wArg02, out dl_459, out di_460, out ds_461)
	si_1024 = ax_451
	branch ax_451 == 0x0000 l0800_1CA8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C9D:
	Mem482[ss:sp_426:word16] = ds_461
	Mem486[ss:sp_426 - 0x0002:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_461, ptrArg00)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CA8:
	word16 sp_471 = sp_413 - 0x0002
	Mem472[ss:sp_471:word16] = ss
	Mem475[ss:sp_471 - 0x0002:word16] = bp_150 - 0x0072
	Mem477[ss:sp_471 - 0x0004:word16] = ax_451
	ds_1026 = fn0800_0ABC(bp_150, ds_461, wArg00, wArg02, wArg04)
	sp_108 = sp_471 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



void fn0800_1CF6(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_1CF6_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1CF6:
	Mem14[ds:0x45A8:word16] = 0x0000
	Mem16[ds:0x45A6:word16] = 0x0000
	Mem17[ds:0x29ED:word16] = 0x0000
	Mem18[ds:0x29EB:word16] = 0x0000
	word16 di_34
	selector ds_35
	word16 ax_36 = fn0800_ACB3(fp - 0x0002, ds, Mem18[ds:0x29CF:word16], Mem18[ds:0x29D1:word16], 0x0002, out di_34, out ds_35)
	Mem41[ss:fp - 0x0008:word16] = Mem18[ds_35:0x29D1:word16]
	Mem45[ss:fp - 0x000A:word16] = Mem41[ds_35:0x29CF:word16]
	selector ds_48
	word16 dx_49 = fn0800_3E5D(fp - 0x0002, ds_35, wArg00, wArg02, out ds_48)
	Mem52[ds_48:0x29ED:word16] = dx_49
	Mem53[ds_48:0x29EB:word16] = ax_36
	Mem56[ss:fp - 0x0008:word16] = Mem53[ds_48:0x29D1:word16]
	Mem59[ss:fp - 0x000A:word16] = Mem56[ds_48:0x29CF:word16]
	word16 si_60
	selector ds_154
	word16 ax_62 = fn0800_4194(fp - 0x0002, ds_48, wArg00, wArg02, out si_60, out ds_154)
	branch dx_49 >u Mem59[ds_154:0x29ED:word16] l0800_1D69
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1D52:
	branch dx_49 <u Mem59[ds_154:0x29ED:word16] l0800_1D5A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D54:
	branch ax_62 >=u Mem59[ds_154:0x29EB:word16] l0800_1D69
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D5A:
	Mem145[ss:fp - 0x0008:word16] = ds_154
	Mem148[ss:fp - 0x000A:word16] = 0x4348
	Mem151[ss:fp - 0x000C:word16] = 0x000B
	word16 si_152
	word16 di_153
	fn0800_0D24(fp - 0x0002, ds_154, out si_152, out di_153, out ds_154)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D69:
	Mem76[ss:fp - 0x0008:word16] = 0x0000
	Mem79[ss:fp - 0x000A:word16] = Mem76[ds_154:0x29ED:word16]
	Mem82[ss:fp - 0x000C:word16] = Mem79[ds_154:0x29EB:word16]
	Mem85[ss:fp - 0x000E:word16] = Mem82[ds_154:0x29D1:word16]
	Mem88[ss:fp - 0x0010:word16] = Mem85[ds_154:0x29CF:word16]
	word16 di_90
	selector ds_91
	word16 ax_92 = fn0800_ACB3(fp - 0x0002, ds_154, wArg00, wArg02, wArg08, out di_90, out ds_91)
	Mem97[ss:fp - 0x0008:word16] = Mem88[ds_91:0x29D1:word16]
	Mem100[ss:fp - 0x000A:word16] = Mem97[ds_91:0x29CF:word16]
	selector ds_101
	branch fn0800_3E5D(fp - 0x0002, ds_91, wArg00, wArg02, out ds_101) != 0x524E l0800_1D9B
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D96:
	branch ax_92 == 0x4341 l0800_1DAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D9B:
	Mem128[ss:fp - 0x0008:word16] = ds_101
	Mem131[ss:fp - 0x000A:word16] = 0x4348
	Mem134[ss:fp - 0x000C:word16] = 0x000B
	word16 si_135
	word16 di_136
	fn0800_0D24(fp - 0x0002, ds_101, out si_135, out di_136, out ds_101)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DAA:
	Mem111[ss:fp - 0x0008:word16] = Mem100[ds_101:0x29D1:word16]
	Mem114[ss:fp - 0x000A:word16] = Mem111[ds_101:0x29CF:word16]
	word16 dx_115
	word16 si_116
	word16 di_117
	selector ds_118
	fn0800_3E27(fp - 0x0002, ds_101, wArg00, wArg02, out dx_115, out si_116, out di_117, out ds_118)
	Mem125[ss:fp - 0x0008:word16] = Mem114[ds_118:0x29D1:word16]
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp

l0800_1DBA_thunk_fn0800_1DBE:
	fn0800_1DBE(fp - 0x0002, ds_118)
	return
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// Terminates process

fn0800_1CF6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp



void fn0800_1DBE(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_1DBE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1DBE:
	word16 dx_9
	word16 si_10
	word16 di_11
	selector ds_12
	Mem15[ss:bp - 0x0002:word16] = fn0800_3E27(bp, ds, Mem0[ds:0x29CF:word16], wArg00, out dx_9, out si_10, out di_11, out ds_12)
	branch Mem15[ss:bp + 0x0004:word16] == 0x0000 l0800_1DE4
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1DE4:
	Mem130[ss:fp:word16] = 0x0000
	Mem132[ss:fp - 0x0002:word16] = 0xFFF0
	fn0800_4311(0x0000, 0xFFF0, ds_12, wArg00, wArg02)
	Mem135[ds_12:0x2E53:word16] = 0xFFF0
	Mem136[ds_12:0x2E51:word16] = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> ax:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)
// Terminates process

l0800_1DD1:
	Mem118[ss:fp:word16] = 0x0000
	Mem120[ss:fp - 0x0002:word16] = si_10
	fn0800_4311(0x0000, dx_9, ds_12, wArg00, wArg02)
	Mem123[ds_12:0x2E53:word16] = dx_9
	Mem124[ds_12:0x2E51:word16] = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> ax:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)
// Terminates process

l0800_1DF8:
	Mem25[ss:fp:word16] = 0x0000
	Mem28[ss:fp - 0x0002:word16] = Mem25[ds_12:0x29ED:word16]
	Mem31[ss:fp - 0x0004:word16] = Mem28[ds_12:0x29EB:word16]
	Mem34[ss:fp - 0x0006:word16] = Mem31[ds_12:0x29D1:word16]
	Mem37[ss:fp - 0x0008:word16] = Mem34[ds_12:0x29CF:word16]
	word16 di_40
	selector ds_41
	fn0800_ACB3(bp, ds_12, wArg00, wArg02, wArg08, out di_40, out ds_41)
	Mem46[ss:fp:word16] = Mem37[ds_41:0x29D1:word16]
	Mem49[ss:fp - 0x0002:word16] = Mem46[ds_41:0x29CF:word16]
	Mem54[ss:fp - 0x0004:word16] = 0x0000
	Mem56[ss:fp - 0x0006:word16] = si_10
	Mem59[ss:fp - 0x0008:word16] = Mem56[ds_41:0x2E53:word16]
	Mem62[ss:fp - 0x000A:word16] = Mem59[ds_41:0x2E51:word16]
	word16 di_65
	selector ds_66
	word16 si_67 = fn0800_4110(bp, ds_41, wArg00, wArg02, wArg04, wArg08, wArg0A, out di_65, out ds_66)
	Mem71[ss:fp:word16] = 0x0000
	Mem75[ss:fp - 0x0002:word16] = si_67 - 0x0008
	word16 ax_76 = Mem75[ds_66:0x2E51:word16]
	Mem81[ss:fp - 0x0004:word16] = Mem75[ds_66:0x2E53:word16]
	Mem83[ss:fp - 0x0006:word16] = ax_76 + 0x0008
	branch fn0800_2CCF(ds_66, ptrArg00, wArg04, wArg06) == Mem83[ss:bp - 0x0002:word16] l0800_1E59
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0004 -2(fp):<invalid> 0(fp):<invalid>

l0800_1E4A:
	Mem101[ss:fp:word16] = ds_66
	Mem104[ss:fp - 0x0002:word16] = 0x4348
	Mem107[ss:fp - 0x0004:word16] = 0x000D
	word16 si_108
	word16 di_109
	selector ds_110
	fn0800_0D24(bp, ds_66, out si_108, out di_109, out ds_110)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_1E59:
	return
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_1DBE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> bp:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):<invalid> 0(fp):<invalid>



word16 fn0800_1E5E(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_1E5E_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16)

l0800_1E5E:
	word16 ax_39 = fn0800_2CCF(ds, DPB(ptrLoc0A, Mem0[ds:0x2E51:word16] + 0x0008, 0), (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8) - 0x0008, 0x0000)
	ptr32 es_bx_46 = Mem0[ds:0x2E51:segptr32]
	Mem49[es_bx_46 + 0x0006:byte] = (byte) (ax_39 >>u 0x08)
	Mem50[es_bx_46 + 0x0007:byte] = (byte) ax_39
	word16 di_74
	selector ds_75
	fn0800_ACB3(bp, ds, Mem50[ds:0x29CF:word16], Mem50[ds:0x29D1:word16], 0x0000, out di_74, out ds_75)
	Mem81[ss:fp - 0x0004:word16] = Mem50[ds_75:0x29D1:word16]
	Mem85[ss:fp - 0x0006:word16] = Mem81[ds_75:0x29CF:word16]
	word16 dx_88
	word16 si_89
	word16 di_90
	selector ds_102
	word16 ax_92 = fn0800_3E27(bp, ds_75, wArg00, wArg02, out dx_88, out si_89, out di_90, out ds_102)
	branch si_89 <=u ax_92 l0800_1EF7
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1EF7:
	branch si_89 >=u ax_92 l0800_1F19
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1EFB:
	Mem195[ss:fp - 0x0004:word16] = 0x0000
	Mem197[ss:fp - 0x0006:word16] = ax_92 - si_89
	Mem200[ss:fp - 0x0008:word16] = Mem197[ds_102:0x29ED:word16]
	Mem203[ss:fp - 0x000A:word16] = Mem200[ds_102:0x29EB:word16]
	Mem206[ss:fp - 0x000C:word16] = Mem203[ds_102:0x29D1:word16]
	Mem209[ss:fp - 0x000E:word16] = Mem206[ds_102:0x29CF:word16]
	bp = fn0800_3C99(bp, ds_102, out ds_102)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1ED7:
	Mem169[ss:fp - 0x0004:word16] = 0x0000
	Mem171[ss:fp - 0x0006:word16] = si_89 - ax_92
	Mem174[ss:fp - 0x0008:word16] = Mem171[ds_102:0x29ED:word16]
	Mem177[ss:fp - 0x000A:word16] = Mem174[ds_102:0x29EB:word16]
	Mem180[ss:fp - 0x000C:word16] = Mem177[ds_102:0x29D1:word16]
	Mem183[ss:fp - 0x000E:word16] = Mem180[ds_102:0x29CF:word16]
	ds_102 = fn0800_3BC3(bp, ds_102)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1F19:
	Mem108[ss:fp - 0x0004:word16] = 0x0000
	Mem111[ss:fp - 0x0006:word16] = Mem108[ds_102:0x29ED:word16]
	Mem114[ss:fp - 0x0008:word16] = Mem111[ds_102:0x29EB:word16]
	Mem117[ss:fp - 0x000A:word16] = Mem114[ds_102:0x29D1:word16]
	Mem120[ss:fp - 0x000C:word16] = Mem117[ds_102:0x29CF:word16]
	word16 di_122
	selector ds_123
	fn0800_ACB3(bp, ds_102, wArg00, wArg02, wArg08, out di_122, out ds_123)
	Mem128[ss:fp - 0x0004:word16] = Mem120[ds_123:0x29D1:word16]
	Mem131[ss:fp - 0x0006:word16] = Mem128[ds_123:0x29CF:word16]
	Mem136[ss:fp - 0x0008:word16] = 0x0000
	Mem138[ss:fp - 0x000A:word16] = si_89
	Mem141[ss:fp - 0x000C:word16] = Mem138[ds_123:0x2E53:word16]
	Mem144[ss:fp - 0x000E:word16] = Mem141[ds_123:0x2E51:word16]
	selector ds_147 = fn0800_4152(bp, ds_123, wArg00, wArg02, wArg04, wArg08, wArg0A)
	Mem152[ss:fp - 0x0004:word16] = Mem144[ds_147:0x2E53:word16]
	Mem155[ss:fp - 0x0006:word16] = Mem152[ds_147:0x2E51:word16]
	selector ds_156
	fn0800_4346(ds_147, wArg00, wArg02, out ds_156)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_1E5E_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si



word16 fn0800_1F5C(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_1F5C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_1F5C:
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	word16 cx_23 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C:
	branch cx_23 == 0x0000 l0800_1F6E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C_1:
	di_15 = di_15 + 0x0001
	cx_23 = cx_23 - 0x0001
	branch 0x00 != Mem0[es_16:di_15:byte] l0800_1F6C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6E:
	word16 cx_35 = ~cx_23
	word16 di_356 = di_15 - cx_35
	byte Z_364 = cond(di_356)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75:
	branch cx_35 == 0x0000 l0800_1F77
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75_2:
	Z_364 = cond(0x3A - Mem0[es_16:di_356:byte]) (alias)
	di_356 = di_356 + 0x0001
	cx_35 = cx_35 - 0x0001
	branch 0x3A != Mem0[es_16:di_356:byte] l0800_1F75
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F77:
	branch Z_364 l0800_1F80
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F79:
	di_356 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F80:
	branch di_356 == 0x0001 l0800_1FAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F87:
	word16 di_283 = (word16) ptrArg02
	word16 cx_289 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F:
	branch cx_289 == 0x0000 l0800_1F91
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F_1:
	di_283 = di_283 + 0x0001
	cx_289 = cx_289 - 0x0001
	branch 0x00 != Mem0[0x0000:di_283:byte] l0800_1F8F
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F91:
	word16 cx_299 = ~cx_289
	word16 di_304 = di_283 - cx_299
	byte Z_308 = cond(di_304)
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98:
	branch cx_299 == 0x0000 l0800_1F9A
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98_2:
	Z_308 = cond(0x3A - Mem0[0x0000:di_304:byte]) (alias)
	di_304 = di_304 + 0x0001
	cx_299 = cx_299 - 0x0001
	branch 0x3A != Mem0[0x0000:di_304:byte] l0800_1F98
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9A:
	branch Z_308 l0800_1FA3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9C:
	di_304 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1FA3:
	wArg04 = 0x0000
	wArg02 = di_304
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1FAD:
	word16 dx_90 = DPB(dx, 0x00, 8)
	word16 ax_93 = Mem0[ds:0x2E53:word16]
	word16 dx_95 = Mem0[ds:0x2E51:word16] + dx_90
	word16 di_109 = (word16) ptrArg02
	word16 cx_105 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE:
	branch cx_105 == 0x0000 l0800_1FE0
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE_1:
	di_109 = di_378 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_378 = di_109
	branch 0x00 != Mem0[0x0000:di_378:byte] l0800_1FDE
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FE0:
	word16 cx_115 = ~cx_105
	word16 ax_122 = dx_95 - Mem0[ds:0x2E51:word16]
	word16 ax_126 = ax_122 + (cx_115 + 0x0003)
	word16 bx_138 = (word16) ptrLoc06
	word16 dx_133
	Mem139[0x0000:bx_138:byte] = (byte) fn0800_8C8A(ax_126, 0x08, 0x0000 - (ax_122 <u 0x0000) + (ax_126 <u 0x0000), wLoc10, out dx_133)
	byte bLoc0A_119 = (byte) (cx_115 + 0x0003)
	Mem148[0x0000:bx_138 + 0x0001:byte] = (byte) (dx_95 - Mem139[ds:0x2E51:word16]) + bLoc0A_119
	Mem152[ss:fp - 0x0010:word16] = 0x0000
	Mem157[ss:fp - 0x0012:word16] = dx_95 + 0x0002
	word16 di_158 = wArg02
	word16 cx_165 = 0xFFFF
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C:
	branch cx_165 == 0x0000 l0800_202E
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C_2:
	di_158 = di_158 + 0x0001
	cx_165 = cx_165 - 0x0001
	branch 0x00 != Mem157[0x0000:di_158:byte] l0800_202C
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202E:
	word16 di_184 = Mem157[ss:fp - 0x0012:word16]
	selector es_187 = Mem157[ss:fp - 0x0010:selector]
	Mem192[ss:fp - 0x0010:word16] = ds
	word16 cx_175 = ~cx_165
	word16 cx_177 = cx_175 >>u 0x0001
	word16 si_183 = di_158 - cx_175
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D:
	branch cx_177 == 0x0000 l0800_203F
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203F:
	word16 cx_206 = cx_177 * 0x0002 + (cx_175 >>u 0x0001 <u 0x0000)
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2041:
	branch cx_206 == 0x0000 l0800_2043
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2043:
	selector ds_221 = Mem192[ss:fp - 0x0010:selector]
	*dsOut = ds_221
	Mem225[ax_93:bx_138 + (cx_115 + 0x0003) - 0x0001:byte] = 0x00
	ptr32 es_bx_231 = Mem225[ds_221:0x2E51:segptr32]
	Mem234[es_bx_231 + 0x0004:byte] = (byte) (dx_90 + (cx_115 + 0x0003) >>u 0x08)
	Mem238[es_bx_231 + 0x0005:byte] = bLoc08 + bLoc0A_119
	Mem243[ss:fp - 0x0010:word16] = 0x0000
	Mem245[ss:fp - 0x0012:word16] = 0x0000
	Mem247[ss:fp - 0x0014:word16] = 0x0000
	Mem250[ss:fp - 0x0016:word16] = cx_115 + 0x0003
	fn0800_2688(fp - 0x0002, ds_221, wArg00, wArg02, wArg04, wArg06)
	word16 dx_255
	*dxOut = ax_93
	return dx_95
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_1F5C_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:0x00 -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2041_1:
	Mem215[es_187:di_184:byte] = Mem192[0x0000:si_183:byte]
	si_183 = si_183 + 0x0001
	di_184 = di_184 + 0x0001
	cx_206 = cx_206 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D_3:
	Mem200[es_187:di_184:word16] = Mem192[0x0000:si_183:word16]
	si_183 = si_183 + 0x0002
	di_184 = di_184 + 0x0002
	cx_177 = cx_177 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)



word16 fn0800_2085(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_2085_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2085:
	word16 ax_21 = DPB(ax, 0x00, 8)
	word16 dx_30 = DPB(dx, 0x00, 8)
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_209F_thunk_fn0800_20A1:
	selector ds_31
	return fn0800_20A1(ax_21 << 0x08, dx_30, fp - 0x0002, ds, out ds_31)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:ax << 0x08 dl:<invalid> dh:0x00 -18(fp):di -16(fp):si -2(fp):bp

fn0800_2085_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:0x00 ds:<invalid> ch:<invalid> -18(fp):di -16(fp):si -2(fp):bp



word16 fn0800_20A1(word16 ax, word16 dx, word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds dx ss
// LiveOut: bp ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_20A1_entry:
	*dsOut = ds
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_20A1:
	Mem5[ss:bp - 0x000A:word16] = ax + dx
	word16 dx_11 = Mem5[ds:0x2E51:word16] + Mem5[ss:bp - 0x000A:word16]
	Mem12[ss:bp - 0x0006:word16] = Mem5[ds:0x2E53:word16]
	Mem13[ss:bp - 0x0008:word16] = dx_11
	ptr32 es_di_14 = Mem13[ss:bp + 0x0004:segptr32]
	selector es_15 = SLICE(es_di_14, selector, 16)
	word16 di_16 = (word16) es_di_14
	word16 cx_21 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_20BE:
	branch cx_21 == 0x0000 l0800_20C0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid>

l0800_20BE_1:
	di_16 = di_76 + 0x0001
	cx_21 = cx_21 - 0x0001
	word16 di_76 = di_16
	branch 0x00 != Mem13[es_15:di_76:byte] l0800_20BE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid>

l0800_20C0:
	Mem37[ss:bp - 0x000C:word16] = ~cx_21 + 0x0004
	word16 bx_51 = Mem37[ds:0x2E51:word16] + (((int16) Mem37[Mem37[ss:bp + 0x0008:segptr32]:byte] << 0x08) + DPB(dx_11, 0x00, 8))
	Mem54[ss:bp - 0x0002:word16] = Mem37[ds:0x2E53:word16]
	Mem55[ss:bp - 0x0004:word16] = bx_51 - 0x0001
	word16 ax_60 = Mem55[ss:bp - 0x0008:word16] - Mem55[ss:bp - 0x0004:word16]
// DataOut: ax bp bx ds dx ss
// DataOut (flags): C
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid>

l0800_20F2_thunk_fn0800_20F5:
	return fn0800_20F5(ax_60, 0x0000, bx_51 - 0x0001, bp, ds, wLoc02, wArg00)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> Sequence es:bx:<invalid> al:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid>

fn0800_20A1_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> Sequence es:bx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> es:<invalid> si:<invalid> ah:<invalid> bl:<invalid> bh:0x00 bp:<invalid> ds:<invalid> ch:<invalid>



word16 fn0800_20F5(word16 ax, word16 dx, word16 bx, word16 bp, selector ds, word16 wArg00, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C ax bp bx ds dx ss
// LiveOut: bp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ds
fn0800_20F5_entry:
// DataOut: ax bp bx ds dx ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_20F5:
	word16 di_26
	selector ds_27
	fn0800_B0F3(Mem0[ss:bp - 0x0004:word16] + Mem0[ss:bp - 0x000C:word16], Mem0[ds:0x2E53:word16], bx, Mem0[ds:0x2E53:word16], ax, out di_26, out ds_27)
	ptr32 es_di_30 = Mem0[ss:bp - 0x0004:segptr32]
	selector es_31 = SLICE(es_di_30, selector, 16)
	word16 di_32 = (word16) es_di_30
	selector es_35 = Mem0[ss:bp + 0x0006:selector]
	word16 di_39 = Mem0[ss:bp + 0x0004:word16]
	word16 cx_428 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -000A(0)

l0800_211F:
	branch cx_428 == 0x0000 l0800_2121
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -000A(0)

l0800_211F_1:
	di_39 = di_39 + 0x0001
	cx_428 = cx_428 - 0x0001
	branch 0x00 != Mem0[es_35:di_39:byte] l0800_211F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -000A(0)

l0800_2121:
	word16 cx_56 = ~cx_428
	word16 cx_58 = cx_56 >>u 0x0001
	word16 si_64 = di_39 - cx_56
	word16 di_65 = di_32
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -000A(0)

l0800_2130:
	branch cx_58 == 0x0000 l0800_2132
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -000A(0)

l0800_2132:
	word16 cx_100 = cx_58 * 0x0002 + (cx_56 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -000A(0)

l0800_2134:
	branch cx_100 == 0x0000 l0800_2136
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -000A(0)

l0800_2136:
	ptr32 es_di_104 = Mem0[ss:bp - 0x0004:segptr32]
	selector es_105 = SLICE(es_di_104, selector, 16)
	word16 di_106 = (word16) es_di_104
	word16 cx_111 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_213F:
	branch cx_111 == 0x0000 l0800_2141
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_213F_1:
	di_106 = di_106 + 0x0001
	cx_111 = cx_111 - 0x0001
	branch 0x00 != Mem0[es_105:di_106:byte] l0800_213F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2141:
	word16 cx_121 = ~cx_111
	word16 di_125 = di_106 - cx_121
	byte Z_130 = cond(di_125)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2147:
	branch cx_121 == 0x0000 l0800_2149
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2147_2:
	Z_130 = cond(0x00 - Mem0[es_105:di_125:byte]) (alias)
	di_125 = di_125 + 0x0001
	cx_121 = cx_121 - 0x0001
	branch 0x00 != Mem0[es_105:di_125:byte] l0800_2147
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2149:
	branch Z_130 l0800_2152
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_214B:
	di_125 = 0x0001
	es_105 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2152:
	Mem153[es_105:di_125:byte] = 0x00
	ptr32 es_di_154 = Mem153[ss:bp - 0x0004:segptr32]
	selector es_155 = SLICE(es_di_154, selector, 16)
	word16 di_156 = (word16) es_di_154
	word16 cx_161 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2164:
	branch cx_161 == 0x0000 l0800_2166
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2164_1:
	di_156 = di_156 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 != Mem153[es_155:di_156:byte] l0800_2164
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2166:
	word16 cx_171 = ~cx_161
	word16 di_175 = di_156 - cx_171
	byte Z_180 = cond(di_175)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_216C:
	branch cx_171 == 0x0000 l0800_216E
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_216C_2:
	Z_180 = cond(0x00 - Mem153[es_155:di_175:byte]) (alias)
	di_175 = di_175 + 0x0001
	cx_171 = cx_171 - 0x0001
	branch 0x00 != Mem153[es_155:di_175:byte] l0800_216C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_216E:
	branch Z_180 l0800_2177
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2170:
	di_175 = 0x0001
	es_155 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2177:
	Mem203[es_155:di_175 + 0x0001:byte] = 0x00
	ptr32 es_di_204 = Mem203[ss:bp - 0x0004:segptr32]
	selector es_205 = SLICE(es_di_204, selector, 16)
	word16 di_206 = (word16) es_di_204
	word16 cx_211 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2189:
	branch cx_211 == 0x0000 l0800_218B
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2189_1:
	di_206 = di_206 + 0x0001
	cx_211 = cx_211 - 0x0001
	branch 0x00 != Mem203[es_205:di_206:byte] l0800_2189
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_218B:
	word16 cx_221 = ~cx_211
	word16 di_225 = di_206 - cx_221
	byte Z_230 = cond(di_225)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2191:
	branch cx_221 == 0x0000 l0800_2193
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2191_2:
	Z_230 = cond(0x00 - Mem203[es_205:di_225:byte]) (alias)
	di_225 = di_225 + 0x0001
	cx_221 = cx_221 - 0x0001
	branch 0x00 != Mem203[es_205:di_225:byte] l0800_2191
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2193:
	branch Z_230 l0800_219C
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_2195:
	di_225 = 0x0001
	es_205 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_219C:
	Mem253[es_205:di_225 + 0x0002:byte] = 0x00
	ptr32 es_di_254 = Mem253[ss:bp - 0x0004:segptr32]
	selector es_255 = SLICE(es_di_254, selector, 16)
	word16 di_256 = (word16) es_di_254
	word16 cx_261 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_21AE:
	branch cx_261 == 0x0000 l0800_21B0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_21AE_1:
	di_256 = di_256 + 0x0001
	cx_261 = cx_261 - 0x0001
	branch 0x00 != Mem253[es_255:di_256:byte] l0800_21AE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_21B0:
	word16 cx_271 = ~cx_261
	word16 di_275 = di_256 - cx_271
	byte Z_280 = cond(di_275)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_21B6:
	branch cx_271 == 0x0000 l0800_21B8
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_21B6_2:
	Z_280 = cond(0x00 - Mem253[es_255:di_275:byte]) (alias)
	di_275 = di_275 + 0x0001
	cx_271 = cx_271 - 0x0001
	branch 0x00 != Mem253[es_255:di_275:byte] l0800_21B6
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_21B8:
	branch Z_280 l0800_21C1
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_21BA:
	di_275 = 0x0001
	es_255 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -000A(0)

l0800_21C1:
	Mem303[es_255:di_275 + 0x0003:byte] = 0x00
	ptr32 es_bx_309 = Mem303[ds_27:0x2E51:segptr32]
	Mem312[es_bx_309 + 0x0004:byte] = (byte) (Mem303[ss:bp - 0x000A:word16] + Mem303[ss:bp - 0x000C:word16] >>u 0x08)
	Mem315[es_bx_309 + 0x0005:byte] = Mem312[ss:bp - 0x000A:byte] + Mem312[ss:bp - 0x000C:byte]
	fn0800_2688(bp, ds_27, Mem315[ss:bp - 0x000C:word16], 0x0000, 0x0000, 0x0000)
	return Mem315[ss:bp:word16]
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>

fn0800_20F5_exit:
// DataOut: bp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> cl:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:0x00 bp:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2134_1:
	Mem96[es_31:di_65:byte] = Mem0[es_35:si_64:byte]
	si_64 = si_64 + 0x0001
	di_65 = di_65 + 0x0001
	cx_100 = cx_100 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -000A(0)

l0800_2130_2:
	Mem81[es_31:di_65:word16] = Mem0[es_35:si_64:word16]
	si_64 = si_64 + 0x0002
	di_65 = di_65 + 0x0002
	cx_58 = cx_58 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 dx:<invalid> ax:<invalid> Sequence es:di:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -000A(0)



selector fn0800_2201(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_2201_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_2201:
	word16 ax_25 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_30 = Mem0[ds:0x2E51:word16] + ax_25
	word16 dx_48 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[ptrArg02:byte] << 0x08) + DPB(dx_30, 0x00, 8)) - wArg02
	word16 ax_55 = wArg02 + dx_48
	word16 di_78
	selector ds_79
	fn0800_B0F3(wArg02, wArg04, ax_55, wArg04, dx_30 - ax_55, out di_78, out ds_79)
	ptr32 es_bx_87 = Mem0[ds_79:0x2E51:segptr32]
	Mem90[es_bx_87 + 0x0004:byte] = (byte) (ax_25 - dx_48 >>u 0x08)
	Mem93[es_bx_87 + 0x0005:byte] = (byte) ax_25 - (byte) dx_48
	word16 ax_102 = -dx_48
	fn0800_2688(fp - 0x0002, ds_79, ax_102, -0x0000 - (ax_102 == 0x0000), 0x0000, 0x0000)
	word16 dx_112 = Mem93[ds_79:0x45AE:word16]
	branch Mem93[ds_79:0x45B0:word16] != wArg04 l0800_22EA
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22B7:
	branch dx_112 != wArg02 l0800_22EA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22EA:
	branch Mem93[ds_79:0x45AE:word16] <=u wArg02 l0800_22F9
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_22F2:
	Mem147[ds_79:0x45AA:word16] = Mem93[ds_79:0x45AA:word16] - dx_48
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22F9:
	return ds_79
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_22BC:
	selector es_153 = SLICE(ptrArg02, selector, 16)
	word16 di_154 = (word16) ptrArg02 + 0x0002
	word16 cx_160 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7:
	branch cx_160 == 0x0000 l0800_22C9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7_1:
	di_154 = di_154 + 0x0001
	cx_160 = cx_160 - 0x0001
	branch 0x00 != Mem93[es_153:di_154:byte] l0800_22C7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C9:
	word16 cx_170 = ~cx_160
	word16 di_174 = di_154 - cx_170
	byte Z_178 = cond(di_174)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF:
	branch cx_170 == 0x0000 l0800_22D1
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF_2:
	Z_178 = cond(0x00 - Mem93[es_153:di_174:byte]) (alias)
	di_174 = di_174 + 0x0001
	cx_170 = cx_170 - 0x0001
	branch 0x00 != Mem93[es_153:di_174:byte] l0800_22CF
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D1:
	branch Z_178 l0800_22DA
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D3:
	di_174 = 0x0001
	es_153 = 0x0000
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22DA:
	Mem208[ds_79:0x45AC:word16] = es_153
	Mem209[ds_79:0x45AA:word16] = di_174
	return ds_79
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2201_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> di:di Sequence es:di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_22FE(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_22FE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_22FE:
	word16 ax_25 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_29 = Mem0[ds:0x2E51:word16] + ax_25
	word16 di_207 = (word16) ptrArg02
	selector es_35 = SLICE(ptrArg02, selector, 16)
	word16 cx_209 = 0xFFFF
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336:
	branch cx_209 == 0x0000 l0800_2338
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336_1:
	di_207 = di_207 + 0x0001
	cx_209 = cx_209 - 0x0001
	branch 0x00 != Mem0[es_35:di_207:byte] l0800_2336
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2338:
	word16 cx_203 = ~cx_209
	word16 di_190 = di_207 - cx_203
	byte Z_198 = cond(di_190)
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E:
	branch cx_203 == 0x0000 l0800_2340
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E_2:
	Z_198 = cond(0x00 - Mem0[es_35:di_190:byte]) (alias)
	di_190 = di_190 + 0x0001
	cx_203 = cx_203 - 0x0001
	branch 0x00 != Mem0[es_35:di_190:byte] l0800_233E
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2340:
	branch Z_198 l0800_2349
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2342:
	di_190 = 0x0001
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2349:
	word16 di_89 = di_190 + 0x0004 - wArg02
	word16 ax_96 = wArg02 + di_89
	word16 di_119
	selector ds_120
	fn0800_B0F3(wArg02, wArg04, ax_96, wArg04, dx_29 - ax_96, out di_119, out ds_120)
	ptr32 es_bx_128 = Mem0[ds_120:0x2E51:segptr32]
	Mem131[es_bx_128 + 0x0004:byte] = (byte) (ax_25 - di_89 >>u 0x08)
	Mem135[es_bx_128 + 0x0005:byte] = bLoc08 - (byte) di_89
	word16 ax_144 = -di_89
	fn0800_2688(fp - 0x0002, ds_120, ax_144, -0x0000 - (ax_144 == 0x0000), 0x0000, 0x0000)
	Mem156[ds_120:0x45AC:word16] = wArg04
	word16 dx_155 = wArg02 + di_89
	Mem157[ds_120:0x45AA:word16] = dx_155
	branch (dx_155 | wArg04) == 0x0000 l0800_23D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_23D8:
	branch Mem157[ds_120:0x45AA:word16] <=u wArg02 l0800_23E7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_23E0:
	Mem188[ds_120:0x45AA:word16] = Mem157[ds_120:0x45AA:word16] - di_89
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_23E7:
	return ds_120
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_23C6:
	Mem171[ds_120:0x45AC:word16] = wArg04
	Mem172[ds_120:0x45AA:word16] = wArg02
	return ds_120
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_22FE_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_23EC(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_23EC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_23EC:
	word16 dx_22
	word16 bp_23
	selector ds_24
	word16 ax_25 = fn0800_24FE(fp - 0x0002, ds, DPB(ptrLoc10, wArg02, 0), out dx_22, out bp_23, out ds_24)
	Mem27[ss:bp_23 - 0x0006:word16] = dx_22
	Mem29[ss:bp_23 - 0x0008:word16] = ax_25
	ptr32 es_di_30 = Mem29[ss:bp_23 + 0x0004:segptr32]
	word16 di_31 = (word16) es_di_30
	selector es_32 = SLICE(es_di_30, selector, 16)
	word16 cx_39 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_240D:
	branch cx_39 == 0x0000 l0800_240F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_240D_1:
	di_31 = di_31 + 0x0001
	cx_39 = cx_39 - 0x0001
	branch 0x00 != Mem29[es_32:di_31:byte] l0800_240D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_240F:
	word16 cx_403 = ~cx_39
	word16 di_391 = di_31 - cx_403
	byte Z_399 = cond(di_391)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2415:
	branch cx_403 == 0x0000 l0800_2417
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2415_2:
	Z_399 = cond(0x00 - Mem29[es_32:di_391:byte]) (alias)
	di_391 = di_391 + 0x0001
	cx_403 = cx_403 - 0x0001
	branch 0x00 != Mem29[es_32:di_391:byte] l0800_2415
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2417:
	branch Z_399 l0800_2420
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2419:
	di_391 = 0x0001
	es_32 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2420:
	ptr32 es_di_87 = Mem29[ss:bp_23 + 0x0004:segptr32]
	Mem91[ss:fp - 0x000E:word16] = (int16) Mem29[es_32:di_391:byte] << 0x08
	word16 di_105 = (word16) es_di_87
	selector es_136 = SLICE(es_di_87, selector, 16)
	word16 cx_101 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2437:
	branch cx_101 == 0x0000 l0800_2439
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2437_1:
	di_105 = di_105 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch 0x00 != Mem91[es_136:di_105:byte] l0800_2437
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2439:
	word16 cx_108 = ~cx_101
	word16 di_114 = di_105 - cx_108
	byte Z_118 = cond(di_114)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_243F:
	branch cx_108 == 0x0000 l0800_2441
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_243F_2:
	Z_118 = cond(0x00 - Mem91[es_136:di_414:byte]) (alias)
	di_114 = di_414 + 0x0001
	cx_108 = cx_108 - 0x0001
	word16 di_414 = di_114
	branch 0x00 != Mem91[es_136:di_414:byte] l0800_243F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2441:
	branch Z_118 l0800_244A
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2443:
	es_136 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_244A:
	ptr32 es_di_153 = Mem91[ss:bp_23 + 0x0004:segptr32]
	Mem157[ss:fp - 0x000E:word16] = Mem91[ss:fp - 0x000E:word16] + DPB(es_136, 0x00, 8)
	Mem159[ss:fp - 0x0010:word16] = 0x0000
	word16 di_154 = (word16) es_di_153
	selector es_155 = SLICE(es_di_153, selector, 16)
	word16 cx_160 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2462:
	branch cx_160 == 0x0000 l0800_2464
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2462_1:
	di_154 = di_154 + 0x0001
	cx_160 = cx_160 - 0x0001
	branch 0x00 != Mem159[es_155:di_154:byte] l0800_2462
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2464:
	word16 cx_170 = ~cx_160
	word16 di_176 = di_154 - cx_170
	byte Z_180 = cond(di_176)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246A:
	branch cx_170 == 0x0000 l0800_246C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246A_2:
	Z_180 = cond(0x00 - Mem159[es_155:di_176:byte]) (alias)
	di_176 = di_176 + 0x0001
	cx_170 = cx_170 - 0x0001
	branch 0x00 != Mem159[es_155:di_176:byte] l0800_246A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246C:
	branch Z_180 l0800_2475
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246E:
	di_176 = 0x0001
	es_155 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2475:
	ptr32 es_di_207 = Mem159[ss:bp_23 + 0x0004:segptr32]
	Mem211[ss:fp - 0x0012:word16] = (int16) Mem159[es_155:di_176 + 0x0002:byte] << 0x08
	word16 di_208 = (word16) es_di_207
	selector es_209 = SLICE(es_di_207, selector, 16)
	word16 cx_218 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248C:
	branch cx_218 == 0x0000 l0800_248E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248C_1:
	di_208 = di_208 + 0x0001
	cx_218 = cx_218 - 0x0001
	branch 0x00 != Mem211[es_209:di_208:byte] l0800_248C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248E:
	word16 cx_228 = ~cx_218
	word16 di_234 = di_208 - cx_228
	byte Z_238 = cond(di_234)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2494:
	branch cx_228 == 0x0000 l0800_2496
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2494_2:
	Z_238 = cond(0x00 - Mem211[es_209:di_418:byte]) (alias)
	di_234 = di_418 + 0x0001
	cx_228 = cx_228 - 0x0001
	word16 di_418 = di_234
	branch 0x00 != Mem211[es_209:di_418:byte] l0800_2494
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2496:
	branch Z_238 l0800_249F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2498:
	es_209 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_249F:
	word16 ax_271 = Mem211[ss:fp - 0x0010:word16] + (Mem211[ss:fp - 0x0012:word16] + DPB(es_209, 0x00, 8))
	Mem277[ss:bp_23 - 0x0002:word16] = Mem211[ss:fp - 0x000E:word16] + (ax_271 <u 0x0000)
	Mem278[ss:bp_23 - 0x0004:word16] = ax_271
	Mem281[ss:fp - 0x000E:word16] = Mem278[ss:bp_23 - 0x0006:word16]
	Mem284[ss:fp - 0x0010:word16] = Mem281[ss:bp_23 - 0x0008:word16]
	word16 dx_287 = Mem284[ss:bp_23 - 0x0004:word16] - Mem284[ds_24:0x45A6:word16]
	Mem293[ss:fp - 0x0012:word16] = Mem284[ss:bp_23 - 0x0002:word16] - Mem284[ds_24:0x45A8:word16] - (dx_287 <u 0x0000)
	Mem295[ss:fp - 0x0014:word16] = dx_287
	Mem298[ss:fp - 0x0016:word16] = Mem295[ds_24:0x29D1:word16]
	Mem301[ss:fp - 0x0018:word16] = Mem298[ds_24:0x29CF:word16]
	selector ds_302
	word16 bp_303 = fn0800_3C99(bp_23, ds_24, out ds_302)
	Mem307[ss:fp - 0x000E:word16] = Mem301[ss:bp_303 - 0x0002:word16]
	Mem310[ss:fp - 0x0010:word16] = Mem307[ss:bp_303 - 0x0004:word16]
	word16 dx_314 = -Mem310[ss:bp_303 - 0x0008:word16]
	Mem319[ss:fp - 0x0012:word16] = -Mem310[ss:bp_303 - 0x0006:word16] - (dx_314 == 0x0000)
	Mem321[ss:fp - 0x0014:word16] = dx_314
	fn0800_2688(bp_303, ds_302, wArg00, wArg02, wArg04, wArg06)
	return Mem321[ss:bp_303:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp

fn0800_23EC_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_24FE(word16 bp, selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32)
fn0800_24FE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_24FE:
	word16 di_12 = (word16) ptrArg02
	selector es_13 = SLICE(ptrArg02, selector, 16)
	word16 cx_21 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250D:
	branch cx_21 == 0x0000 l0800_250F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250D_1:
	di_12 = di_12 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch 0x00 != Mem0[es_13:di_12:byte] l0800_250D
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250F:
	word16 cx_33 = ~cx_21
	word16 di_39 = di_12 - cx_33
	byte Z_43 = cond(di_39)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2515:
	branch cx_33 == 0x0000 l0800_2517
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2515_2:
	Z_43 = cond(0x00 - Mem0[es_13:di_495:byte]) (alias)
	di_39 = di_495 + 0x0001
	cx_33 = cx_33 - 0x0001
	word16 di_495 = di_39
	branch 0x00 != Mem0[es_13:di_495:byte] l0800_2515
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2517:
	branch Z_43 l0800_2520
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2519:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2520:
	word16 di_470 = (word16) ptrArg02
	word16 cx_472 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2537:
	branch cx_472 == 0x0000 l0800_2539
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2537_1:
	di_470 = di_470 + 0x0001
	cx_472 = cx_472 - 0x0001
	branch 0x00 != Mem0[0x0000:di_470:byte] l0800_2537
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2539:
	word16 cx_103 = ~cx_472
	word16 di_110 = di_470 - cx_103
	byte Z_101 = cond(di_110)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_253F:
	branch cx_103 == 0x0000 l0800_2541
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_253F_2:
	Z_101 = cond(0x00 - Mem0[0x0000:di_497:byte]) (alias)
	di_110 = di_497 + 0x0001
	cx_103 = cx_103 - 0x0001
	word16 di_497 = di_110
	branch 0x00 != Mem0[0x0000:di_497:byte] l0800_253F
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2541:
	branch Z_101 l0800_254A
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2543:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_254A:
	word16 di_137 = (word16) ptrArg02
	selector es_138 = SLICE(ptrArg02, selector, 16)
	word16 cx_143 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562:
	branch cx_143 == 0x0000 l0800_2564
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562_1:
	di_137 = di_137 + 0x0001
	cx_143 = cx_143 - 0x0001
	branch 0x00 != Mem0[es_138:di_137:byte] l0800_2562
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2564:
	word16 cx_153 = ~cx_143
	word16 di_159 = di_137 - cx_153
	byte Z_163 = cond(di_159)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A:
	branch cx_153 == 0x0000 l0800_256C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A_2:
	Z_163 = cond(0x00 - Mem0[es_138:di_499:byte]) (alias)
	di_159 = di_499 + 0x0001
	cx_153 = cx_153 - 0x0001
	word16 di_499 = di_159
	branch 0x00 != Mem0[es_138:di_499:byte] l0800_256A
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256C:
	branch Z_163 l0800_2575
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256E:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2575:
	word16 di_191 = (word16) ptrArg02
	selector es_192 = SLICE(ptrArg02, selector, 16)
	word16 cx_201 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C:
	branch cx_201 == 0x0000 l0800_258E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C_1:
	di_191 = di_191 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 != Mem0[es_192:di_191:byte] l0800_258C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258E:
	word16 cx_211 = ~cx_201
	word16 di_217 = di_191 - cx_211
	byte Z_221 = cond(di_217)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594:
	branch cx_211 == 0x0000 l0800_2596
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594_2:
	Z_221 = cond(0x00 - Mem0[es_192:di_501:byte]) (alias)
	di_217 = di_501 + 0x0001
	cx_211 = cx_211 - 0x0001
	word16 di_501 = di_217
	branch 0x00 != Mem0[es_192:di_501:byte] l0800_2594
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2596:
	branch Z_221 l0800_259F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2598:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_259F:
	word16 di_283
	selector ds_284
	word16 ax_285 = fn0800_ACB3(fp - 0x0002, ds, Mem0[ds:0x29CF:word16], Mem0[ds:0x29D1:word16], 0x0000, out di_283, out ds_284)
	Mem290[ss:fp - 0x0012:word16] = Mem0[ds_284:0x29D1:word16]
	Mem294[ss:fp - 0x0014:word16] = Mem290[ds_284:0x29CF:word16]
	selector ds_297
	word16 dx_298 = fn0800_3E5D(fp - 0x0002, ds_284, wArg00, wArg02, out ds_297)
	Mem301[ss:fp - 0x0008:word16] = dx_298
	Mem302[ss:fp - 0x000A:word16] = ax_285
	word16 dx_304
	word16 ax_305 = fn0800_8C8A(ax_285, 0x08, dx_298, bp, out dx_304)
	branch dx_304 != 0x0052 l0800_25FC
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_25F7:
	branch ax_305 == 0x4E43 l0800_260B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_25FC:
	Mem398[ss:fp - 0x0012:word16] = ds_297
	Mem401[ss:fp - 0x0014:word16] = 0x4348
	Mem404[ss:fp - 0x0016:word16] = 0x000C
	word16 si_405
	word16 di_406
	fn0800_0D24(fp - 0x0002, ds_297, out si_405, out di_406, out ds_297)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_260B:
	word16 ax_318 = Mem302[ss:fp - 0x000A:word16]
	branch (ax_318 & 0x00FF) == 0x0000 l0800_2655
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2655:
	Mem376[ss:fp - 0x0012:word16] = Mem302[ds_297:0x29D1:word16]
	Mem379[ss:fp - 0x0014:word16] = Mem376[ds_297:0x29CF:word16]
	selector ds_380
	word16 dx_381 = fn0800_3E5D(fp - 0x0002, ds_297, wArg00, wArg02, out ds_380)
	Mem383[ds_380:0x2A05:word16] = dx_381
	Mem384[ds_380:0x2A03:word16] = ax_318 & 0x00FF
	Mem385[ds_380:0x2A09:word16] = dx_381
	Mem386[ds_380:0x2A07:word16] = ax_318 & 0x00FF
	ui32 dx_ax_388 = SEQ(dx_381, (ax_318 & 0x00FF) + 0x0008)
	Mem394[ss:fp - 0x000C:word16] = SLICE(dx_ax_388 + 0x00000008, word16, 16)
	Mem395[ss:fp - 0x000E:word16] = (word16) (dx_ax_388 + 0x00000008)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2616:
	Mem342[ss:fp - 0x0012:word16] = Mem302[ds_297:0x29D1:word16]
	Mem345[ss:fp - 0x0014:word16] = Mem342[ds_297:0x29CF:word16]
	selector ds_346
	word16 dx_347 = fn0800_3E5D(fp - 0x0002, ds_297, wArg00, wArg02, out ds_346)
	Mem350[ds_346:0x2A09:word16] = dx_347
	Mem351[ds_346:0x2A07:word16] = ax_318 & 0x00FF
	Mem354[ss:fp - 0x0012:word16] = Mem351[ds_346:0x29D1:word16]
	Mem357[ss:fp - 0x0014:word16] = Mem354[ds_346:0x29CF:word16]
	selector ds_358
	word16 dx_359 = fn0800_3E5D(fp - 0x0002, ds_346, wArg00, wArg02, out ds_358)
	Mem361[ds_358:0x2A05:word16] = dx_359
	Mem362[ds_358:0x2A03:word16] = ax_318 & 0x00FF
	ui32 ax_dx_366 = SEQ(Mem362[ds_358:0x2A05:word16], Mem362[ds_358:0x2A03:word16] + 0x0012)
	Mem372[ss:fp - 0x000C:word16] = SLICE(ax_dx_366 + 0x00000012, word16, 16)
	Mem373[ss:fp - 0x000E:word16] = (word16) (ax_dx_366 + 0x00000012)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_267D:
	word16 dx_327
	*dxOut = Mem302[ss:fp - 0x000C:word16]
	word16 bp_335
	*bpOut = Mem302[ss:fp - 0x0002:word16]
	return Mem302[ss:fp - 0x000E:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_24FE_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2688(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_2688_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2688:
	word16 dx_23 = Mem0[ds:0x2E53:word16]
	word16 bx_24 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	word16 ax_27 = Mem0[ds:0x2E53:word16]
	word16 wLoc06_225 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27B3:
	branch ax_27 == dx_23 l0800_27C1
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C1:
	branch wLoc06_225 == bx_24 l0800_27C9
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C9:
	branch (wArg06 | wArg08) != 0x0000 l0800_27DF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_27D1:
	word16 v22_267 = Mem0[ds:0x45A6:word16] + wArg02
	Mem268[ds:0x45A6:word16] = v22_267
	Mem272[ds:0x45A8:word16] = Mem268[ds:0x45A8:word16] + wArg04 + (v22_267 <u 0x0000)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_27DF:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2688_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_27C6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27BE:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26C3:
	word16 dx_135 = wLoc06_225
	word16 wLoc06_105 = wLoc06_225 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26D3:
	wLoc06_105 = wLoc06_105 + 0x0001
	branch Mem0[ptrLoc06:byte] != 0x00 l0800_26D3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26DF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_277D:
	branch Mem0[ptrLoc06:byte] == 0x00 l0800_2789
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2789:
	word16 v24_224 = wLoc06_105 + 0x0001
	word16 ax_228 = v24_224 - Mem0[ds:0x2E51:word16]
	word16 dx_234
	Mem241[ptrLoc0E:byte] = (byte) fn0800_8C8A(ax_228, 0x08, 0x0000 - (ax_228 <u 0x0000), bp, out dx_234)
	Mem250[ptrLoc0E + 0x0001:byte] = (byte) (v24_224 - Mem241[ds:0x2E51:word16])
	wLoc06_225 = v24_224
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2786:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26E2:
	word16 v25_109 = wLoc06_105 + 0x0001
	wLoc06_105 = v25_109
	branch Mem0[ptrLoc06:byte] != 0x00 l0800_26E2
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26EE:
	Mem126[ss:fp - 0x0014:word16] = ((int16) Mem0[ptrLoc06:byte] << 0x08) + DPB(dx_135, 0x00, 8)
	word16 ax_134 = ((int16) Mem126[ptrLoc06 + 0x0002:byte] << 0x08) + DPB((word16) ptrLoc06, 0x00, 8)
	dx_135 = ax_134
	word16 ax_142 = Mem126[ss:fp - 0x0014:word16] + (ax_134 <u 0x0000)
	branch ax_142 < wArg08 l0800_2779
// DataOut: ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2727:
	branch ax_142 != wArg08 l0800_272E
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2729:
	branch ax_134 <u wArg06 l0800_2779
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_272E:
	int32 dx_ax_177 = (int32) SLICE(SEQ(ax_142, ax_134 + wArg02) + _, word16, 16)
	word16 dx_181
	Mem187[ptrLoc06:byte] = (byte) fn0800_8C8A((word16) dx_ax_177, 0x08, SLICE(dx_ax_177, word16, 16), bp, out dx_181)
	Mem197[ptrLoc06 + 0x0001:byte] = (byte) (int32) SLICE(SEQ(ax_142, ax_134 + wArg02) + _, word16, 16)
	word16 ax_200 = ax_134 + wArg02
	Mem214[ptrLoc06 + 0x0002:byte] = (byte) fn0800_8C8A(ax_200, 0x08, ax_142 + wArg04 + (SEQ(ax_200, ax_142) <u 0x00000000), bp, out dx_135)
	Mem220[ptrLoc06 + 0x0003:byte] = bLoc12 + bArg02
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2779:
	wLoc06_105 = v25_109 + 0x0004
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)



word16 fn0800_283D(word16 si, word16 di, selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax bp dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32)
fn0800_283D_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_283D:
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	word16 cx_178 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_284D:
	branch cx_178 == 0x0000 l0800_284F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_284D_1:
	di_15 = di_15 + 0x0001
	cx_178 = cx_178 - 0x0001
	branch 0x00 != Mem0[es_16:di_15:byte] l0800_284D
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_284F:
	word16 cx_172 = ~cx_178
	word16 di_160 = di_15 - cx_172
	byte Z_168 = cond(di_160)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_2856:
	branch cx_172 == 0x0000 l0800_2858
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_2856_2:
	Z_168 = cond(0x3A - Mem0[es_16:di_160:byte]) (alias)
	di_160 = di_160 + 0x0001
	cx_172 = cx_172 - 0x0001
	branch 0x3A != Mem0[es_16:di_160:byte] l0800_2856
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_2858:
	branch Z_168 l0800_2861
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_285A:
	di_160 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_2861:
	branch di_160 == 0x0001 l0800_288E
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_2866_thunk_fn0800_288E:
	word16 dx_155
	word16 bp_156
	return fn0800_288E(fp - 0x0002, ds, di, si, out dx_155, out bp_156)
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_2868:
	word16 di_100 = (word16) ptrArg02
	selector es_86 = SLICE(ptrArg02, selector, 16)
	word16 cx_153 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_2870:
	branch cx_153 == 0x0000 l0800_2872
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_2870_1:
	di_100 = di_100 + 0x0001
	cx_153 = cx_153 - 0x0001
	branch 0x00 != Mem0[0x0000:di_100:byte] l0800_2870
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_2872:
	word16 cx_101 = ~cx_153
	word16 di_105 = di_100 - cx_101
	byte Z_109 = cond(di_105)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_2879:
	branch cx_101 == 0x0000 l0800_287B
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_2879_2:
	Z_109 = cond(0x3A - Mem0[0x0000:di_105:byte]) (alias)
	di_105 = di_105 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch 0x3A != Mem0[0x0000:di_105:byte] l0800_2879
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_287B:
	branch Z_109 l0800_2884
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_287B_thunk_fn0800_2884:
	word16 dx_135
	word16 bp_136
	return fn0800_2884(fp - 0x0002, di_105, es_86, ds, out dx_135, out bp_136)
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_287D:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

l0800_287D_thunk_fn0800_2880:
	word16 dx_130
	word16 bp_131
	return fn0800_2880(fp - 0x0002, 0x0001, ds, out dx_130, out bp_131)
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:0x0001 es:0x0000 -14(fp):di -12(fp):si -2(fp):bp

fn0800_283D_exit:
// DataOut: ax bp dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> -14(fp):di -12(fp):si -2(fp):bp



word16 fn0800_2880(word16 bp, word16 di, selector ds, ptr16 & dxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: ax bp dx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_2880_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2880:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2882_thunk_fn0800_2884:
	word16 dx_9
	word16 bp_10
	return fn0800_2884(bp, di, 0x0000, ds, out dx_9, out bp_10)
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x0000 es:0x0000

fn0800_2880_exit:
// DataOut: ax bp dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> bp:<invalid> cx:<invalid>



word16 fn0800_2884(word16 bp, word16 di, selector es, selector ds, ptr16 & dxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds es ss
// LiveOut: ax bp dx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_2884_entry:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2884:
	Mem8[ss:bp + 0x0006:word16] = es
	Mem11[ss:bp + 0x0004:word16] = di
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_288B_thunk_fn0800_288E:
	word16 dx_15
	word16 bp_16
	return fn0800_288E(bp, ds, wArg00, wArg02, out dx_15, out bp_16)
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di - 0x0001 ax:es

fn0800_2884_exit:
// DataOut: ax bp dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> bp:<invalid> cx:<invalid>



word16 fn0800_288E(word16 bp, selector ds, word16 wArg00, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ds
fn0800_288E_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_288E:
	word16 bx_19 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	Mem20[ss:bp - 0x0002:word16] = Mem0[ds:0x2E53:word16]
	Mem23[ss:bp - 0x0004:word16] = bx_19
	word16 dx_25 = Mem23[ds:0x2E51:word16]
	Mem28[ss:bp - 0x0006:word16] = Mem23[ds:0x2E53:word16]
	Mem29[ss:bp - 0x0008:word16] = dx_25 + 0x0008
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2917:
	word16 dx_53 = Mem29[ss:bp - 0x0008:word16]
	branch Mem29[ss:bp - 0x0006:word16] != Mem29[ss:bp - 0x0002:word16] l0800_28C2
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_2922:
	branch dx_53 != Mem29[ss:bp - 0x0004:word16] l0800_28C2
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_28C2:
	ptr32 es_di_87 = Mem29[ss:bp + 0x0004:segptr32]
	word16 si_121 = Mem29[ss:bp - 0x0008:word16] + 0x0002
	selector ds_86 = Mem29[ss:bp - 0x0006:selector]
	selector es_88 = SLICE(es_di_87, selector, 16)
	word16 di_102 = (word16) es_di_87
	word16 ax_132 = 0x0000
	word16 cx_103 = 0xFFFF
// DataOut: al ax bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_28D4:
	branch cx_103 == 0x0000 l0800_28D6
// DataOut: al ax bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_28D4_1:
	di_102 = di_102 + 0x0001
	cx_103 = cx_103 - 0x0001
	branch 0x00 != Mem29[es_88:di_102:byte] l0800_28D4
// DataOut: al ax bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_28D6:
	word16 cx_105 = ~cx_103
	word16 di_107 = di_102 - cx_105
	byte SCZO_109 = cond(di_107)
	byte Z_110 = SCZO_109
	byte C_112 = SCZO_109
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_28DA:
	branch cx_105 == 0x0000 l0800_28DC
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_28DA_2:
	byte SCZO_179 = cond(Mem29[ds_86:si_212:byte] - Mem29[es_88:di_211:byte])
	Z_110 = SCZO_179 (alias)
	C_112 = SCZO_179 (alias)
	si_121 = si_212 + 0x0001
	di_107 = di_211 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_211 = di_107
	word16 si_212 = si_121
	branch Mem29[ds_86:si_212:byte] != Mem29[es_88:di_211:byte] l0800_28DA
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_28DC:
	branch Z_110 l0800_28E3
// DataOut: ax bp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_28DE:
	word16 ax_172 = 0x0000 - C_112
	ax_132 = ax_172 - 0xFFFF - (ax_172 <u 0x0000)
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_28E3:
	branch ax_132 != 0x0000 l0800_28F4
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_28F4:
	word16 bx_168 = Mem29[ds:0x2E51:word16] + (((int16) Mem29[Mem29[ss:bp - 0x0008:segptr32]:byte] << 0x08) + DPB(dx_53, 0x00, 8))
	Mem170[ss:bp - 0x0006:word16] = Mem29[ds:0x2E53:word16]
	Mem171[ss:bp - 0x0008:word16] = bx_168
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_28E8:
	word16 dx_141
	*dxOut = Mem29[ss:bp - 0x0006:word16]
	word16 bp_153
	*bpOut = Mem29[ss:bp:word16]
	return Mem29[ss:bp - 0x0008:word16]
// DataOut: ax bp dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds

l0800_2927:
	word16 dx_196
	*dxOut = 0x0000
	word16 bp_208
	*bpOut = Mem29[ss:bp:word16]
	return 0x0000
// DataOut: ax bp dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds Sequence es:di:<invalid> cx:<invalid> di:<invalid> -2(fp):ds

fn0800_288E_exit:
// DataOut: ax bp dx sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> di:<invalid> si:<invalid> bp:<invalid> ds:ds Sequence es:di:<invalid> cx:<invalid> -2(fp):ds



word16 fn0800_2931(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_2931_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_2931:
	selector es_15 = SLICE(ptrArg06, selector, 16)
	word16 di_16 = (word16) ptrArg06 + 0x0002
	word16 cx_22 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941:
	branch cx_22 == 0x0000 l0800_2943
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941_1:
	di_16 = di_16 + 0x0001
	cx_22 = cx_22 - 0x0001
	branch 0x00 != Mem0[es_15:di_16:byte] l0800_2941
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2943:
	word16 cx_275 = ~cx_22
	word16 di_263 = di_16 - cx_275
	byte Z_271 = cond(di_263)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949:
	branch cx_275 == 0x0000 l0800_294B
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949_2:
	Z_271 = cond(0x00 - Mem0[es_15:di_263:byte]) (alias)
	di_263 = di_263 + 0x0001
	cx_275 = cx_275 - 0x0001
	branch 0x00 != Mem0[es_15:di_263:byte] l0800_2949
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294B:
	branch Z_271 l0800_2954
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294D:
	di_263 = 0x0001
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2954:
	word16 wArg08_223 = 0x0000
	word16 wArg06_224 = di_263
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> es:0x0000 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_29B4:
	branch Mem0[ptrArg06:byte] != 0x00 l0800_2960
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2960:
	word16 si_114 = wArg06_224
	word16 di_120 = (word16) ptrArg02
	selector es_121 = SLICE(ptrArg02, selector, 16)
	word16 ax_122 = 0x0000
	word16 cx_126 = 0xFFFF
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F:
	branch cx_126 == 0x0000 l0800_2971
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F_1:
	di_120 = di_120 + 0x0001
	cx_126 = cx_126 - 0x0001
	branch 0x00 != Mem0[es_121:di_120:byte] l0800_296F
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2971:
	word16 cx_134 = ~cx_126
	word16 di_135 = di_120 - cx_134
	byte SCZO_137 = cond(di_135)
	byte Z_139 = SCZO_137
	byte C_140 = SCZO_137
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975:
	branch cx_134 == 0x0000 l0800_2977
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975_2:
	byte SCZO_250 = cond(Mem0[wArg08_223:si_285:byte] - Mem0[es_121:di_284:byte])
	Z_139 = SCZO_250 (alias)
	C_140 = SCZO_250 (alias)
	si_114 = si_285 + 0x0001
	di_135 = di_284 + 0x0001
	cx_134 = cx_134 - 0x0001
	word16 di_284 = di_135
	word16 si_285 = si_114
	branch Mem0[wArg08_223:si_285:byte] != Mem0[es_121:di_284:byte] l0800_2975
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2977:
	branch Z_139 l0800_297E
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2979:
	word16 ax_244 = 0x0000 - C_140
	ax_122 = ax_244 - 0xFFFF - (ax_244 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_297E:
	branch ax_122 != 0x0000 l0800_298D
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_298D:
	word16 di_176 = (word16) ptrArg06
	selector es_177 = SLICE(ptrArg06, selector, 16)
	word16 cx_182 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995:
	branch cx_182 == 0x0000 l0800_2997
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995_1:
	di_176 = di_176 + 0x0001
	cx_182 = cx_182 - 0x0001
	branch 0x00 != Mem0[es_177:di_176:byte] l0800_2995
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2997:
	word16 cx_190 = ~cx_182
	word16 di_193 = di_176 - cx_190
	byte Z_197 = cond(di_193)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D:
	branch cx_190 == 0x0000 l0800_299F
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D_2:
	Z_197 = cond(0x00 - Mem0[es_177:di_193:byte]) (alias)
	di_193 = di_193 + 0x0001
	cx_190 = cx_190 - 0x0001
	branch 0x00 != Mem0[es_177:di_193:byte] l0800_299D
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299F:
	branch Z_197 l0800_29A8
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A1:
	di_193 = 0x0001
	es_177 = 0x0000
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A8:
	wArg08_223 = es_177
	wArg06_224 = di_193 + 0x0004
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2983:
	word16 dx_166
	*dxOut = wArg08_223
	return wArg06_224
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_29BD:
	word16 dx_103
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2931_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> di:di ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> dx:<invalid> si:si ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_29C5(word16 si, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si ss
// LiveOut: ax bp ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_29C5_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_29C5:
	branch (Mem0[ds:0x45AE:word16] | Mem0[ds:0x45B0:word16]) != 0x0000 l0800_2A07
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_29D4_thunk_fn0800_2A07:
	word16 bp_35
	word16 si_36
	selector ds_37
	return fn0800_2A07(fp - 0x0002, ds, out bp_35, out si_36, out ds_37)
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 0x0002 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp

l0800_29D4_thunk_fn0800_29D6:
	word16 bp_29
	word16 si_30
	selector ds_31
	return fn0800_29D6(fp - 0x0002, si, ds, out bp_29, out si_30, out ds_31)
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 0x0002 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp

fn0800_29C5_exit:
// DataOut: ax bp ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -126(fp):di -124(fp):si -2(fp):bp



word16 fn0800_29D6(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax bp ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_29D6_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_29D6:
	branch (Mem0[ds:0x45AA:word16] | Mem0[ds:0x45AC:word16]) != 0x0000 l0800_2A07
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_29DD_thunk_fn0800_2A07:
	word16 bp_70
	word16 si_71
	selector ds_72
	return fn0800_2A07(bp, ds, out bp_70, out si_71, out ds_72)
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_29DF:
	byte dl_32
	word16 bp_33
	word16 si_34
	word16 di_35
	selector ds_36
	branch fn0800_2DE2(si, ds, out dl_32, out bp_33, out si_34, out di_35, out ds_36) != 0x0000 l0800_29F6
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_29F6:
	word16 dx_56 = Mem0[ds_36:0x2E51:word16]
	Mem59[ds_36:0x45B0:word16] = Mem0[ds_36:0x2E53:word16]
	Mem60[ds_36:0x45AE:word16] = dx_56 + 0x0008
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -4(fp):0x4541 -2(fp):ds

l0800_2A03_thunk_fn0800_2A07:
	word16 bp_65
	word16 si_66
	selector ds_67
	return fn0800_2A07(bp_33, ds_36, out bp_65, out si_66, out ds_67)
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -4(fp):0x4541 -2(fp):ds

l0800_29D4_thunk_fn0800_29D6:
	word16 bp_61
	word16 si_62
	selector ds_63
	return fn0800_29D6(bp_33, si_34, ds_36, out bp_61, out si_62, out ds_63)
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -4(fp):0x4541 -2(fp):ds

l0800_29EE:
	word16 si_49
	*siOut = Mem0[ss:fp + 0x0002:word16]
	word16 bp_51
	*bpOut = Mem0[ss:bp_33:word16]
	return 0x0000
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -4(fp):0x4541 -2(fp):ds

fn0800_29D6_exit:
// DataOut: ax bp ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -4(fp):0x4541 -2(fp):ds



word16 fn0800_2A07(word16 bp, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_2A07_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2A07:
	fn0800_3509(ds, 0x4541, ds)
	Mem18[ss:fp - 0x0002:word16] = ds
	Mem21[ss:fp - 0x0004:word16] = 0x4541
	Mem23[ss:fp - 0x0006:word16] = ss
	Mem26[ss:fp - 0x0008:word16] = bp - 0x0078
	fn0800_35A3(ds, wArg04, wArg06)
	word16 bx_45 = (word16) Mem26[ds:0x2E51:segptr32] + ((DPB(bp - 0x0078, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	Mem47[ss:bp - 0x0002:word16] = Mem26[ds:0x2E53:word16]
	Mem48[ss:bp - 0x0004:word16] = bx_45
	ds_107 = ds
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_2C53:
	selector ds_107
	word16 dx_70 = Mem48[ds_107:0x45AE:word16]
	branch Mem48[ds_107:0x45B0:word16] == Mem48[ss:bp - 0x0002:word16] l0800_2C62
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C62:
	branch dx_70 == Mem48[ss:bp - 0x0004:word16] l0800_2C6A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C6A:
	Mem797[ds_107:0x45AC:word16] = 0x0000
	Mem798[ds_107:0x45AA:word16] = 0x0000
	Mem799[ds_107:0x45B0:word16] = 0x0000
	Mem800[ds_107:0x45AE:word16] = 0x0000
	Mem803[ss:fp - 0x0002:word16] = Mem800[ss:bp + 0x000E:word16]
	Mem806[ss:fp - 0x0004:word16] = Mem803[ss:bp + 0x000C:word16]
	Mem809[ss:fp - 0x0006:word16] = Mem806[ss:bp + 0x000A:word16]
	Mem812[ss:fp - 0x0008:word16] = Mem809[ss:bp + 0x0008:word16]
	Mem815[ss:fp - 0x000A:word16] = Mem812[ss:bp + 0x0006:word16]
	Mem818[ss:fp - 0x000C:word16] = Mem815[ss:bp + 0x0004:word16]
	word16 bp_819
	word16 si_820
	selector ds_821
	word16 ax_822 = fn0800_29C5(si, ds_107, out bp_819, out si_820, out ds_821)
	word16 si_830
	*siOut = Mem818[ss:fp + 0x0004:word16]
	word16 bp_832
	*bpOut = Mem818[ss:bp_819:word16]
	return ax_822
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2C67:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C5F:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2A4C:
	branch (Mem48[ds_107:0x45AA:word16] | Mem48[ds_107:0x45AC:word16]) != 0x0000 l0800_2A58
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2A58:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B54:
	branch Mem48[Mem48[ds_107:0x45AA:segptr32]:byte] == 0x00 l0800_2B61
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B61:
	word16 bx_787 = Mem48[ds_107:0x2E51:word16] + (((int16) Mem48[Mem48[ds_107:0x45AE:segptr32]:byte] << 0x08) + DPB(dx_70, 0x00, 8))
	Mem789[ds_107:0x45B0:word16] = Mem48[ds_107:0x2E53:word16]
	Mem790[ds_107:0x45AE:word16] = bx_787
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B5E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2A5B:
	Mem408[ss:fp - 0x0002:word16] = ss
	Mem411[ss:fp - 0x0004:word16] = bp - 0x0078
	Mem414[ss:fp - 0x0006:word16] = Mem411[ds_107:0x45AC:word16]
	Mem417[ss:fp - 0x0008:word16] = Mem414[ds_107:0x45AA:word16]
	branch fn0800_4357(ds, ptrArg00, ptrArg04) != 0x0000 l0800_2A75
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2A75:
	ptr32 es_bx_500 = Mem417[ss:bp + 0x0004:segptr32]
	word16 dx_504 = Mem417[ds_107:0x45AE:word16]
	Mem505[es_bx_500 + 0x0002:word16] = Mem417[ds_107:0x45B0:word16]
	Mem506[es_bx_500:word16] = dx_504
	ptr32 es_bx_507 = Mem506[ss:bp + 0x0008:segptr32]
	word16 dx_511 = Mem506[ds_107:0x45AA:word16]
	Mem512[es_bx_507 + 0x0002:word16] = Mem506[ds_107:0x45AC:word16]
	Mem513[es_bx_507:word16] = dx_511
	ptr32 es_di_514 = Mem513[ds_107:0x45AE:segptr32]
	Mem519[ss:fp - 0x0002:word16] = SLICE(es_di_514, selector, 16)
	selector es_520 = Mem519[ss:bp + 0x000E:selector]
	Mem522[ss:fp - 0x0004:word16] = (word16) es_di_514 + 0x0002
	word16 di_523 = Mem522[ss:bp + 0x000C:word16]
	word16 di_525 = Mem522[ss:fp - 0x0004:word16]
	selector es_528 = Mem522[ss:fp - 0x0002:selector]
	Mem533[ss:fp - 0x0002:word16] = es_520
	Mem535[ss:fp - 0x0004:word16] = di_523
	word16 cx_540 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AB3:
	branch cx_540 == 0x0000 l0800_2AB5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AB3_1:
	di_525 = di_525 + 0x0001
	cx_540 = cx_540 - 0x0001
	branch 0x00 != Mem535[es_528:di_525:byte] l0800_2AB3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AB5:
	word16 di_559 = Mem535[ss:fp - 0x0004:word16]
	selector es_562 = Mem535[ss:fp - 0x0002:selector]
	Mem567[ss:fp - 0x0002:word16] = ds_107
	word16 cx_550 = ~cx_540
	word16 cx_552 = cx_550 >>u 0x0001
	word16 si_558 = di_525 - cx_550
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AC4:
	branch cx_552 == 0x0000 l0800_2AC6
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AC6:
	word16 cx_581 = cx_552 * 0x0002 + (cx_550 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AC8:
	branch cx_581 == 0x0000 l0800_2ACA
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2ACA:
	ptr32 es_di_598 = Mem567[ss:bp + 0x000C:segptr32]
	selector ds_596 = Mem567[ss:fp - 0x0002:selector]
	Mem602[ss:fp - 0x0002:word16] = SLICE(es_di_598, selector, 16)
	selector es_603 = Mem602[ds_596:0x45AC:selector]
	Mem606[ss:fp - 0x0004:word16] = (word16) es_di_598
	word16 di_607 = Mem606[ds_596:0x45AA:word16]
	word16 cx_613 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2ADD:
	branch cx_613 == 0x0000 l0800_2ADF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2ADD_1:
	di_607 = di_607 + 0x0001
	cx_613 = cx_613 - 0x0001
	branch 0x00 != Mem606[es_603:di_607:byte] l0800_2ADD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2ADF:
	word16 cx_625 = ~cx_613
	word16 di_628 = Mem606[ss:fp - 0x0004:word16]
	selector es_631 = Mem606[ss:fp - 0x0002:selector]
	Mem640[ss:fp - 0x0002:word16] = cx_625
	word16 si_627 = di_607 - cx_625
	word16 cx_641 = 0xFFFF
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AF3:
	branch cx_641 == 0x0000 l0800_2AF5
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AF3_2:
	di_628 = di_628 + 0x0001
	cx_641 = cx_641 - 0x0001
	branch 0x00 != Mem640[es_631:di_628:byte] l0800_2AF3
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AF5:
	word16 di_656 = di_628 - 0x0001
	word16 cx_659 = Mem640[ss:fp - 0x0002:word16]
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AF7:
	branch cx_659 == 0x0000 l0800_2AF9
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AF9:
	ptr32 es_di_675 = Mem640[ds_596:0x45AA:segptr32]
	selector ds_674
	*dsOut = ds_596
	selector es_676 = SLICE(es_di_675, selector, 16)
	word16 di_677 = (word16) es_di_675
	word16 cx_678 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2B02:
	branch cx_678 == 0x0000 l0800_2B04
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2B02_1:
	di_677 = di_677 + 0x0001
	cx_678 = cx_678 - 0x0001
	branch 0x00 != Mem640[es_676:di_677:byte] l0800_2B02
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2B04:
	word16 cx_688 = ~cx_678
	word16 di_692 = di_677 - cx_688
	byte Z_695 = cond(di_692)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2B0A:
	branch cx_688 == 0x0000 l0800_2B0C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2B0A_2:
	Z_695 = cond(0x00 - Mem640[es_676:di_692:byte]) (alias)
	di_692 = di_692 + 0x0001
	cx_688 = cx_688 - 0x0001
	branch 0x00 != Mem640[es_676:di_692:byte] l0800_2B0A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2B0C:
	branch Z_695 l0800_2B15
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2B0E:
	di_692 = 0x0001
	es_676 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2B15:
	Mem724[ds_596:0x45AC:word16] = es_676
	Mem725[ds_596:0x45AA:word16] = di_692 + 0x0004
	word16 si_731
	*siOut = Mem725[ss:fp + 0x0002:word16]
	word16 bp_733
	*bpOut = Mem725[ss:bp:word16]
	return 0x0001
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_2A07_exit:
// DataOut: ax bp ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AF7_3:
	Mem668[es_631:di_656:byte] = Mem640[es_603:si_627:byte]
	si_627 = si_627 + 0x0001
	di_656 = di_656 + 0x0001
	cx_659 = cx_659 - 0x0001
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AC8_1:
	Mem590[es_562:di_559:byte] = Mem567[es_528:si_558:byte]
	si_558 = si_558 + 0x0001
	di_559 = di_559 + 0x0001
	cx_581 = cx_581 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2AC4_2:
	Mem575[es_562:di_559:word16] = Mem567[es_528:si_558:word16]
	si_558 = si_558 + 0x0002
	di_559 = di_559 + 0x0002
	cx_552 = cx_552 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_2A72:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B2B:
	ptr32 es_di_424 = Mem417[ds_107:0x45AA:segptr32]
	selector es_425 = SLICE(es_di_424, selector, 16)
	word16 di_426 = (word16) es_di_424
	word16 cx_431 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> bp:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B34:
	branch cx_431 == 0x0000 l0800_2B36
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B34_1:
	di_426 = di_426 + 0x0001
	cx_431 = cx_431 - 0x0001
	branch 0x00 != Mem417[es_425:di_426:byte] l0800_2B34
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B36:
	word16 cx_441 = ~cx_431
	word16 di_445 = di_426 - cx_441
	byte Z_448 = cond(di_445)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B3C:
	branch cx_441 == 0x0000 l0800_2B3E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B3C_2:
	Z_448 = cond(0x00 - Mem417[es_425:di_445:byte]) (alias)
	di_445 = di_445 + 0x0001
	cx_441 = cx_441 - 0x0001
	branch 0x00 != Mem417[es_425:di_445:byte] l0800_2B3C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B3E:
	branch Z_448 l0800_2B47
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B40:
	di_445 = 0x0001
	es_425 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B47:
	Mem477[ds_107:0x45AC:word16] = es_425
	Mem478[ds_107:0x45AA:word16] = di_445 + 0x0004
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bp:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2A55:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C12:
	word16 dx_120 = Mem48[ds_107:0x45AE:word16]
	branch Mem48[ds_107:0x45B0:word16] == Mem48[ss:bp - 0x0002:word16] l0800_2C21
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C21:
	branch dx_120 == Mem48[ss:bp - 0x0004:word16] l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C26:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C1E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B8A:
	branch Mem48[ds_107:0x2A1B:word16] == 0x0000 l0800_2BBB
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B91:
	Mem337[ss:fp - 0x0002:word16] = ss
	selector es_338 = Mem337[ss:fp - 0x0002:selector]
	word16 di_341 = bp - 0x006A
	word16 cx_347 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B9B:
	branch cx_347 == 0x0000 l0800_2B9D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B9B_1:
	di_341 = di_839 + 0x0001
	cx_347 = cx_347 - 0x0001
	word16 di_839 = di_341
	branch 0x00 != Mem337[es_338:di_839:byte] l0800_2B9B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2B9D:
	Mem362[ss:fp - 0x0002:word16] = ~cx_347 - 0x0001
	Mem364[ss:fp - 0x0004:word16] = ss
	Mem367[ss:fp - 0x0006:word16] = bp - 0x006A
	word16 ax_368 = Mem367[ds_107:0x45AE:word16]
	Mem373[ss:fp - 0x0008:word16] = Mem367[ds_107:0x45B0:word16]
	Mem375[ss:fp - 0x000A:word16] = ax_368 + 0x0002
	branch fn0800_BFE6(ptrArg00, ptrArg04, wArg08) == 0x0000 l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BBB:
	branch Mem48[ds_107:0x2A1B:word16] != 0x0000 l0800_2BEC
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BC2:
	si = Mem48[ds_107:0x45AE:word16] + 0x0002
	Mem254[ss:fp - 0x0002:word16] = ds_107
	selector ds_255 = Mem254[ds_107:0x45B0:selector]
	Mem257[ss:fp - 0x0004:word16] = ss
	selector es_258 = Mem257[ss:fp - 0x0004:selector]
	word16 di_261 = bp - 0x006A
	word16 ax_263 = 0x0000
	word16 cx_268 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BD8:
	branch cx_268 == 0x0000 l0800_2BDA
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BD8_2:
	di_261 = di_261 + 0x0001
	cx_268 = cx_268 - 0x0001
	branch 0x00 != Mem257[es_258:di_261:byte] l0800_2BD8
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BDA:
	word16 cx_278 = ~cx_268
	word16 di_280 = di_261 - cx_278
	byte SCZO_282 = cond(di_280)
	byte Z_283 = SCZO_282
	byte C_285 = SCZO_282
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BDE:
	branch cx_278 == 0x0000 l0800_2BE0
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BDE_3:
	byte SCZO_321 = cond(Mem257[ds_255:si:byte] - Mem257[es_258:di_838:byte])
	Z_283 = SCZO_321 (alias)
	C_285 = SCZO_321 (alias)
	si = si + 0x0001
	di_280 = di_838 + 0x0001
	cx_278 = cx_278 - 0x0001
	word16 di_838 = di_280
	branch Mem257[ds_255:si:byte] != Mem257[es_258:di_838:byte] l0800_2BDE
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BE0:
	branch Z_283 l0800_2BE7
// DataOut: ax bp si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BE2:
	word16 ax_314 = 0x0000 - C_285
	ax_263 = ax_314 - 0xFFFF - (ax_314 <u 0x0000)
// DataOut: ax bp si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BE7:
	ds_107 = Mem257[ss:fp - 0x0002:selector]
	branch ax_263 == 0x0000 l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C29:
	ptr32 es_di_132 = Mem48[ds_107:0x45AE:segptr32]
	selector es_133 = SLICE(es_di_132, selector, 16)
	word16 di_135 = (word16) es_di_132 + 0x0002
	word16 cx_141 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C35:
	branch cx_141 == 0x0000 l0800_2C37
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C35_1:
	di_135 = di_135 + 0x0001
	cx_141 = cx_141 - 0x0001
	branch 0x00 != Mem48[es_133:di_135:byte] l0800_2C35
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C37:
	word16 cx_151 = ~cx_141
	word16 di_155 = di_135 - cx_151
	byte Z_158 = cond(di_155)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C3D:
	branch cx_151 == 0x0000 l0800_2C3F
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C3D_2:
	Z_158 = cond(0x00 - Mem48[es_133:di_155:byte]) (alias)
	di_155 = di_155 + 0x0001
	cx_151 = cx_151 - 0x0001
	branch 0x00 != Mem48[es_133:di_155:byte] l0800_2C3D
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C3F:
	branch Z_158 l0800_2C48
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C41:
	di_155 = 0x0001
	es_133 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2C48:
	Mem186[ds_107:0x45AC:word16] = es_133
	Mem187[ds_107:0x45AA:word16] = di_155
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2BEC:
	word16 bx_247 = Mem48[ds_107:0x2E51:word16] + (((int16) Mem48[Mem48[ds_107:0x45AE:segptr32]:byte] << 0x08) + DPB(dx_120, 0x00, 8))
	Mem249[ds_107:0x45B0:word16] = Mem48[ds_107:0x2E53:word16]
	Mem250[ds_107:0x45AE:word16] = bx_247
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> bp:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)



void fn0800_2C9A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: si sp
fn0800_2C9A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2C9A:
	word16 cx_15 = 0x0000
	word16 si_18 = 0x2A29
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2CA0:
	word16 dx_19 = cx_15
	word16 bx_20 = 0x0008
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBD:
	branch bx_20 != 0x0000 l0800_2CA7
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CA7:
	word16 ax_40
	branch (dx_19 & 0x0001) == 0x0000 l0800_2CB6
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CB6:
	ax_40 = dx_19 >>u 0x0001
// DataOut: ax bp bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CAD:
	ax_40 = dx_19 >>u 0x0001 ^ 0xA001
// DataOut: ax bp bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBA:
	dx_19 = ax_40
	bx_20 = bx_20 - 0x0001
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CC1:
	Mem29[ds:si_18:word16] = dx_19
	si_18 = si_18 + 0x0002
	cx_15 = cx_15 + 0x0001
	branch cx_15 <u 0x0100 l0800_2CA0
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CCD:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

fn0800_2C9A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> si:si dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si



word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_2CCF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2CCF:
	word16 si_10 = wArg06
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CFD:
	si_10 = si_10 - 0x0001
	branch si_10 != 0x0000 l0800_2CD8
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CD8:
	wArg08 = Mem0[ds:((DPB(si_10, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ wArg08 >>u 0x08
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2D04:
	return wArg08
// DataOut: al ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>

fn0800_2CCF_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>



void fn0800_2D0A(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
// Terminates process
fn0800_2D0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_2D0A:
	fn0800_4311(0x0000, 0xFFF0, ds, 0xFFF0, 0x0000)
	byte dl_34
	word16 si_35
	word16 ax_36 = fn0800_AD2F(ds, DPB(ptrLoc14, wArg02, 0), wArg04, out dl_34, out si_35)
	Mem38[ss:fp - 0x000C:word16] = 0xFFF0
	Mem40[ss:fp - 0x000E:word16] = ax_36
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_2D8F:
	branch (Mem40[ss:fp + 0x0006:word16] | Mem40[ss:fp + 0x0008:word16]) != 0x0000 l0800_2D3A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2D3A:
	word16 ax_113
	word16 dx_109
	branch Mem40[ss:fp + 0x0008:word16] <u 0x0000 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2D40:
	branch Mem40[ss:fp + 0x0008:word16] >u 0x0000 l0800_2D48
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2D42:
	branch Mem40[ss:fp + 0x0006:word16] <=u 0xFFF0 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2D4F:
	dx_109 = Mem40[ss:fp + 0x0008:word16]
	ax_113 = Mem40[ss:fp + 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2D48:
	dx_109 = 0x0000
	ax_113 = 0xFFF0
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2D55:
	Mem114[ss:fp - 0x0008:word16] = dx_109
	Mem115[ss:fp - 0x000A:word16] = ax_113
	Mem118[ss:fp - 0x0012:word16] = Mem115[ss:fp + 0x0004:word16]
	Mem121[ss:fp - 0x0014:word16] = Mem118[ss:fp + 0x0002:word16]
	Mem124[ss:fp - 0x0016:word16] = Mem121[ss:fp - 0x0008:word16]
	Mem126[ss:fp - 0x0018:word16] = ax_113
	Mem129[ss:fp - 0x001A:word16] = Mem126[ss:fp - 0x0004:word16]
	Mem132[ss:fp - 0x001C:word16] = Mem129[ss:fp - 0x0006:word16]
	word16 di_134
	Mem140[ss:fp - 0x0012:word16] = fn0800_4110(fp - 0x0002, ds, wArg00, wArg02, wArg04, wArg08, wArg0A, out di_134, out ds)
	Mem143[ss:fp - 0x0014:word16] = Mem140[ss:fp - 0x000A:word16]
	Mem146[ss:fp - 0x0016:word16] = Mem143[ss:fp - 0x0004:word16]
	Mem149[ss:fp - 0x0018:word16] = Mem146[ss:fp - 0x0006:word16]
	fn0800_2CCF(ds, ptrArg00, wArg04, wArg06)
	Mem159[ss:fp + 0x0006:word16] = Mem149[ss:fp + 0x0006:word16] - Mem149[ss:fp - 0x000A:word16]
	Mem163[ss:fp + 0x0008:word16] = v30
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2D97:
	Mem67[ss:fp - 0x0012:word16] = 0x0000
	Mem70[ss:fp - 0x0014:word16] = Mem67[ss:fp - 0x000C:word16]
	Mem73[ss:fp - 0x0016:word16] = Mem70[ss:fp - 0x000E:word16]
	Mem76[ss:fp - 0x0018:word16] = Mem73[ss:fp + 0x0004:word16]
	Mem79[ss:fp - 0x001A:word16] = Mem76[ss:fp + 0x0002:word16]
	word16 di_82
	selector ds_83
	fn0800_ACB3(fp - 0x0002, ds, wArg00, wArg02, wArg08, out di_82, out ds_83)
	Mem89[ss:fp - 0x0012:word16] = Mem79[ss:fp - 0x0004:word16]
	Mem92[ss:fp - 0x0014:word16] = Mem89[ss:fp - 0x0006:word16]
	selector ds_93
	fn0800_4346(ds_83, wArg00, wArg02, out ds_93)
	return
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp

fn0800_2D0A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> bp:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:0x40 -20(fp):0xFFF0 -18(fp):0x0000 -16(fp):si -2(fp):bp



void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: ah al ax eax rax
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DBF_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_2DBF:
	Mem6[ds:0x4656:word16] = 0xFFFF
	Mem8[ds:0x4654:word16] = 0x0000
	Mem10[ds:0x4652:word16] = Mem8[ds:0x2A27:word16]
	Mem13[ds:0x4650:word16] = wArg02
	Mem16[ds:0x464E:word16] = wArg04
	return
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_2DBF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> -2(fp):bp



word16 fn0800_2DE2(word16 si, selector ds, ptr16 & dlOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si ss
// LiveOut: ax bp di dl ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_2DE2_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2DE2:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2DE5_thunk_fn0800_2DE8:
	byte dl_10
	word16 bp_11
	word16 si_12
	word16 di_13
	selector ds_14
	return fn0800_2DE8(fp - 0x0002, si, ds, out dl_10, out bp_11, out si_12, out di_13, out ds_14)
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 -2(fp):bp

fn0800_2DE2_exit:
// DataOut: ax bp di dl ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_2DE8(word16 bp, word16 si, selector ds, ptr16 & dlOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax bp di dl ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_2DE8_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2DE8:
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_2DF1:
	branch Mem0[ds:0x4652:word16] != Mem0[ds:0x4656:word16] l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0002(16)

l0800_2DFA:
	branch Mem0[ds:0x464E:word16] == 0x0000 l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0002(16)

l0800_2E01:
	fn0800_3479()
	si = bp - 0x0010
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)
// Terminates process

l0800_2E11:
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E1B
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:ax -10(fp):bp - 0x0010 -8(fp):ss -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E1B:
	Mem773[ds:0x4617:word16] = 0x0000
	Mem776[ss:fp - 0x0006:word16] = Mem773[ds:0x461D:word16]
	Mem779[ss:fp - 0x0008:word16] = Mem776[ds:0x461B:word16]
	Mem782[ss:fp - 0x000A:word16] = 0x0065
	Mem784[ss:fp - 0x000C:word16] = ds
	Mem787[ss:fp - 0x000E:word16] = 0x45B2
	word16 dx_788
	selector ds_789
	word16 ax_790 = fn0800_A77D(bp, ds, wArg00, wArg02, wArg04, out dx_788, out ds_789)
	branch (ax_790 | dx_788) != 0x0000 l0800_2E3F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:ax -10(fp):bp - 0x0010 -8(fp):ss -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E3F:
	Mem837[ss:fp - 0x0006:word16] = ds_789
	selector es_1142 = Mem837[ss:fp - 0x0006:selector]
	word16 di_1154 = 0x45B2
	word16 cx_1156 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E49:
	branch cx_1156 == 0x0000 l0800_2E4B
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E49_1:
	di_1154 = di_1154 + 0x0001
	cx_1156 = cx_1156 - 0x0001
	branch 0x00 != Mem837[es_1142:di_1154:byte] l0800_2E49
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E4B:
	word16 cx_1151 = ~cx_1156
	word16 di_1138 = di_1154 - cx_1151
	byte Z_1146 = cond(di_1138)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E52:
	branch cx_1151 == 0x0000 l0800_2E54
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:0x0D ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E52_2:
	Z_1146 = cond(0x0D - Mem837[es_1142:di_1138:byte]) (alias)
	di_1138 = di_1138 + 0x0001
	cx_1151 = cx_1151 - 0x0001
	branch 0x0D != Mem837[es_1142:di_1138:byte] l0800_2E52
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:0x0D ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E54:
	branch Z_1146 l0800_2E5D
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:0x0D ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E56:
	di_1138 = 0x0001
	es_1142 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:0x0D ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E5D:
	branch (di_1138 - 0x0001 | es_1142) == 0x0000 l0800_2E8B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E64:
	Mem1069[ss:fp - 0x0006:word16] = ds_789
	selector es_1070 = Mem1069[ss:fp - 0x0006:selector]
	word16 di_1073 = 0x45B2
	word16 cx_1079 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E6E:
	branch cx_1079 == 0x0000 l0800_2E70
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E6E_1:
	di_1073 = di_1073 + 0x0001
	cx_1079 = cx_1079 - 0x0001
	branch 0x00 != Mem1069[es_1070:di_1073:byte] l0800_2E6E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E70:
	word16 cx_1087 = ~cx_1079
	word16 di_1089 = di_1073 - cx_1087
	byte Z_1092 = cond(di_1089)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E77:
	branch cx_1087 == 0x0000 l0800_2E79
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:0x0D ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E77_2:
	Z_1092 = cond(0x0D - Mem1069[es_1070:di_1089:byte]) (alias)
	di_1089 = di_1089 + 0x0001
	cx_1087 = cx_1087 - 0x0001
	branch 0x0D != Mem1069[es_1070:di_1089:byte] l0800_2E77
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:0x0D ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E79:
	branch Z_1092 l0800_2E82
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:0x0D ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E7B:
	di_1089 = 0x0001
	es_1070 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:0x0D ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E82:
	Mem1118[es_1070:di_1089 - 0x0001:byte] = 0x00
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:0x00 ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2E8B:
	branch (int16) Mem837[ds_789:0x45B2:byte] != 0x0000 l0800_2EA5
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2EA5:
	Mem923[ss:fp - 0x0006:word16] = ds_789
	selector es_924 = Mem923[ss:fp - 0x0006:selector]
	word16 di_1065 = 0x45B2
	word16 cx_1067 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2EAF:
	branch cx_1067 == 0x0000 l0800_2EB1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2EAF_1:
	di_1065 = di_1187 + 0x0001
	cx_1067 = cx_1067 - 0x0001
	word16 di_1187 = di_1065
	branch 0x00 != Mem923[es_924:di_1187:byte] l0800_2EAF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2EB1:
	Mem945[ds_789:0x4619:word16] = ~cx_1067 - 0x0001
	Mem947[ss:fp - 0x0006:word16] = ds_789
	Mem950[ss:fp - 0x0008:word16] = 0x45B2
	byte dl_951 = fn0800_0C6C(ds_789, ptrArg00)
	*dlOut = dl_951
	dx = DPB(dx_788, dl_951, 0) (alias)
	branch Mem950[ds_789:0x464E:word16] != 0x0000 l0800_2EFE
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2EFE:
	Mem1042[ss:fp - 0x0006:word16] = ds_789
	Mem1045[ss:fp - 0x0008:word16] = 0x45B2
	Mem1050[ss:fp - 0x000A:word16] = 0x0000
	Mem1052[ss:fp - 0x000C:word16] = ss
	Mem1055[ss:fp - 0x000E:word16] = bp - 0x0010
	byte dl_1056
	si = fn0800_33CD(ds_789, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_1056, out ds)
	Mem1062[ds:0x4654:word16] = 0x0000
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2ECA:
	ptr32 es_di_956 = Mem950[ss:bp + 0x0004:segptr32]
	Mem960[ss:fp - 0x0006:word16] = SLICE(es_di_956, selector, 16)
	Mem962[ss:fp - 0x0008:word16] = ds_789
	selector es_963 = Mem962[ss:fp - 0x0008:selector]
	Mem967[ss:fp - 0x0008:word16] = (word16) es_di_956
	word16 di_1038 = 0x45B2
	word16 cx_1040 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2ED9:
	branch cx_1040 == 0x0000 l0800_2EDB
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2ED9_2:
	di_1038 = di_1038 + 0x0001
	cx_1040 = cx_1040 - 0x0001
	branch 0x00 != Mem967[es_963:di_1038:byte] l0800_2ED9
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2EDB:
	word16 di_1001 = Mem967[ss:fp - 0x0008:word16]
	selector es_993 = Mem967[ss:fp - 0x0006:selector]
	Mem998[ss:fp - 0x0006:word16] = ds_789
	word16 cx_982 = ~cx_1040
	word16 cx_1003 = cx_982 >>u 0x0001
	word16 si_1000 = di_1038 - cx_982
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2EEA:
	branch cx_1003 == 0x0000 l0800_2EEC
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2EEC:
	word16 cx_1010 = cx_1003 * 0x0002 + (cx_982 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2EEE:
	branch cx_1010 == 0x0000 l0800_2EF0
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2EF0:
	selector ds_1022 = Mem998[ss:fp - 0x0006:selector]
	*dsOut = ds_1022
	Mem1025[ds_1022:0x4617:word16] = Mem998[ds_1022:0x4617:word16] + 0x0001
	word16 di_1029
	*diOut = Mem1025[ss:fp - 0x0004:word16]
	word16 si_1032
	*siOut = Mem1025[ss:fp - 0x0002:word16]
	word16 bp_1034
	*bpOut = Mem1025[ss:bp:word16]
	return 0x0001
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2EEE_1:
	Mem1017[es_993:di_1001:byte] = Mem998[es_963:si_1000:byte]
	si_1000 = si_1000 + 0x0001
	di_1001 = di_1001 + 0x0001
	cx_1010 = cx_1010 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2EEA_3:
	Mem1005[es_993:di_1001:word16] = Mem998[es_963:si_1000:word16]
	si_1000 = si_1000 + 0x0002
	di_1001 = di_1001 + 0x0002
	cx_1003 = cx_1003 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2E93:
	Mem902[ss:fp - 0x0006:word16] = Mem837[ss:bp + 0x0006:word16]
	Mem905[ss:fp - 0x0008:word16] = Mem902[ss:bp + 0x0004:word16]
	byte dl_906
	word16 bp_907
	word16 si_908
	word16 di_909
	selector ds_910
	word16 ax_911 = fn0800_2DE2(si, ds_789, out dl_906, out bp_907, out si_908, out di_909, out ds_910)
	word16 di_915
	*diOut = Mem905[ss:fp - 0x0004:word16]
	word16 si_918
	*siOut = Mem905[ss:fp - 0x0002:word16]
	word16 bp_920
	*bpOut = Mem905[ss:bp_907:word16]
	return ax_911
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2E3C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2F1B:
	Mem798[ss:fp - 0x0006:word16] = Mem787[ds_789:0x461D:word16]
	Mem801[ss:fp - 0x0008:word16] = Mem798[ds_789:0x461B:word16]
	byte dl_802
	word16 di_803
	selector ds_804
	fn0800_A614(bp, ds_789, ptrArg00, wArg02, out dl_802, out di_803, out ds_804)
	Mem808[ds_804:0x4654:word16] = 0x0000
	Mem809[ds_804:0x461D:word16] = 0x0000
	Mem810[ds_804:0x461B:word16] = 0x0000
	Mem812[ds_804:0x4652:word16] = Mem810[ds_804:0x4652:word16] + 0x0001
	Mem816[ss:fp - 0x0006:word16] = Mem812[ss:bp + 0x0006:word16]
	Mem819[ss:fp - 0x0008:word16] = Mem816[ss:bp + 0x0004:word16]
	byte dl_820
	word16 bp_821
	word16 si_822
	word16 di_823
	selector ds_824
	word16 ax_825 = fn0800_2DE2(si, ds_804, out dl_820, out bp_821, out si_822, out di_823, out ds_824)
	word16 di_829
	*diOut = Mem819[ss:fp - 0x0004:word16]
	word16 si_832
	*siOut = Mem819[ss:fp - 0x0002:word16]
	word16 bp_834
	*bpOut = Mem819[ss:bp_821:word16]
	return ax_825
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> -14(fp):0x45B2 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2E18:
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:ax -10(fp):bp - 0x0010 -8(fp):ss -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2F51:
	word16 ax_63 = Mem0[ds:0x4652:word16]
	branch ax_63 != Mem0[ds:0x4656:word16] l0800_2F5D
// DataOut: ax bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2F5D:
	branch ax_63 != Mem0[ds:0x269A:word16] l0800_2F6B
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2F6B:
	ptr32 es_bx_531 = Mem0[ds:0x269C:segptr32]
	selector es_532 = SLICE(es_bx_531, selector, 16)
	word16 bx_534 = (word16) es_bx_531 + (Mem0[ds:0x4652:word16] << 0x0002)
	Mem538[ss:fp - 0x0006:word16] = Mem0[es_532:bx_534 + 0x0002:word16]
	Mem541[ss:fp - 0x0008:word16] = Mem538[es_532:bx_534:word16]
	Mem543[ss:fp - 0x000A:word16] = ds
	Mem546[ss:fp - 0x000C:word16] = 0x45B2
	fn0800_BF9E(ptrArg00, wArg02, ptrArg04)
	Mem550[ss:fp - 0x0006:word16] = ds
	selector es_551 = Mem550[ss:fp - 0x0006:selector]
	word16 di_1183 = 0x45B2
	word16 cx_560 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2F94:
	branch cx_560 == 0x0000 l0800_2F96
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2F94_1:
	di_1183 = di_1183 + 0x0001
	cx_560 = cx_560 - 0x0001
	branch 0x00 != Mem550[es_551:di_1183:byte] l0800_2F94
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_2F96:
	Mem572[ds:0x4619:word16] = ~cx_560 - 0x0001
	Mem574[ss:fp - 0x0006:word16] = ds
	Mem577[ss:fp - 0x0008:word16] = 0x45B2
	fn0800_0C6C(ds, ptrArg00)
	word16 ax_580 = Mem577[ds:0x4652:word16]
	Mem581[ds:0x4656:word16] = ax_580
	Mem582[ds:0x4617:word16] = 0x0000
	branch Mem582[Mem582[ds:(word16) Mem582[ds:0x269C:segptr32] + (ax_580 << 0x0002):segptr32]:byte] != 0x40 l0800_3007
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3007:
	Mem645[ss:fp - 0x0006:word16] = ds
	Mem648[ss:fp - 0x0008:word16] = 0x45B2
	byte dl_649
	*dlOut = fn0800_335C(bp, ds, wArg00, wArg02)
	branch Mem648[ds:0x464E:word16] != 0x0000 l0800_3051
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3051:
	Mem742[ss:fp - 0x0006:word16] = ds
	Mem745[ss:fp - 0x0008:word16] = 0x45B2
	Mem750[ss:fp - 0x000A:word16] = 0x0000
	Mem752[ss:fp - 0x000C:word16] = ss
	Mem755[ss:fp - 0x000E:word16] = bp - 0x0010
	byte dl_756
	si = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_756, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3019:
	ptr32 es_di_654 = Mem648[ss:bp + 0x0004:segptr32]
	Mem658[ss:fp - 0x0006:word16] = SLICE(es_di_654, selector, 16)
	Mem660[ss:fp - 0x0008:word16] = ds
	selector es_661 = Mem660[ss:fp - 0x0008:selector]
	Mem665[ss:fp - 0x0008:word16] = (word16) es_di_654
	word16 di_1184 = 0x45B2
	word16 cx_672 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3028:
	branch cx_672 == 0x0000 l0800_302A
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3028_1:
	di_1184 = di_1184 + 0x0001
	cx_672 = cx_672 - 0x0001
	branch 0x00 != Mem665[es_661:di_1184:byte] l0800_3028
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_302A:
	word16 di_688 = Mem665[ss:fp - 0x0008:word16]
	selector es_691 = Mem665[ss:fp - 0x0006:selector]
	Mem696[ss:fp - 0x0006:word16] = ds
	word16 cx_680 = ~cx_672
	word16 cx_682 = cx_680 >>u 0x0001
	word16 si_687 = di_1184 - cx_680
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3039:
	branch cx_682 == 0x0000 l0800_303B
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_303B:
	word16 cx_708 = cx_682 * 0x0002 + (cx_680 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_303D:
	branch cx_708 == 0x0000 l0800_303F
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_303F:
	selector ds_720 = Mem696[ss:fp - 0x0006:selector]
	*dsOut = ds_720
	Mem723[ds_720:0x4617:word16] = Mem696[ds_720:0x4617:word16] + 0x0001
	Mem725[ds_720:0x4652:word16] = Mem723[ds_720:0x4652:word16] + 0x0001
	word16 di_729
	*diOut = Mem725[ss:fp - 0x0004:word16]
	word16 si_732
	*siOut = Mem725[ss:fp - 0x0002:word16]
	word16 bp_734
	*bpOut = Mem725[ss:bp:word16]
	return 0x0001
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_303D_1:
	Mem715[es_691:di_688:byte] = Mem696[es_661:si_687:byte]
	si_687 = si_687 + 0x0001
	di_688 = di_688 + 0x0001
	cx_708 = cx_708 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3039_2:
	Mem703[es_691:di_688:word16] = Mem696[es_661:si_687:word16]
	si_687 = si_687 + 0x0002
	di_688 = di_688 + 0x0002
	cx_682 = cx_682 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2FC7:
	Mem594[ss:fp - 0x0006:word16] = ds
	Mem597[ss:fp - 0x0008:word16] = 0x0A13
	ptr32 es_bx_601 = Mem597[ds:0x269C:segptr32]
	selector es_602 = SLICE(es_bx_601, selector, 16)
	word16 bx_604 = (word16) es_bx_601 + (Mem597[ds:0x4652:word16] << 0x0002)
	word16 ax_606 = Mem597[es_602:bx_604:word16]
	Mem611[ss:fp - 0x000A:word16] = Mem597[es_602:bx_604 + 0x0002:word16]
	Mem613[ss:fp - 0x000C:word16] = ax_606 + 0x0001
	word16 di_614
	selector ds_615
	word16 si_616 = fn0800_4234(si, di_1183, ds, wArg00, wArg02, wArg04, wArg06, out di_614, out ds_615)
	Mem619[ds_615:0x461D:word16] = dx
	Mem620[ds_615:0x461B:word16] = ax_606 + 0x0001
	Mem621[ds_615:0x4654:word16] = 0x0001
	Mem624[ss:fp - 0x0006:word16] = Mem621[ss:bp + 0x0006:word16]
	Mem627[ss:fp - 0x0008:word16] = Mem624[ss:bp + 0x0004:word16]
	byte dl_628
	word16 bp_629
	word16 si_630
	word16 di_631
	selector ds_632
	word16 ax_633 = fn0800_2DE2(si_616, ds_615, out dl_628, out bp_629, out si_630, out di_631, out ds_632)
	word16 di_637
	*diOut = Mem627[ss:fp - 0x0004:word16]
	word16 si_640
	*siOut = Mem627[ss:fp - 0x0002:word16]
	word16 bp_642
	*bpOut = Mem627[ss:bp_629:word16]
	return ax_633
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2F63:
	word16 di_521
	*diOut = Mem0[ss:fp - 0x0004:word16]
	word16 si_524
	*siOut = Mem0[ss:fp - 0x0002:word16]
	word16 bp_526
	*bpOut = Mem0[ss:bp:word16]
	return 0x0000
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_2F5A:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3066:
	word16 si_407 = si
	branch si != 0x0000 l0800_306D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_306D:
	branch Mem0[ds:0x2A1B:word16] == 0x0000 l0800_309E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3074:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_309A:
	branch si_407 != 0x0000 l0800_3076
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> Sequence es:bx:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3076:
	Mem481[ss:fp - 0x0006:word16] = ds
	Mem484[ss:fp - 0x0008:word16] = 0x45B2
	branch fn0800_31B4(bp, ds, out ds) == 0x0000 l0800_309E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> Sequence es:bx:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3085:
	Mem493[ss:fp - 0x0006:word16] = ds
	Mem496[ss:fp - 0x0008:word16] = 0x45B2
	Mem501[ss:fp - 0x000A:word16] = 0x0000
	Mem503[ss:fp - 0x000C:word16] = ss
	Mem506[ss:fp - 0x000E:word16] = bp - 0x0010
	byte dl_508
	si_407 = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_508, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> Sequence es:bx:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_309E:
	word16 si_408 = si_407
	branch si_407 == 0x0000 l0800_30F0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_30A2:
	Mem413[ds:Mem0[ds:0x4619:word16] + 0x45B2:byte] = 0x00
	branch Mem413[ds:0x4617:word16] != 0x0000 l0800_30C9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_30B2:
	branch Mem413[ds:0x4650:word16] == 0x0000 l0800_30C9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_30B9:
	Mem455[ss:fp - 0x0006:word16] = ds
	Mem458[ss:fp - 0x0008:word16] = 0x45B2
	Mem460[ss:fp - 0x000A:word16] = ds
	Mem463[ss:fp - 0x000C:word16] = 0x0A17
	word16 di_466
	si_408 = fn0800_B2EF(ds, wArg00, wArg02, out di_466)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_30C9:
	branch (Mem413[ds:0x461B:word16] | Mem413[ds:0x461D:word16]) == 0x0000 l0800_30DA
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_30DA:
	Mem450[ds:0x4652:word16] = Mem413[ds:0x4652:word16] + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_30D2:
	Mem448[ds:0x4654:word16] = 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_30DE:
	Mem428[ss:fp - 0x0006:word16] = Mem413[ss:bp + 0x0006:word16]
	Mem431[ss:fp - 0x0008:word16] = Mem428[ss:bp + 0x0004:word16]
	byte dl_432
	word16 bp_433
	word16 si_434
	word16 di_435
	selector ds_436
	word16 ax_437 = fn0800_2DE2(si_408, ds, out dl_432, out bp_433, out si_434, out di_435, out ds_436)
	word16 di_441
	*diOut = Mem431[ss:fp - 0x0004:word16]
	word16 si_444
	*siOut = Mem431[ss:fp - 0x0002:word16]
	word16 bp_446
	*bpOut = Mem431[ss:bp_433:word16]
	return ax_437
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_306A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_30F0:
	Mem92[ss:fp - 0x0006:word16] = ds
	Mem96[ss:fp - 0x0008:word16] = 0x45B2
	Mem100[ss:fp - 0x000A:word16] = Mem96[ss:bp + 0x0006:word16]
	Mem103[ss:fp - 0x000C:word16] = Mem100[ss:bp + 0x0004:word16]
	fn0800_3509(ds, wArg04, wArg06)
	Mem108[ss:fp - 0x0006:word16] = ss
	Mem113[ss:fp - 0x0006:word16] = Mem108[ss:fp - 0x0006:selector]
	selector es_114 = Mem113[ss:bp + 0x0006:selector]
	Mem116[ss:fp - 0x0008:word16] = bp - 0x0010
	word16 di_117 = Mem116[ss:bp + 0x0004:word16]
	word16 di_1175 = Mem116[ss:fp - 0x0008:word16]
	selector es_122 = Mem116[ss:fp - 0x0006:selector]
	Mem127[ss:fp - 0x0006:word16] = es_114
	Mem129[ss:fp - 0x0008:word16] = di_117
	word16 cx_134 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_311B:
	branch cx_134 == 0x0000 l0800_311D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_311B_1:
	di_1175 = di_1175 + 0x0001
	cx_134 = cx_134 - 0x0001
	branch 0x00 != Mem129[es_122:di_1175:byte] l0800_311B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_311D:
	word16 di_1176 = Mem129[ss:fp - 0x0008:word16]
	selector es_150 = Mem129[ss:fp - 0x0006:selector]
	Mem154[ss:bp - 0x0002:word16] = ds
	word16 cx_144 = ~cx_134
	Mem157[ss:fp - 0x0006:word16] = cx_144
	word16 si_146 = di_1175 - cx_144
	word16 cx_158 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3132:
	branch cx_158 == 0x0000 l0800_3134
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3132_2:
	di_1176 = di_1176 + 0x0001
	cx_158 = cx_158 - 0x0001
	branch 0x00 != Mem157[es_150:di_1176:byte] l0800_3132
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3134:
	word16 di_171 = di_1176 - 0x0001
	word16 cx_174 = Mem157[ss:fp - 0x0006:word16]
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3136:
	branch cx_174 == 0x0000 l0800_3138
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_3138:
	selector ds_186 = Mem157[ss:bp - 0x0002:selector]
	Mem189[ss:fp - 0x0006:word16] = Mem157[ss:bp + 0x0006:word16]
	Mem192[ss:fp - 0x0008:word16] = Mem189[ss:bp + 0x0004:word16]
	byte dl_194
	*dlOut = fn0800_0C6C(ds_186, ptrArg00)
	word16 si_1178 = Mem192[ss:bp + 0x0004:word16]
	word16 cx_198 = Mem192[ss:bp + 0x0006:word16]
	Mem200[ss:fp - 0x0006:word16] = ds_186
	selector es_201 = Mem200[ss:fp - 0x0006:selector]
	Mem207[ss:fp - 0x0006:word16] = ds_186
	word16 di_1177 = 0x4348
	word16 ax_209 = 0x0000
	word16 cx_213 = 0xFFFF
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_315A:
	branch cx_213 == 0x0000 l0800_315C
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_315A_1:
	di_1177 = di_1177 + 0x0001
	cx_213 = cx_213 - 0x0001
	branch 0x00 != Mem207[es_201:di_1177:byte] l0800_315A
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_315C:
	word16 cx_221 = ~cx_213
	word16 di_222 = di_1177 - cx_221
	byte SCZO_224 = cond(di_222)
	byte Z_225 = SCZO_224
	byte C_227 = SCZO_224
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3160:
	branch cx_221 == 0x0000 l0800_3162
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3160_2:
	byte SCZO_377 = cond(Mem207[cx_198:si_1178:byte] - Mem207[es_201:di_1179:byte])
	Z_225 = SCZO_377 (alias)
	C_227 = SCZO_377 (alias)
	si_1178 = si_1178 + 0x0001
	di_222 = di_1179 + 0x0001
	cx_221 = cx_221 - 0x0001
	word16 di_1179 = di_222
	branch Mem207[cx_198:si_1178:byte] != Mem207[es_201:di_1179:byte] l0800_3160
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3162:
	branch Z_225 l0800_3169
// DataOut: ax bp dl si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3164:
	word16 ax_371 = 0x0000 - C_227
	ax_209 = ax_371 - 0xFFFF - (ax_371 <u 0x0000)
// DataOut: ax bp dl si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3169:
	selector ds_247 = Mem207[ss:fp - 0x0006:selector]
	branch ax_209 == 0x0000 l0800_3195
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_316E:
	si_1178 = Mem207[ss:bp + 0x0004:word16]
	word16 cx_285 = Mem207[ss:bp + 0x0006:word16]
	Mem287[ss:fp - 0x0006:word16] = ds_247
	selector es_288 = Mem287[ss:fp - 0x0006:selector]
	Mem294[ss:fp - 0x0006:word16] = ds_247
	word16 di_1180 = 0x4477
	word16 ax_296 = 0x0000
	word16 cx_300 = 0xFFFF
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3181:
	branch cx_300 == 0x0000 l0800_3183
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3181_1:
	di_1180 = di_1180 + 0x0001
	cx_300 = cx_300 - 0x0001
	branch 0x00 != Mem294[es_288:di_1180:byte] l0800_3181
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3183:
	word16 cx_308 = ~cx_300
	word16 di_309 = di_1180 - cx_308
	byte SCZO_311 = cond(di_309)
	byte Z_312 = SCZO_311
	byte C_314 = SCZO_311
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3187:
	branch cx_308 == 0x0000 l0800_3189
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3187_2:
	byte SCZO_358 = cond(Mem294[cx_285:si_1178:byte] - Mem294[es_288:di_1182:byte])
	Z_312 = SCZO_358 (alias)
	C_314 = SCZO_358 (alias)
	si_1178 = si_1178 + 0x0001
	di_309 = di_1182 + 0x0001
	cx_308 = cx_308 - 0x0001
	word16 di_1182 = di_309
	branch Mem294[cx_285:si_1178:byte] != Mem294[es_288:di_1182:byte] l0800_3187
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3189:
	branch Z_312 l0800_3190
// DataOut: ax bp dl si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_318B:
	word16 ax_352 = 0x0000 - C_314
	ax_296 = ax_352 - 0xFFFF - (ax_352 <u 0x0000)
// DataOut: ax bp dl si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3190:
	ds_247 = Mem294[ss:fp - 0x0006:selector]
	*dsOut = ds_247
	branch ax_296 != 0x0000 l0800_31A7
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_31A7:
	Mem341[ds_247:0x4617:word16] = Mem294[ds_247:0x4617:word16] + 0x0001
	word16 di_345
	*diOut = Mem341[ss:fp - 0x0004:word16]
	word16 si_348
	*siOut = Mem341[ss:fp - 0x0002:word16]
	word16 bp_350
	*bpOut = Mem341[ss:bp:word16]
	return 0x0001
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3195:
	Mem264[ss:fp - 0x0006:word16] = Mem207[ss:bp + 0x0006:word16]
	Mem267[ss:fp - 0x0008:word16] = Mem264[ss:bp + 0x0004:word16]
	byte dl_268
	word16 bp_269
	word16 si_270
	word16 di_271
	selector ds_272
	word16 ax_273 = fn0800_2DE2(si_1178, ds_247, out dl_268, out bp_269, out si_270, out di_271, out ds_272)
	word16 di_277
	*diOut = Mem267[ss:fp - 0x0004:word16]
	word16 si_280
	*siOut = Mem267[ss:fp - 0x0002:word16]
	word16 bp_282
	*bpOut = Mem267[ss:bp_269:word16]
	return ax_273
// DataOut: ax bp di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bp:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_2DE8_exit:
// DataOut: ax bp di dl ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> bp:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_3136_3:
	Mem181[es_150:di_171:byte] = Mem157[es_122:si_146:byte]
	si_146 = si_146 + 0x0001
	di_171 = di_171 + 0x0001
	cx_174 = cx_174 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> bp:<invalid> ah:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)



word16 fn0800_31B4(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_31B4_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_31B4:
	word16 bp_26 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_31BD:
	Mem32[ss:fp - 0x008A:word16] = Mem0[ss:bp_26 + 0x0006:word16]
	Mem35[ss:fp - 0x008C:word16] = Mem32[ss:bp_26 + 0x0004:word16]
	Mem37[ss:fp - 0x008E:word16] = ss
	Mem40[ss:fp - 0x0090:word16] = bp_26 - 0x0082
	fn0800_3509(ds, wArg04, wArg06)
	Mem47[ss:fp - 0x008A:word16] = Mem40[ss:bp_26 + 0x0006:word16]
	Mem50[ss:fp - 0x008C:word16] = Mem47[ss:bp_26 + 0x0004:word16]
	Mem52[ss:fp - 0x008E:word16] = ss
	Mem55[ss:fp - 0x0090:word16] = bp_26 - 0x000E
	fn0800_35A3(ds, wArg04, wArg06)
	Mem63[ss:fp - 0x008A:word16] = Mem55[ds:(Mem55[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16]
	Mem65[ss:fp - 0x008C:word16] = ss
	Mem68[ss:fp - 0x008E:word16] = bp_26 - 0x0082
	Mem70[ss:fp - 0x0090:word16] = ss
	Mem73[ss:fp - 0x0092:word16] = bp_26 - 0x001C
	selector ds_77
	branch fn0800_32CD(ds, wArg00, wArg02, wArg04, wArg06, out bp_26, out ds_77) != 0x0000 l0800_323E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_323E:
	branch Mem73[ds_77:0x09AC:word16] != 0x0000 l0800_3253
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3253:
	Mem159[ss:fp - 0x008A:word16] = ss
	selector es_160 = Mem159[ss:fp - 0x008A:selector]
	word16 di_162 = bp_26 - 0x0082
	word16 cx_167 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_325E:
	branch cx_167 == 0x0000 l0800_3260
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_325E_1:
	di_162 = di_285 + 0x0001
	cx_167 = cx_167 - 0x0001
	word16 di_285 = di_162
	branch 0x00 != Mem159[es_160:di_285:byte] l0800_325E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3260:
	Mem181[ss:~cx_167 - 0x0002 + (bp_26 - 0x0082):byte] = 0x00
	Mem183[ss:fp - 0x008A:word16] = ss
	Mem185[ss:fp - 0x008C:word16] = bp_26 - 0x0082
	Mem188[ss:fp - 0x008E:word16] = Mem185[ss:bp_26 + 0x0006:word16]
	Mem191[ss:fp - 0x0090:word16] = Mem188[ss:bp_26 + 0x0004:word16]
	fn0800_3509(ds_77, wArg04, wArg06)
	Mem194[ss:fp - 0x008A:word16] = ss
	Mem199[ss:fp - 0x008A:word16] = Mem194[ss:fp - 0x008A:selector]
	selector es_200 = Mem199[ss:bp_26 + 0x0006:selector]
	Mem202[ss:fp - 0x008C:word16] = bp_26 - 0x000E
	word16 di_203 = Mem202[ss:bp_26 + 0x0004:word16]
	word16 di_205 = Mem202[ss:fp - 0x008C:word16]
	selector es_208 = Mem202[ss:fp - 0x008A:selector]
	Mem211[ss:fp - 0x008A:word16] = es_200
	Mem213[ss:fp - 0x008C:word16] = di_203
	word16 cx_218 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3298:
	branch cx_218 == 0x0000 l0800_329A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3298_2:
	di_205 = di_205 + 0x0001
	cx_218 = cx_218 - 0x0001
	branch 0x00 != Mem213[es_208:di_205:byte] l0800_3298
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_329A:
	word16 cx_227 = ~cx_218
	word16 di_230 = Mem213[ss:fp - 0x008C:word16]
	selector es_233 = Mem213[ss:fp - 0x008A:selector]
	Mem239[ss:fp - 0x008A:word16] = cx_227
	word16 si_229 = di_205 - cx_227
	word16 cx_240 = 0xFFFF
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32AE:
	branch cx_240 == 0x0000 l0800_32B0
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32AE_3:
	di_230 = di_230 + 0x0001
	cx_240 = cx_240 - 0x0001
	branch 0x00 != Mem239[es_233:di_230:byte] l0800_32AE
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B0:
	word16 di_252 = di_230 - 0x0001
	word16 cx_254 = Mem239[ss:fp - 0x008A:word16]
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B2:
	branch cx_254 == 0x0000 l0800_32B4
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B4:
	Mem266[ds_77:0x09AC:word16] = Mem239[ds_77:0x09AC:word16] - 0x0001
	word16 bx_267 = Mem266[ds_77:0x09AC:word16]
	Mem271[ds_77:(bx_267 << 0x0001) + 0x09AE:word16] = Mem266[ds_77:(bx_267 << 0x0001) + 0x09AE:word16] + 0x0001
	ds = ds_77
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B2_4:
	Mem260[es_233:di_252:byte] = Mem239[es_208:si_229:byte]
	si_229 = si_229 + 0x0001
	di_252 = di_252 + 0x0001
	cx_254 = cx_254 - 0x0001
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3245:
	Mem147[ds_77:0x09AE:word16] = 0x0000
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

l0800_31FF:
	Mem97[ss:fp - 0x008A:word16] = ss
	Mem100[ss:fp - 0x008C:word16] = bp_26 - 0x000E
	Mem102[ss:fp - 0x008E:word16] = ds_77
	Mem105[ss:fp - 0x0090:word16] = 0x0A30
	Mem107[ss:fp - 0x0092:word16] = ss
	Mem110[ss:fp - 0x0094:word16] = bp_26 - 0x001C
	Mem112[ss:fp - 0x0096:word16] = ss
	Mem115[ss:fp - 0x0098:word16] = bp_26 - 0x0082
	Mem117[ss:fp - 0x009A:word16] = ds_77
	Mem120[ss:fp - 0x009C:word16] = 0x0A27
	Mem123[ss:fp - 0x009E:word16] = Mem120[ss:bp_26 + 0x0006:word16]
	Mem126[ss:fp - 0x00A0:word16] = Mem123[ss:bp_26 + 0x0004:word16]
	word16 di_128
	fn0800_BEA2(ds_77, ptrArg00, wArg04, wArg06, out di_128)
	Mem132[ds_77:0x09AC:word16] = Mem126[ds_77:0x09AC:word16] + 0x0001
	Mem136[ds_77:(Mem132[ds_77:0x09AC:word16] << 0x0001) + 0x09AE:word16] = 0x0000
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

fn0800_31B4_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -160(fp):<invalid> -158(fp):<invalid> -156(fp):0x0A27 -154(fp):<invalid> -152(fp):fp - 0x0084 -150(fp):ss -148(fp):fp - 0x001E -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp



word16 fn0800_32CD(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, selector psegArg08, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_32CD_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_32CD:
	word16 di_194 = wArg06
	word16 cx_195 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16)

l0800_32E7:
	branch cx_195 == 0x0000 l0800_32E9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16)

l0800_32E7_1:
	di_194 = di_194 + 0x0001
	cx_195 = cx_195 - 0x0001
	branch 0x00 != Mem0[psegArg08:di_194:byte] l0800_32E7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16)

l0800_32E9:
	word16 cx_40 = ~cx_195
	word16 cx_42 = cx_40 >>u 0x0001
	word16 si_47 = di_194 - cx_40
	word16 di_48 = fp - 0x0068
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16)

l0800_32F8:
	branch cx_42 == 0x0000 l0800_32FA
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16)

l0800_32FA:
	word16 cx_66 = cx_42 * 0x0002 + (cx_40 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16)

l0800_32FC:
	branch cx_66 == 0x0000 l0800_32FE
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16)

l0800_32FE:
	word16 di_190 = fp - 0x0068
	word16 si_104 = 0x0A32
	word16 cx_191 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_330C:
	branch cx_191 == 0x0000 l0800_330E
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_330C_1:
	di_190 = di_190 + 0x0001
	cx_191 = cx_191 - 0x0001
	branch 0x00 != Mem0[ss:di_190:byte] l0800_330C
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_330E:
	word16 di_100 = di_190 - 0x0001
	word16 cx_101 = 0x0004
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3312:
	branch cx_101 == 0x0000 l0800_3314
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3314:
	byte dl_125
	selector ds_126
	branch fn0800_33CD(ds, DPB(ptrLoc76, wArg02, 0), wArg04, 0x0010, fp - 0x0068, ss, out dl_125, out ds_126) == 0x0000 l0800_334D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

l0800_334D:
	branch Mem0[ss:fp + 0x000A:word16] != 0x0000 l0800_3336
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

l0800_3336:
	Mem173[ss:fp - 0x006E:word16] = 0x0010
	Mem176[ss:fp - 0x0070:word16] = Mem173[ss:fp + 0x0004:word16]
	Mem179[ss:fp - 0x0072:word16] = Mem176[ss:fp + 0x0002:word16]
	fn0800_3479()
	branch true l0800_3353
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// Terminates process

l0800_334A:
	Mem186[ss:fp + 0x000A:word16] = Mem179[ss:fp + 0x000A:word16] - 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0006 ax:ax -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

l0800_3353:
	word16 bp_169
	*bpOut = Mem0[ss:fp - 0x0002:word16]
	return Mem0[ss:fp + 0x000A:word16]
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

l0800_332D:
	word16 bp_151
	*bpOut = Mem0[ss:fp - 0x0002:word16]
	return 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

fn0800_32CD_exit:
// DataOut: ax bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

l0800_3312_2:
	Mem103[ss:di_100:byte] = Mem0[ds:si_104:byte]
	si_104 = si_104 + 0x0001
	di_100 = di_100 + 0x0001
	cx_101 = cx_101 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_32FC_1:
	Mem72[ss:di_48:byte] = Mem0[psegArg08:si_47:byte]
	si_47 = si_47 + 0x0001
	di_48 = di_48 + 0x0001
	cx_66 = cx_66 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16)

l0800_32F8_2:
	Mem62[ss:di_48:word16] = Mem0[psegArg08:si_47:word16]
	si_47 = si_47 + 0x0002
	di_48 = di_48 + 0x0002
	cx_42 = cx_42 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16)



byte fn0800_335C(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_335C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_335C:
	selector ds_35
	byte dl_34
	branch fn0800_33CD(ds, DPB(ptrLoc2C, fp - 0x0010, 0), ss, 0x0010, wArg02, wArg04, out dl_34, out ds_35) != 0x0000 l0800_33C7
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_337D:
	Mem67[ss:fp - 0x0024:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem70[ss:fp - 0x0026:word16] = Mem67[ss:fp + 0x0002:word16]
	Mem72[ss:fp - 0x0028:word16] = ss
	Mem75[ss:fp - 0x002A:word16] = fp - 0x001E
	dl_34 = fn0800_35A3(ds_35, wArg04, wArg06)
	Mem82[ss:fp - 0x0024:word16] = ds_35
	Mem85[ss:fp - 0x0026:word16] = ss
	word16 si_113 = fp - 0x0010
	selector es_86 = Mem85[ss:fp - 0x0026:selector]
	word16 di_100 = fp - 0x001E
	word16 ax_125 = 0x0000
	word16 cx_101 = 0xFFFF
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):ss -40(fp):0x0010 -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A0:
	branch cx_101 == 0x0000 l0800_33A2
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A0_1:
	di_100 = di_100 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch 0x00 != Mem85[es_86:di_100:byte] l0800_33A0
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A2:
	word16 cx_102 = ~cx_101
	word16 di_103 = di_100 - cx_102
	byte SCZO_105 = cond(di_103)
	byte Z_107 = SCZO_105
	byte C_108 = SCZO_105
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A6:
	branch cx_102 == 0x0000 l0800_33A8
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A6_2:
	byte SCZO_176 = cond(Mem85[ss:si_190:byte] - Mem85[es_86:di_191:byte])
	Z_107 = SCZO_176 (alias)
	C_108 = SCZO_176 (alias)
	si_113 = si_190 + 0x0001
	di_103 = di_191 + 0x0001
	cx_102 = cx_102 - 0x0001
	word16 si_190 = si_113
	word16 di_191 = di_103
	branch Mem85[ss:si_190:byte] != Mem85[es_86:di_191:byte] l0800_33A6
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A8:
	branch Z_107 l0800_33AF
// DataOut: ax bp dl sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33AA:
	word16 ax_170 = 0x0000 - C_108
	ax_125 = ax_170 - 0xFFFF - (ax_170 <u 0x0000)
// DataOut: ax bp dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33AF:
	selector ds_128 = Mem85[ss:fp - 0x0024:selector]
	branch ax_125 != 0x0000 l0800_33C7
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33B4:
	ptr32 es_di_134 = Mem85[ss:fp + 0x0002:segptr32]
	word16 di_135 = (word16) es_di_134
	selector es_136 = SLICE(es_di_134, selector, 16)
	word16 si_137 = 0x0A36
	word16 cx_138 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33BF:
	branch cx_138 == 0x0000 l0800_33C1
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33BF_1:
	di_135 = di_135 + 0x0001
	cx_138 = cx_138 - 0x0001
	branch 0x00 != Mem85[es_136:di_135:byte] l0800_33BF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C1:
	word16 di_151 = di_135 - 0x0001
	word16 cx_154 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5:
	branch cx_154 == 0x0000 l0800_33C7
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C7:
	return dl_34
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

fn0800_335C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> ds:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5_2:
	Mem160[es_136:di_151:byte] = Mem85[ds_128:si_137:byte]
	si_137 = si_137 + 0x0001
	di_151 = di_151 + 0x0001
	cx_154 = cx_154 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp



word16 fn0800_33CD(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_33CD_entry:
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_33CD:
	byte dl_35
	branch fn0800_A817(0x23, ds, DPB(ptrLoc10, wArg08, 0), DPB(ptrLoc0C, 0x4623, 0), wArg06, out dl_35) == 0x0000 l0800_33F1
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33F1:
	word16 di_301 = 0x0A3B
	word16 si_300 = 0x4641
	word16 cx_303 = 0x0002
	word16 ax_104 = 0x0000
	byte Z_298 = cond(0x0000)
	byte C_299 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE:
	branch cx_303 == 0x0000 l0800_3400
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE_1:
	byte SCZO_296 = cond(Mem0[ds:si_305:byte] - Mem0[ds:di_304:byte])
	Z_298 = SCZO_296 (alias)
	C_299 = SCZO_296 (alias)
	si_300 = si_305 + 0x0001
	di_301 = di_304 + 0x0001
	cx_303 = cx_303 - 0x0001
	word16 di_304 = di_301
	word16 si_305 = si_300
	branch Mem0[ds:si_305:byte] != Mem0[ds:di_304:byte] l0800_33FE
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3400:
	branch Z_298 l0800_3407
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3402:
	word16 ax_290 = 0x0000 - C_299
	ax_104 = ax_290 - 0xFFFF - (ax_290 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3407:
	word16 ax_105 = ax_104
	branch ax_104 == 0x0000 l0800_3431
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_340B:
	word16 di_141 = 0x0A3D
	word16 si_143 = 0x4641
	word16 cx_144 = 0x0003
	word16 ax_145 = 0x0000
	byte Z_148 = cond(0x0000)
	byte C_149 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418:
	branch cx_144 == 0x0000 l0800_341A
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418_1:
	byte SCZO_282 = cond(Mem0[ds:si_307:byte] - Mem0[ds:di_306:byte])
	Z_148 = SCZO_282 (alias)
	C_149 = SCZO_282 (alias)
	si_143 = si_307 + 0x0001
	di_141 = di_306 + 0x0001
	cx_144 = cx_144 - 0x0001
	word16 di_306 = di_141
	word16 si_307 = si_143
	branch Mem0[ds:si_307:byte] != Mem0[ds:di_306:byte] l0800_3418
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341A:
	branch Z_148 l0800_3421
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341C:
	word16 ax_276 = 0x0000 - C_149
	ax_145 = ax_276 - 0xFFFF - (ax_276 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3421:
	ax_105 = ax_145
	branch ax_145 == 0x0000 l0800_3431
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3425:
	ax_105 = (int16) Mem0[ds:0x4638:byte] & wArg06
	branch ax_105 == wArg06 l0800_3444
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3444:
	branch (wArg02 | wArg04) == 0x0000 l0800_3473
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_344C:
	word16 di_206 = (word16) ptrArg02
	selector es_207 = SLICE(ptrArg02, selector, 16)
	word16 di_216 = 0x4641
	word16 cx_222 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B:
	branch cx_222 == 0x0000 l0800_345D
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B_1:
	di_216 = di_216 + 0x0001
	cx_222 = cx_222 - 0x0001
	branch 0x00 != Mem0[ds:di_216:byte] l0800_345B
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345D:
	word16 cx_230 = ~cx_222
	word16 cx_232 = cx_230 >>u 0x0001
	word16 si_237 = di_216 - cx_230
	word16 di_238 = di_206
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C:
	branch cx_232 == 0x0000 l0800_346E
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346E:
	word16 cx_257 = cx_232 * 0x0002 + (cx_230 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3470:
	branch cx_257 == 0x0000 l0800_3472
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3472:
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3473:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3470_1:
	Mem264[es_207:di_238:byte] = Mem0[ds:si_237:byte]
	si_237 = si_237 + 0x0001
	di_238 = di_238 + 0x0001
	cx_257 = cx_257 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C_2:
	Mem252[es_207:di_238:word16] = Mem0[ds:si_237:word16]
	si_237 = si_237 + 0x0002
	di_238 = di_238 + 0x0002
	cx_232 = cx_232 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3431:
	fn0800_3479()
	return ax_105
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_33EA:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_33CD_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_3479()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_3479_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_3479_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3479:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_347E(word16 bp, selector ds, word16 wArg00, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
l0800_347E:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn:

l0800_347D_thunk_fn0800_347E:
	fn0800_347E(bp, ds, wArg00, wArg02, wArg04)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_347E_entry:
// DataOut: bp ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_347E:
	branch fn0800_A84A(0x23, ds, DPB(ptrLoc04, 0x4623, 0)) == 0x0000 l0800_3494
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3494:
	word16 di_47 = 0x0A3B
	word16 si_48 = 0x4641
	word16 cx_49 = 0x0002
	byte Z_53 = cond(0x0000)
	byte C_54 = false
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -4(fp):0x4623 -2(fp):ds

l0800_34A1:
	branch cx_49 == 0x0000 l0800_34A3
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -4(fp):0x4623 -2(fp):<invalid>

l0800_34A1_1:
	byte SCZO_78 = cond(Mem0[ds:si_86:byte] - Mem0[ds:di_85:byte])
	Z_53 = SCZO_78 (alias)
	C_54 = SCZO_78 (alias)
	si_48 = si_86 + 0x0001
	di_47 = di_85 + 0x0001
	cx_49 = cx_49 - 0x0001
	word16 di_85 = di_47
	word16 si_86 = si_48
	branch Mem0[ds:si_86:byte] != Mem0[ds:di_85:byte] l0800_34A1
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -4(fp):0x4623 -2(fp):<invalid>

l0800_34A3:
	branch Z_53 l0800_34A3_thunk_fn0800_34AA
// DataOut: ax bp ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -4(fp):0x4623 -2(fp):<invalid>

l0800_34A3_thunk_fn0800_34AA:
	fn0800_34AA(0x0000, bp, ds, wArg00, wArg02, wArg04)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -4(fp):0x4623 -2(fp):<invalid>

l0800_34A5:
	word16 ax_70 = 0x0000 - C_54
	word16 ax_73 = ax_70 - 0xFFFF - (ax_70 <u 0x0000)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -4(fp):0x4623 -2(fp):<invalid>

l0800_34A7_thunk_fn0800_34AA:
	fn0800_34AA(ax_73, bp, ds, wArg00, wArg02, wArg04)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -4(fp):0x4623 -2(fp):<invalid>

l0800_348D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -4(fp):0x4623 -2(fp):ds

fn0800_347E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:0x00 al:<invalid> -4(fp):0x4623 -2(fp):<invalid>



void fn0800_34AA(word16 ax, word16 bp, selector ds, word16 wArg00, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax sp
fn0800_34AA_entry:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_34AA:
	branch ax == 0x0000 l0800_34AC_thunk_fn0800_347E
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_34AC_thunk_fn0800_347E:
	fn0800_347E(bp, ds, wLoc02, wArg00, wArg02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:ax

l0800_34AE:
	word16 di_178 = 0x0A3D
	word16 si_177 = 0x4641
	word16 cx_180 = 0x0003
	word16 ax_170 = 0x0000
	byte Z_176 = cond(0x0000)
	byte C_174 = false
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:ax
// LocalsOut: fp(16) Local -0002(16)

l0800_34BB:
	branch cx_180 == 0x0000 l0800_34BD
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:0x0000 es:ds di:<invalid> si:<invalid> cx:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_34BB_1:
	byte SCZO_173 = cond(Mem0[ds:si_189:byte] - Mem0[ds:di_190:byte])
	C_174 = SCZO_173 (alias)
	Z_176 = SCZO_173 (alias)
	si_177 = si_189 + 0x0001
	di_178 = di_190 + 0x0001
	cx_180 = cx_180 - 0x0001
	word16 si_189 = si_177
	word16 di_190 = di_178
	branch Mem0[ds:si_189:byte] != Mem0[ds:di_190:byte] l0800_34BB
// DataOut: ax bp cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ax:0x0000 es:ds di:<invalid> si:<invalid> cx:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_34BD:
	branch Z_176 l0800_34C4
// DataOut: ax bp ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp ax:0x0000 es:ds di:<invalid> si:<invalid> cx:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_34BF:
	word16 ax_167 = 0x0000 - C_174
	ax_170 = ax_167 - 0xFFFF - (ax_167 <u 0x0000)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x0000 es:ds di:<invalid> si:<invalid> cx:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_34C4:
	branch ax_170 == 0x0000 l0800_34C6_thunk_fn0800_347E
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16)

l0800_34C6_thunk_fn0800_347E:
	fn0800_347E(bp, ds, ds, wArg00, wArg02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> -2(fp):ds

l0800_34C8:
	branch ((int16) Mem0[ds:0x4638:byte] & Mem0[ss:bp + 0x0008:word16]) != Mem0[ss:bp + 0x0008:word16] l0800_34D2_thunk_fn0800_347E
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(0)

l0800_34D2_thunk_fn0800_347E:
	fn0800_347E(bp, ds, ds, wArg00, wArg02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> -2(fp):ds

l0800_34D4:
	branch (Mem0[ss:bp + 0x0004:word16] | Mem0[ss:bp + 0x0006:word16]) == 0x0000 l0800_3503
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_34DC:
	ptr32 es_di_96 = Mem0[ss:bp + 0x0004:segptr32]
	selector es_97 = SLICE(es_di_96, selector, 16)
	word16 di_98 = (word16) es_di_96
	word16 di_107 = 0x4641
	word16 cx_113 = 0xFFFF
// DataOut: al cx di es
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_34EB:
	branch cx_113 == 0x0000 l0800_34ED
// DataOut: al cx di es
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_34EB_1:
	di_107 = di_107 + 0x0001
	cx_113 = cx_113 - 0x0001
	branch 0x00 != Mem0[ds:di_107:byte] l0800_34EB
// DataOut: al cx di es
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_34ED:
	word16 cx_121 = ~cx_113
	word16 cx_123 = cx_121 >>u 0x0001
	word16 si_128 = di_107 - cx_121
	word16 di_129 = di_98
// DataOut: cx di ds es si
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_34FC:
	branch cx_123 == 0x0000 l0800_34FE
// DataOut: cx di ds es si
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 ax:ds es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:ds -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_34FE:
	word16 cx_148 = cx_123 * 0x0002 + (cx_121 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:ds es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:ds -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_3500:
	branch cx_148 == 0x0000 l0800_3502
// DataOut: cx di ds es si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:ds es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:ds -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_3502:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:ds es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:ds -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_3503:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:ds -4(fp):<invalid> -2(fp):ds

fn0800_34AA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> es:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:0x00 Sequence es:di:<invalid> -4(fp):<invalid> -2(fp):ds

l0800_3500_1:
	Mem155[es_97:di_129:byte] = Mem0[ds:si_128:byte]
	si_128 = si_128 + 0x0001
	di_129 = di_129 + 0x0001
	cx_148 = cx_148 - 0x0001
// DataOut: cx di ds es si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:ds es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:ds -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16)

l0800_34FC_2:
	Mem143[es_97:di_129:word16] = Mem0[ds:si_128:word16]
	si_128 = si_128 + 0x0002
	di_129 = di_129 + 0x0002
	cx_123 = cx_123 - 0x0001
// DataOut: cx di ds es si
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 ax:ds es:ds di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:ds -4(fp):<invalid> -2(fp):ds
// LocalsOut: fp(16)



void fn0800_3509(selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_3509_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_3509:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	Mem45[ss:fp - 0x0060:word16] = ss
	Mem50[ss:fp - 0x0060:word16] = Mem45[ss:fp - 0x0060:selector]
	selector es_51 = Mem50[ss:fp + 0x0004:selector]
	Mem53[ss:fp - 0x0062:word16] = fp - 0x0006
	word16 di_54 = Mem53[ss:fp + 0x0002:word16]
	word16 di_201 = Mem53[ss:fp - 0x0062:word16]
	selector es_59 = Mem53[ss:fp - 0x0060:selector]
	Mem62[ss:fp - 0x0060:word16] = es_51
	Mem64[ss:fp - 0x0062:word16] = di_54
	word16 cx_202 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_354B:
	branch cx_202 == 0x0000 l0800_354D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_354B_1:
	di_201 = di_201 + 0x0001
	cx_202 = cx_202 - 0x0001
	branch 0x00 != Mem64[es_59:di_201:byte] l0800_354B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_354D:
	word16 di_100 = Mem64[ss:fp - 0x0062:word16]
	selector es_88 = Mem64[ss:fp - 0x0060:selector]
	Mem92[ss:fp - 0x0060:word16] = ds
	word16 cx_77 = ~cx_202
	word16 cx_101 = cx_77 >>u 0x0001
	word16 si_104 = di_201 - cx_77
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355C:
	branch cx_101 == 0x0000 l0800_355E
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355E:
	word16 cx_102 = cx_101 * 0x0002 + (cx_77 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3560:
	branch cx_102 == 0x0000 l0800_3562
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3562:
	selector ds_112 = Mem92[ss:fp - 0x0060:selector]
	Mem115[ss:fp - 0x0060:word16] = ss
	Mem120[ss:fp - 0x0060:word16] = Mem115[ss:fp - 0x0060:selector]
	selector es_121 = Mem120[ss:fp + 0x0004:selector]
	Mem123[ss:fp - 0x0062:word16] = fp - 0x005A
	word16 di_124 = Mem123[ss:fp + 0x0002:word16]
	word16 di_126 = Mem123[ss:fp - 0x0062:word16]
	selector es_129 = Mem123[ss:fp - 0x0060:selector]
	Mem132[ss:fp - 0x0060:word16] = es_121
	Mem134[ss:fp - 0x0062:word16] = di_124
	word16 cx_139 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357D:
	branch cx_139 == 0x0000 l0800_357F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357D_1:
	di_126 = di_126 + 0x0001
	cx_139 = cx_139 - 0x0001
	branch 0x00 != Mem134[es_129:di_126:byte] l0800_357D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357F:
	word16 di_151 = Mem134[ss:fp - 0x0062:word16]
	selector es_154 = Mem134[ss:fp - 0x0060:selector]
	Mem156[ss:fp - 0x0018:word16] = ds_112
	word16 cx_148 = ~cx_139
	Mem159[ss:fp - 0x0060:word16] = cx_148
	word16 si_150 = di_126 - cx_148
	word16 cx_160 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3594:
	branch cx_160 == 0x0000 l0800_3596
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3594_2:
	di_151 = di_151 + 0x0001
	cx_160 = cx_160 - 0x0001
	branch 0x00 != Mem159[es_154:di_151:byte] l0800_3594
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3596:
	word16 di_172 = di_151 - 0x0001
	word16 cx_174 = Mem159[ss:fp - 0x0060:word16]
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598:
	branch cx_174 == 0x0000 l0800_359A
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_359A:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_3509_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598_3:
	Mem180[es_154:di_172:byte] = Mem159[es_129:si_150:byte]
	si_150 = si_150 + 0x0001
	di_172 = di_172 + 0x0001
	cx_174 = cx_174 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3560_1:
	Mem108[es_88:di_100:byte] = Mem92[es_59:si_104:byte]
	si_104 = si_104 + 0x0001
	di_100 = di_100 + 0x0001
	cx_102 = cx_102 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355C_2:
	Mem98[es_88:di_100:word16] = Mem92[es_59:si_104:word16]
	si_104 = si_104 + 0x0002
	di_100 = di_100 + 0x0002
	cx_101 = cx_101 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp



byte fn0800_35A3(selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_35A3_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_35A3:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	Mem45[ss:fp - 0x0060:word16] = ss
	Mem50[ss:fp - 0x0060:word16] = Mem45[ss:fp - 0x0060:selector]
	selector es_51 = Mem50[ss:fp + 0x0004:selector]
	Mem53[ss:fp - 0x0062:word16] = fp - 0x0010
	word16 di_54 = Mem53[ss:fp + 0x0002:word16]
	word16 di_202 = Mem53[ss:fp - 0x0062:word16]
	selector es_59 = Mem53[ss:fp - 0x0060:selector]
	Mem62[ss:fp - 0x0060:word16] = es_51
	Mem64[ss:fp - 0x0062:word16] = di_54
	word16 cx_203 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_35E5:
	branch cx_203 == 0x0000 l0800_35E7
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35E5_1:
	di_202 = di_202 + 0x0001
	cx_203 = cx_203 - 0x0001
	branch 0x00 != Mem64[es_59:di_202:byte] l0800_35E5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35E7:
	word16 di_100 = Mem64[ss:fp - 0x0062:word16]
	selector es_88 = Mem64[ss:fp - 0x0060:selector]
	Mem92[ss:fp - 0x0060:word16] = ds
	word16 cx_77 = ~cx_203
	word16 cx_101 = cx_77 >>u 0x0001
	word16 si_104 = di_202 - cx_77
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F6:
	branch cx_101 == 0x0000 l0800_35F8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F8:
	word16 cx_102 = cx_101 * 0x0002 + (cx_77 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35FA:
	branch cx_102 == 0x0000 l0800_35FC
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35FC:
	selector ds_112 = Mem92[ss:fp - 0x0060:selector]
	Mem115[ss:fp - 0x0060:word16] = ss
	Mem120[ss:fp - 0x0060:word16] = Mem115[ss:fp - 0x0060:selector]
	selector es_121 = Mem120[ss:fp + 0x0004:selector]
	Mem123[ss:fp - 0x0062:word16] = fp - 0x0016
	word16 di_124 = Mem123[ss:fp + 0x0002:word16]
	word16 di_126 = Mem123[ss:fp - 0x0062:word16]
	selector es_130 = Mem123[ss:fp - 0x0060:selector]
	Mem133[ss:fp - 0x0060:word16] = es_121
	Mem135[ss:fp - 0x0062:word16] = di_124
	byte dl_129 = (byte) es_121
	word16 cx_140 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3617:
	branch cx_140 == 0x0000 l0800_3619
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3617_1:
	di_126 = di_126 + 0x0001
	cx_140 = cx_140 - 0x0001
	branch 0x00 != Mem135[es_130:di_126:byte] l0800_3617
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3619:
	word16 di_152 = Mem135[ss:fp - 0x0062:word16]
	selector es_155 = Mem135[ss:fp - 0x0060:selector]
	Mem157[ss:fp - 0x0018:word16] = ds_112
	word16 cx_149 = ~cx_140
	Mem160[ss:fp - 0x0060:word16] = cx_149
	word16 si_151 = di_126 - cx_149
	word16 cx_161 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_362E:
	branch cx_161 == 0x0000 l0800_3630
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_362E_2:
	di_152 = di_152 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 != Mem160[es_155:di_152:byte] l0800_362E
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3630:
	word16 di_173 = di_152 - 0x0001
	word16 cx_175 = Mem160[ss:fp - 0x0060:word16]
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632:
	branch cx_175 == 0x0000 l0800_3634
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3634:
	return dl_129
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_35A3_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632_3:
	Mem181[es_155:di_173:byte] = Mem160[es_130:si_151:byte]
	si_151 = si_151 + 0x0001
	di_173 = di_173 + 0x0001
	cx_175 = cx_175 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_35FA_1:
	Mem108[es_88:di_100:byte] = Mem92[es_59:si_104:byte]
	si_104 = si_104 + 0x0001
	di_100 = di_100 + 0x0001
	cx_102 = cx_102 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F6_2:
	Mem98[es_88:di_100:word16] = Mem92[es_59:si_104:word16]
	si_104 = si_104 + 0x0002
	di_100 = di_100 + 0x0002
	cx_101 = cx_101 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp



selector fn0800_363D(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_363D_entry:
// DataOut: ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_363D:
	byte dl_32
	branch fn0800_A817((byte) (fp - 0x002E), ds, DPB(ptrLoc38, wArg06, 0), DPB(ptrLoc34, fp - 0x002E, 0), 0x0000, out dl_32) == 0x0000 l0800_3662
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32)

l0800_3662:
	Mem60[ptrArg02:word16] = wLoc18
	Mem63[ptrArg02 + 0x0002:word16] = wLoc16
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

l0800_365B:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

fn0800_363D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp



word16 fn0800_3678(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3678_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_3678:
	word16 di_18 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 cx_24 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3693:
	branch cx_24 == 0x0000 l0800_3695
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3693_1:
	di_18 = di_18 + 0x0001
	cx_24 = cx_24 - 0x0001
	branch 0x00 != Mem0[es_19:di_18:byte] l0800_3693
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3695:
	word16 cx_275 = ~cx_24
	word16 di_263 = di_18 - cx_275
	byte Z_271 = cond(di_263)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369C:
	branch cx_275 == 0x0000 l0800_369E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369C_2:
	Z_271 = cond(0x5C - Mem0[es_19:di_263:byte]) (alias)
	di_263 = di_263 + 0x0001
	cx_275 = cx_275 - 0x0001
	branch 0x5C != Mem0[es_19:di_263:byte] l0800_369C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369E:
	branch Z_271 l0800_36A7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_36A0:
	di_263 = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_36A7:
	word16 di_60 = di_263 - 0x0001
	branch di_60 == 0x0000 l0800_3732
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_36B6:
	branch 0x0000 != wArg04 l0800_36C6
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32) Stack +0002(16)

l0800_36C1:
	branch di_60 == wArg02 l0800_36D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32)

l0800_36C6:
	branch Mem0[0x0000:(word16) ptrLoc0A - 0x0001:byte] != 0x3A l0800_3732
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(16)

l0800_36D0:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3732:
	ptr32 es_di_87 = Mem0[ss:fp - 0x0006:segptr32]
	word16 di_101 = (word16) es_di_87
	selector es_126 = SLICE(es_di_87, selector, 16)
	word16 cx_100 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373A:
	branch cx_100 == 0x0000 l0800_373C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373A_1:
	di_101 = di_101 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch 0x00 != Mem0[es_126:di_101:byte] l0800_373A
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373C:
	word16 cx_102 = ~cx_100
	word16 di_104 = di_101 - cx_102
	byte Z_108 = cond(di_104)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3743:
	branch cx_102 == 0x0000 l0800_3745
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3743_2:
	Z_108 = cond(0x5C - Mem0[es_126:di_104:byte]) (alias)
	di_104 = di_104 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x5C != Mem0[es_126:di_104:byte] l0800_3743
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3745:
	branch Z_108 l0800_374E
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3747:
	di_104 = 0x0001
	es_126 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_374E:
	Mem130[ss:fp - 0x0008:word16] = es_126
	word16 di_128 = di_104 - 0x0001
	Mem131[ss:fp - 0x000A:word16] = di_128
	branch (di_128 | es_126) != 0x0000 l0800_36DF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_36DF:
	Mem148[Mem131[ss:fp - 0x000A:segptr32]:byte] = 0x00
	Mem151[ss:fp - 0x000E:word16] = Mem148[ss:fp + 0x0004:word16]
	Mem154[ss:fp - 0x0010:word16] = Mem151[ss:fp + 0x0002:word16]
	Mem157[ss:fp - 0x0012:word16] = 0x0010
	Mem162[ss:fp - 0x0014:word16] = 0x0000
	Mem164[ss:fp - 0x0016:word16] = 0x0000
	byte dl_168
	word16 ax_170 = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_168, out ds)
	byte al_173 = (byte) ax_170
	branch ax_170 == 0x0000 l0800_371E
// DataOut: al bp ds si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_36FE:
	Mem197[ss:fp - 0x000E:word16] = Mem164[ss:fp + 0x0004:word16]
	Mem200[ss:fp - 0x0010:word16] = Mem197[ss:fp + 0x0002:word16]
	branch fn0800_8E52(al_173, ds, ptrArg00) == 0x0000 l0800_371E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_370E:
	Mem209[ss:fp - 0x000E:word16] = Mem200[ss:fp + 0x0004:word16]
	Mem212[ss:fp - 0x0010:word16] = Mem209[ss:fp + 0x0002:word16]
	Mem215[ss:fp - 0x0012:word16] = 0x000E
	word16 di_217
	fn0800_0D24(fp - 0x0002, ds, out si, out di_217, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_371E:
	Mem188[Mem164[ss:fp - 0x000A:segptr32]:byte] = 0x5C
	word16 dx_190 = Mem188[ss:fp - 0x000A:word16]
	Mem193[ss:fp - 0x0004:word16] = Mem188[ss:fp - 0x0008:word16]
	Mem194[ss:fp - 0x0006:word16] = dx_190 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_375D:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_3678_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x0010 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3764(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di ds si sp
fn0800_3764_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3764:
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_3796
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3796:
	fn0800_3509(ds, 0x4541, ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si

l0800_376D:
	word16 di_120 = 0x427E
	word16 cx_121 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C:
	branch cx_121 == 0x0000 l0800_377E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C_1:
	di_120 = di_120 + 0x0001
	cx_121 = cx_121 - 0x0001
	branch 0x00 != Mem0[ds:di_120:byte] l0800_377C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377E:
	word16 cx_80 = ~cx_121
	word16 cx_103 = cx_80 >>u 0x0001
	word16 si_101 = di_120 - cx_80
	word16 di_102 = 0x44DC
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D:
	branch cx_103 == 0x0000 l0800_378F
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378F:
	word16 cx_104 = cx_103 * 0x0002 + (cx_80 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3791:
	branch cx_104 == 0x0000 l0800_3793
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3793:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si

l0800_37A6:
	Mem21[ss:fp - 0x0006:word16] = ds
	selector es_23 = Mem21[ss:fp - 0x0006:selector]
	word16 di_134 = 0x44DC
	word16 si_26 = 0x0A40
	word16 cx_27 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B3:
	branch cx_27 == 0x0000 l0800_37B5
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B3_1:
	di_134 = di_134 + 0x0001
	cx_27 = cx_27 - 0x0001
	branch 0x00 != Mem21[es_23:di_134:byte] l0800_37B3
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B5:
	word16 di_39 = di_134 - 0x0001
	word16 cx_41 = 0x000D
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9:
	branch cx_41 == 0x0000 l0800_37BB
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37BB:
	return bp
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

fn0800_3764_exit:
// DataOut: bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9_2:
	Mem46[es_23:di_39:byte] = Mem21[ds:si_26:byte]
	si_26 = si_26 + 0x0001
	di_39 = di_39 + 0x0001
	cx_41 = cx_41 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_3791_1:
	Mem110[ds:di_102:byte] = Mem0[ds:si_101:byte]
	si_101 = si_101 + 0x0001
	di_102 = di_102 + 0x0001
	cx_104 = cx_104 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D_2:
	Mem100[ds:di_102:word16] = Mem0[ds:si_101:word16]
	si_101 = si_101 + 0x0002
	di_102 = di_102 + 0x0002
	cx_103 = cx_103 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)



word16 fn0800_37BE(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_37BE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_37BE:
	word16 di_35
	return fn0800_BEA2(ds, DPB(ptrLoc12, wArg02, 0), 0x0A2B, ds, out di_35)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_37BE_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x0A2B -12(fp):ds -10(fp):0x42E3 -8(fp):ds -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_37DF(word16 bp, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_37DF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_37DF:
	fn0800_3509(ds, 0x44DC, ds)
	Mem25[ss:fp - 0x0070:word16] = ds
	Mem28[ss:fp - 0x0072:word16] = 0x4541
	Mem30[ss:fp - 0x0074:word16] = ss
	selector es_156 = Mem30[ss:fp - 0x0074:selector]
	word16 di_165 = fp - 0x006C
	word16 cx_166 = 0xFFFF
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3805:
	branch cx_166 == 0x0000 l0800_3807
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3805_1:
	di_165 = di_165 + 0x0001
	cx_166 = cx_166 - 0x0001
	branch 0x00 != Mem30[es_156:di_165:byte] l0800_3805
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3807:
	word16 cx_162 = ~cx_166
	word16 di_152 = di_165 - cx_162
	byte Z_159 = cond(di_152)
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380D:
	branch cx_162 == 0x0000 l0800_380F
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380D_2:
	Z_159 = cond(0x00 - Mem30[es_156:di_152:byte]) (alias)
	di_152 = di_152 + 0x0001
	cx_162 = cx_162 - 0x0001
	branch 0x00 != Mem30[es_156:di_152:byte] l0800_380D
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380F:
	branch Z_159 l0800_3818
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3811:
	di_152 = 0x0001
	es_156 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3818:
	Mem70[ss:fp - 0x0074:word16] = es_156
	word16 di_66 = di_152 - 0x0001
	Mem72[ss:fp - 0x0076:word16] = di_66
	fn0800_35A3(ds, wArg04, wArg06)
	Mem81[ss:fp - 0x0070:word16] = ds
	Mem84[ss:fp - 0x0072:word16] = 0x0A4D
	Mem86[ss:fp - 0x0074:word16] = ss
	Mem89[ss:fp - 0x0076:word16] = fp - 0x006C
	word16 dx_93
	word16 si_94
	word16 di_95
	selector ds_109
	word16 ax_97 = fn0800_AA7E(si, di_66, ds, wArg00, wArg02, wArg04, wArg06, out dx_93, out si_94, out di_95, out ds_109)
	Mem99[ss:fp - 0x0004:word16] = dx_93
	Mem100[ss:fp - 0x0006:word16] = ax_97
	branch (ax_97 | dx_93) == 0x0000 l0800_3863
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_383D:
	Mem121[ss:fp - 0x0070:word16] = Mem100[ss:fp - 0x0004:word16]
	Mem124[ss:fp - 0x0072:word16] = Mem121[ss:fp - 0x0006:word16]
	byte dl_126
	word16 di_127
	selector ds_128
	fn0800_A614(fp - 0x0002, ds_109, ptrArg00, wArg02, out dl_126, out di_127, out ds_128)
	Mem134[ss:fp - 0x0070:word16] = 0x0180
	Mem136[ss:fp - 0x0072:word16] = ss
	Mem139[ss:fp - 0x0074:word16] = fp - 0x006C
	ds_109 = fn0800_A4F6(fp - 0x0002, ds_128, wArg00, wArg02, wArg04)
	Mem144[ss:fp - 0x0070:word16] = ss
	Mem148[ss:fp - 0x0072:word16] = fp - 0x006C
	fn0800_8F7F((byte) (fp - 0x006C), ds_109, ptrArg00)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):ds -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3863:
	Mem111[ss:fp - 0x0070:word16] = ss
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3864_thunk_fn0800_3867:
	word16 si_114
	selector ds_115
	return fn0800_3867(fp - 0x006C, fp - 0x0002, ds_109, wArg00, out si_114, out ds_115)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_37DF_exit:
// DataOut: bp ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3867(word16 ax, word16 bp, selector ds, word16 wArg00, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: bp ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_3867_entry:
	*dsOut = ds
	*siOut = si
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3867:
	branch fn0800_BA4A(0xDC, ds, DPB(ptrLoc06, 0x44DC, 0), DPB(ptrLoc02, ax, 0)) != 0xFFFF l0800_3887
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3878:
	word16 si_49
	word16 di_50
	selector ds_51
	fn0800_0D24(bp, ds, out si_49, out di_50, out ds_51)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 ax:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:<invalid> di:<invalid> al:0xFF -6(fp):0x44DC -4(fp):ds -2(fp):ax

l0800_3887:
	return Mem0[ss:bp:word16]
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> al:<invalid> bp:<invalid> si:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -6(fp):0x44DC -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_3867_exit:
// DataOut: bp ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> bp:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> al:<invalid> si:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -6(fp):0x44DC -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>



word16 fn0800_388C(word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_388C_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_388C:
	word16 di_21
	selector ds_22
	word16 si_23 = fn0800_4234(si, di, ds, 0x4541, ds, 0x0A13, ds, out di_21, out ds_22)
	Mem27[ds_22:0x29E5:word16] = dx
	Mem28[ds_22:0x29E3:word16] = 0x4541
	Mem30[ss:fp - 0x000C:word16] = ds_22
	Mem34[ss:fp - 0x000E:word16] = 0x0A50
	Mem36[ss:fp - 0x0010:word16] = ds_22
	Mem39[ss:fp - 0x0012:word16] = 0x44DC
	word16 di_44
	selector ds_45
	word16 si_46
	*siOut = fn0800_4234(si_23, di_21, ds_22, wArg00, wArg02, wArg04, wArg06, out di_44, out ds_45)
	Mem49[ds_45:0x29E1:word16] = dx
	Mem50[ds_45:0x29DF:word16] = 0x44DC
	Mem52[ss:fp - 0x000C:word16] = ds_45
	Mem55[ss:fp - 0x000E:word16] = 0x44DC
	Mem57[ss:fp - 0x0010:word16] = ss
	Mem60[ss:fp - 0x0012:word16] = fp - 0x0006
	selector ds_62 = fn0800_363D(ds_45, ptrArg00, wArg04, wArg06)
	*dsOut = ds_62
	branch Mem60[ds_62:0x0A12:byte] != 0x00 l0800_38EF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_38EF:
	Mem94[ss:fp - 0x000C:word16] = ds_62
	Mem97[ss:fp - 0x000E:word16] = 0x4541
	Mem99[ss:fp - 0x0010:word16] = ss
	Mem102[ss:fp - 0x0012:word16] = fp - 0x000A
	selector ds_103 = fn0800_363D(ds_62, ptrArg00, wArg04, wArg06)
	*dsOut = ds_103
	Mem107[ss:fp - 0x000C:word16] = ds_103
	Mem110[ss:fp - 0x000E:word16] = 0x461F
	Mem112[ss:fp - 0x0010:word16] = ss
	Mem115[ss:fp - 0x0012:word16] = fp - 0x000A
	branch fn0800_395B(ptrArg00, ptrArg04) < 0x0000 l0800_3927
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3913:
	Mem131[ss:fp - 0x000C:word16] = ss
	Mem134[ss:fp - 0x000E:word16] = fp - 0x0006
	Mem136[ss:fp - 0x0010:word16] = ss
	Mem139[ss:fp - 0x0012:word16] = fp - 0x000A
	branch fn0800_395B(ptrArg00, ptrArg04) <= 0x0000 l0800_392E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_392E:
	Mem147[ss:fp - 0x000C:word16] = Mem139[ds_103:0x29E5:word16]
	Mem150[ss:fp - 0x000E:word16] = Mem147[ds_103:0x29E3:word16]
	byte dl_151
	word16 di_152
	selector ds_153
	fn0800_A614(fp - 0x0002, ds_103, ptrArg00, wArg02, out dl_151, out di_152, out ds_153)
	Mem159[ss:fp - 0x000C:word16] = Mem150[ds_153:0x29E1:word16]
	Mem162[ss:fp - 0x000E:word16] = Mem159[ds_153:0x29DF:word16]
	byte dl_163
	word16 di_164
	selector ds_165
	fn0800_A614(fp - 0x0002, ds_153, ptrArg00, wArg02, out dl_163, out di_164, out ds_165)
	Mem170[ss:fp - 0x000C:word16] = ds_165
	Mem174[ss:fp - 0x000E:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_165, ptrArg00)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_3927:
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_38D7:
	Mem80[ds_62:0x4621:word16] = Mem60[ss:fp - 0x0004:word16]
	Mem82[ds_62:0x461F:word16] = Mem80[ss:fp - 0x0006:word16]
	Mem83[ds_62:0x0A12:byte] = 0x01
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_388C_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_395B_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_395B:
	word16 ax_12 = Mem0[ptrArg02 + 0x0002:word16]
	branch ax_12 != Mem0[ptrArg06 + 0x0002:word16] l0800_3984
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0006(32)

l0800_3984:
	return ax_12 - Mem0[ptrArg06 + 0x0002:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3974:
	return Mem0[ptrArg02:word16] - Mem0[ptrArg06:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_395B_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3992(word16 bp, selector ds, ptr16 & dlOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_3992_entry:
	*dsOut = ds
	*siOut = si
	*dlOut = dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3992:
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_39AE
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A0:
	branch Mem0[ds:0x2A23:word16] != 0x0001 l0800_39AE
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A7:
	branch Mem0[ds:0x2A17:word16] != 0x0000 l0800_39B5
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39B5:
	fn0800_3509(ds, 0x44DC, ds)
	Mem80[ss:fp - 0x0078:word16] = ds
	Mem83[ss:fp - 0x007A:word16] = 0x4541
	Mem85[ss:fp - 0x007C:word16] = ss
	selector es_129 = Mem85[ss:fp - 0x007C:selector]
	word16 di_100 = fp - 0x0074
	word16 cx_394 = 0xFFFF
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D4:
	branch cx_394 == 0x0000 l0800_39D6
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D4_1:
	di_100 = di_100 + 0x0001
	cx_394 = cx_394 - 0x0001
	branch 0x00 != Mem85[es_129:di_100:byte] l0800_39D4
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D6:
	word16 cx_101 = ~cx_394
	word16 di_104 = di_100 - cx_101
	byte Z_106 = cond(di_104)
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DC:
	branch cx_101 == 0x0000 l0800_39DE
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DC_2:
	Z_106 = cond(0x00 - Mem85[es_129:di_104:byte]) (alias)
	di_104 = di_104 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch 0x00 != Mem85[es_129:di_104:byte] l0800_39DC
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DE:
	branch Z_106 l0800_39E7
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39E0:
	di_104 = 0x0001
	es_129 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39E7:
	Mem135[ss:fp - 0x007C:word16] = es_129
	word16 di_131 = di_104 - 0x0001
	Mem137[ss:fp - 0x007E:word16] = di_131
	byte dl_140
	*dlOut = fn0800_35A3(ds, wArg04, wArg06)
	Mem145[ss:fp - 0x0078:word16] = ds
	Mem148[ss:fp - 0x007A:word16] = 0x0A4D
	Mem150[ss:fp - 0x007C:word16] = ss
	Mem153[ss:fp - 0x007E:word16] = fp - 0x0074
	word16 dx_156
	word16 si_157
	word16 di_158
	selector ds_159
	word16 ax_160 = fn0800_AA7E(si, di_131, ds, wArg00, wArg02, wArg04, wArg06, out dx_156, out si_157, out di_158, out ds_159)
	Mem162[ss:fp - 0x0004:word16] = dx_156
	Mem163[ss:fp - 0x0006:word16] = ax_160
	branch (ax_160 | dx_156) != 0x0000 l0800_3A13
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A13:
	Mem176[ss:fp - 0x0078:word16] = Mem163[ss:fp - 0x0004:word16]
	Mem179[ss:fp - 0x007A:word16] = Mem176[ss:fp - 0x0006:word16]
	word16 si_180
	selector ds_181
	word16 ax_182 = fn0800_4194(fp - 0x0002, ds_159, wArg00, wArg02, out si_180, out ds_181)
	branch false l0800_3A3D
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A23:
	branch dx_156 != 0x0000 l0800_3A2A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A25:
	branch ax_182 >u 0x0012 l0800_3A3D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A3D:
	Mem196[ss:fp - 0x0078:word16] = Mem179[ss:fp - 0x0004:word16]
	Mem199[ss:fp - 0x007A:word16] = Mem196[ss:fp - 0x0006:word16]
	selector ds_200
	word16 dx_205
	word16 ax_206 = fn0800_8CAA(ax_182, 0x08, fn0800_3E5D(fp - 0x0002, ds_181, wArg00, wArg02, out ds_200), bp, out dx_205)
	branch dx_205 != 0x0052 l0800_3A58
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_3A53:
	branch ax_206 == 0x4E43 l0800_3A6B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_3A6B:
	Mem232[ss:fp - 0x0078:word16] = Mem199[ss:fp - 0x0004:word16]
	Mem235[ss:fp - 0x007A:word16] = Mem232[ss:fp - 0x0006:word16]
	selector ds_236
	word16 dx_237 = fn0800_3E5D(fp - 0x0002, ds_200, wArg00, wArg02, out ds_236)
	branch dx_237 != Mem235[ds_236:0x2A09:word16] l0800_3A83
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A7D:
	branch ax_206 == Mem235[ds_236:0x2A07:word16] l0800_3A96
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A96:
	Mem267[ss:fp - 0x0078:word16] = ss
	Mem270[ss:fp - 0x007A:word16] = fp - 0x0074
	Mem272[ss:fp - 0x007C:word16] = ss
	Mem275[ss:fp - 0x007E:word16] = fp - 0x000E
	selector ds_276 = fn0800_363D(ds_236, ptrArg00, wArg04, wArg06)
	Mem280[ss:fp - 0x0078:word16] = ds_276
	Mem283[ss:fp - 0x007A:word16] = 0x4541
	Mem285[ss:fp - 0x007C:word16] = ss
	Mem288[ss:fp - 0x007E:word16] = fp - 0x000A
	selector ds_289 = fn0800_363D(ds_276, ptrArg00, wArg04, wArg06)
	Mem293[ss:fp - 0x0078:word16] = ss
	Mem296[ss:fp - 0x007A:word16] = fp - 0x000A
	Mem298[ss:fp - 0x007C:word16] = ss
	Mem301[ss:fp - 0x007E:word16] = fp - 0x000E
	word16 ax_303 = fn0800_395B(ptrArg00, ptrArg04)
	branch ax_303 >= 0x0000 l0800_3ADD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3ADD:
	Mem331[ss:fp - 0x0078:word16] = Mem301[ss:fp - 0x0004:word16]
	Mem334[ss:fp - 0x007A:word16] = Mem331[ss:fp - 0x0006:word16]
	selector ds_335
	ui32 dx_ax_339 = SEQ(fn0800_3E5D(fp - 0x0002, ds_289, wArg00, wArg02, out ds_335), ax_303 + 0x0012)
	word16 ax_342 = (word16) (dx_ax_339 + 0x00000012)
	word16 dx_344 = SLICE(dx_ax_339 + 0x00000012, word16, 16)
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3AEC_thunk_fn0800_3AEF:
	byte dl_347
	word16 si_348
	selector ds_349
	return fn0800_3AEF(ax_342, dx_344, fp - 0x0002, ds_335, out dl_347, out si_348, out ds_349)
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3ACA:
	Mem311[ss:fp - 0x0078:word16] = Mem301[ss:fp - 0x0004:word16]
	Mem314[ss:fp - 0x007A:word16] = Mem311[ss:fp - 0x0006:word16]
	byte dl_315
	word16 di_316
	selector ds_317
	fn0800_A614(fp - 0x0002, ds_289, ptrArg00, wArg02, out dl_315, out di_316, out ds_317)
	return 0x0000
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A83:
	Mem246[ss:fp - 0x0078:word16] = Mem235[ss:fp - 0x0004:word16]
	Mem249[ss:fp - 0x007A:word16] = Mem246[ss:fp - 0x0006:word16]
	byte dl_250
	word16 di_251
	selector ds_252
	fn0800_A614(fp - 0x0002, ds_236, ptrArg00, wArg02, out dl_250, out di_251, out ds_252)
	return 0x0000
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A58:
	Mem215[ss:fp - 0x0078:word16] = Mem199[ss:fp - 0x0004:word16]
	Mem218[ss:fp - 0x007A:word16] = Mem215[ss:fp - 0x0006:word16]
	byte dl_220
	word16 di_221
	selector ds_222
	fn0800_A614(fp - 0x0002, ds_200, ptrArg00, wArg02, out dl_220, out di_221, out ds_222)
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A5E_thunk_fn0800_3A61:
	return fn0800_3A61(fp - 0x0002, wArg04)
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A2A:
	Mem357[ss:fp - 0x0078:word16] = Mem179[ss:fp - 0x0004:word16]
	Mem360[ss:fp - 0x007A:word16] = Mem357[ss:fp - 0x0006:word16]
	byte dl_361
	word16 di_362
	selector ds_363
	fn0800_A614(fp - 0x0002, ds_181, ptrArg00, wArg02, out dl_361, out di_362, out ds_363)
	return 0x0000
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A0C:
// DataOut: ax bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A0C_thunk_fn0800_3A0E:
	fn0800_3A0E(fp - 0x0002, wArg00)
	return 0x0000
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_39AE:
	return 0x0000
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp

fn0800_3992_exit:
// DataOut: ax dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_3A0E(word16 bp, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut:
// Trashed: bp bpl di dil ebp edi esp rbp rdi rsp sp spl
// Preserved:
fn0800_3A0E_entry:
// DataOut: ax bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_3A0E:
	return
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3A0E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 di:<invalid> bp:<invalid>



word16 fn0800_3A61(word16 bp, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi esp rax rbp rdi rsp sp spl
// Preserved:
fn0800_3A61_entry:
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3A61:
	return 0x0000
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3A61_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 ax:0x0000 di:<invalid> bp:<invalid>



word16 fn0800_3AEF(word16 ax, word16 dx, word16 bp, selector ds, ptr16 & dlOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds dx ss
// LiveOut: ax dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_3AEF_entry:
	*siOut = si
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3AEF:
	Mem3[ds:0x2A05:word16] = dx
	Mem6[ds:0x2A03:word16] = ax
	byte dl_17
	word16 di_18
	selector ds_19
	fn0800_A614(bp, ds, DPB(ptrLoc04, Mem6[ss:bp - 0x0004:word16], 0), Mem6[ss:bp - 0x0002:word16], out dl_17, out di_18, out ds_19)
	return 0x0001
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3AEF_exit:
// DataOut: ax dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x0001 di:<invalid> bp:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0x01 dx:<invalid> ah:0x00 ds:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_3B0A(word16 bp, selector ds, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +000A(16) Stack +000C(16)
fn0800_3B0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +000A(16) Stack +000C(16)

l0800_3B0A:
	sp = fp
	sp = fp - 0x0002
	wLoc02 = bp
	bp = fp - 0x0002
	sp = fp - 0x000A
	ax = wArg0A
	ax = ax | wArg0C
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(NE,Z) l0800_3B1B
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B1B:
	SCZO = cond(wArg0C - 0x0000)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	SO = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
	branch Test(LT,SO) l0800_3B31
// DataOut: bp ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B21:
	branch Test(GT,SZO) l0800_3B2A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B23:
	SCZO = cond(wArg0A - 0xFDE8)
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_3B31
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B31:
	dx = wArg0C
	dl = (byte) dx (alias)
	ax = wArg0A
	ax_dx = SEQ(ax, dx) (alias)
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B2A:
	dx = 0x0000
	dl = (byte) dx (alias)
	SZO = cond(0x0000)
	C = false
	ax = 0xFDE8
	ax_dx = SEQ(ax, dx) (alias)
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B37:
	wLoc08 = dx
	wLoc0A = ax
	v13 = wLoc08
	sp = fp - 0x000C
	wLoc0C = v13
	sp = fp - 0x000E
	wLoc0E = ax
	fn0800_4311(ax, dx, ds, wLoc0E, wLoc0C)
	sp = fp - 0x000A
	SCZO = cond(fp - 0x000A)
	wLoc04 = dx
	wLoc06 = ax
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3BAB:
	ax = Mem0[ss:bp + 0x000C:word16]
	ax = ax | Mem0[ss:bp + 0x000E:word16]
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(NE,Z) l0800_3B4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3B4F:
	SCZO = cond(Mem0[ss:bp + 0x000E:word16] - 0x0000)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	SO = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
	branch Test(LT,SO) l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): SZO
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3B55:
	branch Test(GT,SZO) l0800_3B5E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3B57:
	SCZO = cond(Mem0[ss:bp + 0x000C:word16] - 0xFDE8)
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3B65:
	dx = Mem0[ss:bp + 0x000E:word16]
	dl = (byte) dx (alias)
	ax = Mem0[ss:bp + 0x000C:word16]
	ax_dx = SEQ(ax, dx) (alias)
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3B5E:
	dx = 0x0000
	dl = (byte) dx (alias)
	SZO = cond(0x0000)
	C = false
	ax = 0xFDE8
	ax_dx = SEQ(ax, dx) (alias)
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3B6B:
	Mem0[ss:bp - 0x0006:word16] = dx
	Mem0[ss:bp - 0x0008:word16] = ax
	v16 = Mem0[ss:bp + 0x0006:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v16
	v17 = Mem0[ss:bp + 0x0004:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v17
	v18 = Mem0[ss:bp - 0x0006:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v18
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	v19 = Mem0[ss:bp - 0x0002:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v19
	v20 = Mem0[ss:bp - 0x0004:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v20
	si = fn0800_4110(bp, ds, wArg00, wArg02, wArg04, wArg08, wArg0A, out di, out ds)
	sp = sp + 0x000C
	SCZO = cond(sp)
	v21 = Mem0[ss:bp + 0x000A:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v21
	v22 = Mem0[ss:bp + 0x0008:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v22
	v23 = Mem0[ss:bp - 0x0006:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v23
	v24 = Mem0[ss:bp - 0x0008:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v24
	v25 = Mem0[ss:bp - 0x0002:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v25
	v26 = Mem0[ss:bp - 0x0004:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v26
	ds = fn0800_4152(bp, ds, wArg00, wArg02, wArg04, wArg08, wArg0A)
	sp = sp + 0x000C
	ax = Mem0[ss:bp - 0x0006:word16]
	dx = Mem0[ss:bp - 0x0008:word16]
	ax_dx = SEQ(ax, dx) (alias)
	v27 = Mem0[ss:bp + 0x000C:word16] - dx
	Mem0[ss:bp + 0x000C:word16] = v27
	SCZO = cond(v27)
	v28_v27 = Mem0[ss:bp + 0x000C:ui32] - ax_dx
	Mem0[ss:bp + 0x000E:word16] = v28
	SCZO = cond(v28_v27)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3BB3:
	v14 = Mem0[ss:bp - 0x0002:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v14
	v15 = Mem0[ss:bp - 0x0004:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v15
	dl = fn0800_4346(ds, wArg00, wArg02, out ds)
	sp = sp + 0x0004
	SCZO = cond(sp)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_3BBC_thunk_fn0800_3BBF:
	bp = fn0800_3BBF(bp)
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bp:<invalid> si:<invalid> di:<invalid> dh:<invalid> bh:0x40 dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_3B18:
	bp = fn0800_3BBF(bp)
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp

fn0800_3B0A_exit:
	use ds (=> dsOut)
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> si:<invalid> di:<invalid> dh:<invalid> bh:0x40 dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_3BBF:
	return Mem0[ss:bp:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> -2(fp):bp

fn0800_3BBF_exit:
// DataOut: bp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> -2(fp):bp



word16 fn0800_3BBF(word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: bp sp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
fn0800_3BBF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_3BBF:
	return Mem0[ss:bp:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> -2(fp):bp

fn0800_3BBF_exit:
// DataOut: bp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> -2(fp):bp



selector fn0800_3BC3(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_3BC3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3BC3:
	word16 di_19
	word16 si_20 = fn0800_37BE(ds, 0x43AD, ds, 0x0A54, ds, out di_19)
	word16 di_33
	selector ds_34
	fn0800_4234(si_20, di_19, ds, 0x43AD, ds, 0x0A61, ds, out di_33, out ds_34)
	Mem39[ds_34:0x29D5:word16] = dx
	Mem40[ds_34:0x29D3:word16] = 0x43AD
	Mem44[ss:fp - 0x0008:word16] = Mem40[ss:fp + 0x0004:word16]
	Mem47[ss:fp - 0x000A:word16] = Mem44[ss:fp + 0x0002:word16]
	word16 si_50
	selector ds_51
	ui32 dx_ax_57 = SEQ(dx, fn0800_4194(fp - 0x0002, ds_34, wArg00, wArg02, out si_50, out ds_51) - Mem47[ss:fp + 0x0006:word16]) - Mem47[ss:fp + 0x0006:ui32]
	Mem60[ss:fp - 0x0004:word16] = SLICE(dx_ax_57, word16, 16)
	Mem61[ss:fp - 0x0006:word16] = (word16) dx_ax_57
	Mem66[ss:fp - 0x0008:word16] = 0x0000
	Mem69[ss:fp - 0x000A:word16] = Mem66[ss:fp + 0x0008:word16]
	Mem72[ss:fp - 0x000C:word16] = Mem69[ss:fp + 0x0006:word16]
	Mem75[ss:fp - 0x000E:word16] = Mem72[ss:fp + 0x0004:word16]
	Mem78[ss:fp - 0x0010:word16] = Mem75[ss:fp + 0x0002:word16]
	word16 di_80
	selector ds_81
	fn0800_ACB3(fp - 0x0002, ds_51, wArg00, wArg02, wArg08, out di_80, out ds_81)
	Mem87[ss:fp - 0x0008:word16] = Mem78[ss:fp - 0x0004:word16]
	Mem90[ss:fp - 0x000A:word16] = Mem87[ss:fp - 0x0006:word16]
	Mem93[ss:fp - 0x000C:word16] = Mem90[ds_81:0x29D5:word16]
	Mem96[ss:fp - 0x000E:word16] = Mem93[ds_81:0x29D3:word16]
	Mem99[ss:fp - 0x0010:word16] = Mem96[ss:fp + 0x0004:word16]
	Mem102[ss:fp - 0x0012:word16] = Mem99[ss:fp + 0x0002:word16]
	selector ds_104
	word16 bp_105 = fn0800_3B0A(fp - 0x0002, ds_81, wArg08, wArg0A, out ds_104)
	Mem110[ss:fp - 0x0008:word16] = Mem102[ds_104:0x29D5:word16]
	Mem113[ss:fp - 0x000A:word16] = Mem110[ds_104:0x29D3:word16]
	selector ds_114 = fn0800_BA67(ds_104, wArg00, wArg02)
	Mem118[ss:fp - 0x0008:word16] = 0x0000
	word16 ax_119 = Mem118[ss:bp_105 + 0x000A:word16]
	word16 dx_121 = Mem118[ss:bp_105 + 0x0008:word16] + Mem118[ss:bp_105 + 0x000C:word16]
	Mem129[ss:fp - 0x000A:word16] = ax_119 + Mem118[ss:bp_105 + 0x000E:word16] + (SEQ(dx_121, ax_119) <u 0x00000000)
	Mem131[ss:fp - 0x000C:word16] = dx_121
	Mem134[ss:fp - 0x000E:word16] = Mem131[ss:bp_105 + 0x0006:word16]
	Mem137[ss:fp - 0x0010:word16] = Mem134[ss:bp_105 + 0x0004:word16]
	word16 di_138
	selector ds_139
	fn0800_ACB3(bp_105, ds_114, wArg00, wArg02, wArg08, out di_138, out ds_139)
	Mem145[ss:fp - 0x0008:word16] = Mem137[ss:bp_105 - 0x0002:word16]
	Mem148[ss:fp - 0x000A:word16] = Mem145[ss:bp_105 - 0x0004:word16]
	Mem151[ss:fp - 0x000C:word16] = Mem148[ss:bp_105 + 0x0006:word16]
	Mem154[ss:fp - 0x000E:word16] = Mem151[ss:bp_105 + 0x0004:word16]
	Mem157[ss:fp - 0x0010:word16] = Mem154[ds_139:0x29D5:word16]
	Mem160[ss:fp - 0x0012:word16] = Mem157[ds_139:0x29D3:word16]
	selector ds_161
	word16 bp_162 = fn0800_3B0A(bp_105, ds_139, wArg08, wArg0A, out ds_161)
	Mem167[ss:fp - 0x0008:word16] = Mem160[ds_161:0x29D5:word16]
	Mem170[ss:fp - 0x000A:word16] = Mem167[ds_161:0x29D3:word16]
	byte dl_172
	word16 di_173
	selector ds_174
	fn0800_A614(bp_162, ds_161, ptrArg00, wArg02, out dl_172, out di_173, out ds_174)
	Mem179[ss:fp - 0x0008:word16] = ds_174
	Mem183[ss:fp - 0x000A:word16] = 0x43AD
	fn0800_8F7F(0xAD, ds_174, ptrArg00)
	return ds_174
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3BC3_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3C99(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_3C99_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3C99:
	fn0800_3509(ds, 0x4348, ds)
	Mem28[ss:fp - 0x0072:word16] = ss
	selector es_29 = Mem28[ss:fp - 0x0072:selector]
	word16 di_211 = fp - 0x006C
	word16 si_32 = 0x0A54
	word16 cx_212 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3CBE:
	branch cx_212 == 0x0000 l0800_3CC0
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CBE_1:
	di_211 = di_211 + 0x0001
	cx_212 = cx_212 - 0x0001
	branch 0x00 != Mem28[es_29:di_211:byte] l0800_3CBE
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC0:
	word16 di_52 = di_211 - 0x0001
	word16 cx_54 = 0x000D
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC4:
	branch cx_54 == 0x0000 l0800_3CC6
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC6:
	Mem67[ss:fp - 0x0072:word16] = ds
	Mem70[ss:fp - 0x0074:word16] = 0x0A61
	Mem72[ss:fp - 0x0076:word16] = ss
	Mem75[ss:fp - 0x0078:word16] = fp - 0x006C
	word16 di_80
	selector ds_81
	fn0800_4234(si_32, di_52, ds, wArg00, wArg02, wArg04, wArg06, out di_80, out ds_81)
	Mem84[ss:fp - 0x0004:word16] = dx
	Mem85[ss:fp - 0x0006:word16] = fp - 0x006C
	Mem90[ss:fp - 0x0072:word16] = 0x0000
	Mem92[ss:fp - 0x0074:word16] = 0x0000
	Mem94[ss:fp - 0x0076:word16] = 0x0000
	Mem97[ss:fp - 0x0078:word16] = Mem94[ss:fp + 0x0004:word16]
	Mem100[ss:fp - 0x007A:word16] = Mem97[ss:fp + 0x0002:word16]
	word16 di_102
	selector ds_103
	fn0800_ACB3(fp - 0x0002, ds_81, wArg00, wArg02, wArg08, out di_102, out ds_103)
	Mem109[ss:fp - 0x0072:word16] = Mem100[ss:fp + 0x0008:word16]
	Mem112[ss:fp - 0x0074:word16] = Mem109[ss:fp + 0x0006:word16]
	Mem115[ss:fp - 0x0076:word16] = Mem112[ss:fp - 0x0004:word16]
	Mem118[ss:fp - 0x0078:word16] = Mem115[ss:fp - 0x0006:word16]
	Mem121[ss:fp - 0x007A:word16] = Mem118[ss:fp + 0x0004:word16]
	Mem124[ss:fp - 0x007C:word16] = Mem121[ss:fp + 0x0002:word16]
	selector ds_126
	word16 bp_127 = fn0800_3B0A(fp - 0x0002, ds_103, wArg08, wArg0A, out ds_126)
	Mem131[ss:fp - 0x0072:word16] = 0x0000
	ui32 ax_dx_137 = SEQ(Mem131[ss:bp_127 + 0x000A:word16], Mem131[ss:bp_127 + 0x0008:word16] + Mem131[ss:bp_127 + 0x000C:word16]) + Mem131[ss:bp_127 + 0x000C:ui32]
	Mem142[ss:fp - 0x0074:word16] = SLICE(ax_dx_137, word16, 16)
	word16 dx_139 = (word16) ax_dx_137
	Mem144[ss:fp - 0x0076:word16] = dx_139
	Mem147[ss:fp - 0x0078:word16] = Mem144[ss:bp_127 + 0x0006:word16]
	Mem150[ss:fp - 0x007A:word16] = Mem147[ss:bp_127 + 0x0004:word16]
	word16 di_151
	selector ds_152
	fn0800_ACB3(bp_127, ds_126, wArg00, wArg02, wArg08, out di_151, out ds_152)
	Mem158[ss:fp - 0x0072:word16] = Mem150[ss:bp_127 + 0x0006:word16]
	Mem161[ss:fp - 0x0074:word16] = Mem158[ss:bp_127 + 0x0004:word16]
	word16 si_162
	selector ds_163
	word16 ax_164 = fn0800_4194(bp_127, ds_152, wArg00, wArg02, out si_162, out ds_163)
	ui32 bx_cx_171 = SEQ(Mem161[ss:bp_127 + 0x000A:word16], Mem161[ss:bp_127 + 0x0008:word16] + Mem161[ss:bp_127 + 0x000C:word16]) + Mem161[ss:bp_127 + 0x000C:ui32]
	ui32 dx_ax_176 = SEQ(dx_139, ax_164 - (word16) bx_cx_171) - bx_cx_171
	Mem180[ss:bp_127 + 0x000E:word16] = SLICE(dx_ax_176, word16, 16)
	word16 ax_177 = (word16) dx_ax_176
	Mem181[ss:bp_127 + 0x000C:word16] = ax_177
	Mem184[ss:fp - 0x0072:word16] = Mem181[ss:bp_127 + 0x000E:word16]
	Mem186[ss:fp - 0x0074:word16] = ax_177
	Mem189[ss:fp - 0x0076:word16] = Mem186[ss:bp_127 - 0x0002:word16]
	Mem192[ss:fp - 0x0078:word16] = Mem189[ss:bp_127 - 0x0004:word16]
	Mem195[ss:fp - 0x007A:word16] = Mem192[ss:bp_127 + 0x0006:word16]
	Mem198[ss:fp - 0x007C:word16] = Mem195[ss:bp_127 + 0x0004:word16]
	selector ds_199
	word16 bp_200 = fn0800_3B0A(bp_127, ds_163, wArg08, wArg0A, out ds_199)
	Mem205[ss:fp - 0x0072:word16] = Mem198[ss:bp_200 - 0x0002:word16]
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp

l0800_3D5A_thunk_fn0800_3D5D:
	selector ds_206
	return fn0800_3D5D(bp_200, ds_199, out ds_206)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_3C99_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3CC4_2:
	Mem61[es_29:di_52:byte] = Mem28[ds:si_32:byte]
	si_32 = si_32 + 0x0001
	di_52 = di_52 + 0x0001
	cx_54 = cx_54 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_3D5D(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_3D5D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3D5D:
	byte dl_12
	word16 di_13
	selector ds_14
	fn0800_A614(bp, ds, DPB(ptrLoc02, Mem0[ss:bp - 0x0004:word16], 0), wArg00, out dl_12, out di_13, out ds_14)
	Mem20[ss:fp:word16] = Mem0[ds_14:0x29D1:word16]
	Mem23[ss:fp - 0x0002:word16] = Mem20[ds_14:0x29CF:word16]
	byte dl_26
	selector ds_28
	word16 di_110
	fn0800_A614(bp, ds_14, ptrArg00, wArg02, out dl_26, out di_110, out ds_28)
	Mem34[ss:fp:word16] = 0x0180
	Mem36[ss:fp - 0x0002:word16] = ds_28
	Mem39[ss:fp - 0x0004:word16] = 0x4348
	selector ds_111 = fn0800_A4F6(bp, ds_28, wArg00, wArg02, wArg04)
	Mem45[ss:fp:word16] = ds_111
	Mem49[ss:fp - 0x0002:word16] = 0x4348
	fn0800_8F7F(0x48, ds_111, ptrArg00)
	Mem54[ss:fp:word16] = ds_111
	Mem57[ss:fp - 0x0002:word16] = 0x4348
	Mem59[ss:fp - 0x0004:word16] = ss
	Mem63[ss:fp - 0x0006:word16] = bp - 0x006A
	branch fn0800_BA4A((byte) (bp - 0x006A), ds_111, ptrArg00, ptrArg04) != 0xFFFF l0800_3DB2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3DA3:
	Mem102[ss:fp:word16] = ss
	Mem105[ss:fp - 0x0002:word16] = bp - 0x006A
	Mem108[ss:fp - 0x0004:word16] = 0x000A
	dx = fn0800_0D24(bp, ds_111, out si, out di_110, out ds_111)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):bp - 0x006A -4(fp):ss -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3DB2:
	Mem77[ss:fp:word16] = ds_111
	Mem80[ss:fp - 0x0002:word16] = 0x0A65
	Mem82[ss:fp - 0x0004:word16] = ds_111
	Mem85[ss:fp - 0x0006:word16] = 0x4348
	word16 di_87
	selector ds_88
	fn0800_4234(si, di_110, ds_111, wArg00, wArg02, wArg04, wArg06, out di_87, out ds_88)
	Mem92[ds_88:0x29D1:word16] = dx
	Mem93[ds_88:0x29CF:word16] = 0x4348
	return Mem93[ss:bp:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):bp - 0x006A -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_3D5D_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cx:<invalid> al:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>



word16 fn0800_3DCF(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al ax di dl ds dx
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3DCF_entry:
	*diOut = di
	*dsOut = ds
	*dxOut = dx
// DataOut: bp di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_3DCF:
	word16 ax_103
	word16 v10_16 = Mem0[ptrArg02:word16] - 0x0001
	Mem17[ptrArg02:word16] = v10_16
	branch v10_16 < 0x0000 l0800_3DF3
// DataOut: bp bx di dl ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3DF3:
	word16 dx_100
	word16 di_101
	ax_103 = fn0800_AEC2(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out dx_100, out di_101, out ds)
// DataOut: ax bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3DDE:
	word16 ax_77 = Mem17[ptrArg02 + 0x000E:word16]
	Mem80[ptrArg02 + 0x000C:word16] = Mem17[ptrArg02 + 0x000C:word16] + 0x0001
	ax_103 = DPB(ax_77, 0x00, 8) (alias)
// DataOut: ax bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3DFF:
	Mem33[ss:fp - 0x0004:word16] = ax_103
	branch ax_103 != 0xFFFF l0800_3E1F
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3E07:
	Mem54[ss:fp - 0x0008:word16] = Mem33[ss:fp + 0x0004:word16]
	Mem57[ss:fp - 0x000A:word16] = Mem54[ss:fp + 0x0002:word16]
	word16 dx_60
	word16 ax_61 = fn0800_4271(ds, wArg00, wArg02, out dx_60)
	Mem65[ss:fp - 0x0008:word16] = dx_60
	Mem67[ss:fp - 0x000A:word16] = ax_61
	Mem70[ss:fp - 0x000C:word16] = 0x0008
	ax_103 = 0x0008
	word16 si_71
	word16 di_72
	selector ds_73
	word16 dx_74
	*dxOut = fn0800_0D24(fp - 0x0002, ds, out si_71, out di_72, out ds_73)
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3E1F:
	return DPB(ax_103, Mem33[ss:fp - 0x0004:byte], 0)
// DataOut: al ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3DCF_exit:
// DataOut: al ax di dl ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E27(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di dl ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E27_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E27:
	word16 dx_19
	word16 di_20
	selector ds_21
	Mem27[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(fp - 0x0002, ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out dx_19, out di_20, out ds_21), 0x00, 8)
	Mem31[ss:fp - 0x0008:word16] = Mem27[ss:fp + 0x0004:word16]
	Mem34[ss:fp - 0x000A:word16] = Mem31[ss:fp + 0x0002:word16]
	word16 dx_36
	word16 di_37
	selector ds_38
	Mem43[ss:fp - 0x0006:word16] = DPB(fn0800_3DCF(fp - 0x0002, ds_21, ptrArg00, wArg02, out dx_36, out di_37, out ds_38), 0x00, 8)
	return (Mem43[ss:fp - 0x0004:word16] << 0x08) + Mem43[ss:fp - 0x0006:word16]
// DataOut: ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E27_exit:
// DataOut: ax di dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> ax:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E5D(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds dx
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E5D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E5D:
	word16 dx_17
	word16 si_18
	word16 di_19
	selector ds_20
	word16 ax_21 = fn0800_3E27(fp - 0x0002, ds, wArg02, wArg04, out dx_17, out si_18, out di_19, out ds_20)
	Mem24[ss:fp - 0x0004:word16] = 0x0000
	Mem26[ss:fp - 0x0006:word16] = ax_21
	Mem29[ss:fp - 0x000C:word16] = Mem26[ss:fp + 0x0004:word16]
	Mem32[ss:fp - 0x000E:word16] = Mem29[ss:fp + 0x0002:word16]
	word16 dx_34
	word16 si_35
	word16 di_36
	selector ds_37
	word16 ax_38 = fn0800_3E27(fp - 0x0002, ds_20, wArg00, wArg02, out dx_34, out si_35, out di_36, out ds_37)
	Mem40[ss:fp - 0x0008:word16] = 0x0000
	Mem41[ss:fp - 0x000A:word16] = ax_38
	return Mem41[ss:fp - 0x0006:word16] + (Mem41[ss:fp - 0x000A:word16] <u 0x0000)
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E5D_exit:
// DataOut: ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3E9A(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3E9A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_3E9A:
	word16 ax_101
	word16 v10_16 = Mem0[ptrArg02:word16] - 0x0001
	Mem17[ptrArg02:word16] = v10_16
	branch v10_16 < 0x0000 l0800_3EBE
// DataOut: bp bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3EBE:
	word16 dx_116
	word16 di_117
	ax_101 = fn0800_AEC2(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out dx_116, out di_117, out ds)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3EA9:
	word16 ax_93 = Mem17[ptrArg02 + 0x000E:word16]
	Mem96[ptrArg02 + 0x000C:word16] = Mem17[ptrArg02 + 0x000C:word16] + 0x0001
	ax_101 = DPB(ax_93, 0x00, 8) (alias)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3ECA:
	Mem33[ss:fp - 0x0004:word16] = ax_101
	branch ax_101 != 0xFFFF l0800_3EEA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3ED2:
	Mem72[ss:fp - 0x0008:word16] = Mem33[ss:fp + 0x0004:word16]
	Mem75[ss:fp - 0x000A:word16] = Mem72[ss:fp + 0x0002:word16]
	word16 dx_76
	word16 ax_77 = fn0800_4271(ds, wArg00, wArg02, out dx_76)
	Mem81[ss:fp - 0x0008:word16] = dx_76
	Mem83[ss:fp - 0x000A:word16] = ax_77
	Mem86[ss:fp - 0x000C:word16] = 0x0008
	word16 si_87
	word16 di_88
	fn0800_0D24(fp - 0x0002, ds, out si_87, out di_88, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3EEA:
	Mem41[ss:fp - 0x0008:word16] = 0x0001
	Mem45[ss:fp - 0x000A:word16] = 0xFFFF
	Mem47[ss:fp - 0x000C:word16] = 0xFFFF
	Mem50[ss:fp - 0x000E:word16] = Mem47[ss:fp + 0x0004:word16]
	Mem53[ss:fp - 0x0010:word16] = Mem50[ss:fp + 0x0002:word16]
	word16 di_57
	selector ds_58
	return DPB(fn0800_ACB3(fp - 0x0002, ds, wArg00, wArg02, wArg08, out di_57, out ds_58), Mem53[ss:fp - 0x0004:byte], 0)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3E9A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F0A(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3F0A:
	word16 dx_19
	word16 di_20
	selector ds_21
	Mem27[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(fp - 0x0002, ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out dx_19, out di_20, out ds_21), 0x00, 8)
	Mem31[ss:fp - 0x0008:word16] = Mem27[ss:fp + 0x0004:word16]
	Mem34[ss:fp - 0x000A:word16] = Mem31[ss:fp + 0x0002:word16]
	word16 dx_36
	word16 di_37
	selector ds_38
	Mem44[ss:fp - 0x0006:word16] = DPB(fn0800_3DCF(fp - 0x0002, ds_21, ptrArg00, wArg02, out dx_36, out di_37, out ds_38), 0x00, 8)
	Mem47[ss:fp - 0x0008:word16] = 0x0001
	Mem51[ss:fp - 0x000A:word16] = 0xFFFF
	Mem53[ss:fp - 0x000C:word16] = 0xFFFE
	Mem56[ss:fp - 0x000E:word16] = Mem53[ss:fp + 0x0004:word16]
	Mem59[ss:fp - 0x0010:word16] = Mem56[ss:fp + 0x0002:word16]
	word16 di_62
	selector ds_63
	fn0800_ACB3(fp - 0x0002, ds_38, wArg00, wArg02, wArg08, out di_62, out ds_63)
	return (Mem59[ss:fp - 0x0004:word16] << 0x08) + Mem59[ss:fp - 0x0006:word16]
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> ax:<invalid> dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFE -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F58(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds dx
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F58_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3F58:
	word16 dx_17
	word16 si_18
	word16 di_19
	selector ds_20
	word16 ax_21 = fn0800_3E27(fp - 0x0002, ds, wArg02, wArg04, out dx_17, out si_18, out di_19, out ds_20)
	Mem24[ss:fp - 0x0004:word16] = 0x0000
	Mem26[ss:fp - 0x0006:word16] = ax_21
	Mem29[ss:fp - 0x000C:word16] = Mem26[ss:fp + 0x0004:word16]
	Mem32[ss:fp - 0x000E:word16] = Mem29[ss:fp + 0x0002:word16]
	word16 dx_34
	word16 si_35
	word16 di_36
	selector ds_37
	word16 ax_38 = fn0800_3E27(fp - 0x0002, ds_20, wArg00, wArg02, out dx_34, out si_35, out di_36, out ds_37)
	Mem41[ss:fp - 0x0008:word16] = 0x0000
	Mem42[ss:fp - 0x000A:word16] = ax_38
	Mem45[ss:fp - 0x000C:word16] = 0x0001
	Mem49[ss:fp - 0x000E:word16] = 0xFFFF
	Mem51[ss:fp - 0x0010:word16] = 0xFFFC
	Mem54[ss:fp - 0x0012:word16] = Mem51[ss:fp + 0x0004:word16]
	Mem57[ss:fp - 0x0014:word16] = Mem54[ss:fp + 0x0002:word16]
	word16 di_59
	selector ds_60
	fn0800_ACB3(fp - 0x0002, ds_37, wArg00, wArg02, wArg08, out di_59, out ds_60)
	return Mem57[ss:fp - 0x0006:word16] + Mem57[ss:fp - 0x0008:word16] + (Mem57[ss:fp - 0x000A:word16] <u 0x0000)
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F58_exit:
// DataOut: di ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):0xFFFC -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3FAD(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3FAD_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3FAD:
	word16 dx_19
	word16 di_20
	selector ds_21
	Mem27[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(fp - 0x0002, ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out dx_19, out di_20, out ds_21), 0x00, 8)
	Mem31[ss:fp - 0x0008:word16] = Mem27[ss:fp + 0x0004:word16]
	Mem34[ss:fp - 0x000A:word16] = Mem31[ss:fp + 0x0002:word16]
	word16 dx_36
	word16 di_37
	selector ds_38
	word16 ax_42 = DPB(fn0800_3DCF(fp - 0x0002, ds_21, ptrArg00, wArg02, out dx_36, out di_37, out ds_38), 0x00, 8)
	Mem43[ss:fp - 0x0006:word16] = ax_42
	return (ax_42 << 0x08) + Mem43[ss:fp - 0x0004:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3FAD_exit:
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> cl:0x08 ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_401E(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_401E_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_401E:
	word16 di_25
	selector ds_26
	fn0800_4047(fp - 0x0002, ds, (byte) (wArg02 >>u 0x08), DPB(ptrLoc06, wArg04, 0), wArg06, out di_25, out ds_26)
	Mem34[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0006:word16]
	Mem37[ss:fp - 0x0006:word16] = Mem34[ss:fp + 0x0004:word16]
	Mem41[ss:fp - 0x0008:word16] = DPB(wArg02 >>u 0x08, Mem37[ss:fp + 0x0002:byte], 0)
	word16 di_44
	selector ds_45
	return fn0800_4047(fp - 0x0002, ds_26, bArg00, ptrArg02, wArg04, out di_44, out ds_45)
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_401E_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> si:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_4047(word16 bp, selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_4047_entry:
	*diOut = di
	*dsOut = ds
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_4047:
	byte dl_110
	word16 ax_114
	word16 v10_18 = Mem0[ptrArg04:word16] + 0x0001
	Mem19[ptrArg04:word16] = v10_18
	word16 bp_111 = fp - 0x0002
	branch v10_18 >= 0x0000 l0800_406F
// DataOut: bp bx cl cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(16) Stack +0006(16)

l0800_406F:
	word16 di_112
	ax_114 = fn0800_B30A(ds, DPB(ptrLoc08, wArg04, 0), out dl_110, out bp_111, out di_112, out ds)
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4056:
	word16 ax_80 = Mem19[ptrArg04 + 0x000E:word16]
	word16 si_81 = Mem19[ptrArg04 + 0x000C:word16]
	Mem83[ptrArg04 + 0x000C:word16] = Mem19[ptrArg04 + 0x000C:word16] + 0x0001
	Mem89[ax_80:si_81:byte] = bArg02
	dl_110 = bArg02
	ax_114 = DPB(ax_80, 0x00, 8) (alias)
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_407C:
	branch ax_114 != 0xFFFF l0800_4099
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4081:
	Mem56[ss:fp - 0x0006:word16] = Mem19[ss:bp_111 + 0x0008:word16]
	Mem59[ss:fp - 0x0008:word16] = Mem56[ss:bp_111 + 0x0006:word16]
	word16 dx_62
	word16 ax_63 = fn0800_4271(ds, wArg00, wArg02, out dx_62)
	Mem67[ss:fp - 0x0006:word16] = dx_62
	Mem69[ss:fp - 0x0008:word16] = ax_63
	Mem72[ss:fp - 0x000A:word16] = 0x0009
	word16 si_73
	word16 di_74
	selector ds_75
	dl_110 = (byte) fn0800_0D24(bp_111, ds, out si_73, out di_74, out ds_75) (alias)
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_4099:
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_409A_thunk_fn0800_409B:
	fn0800_409B()
	return dl_110
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_4047_exit:
// DataOut: di dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void fn0800_409B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_409B_entry:
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_409B:
	return
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_409B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



byte fn0800_409C(word16 bp, selector ds, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_409C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_409C:
	word16 si_19
	selector ds_20
	fn0800_401E(fp - 0x0002, ds, wArg04, wArg06, wArg08, out si_19, out ds_20)
	Mem28[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0008:word16]
	Mem31[ss:fp - 0x0006:word16] = Mem28[ss:fp + 0x0006:word16]
	Mem34[ss:fp - 0x0008:word16] = Mem31[ss:fp + 0x0002:word16]
	word16 si_37
	selector ds_38
	return fn0800_401E(fp - 0x0002, ds_20, wArg00, wArg02, wArg04, out si_37, out ds_38)
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_409C_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> si:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_40BF(word16 bp, selector ds, byte bArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(16) Stack +0006(16)
fn0800_40BF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16)

l0800_40BF:
	word16 di_27
	selector ds_28
	fn0800_4047(fp - 0x0002, ds, bArg02 & 0xFF, DPB(ptrLoc06, wArg04, 0), wArg06, out di_27, out ds_28)
	Mem35[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0006:word16]
	Mem38[ss:fp - 0x0006:word16] = Mem35[ss:fp + 0x0004:word16]
	word16 ax_39 = Mem38[ss:fp + 0x0002:word16]
	Mem48[ss:fp - 0x0008:word16] = DPB(ax_39 >>u 0x08, (byte) (ax_39 >>u 0x08) & 0xFF, 0)
	word16 di_51
	selector ds_52
	fn0800_4047(fp - 0x0002, ds_28, bArg00, ptrArg02, wArg04, out di_51, out ds_52)
	return di_51
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_40BF_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> si:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4110(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg0A, word16 wArg0C, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)
fn0800_4110_entry:
	*diOut = di
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4110:
	selector ds_30
	word16 ax_31 = fn0800_ABA3(fp - 0x0002, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_30)
	branch 0x0000 != Mem0[ss:fp + 0x0008:word16] l0800_4138
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4133:
	branch ax_31 == Mem0[ss:fp + 0x0006:word16] l0800_4150
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4138:
	Mem53[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x000C:word16]
	Mem56[ss:fp - 0x0006:word16] = Mem53[ss:fp + 0x000A:word16]
	word16 dx_58
	word16 ax_59 = fn0800_4271(ds_30, wArg00, wArg02, out dx_58)
	Mem63[ss:fp - 0x0004:word16] = dx_58
	Mem65[ss:fp - 0x0006:word16] = ax_59
	Mem68[ss:fp - 0x0008:word16] = 0x0008
	word16 di_70
	selector ds_71
	fn0800_0D24(fp - 0x0002, ds_30, out si, out di_70, out ds_71)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4150:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4110_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_4152(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)
fn0800_4152_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4152:
	selector ds_30
	word16 ax_31 = fn0800_AD85(fp - 0x0002, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_30)
	branch 0x0000 != Mem0[ss:fp + 0x0008:word16] l0800_417A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4175:
	branch ax_31 == Mem0[ss:fp + 0x0006:word16] l0800_4192
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_417A:
	Mem51[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x000C:word16]
	Mem54[ss:fp - 0x0006:word16] = Mem51[ss:fp + 0x000A:word16]
	word16 dx_56
	word16 ax_57 = fn0800_4271(ds_30, wArg00, wArg02, out dx_56)
	Mem61[ss:fp - 0x0004:word16] = dx_56
	Mem63[ss:fp - 0x0006:word16] = ax_57
	Mem66[ss:fp - 0x0008:word16] = 0x0009
	word16 si_67
	word16 di_68
	fn0800_0D24(fp - 0x0002, ds_30, out si_67, out di_68, out ds_30)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4192:
	return ds_30
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4152_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4194(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4194_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4194:
	byte dl_19
	word16 si_20
	word16 ax_21 = fn0800_AD2F(ds, DPB(ptrLoc0E, wArg02, 0), wArg04, out dl_19, out si_20)
	Mem24[ss:fp - 0x0004:word16] = dx
	Mem26[ss:fp - 0x0006:word16] = ax_21
	Mem29[ss:fp - 0x000C:word16] = 0x0002
	Mem34[ss:fp - 0x000E:word16] = 0x0000
	Mem36[ss:fp - 0x0010:word16] = 0x0000
	Mem39[ss:fp - 0x0012:word16] = Mem36[ss:fp + 0x0004:word16]
	Mem42[ss:fp - 0x0014:word16] = Mem39[ss:fp + 0x0002:word16]
	word16 di_45
	selector ds_46
	fn0800_ACB3(fp - 0x0002, ds, wArg00, wArg02, wArg08, out di_45, out ds_46)
	Mem52[ss:fp - 0x000C:word16] = Mem42[ss:fp + 0x0004:word16]
	Mem55[ss:fp - 0x000E:word16] = Mem52[ss:fp + 0x0002:word16]
	byte dl_57
	word16 si_58
	word16 ax_59 = fn0800_AD2F(ds_46, ptrArg00, wArg02, out dl_57, out si_58)
	Mem61[ss:fp - 0x0008:word16] = dx
	Mem62[ss:fp - 0x000A:word16] = ax_59
	Mem67[ss:fp - 0x000C:word16] = 0x0000
	Mem70[ss:fp - 0x000E:word16] = Mem67[ss:fp - 0x0004:word16]
	Mem73[ss:fp - 0x0010:word16] = Mem70[ss:fp - 0x0006:word16]
	Mem76[ss:fp - 0x0012:word16] = Mem73[ss:fp + 0x0004:word16]
	Mem79[ss:fp - 0x0014:word16] = Mem76[ss:fp + 0x0002:word16]
	word16 di_80
	selector ds_81
	fn0800_ACB3(fp - 0x0002, ds_46, wArg00, wArg02, wArg08, out di_80, out ds_81)
	return Mem79[ss:fp - 0x000A:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4194_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_41F3(word16 dx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds dx si ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_41F3_entry:
// DataOut: bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_41F3:
	__inb(dx)
	word16 di_23
	selector ds_24
	fn0800_4234(si, di, ds, Mem0[ss:bp + 0x0004:word16], Mem0[ss:bp + 0x0006:word16], 0x0A69, ds, out di_23, out ds_24)
	Mem28[ss:bp - 0x0002:word16] = dx
	Mem29[ss:bp - 0x0004:word16] = 0x0A69
	Mem32[ss:fp - 0x000A:word16] = Mem29[ss:bp - 0x0002:word16]
	Mem34[ss:fp - 0x000C:word16] = 0x0A69
	word16 si_37
	selector ds_38
	word16 ax_39 = fn0800_4194(bp, ds_24, wArg00, wArg02, out si_37, out ds_38)
	Mem42[ss:bp - 0x0006:word16] = dx
	Mem43[ss:bp - 0x0008:word16] = ax_39
	Mem46[ss:fp - 0x000A:word16] = Mem43[ss:bp - 0x0002:word16]
	Mem49[ss:fp - 0x000C:word16] = Mem46[ss:bp - 0x0004:word16]
	byte dl_51
	word16 di_52
	selector ds_53
	fn0800_A614(bp, ds_38, ptrArg00, wArg02, out dl_51, out di_52, out ds_53)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_41F3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid>



word16 fn0800_4234(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_4234_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_4234:
	word16 dx_27
	word16 di_29
	selector ds_30
	word16 si_28
	word16 ax_31 = fn0800_AA7E(si, di, ds, wArg02, wArg04, wArg06, wArg08, out dx_27, out si_28, out di_29, out ds_30)
	Mem33[ss:fp - 0x0004:word16] = dx_27
	Mem35[ss:fp - 0x0006:word16] = ax_31
	branch (ax_31 | Mem35[ss:fp - 0x0004:word16]) != 0x0000 l0800_4267
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4257:
	Mem53[ss:fp - 0x0008:word16] = Mem35[ss:fp + 0x0004:word16]
	Mem56[ss:fp - 0x000A:word16] = Mem53[ss:fp + 0x0002:word16]
	Mem59[ss:fp - 0x000C:word16] = 0x0007
	word16 di_61
	selector ds_62
	fn0800_0D24(fp - 0x0002, ds_30, out si_28, out di_61, out ds_62)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4267:
	return si_28
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4234_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4271(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4271_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4271:
	branch wArg04 != Mem0[ds:0x29E5:word16] l0800_428D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4280:
	branch wArg02 != Mem0[ds:0x29E3:word16] l0800_428D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_428D:
	branch wArg04 != Mem0[ds:0x29E1:word16] l0800_42A6
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4299:
	branch wArg02 != Mem0[ds:0x29DF:word16] l0800_42A6
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42A6:
	branch wArg04 != Mem0[ds:0x29D1:word16] l0800_42BF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42B2:
	branch wArg02 != Mem0[ds:0x29CF:word16] l0800_42BF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42BF:
	branch wArg04 != Mem0[ds:0x29DD:word16] l0800_42D8
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42CB:
	branch wArg02 != Mem0[ds:0x29DB:word16] l0800_42D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42D8:
	branch wArg04 != Mem0[ds:0x29D9:word16] l0800_42F1
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42E4:
	branch wArg02 != Mem0[ds:0x29D7:word16] l0800_42F1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42F1:
	branch wArg04 != Mem0[ds:0x29D5:word16] l0800_430A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42FD:
	branch wArg02 != Mem0[ds:0x29D3:word16] l0800_430A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_430A:
	return 0x0A60
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4303:
	return 0x43AD
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42EA:
	return 0x4412
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42D1:
	return 0x4477
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42B8:
	return 0x4348
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_429F:
	return 0x44DC
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4286:
	return 0x4541
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_4271_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:ds -2(fp):bp



void fn0800_4311(word16 ax, word16 dx, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax ds dx ss
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
// Terminates process
fn0800_4311_entry:
// DataOut: ax di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4311:
	fn0800_9F89(wArg02, wArg04)
	branch (ax | dx) != 0x0000 l0800_433C
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

l0800_432D:
	Mem40[ss:fp - 0x0008:word16] = ds
	Mem43[ss:fp - 0x000A:word16] = 0x0A6C
	Mem46[ss:fp - 0x000C:word16] = 0x0006
	word16 si_47
	word16 di_48
	selector ds_49
	fn0800_0D24(fp - 0x0002, ds, out si_47, out di_48, out ds_49)
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0004 ax:ax | dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_433C:
	return
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:0x01 di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

fn0800_4311_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



byte fn0800_4346(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4346_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4346:
	selector ds_15
	return fn0800_9E75(ds, wArg04, out ds_15)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4346_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4357(word16 wArg00, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bp bpl bx dl dx eax ebp ebx edx es esp rax rbp rbx rdx rsp sp spl
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_4357_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4357:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43B9:
	branch Mem0[ptrArg06:byte] != 0x00 l0800_435C
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_435C:
	byte al_59 = Mem0[ptrArg06:byte]
	word16 ax_61 = (int16) al_59
	branch ax_61 == 0x002A l0800_4379
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4379:
	branch Mem0[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4382:
	branch Mem0[ptrArg02:byte] != 0x00 l0800_4376
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4376:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4388:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_436A:
	branch ax_61 == 0x002E l0800_439E
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_439E:
	branch Mem0[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_436F:
	branch ax_61 == 0x003F l0800_438A
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_438A:
	branch Mem0[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(32)

l0800_4393:
	branch Mem0[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(32)

l0800_4399:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4374:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43A7:
	branch al_59 == Mem0[ptrArg02:byte] l0800_43B3
	branch al_59 == Mem0[ptrArg02:byte] l0800_43B3
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(32)

l0800_43B3:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43B6:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43AF:
	return 0x0000
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43C2:
	word16 ax_45
	branch Mem0[ptrArg02:byte] != 0x00 l0800_43D0
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D0:
	ax_45 = 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43CB:
	ax_45 = 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D2:
	return ax_45
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

fn0800_4357_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>



void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx es rax rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_43D4_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_43D4:
	word16 cx_10 = wArg06
	word16 si_17 = wArg02 + (word16) (wArg06 *s 0x000C)
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_440F:
	si_17 = si_17 - 0x000C
	cx_10 = cx_10 - 0x0001
	branch cx_10 != 0x0000 l0800_43E9
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_43E9:
	Mem36[psegArg04:si_17 + 0x0002:word16] = 0x0000
	Mem37[psegArg04:si_17:word16] = 0x0000
	Mem38[psegArg04:si_17 + 0x0004:word16] = 0xFFFF
	Mem39[psegArg04:si_17 + 0x0008:word16] = 0x0000
	Mem40[psegArg04:si_17 + 0x0006:word16] = 0x0000
	Mem41[psegArg04:si_17 + 0x000A:word16] = 0x0000
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_4419:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp

fn0800_43D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp



word16 fn0800_441C(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg06, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: bp di si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0006(16)
fn0800_441C_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16)

l0800_441C:
	branch 0x0000 >=u wArg06 l0800_4452
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0006(16) Local -0008(16)

l0800_4437_thunk_fn0800_4452:
	word16 si_33
	word16 di_34
	return fn0800_4452(fp - 0x0002, 0x0000, ds, di, si, out si_33, out di_34)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:0x0000 cx:0x0000 si:<invalid> ax:0x0000 dx:0x000C Sequence dx:ax:0x0000 -8(fp):di -6(fp):si -2(fp):bp

l0800_4437_thunk_fn0800_4449:
	word16 si_30
	word16 di_31
	return fn0800_4449(0x0000, fp - 0x0002, wArg02, 0x0000, ds, out si_30, out di_31)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:0x0000 cx:0x0000 si:<invalid> ax:0x0000 dx:0x000C Sequence dx:ax:0x0000 -8(fp):di -6(fp):si -2(fp):bp

fn0800_441C_exit:
// DataOut: bp di si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:0x0000 es:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp



word16 fn0800_4439(word16 cx, word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp cx di ds si ss
// LiveOut: bp di si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4439_entry:
	*siOut = si
	*diOut = di
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4439:
	selector es_5 = Mem0[ss:bp + 0x0006:selector]
	branch (Mem0[es_5:si:word16] | Mem0[es_5:si + 0x0002:word16]) == 0x0000 l0800_4449
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4443_thunk_fn0800_4449:
	bp = fn0800_4449(cx, bp, si, di, ds, out si, out di)
	return bp
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> ax:<invalid>

l0800_4445:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> ax:<invalid>

l0800_4445_thunk_fn0800_4446:
	word16 si_17
	word16 di_18
	return fn0800_4446(cx, bp, si, di + 0x0001, ds, out si_17, out di_18)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> ax:<invalid> di:di + 0x0001

fn0800_4439_exit:
// DataOut: bp di si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> ax:<invalid> di:<invalid> si:<invalid> cx:<invalid> bp:<invalid> dx:<invalid> bx:<invalid>



word16 fn0800_4446(word16 cx, word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp cx di ds si ss
// LiveOut: bp di si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4446_entry:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4446:
	Mem3[ss:bp - 0x0002:word16] = cx
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4446_thunk_fn0800_4449:
	word16 si_9
	word16 di_10
	return fn0800_4449(cx, bp, si, di, ds, out si_9, out di_10)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4446_exit:
// DataOut: bp di si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> cx:<invalid> es:<invalid> ax:<invalid> di:<invalid> bp:<invalid> dx:<invalid> bx:<invalid>



word16 fn0800_4449(word16 cx, word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp cx di ds si ss
// LiveOut: bp di si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4449_entry:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4449:
	sp = fp
	si = si + 0x000C
	cx = cx + 0x0001
	SCZO = cond(cx - Mem0[ss:bp + 0x0008:word16])
	C = SCZO (alias)
	branch Test(ULT,C) l0800_4439
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4450_thunk_fn0800_4439:
	bp = fn0800_4439(cx, bp, si, di, ds, out si, out di)
	return bp
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si + 0x000C cx:cx + 0x0001

l0800_4450_thunk_fn0800_4452:
	bp = fn0800_4452(bp, di, ds, wArg00, wArg02, out si, out di)
	return bp
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si + 0x000C cx:cx + 0x0001

l0800_4437_thunk_fn0800_4439:
	bp = fn0800_4439(cx, bp, si, di, ds, out si, out di)
	return bp
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si + 0x000C cx:cx + 0x0001

fn0800_4449_exit:
	use si (=> siOut)
	use di (=> diOut)
// DataOut: bp di si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> cx:<invalid> es:<invalid> ax:<invalid> di:<invalid> bp:<invalid> dx:<invalid> bx:<invalid>



word16 fn0800_4452(word16 bp, word16 di, selector ds, word16 wArg00, word16 wArg02, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: bp di si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(16)
fn0800_4452_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16)

l0800_4452:
	branch di != 0x0000 l0800_4459
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16)

l0800_4450_thunk_fn0800_4452:
	word16 si_235
	word16 di_236
	return fn0800_4452(bp, di, ds, wArg00, wArg02, out si_235, out di_236)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

l0800_4459:
	branch di == 0x0001 l0800_4461
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16)

l0800_4461:
	ptr32 es_bx_221 = Mem0[ss:bp + 0x0004:segptr32]
	selector es_222 = SLICE(es_bx_221, selector, 16)
	word16 bx_224 = (word16) es_bx_221 + (word16) (Mem0[ss:bp - 0x0002:word16] *s 0x000C)
	Mem227[es_222:bx_224 + 0x000A:word16] = Mem0[es_222:bx_224 + 0x000A:word16] + 0x0001
	word16 di_229
	*diOut = wArg00
	word16 si_231
	*siOut = wArg02
	return Mem227[ss:bp:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

l0800_445E:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

l0800_4525:
	Mem69[ss:fp - 0x0002:word16] = Mem0[ss:bp + 0x0008:word16]
	Mem72[ss:fp - 0x0004:word16] = Mem69[ss:bp + 0x0006:word16]
	Mem75[ss:fp - 0x0006:word16] = Mem72[ss:bp + 0x0004:word16]
	word16 bp_81
	branch fn0800_463B(bp, ds, wLoc02, wArg00, wArg02, wArg04, out bp_81) == 0x0000 l0800_453B
	Mem90[ss:fp - 0x0002:word16] = Mem75[ss:bp_81 + 0x0008:word16]
	Mem93[ss:fp - 0x0004:word16] = Mem90[ss:bp_81 + 0x0006:word16]
	Mem96[ss:fp - 0x0006:word16] = Mem93[ss:bp_81 + 0x0004:word16]
	branch fn0800_463B(bp_81, ds, wLoc02, wArg00, wArg02, wArg04, out bp) == 0x0000 l0800_453B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> bx:<invalid> si:<invalid> es:<invalid> bp:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_453B:
	Mem208[ss:fp - 0x0002:word16] = Mem96[ss:bp + 0x0008:word16]
	Mem211[ss:fp - 0x0004:word16] = Mem208[ss:bp + 0x0006:word16]
	Mem214[ss:fp - 0x0006:word16] = Mem211[ss:bp + 0x0004:word16]
	fn0800_4550(bp)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4538:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4478:
	ptr32 es_bx_109 = Mem96[ss:bp + 0x0004:segptr32]
	word16 ax_107 = (word16) (Mem96[ds:0x4658:word16] *s 0x000C)
	selector es_110 = SLICE(es_bx_109, selector, 16)
	word16 bx_112 = (word16) es_bx_109 + ax_107
	word16 dx_114 = Mem96[es_110:bx_112:word16]
	Mem116[ss:fp - 0x0002:word16] = Mem96[es_110:bx_112 + 0x0002:word16]
	word16 ax_117 = Mem116[ds:0x465A:word16]
	Mem120[ss:fp - 0x0004:word16] = dx_114
	word16 ax_122 = (word16) (ax_117 *s 0x000C)
	word16 bx_125 = Mem120[ss:bp + 0x0004:word16] + ax_122
	word16 v25_128 = Mem120[es_110:bx_125:word16] + Mem120[ss:fp - 0x0004:word16]
	Mem129[es_110:bx_125:word16] = v25_128
	Mem136[es_110:bx_125 + 0x0002:word16] = Mem129[es_110:bx_125 + 0x0002:word16] + Mem129[ss:fp - 0x0002:word16] + (v25_128 <u 0x0000)
	word16 bx_138 = Mem136[ss:bp + 0x0004:word16] + ax_107
	Mem139[es_110:bx_138 + 0x0002:word16] = 0x0000
	Mem140[es_110:bx_138:word16] = 0x0000
	word16 bx_142 = Mem140[ss:bp + 0x0004:word16] + ax_122
	Mem145[es_110:bx_142 + 0x000A:word16] = Mem140[es_110:bx_142 + 0x000A:word16] + 0x0001
	word16 cx_108 = ax_107
	word16 dx_123 = ax_122
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_44DD:
	ptr32 es_bx_151 = Mem145[ss:bp + 0x0004:segptr32]
	selector es_152 = SLICE(es_bx_151, selector, 16)
	word16 bx_154 = (word16) es_bx_151 + dx_123
	branch Mem145[es_152:bx_154 + 0x0004:word16] != 0xFFFF l0800_44C3
// DataOut: bp cx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> bx:<invalid> si:<invalid> es:<invalid> bp:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_44C3:
	selector es_192 = Mem145[ss:bp + 0x0006:selector]
	word16 ax_193 = Mem145[es_192:bx_154 + 0x0004:word16]
	Mem194[ds:0x465A:word16] = ax_193
	word16 ax_197 = (word16) (ax_193 *s 0x000C)
	word16 bx_201 = Mem194[ss:bp + 0x0004:word16] + ax_197
	Mem204[es_192:bx_201 + 0x000A:word16] = Mem194[es_192:bx_201 + 0x000A:word16] + 0x0001
	dx_123 = ax_197
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> bx:<invalid> si:<invalid> es:<invalid> bp:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_44EB:
	Mem160[es_152:bx_154 + 0x0004:word16] = Mem145[ds:0x4658:word16]
	word16 bx_162 = Mem160[ss:bp + 0x0004:word16] + ax_107
	Mem165[es_152:bx_162 + 0x000A:word16] = Mem160[es_152:bx_162 + 0x000A:word16] + 0x0001
// DataOut: bp cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> bx:<invalid> si:<invalid> es:<invalid> bp:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4517:
	ptr32 es_bx_172 = Mem165[ss:bp + 0x0004:segptr32]
	word16 bx_175 = (word16) es_bx_172 + cx_108
	branch Mem165[SLICE(es_bx_172, selector, 16):bx_175 + 0x0004:word16] != 0xFFFF l0800_44FD
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> bx:<invalid> si:<invalid> es:<invalid> bp:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_44FD:
	selector es_179 = Mem165[ss:bp + 0x0006:selector]
	word16 ax_180 = Mem165[es_179:bx_175 + 0x0004:word16]
	Mem181[ds:0x4658:word16] = ax_180
	word16 ax_184 = (word16) (ax_180 *s 0x000C)
	word16 bx_187 = Mem181[ss:bp + 0x0004:word16] + ax_184
	Mem190[es_179:bx_187 + 0x000A:word16] = Mem181[es_179:bx_187 + 0x000A:word16] + 0x0001
	cx_108 = ax_184
// DataOut: bp cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> bx:<invalid> si:<invalid> es:<invalid> bp:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4456:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

l0800_454A:
	word16 di_39
	*diOut = Mem0[ss:fp:word16]
	word16 si_41
	*siOut = Mem0[ss:fp + 0x0002:word16]
	return Mem0[ss:bp:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4452_exit:
// DataOut: bp di si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> si:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_4550(word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_4550_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4550:
	word16 bp_113 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_45D6:
	branch Mem0[ss:bp_113 - 0x000A:word16] <=u 0x0010 l0800_4573
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4573:
	word16 di_115 = 0x0000
	word16 si_114 = Mem0[ss:bp_113 + 0x0004:word16]
	branch 0x0000 >=u Mem0[ss:bp_113 + 0x0008:word16] l0800_45C3
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_457D:
	branch Mem0[Mem0[ss:bp_113 + 0x0006:selector]:si_114 + 0x000A:word16] != Mem0[ss:bp_113 - 0x000A:word16] l0800_45BA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4589:
	Mem99[ss:fp - 0x0012:word16] = Mem0[ss:bp_113 - 0x000A:word16]
	Mem102[ss:fp - 0x0014:word16] = Mem99[ss:bp_113 - 0x0006:word16]
	Mem105[ss:fp - 0x0016:word16] = Mem102[ss:bp_113 - 0x0008:word16]
	Mem108[ss:fp - 0x0018:word16] = Mem105[ss:bp_113 - 0x0002:word16]
	Mem111[ss:fp - 0x001A:word16] = Mem108[ss:bp_113 - 0x0004:word16]
	word16 dx_112
	word16 ax_116 = fn0800_8BC2(bp_113, si_114, di_115, bp, out dx_112, out bp_113, out si_114, out di_115)
	Mem119[ss:fp - 0x0014:word16] = dx_112
	Mem121[ss:fp - 0x0016:word16] = ax_116
	word16 dx_125
	word16 ax_126 = fn0800_45E2(wArg00, wArg02, wArg04, out dx_125)
	selector es_128 = Mem121[ss:bp_113 + 0x0006:selector]
	Mem129[es_128:si_114 + 0x0008:word16] = dx_125
	Mem130[es_128:si_114 + 0x0006:word16] = ax_126
	word16 ax_131 = Mem130[ss:bp_113 - 0x0006:word16]
	word16 v20_133 = Mem130[ss:bp_113 - 0x0004:word16] + Mem130[ss:bp_113 - 0x0008:word16]
	Mem134[ss:bp_113 - 0x0004:word16] = v20_133
	Mem138[ss:bp_113 - 0x0002:word16] = Mem134[ss:bp_113 - 0x0002:word16] + ax_131 + (v20_133 <u 0x0000)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45BA:
	si_114 = si_114 + 0x000C
	di_115 = di_115 + 0x0001
	branch di_115 <u Mem0[ss:bp_113 + 0x0008:word16] l0800_457D
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45C3:
	Mem54[ss:bp_113 - 0x000A:word16] = Mem0[ss:bp_113 - 0x000A:word16] + 0x0001
	word16 ax_55 = Mem54[ss:bp_113 - 0x0006:word16]
	word16 dx_61 = __rcr(Mem54[ss:bp_113 - 0x0008:word16], 0x01, cond(ax_55 >>u 0x0001))
	Mem62[ss:bp_113 - 0x0006:word16] = ax_55 >>u 0x0001
	Mem63[ss:bp_113 - 0x0008:word16] = dx_61
	Mem65[ss:bp_113 - 0x000A:word16] = Mem63[ss:bp_113 - 0x000A:word16] + 0x0001
	word16 ax_66 = Mem65[ss:bp_113 - 0x0006:word16]
	word16 dx_72 = __rcr(Mem65[ss:bp_113 - 0x0008:word16], 0x01, cond(ax_66 >>u 0x0001))
	Mem74[ss:bp_113 - 0x0006:word16] = ax_66 >>u 0x0001
	Mem75[ss:bp_113 - 0x0008:word16] = dx_72
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45DC:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4550_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_45E2_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_45E2:
	word16 bx_15 = wArg06
	word16 wLoc04_10 = 0x0000
	word16 wLoc06_11 = 0x0000
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_462A:
	bx_15 = bx_15 - 0x0001
	branch bx_15 != 0x0000 l0800_45F7
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_45F7:
	word16 dx_36 = wLoc06_11 << 0x0001
	word16 ax_40 = __rcl(wLoc04_10, 0x01, cond(dx_36))
	wLoc06_11 = dx_36
	branch (wArg02 & 0x0001) == 0x0000 l0800_461A
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4612:
	wLoc06_11 = dx_36 | 0x0001
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_461A:
	word16 ax_54 = wArg04 >>u 0x0001
	wLoc04_10 = ax_40
	wArg04 = ax_54
	wArg02 = __rcr(wArg02, 0x01, cond(ax_54))
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4631:
	word16 dx_28
	*dxOut = wLoc04_10
	return wLoc06_11
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_45E2_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_463B(word16 bp, selector ds, word16 wArg00, word16 wArg02, selector psegArg04, word16 wArg06, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp sp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_463B_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_463B:
	word16 wLoc0C_102 = 0xFFFF
	word16 wLoc0E_103 = 0xFFFF
	word16 wLoc08_104 = 0xFFFF
	word16 wLoc0A_105 = 0xFFFF
	word16 cx_106 = 0x0000
	word16 si_108 = wArg02 + 0x0002
	branch 0x0000 >=u wArg06 l0800_46D5
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4661:
	word16 ax_111 = Mem0[psegArg04:si_108 + 0x0000:word16]
	word16 dx_112 = Mem0[psegArg04:si_108:word16]
	branch (dx_112 | ax_111) == 0x0000 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4675:
	branch ax_111 >u wLoc08_104 l0800_46AB
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4680:
	branch ax_111 <u wLoc08_104 l0800_4687
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4682:
	branch dx_112 >=u wLoc0A_105 l0800_46AB
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46AB:
	branch ax_111 >u wLoc0C_102 l0800_46CD
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B6:
	branch ax_111 <u wLoc0C_102 l0800_46BD
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B8:
	branch dx_112 >=u wLoc0E_103 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46BD:
	Mem152[ds:0x4658:word16] = cx_106
	wLoc0C_102 = ax_111
	wLoc0E_103 = dx_112
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4687:
	Mem163[ds:0x4658:word16] = Mem0[ds:0x465A:word16]
	Mem168[ds:0x465A:word16] = cx_106
	wLoc0C_102 = wLoc08_104
	wLoc0E_103 = wLoc0A_105
	wLoc08_104 = ax_111
	wLoc0A_105 = dx_112
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46CD:
	si_108 = si_108 + 0x000C
	cx_106 = cx_106 + 0x0001
	branch cx_106 <u wArg06 l0800_4661
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46D5:
	branch wLoc08_104 != 0xFFFF l0800_46E1
	branch wLoc08_104 != 0xFFFF l0800_46E1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000A(0) Local -000C(0) Local -000E(0)

l0800_46DB:
	branch wLoc0A_105 == 0xFFFF l0800_46ED
	branch wLoc0A_105 == 0xFFFF l0800_46ED
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(0) Local -000E(0)

l0800_46E1:
	branch wLoc0C_102 != 0xFFFF l0800_46F5
	branch wLoc0C_102 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0)

l0800_46E7:
	branch wLoc0E_103 != 0xFFFF l0800_46F5
	branch wLoc0E_103 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_46F5:
	word16 bp_91
	*bpOut = bp
	return 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_46ED:
	return 0x0000
	word16 bp_78
	*bpOut = Mem0[ss:bp:word16]
	return 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_463B_exit:
// DataOut: ax bp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_46FE(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_46FE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_46FE:
	branch Mem0[ds:0x2A05:word16] >u 0x0000 l0800_471F
// DataOut: bp ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_470D:
	branch Mem0[ds:0x2A05:word16] <u 0x0000 l0800_4716
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_470F:
	branch Mem0[ds:0x2A03:word16] >=u 0x002A l0800_471F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_471F:
	word16 di_55
	selector ds_56
	fn0800_ACB3(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], 0x0000, out di_55, out ds_56)
	Mem62[ss:fp - 0x0028:word16] = Mem0[ds_56:0x29E5:word16]
	Mem66[ss:fp - 0x002A:word16] = Mem62[ds_56:0x29E3:word16]
	word16 si_69
	word16 di_70
	selector ds_71
	word16 ax_72 = fn0800_3FAD(fp - 0x0002, ds_56, wArg00, wArg02, out si_69, out di_70, out ds_71)
	branch 0x0000 <u Mem66[ds_71:0x2A05:word16] l0800_4761
// DataOut: ax bp di ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4750:
	branch 0x0000 >u Mem66[ds_71:0x2A05:word16] l0800_4758
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4752:
	branch ax_72 + 0x0024 <=u Mem66[ds_71:0x2A03:word16] l0800_4761
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4761:
	Mem86[ss:fp - 0x0028:word16] = 0x0000
	Mem93[ss:fp - 0x002A:word16] = 0x0000
	Mem95[ss:fp - 0x002C:word16] = ax_72 + 0x0020
	Mem98[ss:fp - 0x002E:word16] = Mem95[ds_71:0x29E5:word16]
	Mem101[ss:fp - 0x0030:word16] = Mem98[ds_71:0x29E3:word16]
	word16 di_103
	selector ds_104
	word16 ax_105 = fn0800_ACB3(fp - 0x0002, ds_71, wArg00, wArg02, wArg08, out di_103, out ds_104)
	Mem110[ss:fp - 0x0028:word16] = Mem101[ds_104:0x29E5:word16]
	Mem113[ss:fp - 0x002A:word16] = Mem110[ds_104:0x29E3:word16]
	word16 di_114
	selector ds_115
	word16 dx_120
	word16 ax_121 = fn0800_8CAA(ax_105, 0x08, fn0800_3F58(fp - 0x0002, ds_104, wArg00, wArg02, out di_114, out ds_115), bp, out dx_120)
	branch dx_120 != 0x0052 l0800_4798
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4793:
	branch ax_121 == 0x4E43 l0800_47A1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47A1:
	Mem138[ss:fp - 0x0028:word16] = Mem113[ds_115:0x29E5:word16]
	Mem141[ss:fp - 0x002A:word16] = Mem138[ds_115:0x29E3:word16]
	byte dl_143
	word16 si_144
	word16 ax_145 = fn0800_AD2F(ds_115, ptrArg00, wArg02, out dl_143, out si_144)
	Mem147[ss:fp - 0x0008:word16] = dx_120
	Mem148[ss:fp - 0x000A:word16] = ax_145
	Mem153[ss:fp - 0x0028:word16] = 0x0000
	Mem156[ss:fp - 0x002A:word16] = 0x0000
	Mem158[ss:fp - 0x002C:word16] = 0x0002
	Mem161[ss:fp - 0x002E:word16] = Mem158[ds_115:0x29E5:word16]
	Mem164[ss:fp - 0x0030:word16] = Mem161[ds_115:0x29E3:word16]
	word16 di_165
	selector ds_166
	fn0800_ACB3(fp - 0x0002, ds_115, wArg00, wArg02, wArg08, out di_165, out ds_166)
	Mem172[ss:fp - 0x0028:word16] = Mem164[ds_166:0x29E5:word16]
	Mem175[ss:fp - 0x002A:word16] = Mem172[ds_166:0x29E3:word16]
	word16 si_176
	word16 di_177
	selector ds_178
	fn0800_3FAD(fp - 0x0002, ds_166, wArg00, wArg02, out si_176, out di_177, out ds_178)
	Mem185[ss:fp - 0x0028:word16] = Mem175[ds_178:0x29E5:word16]
	Mem188[ss:fp - 0x002A:word16] = Mem185[ds_178:0x29E3:word16]
	word16 si_189
	word16 di_190
	selector ds_191
	Mem194[ss:fp - 0x000C:word16] = fn0800_3FAD(fp - 0x0002, ds_178, wArg00, wArg02, out si_189, out di_190, out ds_191)
	branch di_190 == 0x0000 l0800_47F3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47F0:
	Mem558[ss:fp - 0x000C:word16] = Mem194[ss:fp - 0x000C:word16] - 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47F3:
	word16 dx_204
	word16 ax_206 = fn0800_8C69(Mem194[ss:fp - 0x000C:word16], 0x09, 0x0000, bp, out dx_204) + di_190
	Mem210[ss:fp - 0x0004:word16] = dx_204 + (ax_206 <u 0x0000)
	Mem211[ss:fp - 0x0006:word16] = ax_206
	Mem216[ss:fp - 0x0028:word16] = 0x0000
	Mem219[ss:fp - 0x002A:word16] = 0x0000
	Mem221[ss:fp - 0x002C:word16] = 0x0016
	Mem224[ss:fp - 0x002E:word16] = Mem221[ds_191:0x29E5:word16]
	Mem227[ss:fp - 0x0030:word16] = Mem224[ds_191:0x29E3:word16]
	word16 di_228
	selector ds_229
	fn0800_ACB3(fp - 0x0002, ds_191, wArg00, wArg02, wArg08, out di_228, out ds_229)
	Mem235[ss:fp - 0x0028:word16] = Mem227[ds_229:0x29E5:word16]
	Mem238[ss:fp - 0x002A:word16] = Mem235[ds_229:0x29E3:word16]
	word16 si_239
	word16 di_240
	selector ds_241
	fn0800_3FAD(fp - 0x0002, ds_229, wArg00, wArg02, out si_239, out di_240, out ds_241)
	Mem247[ss:fp - 0x0028:word16] = Mem238[ds_241:0x29E5:word16]
	Mem250[ss:fp - 0x002A:word16] = Mem247[ds_241:0x29E3:word16]
	word16 si_251
	word16 di_252
	selector ds_253
	Mem257[ss:fp - 0x001E:word16] = fn0800_3FAD(fp - 0x0002, ds_241, wArg00, wArg02, out si_251, out di_252, out ds_253)
	Mem260[ss:fp - 0x0028:word16] = Mem257[ds_253:0x29E5:word16]
	Mem263[ss:fp - 0x002A:word16] = Mem260[ds_253:0x29E3:word16]
	word16 si_264
	word16 di_265
	selector ds_266
	Mem270[ss:fp - 0x0020:word16] = fn0800_3FAD(fp - 0x0002, ds_253, wArg00, wArg02, out si_264, out di_265, out ds_266)
	Mem273[ss:fp - 0x0028:word16] = Mem270[ds_266:0x29E5:word16]
	Mem276[ss:fp - 0x002A:word16] = Mem273[ds_266:0x29E3:word16]
	word16 si_277
	word16 di_278
	selector ds_279
	Mem283[ss:fp - 0x0012:word16] = fn0800_3FAD(fp - 0x0002, ds_266, wArg00, wArg02, out si_277, out di_278, out ds_279)
	Mem286[ss:fp - 0x0028:word16] = Mem283[ds_279:0x29E5:word16]
	Mem289[ss:fp - 0x002A:word16] = Mem286[ds_279:0x29E3:word16]
	word16 si_290
	word16 di_291
	selector ds_292
	Mem296[ss:fp - 0x0014:word16] = fn0800_3FAD(fp - 0x0002, ds_279, wArg00, wArg02, out si_290, out di_291, out ds_292)
	Mem299[ss:fp - 0x0028:word16] = Mem296[ds_292:0x29E5:word16]
	Mem302[ss:fp - 0x002A:word16] = Mem299[ds_292:0x29E3:word16]
	word16 si_303
	word16 di_304
	selector ds_305
	Mem309[ss:fp - 0x001A:word16] = fn0800_3FAD(fp - 0x0002, ds_292, wArg00, wArg02, out si_303, out di_304, out ds_305)
	Mem312[ss:fp - 0x0028:word16] = Mem309[ds_305:0x29E5:word16]
	Mem315[ss:fp - 0x002A:word16] = Mem312[ds_305:0x29E3:word16]
	word16 si_316
	word16 di_317
	selector ds_318
	Mem322[ss:fp - 0x001C:word16] = fn0800_3FAD(fp - 0x0002, ds_305, wArg00, wArg02, out si_316, out di_317, out ds_318)
	Mem325[ss:fp - 0x0028:word16] = Mem322[ds_318:0x29E5:word16]
	Mem328[ss:fp - 0x002A:word16] = Mem325[ds_318:0x29E3:word16]
	word16 si_329
	word16 di_330
	selector ds_331
	Mem335[ss:fp - 0x0018:word16] = fn0800_3FAD(fp - 0x0002, ds_318, wArg00, wArg02, out si_329, out di_330, out ds_331)
	Mem338[ss:fp - 0x0028:word16] = Mem335[ds_331:0x29E5:word16]
	Mem341[ss:fp - 0x002A:word16] = Mem338[ds_331:0x29E3:word16]
	word16 si_342
	word16 di_343
	selector ds_344
	Mem348[ss:fp - 0x0016:word16] = fn0800_3FAD(fp - 0x0002, ds_331, wArg00, wArg02, out si_342, out di_343, out ds_344)
	Mem351[ss:fp - 0x0028:word16] = Mem348[ds_344:0x29E1:word16]
	Mem354[ss:fp - 0x002A:word16] = Mem351[ds_344:0x29DF:word16]
	Mem357[ss:fp - 0x002C:word16] = 0x4D5A
	word16 si_359
	selector ds_360
	fn0800_401E(fp - 0x0002, ds_344, wArg00, wArg02, wArg04, out si_359, out ds_360)
	Mem365[ss:fp - 0x0028:word16] = Mem357[ds_360:0x29E1:word16]
	Mem368[ss:fp - 0x002A:word16] = Mem365[ds_360:0x29DF:word16]
	Mem373[ss:fp - 0x002C:word16] = 0x0000
	Mem375[ss:fp - 0x002E:word16] = 0x0000
	word16 si_377
	selector ds_378
	fn0800_409C(fp - 0x0002, ds_360, wArg02, wArg04, wArg06, out si_377, out ds_378)
	Mem383[ss:fp - 0x0028:word16] = Mem375[ds_378:0x29E1:word16]
	Mem386[ss:fp - 0x002A:word16] = Mem383[ds_378:0x29DF:word16]
	Mem391[ss:fp - 0x002C:word16] = 0x0000
	Mem393[ss:fp - 0x002E:word16] = 0x0000
	word16 si_394
	selector ds_395
	fn0800_409C(fp - 0x0002, ds_378, wArg02, wArg04, wArg06, out si_394, out ds_395)
	Mem401[ss:fp - 0x0028:word16] = Mem393[ds_395:0x29E1:word16]
	Mem404[ss:fp - 0x002A:word16] = Mem401[ds_395:0x29DF:word16]
	Mem407[ss:fp - 0x002C:word16] = Mem404[ss:fp - 0x0012:word16]
	selector ds_409
	fn0800_40BF(fp - 0x0002, ds_395, bArg00, wArg02, wArg04, out ds_409)
	Mem415[ss:fp - 0x0028:word16] = Mem407[ds_409:0x29E1:word16]
	Mem418[ss:fp - 0x002A:word16] = Mem415[ds_409:0x29DF:word16]
	Mem421[ss:fp - 0x002C:word16] = Mem418[ss:fp - 0x0014:word16]
	selector ds_422
	fn0800_40BF(fp - 0x0002, ds_409, bArg00, wArg02, wArg04, out ds_422)
	Mem428[ss:fp - 0x0028:word16] = Mem421[ds_422:0x29E1:word16]
	Mem431[ss:fp - 0x002A:word16] = Mem428[ds_422:0x29DF:word16]
	Mem434[ss:fp - 0x002C:word16] = Mem431[ss:fp - 0x0016:word16]
	selector ds_435
	fn0800_40BF(fp - 0x0002, ds_422, bArg00, wArg02, wArg04, out ds_435)
	Mem441[ss:fp - 0x0028:word16] = Mem434[ds_435:0x29E1:word16]
	Mem444[ss:fp - 0x002A:word16] = Mem441[ds_435:0x29DF:word16]
	Mem447[ss:fp - 0x002C:word16] = Mem444[ss:fp - 0x0018:word16]
	selector ds_448
	fn0800_40BF(fp - 0x0002, ds_435, bArg00, wArg02, wArg04, out ds_448)
	Mem453[ss:fp - 0x0028:word16] = Mem447[ds_448:0x29E1:word16]
	Mem456[ss:fp - 0x002A:word16] = Mem453[ds_448:0x29DF:word16]
	Mem461[ss:fp - 0x002C:word16] = 0x0000
	word16 si_462
	selector ds_463
	fn0800_401E(fp - 0x0002, ds_448, wArg00, wArg02, wArg04, out si_462, out ds_463)
	Mem469[ss:fp - 0x0028:word16] = Mem461[ds_463:0x29E1:word16]
	Mem472[ss:fp - 0x002A:word16] = Mem469[ds_463:0x29DF:word16]
	Mem475[ss:fp - 0x002C:word16] = Mem472[ss:fp - 0x001A:word16]
	selector ds_476
	fn0800_40BF(fp - 0x0002, ds_463, bArg00, wArg02, wArg04, out ds_476)
	Mem482[ss:fp - 0x0028:word16] = Mem475[ds_476:0x29E1:word16]
	Mem485[ss:fp - 0x002A:word16] = Mem482[ds_476:0x29DF:word16]
	Mem488[ss:fp - 0x002C:word16] = Mem485[ss:fp - 0x001C:word16]
	selector ds_489
	fn0800_40BF(fp - 0x0002, ds_476, bArg00, wArg02, wArg04, out ds_489)
	Mem495[ss:fp - 0x0028:word16] = Mem488[ds_489:0x29E1:word16]
	Mem498[ss:fp - 0x002A:word16] = Mem495[ds_489:0x29DF:word16]
	Mem501[ss:fp - 0x002C:word16] = 0x001E
	selector ds_502
	fn0800_40BF(fp - 0x0002, ds_489, bArg00, wArg02, wArg04, out ds_502)
	Mem508[ss:fp - 0x0028:word16] = Mem501[ds_502:0x29E1:word16]
	Mem511[ss:fp - 0x002A:word16] = Mem508[ds_502:0x29DF:word16]
	Mem514[ss:fp - 0x002C:word16] = Mem511[ss:fp - 0x0020:word16]
	selector ds_515
	fn0800_40BF(fp - 0x0002, ds_502, bArg00, wArg02, wArg04, out ds_515)
	Mem520[ss:fp - 0x0028:word16] = Mem514[ds_515:0x29E1:word16]
	Mem523[ss:fp - 0x002A:word16] = Mem520[ds_515:0x29DF:word16]
	Mem528[ss:fp - 0x002C:word16] = 0x0000
	word16 si_529
	selector ds_530
	fn0800_401E(fp - 0x0002, ds_515, wArg00, wArg02, wArg04, out si_529, out ds_530)
	Mem535[ss:fp - 0x0028:word16] = 0x0000
	word16 ax_536 = Mem535[ss:fp - 0x001E:word16]
	Mem542[ss:fp - 0x002A:word16] = 0x0000
	Mem544[ss:fp - 0x002C:word16] = ax_536 + 0x0020
	Mem547[ss:fp - 0x002E:word16] = Mem544[ds_530:0x29E5:word16]
	Mem550[ss:fp - 0x0030:word16] = Mem547[ds_530:0x29E3:word16]
	word16 di_551
	selector ds_552
	fn0800_ACB3(fp - 0x0002, ds_530, wArg00, wArg02, wArg08, out di_551, out ds_552)
	Mem556[ss:fp - 0x000E:word16] = 0x0000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_4798:
	return ds_115
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4758:
	return ds_71
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4716:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp

fn0800_46FE_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0007 di:<invalid> si:<invalid> dx:<invalid> ah:0x00 cl:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:0x07 ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp



void fn0800_49B5(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
l0800_49B5:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn:

l0800_49B0_thunk_fn0800_49B5:
	fn0800_49B5(bp, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_49B5_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_49B5:
	word16 dx_13
	word16 di_14
	selector ds_15
	word16 ax_19 = DPB(fn0800_3DCF(bp, ds, DPB(ptrLoc04, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out dx_13, out di_14, out ds_15), 0x00, 8)
	branch ax_19 == 0x0000 l0800_49C9_thunk_fn0800_4A22
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_49C9_thunk_fn0800_4A22:
	fn0800_4A22(bp, ax_19, ds_15)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:0x00 di:<invalid> es:<invalid> bx:<invalid> ax:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_49CB:
	Mem34[ss:fp - 0x0002:word16] = Mem0[ds_15:0x29E5:word16]
	Mem38[ss:fp - 0x0004:word16] = Mem34[ds_15:0x29E3:word16]
	word16 si_41
	word16 di_42
	selector ds_43
	Mem46[ss:bp - 0x0020:word16] = fn0800_3FAD(bp, ds_15, wArg00, wArg02, out si_41, out di_42, out ds_43)
	Mem50[ss:bp - 0x000A:word16] = di_42
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:0x00 di:<invalid> es:<invalid> bx:<invalid> ax:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_49DE_thunk_fn0800_4A15:
	fn0800_4A15(bp, di_42, ds_43)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> di:<invalid> cl:0x08 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_49B5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> di:<invalid> cl:<invalid> ax:<invalid> si:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_49F6(word16 cx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z bp cx di ds si ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_49F6_entry:
// DataOut: bp cx di ds si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_49F6:
	branch Z && cx != 0x0001 l0800_49F6_thunk_fn0800_4A22
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_49F6_thunk_fn0800_4A22:
	fn0800_4A22(bp, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:cx - 0x0001

l0800_49F9:
	selector ds_23
	fn0800_40BF(bp, ds, (byte) si, Mem0[ds:0x29DF:word16], wArg00, out ds_23)
	Mem29[ss:fp:word16] = Mem0[ds_23:0x29E1:word16]
	Mem33[ss:fp - 0x0002:word16] = Mem29[ds_23:0x29DF:word16]
	Mem36[ss:fp - 0x0004:word16] = Mem33[ss:bp - 0x0020:word16]
	selector ds_40
	word16 di_41 = fn0800_40BF(bp, ds_23, bArg00, wArg02, wArg04, out ds_40)
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp cx:cx - 0x0001

l0800_4A12_thunk_fn0800_4A15:
	fn0800_4A15(bp, di_41, ds_40)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_49F6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> si:<invalid> di:<invalid> es:<invalid> bx:<invalid> dx:<invalid> bp:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>



void fn0800_4A15(word16 bp, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4A15_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4A15:
	word16 ax_5 = Mem0[ss:bp - 0x000A:word16]
	Mem7[ss:bp - 0x000A:word16] = Mem0[ss:bp - 0x000A:word16] - 0x0001
	branch ax_5 != 0x0000 l0800_49E3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_49E3:
	word16 dx_41
	word16 di_42
	selector ds_43
	word16 si_48 = si + DPB(fn0800_3DCF(bp, ds, DPB(ptrLoc04, Mem7[ds:0x29E3:word16], 0), Mem7[ds:0x29E5:word16], out dx_41, out di_42, out ds_43), 0x00, 8)
	Mem52[ss:fp - 0x0002:word16] = Mem7[ds_43:0x29E1:word16]
	Mem55[ss:fp - 0x0004:word16] = Mem52[ds_43:0x29DF:word16]
	Mem57[ss:fp - 0x0006:word16] = si_48
	selector ds_61
	fn0800_40BF(bp, ds_43, bArg00, wArg02, wArg04, out ds_61)
	Mem67[ss:fp - 0x0002:word16] = Mem57[ds_61:0x29E1:word16]
	Mem70[ss:fp - 0x0004:word16] = Mem67[ds_61:0x29DF:word16]
	Mem73[ss:fp - 0x0006:word16] = Mem70[ss:bp - 0x0020:word16]
	selector ds_74
	word16 di_75 = fn0800_40BF(bp, ds_61, bArg00, wArg02, wArg04, out ds_74)
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_4A12_thunk_fn0800_4A15:
	fn0800_4A15(bp, di_75, ds_74)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> si:<invalid> al:<invalid> cl:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> dl:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4A1F:
	Mem25[ss:bp - 0x000C:word16] = Mem7[ss:bp - 0x000C:word16] + di
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_4A1F_thunk_fn0800_4A22:
	fn0800_4A22(bp, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

fn0800_4A15_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> si:<invalid> al:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_4A22(word16 bp, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di sp
fn0800_4A22_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4A22:
	branch di != 0x0000 l0800_4A24_thunk_fn0800_49B5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4A24_thunk_fn0800_49B5:
	fn0800_49B5(bp, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

l0800_4A26:
	word16 di_298
	word16 dx_316
	word16 v8_28 = Mem0[ds:0x29E1:word16]
	byte dl_36
	word16 si_37
	word16 ax_38 = fn0800_AD2F(ds, DPB(ptrLoc04, Mem0[ds:0x29DF:word16], 0), v8_28, out dl_36, out si_37)
	branch dx > 0x0000 l0800_4A56
// DataOut: ax ds sp ss
// DataOut (flags): SO
// SymbolicIn: sp:fp di:di
// LocalsOut: Local -0002(16)

l0800_4A38:
	branch dx < 0x0000 l0800_4A3F
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:di dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4A3A:
	branch ax_38 >=u 0x0200 l0800_4A56
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:di dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4A56:
	Mem306[ss:fp - 0x0002:word16] = Mem0[ds:0x29E1:word16]
	Mem309[ss:fp - 0x0004:word16] = Mem306[ds:0x29DF:word16]
	byte dl_310
	word16 si_311
	word16 dx_315 = 0x0010 - fn0800_AD2F(ds, ptrArg00, wArg02, out dl_310, out si_311)
	dx_316 = dx_315 & 0x000F
	di_298 = dx_315 & 0x000F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:di dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4A3F:
	Mem323[ss:fp - 0x0002:word16] = Mem0[ds:0x29E1:word16]
	Mem326[ss:fp - 0x0004:word16] = Mem323[ds:0x29DF:word16]
	byte dl_327
	word16 si_328
	dx_316 = 0x0200 - fn0800_AD2F(ds, ptrArg00, wArg02, out dl_327, out si_328)
	di_298 = dx_316
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:di dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4A81:
	branch di_298 != 0x0000 l0800_4A70
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> dx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4A70:
	Mem289[ss:fp - 0x0002:word16] = Mem0[ds:0x29E1:word16]
	Mem292[ss:fp - 0x0004:word16] = Mem289[ds:0x29DF:word16]
	Mem296[ss:fp - 0x0006:word16] = DPB(di_298, 0x00, 0)
	fn0800_4047(bp, ds, bArg00, ptrArg02, wArg04, out di_298, out ds)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> dx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4A88:
	Mem65[ss:fp - 0x0002:word16] = Mem0[ds:0x29E1:word16]
	Mem69[ss:fp - 0x0004:word16] = Mem65[ds:0x29DF:word16]
	byte dl_72
	word16 si_73
	word16 dx_78
	Mem80[ss:bp - 0x000E:word16] = fn0800_8C8A(fn0800_AD2F(ds, ptrArg00, wArg02, out dl_72, out si_73), 0x04, dx_316, v8_28, out dx_78)
	Mem86[ss:fp - 0x0002:word16] = 0x0000
	Mem89[ss:fp - 0x0004:word16] = Mem86[ss:bp - 0x0006:word16]
	Mem92[ss:fp - 0x0006:word16] = Mem89[ss:bp - 0x0008:word16]
	Mem95[ss:fp - 0x0008:word16] = Mem92[ds:0x29E5:word16]
	Mem98[ss:fp - 0x000A:word16] = Mem95[ds:0x29E3:word16]
	word16 di_101
	selector ds_102
	fn0800_ACB3(bp, ds, wArg00, wArg02, wArg08, out di_101, out ds_102)
	selector ds_106
	word16 ax_107 = fn0800_5374(bp, ds_102, out ds_106)
	branch ax_107 == 0x0000 l0800_4AC4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> dx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4AC4:
	Mem121[ss:fp - 0x0002:word16] = Mem98[ds_106:0x29E1:word16]
	Mem124[ss:fp - 0x0004:word16] = Mem121[ds_106:0x29DF:word16]
	byte dl_125
	word16 si_126
	word16 ax_127 = fn0800_AD2F(ds_106, ptrArg00, wArg02, out dl_125, out si_126)
	Mem129[ss:bp - 0x0006:word16] = ax_107
	Mem130[ss:bp - 0x0008:word16] = ax_127
	Mem135[ss:fp - 0x0002:word16] = 0x0000
	Mem138[ss:fp - 0x0004:word16] = Mem135[ss:bp - 0x0002:word16]
	Mem141[ss:fp - 0x0006:word16] = Mem138[ss:bp - 0x0004:word16]
	Mem144[ss:fp - 0x0008:word16] = Mem141[ds_106:0x29E5:word16]
	Mem147[ss:fp - 0x000A:word16] = Mem144[ds_106:0x29E3:word16]
	word16 di_148
	selector ds_149
	fn0800_ACB3(bp, ds_106, wArg00, wArg02, wArg08, out di_148, out ds_149)
	Mem155[ss:fp - 0x0002:word16] = Mem147[ds_149:0x29E5:word16]
	Mem158[ss:fp - 0x0004:word16] = Mem155[ds_149:0x29E3:word16]
	word16 si_159
	selector ds_160
	word16 ax_163 = fn0800_4194(bp, ds_149, wArg00, wArg02, out si_159, out ds_160) - Mem158[ss:bp - 0x0004:word16]
	Mem169[ss:fp - 0x0002:word16] = ax_107 - Mem158[ss:bp - 0x0002:word16] - (ax_163 <u 0x0000)
	Mem171[ss:fp - 0x0004:word16] = ax_163
	Mem174[ss:fp - 0x0006:word16] = Mem171[ds_160:0x29E1:word16]
	Mem177[ss:fp - 0x0008:word16] = Mem174[ds_160:0x29DF:word16]
	Mem180[ss:fp - 0x000A:word16] = Mem177[ds_160:0x29E5:word16]
	Mem183[ss:fp - 0x000C:word16] = Mem180[ds_160:0x29E3:word16]
	selector ds_185
	word16 bp_186 = fn0800_3B0A(bp, ds_160, wArg08, wArg0A, out ds_185)
	word16 di_188 = Mem183[ss:bp_186 - 0x0008:word16]
	word16 dx_195
	Mem197[ss:bp_186 - 0x000A:word16] = fn0800_8CAA(Mem183[ss:bp_186 - 0x0008:word16], 0x09, Mem183[ss:bp_186 - 0x0006:word16], v8_28, out dx_195)
	branch (di_188 & 0x01FF) == 0x0000 l0800_4B37
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4B34:
	Mem285[ss:bp_186 - 0x000A:word16] = Mem197[ss:bp_186 - 0x000A:word16] + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_4B37:
	Mem206[ss:fp - 0x0002:word16] = 0x0000
	Mem209[ss:fp - 0x0004:word16] = 0x0000
	Mem211[ss:fp - 0x0006:word16] = 0x0002
	Mem214[ss:fp - 0x0008:word16] = Mem211[ds_185:0x29E1:word16]
	Mem217[ss:fp - 0x000A:word16] = Mem214[ds_185:0x29DF:word16]
	word16 di_218
	selector ds_219
	fn0800_ACB3(bp_186, ds_185, wArg00, wArg02, wArg08, out di_218, out ds_219)
	Mem225[ss:fp - 0x0002:word16] = Mem217[ds_219:0x29E1:word16]
	Mem228[ss:fp - 0x0004:word16] = Mem225[ds_219:0x29DF:word16]
	Mem230[ss:fp - 0x0006:word16] = di_218
	selector ds_233
	fn0800_40BF(bp_186, ds_219, bArg00, wArg02, wArg04, out ds_233)
	Mem239[ss:fp - 0x0002:word16] = Mem230[ds_233:0x29E1:word16]
	Mem242[ss:fp - 0x0004:word16] = Mem239[ds_233:0x29DF:word16]
	Mem245[ss:fp - 0x0006:word16] = Mem242[ss:bp_186 - 0x000A:word16]
	selector ds_246
	fn0800_40BF(bp_186, ds_233, bArg00, wArg02, wArg04, out ds_246)
	Mem252[ss:fp - 0x0002:word16] = Mem245[ds_246:0x29E1:word16]
	Mem255[ss:fp - 0x0004:word16] = Mem252[ds_246:0x29DF:word16]
	Mem258[ss:fp - 0x0006:word16] = Mem255[ss:bp_186 - 0x000C:word16]
	selector ds_259
	fn0800_40BF(bp_186, ds_246, bArg00, wArg02, wArg04, out ds_259)
	Mem265[ss:fp - 0x0002:word16] = Mem258[ds_259:0x29E1:word16]
	Mem268[ss:fp - 0x0004:word16] = Mem265[ds_259:0x29DF:word16]
	Mem271[ss:fp - 0x0006:word16] = Mem268[ss:bp_186 - 0x000E:word16]
	selector ds_272
	fn0800_40BF(bp_186, ds_259, bArg00, wArg02, wArg04, out ds_272)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4ABE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4A22_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> si:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> bp:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_4B97(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4B97_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4B97:
	selector ds_11
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_11) != 0x0000 l0800_4BAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4BAD:
	selector ds_22
	fn0800_5374(bp, ds_11, out ds_22)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BA9:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4B97_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_4BB1(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4BB1_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4BB1:
	selector ds_11
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_11) != 0x0000 l0800_4BC7
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4BC7:
	Mem38[ss:fp - 0x0002:word16] = 0x0001
	Mem43[ss:fp - 0x0004:word16] = 0xFFFF
	Mem45[ss:fp - 0x0006:word16] = 0xFFEE
	Mem48[ss:fp - 0x0008:word16] = Mem45[ds_11:0x29E5:word16]
	Mem51[ss:fp - 0x000A:word16] = Mem48[ds_11:0x29E3:word16]
	word16 di_55
	selector ds_56
	fn0800_ACB3(bp, ds_11, wArg00, wArg02, wArg08, out di_55, out ds_56)
	Mem62[ss:fp - 0x0002:word16] = Mem51[ds_56:0x29E1:word16]
	Mem65[ss:fp - 0x0004:word16] = Mem62[ds_56:0x29DF:word16]
	Mem68[ss:fp - 0x0006:word16] = 0x601A
	word16 si_70
	selector ds_71
	fn0800_401E(bp, ds_56, wArg00, wArg02, wArg04, out si_70, out ds_71)
	Mem79[ss:fp - 0x0002:word16] = 0x0000
	Mem81[ss:fp - 0x0004:word16] = 0x0010
	Mem84[ss:fp - 0x0006:word16] = Mem81[ds_71:0x29E1:word16]
	Mem87[ss:fp - 0x0008:word16] = Mem84[ds_71:0x29DF:word16]
	Mem90[ss:fp - 0x000A:word16] = Mem87[ds_71:0x29E5:word16]
	Mem93[ss:fp - 0x000C:word16] = Mem90[ds_71:0x29E3:word16]
	selector ds_95
	word16 bp_96 = fn0800_3B0A(bp, ds_71, wArg08, wArg0A, out ds_95)
	Mem100[ss:fp - 0x0002:word16] = Mem93[ds_95:0x29E1:word16]
	Mem103[ss:fp - 0x0004:word16] = Mem100[ds_95:0x29DF:word16]
	Mem108[ss:fp - 0x0006:word16] = 0x0000
	Mem110[ss:fp - 0x0008:word16] = 0x0000
	word16 si_112
	selector ds_113
	fn0800_409C(bp_96, ds_95, wArg02, wArg04, wArg06, out si_112, out ds_113)
	Mem118[ss:fp - 0x0002:word16] = Mem110[ds_113:0x29E1:word16]
	Mem121[ss:fp - 0x0004:word16] = Mem118[ds_113:0x29DF:word16]
	Mem126[ss:fp - 0x0006:word16] = 0x0000
	Mem128[ss:fp - 0x0008:word16] = 0x0000
	word16 si_129
	selector ds_130
	fn0800_409C(bp_96, ds_113, wArg02, wArg04, wArg06, out si_129, out ds_130)
	Mem137[ss:fp - 0x0002:word16] = Mem128[ds_130:0x29E1:word16]
	Mem140[ss:fp - 0x0004:word16] = Mem137[ds_130:0x29DF:word16]
	Mem143[ss:fp - 0x0006:word16] = Mem140[ds_130:0x29E5:word16]
	Mem146[ss:fp - 0x0008:word16] = Mem143[ds_130:0x29E3:word16]
	word16 dx_147
	word16 si_148
	word16 di_149
	selector ds_150
	Mem155[ss:fp - 0x0006:word16] = fn0800_3E27(bp_96, ds_130, wArg00, wArg02, out dx_147, out si_148, out di_149, out ds_150)
	word16 si_156
	selector ds_157
	fn0800_401E(bp_96, ds_150, wArg00, wArg02, wArg04, out si_156, out ds_157)
	selector ds_161
	fn0800_5374(bp_96, ds_157, out ds_161)
	return bp_96
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BC3:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4BB1_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bp:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_4C55(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
fn0800_4C55_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4C55:
	selector ds_16
	branch fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_16) != 0x0000 l0800_4C72
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4C6D:
	branch ax == 0x03F3 l0800_4C79
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4C79:
	Mem61[ss:fp - 0x001C:word16] = Mem0[ds_16:0x29E1:word16]
	Mem64[ss:fp - 0x001E:word16] = Mem61[ds_16:0x29DF:word16]
	Mem70[ss:fp - 0x0020:word16] = 0x0000
	Mem72[ss:fp - 0x0022:word16] = 0x03F3
	word16 si_76
	selector ds_114
	fn0800_409C(fp - 0x0002, ds_16, wArg02, wArg04, wArg06, out si_76, out ds_114)
	word16 ax_135 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4C8E:
	Mem89[ss:fp - 0x001C:word16] = Mem72[ds_114:0x29E5:word16]
	Mem92[ss:fp - 0x001E:word16] = Mem89[ds_114:0x29E3:word16]
	selector ds_94
	word16 dx_95 = fn0800_3E5D(fp - 0x0002, ds_114, wArg00, wArg02, out ds_94)
	Mem98[ss:fp - 0x0008:word16] = dx_95
	Mem99[ss:fp - 0x000A:word16] = ax_135
	Mem100[ss:fp - 0x0004:word16] = dx_95
	Mem101[ss:fp - 0x0006:word16] = ax_135
	Mem104[ss:fp - 0x001C:word16] = Mem101[ds_94:0x29E1:word16]
	Mem107[ss:fp - 0x001E:word16] = Mem104[ds_94:0x29DF:word16]
	Mem110[ss:fp - 0x0020:word16] = Mem107[ss:fp - 0x0004:word16]
	Mem112[ss:fp - 0x0022:word16] = ax_135
	word16 si_113
	fn0800_409C(fp - 0x0002, ds_94, wArg02, wArg04, wArg06, out si_113, out ds_114)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CDA:
	word16 ax_122 = Mem112[ss:fp - 0x000A:word16]
	word16 dx_123 = Mem112[ss:fp - 0x0008:word16]
	word16 v21_124 = Mem112[ss:fp - 0x000A:word16] - 0x0001
	Mem125[ss:fp - 0x000A:word16] = v21_124
	Mem129[ss:fp - 0x0008:word16] = Mem125[ss:fp - 0x0008:word16] - (v21_124 <u 0x0000)
	word16 ax_130 = ax_122 | dx_123
	branch ax_130 != 0x0000 l0800_4CBC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CBC:
	Mem507[ss:fp - 0x001C:word16] = Mem129[ds_114:0x29E1:word16]
	Mem510[ss:fp - 0x001E:word16] = Mem507[ds_114:0x29DF:word16]
	Mem513[ss:fp - 0x0020:word16] = Mem510[ds_114:0x29E5:word16]
	Mem516[ss:fp - 0x0022:word16] = Mem513[ds_114:0x29E3:word16]
	selector ds_517
	Mem522[ss:fp - 0x0020:word16] = fn0800_3E5D(fp - 0x0002, ds_114, wArg00, wArg02, out ds_517)
	Mem524[ss:fp - 0x0022:word16] = ax_130
	word16 si_525
	fn0800_409C(fp - 0x0002, ds_517, wArg02, wArg04, wArg06, out si_525, out ds_114)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CEC:
	ax_135 = Mem129[ss:fp - 0x0006:word16] | Mem129[ss:fp - 0x0004:word16]
	branch ax_135 != 0x0000 l0800_4C8E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CF4:
	Mem141[ss:fp - 0x001C:word16] = Mem129[ds_114:0x29E1:word16]
	Mem144[ss:fp - 0x001E:word16] = Mem141[ds_114:0x29DF:word16]
	Mem147[ss:fp - 0x0020:word16] = Mem144[ds_114:0x29E5:word16]
	Mem150[ss:fp - 0x0022:word16] = Mem147[ds_114:0x29E3:word16]
	selector ds_151
	ui32 dx_ax_155 = SEQ(fn0800_3E5D(fp - 0x0002, ds_114, wArg00, wArg02, out ds_151), ax_135 - 0x0001)
	Mem162[ss:fp - 0x0020:word16] = SLICE(dx_ax_155 - 0x00000001, word16, 16)
	word16 ax_159 = (word16) (dx_ax_155 - 0x00000001)
	Mem164[ss:fp - 0x0022:word16] = ax_159
	word16 si_165
	selector ds_166
	fn0800_409C(fp - 0x0002, ds_151, wArg02, wArg04, wArg06, out si_165, out ds_166)
	Mem172[ss:fp - 0x001C:word16] = Mem164[ds_166:0x29E5:word16]
	Mem175[ss:fp - 0x001E:word16] = Mem172[ds_166:0x29E3:word16]
	selector ds_176
	Mem180[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_166, wArg00, wArg02, out ds_176)
	Mem181[ss:fp - 0x000E:word16] = ax_159
	Mem184[ss:fp - 0x001C:word16] = Mem181[ds_176:0x29E5:word16]
	Mem187[ss:fp - 0x001E:word16] = Mem184[ds_176:0x29E3:word16]
	selector ds_188
	Mem191[ss:fp - 0x0010:word16] = fn0800_3E5D(fp - 0x0002, ds_176, wArg00, wArg02, out ds_188)
	Mem192[ss:fp - 0x0012:word16] = ax_159
	word16 dx_195 = Mem192[ss:fp - 0x0012:word16] - Mem192[ss:fp - 0x000E:word16]
	Mem200[ss:fp - 0x0014:word16] = Mem192[ss:fp - 0x0010:word16] - Mem192[ss:fp - 0x000C:word16] - (dx_195 <u 0x0000)
	Mem201[ss:fp - 0x0016:word16] = dx_195
	Mem204[ss:fp - 0x001C:word16] = Mem201[ds_188:0x29E1:word16]
	Mem207[ss:fp - 0x001E:word16] = Mem204[ds_188:0x29DF:word16]
	Mem210[ss:fp - 0x0020:word16] = Mem207[ss:fp - 0x000C:word16]
	Mem213[ss:fp - 0x0022:word16] = Mem210[ss:fp - 0x000E:word16]
	word16 si_214
	selector ds_215
	fn0800_409C(fp - 0x0002, ds_188, wArg02, wArg04, wArg06, out si_214, out ds_215)
	Mem220[ss:fp - 0x001C:word16] = Mem213[ds_215:0x29E1:word16]
	Mem223[ss:fp - 0x001E:word16] = Mem220[ds_215:0x29DF:word16]
	ui32 ax_dx_227 = SEQ(Mem223[ss:fp - 0x0010:word16], Mem223[ss:fp - 0x0012:word16] - 0x0001)
	Mem234[ss:fp - 0x0020:word16] = SLICE(ax_dx_227 - 0x00000001, word16, 16)
	word16 dx_231 = (word16) (ax_dx_227 - 0x00000001)
	Mem236[ss:fp - 0x0022:word16] = dx_231
	word16 si_237
	selector ds_238
	word16 dx_240 = DPB(dx_231, fn0800_409C(fp - 0x0002, ds_215, wArg02, wArg04, wArg06, out si_237, out ds_238), 0)
	Mem245[ss:fp - 0x001C:word16] = Mem236[ds_238:0x29E1:word16]
	Mem248[ss:fp - 0x001E:word16] = Mem245[ds_238:0x29DF:word16]
	byte dl_250
	word16 si_251
	word16 ax_252 = fn0800_AD2F(ds_238, ptrArg00, wArg02, out dl_250, out si_251)
	Mem254[ds_238:0x4E8E:word16] = dx_240
	Mem255[ds_238:0x4E8C:word16] = ax_252
	Mem258[ss:fp - 0x001C:word16] = 0x0001
	Mem264[ss:fp - 0x001E:word16] = 0x0000
	Mem266[ss:fp - 0x0020:word16] = 0x0004
	Mem269[ss:fp - 0x0022:word16] = Mem266[ds_238:0x29E5:word16]
	Mem272[ss:fp - 0x0024:word16] = Mem269[ds_238:0x29E3:word16]
	word16 di_274
	selector ds_275
	fn0800_ACB3(fp - 0x0002, ds_238, wArg00, wArg02, wArg08, out di_274, out ds_275)
	word16 dx_280 = Mem272[ss:fp - 0x0016:word16]
	Mem281[ss:fp - 0x0004:word16] = Mem272[ss:fp - 0x0014:word16]
	Mem282[ss:fp - 0x0006:word16] = dx_280
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DE4:
	word16 ax_290 = Mem282[ss:fp - 0x0006:word16] | Mem282[ss:fp - 0x0004:word16]
	branch ax_290 != 0x0000 l0800_4DBE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DBE:
	Mem476[ss:fp - 0x001C:word16] = Mem282[ds_275:0x29E1:word16]
	Mem479[ss:fp - 0x001E:word16] = Mem476[ds_275:0x29DF:word16]
	Mem482[ss:fp - 0x0020:word16] = Mem479[ds_275:0x29E5:word16]
	Mem485[ss:fp - 0x0022:word16] = Mem482[ds_275:0x29E3:word16]
	selector ds_486
	Mem491[ss:fp - 0x0020:word16] = fn0800_3E5D(fp - 0x0002, ds_275, wArg00, wArg02, out ds_486)
	Mem493[ss:fp - 0x0022:word16] = ax_290
	word16 si_494
	fn0800_409C(fp - 0x0002, ds_486, wArg02, wArg04, wArg06, out si_494, out ds_275)
	word16 v56_498 = Mem493[ss:fp - 0x0006:word16] - 0x0001
	Mem499[ss:fp - 0x0006:word16] = v56_498
	Mem503[ss:fp - 0x0004:word16] = Mem499[ss:fp - 0x0004:word16] - (v56_498 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DEC:
	Mem296[ss:fp - 0x001C:word16] = 0x0001
	Mem302[ss:fp - 0x001E:word16] = 0x0000
	Mem304[ss:fp - 0x0020:word16] = 0x0004
	Mem307[ss:fp - 0x0022:word16] = Mem304[ds_275:0x29E5:word16]
	Mem310[ss:fp - 0x0024:word16] = Mem307[ds_275:0x29E3:word16]
	word16 di_311
	selector ds_312
	word16 ax_313 = fn0800_ACB3(fp - 0x0002, ds_275, wArg00, wArg02, wArg08, out di_311, out ds_312)
	Mem318[ss:fp - 0x001C:word16] = Mem310[ds_312:0x29E5:word16]
	Mem321[ss:fp - 0x001E:word16] = Mem318[ds_312:0x29E3:word16]
	selector ds_322
	ui32 dx_ax_326 = SEQ(fn0800_3E5D(fp - 0x0002, ds_312, wArg00, wArg02, out ds_322), ax_313 + 0x0001)
	Mem332[ss:fp - 0x0004:word16] = SLICE(dx_ax_326 + 0x00000001, word16, 16)
	Mem333[ss:fp - 0x0006:word16] = (word16) (dx_ax_326 + 0x00000001)
	Mem336[ss:fp - 0x001C:word16] = 0x0001
	word16 dx_340
	word16 ax_341 = fn0800_8C69(Mem336[ss:fp - 0x0006:word16], 0x02, Mem336[ss:fp - 0x0004:word16], bp, out dx_340)
	Mem343[ss:fp - 0x001E:word16] = dx_340
	Mem345[ss:fp - 0x0020:word16] = ax_341
	Mem348[ss:fp - 0x0022:word16] = Mem345[ds_322:0x29E5:word16]
	Mem351[ss:fp - 0x0024:word16] = Mem348[ds_322:0x29E3:word16]
	word16 di_352
	selector ds_353
	fn0800_ACB3(fp - 0x0002, ds_322, wArg00, wArg02, wArg08, out di_352, out ds_353)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4EDE:
	Mem359[ss:fp - 0x001C:word16] = Mem351[ds_353:0x29E5:word16]
	Mem362[ss:fp - 0x001E:word16] = Mem359[ds_353:0x29E3:word16]
	byte dl_363
	word16 si_364
	Mem369[ss:fp - 0x001C:word16] = fn0800_AD2F(ds_353, ptrArg00, wArg02, out dl_363, out si_364)
	Mem371[ss:fp - 0x001E:word16] = dx_340
	Mem374[ss:fp - 0x0020:word16] = Mem371[ds_353:0x29E5:word16]
	Mem377[ss:fp - 0x0022:word16] = Mem374[ds_353:0x29E3:word16]
	word16 si_378
	selector ds_379
	word16 ax_380 = fn0800_4194(fp - 0x0002, ds_353, wArg00, wArg02, out si_378, out ds_379)
	word16 bx_382 = Mem377[ss:fp - 0x001E:word16]
	word16 dx_388 = Mem377[ss:fp - 0x001C:word16]
	branch bx_382 >=u dx_340 l0800_4F05
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F05:
	branch bx_382 != dx_340 l0800_4F0E
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F07:
	branch dx_388 >=u ax_380 l0800_4F0E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F0E:
	return ds_379
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4F0B:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4E41:
	Mem395[ss:fp - 0x001C:word16] = Mem377[ds_379:0x29E5:word16]
	Mem398[ss:fp - 0x001E:word16] = Mem395[ds_379:0x29E3:word16]
	selector ds_399
	Mem403[ss:fp - 0x0008:word16] = fn0800_3E5D(fp - 0x0002, ds_379, wArg00, wArg02, out ds_399)
	Mem404[ss:fp - 0x000A:word16] = ax_380
	Mem407[ss:fp - 0x001C:word16] = Mem404[ds_399:0x29E1:word16]
	Mem410[ss:fp - 0x001E:word16] = Mem407[ds_399:0x29DF:word16]
	Mem413[ss:fp - 0x0020:word16] = Mem410[ss:fp - 0x0008:word16]
	Mem415[ss:fp - 0x0022:word16] = ax_380
	word16 si_416
	selector ds_417
	byte dl_418 = fn0800_409C(fp - 0x0002, ds_399, wArg02, wArg04, wArg06, out si_416, out ds_417)
	word16 ax_420 = Mem415[ss:fp - 0x0008:word16]
	word16 dx_421 = Mem415[ss:fp - 0x000A:word16]
	Mem425[ss:fp - 0x001A:word16] = dx_421
	Mem426[ss:fp - 0x0018:word16] = ax_420 & 0x3FFF
	word16 cx_427 = 0x0004
	word16 bx_429 = 0x4F14
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E7C:
	branch Mem426[0x0800:bx_429:word16] != Mem426[ss:fp - 0x000A:word16] l0800_4E8D
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E84:
	word16 ax_446 = Mem426[0x0800:bx_429 + 0x0008:word16]
	branch ax_446 == Mem426[ss:fp - 0x0018:word16] l0800_4E94
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E94:
	word16 sp_449
	word16 bp_450
	selector ss_451
	byte SCZO_452
	selector ds_453
	word16 dx_454
	byte SZO_455
	byte C_456
	byte Z_457
	word16 ax_458
	byte cl_459
	word16 bx_460
	word16 cx_461
	byte dl_462
	word16 si_463
	word16 di_464
	call Mem426[0x0800:bx_429 + 0x0010:word16] (retsize: 4; depth: 4)
		uses: ax_446,bp_5,bx_430,C_424,cl_432,cx_431,di_352,dl_418,ds_417,dx_421,SCZO_447,si_416,sp_419,ss,SZO_423,wLoc02_4,wLoc1C_12,wLoc1E_15,Z_448
		defs: ax_458,bp_450,bx_460,C_456,cl_459,cx_461,di_464,dl_462,ds_453,dx_454,SCZO_452,si_463,sp_449,ss_451,SZO_455,Z_457
	return ds_453
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E8D:
	bx_429 = bx_429 + 0x0002
	cx_427 = cx_427 - 0x0001
	branch cx_427 != 0x0000 l0800_4E7C
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E92:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4ED7:
	return ds_417
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4C72:
	return ds_16
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp

fn0800_4C55_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_4F2C(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_4F2C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4F2C:
	word16 dx_23
	selector ds_16
	word16 ax_24 = fn0800_8C69(ax, 0x02, fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_16), bp, out dx_23)
	Mem25[ss:fp - 0x0012:word16] = dx_23
	Mem27[ss:fp - 0x0014:word16] = ax_24
	Mem30[ss:fp - 0x001E:word16] = Mem27[ds_16:0x29E5:word16]
	Mem33[ss:fp - 0x0020:word16] = Mem30[ds_16:0x29E3:word16]
	byte dl_36
	word16 si_37
	word16 ax_38 = fn0800_AD2F(ds_16, ptrArg00, wArg02, out dl_36, out si_37)
	Mem40[ss:fp - 0x001A:word16] = dx_23
	Mem41[ss:fp - 0x001C:word16] = ax_38
	branch Mem41[ss:fp - 0x0012:word16] <u 0x0000 l0800_4F95
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4F65:
	branch Mem41[ss:fp - 0x0012:word16] >u 0x0000 l0800_4F6D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F67:
	branch Mem41[ss:fp - 0x0014:word16] <=u 0x0012 l0800_4F95
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F6D:
	Mem478[ss:fp - 0x001E:word16] = Mem41[ds_16:0x29E5:word16]
	Mem481[ss:fp - 0x0020:word16] = Mem478[ds_16:0x29E3:word16]
	selector ds_482
	Mem486[ss:fp - 0x0016:word16] = fn0800_3E5D(fp - 0x0002, ds_16, wArg00, wArg02, out ds_482)
	Mem487[ss:fp - 0x0018:word16] = ax_38
	Mem490[ss:fp - 0x001E:word16] = Mem487[ds_482:0x29E5:word16]
	Mem493[ss:fp - 0x0020:word16] = Mem490[ds_482:0x29E3:word16]
	Mem498[ss:fp - 0x000E:word16] = fn0800_3E5D(fp - 0x0002, ds_482, wArg00, wArg02, out ds_16)
	Mem499[ss:fp - 0x0010:word16] = ax_38
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F95:
	Mem52[ss:fp - 0x001E:word16] = Mem41[ds_16:0x29E5:word16]
	Mem55[ss:fp - 0x0020:word16] = Mem52[ds_16:0x29E3:word16]
	word16 di_57
	selector ds_58
	word16 dx_63
	word16 ax_64 = fn0800_8CAA(ax_38, 0x08, fn0800_3F58(fp - 0x0002, ds_16, wArg00, wArg02, out di_57, out ds_58), bp, out dx_63)
	branch dx_63 != 0x0052 l0800_4FB5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4FAD:
	branch ax_64 != 0x4E43 l0800_4FB5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4FB5:
	Mem87[ss:fp - 0x001E:word16] = Mem55[ds_58:0x29E1:word16]
	Mem90[ss:fp - 0x0020:word16] = Mem87[ds_58:0x29DF:word16]
	word16 dx_94
	word16 ax_95 = fn0800_8CAA(Mem90[ss:fp - 0x0014:word16], 0x02, Mem90[ss:fp - 0x0012:word16], bp, out dx_94)
	Mem97[ss:fp - 0x0022:word16] = dx_94
	Mem99[ss:fp - 0x0024:word16] = ax_95
	word16 si_102
	selector ds_103
	fn0800_409C(fp - 0x0002, ds_58, wArg02, wArg04, wArg06, out si_102, out ds_103)
	Mem110[ss:fp - 0x001E:word16] = 0x0000
	Mem113[ss:fp - 0x0020:word16] = Mem110[ss:fp - 0x001A:word16]
	Mem116[ss:fp - 0x0022:word16] = Mem113[ss:fp - 0x001C:word16]
	Mem119[ss:fp - 0x0024:word16] = Mem116[ds_103:0x29E5:word16]
	Mem122[ss:fp - 0x0026:word16] = Mem119[ds_103:0x29E3:word16]
	word16 di_124
	selector ds_125
	word16 ax_126 = fn0800_ACB3(fp - 0x0002, ds_103, wArg00, wArg02, wArg08, out di_124, out ds_125)
	Mem131[ss:fp - 0x001E:word16] = Mem122[ss:fp - 0x0012:word16]
	Mem134[ss:fp - 0x0020:word16] = Mem131[ss:fp - 0x0014:word16]
	Mem137[ss:fp - 0x0022:word16] = Mem134[ds_125:0x29E1:word16]
	Mem140[ss:fp - 0x0024:word16] = Mem137[ds_125:0x29DF:word16]
	Mem143[ss:fp - 0x0026:word16] = Mem140[ds_125:0x29E5:word16]
	Mem146[ss:fp - 0x0028:word16] = Mem143[ds_125:0x29E3:word16]
	selector ds_148
	word16 bp_149 = fn0800_3B0A(fp - 0x0002, ds_125, wArg08, wArg0A, out ds_148)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50BC:
	Mem162[ss:fp - 0x001E:word16] = Mem146[ds_148:0x29E5:word16]
	Mem165[ss:fp - 0x0020:word16] = Mem162[ds_148:0x29E3:word16]
	word16 di_166
	selector ds_167
	branch fn0800_3F58(bp_149, ds_148, wArg00, wArg02, out di_166, out ds_167) != 0x0000 l0800_50D6
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50CE:
	branch ax_126 != 0x03EC l0800_50D6
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50D6:
	word16 v58_177 = Mem165[ds_167:0x4E8C:word16] + 0x0004
	Mem178[ds_167:0x4E8C:word16] = v58_177
	Mem182[ds_167:0x4E8E:word16] = Mem178[ds_167:0x4E8E:word16] + (v58_177 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp

l0800_50D3:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5006:
	Mem193[ss:fp - 0x001E:word16] = 0x0001
	Mem199[ss:fp - 0x0020:word16] = 0x0000
	Mem201[ss:fp - 0x0022:word16] = 0x0004
	Mem204[ss:fp - 0x0024:word16] = Mem201[ds_167:0x29E5:word16]
	Mem207[ss:fp - 0x0026:word16] = Mem204[ds_167:0x29E3:word16]
	word16 di_208
	selector ds_209
	fn0800_ACB3(bp_149, ds_167, wArg00, wArg02, wArg08, out di_208, out ds_209)
	Mem214[ss:fp - 0x001E:word16] = Mem207[ds_209:0x29E1:word16]
	Mem217[ss:fp - 0x0020:word16] = Mem214[ds_209:0x29DF:word16]
	Mem223[ss:fp - 0x0022:word16] = 0x0000
	Mem225[ss:fp - 0x0024:word16] = 0x03EC
	word16 si_226
	fn0800_409C(bp_149, ds_209, wArg02, wArg04, wArg06, out si_226, out ds_148)
	ax_126 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5034:
	Mem239[ss:fp - 0x001E:word16] = Mem225[ds_148:0x29E5:word16]
	Mem242[ss:fp - 0x0020:word16] = Mem239[ds_148:0x29E3:word16]
	selector ds_243
	Mem247[ss:bp_149 - 0x0004:word16] = fn0800_3E5D(bp_149, ds_148, wArg00, wArg02, out ds_243)
	Mem248[ss:bp_149 - 0x0006:word16] = ax_126
	Mem251[ss:fp - 0x001E:word16] = Mem248[ds_243:0x29E1:word16]
	Mem254[ss:fp - 0x0020:word16] = Mem251[ds_243:0x29DF:word16]
	Mem257[ss:fp - 0x0022:word16] = Mem254[ss:bp_149 - 0x0004:word16]
	Mem259[ss:fp - 0x0024:word16] = ax_126
	word16 si_260
	fn0800_409C(bp_149, ds_243, wArg02, wArg04, wArg06, out si_260, out ds_148)
	word16 ax_265 = Mem259[ss:bp_149 - 0x0006:word16] | Mem259[ss:bp_149 - 0x0004:word16]
	branch ax_265 == 0x0000 l0800_50B1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5062:
	Mem285[ss:fp - 0x001E:word16] = Mem259[ds_148:0x29E5:word16]
	Mem288[ss:fp - 0x0020:word16] = Mem285[ds_148:0x29E3:word16]
	selector ds_289
	ui32 dx_ax_293 = SEQ(fn0800_3E5D(bp_149, ds_148, wArg00, wArg02, out ds_289), ax_265 - 0x0001)
	Mem299[ss:bp_149 - 0x0008:word16] = SLICE(dx_ax_293 - 0x00000001, word16, 16)
	word16 ax_297 = (word16) (dx_ax_293 - 0x00000001)
	Mem300[ss:bp_149 - 0x000A:word16] = ax_297
	Mem303[ss:fp - 0x001E:word16] = Mem300[ds_289:0x29E1:word16]
	Mem306[ss:fp - 0x0020:word16] = Mem303[ds_289:0x29DF:word16]
	Mem309[ss:fp - 0x0022:word16] = Mem306[ss:bp_149 - 0x0008:word16]
	Mem311[ss:fp - 0x0024:word16] = ax_297
	word16 si_312
	selector ds_313
	fn0800_409C(bp_149, ds_289, wArg02, wArg04, wArg06, out si_312, out ds_313)
	word16 dx_320
	word16 ax_321 = fn0800_8C69(Mem311[ss:bp_149 - 0x0006:word16], 0x02, Mem311[ss:bp_149 - 0x0004:word16], bp, out dx_320)
	Mem323[ss:fp - 0x001E:word16] = dx_320
	Mem325[ss:fp - 0x0020:word16] = ax_321
	Mem328[ss:fp - 0x0022:word16] = Mem325[ds_313:0x29E1:word16]
	Mem331[ss:fp - 0x0024:word16] = Mem328[ds_313:0x29DF:word16]
	Mem334[ss:fp - 0x0026:word16] = Mem331[ds_313:0x29E5:word16]
	Mem337[ss:fp - 0x0028:word16] = Mem334[ds_313:0x29E3:word16]
	bp_149 = fn0800_3B0A(bp_149, ds_313, wArg08, wArg0A, out ds_148)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50B1:
	ax_126 = Mem259[ss:bp_149 - 0x0006:word16] | Mem259[ss:bp_149 - 0x0004:word16]
	branch ax_126 == 0x0000 l0800_50BC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> dl:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50B9:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> dl:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4FB2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50E6:
	Mem346[ss:fp - 0x001E:word16] = Mem55[ds_58:0x29E1:word16]
	Mem349[ss:fp - 0x0020:word16] = Mem346[ds_58:0x29DF:word16]
	word16 dx_353
	word16 ax_354 = fn0800_8CAA(Mem349[ss:fp - 0x0018:word16], 0x02, Mem349[ss:fp - 0x0016:word16], bp, out dx_353)
	Mem356[ss:fp - 0x0022:word16] = dx_353
	Mem358[ss:fp - 0x0024:word16] = ax_354
	word16 si_359
	selector ds_360
	word16 dx_362 = DPB(dx_353, fn0800_409C(fp - 0x0002, ds_58, wArg02, wArg04, wArg06, out si_359, out ds_360), 0)
	Mem367[ss:fp - 0x001E:word16] = Mem358[ds_360:0x29E1:word16]
	Mem370[ss:fp - 0x0020:word16] = Mem367[ds_360:0x29DF:word16]
	byte dl_371
	word16 si_372
	word16 ax_373 = fn0800_AD2F(ds_360, ptrArg00, wArg02, out dl_371, out si_372)
	Mem375[ss:fp - 0x0006:word16] = dx_362
	Mem376[ss:fp - 0x0008:word16] = ax_373
	Mem381[ss:fp - 0x001E:word16] = 0x0000
	Mem384[ss:fp - 0x0020:word16] = Mem381[ds_360:0x4E8E:word16]
	Mem387[ss:fp - 0x0022:word16] = Mem384[ds_360:0x4E8C:word16]
	Mem390[ss:fp - 0x0024:word16] = Mem387[ds_360:0x29E1:word16]
	Mem393[ss:fp - 0x0026:word16] = Mem390[ds_360:0x29DF:word16]
	word16 di_394
	selector ds_395
	fn0800_ACB3(fp - 0x0002, ds_360, wArg00, wArg02, wArg08, out di_394, out ds_395)
	Mem401[ss:fp - 0x001E:word16] = Mem393[ds_395:0x29E1:word16]
	Mem404[ss:fp - 0x0020:word16] = Mem401[ds_395:0x29DF:word16]
	Mem407[ss:fp - 0x0022:word16] = Mem404[ss:fp - 0x000E:word16]
	Mem410[ss:fp - 0x0024:word16] = Mem407[ss:fp - 0x0010:word16]
	word16 si_411
	selector ds_412
	fn0800_409C(fp - 0x0002, ds_395, wArg02, wArg04, wArg06, out si_411, out ds_412)
	word16 v48_415 = Mem410[ds_412:0x4E8C:word16] + 0x0004
	Mem416[ds_412:0x4E8C:word16] = v48_415
	Mem420[ds_412:0x4E8E:word16] = Mem416[ds_412:0x4E8E:word16] + (v48_415 <u 0x0000)
	Mem425[ss:fp - 0x001E:word16] = 0x0000
	Mem428[ss:fp - 0x0020:word16] = Mem425[ss:fp - 0x0006:word16]
	Mem431[ss:fp - 0x0022:word16] = Mem428[ss:fp - 0x0008:word16]
	Mem434[ss:fp - 0x0024:word16] = Mem431[ds_412:0x29E1:word16]
	Mem437[ss:fp - 0x0026:word16] = Mem434[ds_412:0x29DF:word16]
	word16 di_438
	selector ds_439
	fn0800_ACB3(fp - 0x0002, ds_412, wArg00, wArg02, wArg08, out di_438, out ds_439)
	selector ds_443
	Mem445[ss:fp - 0x0004:word16] = fn0800_5374(fp - 0x0002, ds_439, out ds_443)
	Mem448[ss:fp - 0x001E:word16] = 0x0000
	word16 dx_451 = Mem448[ss:fp - 0x001C:word16] + Mem448[ss:fp - 0x0014:word16]
	Mem457[ss:fp - 0x0020:word16] = Mem448[ss:fp - 0x001A:word16] + Mem448[ss:fp - 0x0012:word16] + (dx_451 <u 0x0000)
	Mem459[ss:fp - 0x0022:word16] = dx_451
	Mem462[ss:fp - 0x0024:word16] = Mem459[ds_443:0x29E5:word16]
	Mem465[ss:fp - 0x0026:word16] = Mem462[ds_443:0x29E3:word16]
	word16 di_466
	selector ds_467
	fn0800_ACB3(fp - 0x0002, ds_443, wArg00, wArg02, wArg08, out di_466, out ds_467)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp

fn0800_4F2C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> bx:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp



word16 fn0800_518F(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_518F_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_518F:
	selector ds_11
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_11) != 0x0000 l0800_51A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_51A5:
	selector ds_22
	fn0800_5374(bp, ds_11, out ds_22)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_51A1:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_518F_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_51A9(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_51A9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_51A9:
	word16 bp_20 = fp - 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_533D:
	Mem28[ss:fp - 0x000A:word16] = Mem0[ds:0x29E5:word16]
	Mem32[ss:fp - 0x000C:word16] = Mem28[ds:0x29E3:word16]
	byte dl_35
	word16 si_36
	Mem41[ss:fp - 0x000A:word16] = fn0800_AD2F(ds, ptrArg00, wArg02, out dl_35, out si_36)
	Mem43[ss:fp - 0x000C:word16] = dx
	Mem46[ss:fp - 0x000E:word16] = Mem43[ds:0x29E5:word16]
	Mem49[ss:fp - 0x0010:word16] = Mem46[ds:0x29E3:word16]
	word16 si_51
	selector ds_52
	word16 ax_53 = fn0800_4194(bp_20, ds, wArg00, wArg02, out si_51, out ds_52)
	word16 bx_55 = Mem49[ss:fp - 0x000C:word16]
	dx = Mem49[ss:fp - 0x000A:word16]
	branch bx_55 >=u dx l0800_5364
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5364:
	branch bx_55 != dx l0800_536D
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5366:
	branch dx >=u ax_53 l0800_536D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_536D:
	return ds_52
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_536A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5361:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51B3:
	Mem84[ss:fp - 0x000A:word16] = Mem49[ds_52:0x29E5:word16]
	Mem87[ss:fp - 0x000C:word16] = Mem84[ds_52:0x29E3:word16]
	word16 ax_89 = fn0800_3E9A(bp_20, ds_52, ptrArg00, wArg02, out ds)
	branch ax_89 == 0x0000 l0800_51D5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D5:
	Mem376[ss:fp - 0x000A:word16] = Mem87[ds:0x29E1:word16]
	Mem379[ss:fp - 0x000C:word16] = Mem376[ds:0x29DF:word16]
	Mem382[ss:fp - 0x000E:word16] = Mem379[ds:0x29E5:word16]
	Mem385[ss:fp - 0x0010:word16] = Mem382[ds:0x29E3:word16]
	word16 di_387
	selector ds_388
	Mem393[ss:fp - 0x000E:word16] = fn0800_3DCF(bp_20, ds, ptrArg00, wArg02, out dx, out di_387, out ds_388)
	word16 di_394
	fn0800_4047(bp_20, ds_388, bArg00, ptrArg02, wArg04, out di_394, out ds)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51C5:
	branch ax_89 == 0x0001 l0800_51F5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51F5:
	Mem205[ss:fp - 0x000A:word16] = Mem87[ds:0x29E1:word16]
	Mem208[ss:fp - 0x000C:word16] = Mem205[ds:0x29DF:word16]
	Mem211[ss:fp - 0x000E:word16] = Mem208[ds:0x29E5:word16]
	Mem214[ss:fp - 0x0010:word16] = Mem211[ds:0x29E3:word16]
	selector ds_215
	Mem220[ss:fp - 0x000E:word16] = fn0800_3E5D(bp_20, ds, wArg00, wArg02, out ds_215)
	Mem222[ss:fp - 0x0010:word16] = ax_89
	word16 si_224
	selector ds_225
	fn0800_409C(bp_20, ds_215, wArg02, wArg04, wArg06, out si_224, out ds_225)
	Mem231[ss:fp - 0x000A:word16] = Mem222[ds_225:0x29E5:word16]
	Mem234[ss:fp - 0x000C:word16] = Mem231[ds_225:0x29E3:word16]
	word16 si_235
	word16 di_236
	selector ds_237
	word16 ax_238 = fn0800_3FAD(bp_20, ds_225, wArg00, wArg02, out si_235, out di_236, out ds_237)
	Mem241[ss:bp_20 - 0x0002:word16] = 0x0000
	Mem242[ss:bp_20 - 0x0004:word16] = ax_238
	Mem245[ss:fp - 0x000A:word16] = Mem242[ds_237:0x29E1:word16]
	Mem248[ss:fp - 0x000C:word16] = Mem245[ds_237:0x29DF:word16]
	Mem250[ss:fp - 0x000E:word16] = ax_238
	selector ds_251
	fn0800_40BF(bp_20, ds_237, bArg00, wArg02, wArg04, out ds_251)
	Mem257[ss:fp - 0x000A:word16] = Mem250[ds_251:0x29E5:word16]
	Mem260[ss:fp - 0x000C:word16] = Mem257[ds_251:0x29E3:word16]
	word16 di_261
	selector ds_262
	word16 ax_268 = fn0800_8CAA(ax_238, 0x08, fn0800_3F58(bp_20, ds_251, wArg00, wArg02, out di_261, out ds_262), bp, out dx)
	branch dx != 0x0052 l0800_52BA
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5250:
	branch ax_268 != 0x4E43 l0800_52BA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52BA:
	Mem276[ss:fp - 0x000A:word16] = Mem260[ss:bp_20 - 0x0002:word16]
	Mem279[ss:fp - 0x000C:word16] = Mem276[ss:bp_20 - 0x0004:word16]
	Mem282[ss:fp - 0x000E:word16] = Mem279[ds_262:0x29E1:word16]
	Mem285[ss:fp - 0x0010:word16] = Mem282[ds_262:0x29DF:word16]
	Mem288[ss:fp - 0x0012:word16] = Mem285[ds_262:0x29E5:word16]
	Mem291[ss:fp - 0x0014:word16] = Mem288[ds_262:0x29E3:word16]
	bp_20 = fn0800_3B0A(bp_20, ds_262, wArg08, wArg0A, out ds)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5255:
	selector ds_298
	branch fn0800_5374(bp_20, ds_262, out ds_298) == 0x0000 l0800_5263
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5263:
	Mem311[ss:fp - 0x000A:word16] = 0x0001
	ui32 ax_dx_315 = SEQ(Mem311[ds_298:0x2A09:word16], Mem311[ds_298:0x2A07:word16] + 0x0002)
	dx = -(word16) (ax_dx_315 + 0x00000002)
	Mem327[ss:fp - 0x000C:word16] = -SLICE(ax_dx_315 + 0x00000002, word16, 16) - (dx == 0x0000)
	Mem329[ss:fp - 0x000E:word16] = dx
	Mem332[ss:fp - 0x0010:word16] = Mem329[ds_298:0x29E1:word16]
	Mem335[ss:fp - 0x0012:word16] = Mem332[ds_298:0x29DF:word16]
	word16 di_336
	selector ds_337
	fn0800_ACB3(bp_20, ds_298, wArg00, wArg02, wArg08, out di_336, out ds_337)
	Mem343[ss:fp - 0x000A:word16] = Mem335[ds_337:0x29E1:word16]
	Mem346[ss:fp - 0x000C:word16] = Mem343[ds_337:0x29DF:word16]
	Mem349[ss:fp - 0x000E:word16] = Mem346[ds_337:0x2A07:word16]
	selector ds_350
	fn0800_40BF(bp_20, ds_337, bArg00, wArg02, wArg04, out ds_350)
	Mem356[ss:fp - 0x000A:word16] = 0x0001
	Mem359[ss:fp - 0x000C:word16] = Mem356[ds_350:0x2A09:word16]
	Mem362[ss:fp - 0x000E:word16] = Mem359[ds_350:0x2A07:word16]
	Mem365[ss:fp - 0x0010:word16] = Mem362[ds_350:0x29E1:word16]
	Mem368[ss:fp - 0x0012:word16] = Mem365[ds_350:0x29DF:word16]
	word16 di_369
	fn0800_ACB3(bp_20, ds_350, wArg00, wArg02, wArg08, out di_369, out ds)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> si:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_525E:
	return ds_298
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> si:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_51A9_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_51CA:
	branch ax_89 != 0x0003 l0800_51D2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5301:
	Mem146[ss:fp - 0x000A:word16] = Mem87[ds:0x29E5:word16]
	Mem149[ss:fp - 0x000C:word16] = Mem146[ds:0x29E3:word16]
	word16 si_150
	selector ds_151
	Mem156[ss:fp - 0x000A:word16] = fn0800_4194(bp_20, ds, wArg00, wArg02, out si_150, out ds_151)
	Mem158[ss:fp - 0x000C:word16] = dx
	Mem161[ss:fp - 0x000E:word16] = Mem158[ds_151:0x29E5:word16]
	Mem164[ss:fp - 0x0010:word16] = Mem161[ds_151:0x29E3:word16]
	byte dl_165
	word16 si_166
	word16 ax_167 = fn0800_AD2F(ds_151, ptrArg00, wArg02, out dl_165, out si_166)
	ui32 bx_cx_177 = SEQ(Mem164[ss:fp - 0x000C:word16], Mem164[ss:fp - 0x000A:word16] - ax_167) - SEQ(dx, ax_167)
	Mem182[ss:fp - 0x000A:word16] = SLICE(bx_cx_177, word16, 16)
	Mem184[ss:fp - 0x000C:word16] = (word16) bx_cx_177
	Mem187[ss:fp - 0x000E:word16] = Mem184[ds_151:0x29E1:word16]
	Mem190[ss:fp - 0x0010:word16] = Mem187[ds_151:0x29DF:word16]
	Mem193[ss:fp - 0x0012:word16] = Mem190[ds_151:0x29E5:word16]
	Mem196[ss:fp - 0x0014:word16] = Mem193[ds_151:0x29E3:word16]
	bp_20 = fn0800_3B0A(bp_20, ds_151, wArg08, wArg0A, out ds)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51CF:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52D8:
	word16 si_101 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FA:
	branch si_101 != 0x0003 l0800_52DC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52DC:
	Mem116[ss:fp - 0x000A:word16] = Mem87[ds:0x29E1:word16]
	Mem119[ss:fp - 0x000C:word16] = Mem116[ds:0x29DF:word16]
	Mem122[ss:fp - 0x000E:word16] = Mem119[ds:0x29E5:word16]
	Mem125[ss:fp - 0x0010:word16] = Mem122[ds:0x29E3:word16]
	word16 di_127
	selector ds_128
	Mem133[ss:fp - 0x000E:word16] = fn0800_3DCF(bp_20, ds, ptrArg00, wArg02, out dx, out di_127, out ds_128)
	word16 di_137
	fn0800_4047(bp_20, ds_128, bArg00, ptrArg02, wArg04, out di_137, out ds)
	si_101 = si_101 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_5374(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_5374_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5374:
	byte dl_21
	word16 si_22
	word16 ax_23 = fn0800_AD2F(ds, DPB(ptrLoc16, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out dl_21, out si_22)
	Mem27[ss:fp - 0x000C:word16] = dx
	Mem29[ss:fp - 0x000E:word16] = ax_23
	Mem32[ss:fp - 0x0014:word16] = Mem29[ds:0x29E5:word16]
	Mem35[ss:fp - 0x0016:word16] = Mem32[ds:0x29E3:word16]
	selector ds_38
	fn0800_3E5D(fp - 0x0002, ds, wArg00, wArg02, out ds_38)
	Mem44[ds_38:0x2A21:word16] = ax_23 & 0x0003
	Mem47[ss:fp - 0x0014:word16] = Mem44[ds_38:0x29E5:word16]
	Mem50[ss:fp - 0x0016:word16] = Mem47[ds_38:0x29E3:word16]
	selector ds_51
	word16 dx_52 = fn0800_3E5D(fp - 0x0002, ds_38, wArg00, wArg02, out ds_51)
	Mem54[ds_51:0x2A09:word16] = dx_52
	Mem55[ds_51:0x2A07:word16] = ax_23 & 0x0003
	branch Mem55[ds_51:0x2A21:word16] != 0x0000 l0800_53EF
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_53EF:
	Mem106[ss:fp - 0x0014:word16] = Mem55[ds_51:0x29E5:word16]
	Mem109[ss:fp - 0x0016:word16] = Mem106[ds_51:0x29E3:word16]
	selector ds_110
	word16 dx_111 = fn0800_3E5D(fp - 0x0002, ds_51, wArg00, wArg02, out ds_110)
	Mem114[ds_110:0x2A05:word16] = dx_111
	Mem115[ds_110:0x2A03:word16] = ax_23 & 0x0003
	Mem118[ss:fp - 0x0014:word16] = Mem115[ds_110:0x29E5:word16]
	Mem121[ss:fp - 0x0016:word16] = Mem118[ds_110:0x29E3:word16]
	word16 dx_122
	word16 si_123
	word16 di_124
	selector ds_125
	word16 ax_126 = fn0800_3E27(fp - 0x0002, ds_110, wArg00, wArg02, out dx_122, out si_123, out di_124, out ds_125)
	Mem129[ds_125:0x2E4B:word16] = ax_126
	Mem132[ss:fp - 0x0014:word16] = Mem129[ds_125:0x29E5:word16]
	Mem135[ss:fp - 0x0016:word16] = Mem132[ds_125:0x29E3:word16]
	word16 dx_136
	word16 si_137
	word16 di_138
	selector ds_139
	word16 ax_140 = fn0800_3E27(fp - 0x0002, ds_125, wArg00, wArg02, out dx_136, out si_137, out di_138, out ds_139)
	Mem143[ds_139:0x2E49:word16] = ax_140
	Mem146[ss:fp - 0x0014:word16] = Mem143[ds_139:0x29E5:word16]
	Mem149[ss:fp - 0x0016:word16] = Mem146[ds_139:0x29E3:word16]
	word16 dx_150
	word16 si_151
	word16 di_152
	selector ds_153
	word16 ax_154 = fn0800_3E27(fp - 0x0002, ds_139, wArg00, wArg02, out dx_150, out si_151, out di_152, out ds_153)
	Mem159[ss:fp - 0x0014:word16] = Mem149[ds_153:0x2A05:word16]
	Mem162[ss:fp - 0x0016:word16] = Mem159[ds_153:0x2A03:word16]
	Mem165[ss:fp - 0x0018:word16] = Mem162[ds_153:0x29E5:word16]
	Mem168[ss:fp - 0x001A:word16] = Mem165[ds_153:0x29E3:word16]
	fn0800_2D0A(fp - 0x0002, ds_153, wArg00, wArg02)
	branch ax_154 == Mem168[ds_153:0x2E49:word16] l0800_5458
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_5458:
	Mem180[ss:fp - 0x0014:word16] = 0x0001
	Mem182[ss:fp - 0x0016:word16] = 0x000F
	fn0800_4311(0x0001, 0x000F, ds_153, wArg00, wArg02)
	Mem185[ss:fp - 0x0008:word16] = 0x000F
	Mem186[ss:fp - 0x000A:word16] = 0x0001
	Mem189[ds_153:0x2E73:word16] = 0x0010
	Mem190[ds_153:0x2E71:word16] = 0x0000
	Mem194[ss:fp - 0x0014:word16] = 0x0001
	Mem196[ss:fp - 0x0016:word16] = 0x000F
	fn0800_4311(0x0001, 0x000F, ds_153, wArg00, wArg02)
	Mem198[ss:fp - 0x0004:word16] = 0x000F
	Mem199[ss:fp - 0x0006:word16] = 0x0001
	Mem201[ds_153:0x2E5B:word16] = 0x0010
	Mem202[ds_153:0x2E59:word16] = 0x0000
	word16 dx_204 = Mem202[ds_153:0x2E71:word16]
	Mem206[ds_153:0x2E6F:word16] = Mem202[ds_153:0x2E73:word16]
	Mem207[ds_153:0x2E6D:word16] = dx_204 + 0xFFFD
	word16 dx_210 = Mem207[ds_153:0x2E59:word16] + Mem207[ds_153:0x2E31:word16]
	Mem211[ds_153:0x2E57:word16] = Mem207[ds_153:0x2E5B:word16]
	Mem212[ds_153:0x2E55:word16] = dx_210
	Mem213[ds_153:0x2E4D:word16] = 0x0000
	Mem217[ds_153:0x2E45:word16] = 0x0000
	Mem218[ds_153:0x29FD:word16] = 0x0000
	Mem219[ds_153:0x29FB:word16] = 0x0000
	Mem220[ds_153:0x2A01:word16] = 0x0000
	Mem221[ds_153:0x29FF:word16] = 0x0000
	Mem223[ss:fp - 0x0010:word16] = Mem221[ds_153:0x2E4F:word16]
	Mem226[ss:fp - 0x0014:word16] = 0x0001
	word16 di_228
	selector ds_229
	word16 si_227
	branch fn0800_5C1A(0x0000, di_152, ds_153, wArg00, out si_227, out di_228, out ds_229) == 0x0000 l0800_5504
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0008 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_54F3:
	branch Mem226[ds_229:0x2A25:word16] == 0x0002 l0800_5504
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54FA:
	branch Mem226[ds_229:0x2A25:word16] == 0x0007 l0800_5504
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5501:
	si_227 = 0x000A
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5504:
	branch si_227 != 0x0000 l0800_555D
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5506_thunk_fn0800_555D:
	selector ds_263
	return fn0800_555D(fp - 0x0002, si_227, di_228, ds_229, out ds_263)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_5508:
	Mem244[ss:fp - 0x0014:word16] = 0x0001
	word16 si_245
	word16 di_246
	selector ds_247
	branch fn0800_5C1A(si_227, di_228, ds_229, wArg00, out si_245, out di_246, out ds_247) == 0x0000 l0800_5557
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_5557:
	Mem260[ds_247:0x2E4F:word16] = 0x0000
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_5557_thunk_fn0800_555D:
	selector ds_261
	return fn0800_555D(fp - 0x0002, si_245, di_246, ds_247, out ds_261)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_5516:
// DataOut: bp di ds si ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_5516_thunk_fn0800_551B:
	selector ds_258
	return fn0800_551B(fp - 0x0002, si_245, di_246, ds_247, out ds_258)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_5450:
	return 0x0005
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0008 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_53BF:
	Mem72[ss:fp - 0x0014:word16] = Mem55[ds_51:0x2A09:word16]
	Mem74[ss:fp - 0x0016:word16] = ax_23 & 0x0003
	Mem77[ss:fp - 0x0018:word16] = Mem74[ds_51:0x29E1:word16]
	Mem80[ss:fp - 0x001A:word16] = Mem77[ds_51:0x29DF:word16]
	Mem83[ss:fp - 0x001C:word16] = Mem80[ds_51:0x29E5:word16]
	Mem86[ss:fp - 0x001E:word16] = Mem83[ds_51:0x29E3:word16]
	selector ds_89
	fn0800_3B0A(fp - 0x0002, ds_51, wArg08, wArg0A, out ds_89)
	word16 dx_93 = Mem86[ds_89:0x2A07:word16]
	Mem94[ds_89:0x2A05:word16] = Mem86[ds_89:0x2A09:word16]
	Mem95[ds_89:0x2A03:word16] = dx_93
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_5374_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_551B(word16 bp, word16 si, word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z bp di ds si ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_551B_entry:
// DataOut: bp di ds si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_551B:
	branch Z l0800_554B
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_551D:
	word16 ax_35 = fn0800_5C1A(si, di, ds, 0x0010, out si, out di, out ds)
	branch Mem0[ds:0x2A25:word16] != 0x0002 l0800_553B
// DataOut: bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5530:
	branch Mem0[ds:0x2E4F:word16] != 0x0000 l0800_553B
// DataOut: bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

l0800_5537:
	Mem47[ds:0x2E4F:word16] = ax_35
// DataOut: bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

l0800_553B:
	branch Mem0[ds:0x2E4F:word16] == ax_35 l0800_554B
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

l0800_5541:
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_554B
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

l0800_5548:
	si = 0x000C
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

l0800_554B:
	branch Mem0[ds:0x2E4F:word16] != 0x0000 l0800_5550_thunk_fn0800_555D
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

l0800_5550_thunk_fn0800_555D:
	selector ds_27
	return fn0800_555D(bp, si, di, ds, out ds_27)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

l0800_5552:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

l0800_5555_thunk_fn0800_555D:
	selector ds_25
	return fn0800_555D(bp, 0x000B, di, ds, out ds_25)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:0x000B ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):0x0010

fn0800_551B_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> ds:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -2(fp):0x0010



word16 fn0800_555D(word16 bp, word16 si, word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_555D_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_555D:
	word16 si_117 = si
	branch si != 0x0000 l0800_557C
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5561:
	word16 ax_107 = Mem0[ds:0x2A21:word16]
	branch ax_107 == 0x0001 l0800_5570
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si

l0800_5570:
	ds = fn0800_55E8(bp, ds)
	si_117 = ax_107
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si ax:<invalid>

l0800_5569:
	branch ax_107 == 0x0002 l0800_5577
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si ax:<invalid>

l0800_5577:
	bp = fn0800_579B(bp, si, di, ds, out ds)
	si_117 = ax_107
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si ax:<invalid>

l0800_556E:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si ax:<invalid>

l0800_557C:
	Mem17[ds:0x2E4F:word16] = Mem0[ss:bp - 0x000E:word16]
	Mem20[ss:fp - 0x0002:word16] = Mem17[ss:bp - 0x0006:word16]
	Mem23[ss:fp - 0x0004:word16] = Mem20[ss:bp - 0x0008:word16]
	selector ds_26
	fn0800_4346(ds, wArg00, wArg02, out ds_26)
	Mem32[ss:fp - 0x0002:word16] = Mem23[ss:bp - 0x0002:word16]
	Mem35[ss:fp - 0x0004:word16] = Mem32[ss:bp - 0x0004:word16]
	selector ds_36
	fn0800_4346(ds_26, wArg00, wArg02, out ds_36)
	word16 v16_39 = Mem35[ds_36:0x2A03:word16] + 0x0012
	Mem40[ds_36:0x2A03:word16] = v16_39
	Mem44[ds_36:0x2A05:word16] = Mem40[ds_36:0x2A05:word16] + (v16_39 <u 0x0000)
	Mem47[ss:fp - 0x0002:word16] = 0x0000
	word16 dx_50 = Mem47[ss:bp - 0x000C:word16] + Mem47[ds_36:0x2A03:word16]
	Mem56[ss:fp - 0x0004:word16] = Mem47[ss:bp - 0x000A:word16] + Mem47[ds_36:0x2A05:word16] + (dx_50 <u 0x0000)
	Mem58[ss:fp - 0x0006:word16] = dx_50
	Mem61[ss:fp - 0x0008:word16] = Mem58[ds_36:0x29E5:word16]
	Mem64[ss:fp - 0x000A:word16] = Mem61[ds_36:0x29E3:word16]
	word16 di_66
	selector ds_67
	fn0800_ACB3(bp, ds_36, wArg00, wArg02, wArg08, out di_66, out ds_67)
	branch si_117 == 0x0000 l0800_55D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> bp:<invalid> cx:<invalid> di:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid>

l0800_55D0:
	branch Mem64[ds_67:0x2E4D:word16] == Mem64[ds_67:0x2E4B:word16] l0800_55E1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_55E1:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_55D9:
	return 0x0006
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_55C9:
	return si_117
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_555D_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_55E8(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_55E8_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_55E8:
	word16 bp_104 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_574B:
	word16 ax_37 = Mem0[ds:0x2A01:word16]
	word16 dx_38 = Mem0[ds:0x29FF:word16]
	branch ax_37 >=u Mem0[ds:0x2A09:word16] l0800_575B
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> di:<invalid> cl:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_575B:
	branch ax_37 != Mem0[ds:0x2A09:word16] l0800_5766
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> di:<invalid> cl:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_575D:
	branch dx_38 >=u Mem0[ds:0x2A07:word16] l0800_5766
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> di:<invalid> cl:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5766:
	Mem361[ss:fp - 0x0008:word16] = Mem0[ds:0x29E1:word16]
	Mem364[ss:fp - 0x000A:word16] = Mem361[ds:0x29DF:word16]
	word16 ax_367 = Mem364[ds:0x2E55:word16] - Mem364[ds:0x2E59:word16]
	word16 ax_371 = ax_367 - Mem364[ds:0x2E31:word16]
	Mem376[ss:fp - 0x000C:word16] = 0x0000 - (ax_367 <u 0x0000) - (ax_371 <u 0x0000)
	Mem378[ss:fp - 0x000E:word16] = ax_371
	word16 ax_380 = Mem378[ds:0x2E59:word16] + Mem378[ds:0x2E31:word16]
	Mem384[ss:fp - 0x0010:word16] = Mem378[ds:0x2E5B:word16]
	Mem386[ss:fp - 0x0012:word16] = ax_380
	return fn0800_4152(bp_104, ds, wArg00, wArg02, wArg04, wArg08, wArg0A)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> di:<invalid> cl:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_55E8_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> cl:<invalid> ds:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5763:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> di:<invalid> cl:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5758:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> di:<invalid> cl:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_55F1:
	Mem50[ss:fp - 0x0008:word16] = 0x0010
	Mem53[ss:fp - 0x000A:word16] = ds
	Mem56[ss:fp - 0x000C:word16] = 0x290F
	selector ds_60 = fn0800_5A24(bp_104, ds, wArg00, wArg02, wArg04)
	Mem65[ss:fp - 0x0008:word16] = 0x0010
	Mem67[ss:fp - 0x000A:word16] = ds_60
	Mem70[ss:fp - 0x000C:word16] = 0x284F
	selector ds_71 = fn0800_5A24(bp_104, ds_60, wArg00, wArg02, wArg04)
	Mem76[ss:fp - 0x0008:word16] = 0x0010
	Mem78[ss:fp - 0x000A:word16] = ds_71
	Mem81[ss:fp - 0x000C:word16] = 0x278F
	selector ds_82 = fn0800_5A24(bp_104, ds_71, wArg00, wArg02, wArg04)
	Mem87[ss:fp - 0x0008:word16] = 0x0010
	word16 ax_89 = fn0800_5C39(bp_104, ds_82, wArg00, out ds)
	Mem92[ss:bp_104 - 0x0002:word16] = 0x0000
	Mem93[ss:bp_104 - 0x0004:word16] = ax_89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> di:<invalid> cl:<invalid> bx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5736:
	word16 ax_113 = Mem93[ss:bp_104 - 0x0004:word16]
	word16 dx_114 = Mem93[ss:bp_104 - 0x0002:word16]
	word16 v11_115 = Mem93[ss:bp_104 - 0x0004:word16] - 0x0001
	Mem116[ss:bp_104 - 0x0004:word16] = v11_115
	Mem120[ss:bp_104 - 0x0002:word16] = Mem116[ss:bp_104 - 0x0002:word16] - (v11_115 <u 0x0000)
	branch (ax_113 | dx_114) == 0x0000 l0800_574B
	word16 ax_124 = Mem120[ss:bp_104 - 0x0004:word16]
	word16 dx_125 = Mem120[ss:bp_104 - 0x0002:word16]
	word16 v23_126 = Mem120[ss:bp_104 - 0x0004:word16] - 0x0001
	Mem127[ss:bp_104 - 0x0004:word16] = v23_126
	Mem131[ss:bp_104 - 0x0002:word16] = Mem127[ss:bp_104 - 0x0002:word16] - (v23_126 <u 0x0000)
	branch (ax_124 | dx_125) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5748:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5633:
	Mem137[ss:fp - 0x0008:word16] = ds
	Mem140[ss:fp - 0x000A:word16] = 0x290F
	word16 ax_143 = fn0800_5A8D(ds, wArg00, out bp_104, out ds)
	Mem145[ds:0x2E47:word16] = ax_143
	word16 v17_146 = Mem145[ds:0x29FF:word16] + ax_143
	Mem147[ds:0x29FF:word16] = v17_146
	Mem151[ds:0x2A01:word16] = Mem147[ds:0x2A01:word16] + (v17_146 <u 0x0000)
	branch Mem151[ds:0x2E47:word16] != 0x0000 l0800_5654
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5654:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5664:
	word16 ax_246 = Mem151[ds:0x2E47:word16]
	Mem248[ds:0x2E47:word16] = Mem151[ds:0x2E47:word16] - 0x0001
	word16 ax_249 = ax_246
	branch ax_246 != 0x0000 l0800_5656
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5656:
	word16 si_344
	word16 di_345
	selector ds_346
	byte al_347 = fn0800_5B15(bp_104, ds, out si_344, out di_345, out ds_346)
	Mem353[ss:fp - 0x0008:word16] = DPB(ax_246, al_347 ^ Mem248[ds_346:0x2E4F:byte], 0)
	word16 di_354
	fn0800_5D2F(bp_104, ds_346, out di_354, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_566F:
	branch (Mem248[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_5684
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5684:
	Mem342[ds:0x2E4F:word16] = Mem248[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5677:
	ax_249 = Mem248[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem340[ds:0x2E4F:word16] = ax_249
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5688:
	word16 bx_259 = (word16) Mem248[ds:0x2E6D:segptr32]
	Mem265[ss:fp - 0x0008:word16] = DPB(ax_249, 0x00, 8)
	word16 dx_269 = DPB(dx_125, 0x00, 8)
	word16 dx_277 = Mem265[ss:fp - 0x0008:word16] + (dx_269 << 0x08 <u 0x0000)
	Mem282[ss:fp - 0x0008:word16] = dx_269 << 0x08
	Mem285[ss:fp - 0x000A:word16] = dx_277
	int32 dx_ax_286 = (int32) DPB(bx_259, 0x00, 8)
	word16 ax_287 = (word16) dx_ax_286
	int32 dx_ax_299 = SEQ(Mem285[ss:fp - 0x000A:word16], Mem285[ss:fp - 0x0008:word16] + ax_287) + SEQ(SLICE(dx_ax_286, word16, 16), ax_287)
	word16 dx_304
	Mem307[ss:fp - 0x0008:word16] = fn0800_8C69((word16) dx_ax_299, Mem285[ds:0x2E45:byte], SLICE(dx_ax_299, word16, 16), bp, out dx_304)
	word16 ax_310 = 0x0001 << Mem307[ds:0x2E45:byte]
	Mem313[ss:fp - 0x000A:word16] = dx_304
	int32 dx_ax_314 = (int32) (ax_310 - 0x0001)
	word16 cx_319 = Mem313[ds:0x29FB:word16] & (word16) dx_ax_314
	ui32 ax_dx_329 = SEQ(Mem313[ss:fp - 0x000A:word16], Mem313[ss:fp - 0x0008:word16] + cx_319) + SEQ(Mem313[ds:0x29FD:word16] & SLICE(dx_ax_314, word16, 16), cx_319)
	Mem333[ds:0x29FD:word16] = SLICE(ax_dx_329, word16, 16)
	Mem334[ds:0x29FB:word16] = (word16) ax_dx_329
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5651:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_56E6:
	branch (Mem151[ss:bp_104 - 0x0004:word16] | Mem151[ss:bp_104 - 0x0002:word16]) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_56EE:
	Mem180[ss:fp - 0x0008:word16] = ds
	Mem183[ss:fp - 0x000A:word16] = 0x284F
	word16 bp_184
	selector ds_185
	word16 ax_186 = fn0800_5A8D(ds, wArg00, out bp_184, out ds_185)
	Mem191[ds_185:0x2E2B:word16] = ax_186 + 0x0001
	Mem193[ss:fp - 0x0008:word16] = ds_185
	Mem196[ss:fp - 0x000A:word16] = 0x278F
	word16 ax_199 = fn0800_5A8D(ds_185, wArg00, out bp_104, out ds)
	Mem202[ds:0x2E29:word16] = ax_199 + 0x0002
	word16 v19_203 = Mem202[ds:0x29FF:word16] + (ax_199 + 0x0002)
	Mem204[ds:0x29FF:word16] = v19_203
	Mem208[ds:0x2A01:word16] = Mem204[ds:0x2A01:word16] + (v19_203 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_572B:
	word16 ax_219 = Mem208[ds:0x2E29:word16]
	Mem221[ds:0x2E29:word16] = Mem208[ds:0x2E29:word16] - 0x0001
	branch ax_219 != 0x0000 l0800_5719
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5719:
	ptr32 es_bx_226 = Mem221[ds:0x2E55:segptr32]
	Mem234[ss:fp - 0x0008:word16] = DPB(ax_219, Mem221[SLICE(es_bx_226, selector, 16):(word16) es_bx_226 - Mem221[ds:0x2E2B:word16]:byte], 0)
	word16 di_235
	fn0800_5D2F(bp_104, ds, out di_235, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_579B(word16 bp, word16 si, word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_579B_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_579B:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_58F2:
	word16 ax_22 = Mem0[ds:0x2A01:word16]
	word16 dx_23 = Mem0[ds:0x29FF:word16]
	branch ax_22 >=u Mem0[ds:0x2A09:word16] l0800_5902
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:0x00 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:0x00 dl:<invalid> -2(fp):0x0001

l0800_5902:
	branch ax_22 != Mem0[ds:0x2A09:word16] l0800_590D
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:0x00 dl:<invalid> -2(fp):0x0001

l0800_5904:
	branch dx_23 >=u Mem0[ds:0x2A07:word16] l0800_590D
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:0x00 dl:<invalid> -2(fp):0x0001

l0800_590D:
	Mem321[ss:fp - 0x0002:word16] = Mem0[ds:0x29E1:word16]
	Mem324[ss:fp - 0x0004:word16] = Mem321[ds:0x29DF:word16]
	word16 ax_327 = Mem324[ds:0x2E55:word16] - Mem324[ds:0x2E59:word16]
	word16 ax_331 = ax_327 - Mem324[ds:0x2E31:word16]
	Mem336[ss:fp - 0x0006:word16] = 0x0000 - (ax_327 <u 0x0000) - (ax_331 <u 0x0000)
	Mem338[ss:fp - 0x0008:word16] = ax_331
	word16 ax_340 = Mem338[ds:0x2E59:word16] + Mem338[ds:0x2E31:word16]
	Mem344[ss:fp - 0x000A:word16] = Mem338[ds:0x2E5B:word16]
	Mem346[ss:fp - 0x000C:word16] = ax_340
	selector ds_351
	*dsOut = fn0800_4152(bp, ds, wArg00, wArg02, wArg04, wArg08, wArg0A)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:0x00 dl:<invalid> -2(fp):0x0001

fn0800_579B_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> al:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> Sequence es:bx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_590A:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:0x00 dl:<invalid> -2(fp):0x0001

l0800_58FF:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:0x00 dl:<invalid> -2(fp):0x0001

l0800_57CF:
	Mem42[ss:fp - 0x0002:word16] = 0x0001
	word16 si_46
	word16 di_47
	selector ds_48
	word16 ax_49 = fn0800_5CD9(bp, si, di, ds, wArg00, out bp, out si_46, out di_47, out ds_48)
	branch ax_49 == 0x0000 l0800_579E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_579E:
	word16 si_284
	word16 di_285
	selector ds_286
	byte al_287 = fn0800_5B15(bp, ds_48, out si_284, out di_285, out ds_286)
	Mem293[ss:fp - 0x0002:word16] = DPB(ax_49, al_287 ^ Mem42[ds_286:0x2E4F:byte], 0)
	si = fn0800_5D2F(bp, ds_286, out di, out ds)
	branch (Mem293[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_57C1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_57C1:
	Mem317[ds:0x2E4F:word16] = Mem293[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_57B4:
	Mem315[ds:0x2E4F:word16] = Mem293[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_57C5:
	word16 v16_303 = Mem293[ds:0x29FF:word16] + 0x0001
	Mem304[ds:0x29FF:word16] = v16_303
	Mem308[ds:0x2A01:word16] = Mem304[ds:0x2A01:word16] + (v16_303 <u 0x0000)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_57DD:
	Mem57[ss:fp - 0x0002:word16] = 0x0001
	word16 bp_58
	word16 si_59
	word16 di_60
	selector ds_61
	branch fn0800_5CD9(bp, si_46, di_47, ds_48, wArg00, out bp_58, out si_59, out di_60, out ds_61) == 0x0000 l0800_5866
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5866:
	word16 si_184
	word16 di_185
	selector ds_186
	word16 bp_187 = fn0800_593F(bp_58, si_59, di_60, ds_61, out si_184, out di_185, out ds_186)
	branch Mem57[ds_186:0x2E29:word16] != 0x0009 l0800_58B7
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_58B7:
	bp = fn0800_5975(bp_187, si_184, di_185, ds_186, out si, out di, out ds)
	word16 v28_247 = Mem57[ds:0x29FF:word16] + Mem57[ds:0x2E29:word16]
	Mem248[ds:0x29FF:word16] = v28_247
	Mem252[ds:0x2A01:word16] = Mem248[ds:0x2A01:word16] + (v28_247 <u 0x0000)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_58DA:
	word16 ax_263 = Mem252[ds:0x2E29:word16]
	Mem265[ds:0x2E29:word16] = Mem252[ds:0x2E29:word16] - 0x0001
	branch ax_263 != 0x0000 l0800_58C8
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_58C8:
	ptr32 es_bx_270 = Mem265[ds:0x2E55:segptr32]
	Mem278[ss:fp - 0x0002:word16] = DPB(ax_263, Mem265[SLICE(es_bx_270, selector, 16):(word16) es_bx_270 - Mem265[ds:0x2E2B:word16]:byte], 0)
	si = fn0800_5D2F(bp, ds, out di, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_58E5:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5870:
	bp = fn0800_5A0F(bp_187, si_184, di_185, ds_186, out si, out di, out ds)
	word16 v22_195 = Mem57[ds:0x29FF:word16] + Mem57[ds:0x2E47:word16]
	Mem196[ds:0x29FF:word16] = v22_195
	Mem200[ds:0x2A01:word16] = Mem196[ds:0x2A01:word16] + (v22_195 <u 0x0000)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_588F:
	word16 ax_208 = Mem200[ds:0x2E47:word16]
	Mem210[ds:0x2E47:word16] = Mem200[ds:0x2E47:word16] - 0x0001
	branch ax_208 != 0x0000 l0800_5881
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5881:
	word16 si_227
	word16 di_228
	selector ds_229
	byte al_230 = fn0800_5B15(bp, ds, out si_227, out di_228, out ds_229)
	Mem236[ss:fp - 0x0002:word16] = DPB(ax_208, al_230 ^ Mem210[ds_229:0x2E4F:byte], 0)
	si = fn0800_5D2F(bp, ds_229, out di, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_589A:
	branch (Mem210[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_58B0
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_58B0:
	Mem225[ds:0x2E4F:word16] = Mem210[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_58A2:
	Mem223[ds:0x2E4F:word16] = Mem210[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_57EB:
	Mem70[ss:fp - 0x0002:word16] = 0x0001
	word16 si_72
	word16 di_73
	selector ds_74
	word16 ax_75 = fn0800_5CD9(bp_58, si_59, di_60, ds_61, wArg00, out bp, out si_72, out di_73, out ds_74)
	branch ax_75 != 0x0000 l0800_580A
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_580A:
	Mem140[ss:fp - 0x0002:word16] = 0x0001
	word16 bp_141
	word16 di_143
	selector ds_144
	word16 si_142
	word16 ax_145 = fn0800_5CD9(bp, si_72, di_73, ds_74, wArg00, out bp_141, out si_142, out di_143, out ds_144)
	branch ax_145 != 0x0000 l0800_5820
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5820:
	fn0800_5B15(bp_141, ds_144, out si_142, out di_143, out ds_144)
	Mem171[ds_144:0x2E29:word16] = DPB(ax_145, 0x00, 8) + 0x0008
	branch Mem171[ds_144:0x2E29:word16] != 0x0008 l0800_5835
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5832:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_58E8:
	Mem176[ss:fp - 0x0002:word16] = 0x0001
	fn0800_5CD9(bp_141, si_142, di_143, ds_144, wArg00, out bp, out si, out di, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5818:
	Mem163[ds_144:0x2E29:word16] = 0x0003
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5835:
	bp = fn0800_5975(bp_141, si_142, di_143, ds_144, out si, out di, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_57F9:
	Mem128[ds_74:0x2E29:word16] = 0x0002
	fn0800_5B15(bp, ds_74, out si, out di, out ds)
	Mem137[ds:0x2E2B:word16] = DPB(ax_75, 0x00, 8) + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5838:
	word16 v13_91 = Mem70[ds:0x29FF:word16] + Mem70[ds:0x2E29:word16]
	Mem92[ds:0x29FF:word16] = v13_91
	Mem96[ds:0x2A01:word16] = Mem92[ds:0x2A01:word16] + (v13_91 <u 0x0000)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5858:
	word16 ax_107 = Mem96[ds:0x2E29:word16]
	Mem109[ds:0x2E29:word16] = Mem96[ds:0x2E29:word16] - 0x0001
	branch ax_107 != 0x0000 l0800_5846
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5846:
	ptr32 es_bx_114 = Mem109[ds:0x2E55:segptr32]
	Mem122[ss:fp - 0x0002:word16] = DPB(ax_107, Mem109[SLICE(es_bx_114, selector, 16):(word16) es_bx_114 - Mem109[ds:0x2E2B:word16]:byte], 0)
	si = fn0800_5D2F(bp, ds, out di, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001

l0800_5863:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):0x0001



word16 fn0800_593F(word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: bp di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_593F_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_593F:
	word16 bp_9
	word16 si_10
	word16 di_11
	selector ds_12
	word16 ax_13 = fn0800_5CD9(bp, si, di, ds, 0x0001, out bp_9, out si_10, out di_11, out ds_12)
	Mem17[ds_12:0x2E29:word16] = ax_13 + 0x0004
	Mem20[ss:fp - 0x0002:word16] = 0x0001
	word16 si_24
	word16 di_25
	selector ds_26
	word16 bp_23
	branch fn0800_5CD9(bp_9, si_10, di_11, ds_12, wArg00, out bp_23, out si_24, out di_25, out ds_26) == 0x0000 l0800_5974
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_595D:
	Mem47[ss:fp - 0x0002:word16] = 0x0001
	word16 si_49
	word16 di_50
	selector ds_51
	word16 ax_52 = fn0800_5CD9(bp_23, si_24, di_25, ds_26, wArg00, out bp_23, out si_49, out di_50, out ds_51)
	Mem59[ds_51:0x2E29:word16] = (Mem47[ds_51:0x2E29:word16] - 0x0001 << 0x0001) + ax_52
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001

l0800_5974:
	return bp_23
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001

fn0800_593F_exit:
// DataOut: bp di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001



word16 fn0800_5975(word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: bp di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5975_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5975:
	Mem2[ds:0x2E2B:word16] = 0x0000
	word16 si_11
	word16 di_12
	word16 bp_10
	selector ds_104
	word16 ax_14 = fn0800_5CD9(bp, si, di, ds, 0x0001, out bp_10, out si_11, out di_12, out ds_104)
	word16 ax_105 = ax_14
	branch ax_14 == 0x0000 l0800_59FA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5989:
	Mem45[ss:fp - 0x0002:word16] = 0x0001
	word16 bp_48
	word16 si_49
	word16 di_50
	selector ds_51
	word16 ax_52 = fn0800_5CD9(bp_10, si_11, di_12, ds_104, wArg00, out bp_48, out si_49, out di_50, out ds_51)
	Mem55[ds_51:0x2E2B:word16] = ax_52
	Mem58[ss:fp - 0x0002:word16] = 0x0001
	word16 si_60
	word16 di_61
	word16 ax_63 = fn0800_5CD9(bp_48, si_49, di_50, ds_51, wArg00, out bp_10, out si_60, out di_61, out ds_104)
	ax_105 = ax_63
	branch ax_63 == 0x0000 l0800_59E3
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59E3:
	branch Mem58[ds_104:0x2E2B:word16] != 0x0000 l0800_59FA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59EA:
	Mem116[ss:fp - 0x0002:word16] = 0x0001
	word16 si_118
	word16 di_119
	word16 ax_121 = fn0800_5CD9(bp_10, si_60, di_61, ds_104, wArg00, out bp_10, out si_118, out di_119, out ds_104)
	Mem125[ds_104:0x2E2B:word16] = ax_121 + 0x0002
	ax_105 = ax_121 + 0x0002
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001

l0800_59A4:
	Mem71[ss:fp - 0x0002:word16] = 0x0001
	word16 bp_72
	word16 si_73
	word16 di_74
	selector ds_75
	word16 ax_76 = fn0800_5CD9(bp_10, si_60, di_61, ds_104, wArg00, out bp_72, out si_73, out di_74, out ds_75)
	Mem84[ds_75:0x2E2B:word16] = (Mem71[ds_75:0x2E2B:word16] << 0x0001) + ax_76 | 0x0004
	Mem87[ss:fp - 0x0002:word16] = 0x0001
	word16 si_89
	word16 di_90
	word16 ax_92 = fn0800_5CD9(bp_72, si_73, di_74, ds_75, wArg00, out bp_10, out si_89, out di_90, out ds_104)
	ax_105 = ax_92
	branch ax_92 != 0x0000 l0800_59FA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59CB:
	Mem100[ss:fp - 0x0002:word16] = 0x0001
	word16 si_102
	word16 di_103
	ax_105 = fn0800_5CD9(bp_10, si_89, di_90, ds_104, wArg00, out bp_10, out si_102, out di_103, out ds_104)
	Mem111[ds_104:0x2E2B:word16] = (Mem100[ds_104:0x2E2B:word16] << 0x0001) + ax_105
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001

l0800_59FA:
	word16 si_26
	word16 di_27
	selector ds_28
	fn0800_5B15(bp_10, ds_104, out si_26, out di_27, out ds_28)
	Mem39[ds_28:0x2E2B:word16] = (Mem2[ds_28:0x2E2B:word16] << 0x08) + DPB(ax_105, 0x00, 8) + 0x0001
	return bp_10
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0001

fn0800_5975_exit:
// DataOut: bp di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:0x00 dx:<invalid> cl:0x08 bp:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001



word16 fn0800_5A0F(word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: bp di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5A0F_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5A0F:
	word16 bp_9
	word16 si_10
	word16 di_11
	selector ds_12
	word16 ax_17 = (fn0800_5CD9(bp, si, di, ds, 0x0004, out bp_9, out si_10, out di_11, out ds_12) << 0x0002) + 0x000C
	Mem19[ds_12:0x2E47:word16] = ax_17
	return bp_9
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_5A0F_exit:
// DataOut: bp di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> bp:<invalid> di:<invalid> si:<invalid> ah:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -2(fp):0x0004



selector fn0800_5A24(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_5A24_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	selector ds_30
	word16 ax_31 = fn0800_5C39(fp - 0x0002, ds, 0x0005, out ds_30)
	Mem33[ss:fp + 0x0006:word16] = ax_31
	branch ax_31 == 0x0000 l0800_5A89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5A49:
	branch Mem33[ss:fp + 0x0006:word16] <=u 0x0010 l0800_5A54
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A4F:
	Mem96[ss:fp + 0x0006:word16] = 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A54:
	word16 di_56 = 0x0000
	word16 si_58 = Mem33[ss:fp + 0x0002:word16] + 0x000A
	branch 0x0000 >=u Mem33[ss:fp + 0x0006:word16] l0800_5A7A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A61:
	Mem85[ss:fp - 0x0008:word16] = 0x0004
	Mem91[Mem85[ss:fp + 0x0004:selector]:si_58:word16] = fn0800_5C39(fp - 0x0002, ds_30, wArg00, out ds_30)
	si_58 = si_58 + 0x000C
	di_56 = di_56 + 0x0001
	branch di_56 <u Mem91[ss:fp + 0x0006:word16] l0800_5A61
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A7A:
	Mem70[ss:fp - 0x0008:word16] = Mem33[ss:fp + 0x0006:word16]
	Mem73[ss:fp - 0x000A:word16] = Mem70[ss:fp + 0x0004:word16]
	Mem76[ss:fp - 0x000C:word16] = Mem73[ss:fp + 0x0002:word16]
	fn0800_4550(fp - 0x0002)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

l0800_5A89:
	return ds_30
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

fn0800_5A24_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>



word16 fn0800_5A8D(selector ds, word16 wArg02, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16)
fn0800_5A8D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5A8D:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5A9A_thunk_fn0800_5AA5:
	word16 bp_18
	selector ds_19
	return fn0800_5AA5(fp - 0x0002, wArg02, ds, out bp_18, out ds_19)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> -8(fp):di -6(fp):si -4(fp):0x0000 -2(fp):bp

fn0800_5A8D_exit:
// DataOut: ax bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -8(fp):di -6(fp):si -4(fp):0x0000 -2(fp):bp



word16 fn0800_5A9F(word16 bp, word16 di, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5A9F_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5A9F:
	Mem9[ss:bp - 0x0002:word16] = Mem0[ss:bp - 0x0002:word16] + 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5AA2_thunk_fn0800_5AA5:
	word16 bp_12
	selector ds_13
	return fn0800_5AA5(bp, di + 0x000C, ds, out bp_12, out ds_13)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x000C

fn0800_5A9F_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid> bp:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid>



word16 fn0800_5AA5(word16 bp, word16 di, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5AA5_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5AA5:
	selector es_5 = Mem0[ss:bp + 0x0006:selector]
	branch Mem0[es_5:di + 0x000A:word16] == 0x0000 l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5AAD_thunk_fn0800_5A9F:
	word16 bp_33
	selector ds_34
	return fn0800_5A9F(bp, di, ds, out bp_33, out ds_34)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid>

l0800_5AAF:
	int32 dx_ax_25 = (int32) ((0x0001 << Mem0[es_5:di + 0x000A:byte]) - 0x0001)
	word16 ax_26 = (word16) dx_ax_25
	word16 dx_27 = SLICE(dx_ax_25, word16, 16)
// DataOut: ax bp di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid>

l0800_5AB9_thunk_fn0800_5ABA:
	word16 bp_29
	selector ds_30
	return fn0800_5ABA(ax_26, dx_27, bp, di, es_5, ds, out bp_29, out ds_30)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid>

fn0800_5AA5_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> di:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> bp:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid>



word16 fn0800_5ABA(word16 ax, word16 dx, word16 bp, word16 di, selector es, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp di ds dx es ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5ABA_entry:
// DataOut: ax bp di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5ABA:
	word16 cx_7 = Mem0[ds:0x29FB:word16] & ax
	branch (Mem0[ds:0x29FD:word16] & dx) != Mem0[es:di + 0x0008:word16] l0800_5ACA_thunk_fn0800_5A9F
// DataOut: bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5ACA_thunk_fn0800_5A9F:
	word16 bp_90
	selector ds_91
	return fn0800_5A9F(bp, di, ds, out bp_90, out ds_91)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> cx:<invalid>

l0800_5ACC:
	branch cx_7 != Mem0[es:di + 0x0006:word16] l0800_5AD0_thunk_fn0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> cx:<invalid>
// LocalsOut: fp(16)

l0800_5AD0_thunk_fn0800_5A9F:
	word16 bp_83
	selector ds_84
	return fn0800_5A9F(bp, di, ds, out bp_83, out ds_84)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> cx:<invalid>

l0800_5AD2:
	selector ds_46
	fn0800_5C39(bp, ds, Mem0[es:Mem0[ss:bp + 0x0004:word16] + (word16) (Mem0[ss:bp - 0x0002:word16] *s 0x000C) + 0x000A:word16], out ds_46)
	branch Mem0[ss:bp - 0x0002:word16] >=u 0x0002 l0800_5AF8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> cx:<invalid>
// LocalsOut: Local -0002(16)

l0800_5AF8:
	Mem64[ss:fp - 0x0002:word16] = Mem0[ss:bp - 0x0002:word16] - 0x0001
	selector ds_66
	word16 ax_67 = fn0800_5C39(bp, ds_46, wArg00, out ds_66)
	word16 bp_81
	*bpOut = Mem64[ss:bp:word16]
	return ax_67 | 0x0001 << Mem64[ss:bp - 0x0002:byte] - 0x01
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> bp:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):<invalid>

l0800_5AEF:
	word16 bp_57
	*bpOut = Mem0[ss:bp:word16]
	return Mem0[ss:bp - 0x0002:word16]
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> bp:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):<invalid>

fn0800_5ABA_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> si:<invalid> bp:<invalid> cl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -2(fp):<invalid>



byte fn0800_5B15(word16 bp, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_5B15_entry:
	*dsOut = ds
	*siOut = si
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5B15:
	word16 dx_10 = Mem0[ds:0x2E71:word16]
	branch Mem0[ds:0x2E73:word16] == Mem0[ds:0x2E6F:word16] l0800_5B2E
// DataOut: bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5B2E:
	branch dx_10 + 0xFFFD == Mem0[ds:0x2E6D:word16] l0800_5B37
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5B37:
	word16 ax_107
	word16 dx_105
	word16 si_66
	selector ds_67
	Mem72[ss:fp - 0x000C:word16] = fn0800_4194(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out si_66, out ds_67)
	Mem74[ss:fp - 0x000E:word16] = dx_10 + 0xFFFD
	Mem77[ss:fp - 0x0010:word16] = Mem74[ds_67:0x29E5:word16]
	Mem80[ss:fp - 0x0012:word16] = Mem77[ds_67:0x29E3:word16]
	byte dl_83
	word16 si_84
	word16 ax_85 = fn0800_AD2F(ds_67, ptrArg00, wArg02, out dl_83, out si_84)
	ui32 bx_cx_95 = SEQ(Mem80[ss:fp - 0x000E:word16], Mem80[ss:fp - 0x000C:word16] - ax_85) - SEQ(dx_10 + 0xFFFD, ax_85)
	Mem98[ss:fp - 0x0004:word16] = SLICE(bx_cx_95, word16, 16)
	Mem99[ss:fp - 0x0006:word16] = (word16) bx_cx_95
	branch Mem99[ss:fp - 0x0004:word16] <u 0x0000 l0800_5B76
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B67:
	branch Mem99[ss:fp - 0x0004:word16] >u 0x0000 l0800_5B6F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B69:
	branch Mem99[ss:fp - 0x0006:word16] <=u 0xFFFD l0800_5B76
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B76:
	dx_105 = Mem99[ss:fp - 0x0004:word16]
	ax_107 = Mem99[ss:fp - 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B6F:
	dx_105 = 0x0000
	ax_107 = 0xFFFD
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B7C:
	Mem108[ss:fp - 0x0008:word16] = dx_105
	Mem109[ss:fp - 0x000A:word16] = ax_107
	Mem112[ss:fp - 0x000C:word16] = Mem109[ds_67:0x29E5:word16]
	Mem115[ss:fp - 0x000E:word16] = Mem112[ds_67:0x29E3:word16]
	Mem118[ss:fp - 0x0010:word16] = Mem115[ss:fp - 0x0008:word16]
	Mem120[ss:fp - 0x0012:word16] = ax_107
	word16 ax_121 = Mem120[ds_67:0x2E73:word16]
	word16 dx_122 = Mem120[ds_67:0x2E71:word16]
	Mem123[ds_67:0x2E6F:word16] = ax_121
	Mem124[ds_67:0x2E6D:word16] = dx_122
	Mem126[ss:fp - 0x0014:word16] = ax_121
	Mem128[ss:fp - 0x0016:word16] = dx_122
	word16 di_133
	selector ds_134
	fn0800_4110(fp - 0x0002, ds_67, wArg00, wArg02, wArg04, wArg08, wArg0A, out di_133, out ds_134)
	word16 ax_137 = Mem128[ss:fp - 0x0008:word16]
	word16 v26_139 = Mem128[ss:fp - 0x0006:word16] - Mem128[ss:fp - 0x000A:word16]
	Mem140[ss:fp - 0x0006:word16] = v26_139
	word16 dx_143 = Mem140[ss:fp - 0x0006:word16]
	Mem146[ss:fp - 0x0004:word16] = Mem140[ss:fp - 0x0004:word16] - ax_137 - (v26_139 <u 0x0000)
	branch false l0800_5BCB
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BBA:
	branch false l0800_5BC1
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BBC:
	branch dx_143 <=u 0x0002 l0800_5BCB
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BC1:
	Mem208[ss:fp - 0x0004:word16] = 0x0000
	Mem209[ss:fp - 0x0006:word16] = 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BCB:
	Mem159[ss:fp - 0x000C:word16] = Mem146[ds_134:0x29E5:word16]
	Mem162[ss:fp - 0x000E:word16] = Mem159[ds_134:0x29E3:word16]
	Mem165[ss:fp - 0x0010:word16] = Mem162[ss:fp - 0x0004:word16]
	Mem168[ss:fp - 0x0012:word16] = Mem165[ss:fp - 0x0006:word16]
	word16 ax_170 = Mem168[ds_134:0x2E71:word16] + Mem168[ss:fp - 0x000A:word16]
	Mem174[ss:fp - 0x0014:word16] = Mem168[ds_134:0x2E73:word16]
	Mem176[ss:fp - 0x0016:word16] = ax_170
	word16 di_177
	selector ds_178
	word16 si_179
	*siOut = fn0800_4110(fp - 0x0002, ds_134, wArg00, wArg02, wArg04, wArg08, wArg0A, out di_177, out ds_178)
	Mem183[ss:fp - 0x000C:word16] = 0x0001
	word16 dx_187 = -Mem183[ss:fp - 0x0006:word16]
	Mem192[ss:fp - 0x000E:word16] = -Mem183[ss:fp - 0x0004:word16] - (dx_187 == 0x0000)
	Mem194[ss:fp - 0x0010:word16] = dx_187
	Mem197[ss:fp - 0x0012:word16] = Mem194[ds_178:0x29E5:word16]
	Mem200[ss:fp - 0x0014:word16] = Mem197[ds_178:0x29E3:word16]
	word16 di_201
	fn0800_ACB3(fp - 0x0002, ds_178, wArg00, wArg02, wArg08, out di_201, out ds)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5B34:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5B2B:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5C0B:
	ptr32 es_bx_33 = Mem0[ds:0x2E6D:segptr32]
	Mem37[ds:0x2E6D:word16] = Mem0[ds:0x2E6D:word16] + 0x0001
	return Mem37[es_bx_33:byte]
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5B15_exit:
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C1A(word16 si, word16 di, selector ds, word16 wArg02, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_5C1A_entry:
	*siOut = si
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C1A:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_5C30
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5C30:
	selector ds_39
	return fn0800_5C39(fp - 0x0002, ds, wArg02, out ds_39)
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_5C27:
	word16 bp_27
	word16 si_28
	word16 di_29
	selector ds_30
	return fn0800_5CD9(fp - 0x0002, si, di, ds, wArg02, out bp_27, out si_28, out di_29, out ds_30)
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

fn0800_5C1A_exit:
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> ah:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C39(word16 bp, selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5C39_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C39:
	word16 si_14 = wArg02
	word16 di_100 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_5CCA:
	word16 si_45 = si_14
	branch si_14 == 0x0000 l0800_5CD1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CD1:
	return di_100
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5C39_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5CCE:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5C4D:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5CA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5C54:
	word16 si_92
	word16 di_93
	selector ds_94
	fn0800_5B15(fp - 0x0002, ds, out si_92, out di_93, out ds_94)
	Mem98[ss:fp - 0x0004:word16] = DPB(ax, 0x00, 8)
	fn0800_5B15(fp - 0x0002, ds_94, out si_45, out di_100, out ds)
	Mem105[ss:fp - 0x0006:word16] = DPB(ax, 0x00, 8)
	word16 dx_116
	word16 ax_117 = fn0800_8C69(DPB(ax, 0x00, 8), 0x18, 0x0000, bp, out dx_116)
	word16 ax_131 = ax_117 + (Mem105[ss:fp - 0x0006:word16] << 0x08)
	word16 ax_135 = ax_131 + Mem105[ss:fp - 0x0004:word16]
	Mem140[ds:0x29FD:word16] = dx_116 + DPB((word16) Mem105[ds:0x2E6D:segptr32], 0x00, 8) + (ax_117 <u 0x0000) + (ax_131 <u 0x0000) + (ax_135 <u 0x0000)
	Mem141[ds:0x29FB:word16] = ax_135
	Mem142[ds:0x2E45:word16] = 0x0010
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CA2:
	branch (Mem0[ds:0x29FB:word16] & 0x0001) == 0x0000 l0800_5CB0
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CAD:
	di_100 = di_100 | Mem0[ss:fp - 0x0008:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CB0:
	word16 ax_72 = Mem0[ds:0x29FD:word16]
	word16 dx_78 = __rcr(Mem0[ds:0x29FB:word16], 0x01, cond(ax_72 >>u 0x0001))
	Mem79[ds:0x29FD:word16] = ax_72 >>u 0x0001
	Mem80[ds:0x29FB:word16] = dx_78
	Mem83[ss:fp - 0x0008:word16] = Mem80[ss:fp - 0x0008:word16] << 0x0001
	Mem86[ds:0x2E45:word16] = Mem83[ds:0x2E45:word16] - 0x0001
	ax = ax_72 >>u 0x0001
	si_14 = si_45 - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)



word16 fn0800_5CD9(word16 bp, word16 si, word16 di, selector ds, word16 wArg02, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax bp di ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16)
fn0800_5CD9_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5CD9:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5CE1_thunk_fn0800_5D25:
	word16 bp_18
	word16 si_19
	word16 di_20
	selector ds_21
	return fn0800_5D25(fp - 0x0002, 0x0000, wArg02, ds, di, si, bp, out bp_18, out si_19, out di_20, out ds_21)
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:0x0000 -6(fp):di -4(fp):si -2(fp):bp

fn0800_5CD9_exit:
// DataOut: ax bp di ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> ah:0x00 dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00 -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_5CF7(word16 ax, word16 bp, word16 si, word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp di ds si ss
// LiveOut: ax bp di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5CF7_entry:
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5CF7:
	Mem3[ds:0x29FB:word16] = ax
	Mem5[ds:0x2E45:word16] = 0x0008
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5CFA_thunk_fn0800_5D00:
	word16 bp_9
	word16 si_10
	word16 di_11
	selector ds_12
	return fn0800_5D00(bp, si, di, ds, out bp_9, out si_10, out di_11, out ds_12)
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_5CF7_exit:
// DataOut: ax bp di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> di:<invalid> bp:<invalid> ah:0x00 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00



word16 fn0800_5D00(word16 bp, word16 si, word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax bp di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5D00_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5D00:
	word16 si_12 = si << 0x0001
	branch (Mem0[ds:0x29FB:word16] & 0x0080) == 0x0000 l0800_5D0E
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5D0D:
	si_12 = (si << 0x0001) + 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:si << 0x0001 ax:<invalid>

l0800_5D0E:
	word16 dx_14 = Mem0[ds:0x29FB:word16]
	Mem21[ds:0x29FD:word16] = __rcl(Mem0[ds:0x29FD:word16], 0x01, cond(dx_14 << 0x0001))
	Mem22[ds:0x29FB:word16] = dx_14 << 0x0001
	Mem24[ds:0x2E45:word16] = Mem22[ds:0x2E45:word16] - 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:<invalid> ax:<invalid>

l0800_5D24_thunk_fn0800_5D25:
	word16 bp_32
	word16 si_33
	word16 di_34
	selector ds_35
	return fn0800_5D25(bp, si_12, di - 0x0001, ds, wArg00, wArg02, wArg04, out bp_32, out si_33, out di_34, out ds_35)
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:<invalid> ax:<invalid> dx:<invalid> di:di - 0x0001

fn0800_5D00_exit:
// DataOut: ax bp di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> di:<invalid> bp:<invalid> ah:0x00 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00



word16 fn0800_5D25(word16 bp, word16 si, word16 di, selector ds, word16 wArg00, word16 wArg02, word16 wArg04, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax bp di ds si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0004(16)
fn0800_5D25_entry:
	*dsOut = ds
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16)

l0800_5D25:
	branch di != 0x0000 l0800_5CE5
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16)

l0800_5CE5:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5D00
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

l0800_5CEA_thunk_fn0800_5D00:
	word16 bp_55
	word16 si_56
	word16 di_57
	selector ds_58
	return fn0800_5D00(bp, si, di, ds, out bp_55, out si_56, out di_57, out ds_58)
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

l0800_5CEC:
	word16 si_40
	word16 di_41
	selector ds_42
	fn0800_5B15(bp, ds, out si_40, out di_41, out ds_42)
	Mem47[ds_42:0x29FD:word16] = 0x0000
	word16 ax_46 = DPB(ax, 0x00, 8)
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

l0800_5CF1_thunk_fn0800_5CF7:
	word16 bp_48
	word16 si_49
	word16 di_50
	selector ds_51
	return fn0800_5CF7(ax_46, bp, si_40, di_41, ds_42, out bp_48, out si_49, out di_50, out ds_51)
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ah:0x00 ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid>

l0800_5D29:
	word16 di_26
	*diOut = wArg00
	word16 si_29
	*siOut = wArg02
	word16 bp_32
	*bpOut = wArg04
	return si
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di

fn0800_5D25_exit:
// DataOut: ax bp di ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> si:<invalid> bp:<invalid> ah:0x00 dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:0x04 dh:<invalid> bh:0x40 bl:0x00



word16 fn0800_5D2F(word16 bp, selector ds, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_5D2F_entry:
	*dsOut = ds
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5D2F:
	word16 ax_115 = Mem0[ds:0x2E5B:word16]
	word16 dx_9 = Mem0[ds:0x2E59:word16]
	branch ax_115 != Mem0[ds:0x2E57:word16] l0800_5D9E
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5D40:
	branch dx_9 - 0x0001 != Mem0[ds:0x2E55:word16] l0800_5D9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5D46:
	selector ds_87 = fn0800_4152(fp - 0x0002, ds, Mem0[ds:0x2E59:word16] + Mem0[ds:0x2E31:word16], Mem0[ds:0x2E5B:word16], 0xFFFF - Mem0[ds:0x2E31:word16], Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16])
	Mem91[ss:fp - 0x0004:word16] = Mem0[ds_87:0x2E31:word16]
	word16 ax_93 = Mem91[ds_87:0x2E55:word16] - Mem91[ds_87:0x2E31:word16]
	Mem97[ss:fp - 0x0006:word16] = Mem91[ds_87:0x2E57:word16]
	Mem99[ss:fp - 0x0008:word16] = ax_93
	Mem102[ss:fp - 0x000A:word16] = Mem99[ds_87:0x2E5B:word16]
	Mem105[ss:fp - 0x000C:word16] = Mem102[ds_87:0x2E59:word16]
	word16 di_111
	si = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08, out di_111, out ds)
	ax_115 = Mem105[ds:0x2E5B:word16]
	word16 dx_117 = Mem105[ds:0x2E59:word16] + Mem105[ds:0x2E31:word16]
	Mem119[ds:0x2E57:word16] = ax_115
	Mem120[ds:0x2E55:word16] = dx_117
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5D9E:
	Mem39[Mem0[ds:0x2E55:segptr32]:byte] = Mem0[ss:fp + 0x0002:byte]
	Mem41[ds:0x2E55:word16] = Mem39[ds:0x2E55:word16] + 0x0001
	Mem56[ds:0x2E4D:word16] = Mem41[ds:((DPB(ax_115, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem41[ds:0x2E4D:word16] >>u 0x08
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5D2F_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5DCE(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5DCE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5DCE:
	word16 ax_153
	word16 si_18
	selector ds_138
	word16 ax_20 = fn0800_4194(fp - 0x0002, ds, wArg02, wArg04, out si_18, out ds_138)
	branch false l0800_5DEE
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5DE2:
	branch dx != 0x0000 l0800_5DE9
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DE4:
	branch ax_20 <u 0x0400 l0800_5DEE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DEE:
	Mem145[ss:fp - 0x0006:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem148[ss:fp - 0x0008:word16] = Mem145[ss:fp + 0x0002:word16]
	word16 si_149
	ax_153 = fn0800_4194(fp - 0x0002, ds_138, wArg00, wArg02, out si_149, out ds_138) & 0xFFFC
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DE9:
	ax_153 = 0x0400
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DFD:
	word16 si_34 = ax_153
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E5B:
	word16 si_43 = si_34
	branch si_34 != 0x0000 l0800_5E01
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E01:
	Mem64[ss:fp - 0x0006:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem67[ss:fp - 0x0008:word16] = Mem64[ss:fp + 0x0002:word16]
	word16 dx_69
	word16 di_71
	branch fn0800_3E27(fp - 0x0002, ds_138, wArg00, wArg02, out dx_69, out si_43, out di_71, out ds_138) != 0x524E l0800_5E58
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E12:
	Mem88[ss:fp - 0x0006:word16] = Mem67[ss:fp + 0x0004:word16]
	Mem91[ss:fp - 0x0008:word16] = Mem88[ss:fp + 0x0002:word16]
	word16 dx_92
	word16 di_94
	selector ds_95
	branch (fn0800_3E27(fp - 0x0002, ds_138, wArg00, wArg02, out dx_92, out si_43, out di_94, out ds_95) & 0xFF00) != 0x4300 l0800_5E40
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E40:
	Mem124[ss:fp - 0x0006:word16] = 0x0001
	Mem128[ss:fp - 0x0008:word16] = 0xFFFF
	Mem130[ss:fp - 0x000A:word16] = 0xFFFE
	Mem133[ss:fp - 0x000C:word16] = Mem130[ss:fp + 0x0004:word16]
	Mem136[ss:fp - 0x000E:word16] = Mem133[ss:fp + 0x0002:word16]
	word16 di_137
	fn0800_ACB3(fp - 0x0002, ds_95, wArg00, wArg02, wArg08, out di_137, out ds_138)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E58:
	si_34 = si_43 - 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E26:
	Mem103[ss:fp - 0x0006:word16] = 0x0001
	Mem107[ss:fp - 0x0008:word16] = 0xFFFF
	Mem109[ss:fp - 0x000A:word16] = 0xFFFC
	Mem112[ss:fp - 0x000C:word16] = Mem109[ss:fp + 0x0004:word16]
	Mem115[ss:fp - 0x000E:word16] = Mem112[ss:fp + 0x0002:word16]
	word16 di_117
	selector ds_118
	fn0800_ACB3(fp - 0x0002, ds_95, wArg00, wArg02, wArg08, out di_117, out ds_118)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_5E5F:
	return si_43
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_5DCE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void fn0800_5E64(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_5E64_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5E64:
	word16 bp_390 = fp - 0x0002
	word16 di_18 = 0x2202
	word16 si_19 = 0x4271
	word16 cx_20 = 0x0004
	word16 dx_22 = 0x0003
	branch true l0800_5E80
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E7E:
	cx_20 = 0x0003
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:0x2202 si:0x4271 cx:0x0004 dx:0x0003 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E80:
	word16 ax_27 = 0x0000
	byte Z_33 = cond(0x0000)
	byte C_34 = false
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:0x2202 si:0x4271 cx:<invalid> dx:0x0003 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E82:
	branch cx_20 == 0x0000 l0800_5E84
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E82_1:
	byte SCZO_935 = cond(Mem0[ds:si_946:byte] - Mem0[ds:di_947:byte])
	Z_33 = SCZO_935 (alias)
	C_34 = SCZO_935 (alias)
	si_19 = si_946 + 0x0001
	di_18 = di_947 + 0x0001
	cx_20 = cx_20 - 0x0001
	word16 si_946 = si_19
	word16 di_947 = di_18
	branch Mem0[ds:si_946:byte] != Mem0[ds:di_947:byte] l0800_5E82
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E84:
	branch Z_33 l0800_5E8B
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E86:
	word16 ax_926 = 0x0000 - C_34
	ax_27 = ax_926 - 0xFFFF - (ax_926 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E8B:
	word16 ax_61 = ax_27
	branch ax_27 == 0x0000 l0800_5EC3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E8F:
	word16 di_842 = 0x4271
	word16 si_843 = 0x2202
	word16 cx_845 = 0x0004
	dx_22 = 0xFFFF
	branch true l0800_5EA5
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA1:
	cx_845 = 0x0003
	dx_22 = 0x0000
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:0x4271 si:0x2202 cx:0x0004 dx:0xFFFF ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA5:
	word16 cx_860 = cx_845 >>u 0x0001
	cx_869 = cx_860
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:0x4271 si:0x2202 cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA7:
	word16 cx_869
	branch cx_869 == 0x0000 l0800_5EA9
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA9:
	word16 cx_877 = cx_869 * 0x0002 + (cx_860 <u 0x0000)
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAB:
	branch cx_877 == 0x0000 l0800_5EAD
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAD:
	word16 cx_890 = dx_22
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EB1:
	branch cx_890 == 0x0000 l0800_5EB3
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EB3:
	fn0800_09A3(fp - 0x0002, ds)
	ax_61 = 0x4271
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)
// Terminates process

l0800_5EC3:
	word16 ax_88 = (DPB(ax_61, 0x00, 8) << 0x08) + DPB(dx_22, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_5EED
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EDC:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_5EE4
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EDE:
	branch ax_88 <u Mem0[ds:0x2A07:word16] l0800_5EED
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EED:
	branch Mem0[ds:0x2A0D:word16] <u 0x0000 l0800_5F0A
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EF4:
	branch Mem0[ds:0x2A0D:word16] >u 0x0000 l0800_5EFE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EF6:
	branch Mem0[ds:0x2A0B:word16] <=u 0x7FF0 l0800_5F0A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EFE:
	Mem823[ds:0x2A0D:word16] = 0x0000
	Mem824[ds:0x2A0B:word16] = 0x7FF0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F0A:
	Mem131[ss:fp - 0x0040:word16] = 0x0000
	Mem135[ss:fp - 0x0042:word16] = 0x0000
	Mem137[ss:fp - 0x0044:word16] = 0x0002
	Mem140[ss:fp - 0x0046:word16] = Mem137[ds:0x29E5:word16]
	Mem143[ss:fp - 0x0048:word16] = Mem140[ds:0x29E3:word16]
	word16 di_147
	selector ds_148
	fn0800_ACB3(fp - 0x0002, ds, wArg00, wArg02, wArg08, out di_147, out ds_148)
	Mem154[ss:fp - 0x0040:word16] = Mem143[ds_148:0x29E5:word16]
	Mem157[ss:fp - 0x0042:word16] = Mem154[ds_148:0x29E3:word16]
	word16 si_158
	word16 di_159
	selector ds_160
	Mem164[ss:fp - 0x0024:word16] = fn0800_3FAD(fp - 0x0002, ds_148, wArg00, wArg02, out si_158, out di_159, out ds_160)
	Mem167[ss:fp - 0x0040:word16] = Mem164[ds_160:0x29E5:word16]
	Mem170[ss:fp - 0x0042:word16] = Mem167[ds_160:0x29E3:word16]
	word16 si_171
	word16 di_172
	selector ds_173
	word16 ax_174 = fn0800_3FAD(fp - 0x0002, ds_160, wArg00, wArg02, out si_171, out di_172, out ds_173)
	word16 di_176 = ax_174
	branch Mem170[ss:fp - 0x0024:word16] == 0x0000 l0800_5F48
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5F47:
	di_176 = ax_174 - 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:0x02 dh:0x00 bx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5F48:
	word16 dx_185
	word16 ax_187 = fn0800_8C69(di_176, 0x09, 0x0000, bp, out dx_185) + Mem170[ss:fp - 0x0024:word16]
	Mem191[ss:fp - 0x0004:word16] = dx_185 + (ax_187 <u 0x0000)
	Mem192[ss:fp - 0x0006:word16] = ax_187
	word16 ax_193 = Mem192[ss:fp - 0x0004:word16]
	word16 dx_194 = Mem192[ss:fp - 0x0006:word16]
	branch ax_193 <u Mem192[ds_173:0x2A09:word16] l0800_5F7E
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:0x02 dh:0x00 bx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F69:
	branch ax_193 >u Mem192[ds_173:0x2A09:word16] l0800_5F71
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F6B:
	branch dx_194 <=u Mem192[ds_173:0x2A07:word16] l0800_5F7E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F71:
	dx_194 = Mem192[ds_173:0x2A07:word16]
	Mem815[ss:fp - 0x0004:word16] = Mem192[ds_173:0x2A09:word16]
	Mem816[ss:fp - 0x0006:word16] = dx_194
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F7E:
	Mem208[ss:fp - 0x0040:word16] = Mem192[ds_173:0x29E5:word16]
	Mem211[ss:fp - 0x0042:word16] = Mem208[ds_173:0x29E3:word16]
	word16 si_212
	word16 di_213
	selector ds_214
	Mem218[ss:fp - 0x0026:word16] = fn0800_3FAD(fp - 0x0002, ds_173, wArg00, wArg02, out si_212, out di_213, out ds_214)
	Mem221[ss:fp - 0x0040:word16] = Mem218[ds_214:0x29E5:word16]
	Mem224[ss:fp - 0x0042:word16] = Mem221[ds_214:0x29E3:word16]
	word16 si_225
	word16 di_226
	selector ds_227
	Mem231[ss:fp - 0x0028:word16] = fn0800_3FAD(fp - 0x0002, ds_214, wArg00, wArg02, out si_225, out di_226, out ds_227)
	Mem234[ss:fp - 0x0040:word16] = Mem231[ds_227:0x29E5:word16]
	Mem237[ss:fp - 0x0042:word16] = Mem234[ds_227:0x29E3:word16]
	word16 si_238
	word16 di_239
	selector ds_240
	Mem244[ss:fp - 0x002A:word16] = fn0800_3FAD(fp - 0x0002, ds_227, wArg00, wArg02, out si_238, out di_239, out ds_240)
	Mem247[ss:fp - 0x0040:word16] = Mem244[ds_240:0x29E5:word16]
	Mem250[ss:fp - 0x0042:word16] = Mem247[ds_240:0x29E3:word16]
	word16 si_251
	word16 di_252
	selector ds_253
	Mem257[ss:fp - 0x002C:word16] = fn0800_3FAD(fp - 0x0002, ds_240, wArg00, wArg02, out si_251, out di_252, out ds_253)
	Mem260[ss:fp - 0x0040:word16] = Mem257[ds_253:0x29E5:word16]
	Mem263[ss:fp - 0x0042:word16] = Mem260[ds_253:0x29E3:word16]
	word16 si_264
	word16 di_265
	selector ds_266
	Mem270[ss:fp - 0x002E:word16] = fn0800_3FAD(fp - 0x0002, ds_253, wArg00, wArg02, out si_264, out di_265, out ds_266)
	Mem273[ss:fp - 0x0040:word16] = Mem270[ds_266:0x29E5:word16]
	Mem276[ss:fp - 0x0042:word16] = Mem273[ds_266:0x29E3:word16]
	word16 si_277
	word16 di_278
	selector ds_279
	Mem283[ss:fp - 0x0030:word16] = fn0800_3FAD(fp - 0x0002, ds_266, wArg00, wArg02, out si_277, out di_278, out ds_279)
	Mem286[ss:fp - 0x0040:word16] = Mem283[ds_279:0x29E5:word16]
	Mem289[ss:fp - 0x0042:word16] = Mem286[ds_279:0x29E3:word16]
	word16 si_290
	word16 di_291
	selector ds_292
	fn0800_3FAD(fp - 0x0002, ds_279, wArg00, wArg02, out si_290, out di_291, out ds_292)
	Mem298[ss:fp - 0x0040:word16] = Mem289[ds_292:0x29E5:word16]
	Mem301[ss:fp - 0x0042:word16] = Mem298[ds_292:0x29E3:word16]
	word16 si_302
	word16 di_303
	selector ds_304
	Mem308[ss:fp - 0x0032:word16] = fn0800_3FAD(fp - 0x0002, ds_292, wArg00, wArg02, out si_302, out di_303, out ds_304)
	Mem311[ss:fp - 0x0040:word16] = Mem308[ds_304:0x29E5:word16]
	Mem314[ss:fp - 0x0042:word16] = Mem311[ds_304:0x29E3:word16]
	word16 si_315
	word16 di_316
	selector ds_317
	Mem321[ss:fp - 0x0034:word16] = fn0800_3FAD(fp - 0x0002, ds_304, wArg00, wArg02, out si_315, out di_316, out ds_317)
	Mem324[ss:fp - 0x0040:word16] = Mem321[ds_317:0x29E5:word16]
	Mem327[ss:fp - 0x0042:word16] = Mem324[ds_317:0x29E3:word16]
	word16 si_328
	word16 di_329
	selector ds_330
	Mem334[ss:fp - 0x0036:word16] = fn0800_3FAD(fp - 0x0002, ds_317, wArg00, wArg02, out si_328, out di_329, out ds_330)
	Mem337[ss:fp - 0x0040:word16] = Mem334[ds_330:0x29E5:word16]
	Mem340[ss:fp - 0x0042:word16] = Mem337[ds_330:0x29E3:word16]
	word16 si_341
	word16 di_342
	selector ds_343
	word16 ax_344 = fn0800_3FAD(fp - 0x0002, ds_330, wArg00, wArg02, out si_341, out di_342, out ds_343)
	Mem348[ss:fp - 0x0040:word16] = Mem340[ds_343:0x29E1:word16]
	Mem351[ss:fp - 0x0042:word16] = Mem348[ds_343:0x29DF:word16]
	Mem365[ss:fp - 0x0044:word16] = 0x0000
	Mem367[ss:fp - 0x0046:word16] = (DPB(ax_344, 0x00, 8) << 0x08) + DPB(dx_194, 0x00, 8)
	Mem369[ss:fp - 0x0048:word16] = ds_343
	Mem372[ss:fp - 0x004A:word16] = 0x2E77
	word16 dx_361 = 0x0000
	word16 ax_370 = 0x2E77
	selector ds_375 = fn0800_4152(fp - 0x0002, ds_343, wArg00, wArg02, wArg04, wArg08, wArg0A)
	word16 sp_376 = fp - 0x003E
	branch Mem372[ss:fp - 0x0026:word16] != 0x0000 l0800_6064
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6064:
	Mem478[ss:fp - 0x0040:word16] = 0x0000
	Mem480[ss:fp - 0x0042:word16] = 0xFFFF
	fn0800_4311(0x0000, 0xFFFF, ds_375, wArg00, wArg02)
	Mem482[ss:fp - 0x000C:word16] = 0xFFFF
	Mem483[ss:fp - 0x000E:word16] = 0x0000
	Mem488[ss:fp - 0x0040:word16] = 0x0000
	Mem490[ss:fp - 0x0042:word16] = 0x0000
	Mem493[ss:fp - 0x0044:word16] = Mem490[ss:fp - 0x0036:word16]
	Mem496[ss:fp - 0x0046:word16] = Mem493[ds_375:0x29E5:word16]
	Mem499[ss:fp - 0x0048:word16] = Mem496[ds_375:0x29E3:word16]
	word16 di_500
	selector ds_501
	fn0800_ACB3(fp - 0x0002, ds_375, wArg00, wArg02, wArg08, out di_500, out ds_501)
	Mem508[ss:fp - 0x0038:word16] = Mem499[ss:fp - 0x000E:word16]
	dx_361 = 0xFFFF
	word16 si_504 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_60D6:
	branch si_504 != Mem508[ss:fp - 0x0026:word16] l0800_6096
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> cl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6096:
	Mem769[ss:fp - 0x0040:word16] = Mem508[ds_501:0x29E5:word16]
	Mem772[ss:fp - 0x0042:word16] = Mem769[ds_501:0x29E3:word16]
	word16 si_773
	word16 di_774
	selector ds_775
	Mem779[ss:fp - 0x0024:word16] = fn0800_3FAD(fp - 0x0002, ds_501, wArg00, wArg02, out si_773, out di_774, out ds_775)
	Mem782[ss:fp - 0x0040:word16] = Mem779[ds_775:0x29E5:word16]
	Mem785[ss:fp - 0x0042:word16] = Mem782[ds_775:0x29E3:word16]
	word16 si_786
	word16 di_787
	word16 dx_796
	word16 ax_798 = fn0800_8C69(fn0800_3FAD(fp - 0x0002, ds_775, wArg00, wArg02, out si_786, out di_787, out ds_501), 0x04, 0x0000, bp, out dx_796) + Mem785[ss:fp - 0x0024:word16]
	dx_361 = dx_796 + (ax_798 <u 0x0000)
	selector es_802 = Mem785[ss:fp - 0x000C:selector]
	word16 bx_803 = Mem785[ss:fp - 0x0038:word16]
	Mem804[es_802:bx_803 + 0x0002:word16] = dx_361
	Mem805[es_802:bx_803:word16] = ax_798
	Mem807[ss:fp - 0x0038:word16] = Mem805[ss:fp - 0x0038:word16] + 0x0004
	si_504 = si_786 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> cl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_60DB:
	Mem524[ss:fp - 0x0040:word16] = 0x667B
	Mem527[ss:fp - 0x0042:word16] = 0x0004
	Mem530[ss:fp - 0x0044:word16] = Mem527[ss:fp - 0x0026:word16]
	Mem533[ss:fp - 0x0046:word16] = Mem530[ss:fp - 0x000C:word16]
	Mem536[ss:fp - 0x0048:word16] = Mem533[ss:fp - 0x000E:word16]
	bp_390 = fn0800_B95E(fp - 0x0002, ds_501)
	word16 di_541 = Mem536[ss:bp_390 - 0x000C:word16]
	ax_370 = -false
	Mem548[ss:bp_390 - 0x0038:word16] = ax_370
	word16 si_540 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> cl:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_620C:
	branch si_540 == Mem548[ss:bp_390 - 0x0024:word16] l0800_6214
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6214:
	Mem759[ss:fp - 0x0042:word16] = Mem548[ss:bp_390 - 0x000A:word16]
	Mem762[ss:fp - 0x0044:word16] = Mem759[ss:bp_390 - 0x000C:word16]
	fn0800_4346(ds_501, wArg00, wArg02, out ds_375)
	sp_376 = fp - 0x0040
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6211:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6104:
	selector es_567 = Mem548[ss:bp_390 - 0x000A:selector]
	word16 ax_568 = Mem548[es_567:di_541 + 0x0002:word16]
	word16 dx_569 = Mem548[es_567:di_541:word16]
	Mem570[ss:bp_390 - 0x0012:word16] = ax_568
	Mem571[ss:bp_390 - 0x0014:word16] = dx_569
	Mem576[ss:bp_390 - 0x000E:word16] = ax_568 & 0x000F
	Mem577[ss:bp_390 - 0x0010:word16] = dx_569 & 0xFFF0
	Mem580[ss:fp - 0x0042:word16] = Mem577[ds_501:0x29E1:word16]
	Mem583[ss:fp - 0x0044:word16] = Mem580[ds_501:0x29DF:word16]
	Mem587[ss:fp - 0x0046:word16] = DPB(ax_568 & 0x000F, 0x00, 0)
	word16 di_588
	selector ds_589
	fn0800_4047(bp_390, ds_501, bArg00, ptrArg02, wArg04, out di_588, out ds_589)
	Mem595[ss:fp - 0x0042:word16] = Mem587[ds_589:0x29E1:word16]
	Mem598[ss:fp - 0x0044:word16] = Mem595[ds_589:0x29DF:word16]
	word16 dx_602
	Mem605[ss:fp - 0x0046:word16] = fn0800_8CAA(Mem598[ss:bp_390 - 0x0010:word16], 0x04, Mem598[ss:bp_390 - 0x000E:word16], bp, out dx_602)
	selector ds_606
	word16 di_607 = fn0800_40BF(bp_390, ds_589, bArg00, wArg02, wArg04, out ds_606)
	Mem610[ss:bp_390 - 0x0022:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6150:
	selector es_620 = Mem610[ss:bp_390 - 0x000A:selector]
	word16 dx_623 = Mem610[es_620:di_607:word16] - Mem610[ss:bp_390 - 0x0010:word16]
	word16 ax_626 = Mem610[es_620:di_607 + 0x0002:word16] - Mem610[ss:bp_390 - 0x000E:word16] - (dx_623 <u 0x0000)
	Mem627[ss:bp_390 - 0x0016:word16] = ax_626
	Mem628[ss:bp_390 - 0x0018:word16] = dx_623
	word16 v74_629 = Mem628[ss:bp_390 - 0x0010:word16] + dx_623
	Mem630[ss:bp_390 - 0x0010:word16] = v74_629
	Mem634[ss:bp_390 - 0x000E:word16] = Mem630[ss:bp_390 - 0x000E:word16] + ax_626 + (v74_629 <u 0x0000)
	branch Mem634[ss:bp_390 - 0x0016:word16] >u 0x0000 l0800_61B9
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6172:
	branch Mem634[ss:bp_390 - 0x0016:word16] != 0x0000 l0800_617B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6174:
	branch Mem634[ss:bp_390 - 0x0018:word16] >u 0x00FF l0800_61B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_617B:
	word16 dx_715 = Mem634[ss:bp_390 - 0x0010:word16] - Mem634[ss:bp_390 - 0x0014:word16]
	word16 ax_720 = Mem634[ss:bp_390 - 0x000E:word16] - Mem634[ss:bp_390 - 0x0012:word16] - (dx_715 <u 0x0000)
	branch false l0800_61B9
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_618B:
	branch false l0800_6192
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_618D:
	branch dx_715 >=u 0xFFF0 l0800_61B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6192:
	branch Mem634[ss:bp_390 - 0x0022:word16] == 0x00FF l0800_61B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6199:
	Mem734[ss:fp - 0x0042:word16] = Mem634[ds_606:0x29E1:word16]
	Mem737[ss:fp - 0x0044:word16] = Mem734[ds_606:0x29DF:word16]
	Mem741[ss:fp - 0x0046:word16] = DPB(ax_720, Mem737[ss:bp_390 - 0x0018:byte], 0)
	word16 di_742
	fn0800_4047(bp_390, ds_606, bArg00, ptrArg02, wArg04, out di_742, out ds_606)
	Mem747[ss:bp_390 - 0x0022:word16] = Mem741[ss:bp_390 - 0x0022:word16] + 0x0001
	di_607 = di_742 + 0x0004
	si_540 = si_540 + 0x0001
	branch si_540 != Mem747[ss:bp_390 - 0x0024:word16] l0800_6150
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_61B9:
	Mem651[ss:fp - 0x0042:word16] = 0x0001
	word16 ax_655 = -(Mem651[ss:bp_390 - 0x0022:word16] + 0x0003)
	Mem660[ss:fp - 0x0044:word16] = Mem651[ss:bp_390 - 0x0038:word16] - (ax_655 == 0x0000)
	Mem662[ss:fp - 0x0046:word16] = ax_655
	Mem665[ss:fp - 0x0048:word16] = Mem662[ds_606:0x29E1:word16]
	Mem668[ss:fp - 0x004A:word16] = Mem665[ds_606:0x29DF:word16]
	word16 di_669
	selector ds_670
	word16 ax_671 = fn0800_ACB3(bp_390, ds_606, wArg00, wArg02, wArg08, out di_669, out ds_670)
	Mem676[ss:fp - 0x0042:word16] = Mem668[ds_670:0x29E1:word16]
	Mem679[ss:fp - 0x0044:word16] = Mem676[ds_670:0x29DF:word16]
	Mem683[ss:fp - 0x0046:word16] = DPB(ax_671, Mem679[ss:bp_390 - 0x0022:byte], 0)
	word16 di_684
	selector ds_685
	fn0800_4047(bp_390, ds_670, bArg00, ptrArg02, wArg04, out di_684, out ds_685)
	Mem690[ss:fp - 0x0042:word16] = 0x0001
	word16 ax_691 = Mem690[ss:bp_390 - 0x0022:word16]
	Mem699[ss:fp - 0x0044:word16] = ax_691 <u 0x0002
	Mem701[ss:fp - 0x0046:word16] = ax_691 + 0x0002
	Mem704[ss:fp - 0x0048:word16] = Mem701[ds_685:0x29E1:word16]
	Mem707[ss:fp - 0x004A:word16] = Mem704[ds_685:0x29DF:word16]
	dx_361 = ax_691 <u 0x0002
	ax_370 = fn0800_ACB3(bp_390, ds_685, wArg00, wArg02, wArg08, out di_541, out ds_501)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6061:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6220:
	word16 sp_394 = sp_376 - 0x0002
	Mem395[ss:sp_394:word16] = Mem372[ds_375:0x29E1:word16]
	Mem398[ss:sp_394 - 0x0002:word16] = Mem395[ds_375:0x29DF:word16]
	Mem402[ss:sp_394 - 0x0004:word16] = DPB(ax_370, 0x00, 0)
	word16 di_405
	selector ds_406
	fn0800_4047(bp_390, ds_375, bArg00, ptrArg02, wArg04, out di_405, out ds_406)
	Mem412[ss:sp_394:word16] = Mem402[ds_406:0x29E1:word16]
	Mem415[ss:sp_394 - 0x0002:word16] = Mem412[ds_406:0x29DF:word16]
	byte dl_417
	word16 si_418
	ui32 dx_ax_422 = SEQ(dx_361, fn0800_AD2F(ds_406, ptrArg00, wArg02, out dl_417, out si_418) + 0xFFE0)
	Mem428[ss:bp_390 - 0x001A:word16] = SLICE(dx_ax_422 + 0x00FFFFE0, word16, 16)
	Mem429[ss:bp_390 - 0x001C:word16] = (word16) (dx_ax_422 + 0x00FFFFE0)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6266:
	word16 ax_436 = Mem429[ss:bp_390 - 0x001C:word16]
	branch (ax_436 & 0x000F) != 0x0000 l0800_624D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_624D:
	word16 sp_452 = sp_376 - 0x0002
	Mem453[ss:sp_452:word16] = Mem429[ds_406:0x29E1:word16]
	Mem456[ss:sp_452 - 0x0002:word16] = Mem453[ds_406:0x29DF:word16]
	Mem460[ss:sp_452 - 0x0004:word16] = DPB(ax_436 & 0x000F, 0x00, 0)
	word16 di_461
	fn0800_4047(bp_390, ds_406, bArg00, ptrArg02, wArg04, out di_461, out ds_406)
	word16 v66_465 = Mem460[ss:bp_390 - 0x001C:word16] + 0x0001
	Mem466[ss:bp_390 - 0x001C:word16] = v66_465
	Mem470[ss:bp_390 - 0x001A:word16] = Mem466[ss:bp_390 - 0x001A:word16] + (v66_465 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6271:
	word16 ax_442 = Mem429[ss:bp_390 - 0x0026:word16]
// DataOut: ax bp cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6276_thunk_fn0800_6278:
	fn0800_6278(ax_442 << 0x04, 0x04, bp_390, ds_406)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x04 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5EE4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp

fn0800_5E64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5EB1_1:
	Mem901[ds:di_842:byte] = 0x00
	di_842 = di_842 + 0x0001
	cx_890 = cx_890 - 0x0001
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAB_1:
	Mem885[ds:di_842:byte] = Mem0[ds:si_843:byte]
	si_843 = si_843 + 0x0001
	di_842 = di_842 + 0x0001
	cx_877 = cx_877 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA7_1:
	Mem872[ds:di_842:word16] = Mem0[ds:si_843:word16]
	si_843 = si_843 + 0x0002
	di_842 = di_842 + 0x0002
	cx_869 = cx_869 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)



void fn0800_6278(word16 ax, byte cl, word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp cl ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_6278_entry:
// DataOut: ax bp cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6278:
	word16 v6_6 = Mem0[ss:bp - 0x0004:word16] - ax
	Mem7[ss:bp - 0x0004:word16] = v6_6
	Mem11[ss:bp - 0x0002:word16] = Mem7[ss:bp - 0x0002:word16] - (v6_6 <u 0x0000)
	word16 di_32
	selector ds_33
	fn0800_ACB3(bp, ds, Mem11[ds:0x29E3:word16], Mem11[ds:0x29E5:word16], 0x0000, out di_32, out ds_33)
	Mem39[ss:fp - 0x0002:word16] = Mem11[ss:bp - 0x0002:word16]
	Mem42[ss:fp - 0x0004:word16] = Mem39[ss:bp - 0x0004:word16]
	Mem45[ss:fp - 0x0006:word16] = Mem42[ss:bp - 0x0002:word16]
	Mem48[ss:fp - 0x0008:word16] = Mem45[ss:bp - 0x0004:word16]
	selector ds_53 = fn0800_75EA(bp, ds_33, wArg00, wArg02, wArg04, wArg06)
	Mem60[ss:fp - 0x0004:word16] = 0x0000
	Mem63[ss:fp - 0x0006:word16] = 0x0000
	Mem65[ss:fp - 0x0008:word16] = 0x0020
	Mem68[ss:fp - 0x000A:word16] = Mem65[ds_53:0x29E1:word16]
	Mem71[ss:fp - 0x000C:word16] = Mem68[ds_53:0x29DF:word16]
	word16 di_73
	selector ds_74
	fn0800_ACB3(bp, ds_53, wArg00, wArg02, wArg08, out di_73, out ds_74)
	Mem80[ss:fp - 0x0004:word16] = Mem71[ds_74:0x29E1:word16]
	Mem83[ss:fp - 0x0006:word16] = Mem80[ds_74:0x29DF:word16]
	Mem86[ss:fp - 0x0008:word16] = Mem83[ss:bp - 0x0030:word16]
	selector ds_88
	fn0800_40BF(bp, ds_74, bArg00, wArg02, wArg04, out ds_88)
	Mem94[ss:fp - 0x0004:word16] = Mem86[ds_88:0x29E1:word16]
	Mem97[ss:fp - 0x0006:word16] = Mem94[ds_88:0x29DF:word16]
	Mem100[ss:fp - 0x0008:word16] = Mem97[ss:bp - 0x0032:word16]
	selector ds_101
	fn0800_40BF(bp, ds_88, bArg00, wArg02, wArg04, out ds_101)
	Mem107[ss:fp - 0x0004:word16] = Mem100[ds_101:0x29E1:word16]
	Mem110[ss:fp - 0x0006:word16] = Mem107[ds_101:0x29DF:word16]
	Mem113[ss:fp - 0x0008:word16] = Mem110[ss:bp - 0x002E:word16]
	selector ds_114
	fn0800_40BF(bp, ds_101, bArg00, wArg02, wArg04, out ds_114)
	Mem120[ss:fp - 0x0004:word16] = Mem113[ds_114:0x29E1:word16]
	Mem123[ss:fp - 0x0006:word16] = Mem120[ds_114:0x29DF:word16]
	Mem126[ss:fp - 0x0008:word16] = Mem123[ss:bp - 0x002C:word16]
	selector ds_127
	fn0800_40BF(bp, ds_114, bArg00, wArg02, wArg04, out ds_127)
	Mem133[ss:fp - 0x0004:word16] = Mem126[ds_127:0x29E1:word16]
	Mem136[ss:fp - 0x0006:word16] = Mem133[ds_127:0x29DF:word16]
	Mem139[ss:fp - 0x0008:word16] = Mem136[ss:bp - 0x001C:word16]
	selector ds_140
	fn0800_40BF(bp, ds_127, bArg00, wArg02, wArg04, out ds_140)
	word16 dx_147
	Mem149[ss:bp - 0x0022:word16] = fn0800_8CAA(Mem139[ds_140:0x2A03:word16], 0x04, Mem139[ds_140:0x2A05:word16], 0x0000, out dx_147)
	branch (Mem149[ds_140:0x2A03:word16] & 0x000F) == 0x0000 l0800_6333
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_6330:
	Mem225[ss:bp - 0x0022:word16] = Mem149[ss:bp - 0x0022:word16] + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_6333:
	Mem159[ss:fp - 0x0004:word16] = Mem149[ds_140:0x29E1:word16]
	Mem162[ss:fp - 0x0006:word16] = Mem159[ds_140:0x29DF:word16]
	Mem165[ss:fp - 0x0008:word16] = Mem162[ss:bp - 0x0022:word16]
	selector ds_166
	fn0800_40BF(bp, ds_140, bArg00, wArg02, wArg04, out ds_166)
	Mem172[ss:fp - 0x0004:word16] = Mem165[ds_166:0x29E1:word16]
	Mem175[ss:fp - 0x0006:word16] = Mem172[ds_166:0x29DF:word16]
	word16 dx_179
	Mem185[ss:fp - 0x0008:word16] = Mem175[ss:bp - 0x0022:word16] + fn0800_8CAA(Mem175[ss:bp - 0x001C:word16], 0x04, Mem175[ss:bp - 0x001A:word16], 0x0000, out dx_179)
	selector ds_186
	fn0800_40BF(bp, ds_166, bArg00, wArg02, wArg04, out ds_186)
	word16 dx_191 = Mem185[ss:bp - 0x0004:word16] - Mem185[ds_186:0x2A03:word16]
	word16 dx_195 = dx_191 + Mem185[ds_186:0x4E88:word16]
	ui32 ax_dx_200 = SEQ(Mem185[ss:bp - 0x0002:word16] - Mem185[ds_186:0x2A05:word16] - (dx_191 <u 0x0000) + Mem185[ds_186:0x4E8A:word16] + (dx_195 <u 0x0000), dx_195 + 0x0080)
	Mem205[ss:bp - 0x0006:word16] = SLICE(ax_dx_200 + 0x00000080, word16, 16)
	Mem206[ss:bp - 0x0008:word16] = (word16) (ax_dx_200 + 0x00000080)
	branch Mem206[ds_186:0x2A1D:word16] == 0x0000 l0800_6398
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_6398:
// DataOut: bp ds ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_6398_thunk_fn0800_639D:
	fn0800_639D(bp, ds_186)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_638D:
	word16 v44_213 = Mem206[ss:bp - 0x0008:word16] + 0x0200
	Mem214[ss:bp - 0x0008:word16] = v44_213
	Mem218[ss:bp - 0x0006:word16] = Mem214[ss:bp - 0x0006:word16] + (v44_213 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_6396_thunk_fn0800_63A8:
	fn0800_63A8(bp, ds_186)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_6278_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> bx:<invalid> di:<invalid> cx:<invalid> bp:<invalid> es:<invalid> dl:<invalid> ah:<invalid> dh:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_639D(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_639D_entry:
// DataOut: bp ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp

l0800_639D:
	branch Z l0800_639D_thunk_fn0800_63A8
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_639D_thunk_fn0800_63A8:
	fn0800_63A8(bp, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_639F:
	word16 v6_8 = Mem0[ss:bp - 0x0008:word16] + 0x0180
	Mem9[ss:bp - 0x0008:word16] = v6_8
	Mem13[ss:bp - 0x0006:word16] = Mem9[ss:bp - 0x0006:word16] + (v6_8 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_63A4_thunk_fn0800_63A8:
	fn0800_63A8(bp, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_639D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cl:<invalid> dx:<invalid> bx:<invalid> di:<invalid> al:<invalid> bp:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40



void fn0800_63A8(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_63A8_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_63A8:
	word16 dx_16 = Mem0[ss:bp - 0x0002:word16] + (Mem0[ss:bp - 0x0004:word16] + (Mem0[ss:bp - 0x0026:word16] << 0x04) <u 0x0000)
	word16 di_30
	selector ds_31
	fn0800_ACB3(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], 0x0000, out di_30, out ds_31)
	Mem36[ss:fp - 0x0002:word16] = 0x0002
	Mem41[ss:fp - 0x0004:word16] = 0x0000
	Mem43[ss:fp - 0x0006:word16] = 0x0000
	Mem46[ss:fp - 0x0008:word16] = Mem43[ds_31:0x29E1:word16]
	Mem49[ss:fp - 0x000A:word16] = Mem46[ds_31:0x29DF:word16]
	word16 di_53
	selector ds_54
	fn0800_ACB3(bp, ds_31, wArg00, wArg02, wArg08, out di_53, out ds_54)
	Mem60[ss:fp - 0x0002:word16] = Mem49[ds_54:0x29E1:word16]
	Mem63[ss:fp - 0x0004:word16] = Mem60[ds_54:0x29DF:word16]
	byte dl_65
	word16 si_66
	word16 ax_67 = fn0800_AD2F(ds_54, ptrArg00, wArg02, out dl_65, out si_66)
	Mem69[ss:bp - 0x001E:word16] = dx_16
	Mem70[ss:bp - 0x0020:word16] = ax_67
	word16 bx_76 = Mem70[ds_54:0x2A07:word16] - Mem70[ss:bp - 0x0004:word16]
	word16 bx_80 = bx_76 - (Mem70[ss:bp - 0x0026:word16] << 0x04)
	Mem86[ss:fp - 0x0002:word16] = Mem70[ds_54:0x2A09:word16] - Mem70[ss:bp - 0x0002:word16] - (bx_76 <u 0x0000) - (bx_80 <u 0x0000)
	Mem88[ss:fp - 0x0004:word16] = bx_80
	Mem91[ss:fp - 0x0006:word16] = Mem88[ds_54:0x29E1:word16]
	Mem94[ss:fp - 0x0008:word16] = Mem91[ds_54:0x29DF:word16]
	Mem97[ss:fp - 0x000A:word16] = Mem94[ds_54:0x29E5:word16]
	Mem100[ss:fp - 0x000C:word16] = Mem97[ds_54:0x29E3:word16]
	selector ds_102
	word16 bp_103 = fn0800_3B0A(bp, ds_54, wArg08, wArg0A, out ds_102)
	Mem109[ss:bp_103 - 0x0022:word16] = Mem100[ss:bp_103 - 0x0020:word16] & 0x01FF
	word16 dx_113
	fn0800_8CAA(Mem109[ss:bp_103 - 0x0020:word16], 0x09, Mem109[ss:bp_103 - 0x001E:word16], 0x0000, out dx_113)
	branch Mem109[ss:bp_103 - 0x0022:word16] == 0x0000 l0800_6446
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_6445:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cl:<invalid> dx:<invalid> bx:<invalid> di:<invalid> bp:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 dl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_6446:
	Mem122[ss:fp - 0x0002:word16] = 0x0000
	Mem125[ss:fp - 0x0004:word16] = 0x0000
	Mem127[ss:fp - 0x0006:word16] = 0x0002
	Mem130[ss:fp - 0x0008:word16] = Mem127[ds_102:0x29E1:word16]
	Mem133[ss:fp - 0x000A:word16] = Mem130[ds_102:0x29DF:word16]
	word16 di_134
	selector ds_135
	fn0800_ACB3(bp_103, ds_102, wArg00, wArg02, wArg08, out di_134, out ds_135)
	Mem141[ss:fp - 0x0002:word16] = Mem133[ds_135:0x29E1:word16]
	Mem144[ss:fp - 0x0004:word16] = Mem141[ds_135:0x29DF:word16]
	Mem147[ss:fp - 0x0006:word16] = Mem144[ss:bp_103 - 0x0022:word16]
	selector ds_150
	word16 di_151 = fn0800_40BF(bp_103, ds_135, bArg00, wArg02, wArg04, out ds_150)
	Mem156[ss:fp - 0x0002:word16] = Mem147[ds_150:0x29E1:word16]
	Mem159[ss:fp - 0x0004:word16] = Mem156[ds_150:0x29DF:word16]
	Mem161[ss:fp - 0x0006:word16] = di_151
	selector ds_162
	fn0800_40BF(bp_103, ds_150, bArg00, wArg02, wArg04, out ds_162)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cl:<invalid> dx:<invalid> bx:<invalid> di:<invalid> bp:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 dl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_6479_thunk_fn0800_647C:
	fn0800_647C(bp_103, ds_162)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cl:<invalid> dx:<invalid> bx:<invalid> di:<invalid> al:<invalid> bp:<invalid> cx:<invalid> es:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:0x00 bh:0x40 -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_63A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cl:<invalid> dx:<invalid> bx:<invalid> di:<invalid> al:<invalid> bp:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:0x40 -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_647C(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_647C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_647C:
	branch Mem0[ds:0x2A1D:word16] == 0x0000 l0800_64B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_6483:
	word16 di_362
	selector ds_363
	fn0800_ACB3(bp, ds, Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], 0x0000, out di_362, out ds_363)
	Mem369[ss:fp - 0x0002:word16] = Mem0[ds_363:0x29E1:word16]
	Mem372[ss:fp - 0x0004:word16] = Mem369[ds_363:0x29DF:word16]
	Mem375[ss:fp - 0x0006:word16] = Mem372[ss:bp - 0x0022:word16]
	selector ds_376
	word16 di_377 = fn0800_40BF(bp, ds_363, bArg00, wArg02, wArg04, out ds_376)
	Mem382[ss:fp - 0x0002:word16] = Mem375[ds_376:0x29E1:word16]
	Mem385[ss:fp - 0x0004:word16] = Mem382[ds_376:0x29DF:word16]
	Mem387[ss:fp - 0x0006:word16] = di_377
	fn0800_40BF(bp, ds_376, bArg00, wArg02, wArg04, out ds)
	wLoc02 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_64B9:
	Mem22[ss:fp - 0x0002:word16] = 0x0000
	Mem26[ss:fp - 0x0004:word16] = 0x0000
	Mem28[ss:fp - 0x0006:word16] = 0x0018
	Mem31[ss:fp - 0x0008:word16] = Mem28[ds:0x29E1:word16]
	Mem34[ss:fp - 0x000A:word16] = Mem31[ds:0x29DF:word16]
	word16 di_39
	selector ds_40
	word16 ax_41 = fn0800_ACB3(bp, ds, wArg00, wArg02, wArg08, out di_39, out ds_40)
	Mem45[ss:fp - 0x0002:word16] = Mem34[ds_40:0x29E1:word16]
	Mem48[ss:fp - 0x0004:word16] = Mem45[ds_40:0x29DF:word16]
	Mem61[ss:fp - 0x0006:word16] = (DPB(ax_41, 0x00, 8) << 0x08) - 0x0008
	selector ds_64
	fn0800_40BF(bp, ds_40, bArg00, wArg02, wArg04, out ds_64)
	Mem71[ss:fp - 0x0002:word16] = 0x0000
	Mem74[ss:fp - 0x0004:word16] = 0x0000
	Mem76[ss:fp - 0x0006:word16] = 0x001C
	Mem79[ss:fp - 0x0008:word16] = Mem76[ds_64:0x29E1:word16]
	Mem82[ss:fp - 0x000A:word16] = Mem79[ds_64:0x29DF:word16]
	word16 di_83
	selector ds_84
	fn0800_ACB3(bp, ds_64, wArg00, wArg02, wArg08, out di_83, out ds_84)
	Mem90[ss:fp - 0x0002:word16] = Mem82[ds_84:0x29E1:word16]
	Mem93[ss:fp - 0x0004:word16] = Mem90[ds_84:0x29DF:word16]
	Mem96[ss:fp - 0x0006:word16] = Mem93[ss:bp - 0x0028:word16]
	selector ds_97
	fn0800_40BF(bp, ds_84, bArg00, wArg02, wArg04, out ds_97)
	Mem103[ss:fp - 0x0002:word16] = Mem96[ds_97:0x29E1:word16]
	Mem106[ss:fp - 0x0004:word16] = Mem103[ds_97:0x29DF:word16]
	Mem109[ss:fp - 0x0006:word16] = Mem106[ss:bp - 0x002A:word16]
	selector ds_110
	fn0800_40BF(bp, ds_97, bArg00, wArg02, wArg04, out ds_110)
	Mem117[ss:fp - 0x0002:word16] = 0x0000
	Mem120[ss:fp - 0x0004:word16] = 0x0000
	Mem122[ss:fp - 0x0006:word16] = 0x000A
	Mem125[ss:fp - 0x0008:word16] = Mem122[ds_110:0x29E1:word16]
	Mem128[ss:fp - 0x000A:word16] = Mem125[ds_110:0x29DF:word16]
	word16 di_129
	selector ds_130
	fn0800_ACB3(bp, ds_110, wArg00, wArg02, wArg08, out di_129, out ds_130)
	ui32 ax_cx_146 = SEQ(Mem128[ss:bp - 0x001E:word16], Mem128[ss:bp - 0x0020:word16] - 0x0020)
	word16 bx_138 = Mem128[ss:bp - 0x0004:word16] + (Mem128[ss:bp - 0x0028:word16] << 0x04)
	word16 cx_151 = (word16) (ax_cx_146 - 0x00000020) + Mem128[ss:bp - 0x0008:word16]
	word16 dx_141 = Mem128[ss:bp - 0x0002:word16] + (bx_138 <u 0x0000)
	word16 ax_155 = SLICE(ax_cx_146 - 0x00000020, word16, 16) + Mem128[ss:bp - 0x0006:word16] + (cx_151 <u 0x0000)
	branch dx_141 <u ax_155 l0800_659C
// DataOut: bp bx cx ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_6568:
	branch dx_141 >u ax_155 l0800_656E
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_656A:
	branch bx_138 <=u cx_151 l0800_659C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_656E:
	ui32 ax_cx_321 = SEQ(Mem128[ss:bp - 0x001E:word16], Mem128[ss:bp - 0x0020:word16] - 0x0020)
	word16 bx_314 = Mem128[ss:bp - 0x0004:word16] + (Mem128[ss:bp - 0x0028:word16] << 0x04)
	word16 cx_326 = (word16) (ax_cx_321 - 0x00000020) + Mem128[ss:bp - 0x0008:word16]
	ui32 dx_bx_334 = SEQ(Mem128[ss:bp - 0x0002:word16] + (bx_314 <u 0x0000), bx_314 - cx_326) - SEQ((SLICE(ax_cx_321 - 0x00000020, word16, 16) + Mem128[ss:bp - 0x0006:word16]) + (cx_326 <u 0x0000), cx_326)
	word16 v42_337 = Mem128[ss:bp - 0x0008:word16] + (word16) dx_bx_334
	Mem338[ss:bp - 0x0008:word16] = v42_337
	Mem342[ss:bp - 0x0006:word16] = Mem338[ss:bp - 0x0006:word16] + SLICE(dx_bx_334, word16, 16) + (v42_337 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_659C:
	word16 v44_174 = Mem128[ss:bp - 0x0008:word16] + (0x0010 - Mem128[ss:bp - 0x0008:word16] & 0x000F)
	Mem175[ss:bp - 0x0008:word16] = v44_174
	Mem179[ss:bp - 0x0006:word16] = Mem175[ss:bp - 0x0006:word16] + (v44_174 <u 0x0000)
	word16 dx_184
	word16 ax_185 = fn0800_8CAA(Mem179[ss:bp - 0x0008:word16], 0x04, Mem179[ss:bp - 0x0006:word16], wLoc02, out dx_184)
	Mem186[ss:bp - 0x0028:word16] = ax_185
	Mem189[ss:fp - 0x0002:word16] = Mem186[ds_130:0x29E1:word16]
	Mem192[ss:fp - 0x0004:word16] = Mem189[ds_130:0x29DF:word16]
	Mem194[ss:fp - 0x0006:word16] = ax_185
	selector ds_195
	fn0800_40BF(bp, ds_130, bArg00, wArg02, wArg04, out ds_195)
	branch Mem194[ss:bp - 0x002A:word16] >=u Mem194[ss:bp - 0x0028:word16] l0800_65DC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_65D6:
	Mem307[ss:bp - 0x002A:word16] = Mem194[ss:bp - 0x0028:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_65DC:
	Mem203[ss:fp - 0x0002:word16] = Mem194[ds_195:0x29E1:word16]
	Mem206[ss:fp - 0x0004:word16] = Mem203[ds_195:0x29DF:word16]
	Mem209[ss:fp - 0x0006:word16] = Mem206[ss:bp - 0x002A:word16]
	selector ds_210
	fn0800_40BF(bp, ds_195, bArg00, wArg02, wArg04, out ds_210)
	word16 ax_215 = Mem209[ss:bp - 0x0004:word16] + Mem209[ds_210:0x4E88:word16]
	ui32 dx_ax_220 = SEQ(Mem209[ss:bp - 0x0002:word16] + Mem209[ds_210:0x4E8A:word16] + (ax_215 <u 0x0000), ax_215 + 0x0020)
	word16 dx_227
	word16 ax_228 = fn0800_8CAA((word16) (dx_ax_220 + 0x00000020), 0x04, SLICE(dx_ax_220 + 0x00000020, word16, 16), wLoc02, out dx_227)
	Mem229[ss:bp - 0x002C:word16] = ax_228
	Mem232[ss:fp - 0x0002:word16] = Mem229[ds_210:0x29E1:word16]
	Mem235[ss:fp - 0x0004:word16] = Mem232[ds_210:0x29DF:word16]
	Mem237[ss:fp - 0x0006:word16] = ax_228
	selector ds_238
	fn0800_40BF(bp, ds_210, bArg00, wArg02, wArg04, out ds_238)
	Mem243[ss:bp - 0x002E:word16] = Mem237[ss:bp - 0x001C:word16] + 0x0080
	branch Mem243[ds_238:0x2A1D:word16] == 0x0000 l0800_662F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_662F:
	branch Mem243[ds_238:0x2A21:word16] != 0x0001 l0800_663B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_6636:
	Mem304[ss:bp - 0x002E:word16] = Mem243[ss:bp - 0x002E:word16] + 0x0180
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_6628:
	Mem299[ss:bp - 0x002E:word16] = Mem243[ss:bp - 0x002E:word16] + 0x0200
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_663B:
	Mem248[ss:fp - 0x0002:word16] = Mem243[ds_238:0x29E1:word16]
	Mem251[ss:fp - 0x0004:word16] = Mem248[ds_238:0x29DF:word16]
	Mem254[ss:fp - 0x0006:word16] = Mem251[ss:bp - 0x002E:word16]
	selector ds_255
	fn0800_40BF(bp, ds_238, bArg00, wArg02, wArg04, out ds_255)
	word16 bx_263 = Mem254[ds_255:0x2A07:word16] - Mem254[ss:bp - 0x0004:word16]
	word16 bx_267 = bx_263 - (Mem254[ss:bp - 0x0026:word16] << 0x04)
	branch (bx_267 | ((Mem254[ds_255:0x2A09:word16] - Mem254[ss:bp - 0x0002:word16]) - (bx_263 <u 0x0000)) - (bx_267 <u 0x0000)) == 0x0000 l0800_6673
// DataOut: bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_6673:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:0x04 ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_666A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:0x04 ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> es:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_647C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cl:0x04 ah:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> bp:<invalid> es:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_669C(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_669C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_669C:
	branch Mem0[ds:0x2A09:word16] <u 0x0000 l0800_66BE
// DataOut: bp ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_66AB:
	branch Mem0[ds:0x2A09:word16] >u 0x0000 l0800_66B5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66AD:
	branch Mem0[ds:0x2A07:word16] <=u 0xFEFE l0800_66BE
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66BE:
	word16 di_324 = 0x2206
	word16 si_323 = 0x4271
	word16 cx_325 = 0x0004
	word16 dx_101 = 0x0003
	branch true l0800_66D2
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D0:
	cx_325 = 0x0003
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:0x2206 si:0x4271 cx:0x0004 dx:0x0003 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D2:
	word16 ax_314 = 0x0000
	byte Z_320 = cond(0x0000)
	byte C_321 = false
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:0x2206 si:0x4271 cx:<invalid> dx:0x0003 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D4:
	branch cx_325 == 0x0000 l0800_66D6
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D4_1:
	byte SCZO_318 = cond(Mem0[ds:si_351:byte] - Mem0[ds:di_350:byte])
	Z_320 = SCZO_318 (alias)
	C_321 = SCZO_318 (alias)
	si_323 = si_351 + 0x0001
	di_324 = di_350 + 0x0001
	cx_325 = cx_325 - 0x0001
	word16 di_350 = di_324
	word16 si_351 = si_323
	branch Mem0[ds:si_351:byte] != Mem0[ds:di_350:byte] l0800_66D4
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D6:
	branch Z_320 l0800_66DD
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D8:
	word16 ax_311 = 0x0000 - C_321
	ax_314 = ax_311 - 0xFFFF - (ax_311 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66DD:
	word16 ax_104 = ax_314
	branch ax_314 == 0x0000 l0800_6715
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66E1:
	word16 di_231 = 0x4271
	word16 si_232 = 0x2206
	word16 cx_234 = 0x0004
	dx_101 = 0xFFFF
	branch true l0800_66F7
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F3:
	cx_234 = 0x0003
	dx_101 = 0x0000
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:0x4271 si:0x2206 cx:0x0004 dx:0xFFFF ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F7:
	word16 cx_248 = cx_234 >>u 0x0001
	cx_255 = cx_248
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:0x4271 si:0x2206 cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F9:
	word16 cx_255
	branch cx_255 == 0x0000 l0800_66FB
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FB:
	word16 cx_265 = cx_255 * 0x0002 + (cx_248 <u 0x0000)
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FD:
	branch cx_265 == 0x0000 l0800_66FF
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FF:
	word16 cx_278 = dx_101
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6703:
	branch cx_278 == 0x0000 l0800_6705
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6705:
	fn0800_09A3(fp - 0x0002, ds)
	ax_104 = 0x4271
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_6715:
	Mem110[ss:fp - 0x000C:word16] = Mem0[ds:0x29E1:word16]
	Mem114[ss:fp - 0x000E:word16] = Mem110[ds:0x29DF:word16]
	Mem128[ss:fp - 0x0010:word16] = 0x0000
	Mem130[ss:fp - 0x0012:word16] = (DPB(ax_104, 0x00, 8) << 0x08) + DPB(dx_101, 0x00, 8)
	Mem132[ss:fp - 0x0014:word16] = ds
	Mem135[ss:fp - 0x0016:word16] = 0x2E77
	selector ds_141 = fn0800_4152(fp - 0x0002, ds, wArg00, wArg02, wArg04, wArg08, wArg0A)
	word16 bx_153 = Mem135[ds_141:0x2A07:word16]
	ui32 dx_bx_159 = SEQ(Mem135[ds_141:0x2A09:word16] + (bx_153 <u 0x7700), bx_153 + 0x7740)
	Mem164[ss:fp - 0x0004:word16] = SLICE(dx_bx_159 + 0x00000040, word16, 16)
	Mem165[ss:fp - 0x0006:word16] = (word16) (dx_bx_159 + 0x00000040)
	branch Mem165[ds_141:0x2A1D:word16] == 0x0000 l0800_6779
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -18(fp):0x4271 -16(fp):ds -14(fp):0x2E75 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6779:
	branch Mem165[ds_141:0x2A21:word16] != 0x0001 l0800_6789
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6780:
	word16 v28_220 = Mem165[ss:fp - 0x0006:word16] + 0x0180
	Mem221[ss:fp - 0x0006:word16] = v28_220
	Mem225[ss:fp - 0x0004:word16] = Mem221[ss:fp - 0x0004:word16] + (v28_220 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_676E:
	word16 v25_211 = Mem165[ss:fp - 0x0006:word16] + 0x0200
	Mem212[ss:fp - 0x0006:word16] = v25_211
	Mem216[ss:fp - 0x0004:word16] = Mem212[ss:fp - 0x0004:word16] + (v25_211 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6789:
	branch Mem165[ss:fp - 0x0004:word16] <u 0x0000 l0800_67A1
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_678F:
	branch Mem165[ss:fp - 0x0004:word16] >u 0x0000 l0800_6798
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6791:
	branch Mem165[ss:fp - 0x0006:word16] <=u 0xFEFE l0800_67A1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_67A1:
	Mem177[ss:fp - 0x000C:word16] = Mem165[ds_141:0x2A09:word16]
	Mem180[ss:fp - 0x000E:word16] = Mem177[ds_141:0x2A07:word16]
	Mem183[ss:fp - 0x0010:word16] = Mem180[ds_141:0x2A09:word16]
	Mem186[ss:fp - 0x0012:word16] = Mem183[ds_141:0x2A07:word16]
	fn0800_75EA(fp - 0x0002, ds_141, wArg00, wArg02, wArg04, wArg06)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6798:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6703_1:
	Mem287[ds:di_231:byte] = 0x00
	di_231 = di_231 + 0x0001
	cx_278 = cx_278 - 0x0001
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FD_1:
	Mem273[ds:di_231:byte] = Mem0[ds:si_232:byte]
	si_232 = si_232 + 0x0001
	di_231 = di_231 + 0x0001
	cx_265 = cx_265 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F9_1:
	Mem260[ds:di_231:word16] = Mem0[ds:si_232:word16]
	si_232 = si_232 + 0x0002
	di_231 = di_231 + 0x0002
	cx_255 = cx_255 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66B5:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 -10(fp):di -8(fp):si -2(fp):bp

fn0800_669C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -22(fp):0x2E77 -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_67BF(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_67BF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_67BF:
	word16 bp_120 = fp - 0x0002
	word16 ax_19 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_67F0
// DataOut: ax bp ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67E1:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_67E9
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67E3:
	branch ax_19 <u Mem0[ds:0x2A07:word16] l0800_67F0
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67F0:
	selector ds_119
	word16 dx_116
	selector ds_77 = fn0800_4152(fp - 0x0002, ds, 0x2E77, ds, ax_19, Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16])
	Mem82[ss:fp - 0x0012:word16] = 0x0001
	Mem87[ss:fp - 0x0014:word16] = 0xFFFF
	Mem89[ss:fp - 0x0016:word16] = 0xFFEE
	Mem92[ss:fp - 0x0018:word16] = Mem89[ds_77:0x29E1:word16]
	Mem95[ss:fp - 0x001A:word16] = Mem92[ds_77:0x29DF:word16]
	word16 di_99
	selector ds_100
	fn0800_ACB3(fp - 0x0002, ds_77, wArg00, wArg02, wArg08, out di_99, out ds_100)
	Mem106[ss:fp - 0x0012:word16] = Mem95[ds_100:0x29E5:word16]
	Mem109[ss:fp - 0x0014:word16] = Mem106[ds_100:0x29E3:word16]
	selector ds_110
	branch fn0800_3F0A(fp - 0x0002, ds_100, wArg00, wArg02, out ds_110) == 0x601A l0800_6839
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6839:
	Mem522[ss:fp - 0x0012:word16] = 0x0001
	Mem528[ss:fp - 0x0014:word16] = 0x0000
	Mem530[ss:fp - 0x0016:word16] = 0x0002
	Mem533[ss:fp - 0x0018:word16] = Mem530[ds_110:0x29E5:word16]
	Mem536[ss:fp - 0x001A:word16] = Mem533[ds_110:0x29E3:word16]
	word16 di_537
	selector ds_538
	fn0800_ACB3(fp - 0x0002, ds_110, wArg00, wArg02, wArg08, out di_537, out ds_538)
	Mem546[ss:fp - 0x0012:word16] = 0x0000
	Mem548[ss:fp - 0x0014:word16] = 0x0010
	Mem551[ss:fp - 0x0016:word16] = Mem548[ds_538:0x29E1:word16]
	Mem554[ss:fp - 0x0018:word16] = Mem551[ds_538:0x29DF:word16]
	Mem557[ss:fp - 0x001A:word16] = Mem554[ds_538:0x29E5:word16]
	Mem560[ss:fp - 0x001C:word16] = Mem557[ds_538:0x29E3:word16]
	selector ds_562
	bp_120 = fn0800_3B0A(fp - 0x0002, ds_538, wArg08, wArg0A, out ds_562)
	Mem569[ss:fp - 0x0012:word16] = 0x0000
	Mem572[ss:fp - 0x0014:word16] = 0x0000
	Mem574[ss:fp - 0x0016:word16] = 0x001A
	Mem577[ss:fp - 0x0018:word16] = Mem574[ds_562:0x29E5:word16]
	Mem580[ss:fp - 0x001A:word16] = Mem577[ds_562:0x29E3:word16]
	word16 di_581
	selector ds_582
	fn0800_ACB3(bp_120, ds_562, wArg00, wArg02, wArg08, out di_581, out ds_582)
	Mem588[ss:fp - 0x0012:word16] = Mem580[ds_582:0x29E1:word16]
	Mem591[ss:fp - 0x0014:word16] = Mem588[ds_582:0x29DF:word16]
	Mem594[ss:fp - 0x0016:word16] = Mem591[ds_582:0x29E5:word16]
	Mem597[ss:fp - 0x0018:word16] = Mem594[ds_582:0x29E3:word16]
	word16 dx_598
	word16 si_599
	word16 di_600
	selector ds_601
	Mem606[ss:fp - 0x0016:word16] = fn0800_3E27(bp_120, ds_582, wArg00, wArg02, out dx_598, out si_599, out di_600, out ds_601)
	word16 si_607
	selector ds_608
	fn0800_401E(bp_120, ds_601, wArg00, wArg02, wArg04, out si_607, out ds_608)
	ui32 ax_dx_614 = SEQ(Mem606[ds_608:0x2A09:word16], Mem606[ds_608:0x2A07:word16] - 0x001C)
	Mem620[ss:fp - 0x0012:word16] = SLICE(ax_dx_614 - 0x0000001C, word16, 16)
	Mem622[ss:fp - 0x0014:word16] = (word16) (ax_dx_614 - 0x0000001C)
	word16 dx_624 = Mem622[ds_608:0x2A07:word16]
	Mem632[ss:fp - 0x0016:word16] = Mem622[ds_608:0x2A09:word16] - (dx_624 <u 0x001C)
	Mem634[ss:fp - 0x0018:word16] = dx_624 - 0x001C
	ds_119 = fn0800_75EA(bp_120, ds_608, wArg00, wArg02, wArg04, wArg06)
	ui32 ax_dx_641 = SEQ(Mem634[ds_119:0x2A09:word16], Mem634[ds_119:0x2A07:word16] - 0x001C)
	word16 dx_646 = (word16) (ax_dx_641 - 0x0000001C) - Mem634[ds_119:0x2A03:word16]
	word16 dx_650 = dx_646 + Mem634[ds_119:0x4E88:word16]
	Mem660[ss:bp_120 - 0x0006:word16] = SLICE(ax_dx_641 - 0x0000001C, word16, 16) - Mem634[ds_119:0x2A05:word16] - (dx_646 <u 0x0000) + Mem634[ds_119:0x4E8A:word16] + (dx_650 <u 0x0000) + (dx_650 <u 0x000E)
	Mem661[ss:bp_120 - 0x0008:word16] = dx_650 + 0x000E
	dx_116 = dx_650 + 0x000E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6836:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_68F1:
	Mem450[ss:fp - 0x0012:word16] = Mem109[ds_110:0x29E1:word16]
	Mem453[ss:fp - 0x0014:word16] = Mem450[ds_110:0x29DF:word16]
	Mem456[ss:fp - 0x0016:word16] = Mem453[ds_110:0x2A09:word16]
	Mem459[ss:fp - 0x0018:word16] = Mem456[ds_110:0x2A07:word16]
	word16 si_460
	selector ds_461
	fn0800_409C(fp - 0x0002, ds_110, wArg02, wArg04, wArg06, out si_460, out ds_461)
	Mem466[ss:fp - 0x0012:word16] = 0x0001
	Mem472[ss:fp - 0x0014:word16] = 0x0000
	Mem474[ss:fp - 0x0016:word16] = 0x000E
	Mem477[ss:fp - 0x0018:word16] = Mem474[ds_461:0x29E1:word16]
	Mem480[ss:fp - 0x001A:word16] = Mem477[ds_461:0x29DF:word16]
	word16 di_481
	selector ds_482
	fn0800_ACB3(fp - 0x0002, ds_461, wArg00, wArg02, wArg08, out di_481, out ds_482)
	Mem488[ss:fp - 0x0012:word16] = Mem480[ds_482:0x2A09:word16]
	Mem491[ss:fp - 0x0014:word16] = Mem488[ds_482:0x2A07:word16]
	Mem494[ss:fp - 0x0016:word16] = Mem491[ds_482:0x2A09:word16]
	Mem497[ss:fp - 0x0018:word16] = Mem494[ds_482:0x2A07:word16]
	ds_119 = fn0800_75EA(fp - 0x0002, ds_482, wArg00, wArg02, wArg04, wArg06)
	word16 dx_503 = Mem497[ds_119:0x2A07:word16] - Mem497[ds_119:0x2A03:word16]
	word16 dx_507 = dx_503 + Mem497[ds_119:0x4E88:word16]
	ui32 ax_dx_512 = SEQ(Mem497[ds_119:0x2A09:word16] - Mem497[ds_119:0x2A05:word16] - (dx_503 <u 0x0000) + Mem497[ds_119:0x4E8A:word16] + (dx_507 <u 0x0000), dx_507 + 0x000E)
	Mem518[ss:fp - 0x0008:word16] = SLICE(ax_dx_512 + 0x0000000E, word16, 16)
	dx_116 = (word16) (ax_dx_512 + 0x0000000E) (alias)
	Mem519[ss:fp - 0x000A:word16] = dx_116
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6959:
	Mem124[ss:fp - 0x0014:word16] = Mem109[ds_119:0x29E1:word16]
	Mem127[ss:fp - 0x0016:word16] = Mem124[ds_119:0x29DF:word16]
	byte dl_129
	word16 si_130
	word16 ax_131 = fn0800_AD2F(ds_119, ptrArg00, wArg02, out dl_129, out si_130)
	branch (ax_131 & 0x0001) == 0x0000 l0800_6988
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_696F:
	Mem427[ss:fp - 0x0014:word16] = Mem127[ds_119:0x29E1:word16]
	Mem430[ss:fp - 0x0016:word16] = Mem427[ds_119:0x29DF:word16]
	Mem434[ss:fp - 0x0018:word16] = DPB(ax_131 & 0x0001, 0x90, 0)
	word16 di_437
	fn0800_4047(bp_120, ds_119, bArg00, ptrArg02, wArg04, out di_437, out ds_119)
	word16 v50_441 = Mem434[ss:bp_120 - 0x0008:word16] + 0x0001
	Mem442[ss:bp_120 - 0x0008:word16] = v50_441
	Mem446[ss:bp_120 - 0x0006:word16] = Mem442[ss:bp_120 - 0x0006:word16] + (v50_441 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6988:
	Mem143[ss:fp - 0x0014:word16] = Mem127[ds_119:0x29E1:word16]
	Mem146[ss:fp - 0x0016:word16] = Mem143[ds_119:0x29DF:word16]
	Mem151[ss:fp - 0x0018:word16] = 0x0000
	Mem153[ss:fp - 0x001A:word16] = 0x0000
	word16 si_156
	selector ds_157
	fn0800_409C(bp_120, ds_119, wArg02, wArg04, wArg06, out si_156, out ds_157)
	Mem163[ss:fp - 0x0014:word16] = Mem153[ds_157:0x29E1:word16]
	Mem166[ss:fp - 0x0016:word16] = Mem163[ds_157:0x29DF:word16]
	byte dl_167
	word16 si_168
	ui32 dx_ax_172 = SEQ(dx_116, fn0800_AD2F(ds_157, ptrArg00, wArg02, out dl_167, out si_168) + 0xFFE0)
	Mem177[ds_157:0x2A05:word16] = SLICE(dx_ax_172 + 0x00FFFFE0, word16, 16)
	Mem178[ds_157:0x2A03:word16] = (word16) (dx_ax_172 + 0x00FFFFE0)
	Mem183[ss:fp - 0x0014:word16] = 0x0000
	Mem186[ss:fp - 0x0016:word16] = 0x0000
	Mem188[ss:fp - 0x0018:word16] = 0x0002
	Mem191[ss:fp - 0x001A:word16] = Mem188[ds_157:0x29E1:word16]
	Mem194[ss:fp - 0x001C:word16] = Mem191[ds_157:0x29DF:word16]
	word16 di_195
	selector ds_196
	word16 ax_197 = fn0800_ACB3(bp_120, ds_157, wArg00, wArg02, wArg08, out di_195, out ds_196)
	Mem202[ss:fp - 0x0014:word16] = Mem194[ds_196:0x29E1:word16]
	Mem205[ss:fp - 0x0016:word16] = Mem202[ds_196:0x29DF:word16]
	word16 di_206
	selector ds_207
	word16 dx_208 = fn0800_3F58(bp_120, ds_196, wArg00, wArg02, out di_206, out ds_207)
	word16 v60_210 = Mem205[ss:bp_120 - 0x0008:word16] - ax_197
	Mem211[ss:bp_120 - 0x0008:word16] = v60_210
	Mem215[ss:bp_120 - 0x0006:word16] = Mem211[ss:bp_120 - 0x0006:word16] - dx_208 - (v60_210 <u 0x0000)
	Mem219[ss:fp - 0x0014:word16] = Mem215[ds_207:0x29E1:word16]
	Mem222[ss:fp - 0x0016:word16] = Mem219[ds_207:0x29DF:word16]
	Mem225[ss:fp - 0x0018:word16] = Mem222[ds_207:0x2A05:word16]
	Mem228[ss:fp - 0x001A:word16] = Mem225[ds_207:0x2A03:word16]
	word16 si_229
	selector ds_230
	fn0800_409C(bp_120, ds_207, wArg02, wArg04, wArg06, out si_229, out ds_230)
	Mem238[ss:fp - 0x0014:word16] = 0x0000
	Mem240[ss:fp - 0x0016:word16] = 0x0000
	Mem242[ss:fp - 0x0018:word16] = 0x0000
	Mem245[ss:fp - 0x001A:word16] = Mem242[ds_230:0x29E5:word16]
	Mem248[ss:fp - 0x001C:word16] = Mem245[ds_230:0x29E3:word16]
	word16 di_249
	selector ds_250
	fn0800_ACB3(bp_120, ds_230, wArg00, wArg02, wArg08, out di_249, out ds_250)
	Mem256[ss:fp - 0x0014:word16] = Mem248[ds_250:0x29E5:word16]
	Mem259[ss:fp - 0x0016:word16] = Mem256[ds_250:0x29E3:word16]
	word16 dx_260
	word16 si_261
	word16 di_262
	selector ds_263
	word16 ax_264 = fn0800_3E27(bp_120, ds_250, wArg00, wArg02, out dx_260, out si_261, out di_262, out ds_263)
	branch ax_264 == 0x601A l0800_6A1E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A1E:
	Mem327[ss:fp - 0x0014:word16] = Mem259[ds_263:0x29E5:word16]
	Mem330[ss:fp - 0x0016:word16] = Mem327[ds_263:0x29E3:word16]
	selector ds_331
	word16 dx_332 = fn0800_3E5D(bp_120, ds_263, wArg00, wArg02, out ds_331)
	Mem336[ss:fp - 0x0014:word16] = ax_264
	Mem338[ss:fp - 0x0016:word16] = dx_332
	Mem341[ss:fp - 0x0018:word16] = Mem338[ds_331:0x29E5:word16]
	Mem344[ss:fp - 0x001A:word16] = Mem341[ds_331:0x29E3:word16]
	selector ds_345
	ui32 bx_cx_356 = SEQ(Mem344[ss:fp - 0x0016:word16], Mem344[ss:fp - 0x0014:word16] + ax_264) + SEQ(fn0800_3E5D(bp_120, ds_331, wArg00, wArg02, out ds_345), ax_264)
	Mem360[ss:bp_120 - 0x0002:word16] = SLICE(bx_cx_356, word16, 16)
	Mem361[ss:bp_120 - 0x0004:word16] = (word16) bx_cx_356
	Mem364[ss:fp - 0x0014:word16] = Mem361[ds_345:0x29E5:word16]
	Mem367[ss:fp - 0x0016:word16] = Mem364[ds_345:0x29E3:word16]
	Mem371[ss:bp_120 - 0x000A:word16] = fn0800_3E5D(bp_120, ds_345, wArg00, wArg02, out ds_263)
	Mem372[ss:bp_120 - 0x000C:word16] = ax_264
	word16 dx_375 = Mem372[ss:bp_120 - 0x0004:word16] + Mem372[ss:bp_120 - 0x000C:word16]
	word16 cx_385 = Mem372[ds_263:0x2A03:word16] + Mem372[ss:bp_120 - 0x0008:word16]
	word16 ax_380 = Mem372[ss:bp_120 - 0x0002:word16] + Mem372[ss:bp_120 - 0x000A:word16] + (dx_375 <u 0x0000)
	word16 bx_389 = Mem372[ds_263:0x2A05:word16] + Mem372[ss:bp_120 - 0x0006:word16] + (cx_385 <u 0x0000)
	branch ax_380 <u bx_389 l0800_6AA4
// DataOut: bp cx ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A7A:
	branch ax_380 >u bx_389 l0800_6A80
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A7C:
	branch dx_375 <=u cx_385 l0800_6AA4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A80:
	word16 dx_399 = Mem372[ss:bp_120 - 0x0004:word16] + Mem372[ss:bp_120 - 0x000C:word16]
	word16 cx_405 = Mem372[ds_263:0x2A03:word16] + Mem372[ss:bp_120 - 0x0008:word16]
	ui32 ax_dx_413 = SEQ(Mem372[ss:bp_120 - 0x0002:word16] + Mem372[ss:bp_120 - 0x000A:word16] + (dx_399 <u 0x0000), dx_399 - cx_405) - SEQ((Mem372[ds_263:0x2A05:word16] + Mem372[ss:bp_120 - 0x0006:word16]) + (cx_405 <u 0x0000), cx_405)
	word16 v79_416 = Mem372[ss:bp_120 - 0x0008:word16] + (word16) ax_dx_413
	Mem417[ss:bp_120 - 0x0008:word16] = v79_416
	Mem421[ss:bp_120 - 0x0006:word16] = Mem417[ss:bp_120 - 0x0006:word16] + SLICE(ax_dx_413, word16, 16) + (v79_416 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A1B:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6AA4:
	Mem283[ss:fp - 0x0014:word16] = 0x0000
	Mem286[ss:fp - 0x0016:word16] = 0x0000
	Mem288[ss:fp - 0x0018:word16] = 0x000A
	Mem291[ss:fp - 0x001A:word16] = Mem288[ds_263:0x29E1:word16]
	Mem294[ss:fp - 0x001C:word16] = Mem291[ds_263:0x29DF:word16]
	word16 di_295
	selector ds_296
	fn0800_ACB3(bp_120, ds_263, wArg00, wArg02, wArg08, out di_295, out ds_296)
	Mem302[ss:fp - 0x0014:word16] = Mem294[ds_296:0x29E1:word16]
	Mem305[ss:fp - 0x0016:word16] = Mem302[ds_296:0x29DF:word16]
	Mem308[ss:fp - 0x0018:word16] = Mem305[ss:bp_120 - 0x0006:word16]
	Mem311[ss:fp - 0x001A:word16] = Mem308[ss:bp_120 - 0x0008:word16]
	word16 si_312
	selector ds_313
	fn0800_409C(bp_120, ds_296, wArg02, wArg04, wArg06, out si_312, out ds_313)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_67E9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp

l0800_67EC_thunk_fn0800_67EE:
	fn0800_67EE(wLoc04)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 al:0x03 ah:0x00 cl:0x08 ax:0x0003 dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp

fn0800_67BF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



void fn0800_67EE(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: bp bpl ebp esp rbp rsp sp spl
// Preserved:
fn0800_67EE_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_67EE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_67EE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 bp:<invalid>



selector fn0800_6AD4(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_6AD4_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6AD4:
	word16 ax_22 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_6B04
// DataOut: ax bp ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_6AF4:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_6AFC
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6AF6:
	branch ax_22 <u Mem0[ds:0x2A07:word16] l0800_6B04
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6B04:
	selector ds_61
	branch fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_61) != 0x0000 l0800_6B1B
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B16:
	branch ax_22 == 0x03F3 l0800_6B23
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B23:
	Mem84[ss:fp - 0x001E:word16] = Mem0[ds_61:0x29E1:word16]
	Mem87[ss:fp - 0x0020:word16] = Mem84[ds_61:0x29DF:word16]
	Mem93[ss:fp - 0x0022:word16] = 0x0000
	Mem95[ss:fp - 0x0024:word16] = 0x03F3
	word16 si_99
	selector ds_100
	fn0800_409C(fp - 0x0002, ds_61, wArg02, wArg04, wArg06, out si_99, out ds_100)
	word16 ax_108 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B38:
	Mem112[ss:fp - 0x001E:word16] = Mem95[ds_100:0x29E5:word16]
	Mem115[ss:fp - 0x0020:word16] = Mem112[ds_100:0x29E3:word16]
	selector ds_117
	word16 dx_118 = fn0800_3E5D(fp - 0x0002, ds_100, wArg00, wArg02, out ds_117)
	Mem121[ss:fp - 0x0008:word16] = dx_118
	Mem122[ss:fp - 0x000A:word16] = ax_108
	Mem123[ss:fp - 0x0004:word16] = dx_118
	Mem124[ss:fp - 0x0006:word16] = ax_108
	Mem127[ss:fp - 0x001E:word16] = Mem124[ds_117:0x29E1:word16]
	Mem130[ss:fp - 0x0020:word16] = Mem127[ds_117:0x29DF:word16]
	Mem133[ss:fp - 0x0022:word16] = Mem130[ss:fp - 0x0004:word16]
	Mem135[ss:fp - 0x0024:word16] = ax_108
	word16 si_136
	fn0800_409C(fp - 0x0002, ds_117, wArg02, wArg04, wArg06, out si_136, out ds_100)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B84:
	word16 ax_145 = Mem135[ss:fp - 0x000A:word16]
	word16 dx_146 = Mem135[ss:fp - 0x0008:word16]
	word16 v27_147 = Mem135[ss:fp - 0x000A:word16] - 0x0001
	Mem148[ss:fp - 0x000A:word16] = v27_147
	Mem152[ss:fp - 0x0008:word16] = Mem148[ss:fp - 0x0008:word16] - (v27_147 <u 0x0000)
	word16 ax_153 = ax_145 | dx_146
	branch ax_153 != 0x0000 l0800_6B66
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B66:
	Mem488[ss:fp - 0x001E:word16] = Mem152[ds_100:0x29E1:word16]
	Mem491[ss:fp - 0x0020:word16] = Mem488[ds_100:0x29DF:word16]
	Mem494[ss:fp - 0x0022:word16] = Mem491[ds_100:0x29E5:word16]
	Mem497[ss:fp - 0x0024:word16] = Mem494[ds_100:0x29E3:word16]
	selector ds_498
	Mem503[ss:fp - 0x0022:word16] = fn0800_3E5D(fp - 0x0002, ds_100, wArg00, wArg02, out ds_498)
	Mem505[ss:fp - 0x0024:word16] = ax_153
	word16 si_506
	fn0800_409C(fp - 0x0002, ds_498, wArg02, wArg04, wArg06, out si_506, out ds_100)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B96:
	ax_108 = Mem152[ss:fp - 0x0006:word16] | Mem152[ss:fp - 0x0004:word16]
	branch ax_108 != 0x0000 l0800_6B38
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B9E:
	Mem164[ss:fp - 0x001E:word16] = Mem152[ds_100:0x29E1:word16]
	Mem167[ss:fp - 0x0020:word16] = Mem164[ds_100:0x29DF:word16]
	Mem170[ss:fp - 0x0022:word16] = Mem167[ds_100:0x29E5:word16]
	Mem173[ss:fp - 0x0024:word16] = Mem170[ds_100:0x29E3:word16]
	selector ds_174
	ui32 dx_ax_178 = SEQ(fn0800_3E5D(fp - 0x0002, ds_100, wArg00, wArg02, out ds_174), ax_108 + 0x0001)
	Mem185[ss:fp - 0x0022:word16] = SLICE(dx_ax_178 + 0x00000001, word16, 16)
	word16 ax_181 = (word16) (dx_ax_178 + 0x00000001)
	Mem187[ss:fp - 0x0024:word16] = ax_181
	word16 si_188
	selector ds_189
	fn0800_409C(fp - 0x0002, ds_174, wArg02, wArg04, wArg06, out si_188, out ds_189)
	Mem195[ss:fp - 0x001E:word16] = Mem187[ds_189:0x29E5:word16]
	Mem198[ss:fp - 0x0020:word16] = Mem195[ds_189:0x29E3:word16]
	selector ds_199
	Mem203[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_189, wArg00, wArg02, out ds_199)
	Mem204[ss:fp - 0x000E:word16] = ax_181
	Mem207[ss:fp - 0x001E:word16] = Mem204[ds_199:0x29E5:word16]
	Mem210[ss:fp - 0x0020:word16] = Mem207[ds_199:0x29E3:word16]
	selector ds_211
	Mem214[ss:fp - 0x0010:word16] = fn0800_3E5D(fp - 0x0002, ds_199, wArg00, wArg02, out ds_211)
	Mem215[ss:fp - 0x0012:word16] = ax_181
	word16 dx_218 = Mem215[ss:fp - 0x0012:word16] - Mem215[ss:fp - 0x000E:word16]
	ui32 ax_dx_223 = SEQ(Mem215[ss:fp - 0x0010:word16] - Mem215[ss:fp - 0x000C:word16] - (dx_218 <u 0x0000), dx_218 + 0x0001)
	Mem229[ss:fp - 0x0014:word16] = SLICE(ax_dx_223 + 0x00000001, word16, 16)
	Mem230[ss:fp - 0x0016:word16] = (word16) (ax_dx_223 + 0x00000001)
	Mem233[ss:fp - 0x001E:word16] = Mem230[ds_211:0x29E1:word16]
	Mem236[ss:fp - 0x0020:word16] = Mem233[ds_211:0x29DF:word16]
	Mem239[ss:fp - 0x0022:word16] = Mem236[ss:fp - 0x000C:word16]
	Mem242[ss:fp - 0x0024:word16] = Mem239[ss:fp - 0x000E:word16]
	word16 si_243
	selector ds_244
	fn0800_409C(fp - 0x0002, ds_211, wArg02, wArg04, wArg06, out si_243, out ds_244)
	Mem249[ss:fp - 0x001E:word16] = Mem242[ds_244:0x29E1:word16]
	Mem252[ss:fp - 0x0020:word16] = Mem249[ds_244:0x29DF:word16]
	ui32 ax_dx_256 = SEQ(Mem252[ss:fp - 0x0010:word16], Mem252[ss:fp - 0x0012:word16] + 0x0001)
	word16 ax_259 = SLICE(ax_dx_256 + 0x00000001, word16, 16)
	Mem263[ss:fp - 0x0022:word16] = ax_259
	word16 dx_260 = (word16) (ax_dx_256 + 0x00000001)
	Mem265[ss:fp - 0x0024:word16] = dx_260
	word16 si_266
	selector ds_267
	fn0800_409C(fp - 0x0002, ds_244, wArg02, wArg04, wArg06, out si_266, out ds_267)
	Mem282[ss:fp - 0x0004:word16] = 0x0000
	word16 dx_277 = DPB(dx_260, 0x00, 8)
	Mem283[ss:fp - 0x0006:word16] = (DPB(ax_259, 0x00, 8) << 0x08) + dx_277 - 0x000C >>u 0x0002
	Mem286[ss:fp - 0x001E:word16] = Mem283[ds_267:0x29E1:word16]
	Mem289[ss:fp - 0x0020:word16] = Mem286[ds_267:0x29DF:word16]
	Mem294[ss:fp - 0x0022:word16] = 0x0000
	Mem297[ss:fp - 0x0024:word16] = Mem294[ss:fp - 0x0006:word16]
	word16 si_298
	selector ds_299
	word16 dx_301 = DPB(dx_277, fn0800_409C(fp - 0x0002, ds_267, wArg02, wArg04, wArg06, out si_298, out ds_299), 0)
	Mem306[ss:fp - 0x001E:word16] = Mem297[ds_299:0x29E1:word16]
	Mem309[ss:fp - 0x0020:word16] = Mem306[ds_299:0x29DF:word16]
	byte dl_311
	word16 si_312
	word16 ax_313 = fn0800_AD2F(ds_299, ptrArg00, wArg02, out dl_311, out si_312)
	Mem316[ds_299:0x4E8E:word16] = dx_301
	Mem317[ds_299:0x4E8C:word16] = ax_313
	word16 dx_319 = Mem317[ss:fp - 0x0016:word16]
	Mem320[ss:fp - 0x0004:word16] = Mem317[ss:fp - 0x0014:word16]
	Mem321[ss:fp - 0x0006:word16] = dx_319
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CAF:
	word16 ax_329 = Mem321[ss:fp - 0x0006:word16] | Mem321[ss:fp - 0x0004:word16]
	branch ax_329 != 0x0000 l0800_6C89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6C89:
	Mem457[ss:fp - 0x001E:word16] = Mem321[ds_299:0x29E1:word16]
	Mem460[ss:fp - 0x0020:word16] = Mem457[ds_299:0x29DF:word16]
	Mem463[ss:fp - 0x0022:word16] = Mem460[ds_299:0x29E5:word16]
	Mem466[ss:fp - 0x0024:word16] = Mem463[ds_299:0x29E3:word16]
	selector ds_467
	dx_319 = fn0800_3E5D(fp - 0x0002, ds_299, wArg00, wArg02, out ds_467)
	Mem472[ss:fp - 0x0022:word16] = dx_319
	Mem474[ss:fp - 0x0024:word16] = ax_329
	word16 si_475
	fn0800_409C(fp - 0x0002, ds_467, wArg02, wArg04, wArg06, out si_475, out ds_299)
	word16 v58_479 = Mem474[ss:fp - 0x0006:word16] - 0x0001
	Mem480[ss:fp - 0x0006:word16] = v58_479
	Mem484[ss:fp - 0x0004:word16] = Mem480[ss:fp - 0x0004:word16] - (v58_479 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CB7:
	Mem335[ss:fp - 0x001E:word16] = Mem321[ds_299:0x29E1:word16]
	Mem338[ss:fp - 0x0020:word16] = Mem335[ds_299:0x29DF:word16]
	Mem352[ss:fp - 0x0022:word16] = 0x0000
	Mem354[ss:fp - 0x0024:word16] = (DPB(ax_329, 0x00, 8) << 0x08) + DPB(dx_319, 0x00, 8)
	Mem356[ss:fp - 0x0026:word16] = ds_299
	Mem359[ss:fp - 0x0028:word16] = 0x2E77
	selector ds_362 = fn0800_4152(fp - 0x0002, ds_299, wArg00, wArg02, wArg04, wArg08, wArg0A)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6E93:
	Mem369[ss:fp - 0x001E:word16] = Mem359[ds_362:0x29E5:word16]
	Mem372[ss:fp - 0x0020:word16] = Mem369[ds_362:0x29E3:word16]
	byte dl_373
	word16 si_374
	word16 ax_375 = fn0800_AD2F(ds_362, ptrArg00, wArg02, out dl_373, out si_374)
	branch 0x0000 >=u Mem372[ds_362:0x2A09:word16] l0800_6EAA
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EAA:
	branch 0x0000 != Mem372[ds_362:0x2A09:word16] l0800_6EB5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EAC:
	branch ax_375 >=u Mem372[ds_362:0x2A07:word16] l0800_6EB5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EB5:
	return ds_362
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6EB2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EA7:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CE4:
	Mem388[ss:fp - 0x001E:word16] = Mem372[ds_362:0x29E5:word16]
	Mem391[ss:fp - 0x0020:word16] = Mem388[ds_362:0x29E3:word16]
	selector ds_392
	Mem395[ss:fp - 0x0008:word16] = fn0800_3E5D(fp - 0x0002, ds_362, wArg00, wArg02, out ds_392)
	Mem396[ss:fp - 0x000A:word16] = ax_375
	word16 ax_397 = Mem396[ss:fp - 0x0008:word16]
	word16 dx_398 = Mem396[ss:fp - 0x000A:word16]
	Mem402[ss:fp - 0x001A:word16] = dx_398
	Mem403[ss:fp - 0x0018:word16] = ax_397 & 0x3FFF
	word16 cx_404 = 0x0007
	word16 bx_406 = 0x6EBC
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D0D:
	branch Mem403[0x0800:bx_406:word16] != Mem403[ss:fp - 0x000A:word16] l0800_6D1E
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D15:
	word16 ax_424 = Mem403[0x0800:bx_406 + 0x000E:word16]
	branch ax_424 == Mem403[ss:fp - 0x0018:word16] l0800_6D26
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D26:
	word16 sp_427
	word16 bp_428
	selector ss_429
	byte SCZO_430
	word16 si_431
	byte al_432
	selector ds_433
	byte ah_434
	byte cl_435
	word16 ax_436
	byte dl_437
	byte dh_438
	word16 dx_439
	byte SZO_440
	byte C_441
	byte Z_442
	word16 cx_443
	word16 bx_444
	call Mem403[0x0800:bx_406 + 0x001C:word16] (retsize: 4; depth: 4)
		uses: ah_377,al_376,ax_424,bp_5,bx_407,C_401,cl_409,cx_408,dh_345,dl_373,ds_392,dx_398,SCZO_425,si_374,sp_394,ss,SZO_400,wLoc02_4,wLoc1C_9,wLoc1E_57,wLoc20_60,Z_426
		defs: ah_434,al_432,ax_436,bp_428,bx_444,C_441,cl_435,cx_443,dh_438,dl_437,ds_433,dx_439,SCZO_430,si_431,sp_427,ss_429,SZO_440,Z_442
	return ds_433
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D1E:
	bx_406 = bx_406 + 0x0002
	cx_404 = cx_404 - 0x0001
	branch cx_404 != 0x0000 l0800_6D0D
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D23:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6E8B:
	return ds_392
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6B1B:
	return ds_61
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp

l0800_6AFC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp

fn0800_6AD4_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_6EE6(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
fn0800_6EE6_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6EE6:
	word16 di_24
	fn0800_B2EF(ds, 0x2223, ds, out di_24)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_6EE6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -12(fp):0x2223 -10(fp):ds -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_6EFF(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_6EFF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_6EFF:
	word16 di_12
	fn0800_B2EF(ds, 0x2231, ds, out di_12)
	branch wArg02 <=u 0x0009 l0800_6F1E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6F13:
	word16 di_31
	fn0800_B2EF(ds, 0x223E, ds, out di_31)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -6(fp):0x2231 -4(fp):ds -2(fp):bp

l0800_6F1E:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_6EFF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp



void fn0800_6F20(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_6F20_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6F20:
	selector ds_16
	word16 dx_23
	word16 ax_24 = fn0800_8C69(ax, 0x02, fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_16), bp, out dx_23)
	Mem25[ss:fp - 0x0010:word16] = dx_23
	Mem27[ss:fp - 0x0012:word16] = ax_24
	Mem30[ss:fp - 0x001E:word16] = Mem27[ds_16:0x29E5:word16]
	Mem33[ss:fp - 0x0020:word16] = Mem30[ds_16:0x29E3:word16]
	byte dl_36
	word16 si_37
	word16 ax_38 = fn0800_AD2F(ds_16, ptrArg00, wArg02, out dl_36, out si_37)
	Mem41[ss:fp - 0x0014:word16] = dx_23
	Mem42[ss:fp - 0x0016:word16] = ax_38
	Mem45[ss:fp - 0x001E:word16] = 0x0001
	Mem48[ss:fp - 0x0020:word16] = Mem45[ss:fp - 0x0010:word16]
	Mem51[ss:fp - 0x0022:word16] = Mem48[ss:fp - 0x0012:word16]
	Mem54[ss:fp - 0x0024:word16] = Mem51[ds_16:0x29E5:word16]
	Mem57[ss:fp - 0x0026:word16] = Mem54[ds_16:0x29E3:word16]
	word16 di_60
	selector ds_61
	word16 ax_62 = fn0800_ACB3(fp - 0x0002, ds_16, wArg00, wArg02, wArg08, out di_60, out ds_61)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_6FCC:
	Mem72[ss:fp - 0x001E:word16] = Mem57[ds_61:0x29E5:word16]
	Mem75[ss:fp - 0x0020:word16] = Mem72[ds_61:0x29E3:word16]
	word16 di_76
	selector ds_77
	branch fn0800_3F58(fp - 0x0002, ds_61, wArg00, wArg02, out di_76, out ds_77) != 0x0000 l0800_6FE3
	Mem86[ss:fp - 0x001E:word16] = Mem75[ds_77:0x29E5:word16]
	Mem89[ss:fp - 0x0020:word16] = Mem86[ds_77:0x29E3:word16]
	word16 di_90
	selector ds_91
	word16 dx_92 = fn0800_3F58(fp - 0x0002, ds_77, wArg00, wArg02, out di_90, out ds_91)
	branch dx_92 != 0x0000 l0800_6FE3
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6FDE:
	branch ax_62 == 0x03EC l0800_6F6D
	branch ax_62 == 0x03EC l0800_6F6D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6F6D:
	Mem921[ss:fp - 0x001E:word16] = 0x0001
	Mem927[ss:fp - 0x0020:word16] = 0x0000
	Mem929[ss:fp - 0x0022:word16] = 0x0004
	Mem932[ss:fp - 0x0024:word16] = Mem929[ds_91:0x29E5:word16]
	Mem935[ss:fp - 0x0026:word16] = Mem932[ds_91:0x29E3:word16]
	word16 di_936
	ax_62 = fn0800_ACB3(fp - 0x0002, ds_91, wArg00, wArg02, wArg08, out di_936, out ds_61)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6F86:
	Mem948[ss:fp - 0x001E:word16] = Mem935[ds_61:0x29E5:word16]
	Mem951[ss:fp - 0x0020:word16] = Mem948[ds_61:0x29E3:word16]
	word16 dx_957
	word16 ax_958 = fn0800_8C69(ax_62, 0x02, fn0800_3E5D(fp - 0x0002, ds_61, wArg00, wArg02, out ds_61), bp, out dx_957)
	Mem959[ss:fp - 0x0004:word16] = dx_957
	Mem960[ss:fp - 0x0006:word16] = ax_958
	branch (ax_958 | Mem960[ss:fp - 0x0004:word16]) == 0x0000 l0800_6FC4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6FA4:
	Mem978[ss:fp - 0x001E:word16] = 0x0001
	ui32 ax_dx_982 = SEQ(Mem978[ss:fp - 0x0004:word16], Mem978[ss:fp - 0x0006:word16] + 0x0004)
	Mem989[ss:fp - 0x0020:word16] = SLICE(ax_dx_982 + 0x00000004, word16, 16)
	Mem991[ss:fp - 0x0022:word16] = (word16) (ax_dx_982 + 0x00000004)
	Mem994[ss:fp - 0x0024:word16] = Mem991[ds_61:0x29E5:word16]
	Mem997[ss:fp - 0x0026:word16] = Mem994[ds_61:0x29E3:word16]
	word16 di_998
	fn0800_ACB3(fp - 0x0002, ds_61, wArg00, wArg02, wArg08, out di_998, out ds_61)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6FC4:
	ax_62 = Mem960[ss:fp - 0x0006:word16] | Mem960[ss:fp - 0x0004:word16]
	branch ax_62 != 0x0000 l0800_6F86
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6FE3:
	Mem102[ss:fp - 0x001E:word16] = Mem89[ds_91:0x29E5:word16]
	Mem105[ss:fp - 0x0020:word16] = Mem102[ds_91:0x29E3:word16]
	byte dl_106
	word16 si_107
	word16 ax_110 = fn0800_AD2F(ds_91, ptrArg00, wArg02, out dl_106, out si_107) - Mem105[ss:fp - 0x0016:word16]
	word16 dx_113 = dx_92 - Mem105[ss:fp - 0x0014:word16] - (ax_110 <u 0x0000)
	Mem115[ss:fp - 0x0018:word16] = dx_113
	Mem116[ss:fp - 0x001A:word16] = ax_110
	Mem117[ds_91:0x2A05:word16] = dx_113
	Mem118[ds_91:0x2A03:word16] = ax_110
	Mem121[ss:fp - 0x001E:word16] = Mem118[ds_91:0x29E1:word16]
	Mem124[ss:fp - 0x0020:word16] = Mem121[ds_91:0x29DF:word16]
	Mem127[ss:fp - 0x0022:word16] = Mem124[ss:fp + 0x0004:word16]
	Mem130[ss:fp - 0x0024:word16] = Mem127[ss:fp + 0x0002:word16]
	word16 si_133
	selector ds_134
	word16 dx_136 = DPB(dx_113, fn0800_409C(fp - 0x0002, ds_91, wArg02, wArg04, wArg06, out si_133, out ds_134), 0)
	Mem141[ss:fp - 0x001E:word16] = Mem130[ds_134:0x29E1:word16]
	Mem144[ss:fp - 0x0020:word16] = Mem141[ds_134:0x29DF:word16]
	byte dl_145
	word16 si_146
	word16 ax_147 = fn0800_AD2F(ds_134, ptrArg00, wArg02, out dl_145, out si_146)
	Mem149[ss:fp - 0x0004:word16] = dx_136
	Mem150[ss:fp - 0x0006:word16] = ax_147
	branch Mem150[ss:fp - 0x0018:word16] >=u 0x0000 l0800_7035
	Mem155[ss:fp - 0x001E:word16] = Mem150[ds_134:0x29E5:word16]
	Mem158[ss:fp - 0x0020:word16] = Mem155[ds_134:0x29E3:word16]
	byte dl_159
	word16 si_160
	word16 ax_163 = fn0800_AD2F(ds_134, ptrArg00, wArg02, out dl_159, out si_160) - Mem158[ss:fp - 0x0016:word16]
	word16 dx_166 = dx_136 - Mem158[ss:fp - 0x0014:word16] - (ax_163 <u 0x0000)
	Mem168[ss:fp - 0x0018:word16] = dx_166
	Mem169[ss:fp - 0x001A:word16] = ax_163
	Mem170[ds_134:0x2A05:word16] = dx_166
	Mem171[ds_134:0x2A03:word16] = ax_163
	Mem174[ss:fp - 0x001E:word16] = Mem171[ds_134:0x29E1:word16]
	Mem177[ss:fp - 0x0020:word16] = Mem174[ds_134:0x29DF:word16]
	Mem180[ss:fp - 0x0022:word16] = Mem177[ss:fp + 0x0004:word16]
	Mem183[ss:fp - 0x0024:word16] = Mem180[ss:fp + 0x0002:word16]
	word16 si_184
	selector ds_185
	word16 dx_187 = DPB(dx_166, fn0800_409C(fp - 0x0002, ds_134, wArg02, wArg04, wArg06, out si_184, out ds_185), 0)
	Mem192[ss:fp - 0x001E:word16] = Mem183[ds_185:0x29E1:word16]
	Mem195[ss:fp - 0x0020:word16] = Mem192[ds_185:0x29DF:word16]
	byte dl_196
	word16 si_197
	word16 ax_198 = fn0800_AD2F(ds_185, ptrArg00, wArg02, out dl_196, out si_197)
	Mem200[ss:fp - 0x0004:word16] = dx_187
	Mem201[ss:fp - 0x0006:word16] = ax_198
	word16 sp_199 = fp - 0x001C
	branch Mem201[ss:fp - 0x0018:word16] >=u 0x0000 l0800_7035
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7035:
	branch Mem201[ss:fp - 0x0018:word16] >u 0x0000 l0800_7040
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7037:
	branch Mem201[ss:fp - 0x001A:word16] >u 0x0012 l0800_7040
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7040:
	Mem762[ss:fp - 0x001E:word16] = 0x0000
	Mem765[ss:fp - 0x0020:word16] = Mem762[ds_185:0x4E8E:word16]
	Mem768[ss:fp - 0x0022:word16] = Mem765[ds_185:0x4E8C:word16]
	Mem771[ss:fp - 0x0024:word16] = Mem768[ds_185:0x29E1:word16]
	Mem774[ss:fp - 0x0026:word16] = Mem771[ds_185:0x29DF:word16]
	word16 di_775
	selector ds_776
	word16 ax_777 = fn0800_ACB3(fp - 0x0002, ds_185, wArg00, wArg02, wArg08, out di_775, out ds_776)
	Mem782[ss:fp - 0x001E:word16] = Mem774[ds_776:0x29E1:word16]
	Mem785[ss:fp - 0x0020:word16] = Mem782[ds_776:0x29DF:word16]
	selector ds_786
	Mem789[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_776, wArg00, wArg02, out ds_786)
	Mem790[ss:fp - 0x000E:word16] = ax_777
	Mem795[ss:fp - 0x001E:word16] = 0x0000
	Mem798[ss:fp - 0x0020:word16] = Mem795[ss:fp - 0x0004:word16]
	Mem801[ss:fp - 0x0022:word16] = Mem798[ss:fp - 0x0006:word16]
	Mem804[ss:fp - 0x0024:word16] = Mem801[ds_786:0x29E1:word16]
	Mem807[ss:fp - 0x0026:word16] = Mem804[ds_786:0x29DF:word16]
	word16 di_808
	selector ds_809
	fn0800_ACB3(fp - 0x0002, ds_786, wArg00, wArg02, wArg08, out di_808, out ds_809)
	Mem814[ss:fp - 0x001E:word16] = Mem807[ds_809:0x29E1:word16]
	Mem817[ss:fp - 0x0020:word16] = Mem814[ds_809:0x29DF:word16]
	Mem822[ss:fp - 0x0022:word16] = 0x0000
	Mem824[ss:fp - 0x0024:word16] = 0x0000
	word16 si_825
	selector ds_826
	fn0800_409C(fp - 0x0002, ds_809, wArg02, wArg04, wArg06, out si_825, out ds_826)
	Mem832[ss:fp - 0x001E:word16] = Mem824[ds_826:0x29E1:word16]
	Mem835[ss:fp - 0x0020:word16] = Mem832[ds_826:0x29DF:word16]
	Mem838[ss:fp - 0x0022:word16] = Mem835[ss:fp - 0x0010:word16]
	Mem841[ss:fp - 0x0024:word16] = Mem838[ss:fp - 0x0012:word16]
	word16 si_842
	selector ds_843
	fn0800_409C(fp - 0x0002, ds_826, wArg02, wArg04, wArg06, out si_842, out ds_843)
	Mem849[ss:fp - 0x001E:word16] = Mem841[ds_843:0x29E1:word16]
	Mem852[ss:fp - 0x0020:word16] = Mem849[ds_843:0x29DF:word16]
	Mem855[ss:fp - 0x0022:word16] = Mem852[ss:fp - 0x000C:word16]
	Mem858[ss:fp - 0x0024:word16] = Mem855[ss:fp - 0x000E:word16]
	word16 si_859
	selector ds_860
	fn0800_409C(fp - 0x0002, ds_843, wArg02, wArg04, wArg06, out si_859, out ds_860)
	Mem867[ss:fp - 0x001E:word16] = 0x0000
	Mem870[ss:fp - 0x0020:word16] = Mem867[ss:fp - 0x0014:word16]
	Mem873[ss:fp - 0x0022:word16] = Mem870[ss:fp - 0x0016:word16]
	Mem876[ss:fp - 0x0024:word16] = Mem873[ds_860:0x29E5:word16]
	Mem879[ss:fp - 0x0026:word16] = Mem876[ds_860:0x29E3:word16]
	word16 di_880
	selector ds_881
	fn0800_ACB3(fp - 0x0002, ds_860, wArg00, wArg02, wArg08, out di_880, out ds_881)
	ui32 ax_dx_887 = SEQ(Mem879[ss:fp - 0x0018:word16], Mem879[ss:fp - 0x001A:word16] - 0x0008)
	Mem894[ss:fp - 0x001E:word16] = SLICE(ax_dx_887 - 0x00000008, word16, 16)
	Mem896[ss:fp - 0x0020:word16] = (word16) (ax_dx_887 - 0x00000008)
	Mem899[ss:fp - 0x0022:word16] = Mem896[ss:fp - 0x0018:word16]
	Mem902[ss:fp - 0x0024:word16] = Mem899[ss:fp - 0x001A:word16]
	ds_185 = fn0800_75EA(fp - 0x0002, ds_881, wArg00, wArg02, wArg04, wArg06)
	word16 v58_906 = Mem902[ds_185:0x2A03:word16] + 0x0008
	Mem907[ds_185:0x2A03:word16] = v58_906
	Mem911[ds_185:0x2A05:word16] = Mem907[ds_185:0x2A05:word16] + (v58_906 <u 0x0000)
	sp_199 = fp - 0x001E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_703D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7032:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_70F9:
	word16 ax_211 = Mem201[ds_185:0x2A05:word16]
	word16 dx_212 = Mem201[ds_185:0x2A03:word16]
	branch ax_211 >=u Mem201[ss:fp - 0x0018:word16] l0800_7108
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7108:
	branch ax_211 != Mem201[ss:fp - 0x0018:word16] l0800_7112
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_710A:
	branch dx_212 >=u Mem201[ss:fp - 0x001A:word16] l0800_7112
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7112:
	word16 sp_490 = sp_199 - 0x0002
	Mem491[ss:sp_490:word16] = 0x0000
	Mem494[ss:sp_490 - 0x0002:word16] = Mem491[ss:fp - 0x0004:word16]
	Mem497[ss:sp_490 - 0x0004:word16] = Mem494[ss:fp - 0x0006:word16]
	Mem500[ss:sp_490 - 0x0006:word16] = Mem497[ds_185:0x29E1:word16]
	Mem503[ss:sp_490 - 0x0008:word16] = Mem500[ds_185:0x29DF:word16]
	word16 di_504
	selector ds_505
	fn0800_ACB3(fp - 0x0002, ds_185, wArg00, wArg02, wArg08, out di_504, out ds_505)
	Mem510[ss:sp_490:word16] = 0x0000
	ui32 ax_dx_514 = SEQ(Mem510[ss:fp - 0x0014:word16], Mem510[ss:fp - 0x0016:word16] - 0x0004)
	Mem521[ss:sp_490 - 0x0002:word16] = SLICE(ax_dx_514 - 0x00000004, word16, 16)
	Mem523[ss:sp_490 - 0x0004:word16] = (word16) (ax_dx_514 - 0x00000004)
	Mem526[ss:sp_490 - 0x0006:word16] = Mem523[ds_505:0x29E5:word16]
	Mem529[ss:sp_490 - 0x0008:word16] = Mem526[ds_505:0x29E3:word16]
	word16 di_530
	selector ds_531
	fn0800_ACB3(fp - 0x0002, ds_505, wArg00, wArg02, wArg08, out di_530, out ds_531)
	ui32 ax_dx_537 = SEQ(Mem529[ss:fp - 0x0010:word16], Mem529[ss:fp - 0x0012:word16] + 0x0004)
	word16 ax_540 = SLICE(ax_dx_537 + 0x00000004, word16, 16)
	Mem545[ss:sp_490:word16] = ax_540
	Mem547[ss:sp_490 - 0x0002:word16] = (word16) (ax_dx_537 + 0x00000004)
	Mem550[ss:sp_490 - 0x0004:word16] = Mem547[ds_531:0x29E1:word16]
	Mem553[ss:sp_490 - 0x0006:word16] = Mem550[ds_531:0x29DF:word16]
	Mem556[ss:sp_490 - 0x0008:word16] = Mem553[ds_531:0x29E5:word16]
	Mem559[ss:sp_490 - 0x000A:word16] = Mem556[ds_531:0x29E3:word16]
	selector ds_561
	word16 bp_562 = fn0800_3B0A(fp - 0x0002, ds_531, wArg08, wArg0A, out ds_561)
	Mem567[ss:sp_490:word16] = Mem559[ds_561:0x29E5:word16]
	Mem570[ss:sp_490 - 0x0002:word16] = Mem567[ds_561:0x29E3:word16]
	word16 di_571
	selector ds_572
	branch fn0800_3F58(bp_562, ds_561, wArg00, wArg02, out di_571, out ds_572) == 0x0000 l0800_7181
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7181:
	branch ax_540 == 0x03EC l0800_7189
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7189:
	Mem606[ss:sp_490:word16] = 0x0001
	Mem612[ss:sp_490 - 0x0002:word16] = 0x0000
	Mem614[ss:sp_490 - 0x0004:word16] = 0x0004
	Mem617[ss:sp_490 - 0x0006:word16] = Mem614[ds_572:0x29E5:word16]
	Mem620[ss:sp_490 - 0x0008:word16] = Mem617[ds_572:0x29E3:word16]
	word16 di_621
	selector ds_622
	fn0800_ACB3(bp_562, ds_572, wArg00, wArg02, wArg08, out di_621, out ds_622)
	Mem627[ss:sp_490:word16] = Mem620[ds_622:0x29E1:word16]
	Mem630[ss:sp_490 - 0x0002:word16] = Mem627[ds_622:0x29DF:word16]
	Mem636[ss:sp_490 - 0x0004:word16] = 0x0000
	Mem638[ss:sp_490 - 0x0006:word16] = 0x03EC
	word16 si_639
	fn0800_409C(bp_562, ds_622, wArg02, wArg04, wArg06, out si_639, out ds_572)
	word16 ax_631 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_71B7:
	word16 sp_651 = sp_199 - 0x0002
	Mem652[ss:sp_651:word16] = Mem638[ds_572:0x29E5:word16]
	Mem655[ss:sp_651 - 0x0002:word16] = Mem652[ds_572:0x29E3:word16]
	selector ds_656
	Mem660[ss:bp_562 - 0x0002:word16] = fn0800_3E5D(bp_562, ds_572, wArg00, wArg02, out ds_656)
	Mem661[ss:bp_562 - 0x0004:word16] = ax_631
	Mem664[ss:sp_651:word16] = Mem661[ds_656:0x29E1:word16]
	Mem667[ss:sp_651 - 0x0002:word16] = Mem664[ds_656:0x29DF:word16]
	Mem670[ss:sp_651 - 0x0004:word16] = Mem667[ss:bp_562 - 0x0002:word16]
	Mem672[ss:sp_651 - 0x0006:word16] = ax_631
	word16 si_673
	fn0800_409C(bp_562, ds_656, wArg02, wArg04, wArg06, out si_673, out ds_572)
	word16 ax_678 = Mem672[ss:bp_562 - 0x0004:word16] | Mem672[ss:bp_562 - 0x0002:word16]
	branch ax_678 == 0x0000 l0800_7234
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_71E5:
	Mem698[ss:sp_651:word16] = Mem672[ds_572:0x29E5:word16]
	Mem701[ss:sp_651 - 0x0002:word16] = Mem698[ds_572:0x29E3:word16]
	selector ds_702
	ui32 dx_ax_706 = SEQ(fn0800_3E5D(bp_562, ds_572, wArg00, wArg02, out ds_702), ax_678 + 0x0001)
	Mem712[ss:bp_562 - 0x0006:word16] = SLICE(dx_ax_706 + 0x00000001, word16, 16)
	word16 ax_710 = (word16) (dx_ax_706 + 0x00000001)
	Mem713[ss:bp_562 - 0x0008:word16] = ax_710
	Mem716[ss:sp_651:word16] = Mem713[ds_702:0x29E1:word16]
	Mem719[ss:sp_651 - 0x0002:word16] = Mem716[ds_702:0x29DF:word16]
	Mem722[ss:sp_651 - 0x0004:word16] = Mem719[ss:bp_562 - 0x0006:word16]
	Mem724[ss:sp_651 - 0x0006:word16] = ax_710
	word16 si_725
	selector ds_726
	fn0800_409C(bp_562, ds_702, wArg02, wArg04, wArg06, out si_725, out ds_726)
	word16 dx_733
	word16 ax_734 = fn0800_8C69(Mem724[ss:bp_562 - 0x0004:word16], 0x02, Mem724[ss:bp_562 - 0x0002:word16], bp, out dx_733)
	Mem736[ss:sp_651:word16] = dx_733
	Mem738[ss:sp_651 - 0x0002:word16] = ax_734
	Mem741[ss:sp_651 - 0x0004:word16] = Mem738[ds_726:0x29E1:word16]
	Mem744[ss:sp_651 - 0x0006:word16] = Mem741[ds_726:0x29DF:word16]
	Mem747[ss:sp_651 - 0x0008:word16] = Mem744[ds_726:0x29E5:word16]
	Mem750[ss:sp_651 - 0x000A:word16] = Mem747[ds_726:0x29E3:word16]
	bp_562 = fn0800_3B0A(bp_562, ds_726, wArg08, wArg0A, out ds_572)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7234:
	ax_631 = Mem672[ss:bp_562 - 0x0004:word16] | Mem672[ss:bp_562 - 0x0002:word16]
	branch ax_631 == 0x0000 l0800_723F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_723C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7186:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_717E:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_723F:
	word16 v80_592 = Mem570[ds_572:0x4E8C:word16] + 0x0004
	Mem593[ds_572:0x4E8C:word16] = v80_592
	Mem597[ds_572:0x4E8E:word16] = Mem593[ds_572:0x4E8E:word16] + (v80_592 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_710F:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7105:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_724D:
	word16 dx_240 = Mem201[ss:fp - 0x001A:word16] + Mem201[ds_185:0x4E88:word16]
	Mem244[ss:fp - 0x0004:word16] = Mem201[ss:fp - 0x0018:word16] + Mem201[ds_185:0x4E8A:word16] + (dx_240 <u 0x0000)
	Mem245[ss:fp - 0x0006:word16] = dx_240
	branch (Mem245[ds_185:0x2A03:word16] & 0x0003) == 0x0000 l0800_7274
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_726C:
	word16 v60_480 = Mem245[ss:fp - 0x0006:word16] + 0x0002
	Mem481[ss:fp - 0x0006:word16] = v60_480
	Mem485[ss:fp - 0x0004:word16] = Mem481[ss:fp - 0x0004:word16] + (v60_480 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7274:
	word16 dx_262
	branch (Mem245[ss:fp - 0x0006:word16] & 0x0003) == 0x0000 l0800_7298
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7298:
	word16 ax_477 = fn0800_8CAA(Mem245[ss:fp - 0x0006:word16], 0x02, Mem245[ss:fp - 0x0004:word16], bp, out dx_262)
	Mem478[ss:fp - 0x0004:word16] = dx_262
	Mem479[ss:fp - 0x0006:word16] = ax_477
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_727F:
	word16 dx_461
	word16 ax_462 = fn0800_8CAA(Mem245[ss:fp - 0x0006:word16], 0x02, Mem245[ss:fp - 0x0004:word16], bp, out dx_461)
	ui32 dx_ax_464 = SEQ(dx_461, ax_462 + 0x0001)
	dx_262 = SLICE(dx_ax_464 + 0x00000001, word16, 16) (alias)
	Mem470[ss:fp - 0x0004:word16] = dx_262
	Mem471[ss:fp - 0x0006:word16] = (word16) (dx_ax_464 + 0x00000001)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> si:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72C6:
	word16 ax_268 = Mem245[ds_185:0x2A03:word16]
	branch (ax_268 & 0x0003) != 0x0000 l0800_72AB
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72AB:
	word16 sp_436 = sp_199 - 0x0002
	Mem437[ss:sp_436:word16] = Mem245[ds_185:0x29E1:word16]
	Mem440[ss:sp_436 - 0x0002:word16] = Mem437[ds_185:0x29DF:word16]
	Mem444[ss:sp_436 - 0x0004:word16] = DPB(ax_268 & 0x0003, 0x00, 0)
	word16 di_447
	fn0800_4047(fp - 0x0002, ds_185, bArg00, ptrArg02, wArg04, out di_447, out ds_185)
	word16 v101_451 = Mem444[ds_185:0x2A03:word16] + 0x0001
	Mem452[ds_185:0x2A03:word16] = v101_451
	Mem456[ds_185:0x2A05:word16] = Mem452[ds_185:0x2A05:word16] + (v101_451 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72D1:
	word16 sp_275 = sp_199 - 0x0002
	Mem276[ss:sp_275:word16] = Mem245[ds_185:0x29E1:word16]
	Mem279[ss:sp_275 - 0x0002:word16] = Mem276[ds_185:0x29DF:word16]
	byte dl_280
	word16 si_281
	word16 ax_282 = fn0800_AD2F(ds_185, ptrArg00, wArg02, out dl_280, out si_281)
	Mem284[ss:fp - 0x0008:word16] = dx_262
	Mem285[ss:fp - 0x000A:word16] = ax_282
	Mem288[ss:sp_275:word16] = 0x0001
	word16 dx_292 = -Mem288[ds_185:0x2A03:word16]
	ui32 ax_dx_296 = SEQ(-Mem288[ds_185:0x2A05:word16] - (dx_292 == 0x0000), dx_292 - 0x0004)
	Mem303[ss:sp_275 - 0x0002:word16] = SLICE(ax_dx_296 - 0x00000004, word16, 16)
	Mem305[ss:sp_275 - 0x0004:word16] = (word16) (ax_dx_296 - 0x00000004)
	Mem308[ss:sp_275 - 0x0006:word16] = Mem305[ds_185:0x29E1:word16]
	Mem311[ss:sp_275 - 0x0008:word16] = Mem308[ds_185:0x29DF:word16]
	word16 di_312
	selector ds_313
	fn0800_ACB3(fp - 0x0002, ds_185, wArg00, wArg02, wArg08, out di_312, out ds_313)
	Mem319[ss:sp_275:word16] = Mem311[ds_313:0x29E1:word16]
	Mem322[ss:sp_275 - 0x0002:word16] = Mem319[ds_313:0x29DF:word16]
	word16 dx_326
	word16 ax_327 = fn0800_8CAA(Mem322[ds_313:0x2A03:word16], 0x02, Mem322[ds_313:0x2A05:word16], bp, out dx_326)
	Mem329[ss:sp_275 - 0x0004:word16] = dx_326
	Mem331[ss:sp_275 - 0x0006:word16] = ax_327
	word16 si_332
	selector ds_333
	fn0800_409C(fp - 0x0002, ds_313, wArg02, wArg04, wArg06, out si_332, out ds_333)
	word16 ax_336 = Mem331[ss:fp - 0x000C:word16]
	word16 dx_337 = Mem331[ss:fp - 0x000E:word16]
	Mem342[ss:fp - 0x001C:word16] = ax_336 & 0x3FFF
	branch (ax_336 & 0x3FFF) <u Mem342[ss:fp - 0x0004:word16] l0800_734D
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_733A:
	branch (ax_336 & 0x3FFF) >u Mem342[ss:fp - 0x0004:word16] l0800_7341
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_733C:
	branch dx_337 <=u Mem342[ss:fp - 0x0006:word16] l0800_734D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7341:
	word16 ax_429 = Mem342[ss:fp - 0x000E:word16]
	Mem431[ss:fp - 0x0004:word16] = Mem342[ss:fp - 0x001C:word16]
	Mem432[ss:fp - 0x0006:word16] = ax_429
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_734D:
	word16 ax_350 = Mem342[ss:fp - 0x000C:word16]
	Mem353[ss:fp - 0x0006:word16] = Mem342[ss:fp - 0x0006:word16]
	Mem356[ss:fp - 0x0004:word16] = Mem353[ss:fp - 0x0004:word16] | ax_350 & 0xC000
	Mem362[ss:sp_275:word16] = 0x0000
	Mem365[ss:sp_275 - 0x0002:word16] = Mem362[ds_333:0x4E8E:word16]
	Mem368[ss:sp_275 - 0x0004:word16] = Mem365[ds_333:0x4E8C:word16]
	Mem371[ss:sp_275 - 0x0006:word16] = Mem368[ds_333:0x29E1:word16]
	Mem374[ss:sp_275 - 0x0008:word16] = Mem371[ds_333:0x29DF:word16]
	word16 di_375
	selector ds_376
	fn0800_ACB3(fp - 0x0002, ds_333, wArg00, wArg02, wArg08, out di_375, out ds_376)
	Mem382[ss:sp_275:word16] = Mem374[ds_376:0x29E1:word16]
	Mem385[ss:sp_275 - 0x0002:word16] = Mem382[ds_376:0x29DF:word16]
	Mem388[ss:sp_275 - 0x0004:word16] = Mem385[ss:fp - 0x0004:word16]
	Mem391[ss:sp_275 - 0x0006:word16] = Mem388[ss:fp - 0x0006:word16]
	word16 si_392
	selector ds_393
	fn0800_409C(fp - 0x0002, ds_376, wArg02, wArg04, wArg06, out si_392, out ds_393)
	Mem400[ss:sp_275:word16] = 0x0000
	Mem403[ss:sp_275 - 0x0002:word16] = Mem400[ss:fp - 0x0008:word16]
	Mem406[ss:sp_275 - 0x0004:word16] = Mem403[ss:fp - 0x000A:word16]
	Mem409[ss:sp_275 - 0x0006:word16] = Mem406[ds_393:0x29E1:word16]
	Mem412[ss:sp_275 - 0x0008:word16] = Mem409[ds_393:0x29DF:word16]
	word16 di_413
	selector ds_414
	fn0800_ACB3(fp - 0x0002, ds_393, wArg00, wArg02, wArg08, out di_413, out ds_414)
	word16 v96_417 = Mem412[ds_414:0x4E8C:word16] + 0x0004
	Mem418[ds_414:0x4E8C:word16] = v96_417
	Mem422[ds_414:0x4E8E:word16] = Mem418[ds_414:0x4E8E:word16] + (v96_417 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_6F20_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_73AC(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_73AC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_73AC:
	selector ds_34 = fn0800_4152(bp, ds, 0x2E77, ds, (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8), Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16])
	Mem39[ss:fp - 0x0002:word16] = 0x0001
	Mem44[ss:fp - 0x0004:word16] = 0xFFFF
	Mem46[ss:fp - 0x0006:word16] = 0xFFFC
	Mem49[ss:fp - 0x0008:word16] = Mem46[ds_34:0x29E1:word16]
	Mem52[ss:fp - 0x000A:word16] = Mem49[ds_34:0x29DF:word16]
	word16 di_56
	selector ds_57
	fn0800_ACB3(bp, ds_34, wArg00, wArg02, wArg08, out di_56, out ds_57)
	Mem63[ss:fp - 0x0002:word16] = Mem52[ds_57:0x29E1:word16]
	Mem66[ss:fp - 0x0004:word16] = Mem63[ds_57:0x29DF:word16]
	Mem69[ss:fp - 0x0006:word16] = Mem66[ds_57:0x2A11:word16]
	Mem72[ss:fp - 0x0008:word16] = Mem69[ds_57:0x2A0F:word16]
	word16 si_75
	selector ds_76
	fn0800_409C(bp, ds_57, wArg02, wArg04, wArg06, out si_75, out ds_76)
	Mem82[ss:fp - 0x0002:word16] = Mem72[ds_76:0x2A09:word16]
	Mem85[ss:fp - 0x0004:word16] = Mem82[ds_76:0x2A07:word16]
	Mem88[ss:fp - 0x0006:word16] = Mem85[ds_76:0x2A09:word16]
	Mem91[ss:fp - 0x0008:word16] = Mem88[ds_76:0x2A07:word16]
	fn0800_75EA(bp, ds_76, wArg00, wArg02, wArg04, wArg06)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_73AC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -12(fp):0x2E77 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_741D(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_741D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_741D:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7424_thunk_fn0800_75C1:
	fn0800_75C1(ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 -8(fp):si -2(fp):bp
// Terminates process

fn0800_741D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: -8(fp):si -2(fp):bp



void fn0800_75C1(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_75C1_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v3(16)

l0800_75C1:
	Mem6[ss:v3 - 0x0002:word16] = Mem0[ds:0x29E5:word16]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16)

l0800_75C1_thunk_fn0800_75C5:
	fn0800_75C5(ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0002 -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_75C1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>



void fn0800_75C5(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved:
fn0800_75C5_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_75C5:
	sp = fp
	v4 = Mem0[ds:0x29E3:word16]
	sp = fp - 0x0002
	wLoc02 = v4
	ptrLoc02 = DPB(ptrLoc02, wLoc02, 0) (alias)
	ax = fn0800_AD2F(ds, ptrLoc02, wArg00, out dl, out si)
	ax_dx = SEQ(ax, dx) (alias)
	dx_ax = SEQ(dx, ax) (alias)
	sp = sp + 0x0004
	SCZO = cond(dx - Mem0[ds:0x2A09:word16])
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(UGE,C) l0800_75D8
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_75D8:
	branch Test(NE,Z) l0800_75E3
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_75DA:
	SCZO = cond(ax - Mem0[ds:0x2A07:word16])
	C = SCZO (alias)
	branch Test(UGE,C) l0800_75E3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_75E3:
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	si = Mem0[ss:sp:word16]
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -2(fp):<invalid>

l0800_75E0:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_75D5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7427:
	v11 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v11
	v12 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v12
	ax = fn0800_3E9A(bp, ds, ptrArg00, wArg02, out ds)
	sp = sp + 0x0004
	ax = ax | ax
	ax_dx = SEQ(ax, dx) (alias)
	dx_ax = SEQ(dx, ax) (alias)
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_7449
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7449:
	v14 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v14
	v15 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v15
	v16 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v16
	v17 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v17
	ax = fn0800_3DCF(bp, ds, ptrArg00, wArg02, out dx, out di, out ds)
	sp = sp + 0x0004
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	dl = fn0800_4047(bp, ds, bArg00, ptrArg02, wArg04, out di, out ds)
	sp = sp + 0x0006
	SCZO = cond(sp)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_7463_thunk_fn0800_75C1:
	fn0800_75C1(ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_7439:
	SCZO = cond(ax - 0x0001)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_7469
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7469:
	v28 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v28
	v29 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v29
	v30 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v30
	v31 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v31
	dx = fn0800_3E5D(bp, ds, wArg00, wArg02, out ds)
	sp = sp + 0x0004
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = dx
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	dl = fn0800_409C(bp, ds, wArg02, wArg04, wArg06, out si, out ds)
	sp = sp + 0x0008
	SCZO = cond(sp)
	v32 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v32
	v33 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v33
	ax = fn0800_3FAD(bp, ds, wArg00, wArg02, out si, out di, out ds)
	sp = sp + 0x0004
	Mem0[ss:bp - 0x0002:word16] = 0x0000
	Mem0[ss:bp - 0x0004:word16] = ax
	v35 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v35
	v36 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v36
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0000
	dl = fn0800_401E(bp, ds, wArg00, wArg02, wArg04, out si, out ds)
	sp = sp + 0x0006
	SCZO = cond(sp)
	v37 = Mem0[ss:bp - 0x0002:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v37
	v38 = Mem0[ss:bp - 0x0004:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v38
	v39 = Mem0[ss:bp - 0x0002:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v39
	v40 = Mem0[ss:bp - 0x0004:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v40
	ds = fn0800_75EA(bp, ds, wArg00, wArg02, wArg04, wArg06)
	sp = sp + 0xFFFE
	sp = sp + 0x0008
	ax = 0x0001
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0001
	ax = Mem0[ds:0x2A05:word16]
	dx = Mem0[ds:0x2A03:word16]
	dx = dx + 0x0002
	ax_dx = SEQ(ax, dx) (alias)
	SCZO = cond(dx)
	ax_dx = ax_dx + 0x00000002
	ax = SLICE(ax_dx, word16, 16) (alias)
	dx = (word16) ax_dx (alias)
	ax = -ax
	dx = -dx
	C = dx == 0x0000
	ax = ax - 0x0000 - C
	ax_dx = SEQ(ax, dx) (alias)
	SCZO = cond(ax_dx)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = dx
	v41 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v41
	v42 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v42
	ax = fn0800_ACB3(bp, ds, wArg00, wArg02, wArg08, out di, out ds)
	sp = sp + 0x000A
	SCZO = cond(sp)
	v43 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v43
	v44 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v44
	v45 = Mem0[ds:0x2A03:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v45
	di = fn0800_40BF(bp, ds, bArg00, wArg02, wArg04, out ds)
	sp = sp + 0x0006
	ax = Mem0[ds:0x2A05:word16]
	dx = Mem0[ds:0x2A03:word16]
	dx_ax = SEQ(dx, ax) (alias)
	dl = (byte) dx (alias)
	ax_dx = SEQ(ax, dx) (alias)
	SCZO = cond(ax - Mem0[ss:bp - 0x0002:word16])
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_754A
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7506:
	SCZO = cond(dx - Mem0[ss:bp - 0x0004:word16])
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_754A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_754A:
	ax = 0x0001
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0001
	v58 = Mem0[ds:0x2A05:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v58
	v59 = Mem0[ds:0x2A03:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v59
	v60 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v60
	v61 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v61
	ax = fn0800_ACB3(bp, ds, wArg00, wArg02, wArg08, out di, out ds)
	sp = sp + 0x000A
	SCZO = cond(sp)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_7561_thunk_fn0800_75C1:
	fn0800_75C1(ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_750B:
	ax = 0x0001
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0001
	ax = Mem0[ss:bp - 0x0002:word16]
	dx = Mem0[ss:bp - 0x0004:word16]
	ax = -ax
	dx = -dx
	C = dx == 0x0000
	ax = ax - 0x0000 - C
	SCZO = cond(ax)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = dx
	v46 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v46
	v47 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v47
	ax = fn0800_ACB3(bp, ds, wArg00, wArg02, wArg08, out di, out ds)
	sp = sp + 0x000A
	SCZO = cond(sp)
	v48 = Mem0[ss:bp - 0x0002:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v48
	v49 = Mem0[ss:bp - 0x0004:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v49
	v50 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v50
	v51 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v51
	v52 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v52
	v53 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v53
	bp = fn0800_3B0A(bp, ds, wArg08, wArg0A, out ds)
	sp = sp + 0x000C
	SCZO = cond(sp)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_7545_thunk_fn0800_75C1:
	fn0800_75C1(ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:0x40 -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_743E:
	SCZO = cond(ax - 0x0003)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_7446
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7446:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_758F:
	v20 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v20
	v21 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v21
	ax = fn0800_AD2F(ds, ptrArg00, wArg02, out dl, out si)
	dx_ax = SEQ(dx, ax) (alias)
	sp = sp + 0x0004
	bx = Mem0[ds:0x2A09:word16]
	cx = Mem0[ds:0x2A07:word16]
	cx = cx - ax
	bx_cx = SEQ(bx, cx) (alias)
	SCZO = cond(cx)
	bx_cx = bx_cx - dx_ax
	bx = SLICE(bx_cx, word16, 16) (alias)
	cx = (word16) bx_cx (alias)
	SCZO = cond(bx_cx)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = bx
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = cx
	v24 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v24
	v25 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v25
	v26 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v26
	v27 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v27
	bp = fn0800_3B0A(bp, ds, wArg08, wArg0A, out ds)
	sp = sp + 0x000C
	SCZO = cond(sp)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_75BE_thunk_fn0800_75C1:
	fn0800_75C1(ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:0x40 dl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_7443:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7566:
	si = 0x0000
	SZO = cond(0x0000)
	C = false
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7588:
	SCZO = cond(si - 0x0003)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_756A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_756A:
	v54 = Mem0[ds:0x29E1:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v54
	v55 = Mem0[ds:0x29DF:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v55
	v56 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v56
	v57 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v57
	ax = fn0800_3DCF(bp, ds, ptrArg00, wArg02, out dx, out di, out ds)
	sp = sp + 0x0004
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	dl = fn0800_4047(bp, ds, bArg00, ptrArg02, wArg04, out di, out ds)
	sp = sp + 0x0006
	SCZO = cond(sp)
	si = si + 0x0001
	SZO = cond(si)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_758D:
	fn0800_75C1(ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_75C5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

l0800_75C1:
	Mem6[ss:v3 - 0x0002:word16] = Mem0[ds:0x29E5:word16]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>
// LocalsOut: fp(16)

l0800_75C1_thunk_fn0800_75C5:
	fn0800_75C5(ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0002 -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_75C1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>



selector fn0800_75EA(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_75EA_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_75EA:
	Mem14[ds:0x4680:word16] = wArg04
	Mem16[ds:0x467E:word16] = wArg02
	Mem17[ds:0x2A05:word16] = wArg04
	Mem18[ds:0x2A03:word16] = wArg02
	Mem19[ds:0x4678:word16] = wArg04
	Mem20[ds:0x4676:word16] = wArg02
	ui32 ax_dx_26 = SEQ(wArg08, wArg06 - 0x0012)
	Mem31[ds:0x4E86:word16] = SLICE(ax_dx_26 - 0x00000012, word16, 16)
	Mem32[ds:0x4E84:word16] = (word16) (ax_dx_26 - 0x00000012)
	word16 bp_350 = fp - 0x0002
	branch Mem32[ds:0x4680:word16] >u 0x0000 l0800_7634
// DataOut: ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_7626:
	branch Mem32[ds:0x4680:word16] == 0x0000 l0800_762B
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_762B:
	branch wArg02 >u 0x0012 l0800_7634
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_7634:
	Mem69[ds:0x2E4B:word16] = 0x0000
	Mem70[ds:0x2E49:word16] = 0x0000
	Mem71[ds:0x465C:word16] = 0x0000
	Mem72[ds:0x4668:word16] = 0x0000
	Mem73[ds:0x4666:word16] = 0x0000
	Mem74[ds:0x2A05:word16] = 0x0000
	Mem75[ds:0x2A03:word16] = 0x0000
	Mem76[ds:0x2A01:word16] = 0x0000
	Mem77[ds:0x29FF:word16] = 0x0000
	Mem78[ds:0x467C:word16] = 0x0000
	Mem79[ds:0x467A:word16] = 0x0000
	Mem80[ds:0x4674:word16] = 0x0000
	Mem81[ds:0x4672:word16] = 0x0000
	Mem82[ds:0x2E43:word16] = 0x0000
	Mem83[ds:0x2E45:word16] = 0x0000
	Mem84[ds:0x4E82:word16] = 0x0000
	Mem85[ds:0x4E8A:word16] = 0x0000
	Mem86[ds:0x4E88:word16] = 0x0000
	Mem87[ds:0x29F9:word16] = 0x0000
	Mem88[ds:0x29F7:word16] = 0x0000
	fn0800_4311(0x0001, 0x000F, ds, 0x000F, 0x0001)
	Mem101[ds:0x2E73:word16] = 0x0010
	Mem102[ds:0x2E71:word16] = 0x0000
	fn0800_4311(0x0001, 0x0010, ds, 0x0010, 0x0001)
	Mem115[ds:0x2E39:word16] = 0x0011
	Mem116[ds:0x2E37:word16] = 0x0000
	fn0800_4311(0x0001, 0x0010, ds, 0x0010, 0x0001)
	Mem129[ds:0x2E35:word16] = 0x0011
	Mem130[ds:0x2E33:word16] = 0x0000
	fn0800_4311(0x0001, 0x0010, ds, 0x0010, 0x0001)
	Mem143[ds:0x2E41:word16] = 0x0011
	Mem144[ds:0x2E3F:word16] = 0x0000
	fn0800_4311(0x0001, 0x0010, ds, 0x0010, 0x0001)
	Mem158[ds:0x2E3D:word16] = 0x0011
	Mem159[ds:0x2E3B:word16] = 0x0000
	fn0800_87F8(ds)
	byte dl_168
	word16 si_169
	word16 ax_170 = fn0800_AD2F(ds, DPB(ptrLoc1E, Mem159[ds:0x29E3:word16], 0), Mem159[ds:0x29E5:word16], out dl_168, out si_169)
	Mem173[ds:0x4664:word16] = 0x0011
	Mem174[ds:0x4662:word16] = ax_170
	Mem177[ss:fp - 0x001C:word16] = Mem174[ds:0x29E1:word16]
	Mem181[ss:fp - 0x001E:word16] = Mem177[ds:0x29DF:word16]
	byte dl_183
	word16 si_184
	word16 ax_185 = fn0800_AD2F(ds, ptrArg00, wArg02, out dl_183, out si_184)
	Mem187[ds:0x4660:word16] = 0x0011
	Mem188[ds:0x465E:word16] = ax_185
	Mem191[ss:fp - 0x001C:word16] = Mem188[ds:0x29E1:word16]
	Mem194[ss:fp - 0x001E:word16] = Mem191[ds:0x29DF:word16]
	int32 dx_ax_199 = SEQ(0x0011, (word16) (int32) Mem194[ds:0x2A21:word16] + 0x4300)
	Mem206[ss:fp - 0x0020:word16] = SLICE(dx_ax_199 + 0x524E4300, word16, 16)
	Mem208[ss:fp - 0x0022:word16] = (word16) (dx_ax_199 + 0x524E4300)
	word16 si_209
	selector ds_210
	fn0800_409C(fp - 0x0002, ds, wArg02, wArg04, wArg06, out si_209, out ds_210)
	Mem216[ss:fp - 0x001C:word16] = Mem208[ds_210:0x29E1:word16]
	Mem219[ss:fp - 0x001E:word16] = Mem216[ds_210:0x29DF:word16]
	Mem222[ss:fp - 0x0020:word16] = Mem219[ds_210:0x4680:word16]
	Mem225[ss:fp - 0x0022:word16] = Mem222[ds_210:0x467E:word16]
	word16 si_226
	selector ds_227
	fn0800_409C(fp - 0x0002, ds_210, wArg02, wArg04, wArg06, out si_226, out ds_227)
	Mem232[ss:fp - 0x001C:word16] = Mem225[ds_227:0x29E1:word16]
	Mem235[ss:fp - 0x001E:word16] = Mem232[ds_227:0x29DF:word16]
	Mem240[ss:fp - 0x0020:word16] = 0x0000
	Mem242[ss:fp - 0x0022:word16] = 0x0000
	word16 si_243
	selector ds_244
	fn0800_409C(fp - 0x0002, ds_227, wArg02, wArg04, wArg06, out si_243, out ds_244)
	Mem249[ss:fp - 0x001C:word16] = Mem242[ds_244:0x29E1:word16]
	Mem252[ss:fp - 0x001E:word16] = Mem249[ds_244:0x29DF:word16]
	Mem257[ss:fp - 0x0020:word16] = 0x0000
	word16 si_259
	selector ds_260
	fn0800_401E(fp - 0x0002, ds_244, wArg00, wArg02, wArg04, out si_259, out ds_260)
	Mem265[ss:fp - 0x001C:word16] = Mem257[ds_260:0x29E1:word16]
	Mem268[ss:fp - 0x001E:word16] = Mem265[ds_260:0x29DF:word16]
	Mem273[ss:fp - 0x0020:word16] = 0x0000
	word16 si_274
	selector ds_275
	fn0800_401E(fp - 0x0002, ds_260, wArg00, wArg02, wArg04, out si_274, out ds_275)
	Mem280[ss:fp - 0x001C:word16] = Mem273[ds_275:0x29E1:word16]
	Mem283[ss:fp - 0x001E:word16] = Mem280[ds_275:0x29DF:word16]
	Mem288[ss:fp - 0x0020:word16] = 0x0000
	word16 si_289
	selector ds_290
	fn0800_401E(fp - 0x0002, ds_275, wArg00, wArg02, wArg04, out si_289, out ds_290)
	Mem295[ss:fp - 0x001C:word16] = ds_290
	Mem298[ss:fp - 0x001E:word16] = 0x2240
	word16 di_299
	fn0800_B2EF(ds_290, wArg00, wArg02, out di_299)
	Mem303[ss:fp - 0x0004:word16] = Mem298[ds_290:0x2E4F:word16]
	Mem309[ss:fp - 0x001C:word16] = 0x0001
	word16 ax_304 = 0x0001
	branch Mem309[ds_290:0x2A1F:word16] == 0x0000 l0800_7808
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_7808:
	ax_304 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:0x0001 Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:0x00 di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7806:
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:0x0001 Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:0x00 di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_780A:
	Mem316[ss:fp - 0x001E:word16] = ax_304
	selector ds_317 = fn0800_8465(ds_290, wArg00, wArg02)
	Mem324[ss:fp - 0x001C:word16] = 0x0001
	word16 ax_319 = 0x0001
	branch Mem324[ds_317:0x2E4F:word16] == 0x0000 l0800_781E
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:0x00 di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781E:
	ax_319 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:0x0001 Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:0x00 di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781C:
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:0x0001 Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:0x00 di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7820:
	Mem334[ss:fp - 0x001E:word16] = ax_319
	selector ds_335 = fn0800_8465(ds_317, wArg00, wArg02)
	branch Mem334[ds_335:0x2A23:word16] == 0x0001 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:0x00 di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_782E:
	branch Mem334[ds_335:0x2E4F:word16] == 0x0000 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7835:
	Mem597[ss:fp - 0x001C:word16] = 0x0010
	Mem600[ss:fp - 0x001E:word16] = Mem597[ds_335:0x2E4F:word16]
	ds_335 = fn0800_8465(ds_335, wArg00, wArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7843:
	word16 ax_341 = Mem334[ds_335:0x2A21:word16]
	branch ax_341 == 0x0001 l0800_7852
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7852:
	bp_350 = fn0800_7A02(ds_335, out ds_335)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_784B:
	branch ax_341 == 0x0002 l0800_7857
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7857:
	ds_335 = fn0800_7C78(fp - 0x0002, ds_335)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7850:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785A:
	word16 si_351 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7870:
	branch Mem334[ds_335:0x4E82:word16] != 0x0000 l0800_785E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785E:
	ax_341 = DPB(ax_341, Mem334[ds_335:si_351 + 0x4682:byte], 0) (alias)
	Mem579[ss:fp - 0x001C:word16] = ax_341
	word16 di_580
	si_351 = fn0800_8624(ds_335, bArg00, out di_580, out ds_335)
	Mem586[ds_335:0x4E82:word16] = Mem579[ds_335:0x4E82:word16] - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7877:
	Mem366[ds_335:0x2E4F:word16] = Mem334[ss:bp_350 - 0x0002:word16]
	word16 dx_369 = Mem366[ds_335:0x467E:word16] - Mem366[ds_335:0x2A03:word16]
	word16 ax_373 = Mem366[ds_335:0x4680:word16] - Mem366[ds_335:0x2A05:word16] - (dx_369 <u 0x0000)
	branch ax_373 >u Mem366[ds_335:0x4E8A:word16] l0800_78B3
// DataOut: ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7892:
	branch ax_373 <u Mem366[ds_335:0x4E8A:word16] l0800_789A
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7894:
	branch dx_369 >=u Mem366[ds_335:0x4E88:word16] l0800_78B3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78B3:
	Mem556[ds_335:0x4E8A:word16] = 0x0000
	Mem557[ds_335:0x4E88:word16] = 0x0000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_789A:
	dx_369 = Mem366[ds_335:0x467E:word16] - Mem366[ds_335:0x2A03:word16]
	word16 ax_563 = Mem366[ds_335:0x4680:word16] - Mem366[ds_335:0x2A05:word16] - (dx_369 <u 0x0000)
	word16 v34_564 = Mem366[ds_335:0x4E88:word16] - dx_369
	Mem565[ds_335:0x4E88:word16] = v34_564
	Mem569[ds_335:0x4E8A:word16] = Mem565[ds_335:0x4E8A:word16] - ax_563 - (v34_564 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78BF:
	branch Mem366[ds_335:0x2A21:word16] != 0x0002 l0800_78D0
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78C6:
	word16 v39_547 = Mem366[ds_335:0x4E88:word16] + 0x0002
	Mem548[ds_335:0x4E88:word16] = v39_547
	Mem552[ds_335:0x4E8A:word16] = Mem548[ds_335:0x4E8A:word16] + (v39_547 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78D0:
	Mem388[ss:fp - 0x001C:word16] = Mem366[ds_335:0x29E1:word16]
	Mem391[ss:fp - 0x001E:word16] = Mem388[ds_335:0x29DF:word16]
	byte dl_392
	word16 si_393
	word16 ax_396 = fn0800_AD2F(ds_335, ptrArg00, wArg02, out dl_392, out si_393) - Mem391[ds_335:0x465E:word16]
	Mem400[ds_335:0x2A05:word16] = dx_369 - Mem391[ds_335:0x4660:word16] - (ax_396 <u 0x0000)
	Mem401[ds_335:0x2A03:word16] = ax_396
	Mem404[ss:fp - 0x001C:word16] = 0x0000
	ui32 ax_dx_408 = SEQ(Mem404[ds_335:0x4660:word16], Mem404[ds_335:0x465E:word16] + 0x0008)
	Mem415[ss:fp - 0x001E:word16] = SLICE(ax_dx_408 + 0x00000008, word16, 16)
	Mem417[ss:fp - 0x0020:word16] = (word16) (ax_dx_408 + 0x00000008)
	Mem420[ss:fp - 0x0022:word16] = Mem417[ds_335:0x29E1:word16]
	Mem423[ss:fp - 0x0024:word16] = Mem420[ds_335:0x29DF:word16]
	word16 di_424
	selector ds_425
	fn0800_ACB3(bp_350, ds_335, wArg00, wArg02, wArg08, out di_424, out ds_425)
	Mem430[ss:fp - 0x001C:word16] = Mem423[ds_425:0x29E1:word16]
	Mem433[ss:fp - 0x001E:word16] = Mem430[ds_425:0x29DF:word16]
	ui32 ax_dx_437 = SEQ(Mem433[ds_425:0x2A05:word16], Mem433[ds_425:0x2A03:word16] - 0x0012)
	word16 ax_440 = SLICE(ax_dx_437 - 0x00000012, word16, 16)
	Mem444[ss:fp - 0x0020:word16] = ax_440
	Mem446[ss:fp - 0x0022:word16] = (word16) (ax_dx_437 - 0x00000012)
	word16 si_447
	selector ds_448
	fn0800_409C(bp_350, ds_425, wArg02, wArg04, wArg06, out si_447, out ds_448)
	Mem454[ss:fp - 0x001C:word16] = Mem446[ds_448:0x29E1:word16]
	Mem457[ss:fp - 0x001E:word16] = Mem454[ds_448:0x29DF:word16]
	Mem460[ss:fp - 0x0020:word16] = Mem457[ds_448:0x2E4B:word16]
	word16 si_461
	selector ds_462
	fn0800_401E(bp_350, ds_448, wArg00, wArg02, wArg04, out si_461, out ds_462)
	Mem468[ss:fp - 0x001C:word16] = Mem460[ds_462:0x29E1:word16]
	Mem471[ss:fp - 0x001E:word16] = Mem468[ds_462:0x29DF:word16]
	Mem474[ss:fp - 0x0020:word16] = Mem471[ds_462:0x2E49:word16]
	word16 si_475
	selector ds_476
	fn0800_401E(bp_350, ds_462, wArg00, wArg02, wArg04, out si_475, out ds_476)
	Mem482[ss:fp - 0x001C:word16] = Mem474[ds_476:0x29E1:word16]
	Mem485[ss:fp - 0x001E:word16] = Mem482[ds_476:0x29DF:word16]
	Mem489[ss:fp - 0x0020:word16] = DPB(ax_440, Mem485[ds_476:0x4E88:byte], 0)
	word16 di_492
	selector ds_493
	fn0800_4047(bp_350, ds_476, bArg00, ptrArg02, wArg04, out di_492, out ds_493)
	Mem499[ss:fp - 0x001C:word16] = Mem489[ds_493:0x29E1:word16]
	Mem502[ss:fp - 0x001E:word16] = Mem499[ds_493:0x29DF:word16]
	Mem506[ss:fp - 0x0020:word16] = DPB(ax_440, Mem502[ds_493:0x29F7:byte], 0)
	word16 di_507
	selector ds_508
	fn0800_4047(bp_350, ds_493, bArg00, ptrArg02, wArg04, out di_507, out ds_508)
	Mem513[ss:fp - 0x001C:word16] = 0x0000
	word16 dx_516 = Mem513[ds_508:0x465E:word16] + Mem513[ds_508:0x2A03:word16]
	Mem522[ss:fp - 0x001E:word16] = Mem513[ds_508:0x4660:word16] + Mem513[ds_508:0x2A05:word16] + (dx_516 <u 0x0000)
	Mem524[ss:fp - 0x0020:word16] = dx_516
	Mem527[ss:fp - 0x0022:word16] = Mem524[ds_508:0x29E1:word16]
	Mem530[ss:fp - 0x0024:word16] = Mem527[ds_508:0x29DF:word16]
	word16 di_531
	selector ds_532
	fn0800_ACB3(bp_350, ds_508, wArg00, wArg02, wArg08, out di_531, out ds_532)
	Mem539[ss:fp - 0x001C:word16] = 0x0000
	word16 ax_540 = Mem539[ds_532:0x4664:word16]
	word16 dx_542 = Mem539[ds_532:0x4662:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp

l0800_799A_thunk_fn0800_799E:
	return fn0800_799E(ax_540, dx_542, bp_350, ds_532)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp

l0800_7631:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_79FD_in_fn0800_75EA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_79FD_in_fn0800_75EA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_7628:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_79FD_in_fn0800_75EA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_79FD_in_fn0800_75EA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

fn0800_75EA_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -30(fp):0x000F -28(fp):0x0001 -26(fp):si -2(fp):bp



selector fn0800_799E(word16 ax, word16 dx, word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds dx ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_799E_entry:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_799E:
	word16 di_23
	selector ds_24
	fn0800_ACB3(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], wArg00, out di_23, out ds_24)
	Mem31[ss:fp:word16] = Mem0[ss:bp - 0x0014:word16]
	Mem34[ss:fp - 0x0002:word16] = Mem31[ss:bp - 0x0016:word16]
	selector ds_36
	fn0800_4346(ds_24, wArg00, wArg02, out ds_36)
	Mem42[ss:fp:word16] = Mem34[ss:bp - 0x0010:word16]
	Mem45[ss:fp - 0x0002:word16] = Mem42[ss:bp - 0x0012:word16]
	selector ds_46
	fn0800_4346(ds_36, wArg00, wArg02, out ds_46)
	Mem52[ss:fp:word16] = Mem45[ss:bp - 0x000C:word16]
	Mem55[ss:fp - 0x0002:word16] = Mem52[ss:bp - 0x000E:word16]
	selector ds_56
	fn0800_4346(ds_46, wArg00, wArg02, out ds_56)
	Mem62[ss:fp:word16] = Mem55[ss:bp - 0x0008:word16]
	Mem65[ss:fp - 0x0002:word16] = Mem62[ss:bp - 0x000A:word16]
	selector ds_66
	fn0800_4346(ds_56, wArg00, wArg02, out ds_66)
	Mem72[ss:fp:word16] = Mem65[ss:bp - 0x0004:word16]
	Mem75[ss:fp - 0x0002:word16] = Mem72[ss:bp - 0x0006:word16]
	selector ds_76
	fn0800_4346(ds_66, wArg00, wArg02, out ds_76)
	Mem81[ss:fp:word16] = ds_76
	Mem84[ss:fp - 0x0002:word16] = 0x223C
	word16 di_85
	fn0800_B2EF(ds_76, wArg00, wArg02, out di_85)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_79FD:
	return ds_76
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>

fn0800_799E_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> bp:<invalid> cx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid> 0(fp):<invalid>



word16 fn0800_7A02(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_7A02_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7A02:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7A16_thunk_fn0800_7C1A:
	selector ds_17
	return fn0800_7C1A(fp - 0x0002, ds, out ds_17)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7A02_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_7B02(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_7B02_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7B02:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7B17:
	word16 ax_25 = Mem0[ds:0x2E47:word16]
	Mem27[ds:0x2E47:word16] = Mem0[ds:0x2E47:word16] - 0x0001
	branch ax_25 != 0x0000 l0800_7B04
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 al:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid>

l0800_7B04:
	ds = fn0800_8359(ds)
	al = al ^ Mem27[ds:0x2E4F:byte]
	Mem38[ds:Mem27[ds:0x4E82:word16] + 0x4682:byte] = al
	Mem40[ds:0x4E82:word16] = Mem38[ds:0x4E82:word16] + 0x0001
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 al:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid>

l0800_7B22:
	selector ds_32
	return fn0800_7B3D(bp, ds, out ds_32)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 al:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid>

l0800_7B22_thunk_fn0800_7B3D:
	bp = fn0800_7B3D(bp, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40

l0800_7B00_thunk_fn0800_7B02:
	selector ds_15
	return fn0800_7B02(bp, ds, out ds_15)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_7B02_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> bp:<invalid> di:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40



word16 fn0800_7B3D(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_7B3D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7B3D:
	branch (Mem0[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7B52:
	Mem29[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7B3B_thunk_fn0800_7B3D:
	selector ds_31
	return fn0800_7B3D(bp, ds, out ds_31)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7B45:
	Mem26[ds:0x2E4F:word16] = Mem0[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7B56:
	word16 ax_17 = Mem0[ds:0x466A:word16]
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_7B56_thunk_fn0800_7B59:
	selector ds_19
	return fn0800_7B59(ax_17, bp, ds, out ds_19)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

fn0800_7B3D_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> cx:<invalid> bp:<invalid> di:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid>



word16 fn0800_7B59(word16 ax, word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_7B59_entry:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7B59:
	branch (ax | Mem0[ds:0x466C:word16]) == 0x0000 l0800_7B5D_thunk_fn0800_7BC0
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7B5D_thunk_fn0800_7BC0:
	selector ds_100
	return fn0800_7BC0(bp, ds, out ds_100)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_7B5F:
	word16 dx_30
	word16 si_31
	word16 di_32
	selector ds_33
	word16 ax_34 = fn0800_3E27(bp, ds, Mem0[ds:0x29DB:word16], Mem0[ds:0x29DD:word16], out dx_30, out si_31, out di_32, out ds_33)
	Mem37[ds_33:0x2E29:word16] = ax_34
	Mem40[ss:fp - 0x0002:word16] = Mem37[ds_33:0x29DD:word16]
	Mem44[ss:fp - 0x0004:word16] = Mem40[ds_33:0x29DB:word16]
	word16 dx_47
	word16 si_48
	word16 di_49
	selector ds_50
	word16 ax_51 = fn0800_3E27(bp, ds_33, wArg00, wArg02, out dx_47, out si_48, out di_49, out ds_50)
	Mem54[ds_50:0x2E2B:word16] = ax_51
	Mem56[ss:fp - 0x0002:word16] = ds_50
	Mem59[ss:fp - 0x0004:word16] = 0x284F
	Mem62[ss:fp - 0x0006:word16] = Mem59[ds_50:0x2E2B:word16]
	selector ds_64 = fn0800_8407(bp, ds_50, wArg00, ptrArg02)
	Mem68[ss:fp - 0x0002:word16] = ds_64
	Mem71[ss:fp - 0x0004:word16] = 0x278F
	Mem74[ss:fp - 0x0006:word16] = Mem71[ds_64:0x2E29:word16]
	selector ds_75 = fn0800_8407(bp, ds_64, wArg00, ptrArg02)
	Mem78[ds_75:0x2E29:word16] = Mem74[ds_75:0x2E29:word16] + 0x0002
	word16 v17_80 = Mem78[ds_75:0x467A:word16] + Mem78[ds_75:0x2E29:word16]
	Mem81[ds_75:0x467A:word16] = v17_80
	Mem85[ds_75:0x467C:word16] = Mem81[ds_75:0x467C:word16] + (v17_80 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_7BB5:
	word16 ax_88 = Mem85[ds_75:0x2E29:word16]
	Mem90[ds_75:0x2E29:word16] = Mem85[ds_75:0x2E29:word16] - 0x0001
	branch ax_88 != 0x0000 l0800_7BB2
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7BB2:
	ds_75 = fn0800_8359(ds_75)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7BBE_thunk_fn0800_7BC0:
	selector ds_95
	word16 bp_96 = fn0800_7BC0(bp, ds_75, out ds_95)
	return bp_96
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7BBE_thunk_fn0800_7BC0:
	selector ds_97
	return fn0800_7BC0(bp_96, ds_95, out ds_97)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> dx:<invalid> es:<invalid> si:<invalid> al:<invalid> cx:<invalid> bp:<invalid> di:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_7B59_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> cx:<invalid> bp:<invalid> di:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_7BC0(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_7BC0_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7BC0:
	word16 ax_4 = Mem0[ds:0x466A:word16]
	word16 dx_5 = Mem0[ds:0x466C:word16]
	word16 v6_6 = Mem0[ds:0x466A:word16] - 0x0001
	Mem7[ds:0x466A:word16] = v6_6
	Mem11[ds:0x466C:word16] = Mem7[ds:0x466C:word16] - (v6_6 <u 0x0000)
	word16 ax_12 = ax_4 | dx_5
	branch ax_12 == 0x0000 l0800_7BD8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7BD8:
	branch Mem11[ds:0x2E45:word16] != 0x0000 l0800_7BFC
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7BDF:
	word16 si_132 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7BF5:
	branch Mem11[ds:0x4E82:word16] != 0x0000 l0800_7BE3
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> dl:<invalid> bp:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7BE3:
	ax_12 = DPB(ax_12, Mem11[ds:si_132 + 0x4682:byte], 0) (alias)
	Mem151[ss:fp - 0x0002:word16] = ax_12
	word16 di_152
	si_132 = fn0800_8624(ds, bArg00, out di_152, out ds)
	Mem158[ds:0x4E82:word16] = Mem151[ds:0x4E82:word16] - 0x0001
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> dl:<invalid> bp:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7BFC:
	word16 v25_110 = Mem11[ds:0x29F7:word16] + 0x0001
	Mem111[ds:0x29F7:word16] = v25_110
	Mem115[ds:0x29F9:word16] = Mem111[ds:0x29F9:word16] + (v25_110 <u 0x0000)
	Mem119[ss:fp - 0x0002:word16] = Mem115[ds:0x29E5:word16]
	Mem122[ss:fp - 0x0004:word16] = Mem119[ds:0x29E3:word16]
	byte dl_125
	word16 si_126
	word16 ax_127 = fn0800_AD2F(ds, ptrArg00, wArg02, out dl_125, out si_126)
	Mem130[ss:bp - 0x0002:word16] = dx_5
	Mem131[ss:bp - 0x0004:word16] = ax_127
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> dl:<invalid> bp:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7C17_thunk_fn0800_7C1A:
	bp = fn0800_7C1A(bp, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 bp:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7BD5:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_7ACB:
	word16 dx_23
	word16 si_24
	word16 di_25
	selector ds_26
	word16 ax_27 = fn0800_3E27(bp, ds, Mem11[ds:0x29DB:word16], Mem11[ds:0x29DD:word16], out dx_23, out si_24, out di_25, out ds_26)
	Mem29[ds_26:0x2E47:word16] = ax_27
	word16 v15_30 = Mem29[ds_26:0x467A:word16] + ax_27
	Mem31[ds_26:0x467A:word16] = v15_30
	Mem35[ds_26:0x467C:word16] = Mem31[ds_26:0x467C:word16] + (v15_30 <u 0x0000)
	Mem38[ss:fp - 0x0002:word16] = ds_26
	Mem42[ss:fp - 0x0004:word16] = 0x290F
	Mem45[ss:fp - 0x0006:word16] = Mem42[ds_26:0x2E47:word16]
	selector ds_48 = fn0800_8407(bp, ds_26, wArg00, ptrArg02)
	branch Mem45[ds_48:0x2E47:word16] == 0x0000 l0800_7B56
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: Local -0002(16)

l0800_7AF9_thunk_fn0800_7B3D:
	selector ds_97
	return fn0800_7B3D(bp, ds_48, out ds_97)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7AFB:
	branch Mem45[ds_48:0x2E45:word16] == 0x0000 l0800_7B32
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7B32:
	word16 ax_75 = Mem45[ds_48:0x2E47:word16]
	Mem77[ds_48:0x2E47:word16] = Mem45[ds_48:0x2E47:word16] - 0x0001
	branch ax_75 != 0x0000 l0800_7B24
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7B24:
	selector ds_84 = fn0800_8359(ds_48)
	al = al ^ Mem77[ds_84:0x2E4F:byte]
	Mem90[ss:fp - 0x0002:word16] = DPB(ax_75, al, 0)
	word16 di_92
	fn0800_8624(ds_84, bArg00, out di_92, out ds_48)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7B3B_thunk_fn0800_7B3D:
	selector ds_82
	return fn0800_7B3D(bp, ds_48, out ds_82)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7B00_thunk_fn0800_7B02:
	selector ds_67
	return fn0800_7B02(bp, ds_48, out ds_67)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_7BC0_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> bp:<invalid> di:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_7C1A(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_7C1A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7C1A:
	sp = fp
	ax = Mem0[ds:0x467C:word16]
	dx = Mem0[ds:0x467A:word16]
	SCZO = cond(ax - Mem0[ds:0x4680:word16])
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	CZ = SCZO (alias)
	branch Test(UGE,C) l0800_7C2A
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7C2A:
	branch Test(NE,Z) l0800_7C35
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7C2C:
	SCZO = cond(dx - Mem0[ds:0x467E:word16])
	C = SCZO (alias)
	branch Test(UGE,C) l0800_7C35
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7C35:
	cl = 0x10
	cl = 0x10 - Mem0[ds:0x2E45:byte]
	v20 = Mem0[ds:0x2E43:word16] >>u cl
	Mem0[ds:0x2E43:word16] = v20
	SCZO = cond(Mem0[ds:0x2E45:word16] - 0x0000)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_7C4D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7C46:
	SCZO = cond(Mem0[ds:0x4E82:word16] - 0x0000)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_7C57
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cl:<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l0800_7C4D:
	al = Mem0[ds:0x2E43:byte]
	ax = DPB(ax, al, 0) (alias)
	sp = fp - 0x0002
	wLoc02 = ax
	bLoc02 = (byte) wLoc02 (alias)
	si = fn0800_8624(ds, bLoc02, out di, out ds)
	sp = sp + 0x0002
	SCZO = cond(sp)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cl:<invalid>
// LocalsOut: Local -0002(16)

l0800_7C57:
	SCZO = cond(Mem0[ds:0x2E45:word16] - 0x0008)
	CZ = SCZO (alias)
	branch Test(UGT,CZ) l0800_7C65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7C5E:
	SCZO = cond(Mem0[ds:0x4E82:word16] - 0x0000)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_7C73
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_7C65:
	ax = Mem0[ds:0x2E43:word16]
	cl = 0x08
	ax = ax >>u 0x08
	SCZO = cond(ax)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	si = fn0800_8624(ds, bArg00, out di, out ds)
	sp = sp + 0x0002
	SCZO = cond(sp)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>

l0800_7C73:
	si = Mem0[ss:sp:word16]
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -2(fp):<invalid>

l0800_7C32:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_7C27:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_7A19:
	ax = 0x0010
	sp = fp - 0x0002
	wLoc02 = 0x0010
	sp = fp - 0x0004
	wLoc04 = ds
	ax = 0x284F
	sp = fp - 0x0006
	wLoc06 = 0x284F
	fn0800_43D4(wLoc06, wLoc04, wLoc02)
	sp = fp
	SCZO = cond(fp)
	ax = 0x0010
	sp = fp - 0x0002
	wLoc02 = 0x0010
	sp = fp - 0x0004
	wLoc04 = ds
	ax = 0x278F
	sp = fp - 0x0006
	wLoc06 = 0x278F
	fn0800_43D4(wLoc06, wLoc04, wLoc02)
	sp = fp
	SCZO = cond(fp)
	ax = 0x0010
	sp = fp - 0x0002
	wLoc02 = 0x0010
	sp = fp - 0x0004
	wLoc04 = ds
	ax = 0x290F
	sp = fp - 0x0006
	wLoc06 = 0x290F
	fn0800_43D4(wLoc06, wLoc04, wLoc02)
	sp = fp
	SCZO = cond(fp)
	bp = fn0800_7FDC(bp, ds, out ds)
	sp = sp + 0xFFFE
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0000
	v12 = Mem0[ss:bp - 0x0002:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v12
	v13 = Mem0[ss:bp - 0x0004:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v13
	v14 = Mem0[ds:0x29E5:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v14
	v15 = Mem0[ds:0x29E3:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v15
	ax = fn0800_ACB3(bp, ds, wArg00, wArg02, wArg08, out di, out ds)
	sp = sp + 0x000A
	SCZO = cond(sp)
	ax = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x290F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x290F
	bp = fn0800_441C(si, di, ds, wArg00, wArg04, out si, out di)
	sp = sp + 0x0002
	sp = sp + 0x0006
	SCZO = cond(sp)
	ax = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x284F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x284F
	bp = fn0800_441C(si, di, ds, wArg00, wArg04, out si, out di)
	sp = sp + 0x0002
	sp = sp + 0x0006
	SCZO = cond(sp)
	ax = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x278F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x278F
	bp = fn0800_441C(si, di, ds, wArg00, wArg04, out si, out di)
	sp = sp + 0x0002
	sp = sp + 0x0006
	SCZO = cond(sp)
	ax = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x290F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x290F
	ds = fn0800_83A1(bp, ds, ptrArg00, wArg04)
	sp = sp + 0x0006
	SCZO = cond(sp)
	ax = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x284F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x284F
	ds = fn0800_83A1(bp, ds, ptrArg00, wArg04)
	sp = sp + 0x0006
	SCZO = cond(sp)
	ax = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x278F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x278F
	ds = fn0800_83A1(bp, ds, ptrArg00, wArg04)
	sp = sp + 0x0006
	SCZO = cond(sp)
	ax = 0x0010
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0010
	v16 = Mem0[ds:0x466A:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v16
	ds = fn0800_8489(bp, ds, wArg00)
	sp = sp + 0x0004
	SCZO = cond(sp)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>

l0800_7AC5_thunk_fn0800_7BC0:
	bp = fn0800_7BC0(bp, ds, out ds)
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x290F -6(fp):<invalid> -4(fp):<invalid> -2(fp):0x0010

fn0800_7C1A_exit:
	use ds (=> dsOut)
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x290F -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_7C78(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7C78_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7C78:
	word16 bp_123 = fp - 0x0002
	word16 sp_29 = fp - 0x0008
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7E6D:
	word16 ax_31 = Mem0[ds:0x467C:word16]
	word16 dx_32 = Mem0[ds:0x467A:word16]
	branch ax_31 >=u Mem0[ds:0x4680:word16] l0800_7E7D
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7D:
	branch ax_31 != Mem0[ds:0x4680:word16] l0800_7E88
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7F:
	branch dx_32 >=u Mem0[ds:0x467E:word16] l0800_7E88
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E88:
	Mem432[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] << 0x08 - Mem0[ds:0x2E45:byte]
	branch Mem432[ds:0x2E45:word16] != 0x0000 l0800_7EA0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E99:
	branch Mem432[ds:0x4E82:word16] == 0x0000 l0800_7EAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EA0:
	Mem450[ss:sp_29 - 0x0002:word16] = DPB(ax_31, Mem432[ds:0x2E43:byte], 0)
	word16 di_451
	fn0800_8624(ds, bArg00, out di_451, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7EAA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> si:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7C78_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7E85:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7A:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C8F:
	selector ds_39
	bp_123 = fn0800_7FDC(bp_123, ds, out ds_39)
	word16 sp_41 = sp_29 + 0xFFFE
	Mem46[ss:sp_41 - 0x0002:word16] = 0x0000
	Mem50[ss:sp_41 - 0x0004:word16] = Mem46[ss:bp_123 - 0x0002:word16]
	Mem53[ss:sp_41 - 0x0006:word16] = Mem50[ss:bp_123 - 0x0004:word16]
	Mem56[ss:sp_41 - 0x0008:word16] = Mem53[ds_39:0x29E5:word16]
	Mem59[ss:sp_41 - 0x000A:word16] = Mem56[ds_39:0x29E3:word16]
	word16 di_63
	selector ds_122
	fn0800_ACB3(bp_123, ds_39, wArg00, wArg02, wArg08, out di_63, out ds_122)
	word16 sp_125 = sp_41
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DCD:
	word16 ax_77 = Mem59[ds_122:0x466A:word16]
	word16 dx_78 = Mem59[ds_122:0x466C:word16]
	word16 v17_79 = Mem59[ds_122:0x466A:word16] - 0x0001
	Mem80[ds_122:0x466A:word16] = v17_79
	Mem84[ds_122:0x466C:word16] = Mem80[ds_122:0x466C:word16] - (v17_79 <u 0x0000)
	branch (ax_77 | dx_78) == 0x0000 l0800_7DE5
	word16 ax_88 = Mem84[ds_122:0x466A:word16]
	word16 dx_89 = Mem84[ds_122:0x466C:word16]
	word16 v46_90 = Mem84[ds_122:0x466A:word16] - 0x0001
	Mem91[ds_122:0x466A:word16] = v46_90
	Mem95[ds_122:0x466C:word16] = Mem91[ds_122:0x466C:word16] - (v46_90 <u 0x0000)
	branch (ax_88 | dx_89) == 0x0000 l0800_7DE5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> di:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE5:
	word16 ax_325
	word16 sp_300 = sp_125 - 0x0002
	Mem301[ss:sp_300:word16] = 0x0004
	Mem304[ss:sp_300 - 0x0002:word16] = 0x000F
	selector ds_305 = fn0800_854B(bp_123, ds_122, bArg02)
	Mem311[ss:sp_300:word16] = 0x0000
	word16 di_312
	selector ds_313
	fn0800_8600(ds_305, bArg00, out di_312, out ds_313)
	word16 ax_316 = Mem311[ds_313:0x467C:word16]
	word16 dx_317 = Mem311[ds_313:0x467A:word16]
	branch ax_316 >u Mem311[ds_313:0x4680:word16] l0800_7E1E
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> di:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E09:
	branch ax_316 <u Mem311[ds_313:0x4680:word16] l0800_7E11
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E0B:
	branch dx_317 >=u Mem311[ds_313:0x467E:word16] l0800_7E1E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E1E:
	Mem408[ss:sp_300:word16] = 0x0001
	Mem413[ss:sp_300 - 0x0002:word16] = 0x0000
	ax_325 = 0x0000
	ds = fn0800_854B(bp_123, ds_313, bArg02)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E11:
	Mem420[ss:sp_300:word16] = 0x0001
	Mem422[ss:sp_300 - 0x0002:word16] = 0x0001
	ax_325 = 0x0001
	ds = fn0800_854B(bp_123, ds_313, bArg02)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E2B:
	branch Mem311[ds:0x2E45:word16] != 0x0000 l0800_7E4F
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E32:
	word16 si_378 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E48:
	branch Mem311[ds:0x4E82:word16] != 0x0000 l0800_7E36
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E36:
	ax_325 = DPB(ax_325, Mem311[ds:si_378 + 0x4682:byte], 0) (alias)
	Mem397[ss:sp_125 - 0x0002:word16] = ax_325
	word16 di_398
	si_378 = fn0800_8624(ds, bArg00, out di_398, out ds)
	Mem404[ds:0x4E82:word16] = Mem397[ds:0x4E82:word16] - 0x0001
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E4F:
	word16 v31_338 = Mem311[ds:0x29F7:word16] + 0x0001
	Mem339[ds:0x29F7:word16] = v31_338
	Mem343[ds:0x29F9:word16] = Mem339[ds:0x29F9:word16] + (v31_338 <u 0x0000)
	word16 sp_346 = sp_125 - 0x0002
	Mem347[ss:sp_346:word16] = Mem343[ds:0x29E5:word16]
	Mem350[ss:sp_346 - 0x0002:word16] = Mem347[ds:0x29E3:word16]
	byte dl_352
	word16 si_353
	word16 ax_354 = fn0800_AD2F(ds, ptrArg00, wArg02, out dl_352, out si_353)
	Mem356[ss:bp_123 - 0x0002:word16] = dx_317
	Mem357[ss:bp_123 - 0x0004:word16] = ax_354
	word16 v35_358 = Mem357[ds:0x29F7:word16] + 0x0001
	Mem359[ds:0x29F7:word16] = v35_358
	Mem363[ds:0x29F9:word16] = Mem359[ds:0x29F9:word16] + (v35_358 <u 0x0000)
	Mem367[ss:sp_346:word16] = Mem363[ds:0x29E5:word16]
	Mem370[ss:sp_346 - 0x0002:word16] = Mem367[ds:0x29E3:word16]
	byte dl_371
	word16 si_372
	word16 ax_373 = fn0800_AD2F(ds, ptrArg00, wArg02, out dl_371, out si_372)
	Mem376[ss:bp_123 - 0x0002:word16] = dx_317
	Mem377[ss:bp_123 - 0x0004:word16] = ax_373
	sp_29 = sp_346 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> si:<invalid> es:<invalid> di:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> di:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CAC:
	word16 sp_101 = sp_125 - 0x0002
	Mem102[ss:sp_101:word16] = Mem95[ds_122:0x29DD:word16]
	Mem105[ss:sp_101 - 0x0002:word16] = Mem102[ds_122:0x29DB:word16]
	word16 dx_106
	word16 si_107
	word16 di_108
	selector ds_109
	word16 ax_110 = fn0800_3E27(bp_123, ds_122, wArg00, wArg02, out dx_106, out si_107, out di_108, out ds_109)
	Mem112[ds_109:0x2E47:word16] = ax_110
	word16 v25_113 = Mem112[ds_109:0x467A:word16] + ax_110
	Mem114[ds_109:0x467A:word16] = v25_113
	Mem118[ds_109:0x467C:word16] = Mem114[ds_109:0x467C:word16] + (v25_113 <u 0x0000)
	Mem121[ss:sp_101:word16] = ax_110
	bp_123 = fn0800_7EAF(si_107, di_108, ds_109, wArg00, out ds_122)
	sp_125 = sp_101
	branch (Mem121[ds_122:0x466A:word16] | Mem121[ds_122:0x466C:word16]) != 0x0000 l0800_7CD9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> di:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD9:
	Mem133[ss:sp_101 - 0x0002:word16] = Mem121[ds_122:0x29DD:word16]
	Mem136[ss:sp_101 - 0x0004:word16] = Mem133[ds_122:0x29DB:word16]
	word16 dx_137
	word16 si_138
	word16 di_139
	selector ds_140
	word16 ax_141 = fn0800_3E27(bp_123, ds_122, wArg00, wArg02, out dx_137, out si_138, out di_139, out ds_140)
	Mem144[ds_140:0x2E29:word16] = ax_141
	Mem147[ss:sp_101 - 0x0002:word16] = Mem144[ds_140:0x29DD:word16]
	Mem150[ss:sp_101 - 0x0004:word16] = Mem147[ds_140:0x29DB:word16]
	word16 dx_151
	word16 si_152
	word16 di_153
	selector ds_154
	word16 ax_155 = fn0800_3E27(bp_123, ds_140, wArg00, wArg02, out dx_151, out si_152, out di_153, out ds_154)
	Mem157[ds_154:0x2E2B:word16] = ax_155
	branch Mem157[ds_154:0x2E29:word16] != 0x0000 l0800_7D1D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D1D:
	branch Mem157[ds_154:0x2E29:word16] >=u 0x0007 l0800_7D68
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D68:
	Mem254[ss:sp_101 - 0x0002:word16] = 0x0004
	Mem257[ss:sp_101 - 0x0004:word16] = 0x000F
	selector ds_258 = fn0800_854B(bp_123, ds_154, bArg02)
	word16 ax_262 = DPB(0x000F, Mem257[ds_258:0x2E29:byte] - 0x06, 0)
	Mem265[ss:sp_101 - 0x0002:word16] = ax_262
	word16 di_266
	selector ds_267
	fn0800_8600(ds_258, bArg00, out di_266, out ds_267)
	Mem279[ss:sp_101 - 0x0002:word16] = DPB(ax_262, 0x00, 8)
	word16 ax_282 = DPB(ax_262, 0x00, 8)
	Mem284[ss:sp_101 - 0x0004:word16] = ax_282
	selector ds_285 = fn0800_854B(bp_123, ds_267, bArg02)
	Mem293[ss:sp_101 - 0x0002:word16] = DPB(ax_282, Mem284[ds_285:0x2E2B:byte] & 0xFF, 0)
	word16 di_294
	fn0800_8600(ds_285, bArg00, out di_294, out ds_122)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D24:
	Mem215[ss:sp_101 - 0x0002:word16] = DPB(ax_155, 0x00, 8)
	Mem220[ss:sp_101 - 0x0004:word16] = DPB(ax_155, 0x00, 8)
	selector ds_221 = fn0800_854B(bp_123, ds_154, bArg02)
	Mem232[ss:sp_101 - 0x0002:word16] = DPB(ax_155, 0x00, 8)
	word16 ax_235 = DPB(ax_155, 0x00, 8)
	Mem237[ss:sp_101 - 0x0004:word16] = ax_235
	selector ds_238 = fn0800_854B(bp_123, ds_221, bArg02)
	Mem246[ss:sp_101 - 0x0002:word16] = DPB(ax_235, Mem237[ds_238:0x2E2B:byte] & 0xFF, 0)
	word16 di_247
	fn0800_8600(ds_238, bArg00, out di_247, out ds_122)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D02:
	Mem190[ss:sp_101 - 0x0002:word16] = 0x0003
	Mem193[ss:sp_101 - 0x0004:word16] = 0x0006
	selector ds_195 = fn0800_854B(bp_123, ds_154, bArg02)
	Mem201[ss:sp_101 - 0x0002:word16] = DPB(0x0006, Mem193[ds_195:0x2E2B:byte], 0)
	word16 di_203
	fn0800_8600(ds_195, bArg00, out di_203, out ds_122)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DAC:
	Mem170[ds_122:0x2E29:word16] = Mem157[ds_122:0x2E29:word16] + 0x0002
	word16 v40_172 = Mem170[ds_122:0x467A:word16] + Mem170[ds_122:0x2E29:word16]
	Mem173[ds_122:0x467A:word16] = v40_172
	Mem177[ds_122:0x467C:word16] = Mem173[ds_122:0x467C:word16] + (v40_172 <u 0x0000)
	sp_125 = sp_101
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DC2:
	word16 ax_180 = Mem177[ds_122:0x2E29:word16]
	Mem182[ds_122:0x2E29:word16] = Mem177[ds_122:0x2E29:word16] - 0x0001
	branch ax_180 != 0x0000 l0800_7DBF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DBF:
	ds_122 = fn0800_8359(ds_122)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_7EAF(word16 si, word16 di, selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16)
fn0800_7EAF_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_7EAF:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0004(16) Local -0006(16)

l0800_7EB7_thunk_fn0800_7FD1:
	selector ds_16
	return fn0800_7FD1(fp - 0x0002, wArg02, ds, wLoc08, di, si, out ds_16)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 si:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_7EAF_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_7EF6(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si
fn0800_7EF6_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7EF6:
// DataOut: bp ds si ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7EF6_thunk_fn0800_7EF8:
	selector ds_8
	return fn0800_7EF8(bp, si, ds, out ds_8)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_7EF6_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_7EF8(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_7EF8_entry:
// DataOut: bp ds si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_7EF8:
	branch Z l0800_7EC1
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_7EC1:
	selector ds_49 = fn0800_8359(fn0800_854B(bp, ds, 0x01))
	Mem56[ss:fp - 0x0002:word16] = (word16) (Mem0[ds_49:0x2E4F:byte] ^ 0x00)
	word16 di_59
	selector ds_60
	word16 si_61 = fn0800_8600(ds_49, bArg00, out di_59, out ds_60)
	branch (Mem56[ds_60:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7EF1
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7EF1:
	Mem80[ds_60:0x2E4F:word16] = Mem56[ds_60:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):0x0000 -2(fp):<invalid>

l0800_7EE4:
	Mem78[ds_60:0x2E4F:word16] = Mem56[ds_60:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):0x0000 -2(fp):<invalid>

l0800_7EF5:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):0x0000 -2(fp):<invalid>

l0800_7EF5_thunk_fn0800_7EF6:
	selector ds_71
	return fn0800_7EF6(bp, si_61 - 0x0001, ds_60, out ds_71)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> al:<invalid> si:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):0x0000 -2(fp):<invalid>

l0800_7EFA:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7EFA_thunk_fn0800_7FD1:
	selector ds_34
	return fn0800_7FD1(bp, si, ds, wLoc02, wArg00, wArg02, out ds_34)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7EFA_thunk_fn0800_7FD1:
	selector ds_24
	return fn0800_7FD1(bp, si, ds, wLoc02, wArg00, wArg02, out ds_24)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_7EF8_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -4(fp):0x0000 -2(fp):<invalid>



word16 fn0800_7F8D(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_7F8D_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7F8D:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_7F8D_thunk_fn0800_7FD1:
	selector ds_8
	return fn0800_7FD1(bp, si, ds, wLoc02, wArg00, wArg02, out ds_8)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_7F8D_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid>



word16 fn0800_7FD1(word16 bp, word16 si, selector ds, word16 wArg00, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0004(16)
fn0800_7FD1_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_7FD1:
	sp = fp
	si = si | si
	SZO = cond(si)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_7FD8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7FD8:
	di = wArg00
	sp = fp + 0x0002
	si = wArg02
	sp = fp + 0x0004
	bp = wArg04
	sp = fp + 0x0006
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7FD5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7EBA:
	SCZO = cond(si - 0x000C)
	C = SCZO (alias)
	branch Test(UGE,C) l0800_7F32
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7F32:
	SZO = cond(si & 0x0003)
	Z = SZO (alias)
	C = false
	branch Test(NE,Z) l0800_7EFD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7EFD:
	ax = 0x0001
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0001
	ax = 0x0000
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0000
	ds = fn0800_854B(bp, ds, bArg02)
	sp = sp + 0x0004
	SCZO = cond(sp)
	ds = fn0800_8359(ds)
	al = al ^ Mem0[ds:0x2E4F:byte]
	ax = DPB(ax, al, 0) (alias)
	SZO = cond(al)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	si = fn0800_8600(ds, bArg00, out di, out ds)
	sp = sp + 0x0002
	SZO = cond(Mem0[ds:0x2E4F:word16] & 0x0001)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_7F2D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7F2D:
	v16 = Mem0[ds:0x2E4F:word16] >>u 0x0001
	Mem0[ds:0x2E4F:word16] = v16
	SCZO = cond(v16)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7F20:
	ax = Mem0[ds:0x2E4F:word16]
	ax = ax >>u 0x0001
	ax = ax | 0x8000
	SZO = cond(ax)
	C = false
	Mem0[ds:0x2E4F:word16] = ax
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7F31:
	si = si - 0x0001
	SZO = cond(si)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7F38:
	ax = 0x0005
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0005
	ax = 0x0017
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0017
	ds = fn0800_854B(bp, ds, bArg02)
	sp = sp + 0x0004
	SCZO = cond(si - 0x0048)
	C = SCZO (alias)
	branch Test(ULT,C) l0800_7F8F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7F8F:
	ax = 0x0004
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0004
	ax = si
	ax = ax - 0x000C
	ax = ax >>u 0x0001
	ax = ax >>u 0x0001
	SCZO = cond(ax)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ds = fn0800_854B(bp, ds, bArg02)
	sp = sp + 0x0004
	SCZO = cond(sp)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7FB4:
	si = si | si
	SZO = cond(si)
	Z = SZO (alias)
	C = false
	branch Test(NE,Z) l0800_7FA5
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7FA5:
	ds = fn0800_8359(ds)
	al = al ^ Mem0[ds:0x2E4F:byte]
	ax = DPB(ax, al, 0) (alias)
	SZO = cond(al)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	si = fn0800_8600(ds, bArg00, out di, out ds)
	sp = sp + 0x0002
	SCZO = cond(sp)
	si = si - 0x0001
	SZO = cond(si)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7FB8:
	SZO = cond(Mem0[ds:0x2E4F:word16] & 0x0001)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_7FCD
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7FCD:
	v15 = Mem0[ds:0x2E4F:word16] >>u 0x0001
	Mem0[ds:0x2E4F:word16] = v15
	SCZO = cond(v15)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7FC0:
	ax = Mem0[ds:0x2E4F:word16]
	ax = ax >>u 0x0001
	ax = ax | 0x8000
	SZO = cond(ax)
	C = false
	Mem0[ds:0x2E4F:word16] = ax
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Stack +0004(16)

l0800_7F4B:
	ax = 0x0004
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0004
	ax = 0x000F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x000F
	ds = fn0800_854B(bp, ds, bArg02)
	sp = sp + 0x0004
	di = 0x0000
	SZO = cond(0x0000)
	C = false
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7F6C:
	SCZO = cond(di - 0x0048)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_7F5D
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7F5D:
	ds = fn0800_8359(ds)
	al = al ^ Mem0[ds:0x2E4F:byte]
	ax = DPB(ax, al, 0) (alias)
	SZO = cond(al)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	si = fn0800_8600(ds, bArg00, out di, out ds)
	sp = sp + 0x0002
	SCZO = cond(sp)
	di = di + 0x0001
	SZO = cond(di)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7F71:
	SZO = cond(Mem0[ds:0x2E4F:word16] & 0x0001)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_7F86
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7F86:
	v14 = Mem0[ds:0x2E4F:word16] >>u 0x0001
	Mem0[ds:0x2E4F:word16] = v14
	SCZO = cond(v14)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7F79:
	ax = Mem0[ds:0x2E4F:word16]
	ax = ax >>u 0x0001
	ax = ax | 0x8000
	SZO = cond(ax)
	C = false
	Mem0[ds:0x2E4F:word16] = ax
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7F8A:
	si = si - 0x0048
	SCZO = cond(si)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7F8A_thunk_fn0800_7F8D:
	bp = fn0800_7F8D(bp, si, ds, out ds)
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7EBF:
	bp = fn0800_7EF6(bp, si, ds, out ds)
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_7FD1_exit:
	use ds (=> dsOut)
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7EF6:
// DataOut: bp ds si ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_7EF6_thunk_fn0800_7EF8:
	selector ds_8
	return fn0800_7EF8(bp, si, ds, out ds_8)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_7EF6_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> di:<invalid> bp:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_7FDC(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_7FDC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7FDC:
	Mem7[ds:0x466C:word16] = 0x0000
	Mem9[ds:0x466A:word16] = 0x0000
	Mem10[ds:0x2E47:word16] = 0x0000
	word16 dx_12 = Mem10[ds:0x2A0B:word16]
	Mem13[ds:0x4670:word16] = Mem10[ds:0x2A0D:word16]
	Mem14[ds:0x466E:word16] = dx_12
	word16 di_39
	selector ds_40
	fn0800_ACB3(fp - 0x0002, ds, Mem14[ds:0x29E3:word16], Mem14[ds:0x29E5:word16], 0x0000, out di_39, out ds_40)
	Mem47[ss:fp - 0x0008:word16] = 0x0000
	Mem50[ss:fp - 0x000A:word16] = 0x0000
	Mem52[ss:fp - 0x000C:word16] = 0x0000
	Mem55[ss:fp - 0x000E:word16] = Mem52[ds_40:0x29DD:word16]
	Mem58[ss:fp - 0x0010:word16] = Mem55[ds_40:0x29DB:word16]
	word16 di_62
	selector ds_63
	fn0800_ACB3(fp - 0x0002, ds_40, wArg00, wArg02, wArg08, out di_62, out ds_63)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_803F_thunk_fn0800_82A1:
	selector ds_67
	return fn0800_82A1(fp - 0x0002, ds_63, out ds_67)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

fn0800_7FDC_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> di:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_8197(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8197_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8197:
	fn0800_89A8(ds, wArg00)
	Mem8[ds:0x2E47:word16] = Mem0[ds:0x2E47:word16] + 0x0001
	Mem10[ds:0x465C:word16] = Mem8[ds:0x465C:word16] + 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_81A1_thunk_fn0800_81A5:
	selector ds_15
	return fn0800_81A5(bp, si, di, ds, out ds_15)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 dx:<invalid> es:<invalid> ax:<invalid> di:<invalid> bx:<invalid> al:<invalid> cx:<invalid>

fn0800_8197_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid>



word16 fn0800_81A5(word16 bp, word16 si, word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_81A5_entry:
	*dsOut = ds
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_81A5:
	branch Mem0[ds:0x465C:word16] <u 0x0400 l0800_81E9
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_81AB_thunk_fn0800_81E9:
	bp = fn0800_81E9(bp, di, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_81AD:
	word16 v7_7 = Mem0[ds:0x4666:word16] + Mem0[ds:0x465C:word16]
	Mem8[ds:0x4666:word16] = v7_7
	Mem12[ds:0x4668:word16] = Mem8[ds:0x4668:word16] + (v7_7 <u 0x0000)
	word16 dx_25
	fn0800_8F18(0x0063, Mem12[ds:0x4668:word16], 0x0000, Mem12[ds:0x4666:word16], out dx_25)
	word16 dx_35
	word16 bp_36
	word16 si_37
	word16 di_38
	word16 ax_39 = fn0800_8BC2(bp, si, di, wLoc0A, out dx_35, out bp_36, out si_37, out di_38)
	Mem42[ss:fp - 0x0002:word16] = dx_35
	Mem45[ss:fp - 0x0004:word16] = ax_39
	Mem47[ss:fp - 0x0006:word16] = ds
	Mem50[ss:fp - 0x0008:word16] = 0x2244
	word16 di_53
	word16 si_54 = fn0800_B2EF(ds, wArg00, wArg02, out di_53)
	Mem57[ds:0x465C:word16] = 0x0000
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_81E3_thunk_fn0800_81E9:
	selector ds_63
	return fn0800_81E9(bp_36, di_53, ds, out ds_63)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8196_thunk_fn0800_8197:
	selector ds_61
	return fn0800_8197(bp_36, si_54, ds, out ds_61)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_81A5_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_81E9(word16 bp, word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_81E9_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_81E9:
	sp = fp
	ax = Mem0[ds:0x2E65:word16]
	ax = ax - 0x0001
	SCZO = cond(ax - Mem0[ds:0x2E6D:word16])
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_8209
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_81F3:
	SCZO = cond(Mem0[ds:0x466C:word16] - 0x0000)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	CZ = SCZO (alias)
	C = SCZO (alias)
	branch Test(UGE,C) l0800_81FD
// DataOut: bp di ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_81FD:
	branch Test(NE,Z) l0800_8209
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_81FF:
	SCZO = cond(Mem0[ds:0x466A:word16] - 0xFFFE)
	C = SCZO (alias)
	branch Test(UGE,C) l0800_8209
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8206:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_81FA:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_810D:
	fn0800_8832(di, ds)
	sp = sp + 0xFFFE
	SCZO = cond(Mem0[ds:0x2E29:word16] - 0x0002)
	C = SCZO (alias)
	branch Test(ULT,C) l0800_8193
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8193:
	ax = 0x0001
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8117:
	ax = Mem0[ds:0x2E6D:word16]
	ax = ax + Mem0[ds:0x2E29:word16]
	SCZO = cond(ax - Mem0[ds:0x2E65:word16])
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_813F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8124:
	ax = Mem0[ds:0x466A:word16]
	ax = ax | Mem0[ds:0x466C:word16]
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_8130
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8130:
	ax = Mem0[ds:0x2E65:word16]
	dx = 0x0000
	ax = ax - Mem0[ds:0x2E6D:word16]
	SCZO = cond(ax)
	C = SCZO (alias)
	dx = 0x0000 - C
	SCZO = cond(dx)
	Mem0[ds:0x2E29:word16] = ax
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_813F:
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x290F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x290F
	v20 = Mem0[ds:0x2E47:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v20
	ds = fn0800_831D(ds, wArg00, ptrArg02)
	sp = sp + 0x0006
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x278F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x278F
	ax = Mem0[ds:0x2E29:word16]
	ax = ax - 0x0002
	SCZO = cond(ax)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ds = fn0800_831D(ds, wArg00, ptrArg02)
	sp = sp + 0x0006
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x284F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x284F
	ax = Mem0[ds:0x2E2B:word16]
	ax = ax - 0x0001
	SZO = cond(ax)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ds = fn0800_831D(ds, wArg00, ptrArg02)
	sp = sp + 0x0006
	SCZO = cond(sp)
	v21 = Mem0[ds:0x2E29:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v21
	fn0800_89A8(ds, wArg00)
	sp = sp + 0x0002
	v22 = Mem0[ds:0x466A:word16] + 0x0001
	Mem0[ds:0x466A:word16] = v22
	SCZO = cond(v22)
	C = SCZO (alias)
	v23 = Mem0[ds:0x466C:word16] + 0x00 + C
	Mem0[ds:0x466C:word16] = v23
	Mem0[ds:0x2E47:word16] = 0x0000
	ax = Mem0[ds:0x2E29:word16]
	v24 = Mem0[ds:0x465C:word16] + ax
	Mem0[ds:0x465C:word16] = v24
	SCZO = cond(v24)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_818D_thunk_fn0800_81A5:
	bp = fn0800_81A5(bp, si, di, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_812D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8209:
	ax = Mem0[ds:0x2E69:word16]
	dx = 0x0000
	ax = ax - Mem0[ds:0x2E6D:word16]
	SCZO = cond(ax)
	C = SCZO (alias)
	dx = 0x0000 - C
	Mem0[ds:0x4674:word16] = dx
	Mem0[ds:0x4672:word16] = ax
	ax = Mem0[ds:0x2E6D:word16]
	dx = 0x0000
	ax = ax - Mem0[ds:0x2E71:word16]
	SCZO = cond(ax)
	C = SCZO (alias)
	dx = 0x0000 - C
	ax = ax - Mem0[ds:0x2E31:word16]
	SCZO = cond(ax)
	C = SCZO (alias)
	dx = dx - 0x00 - C
	Mem0[ss:bp - 0x0002:word16] = dx
	Mem0[ss:bp - 0x0004:word16] = ax
	ax = Mem0[ds:0x2E71:word16]
	ax = ax + Mem0[ss:bp - 0x0004:word16]
	cx = ax
	dx = Mem0[ds:0x2E6D:word16]
	bx = 0x0000
	dx = dx - ax
	SCZO = cond(dx)
	C = SCZO (alias)
	bx = 0x0000 - C
	dx = dx + Mem0[ds:0x4672:word16]
	SCZO = cond(dx)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = dx
	v15 = Mem0[ds:0x2E73:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v15
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	v16 = Mem0[ds:0x2E73:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v16
	v17 = Mem0[ds:0x2E71:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v17
	si = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08, out di, out ds)
	sp = sp + 0x000A
	ax = Mem0[ds:0x2E65:word16]
	SCZO = cond(ax - Mem0[ds:0x2E69:word16])
	C = SCZO (alias)
	branch Test(ULT,C) l0800_8267_thunk_fn0800_82B9
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8267_thunk_fn0800_82B9:
	bp = fn0800_82B9(ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8269:
	ax = Mem0[ds:0x2E67:word16]
	dx = Mem0[ds:0x2E65:word16]
	dx_ax = SEQ(dx, ax) (alias)
	ax_dx = SEQ(ax, dx) (alias)
	SCZO = cond(ax - Mem0[ds:0x2E6B:word16])
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_8285
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8276:
	SCZO = cond(dx - Mem0[ds:0x2E69:word16])
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_8285
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_827C:
	ax = Mem0[ds:0x4676:word16]
	ax = ax | Mem0[ds:0x4678:word16]
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_8283_thunk_fn0800_82B9
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8283_thunk_fn0800_82B9:
	bp = fn0800_82B9(ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8285:
	SCZO = cond(Mem0[ds:0x466C:word16] - 0x0000)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_8293
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_828C:
	SCZO = cond(Mem0[ds:0x466A:word16] - 0xFFFE)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_8291_thunk_fn0800_82B9
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8291_thunk_fn0800_82B9:
	bp = fn0800_82B9(ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8293:
	ax = Mem0[ss:bp - 0x0002:word16]
	dx = Mem0[ss:bp - 0x0004:word16]
	v18 = Mem0[ds:0x466E:word16] - dx
	Mem0[ds:0x466E:word16] = v18
	SCZO = cond(v18)
	C = SCZO (alias)
	v19 = Mem0[ds:0x4670:word16] - ax - C
	Mem0[ds:0x4670:word16] = v19
	SCZO = cond(v19)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_829D_thunk_fn0800_82A1:
	bp = fn0800_82A1(bp, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_81E9_exit:
	use ds (=> dsOut)
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_82A1(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_82A1_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_82A1:
	sp = fp
	ax = Mem0[ds:0x4676:word16]
	ax = ax | Mem0[ds:0x4678:word16]
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_82AD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_82AD:
	ax = Mem0[ds:0x4672:word16]
	ax = ax | Mem0[ds:0x4674:word16]
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_82B4_thunk_fn0800_82B9
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>
// LocalsOut: fp(16)

l0800_82B4_thunk_fn0800_82B9:
	bp = fn0800_82B9(ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_82B6:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>
// LocalsOut: fp(16)

l0800_82AA:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>
// LocalsOut: fp(16)

l0800_8042:
	ax = 0x0000
	dx = 0xFFFF
	dx = 0xFFFF - Mem0[ds:0x2E31:word16]
	SCZO = cond(dx)
	C = SCZO (alias)
	ax = 0x0000 - C
	dx = dx - Mem0[ds:0x4672:word16]
	SCZO = cond(dx)
	C = SCZO (alias)
	ax = ax - Mem0[ds:0x4674:word16] - C
	Mem0[ss:bp - 0x0002:word16] = ax
	Mem0[ss:bp - 0x0004:word16] = dx
	ax = Mem0[ds:0x4678:word16]
	dx = Mem0[ds:0x4676:word16]
	ax_dx = SEQ(ax, dx) (alias)
	SCZO = cond(ax - Mem0[ss:bp - 0x0002:word16])
	C = SCZO (alias)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	CZ = SCZO (alias)
	branch Test(UGT,CZ) l0800_807C
// DataOut: bp ds dx ss
// DataOut (flags): C
// SymbolicIn: sp:fp ax:<invalid>
// LocalsOut: fp(16)

l0800_8068:
	branch Test(ULT,C) l0800_806F
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_806A:
	SCZO = cond(dx - Mem0[ss:bp - 0x0004:word16])
	C = SCZO (alias)
	branch Test(UGE,C) l0800_807C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_806F:
	ax = Mem0[ds:0x4678:word16]
	dx = Mem0[ds:0x4676:word16]
	Mem0[ss:bp - 0x0002:word16] = ax
	Mem0[ss:bp - 0x0004:word16] = dx
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_807C:
	ax = Mem0[ds:0x2E73:word16]
	dx = Mem0[ds:0x2E71:word16]
	dx = dx + Mem0[ds:0x2E31:word16]
	Mem0[ds:0x2E6F:word16] = ax
	Mem0[ds:0x2E6D:word16] = dx
	v13 = Mem0[ds:0x29E5:word16]
	sp = fp - 0x0002
	wLoc02 = v13
	v14 = Mem0[ds:0x29E3:word16]
	sp = fp - 0x0004
	wLoc04 = v14
	v15 = Mem0[ss:bp - 0x0002:word16]
	sp = fp - 0x0006
	wLoc06 = v15
	v16 = Mem0[ss:bp - 0x0004:word16]
	sp = fp - 0x0008
	wLoc08 = v16
	ax = Mem0[ds:0x2E6D:word16]
	ax = ax + Mem0[ds:0x4672:word16]
	SCZO = cond(ax)
	v17 = Mem0[ds:0x2E73:word16]
	sp = fp - 0x000A
	wLoc0A = v17
	sp = fp - 0x000C
	wLoc0C = ax
	si = fn0800_4110(bp, ds, wLoc0C, wLoc0A, wLoc08, wLoc04, wLoc02, out di, out ds)
	sp = sp + 0x000C
	ax = Mem0[ss:bp - 0x0002:word16]
	dx = Mem0[ss:bp - 0x0004:word16]
	v18 = Mem0[ds:0x4676:word16] - dx
	Mem0[ds:0x4676:word16] = v18
	SCZO = cond(v18)
	C = SCZO (alias)
	v19 = Mem0[ds:0x4678:word16] - ax - C
	Mem0[ds:0x4678:word16] = v19
	v20 = Mem0[ds:0x4672:word16] + dx
	Mem0[ds:0x4672:word16] = v20
	SCZO = cond(v20)
	C = SCZO (alias)
	v21 = Mem0[ds:0x4674:word16] + ax + C
	Mem0[ds:0x4674:word16] = v21
	ax = Mem0[ds:0x2E6F:word16]
	dx = Mem0[ds:0x2E6D:word16]
	dx = dx + Mem0[ds:0x4672:word16]
	Mem0[ds:0x2E67:word16] = ax
	Mem0[ds:0x2E65:word16] = dx
	Mem0[ds:0x2E6B:word16] = ax
	Mem0[ds:0x2E69:word16] = dx
	ax = Mem0[ds:0x4670:word16]
	dx = Mem0[ds:0x466E:word16]
	ax_dx = SEQ(ax, dx) (alias)
	SCZO = cond(ax - Mem0[ds:0x4674:word16])
	C = SCZO (alias)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_80ED
// DataOut: bp di ds dx ss
// DataOut (flags): C
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>

l0800_80ED:
	branch Test(ULT,C) l0800_80F8
// DataOut: bp di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_80EF:
	SCZO = cond(dx - Mem0[ds:0x4672:word16])
	C = SCZO (alias)
	branch Test(ULT,C) l0800_80F8
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_80F8:
	ax = Mem0[ds:0x2E6F:word16]
	dx = Mem0[ds:0x2E6D:word16]
	dx = dx + Mem0[ds:0x466E:word16]
	SCZO = cond(dx)
	Mem0[ds:0x2E67:word16] = ax
	Mem0[ds:0x2E65:word16] = dx
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8106_thunk_fn0800_81E9:
	bp = fn0800_81E9(bp, di, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_80F5:
	bp = fn0800_81E9(bp, di, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_80EA:
	bp = fn0800_81E9(bp, di, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_82A1_exit:
	use ds (=> dsOut)
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> cx:<invalid> bx:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_81E9:
	sp = fp
	ax = Mem0[ds:0x2E65:word16]
	ax = ax - 0x0001
	SCZO = cond(ax - Mem0[ds:0x2E6D:word16])
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_8209
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_81F3:
	SCZO = cond(Mem0[ds:0x466C:word16] - 0x0000)
	SZO = SCZO (alias)
	Z = SCZO (alias)
	CZ = SCZO (alias)
	C = SCZO (alias)
	branch Test(UGE,C) l0800_81FD
// DataOut: bp di ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_81FD:
	branch Test(NE,Z) l0800_8209
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_81FF:
	SCZO = cond(Mem0[ds:0x466A:word16] - 0xFFFE)
	C = SCZO (alias)
	branch Test(UGE,C) l0800_8209
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8206:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_81FA:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_810D:
	fn0800_8832(di, ds)
	sp = sp + 0xFFFE
	SCZO = cond(Mem0[ds:0x2E29:word16] - 0x0002)
	C = SCZO (alias)
	branch Test(ULT,C) l0800_8193
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8193:
	ax = 0x0001
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8117:
	ax = Mem0[ds:0x2E6D:word16]
	ax = ax + Mem0[ds:0x2E29:word16]
	SCZO = cond(ax - Mem0[ds:0x2E65:word16])
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_813F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8124:
	ax = Mem0[ds:0x466A:word16]
	ax = ax | Mem0[ds:0x466C:word16]
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_8130
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8130:
	ax = Mem0[ds:0x2E65:word16]
	dx = 0x0000
	ax = ax - Mem0[ds:0x2E6D:word16]
	SCZO = cond(ax)
	C = SCZO (alias)
	dx = 0x0000 - C
	SCZO = cond(dx)
	Mem0[ds:0x2E29:word16] = ax
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_813F:
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x290F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x290F
	v20 = Mem0[ds:0x2E47:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v20
	ds = fn0800_831D(ds, wArg00, ptrArg02)
	sp = sp + 0x0006
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x278F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x278F
	ax = Mem0[ds:0x2E29:word16]
	ax = ax - 0x0002
	SCZO = cond(ax)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ds = fn0800_831D(ds, wArg00, ptrArg02)
	sp = sp + 0x0006
	SCZO = cond(sp)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ds
	ax = 0x284F
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = 0x284F
	ax = Mem0[ds:0x2E2B:word16]
	ax = ax - 0x0001
	SZO = cond(ax)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	ds = fn0800_831D(ds, wArg00, ptrArg02)
	sp = sp + 0x0006
	SCZO = cond(sp)
	v21 = Mem0[ds:0x2E29:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v21
	fn0800_89A8(ds, wArg00)
	sp = sp + 0x0002
	v22 = Mem0[ds:0x466A:word16] + 0x0001
	Mem0[ds:0x466A:word16] = v22
	SCZO = cond(v22)
	C = SCZO (alias)
	v23 = Mem0[ds:0x466C:word16] + 0x00 + C
	Mem0[ds:0x466C:word16] = v23
	Mem0[ds:0x2E47:word16] = 0x0000
	ax = Mem0[ds:0x2E29:word16]
	v24 = Mem0[ds:0x465C:word16] + ax
	Mem0[ds:0x465C:word16] = v24
	SCZO = cond(v24)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_818D_thunk_fn0800_81A5:
	bp = fn0800_81A5(bp, si, di, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> bp:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_812D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8209:
	ax = Mem0[ds:0x2E69:word16]
	dx = 0x0000
	ax = ax - Mem0[ds:0x2E6D:word16]
	SCZO = cond(ax)
	C = SCZO (alias)
	dx = 0x0000 - C
	Mem0[ds:0x4674:word16] = dx
	Mem0[ds:0x4672:word16] = ax
	ax = Mem0[ds:0x2E6D:word16]
	dx = 0x0000
	ax = ax - Mem0[ds:0x2E71:word16]
	SCZO = cond(ax)
	C = SCZO (alias)
	dx = 0x0000 - C
	ax = ax - Mem0[ds:0x2E31:word16]
	SCZO = cond(ax)
	C = SCZO (alias)
	dx = dx - 0x00 - C
	Mem0[ss:bp - 0x0002:word16] = dx
	Mem0[ss:bp - 0x0004:word16] = ax
	ax = Mem0[ds:0x2E71:word16]
	ax = ax + Mem0[ss:bp - 0x0004:word16]
	cx = ax
	dx = Mem0[ds:0x2E6D:word16]
	bx = 0x0000
	dx = dx - ax
	SCZO = cond(dx)
	C = SCZO (alias)
	bx = 0x0000 - C
	dx = dx + Mem0[ds:0x4672:word16]
	SCZO = cond(dx)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = dx
	v15 = Mem0[ds:0x2E73:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v15
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	v16 = Mem0[ds:0x2E73:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v16
	v17 = Mem0[ds:0x2E71:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v17
	si = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08, out di, out ds)
	sp = sp + 0x000A
	ax = Mem0[ds:0x2E65:word16]
	SCZO = cond(ax - Mem0[ds:0x2E69:word16])
	C = SCZO (alias)
	branch Test(ULT,C) l0800_8267_thunk_fn0800_82B9
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cl:<invalid> al:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8267_thunk_fn0800_82B9:
	bp = fn0800_82B9(ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8269:
	ax = Mem0[ds:0x2E67:word16]
	dx = Mem0[ds:0x2E65:word16]
	dx_ax = SEQ(dx, ax) (alias)
	ax_dx = SEQ(ax, dx) (alias)
	SCZO = cond(ax - Mem0[ds:0x2E6B:word16])
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_8285
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8276:
	SCZO = cond(dx - Mem0[ds:0x2E69:word16])
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_8285
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_827C:
	ax = Mem0[ds:0x4676:word16]
	ax = ax | Mem0[ds:0x4678:word16]
	SZO = cond(ax)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_8283_thunk_fn0800_82B9
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8283_thunk_fn0800_82B9:
	bp = fn0800_82B9(ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8285:
	SCZO = cond(Mem0[ds:0x466C:word16] - 0x0000)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_8293
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_828C:
	SCZO = cond(Mem0[ds:0x466A:word16] - 0xFFFE)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_8291_thunk_fn0800_82B9
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8291_thunk_fn0800_82B9:
	bp = fn0800_82B9(ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_8293:
	ax = Mem0[ss:bp - 0x0002:word16]
	dx = Mem0[ss:bp - 0x0004:word16]
	v18 = Mem0[ds:0x466E:word16] - dx
	Mem0[ds:0x466E:word16] = v18
	SCZO = cond(v18)
	C = SCZO (alias)
	v19 = Mem0[ds:0x4670:word16] - ax - C
	Mem0[ds:0x4670:word16] = v19
	SCZO = cond(v19)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_829D_thunk_fn0800_82A1:
	bp = fn0800_82A1(bp, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> ds:<invalid> cl:<invalid> al:<invalid> ch:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_81E9_exit:
	use ds (=> dsOut)
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bp:<invalid> es:<invalid> cl:<invalid> al:<invalid> di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_82B9(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_82B9_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_82B9:
	word16 dx_5 = Mem0[ds:0x2E65:word16]
	branch Mem0[ds:0x2E67:word16] != Mem0[ds:0x2E6B:word16] l0800_82ED
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_82C6:
	branch dx_5 != Mem0[ds:0x2E69:word16] l0800_82ED
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_82CC:
	branch (Mem0[ds:0x4676:word16] | Mem0[ds:0x4678:word16]) != 0x0000 l0800_82ED
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_82D5:
	branch Mem0[ds:0x466C:word16] != 0x0000 l0800_82E3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_82DC:
	branch Mem0[ds:0x466A:word16] == 0xFFFE l0800_82ED
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_82E3:
	Mem69[ds:0x2E47:word16] = Mem0[ds:0x2E47:word16] + Mem0[ds:0x4672:word16]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_82ED:
	selector ds_19 = fn0800_831D(ds, Mem0[ds:0x2E47:word16], DPB(ptrLoc04, 0x290F, 0))
	word16 v12_21 = Mem0[ds_19:0x466A:word16] + 0x0001
	Mem22[ds_19:0x466A:word16] = v12_21
	Mem26[ds_19:0x466C:word16] = Mem22[ds_19:0x466C:word16] + (v12_21 <u 0x0000)
	Mem31[ss:fp - 0x0002:word16] = 0x0000
	Mem34[ss:fp - 0x0004:word16] = 0x0000
	Mem36[ss:fp - 0x0006:word16] = 0x0000
	Mem39[ss:fp - 0x0008:word16] = Mem36[ds_19:0x29DD:word16]
	Mem42[ss:fp - 0x000A:word16] = Mem39[ds_19:0x29DB:word16]
	word16 di_47
	selector ds_48
	fn0800_ACB3(bp, ds_19, wArg00, wArg02, wArg08, out di_47, out ds_48)
	return Mem42[ss:bp:word16]
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>

fn0800_82B9_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bp:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_831D(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_831D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(16) Stack +0004(32)

l0800_831D:
	word16 ax_13
	branch wArg02 <=u 0x0001 l0800_8332
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0004(32)

l0800_8332:
	ax_13 = wArg02
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8329:
	ax_13 = fn0800_0C08(wArg02)
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8334:
	word16 ax_16 = (word16) (ax_13 *s 0x000C)
	selector es_19 = SLICE(ptrArg04, selector, 16)
	word16 v14_22 = Mem0[es_19:ax_16 + 0x0002:word16] + 0x0001
	Mem23[es_19:ax_16 + 0x0002:word16] = v14_22
	Mem27[es_19:ax_16 + 0x0004:word16] = Mem23[es_19:ax_16 + 0x0004:word16] + (v14_22 <u 0x0000)
	word16 si_38
	selector ds_39
	fn0800_401E(fp - 0x0002, ds, wArg02, Mem27[ds:0x29DB:word16], Mem27[ds:0x29DD:word16], out si_38, out ds_39)
	return ds_39
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_831D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_8359(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: al bp sp
fn0800_8359_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8359:
	word16 dx_18
	word16 di_19
	selector ds_20
	word16 ax_21 = fn0800_3DCF(fp - 0x0002, ds, DPB(ptrLoc08, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out dx_18, out di_19, out ds_20)
	Mem24[ss:fp - 0x0003:byte] = (byte) ax_21
	Mem38[ds_20:0x2E4B:word16] = Mem24[ds_20:((DPB(ax_21, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem24[ds_20:0x2E4B:word16] >>u 0x08
	word16 v17_39 = Mem38[ds_20:0x29FF:word16] + 0x0001
	Mem40[ds_20:0x29FF:word16] = v17_39
	Mem44[ds_20:0x2A01:word16] = Mem40[ds_20:0x2A01:word16] + (v17_39 <u 0x0000)
	return ds_20
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8359_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp



selector fn0800_83A1(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_83A1_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_83A1:
	word16 di_101 = wArg06
	word16 si_16 = wArg06
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83C4:
	si_16 = si_16 - 0x0001
	branch si_16 != 0x0000 l0800_83B0
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83B0:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + (word16) (si_16 *s 0x000C) + 0x000A:word16] != 0x0000 l0800_83CB
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83C3:
	di_101 = di_101 - 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83CB:
	selector ds_48 = fn0800_8489(fp - 0x0002, ds, di_101)
	Mem55[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0002:word16] + 0x000A
	word16 si_50 = 0x0000
	branch 0x0000 >=u di_101 l0800_8401
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_83E5:
	Mem76[ss:fp - 0x000A:word16] = 0x0004
	Mem81[ss:fp - 0x000C:word16] = Mem76[Mem76[ss:fp + 0x0004:selector]:Mem76[ss:fp - 0x0004:word16]:word16]
	ds_48 = fn0800_8489(fp - 0x0002, ds_48, wArg00)
	Mem86[ss:fp - 0x0004:word16] = Mem81[ss:fp - 0x0004:word16] + 0x000C
	si_50 = si_50 + 0x0001
	branch si_50 <u di_101 l0800_83E5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8401:
	return ds_48
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_83A1_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8407(word16 bp, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_8407_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(32)

l0800_8407:
	word16 ax_17
	branch wArg02 <=u 0x0001 l0800_8420
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0004(32)

l0800_8420:
	ax_17 = wArg02
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(32)

l0800_8417:
	ax_17 = fn0800_0C08(wArg02)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(32)

l0800_8422:
	selector ds_36 = fn0800_8489(fp - 0x0002, ds, Mem0[SLICE(ptrArg04, selector, 16):(word16) (ax_17 *s 0x000C) + 0x0008:word16])
	branch Mem0[ss:fp - 0x0004:word16] <=u 0x0001 l0800_845F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8445:
	Mem57[ss:fp - 0x000A:word16] = Mem0[ss:fp - 0x0004:word16] - 0x0001
	Mem66[ss:fp - 0x000C:word16] = wArg02 - (0x0001 << Mem57[ss:fp - 0x0004:byte] - 0x01)
	ds_36 = fn0800_8489(fp - 0x0002, ds_36, wArg00)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_845F:
	return ds_36
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_8407_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_8465_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8465:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_847F
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_847F:
	return fn0800_8489(fp - 0x0002, ds, wArg02)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8475:
	return fn0800_854B(fp - 0x0002, ds, (byte) wArg04)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_8465_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_8489(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_8489_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8489:
	word16 di_13 = wArg02
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_853A:
	word16 ax_35 = Mem0[ss:fp + 0x0004:word16]
	Mem37[ss:fp + 0x0004:word16] = Mem0[ss:fp + 0x0004:word16] - 0x0001
	branch ax_35 == 0x0000 l0800_8547
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8547:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_8489_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> si:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_8544:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8494:
	Mem43[ds:0x2E43:word16] = Mem37[ds:0x2E43:word16] >>u 0x0001
	branch (di_13 & 0x0001) == 0x0000 l0800_84A4
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_849E:
	Mem147[ds:0x2E43:word16] = Mem43[ds:0x2E43:word16] | 0x8000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84A4:
	Mem51[ds:0x2E45:word16] = Mem43[ds:0x2E45:word16] + 0x0001
	di_13 = di_13 >>u 0x0001
	word16 ax_52 = Mem51[ds:0x2E45:word16]
	branch ax_52 == 0x0010 l0800_84B5
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84B5:
	Mem58[ss:fp - 0x0008:word16] = DPB(ax_52, Mem51[ds:0x2E43:byte], 0)
	word16 di_60
	selector ds_61
	fn0800_8624(ds, bArg00, out di_60, out ds_61)
	word16 ax_64 = Mem58[ds_61:0x2E43:word16]
	Mem69[ss:fp - 0x0008:word16] = ax_64 >>u 0x08
	fn0800_8624(ds_61, bArg00, out di_13, out ds)
	word16 ax_135 = ax_64 >>u 0x08
	word16 si_140 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84E3:
	branch Mem69[ds:0x4E82:word16] != 0x0000 l0800_84D1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84D1:
	ax_135 = DPB(ax_135, Mem69[ds:si_140 + 0x4682:byte], 0) (alias)
	Mem137[ss:fp - 0x0008:word16] = ax_135
	si_140 = fn0800_8624(ds, bArg00, out di_13, out ds)
	Mem144[ds:0x4E82:word16] = Mem137[ds:0x4E82:word16] - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84EA:
	word16 ax_87 = Mem69[ds:0x2A01:word16]
	word16 dx_88 = Mem69[ds:0x29FF:word16]
	branch ax_87 <u Mem69[ds:0x2A05:word16] l0800_8532
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84F7:
	branch ax_87 >u Mem69[ds:0x2A05:word16] l0800_84FF
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84F9:
	branch dx_88 <=u Mem69[ds:0x2A03:word16] l0800_8532
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84FF:
	word16 dx_107 = Mem69[ds:0x29FF:word16] - Mem69[ds:0x2A03:word16]
	word16 ax_110 = Mem69[ds:0x2A01:word16] - Mem69[ds:0x2A05:word16] - (dx_107 <u 0x0000)
	branch ax_110 <u Mem69[ds:0x4E8A:word16] l0800_8532
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8514:
	branch ax_110 >u Mem69[ds:0x4E8A:word16] l0800_851C
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8516:
	branch dx_107 <=u Mem69[ds:0x4E88:word16] l0800_8532
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_851C:
	word16 dx_120 = Mem69[ds:0x29FF:word16] - Mem69[ds:0x2A03:word16]
	Mem125[ds:0x4E8A:word16] = Mem69[ds:0x2A01:word16] - Mem69[ds:0x2A05:word16] - (dx_120 <u 0x0000)
	Mem126[ds:0x4E88:word16] = dx_120
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8532:
	Mem103[ds:0x2E45:word16] = 0x0000
	Mem104[ds:0x2E43:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84B2:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)



selector fn0800_854B(word16 bp, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0004(8)
fn0800_854B_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(8)

l0800_854B:
	word16 di_128 = 0x0001 << bArg04 - 0x01
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_85EF:
	word16 ax_36 = Mem0[ss:fp + 0x0004:word16]
	Mem38[ss:fp + 0x0004:word16] = Mem0[ss:fp + 0x0004:word16] - 0x0001
	branch ax_36 == 0x0000 l0800_85FC
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85FC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_854B_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> si:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_85F9:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_855D:
	Mem44[ds:0x2E43:word16] = Mem38[ds:0x2E43:word16] << 0x0001
	branch (Mem44[ss:fp + 0x0002:word16] & di_128) == 0x0000 l0800_856A
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8566:
	Mem137[ds:0x2E43:word16] = Mem44[ds:0x2E43:word16] + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_856A:
	Mem51[ds:0x2E45:word16] = Mem44[ds:0x2E45:word16] + 0x0001
	di_128 = di_128 >>u 0x0001
	word16 ax_52 = Mem51[ds:0x2E45:word16]
	branch ax_52 != 0x0008 l0800_85EF
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8578:
	word16 ax_125 = DPB(ax_52, Mem51[ds:0x2E43:byte], 0)
	Mem58[ss:fp - 0x0008:word16] = ax_125
	fn0800_8624(ds, bArg00, out di_128, out ds)
	word16 si_130 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8598:
	branch Mem58[ds:0x4E82:word16] != 0x0000 l0800_8586
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8586:
	ax_125 = DPB(ax_125, Mem58[ds:si_130 + 0x4682:byte], 0) (alias)
	Mem127[ss:fp - 0x0008:word16] = ax_125
	si_130 = fn0800_8624(ds, bArg00, out di_128, out ds)
	Mem134[ds:0x4E82:word16] = Mem127[ds:0x4E82:word16] - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_859F:
	word16 ax_77 = Mem58[ds:0x2A01:word16]
	word16 dx_78 = Mem58[ds:0x29FF:word16]
	branch ax_77 <u Mem58[ds:0x2A05:word16] l0800_85E7
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85AC:
	branch ax_77 >u Mem58[ds:0x2A05:word16] l0800_85B4
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85AE:
	branch dx_78 <=u Mem58[ds:0x2A03:word16] l0800_85E7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85B4:
	word16 dx_97 = Mem58[ds:0x29FF:word16] - Mem58[ds:0x2A03:word16]
	word16 ax_100 = Mem58[ds:0x2A01:word16] - Mem58[ds:0x2A05:word16] - (dx_97 <u 0x0000)
	branch ax_100 <u Mem58[ds:0x4E8A:word16] l0800_85E7
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85C9:
	branch ax_100 >u Mem58[ds:0x4E8A:word16] l0800_85D1
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85CB:
	branch dx_97 <=u Mem58[ds:0x4E88:word16] l0800_85E7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85D1:
	word16 dx_110 = Mem58[ds:0x29FF:word16] - Mem58[ds:0x2A03:word16]
	Mem115[ds:0x4E8A:word16] = Mem58[ds:0x2A01:word16] - Mem58[ds:0x2A05:word16] - (dx_110 <u 0x0000)
	Mem116[ds:0x4E88:word16] = dx_110
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85E7:
	Mem93[ds:0x2E45:word16] = 0x0000
	Mem94[ds:0x2E43:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)



word16 fn0800_8600(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8600_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8600:
	branch Mem0[ds:0x2E45:word16] == 0x0000 l0800_861B
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_861B:
	word16 di_40
	selector ds_41
	return fn0800_8624(ds, bArg02, out di_40, out ds_41)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dl:<invalid> -2(fp):bp

l0800_860D:
	Mem27[ds:Mem0[ds:0x4E82:word16] + 0x4682:byte] = bArg02
	Mem29[ds:0x4E82:word16] = Mem27[ds:0x4E82:word16] + 0x0001
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dl:<invalid> -2(fp):bp

fn0800_8600_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dl:<invalid> bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> si:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):dx -2(fp):bp



word16 fn0800_8624(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8624_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8624:
	word16 ax_8 = Mem0[ds:0x2A05:word16]
	word16 dx_9 = Mem0[ds:0x2A03:word16]
	branch ax_8 >u Mem0[ds:0x4E86:word16] l0800_8678
// DataOut: bp di ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8634:
	branch ax_8 <u Mem0[ds:0x4E86:word16] l0800_863C
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8636:
	branch dx_9 >=u Mem0[ds:0x4E84:word16] l0800_8678
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_863C:
	word16 di_61
	selector ds_62
	fn0800_4047(fp - 0x0002, ds, bArg02, DPB(ptrLoc06, Mem0[ds:0x29DF:word16], 0), Mem0[ds:0x29E1:word16], out di_61, out ds_62)
	Mem77[ds_62:0x2E49:word16] = Mem0[ds_62:((DPB(DPB(ax_8, bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem0[ds_62:0x2E49:word16] >>u 0x08
	word16 v18_78 = Mem77[ds_62:0x2A03:word16] + 0x0001
	Mem79[ds_62:0x2A03:word16] = v18_78
	Mem83[ds_62:0x2A05:word16] = Mem79[ds_62:0x2A05:word16] + (v18_78 <u 0x0000)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8678:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_8624_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: bp ds sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_867A_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_867A:
	word16 si_26
	byte bl_28 = (byte) fn0800_87EF(wArg04 + 0x0004, psegArg06, out si_26)
	byte al_40 = Mem0[psegArg06:si_26 + 0x000A:byte] * 0x02 + true
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_869C_thunk_fn0800_8745:
	selector ds_44
	return fn0800_8745(al_40 * 0x02, bl_28, si_26 + 0x000B, wArg08, psegArg0A, psegArg06, out ds_44)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_867A_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> dx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp



void fn0800_8688(word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZO bl bp bx di ds es si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8688_entry:
// DataOut: bl bp bx di ds es si ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8688:
	word16 sp_1 = fp
	branch SZO l0800_8694
// DataOut: bl bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_868A:
	es = Mem0[ss:bp + 0x000C:selector]
	bx = fn0800_87EF(si + 0x0004, ds, out si)
	bl = (byte) bx (alias)
	sp_1 = fp - 0x0004
// DataOut: bl bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8694:
	Mem15[ss:sp_1 - 0x0002:word16] = bx
	word16 si_17 = si + 0x000A
	byte al_22 = Mem15[ds:si_17:byte] * 0x02 + true
// DataOut: al bl di ds es si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> si:<invalid> bx:<invalid> ax:<invalid> al:<invalid> -4(fp):<invalid>

l0800_869E_thunk_fn0800_8745:
	selector ds_28
	fn0800_8745(al_22 * 0x02, bl, si_17 + 0x0001, di, es, ds, out ds_28)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> si:<invalid> al:<invalid> bx:<invalid> ax:<invalid> -4(fp):<invalid>

fn0800_8688_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> si:<invalid> al:<invalid> bx:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> bp:<invalid> cl:<invalid> ds:<invalid> dx:<invalid> -4(fp):<invalid>



word16 fn0800_8701(byte al, word16 cx, byte bl, byte bh, word16 si, word16 di, selector es, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bh bl cx di ds es si
// LiveOut: bp ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_8701_entry:
	def fp
	def al
	def si
	def bh
	def bx
	def ds
	def Mem0
	def di
	def cx
	def es
	def dsOut
	def bl
	def wArg00
	def wArg02
	def psegArg04
	def wArg06
	def wArg08
	def wArg0A
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8701:
	sp_1 = fp
	al_3 = al + al
	SCZO_4 = cond(al_3)
	Z_5 = SCZO_4 (alias)
	SZO_6 = SCZO_4 (alias)
	C_7 = SCZO_4 (alias)
	branch al_3 == 0x00 l0800_86CE
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l0800_86CE:
	al_171 = Mem0[ds:si:byte]
	si_172 = si + 0x0001
	al_173 = al_171 + al_171 + (al_3 <u 0x00)
	SCZO_174 = cond(al_173)
	Z_175 = SCZO_174 (alias)
	SZO_176 = SCZO_174 (alias)
	C_177 = SCZO_174 (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:al * 0x02

l0800_8705:
	al_9 = PHI(al_3, al_173)
	Z_10 = PHI(Z_5, Z_175)
	SZO_11 = PHI(SZO_6, SZO_176)
	C_12 = PHI(C_7, C_177)
	SCZO_13 = PHI(SCZO_4, SCZO_174)
	si_14 = PHI(si, si_172)
	branch C_12 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0001

l0800_8707:
	al_46 = al_9 + al_9
	SCZO_47 = cond(al_46)
	Z_48 = SCZO_47 (alias)
	SZO_49 = SCZO_47 (alias)
	C_50 = SCZO_47 (alias)
	branch al_46 == 0x00 l0800_86D4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0001

l0800_86D4:
	al_164 = Mem0[ds:si_14:byte]
	si_165 = si_14 + 0x0001
	al_166 = al_164 + al_164 + (al_46 <u 0x00)
	SCZO_167 = cond(al_166)
	Z_168 = SCZO_167 (alias)
	SZO_169 = SCZO_167 (alias)
	C_170 = SCZO_167 (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0001

l0800_870E:
	al_51 = PHI(al_46, al_166)
	C_52 = PHI(C_50, C_170)
	si_53 = PHI(si_14, si_165)
	bh_54 = bh + bh + C_52
	bx_55 = DPB(bx, bh_54, 8) (alias)
	al_56 = al_51 + al_51
	SCZO_57 = cond(al_56)
	Z_58 = SCZO_57 (alias)
	SZO_59 = SCZO_57 (alias)
	C_60 = SCZO_57 (alias)
	branch al_56 == 0x00 l0800_86DA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> si:<invalid>

l0800_86DA:
	al_157 = Mem0[ds:si_53:byte]
	si_158 = si_53 + 0x0001
	al_159 = al_157 + al_157 + (al_56 <u 0x00)
	SCZO_160 = cond(al_159)
	Z_161 = SCZO_160 (alias)
	SZO_162 = SCZO_160 (alias)
	C_163 = SCZO_160 (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8714:
	al_61 = PHI(al_56, al_159)
	Z_62 = PHI(Z_58, Z_161)
	SZO_63 = PHI(SZO_59, SZO_162)
	C_64 = PHI(C_60, C_163)
	SCZO_65 = PHI(SCZO_57, SCZO_160)
	si_66 = PHI(si_53, si_158)
	branch C_64 l0800_8784
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8784:
	al_113 = al_61 + al_61
	SCZO_114 = cond(al_113)
	Z_115 = SCZO_114 (alias)
	SZO_116 = SCZO_114 (alias)
	C_117 = SCZO_114 (alias)
	branch al_113 == 0x00 l0800_87AA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_87AA:
	al_150 = Mem0[ds:si_66:byte]
	si_151 = si_66 + 0x0001
	al_152 = al_150 + al_150 + (al_113 <u 0x00)
	SCZO_153 = cond(al_152)
	Z_154 = SCZO_153 (alias)
	SZO_155 = SCZO_153 (alias)
	C_156 = SCZO_153 (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8788:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_878B:
	al_118 = PHI(al_113, al_152)
	C_119 = PHI(C_117, C_156)
	si_120 = PHI(si_66, si_151)
	bh_121 = bh_54 + bh_54 + C_119
	bh_122 = bh_121 | 0x04
	bx_123 = DPB(bx_55, bh_122, 8) (alias)
	al_124 = al_118 + al_118
	SCZO_125 = cond(al_124)
	Z_126 = SCZO_125 (alias)
	SZO_127 = SCZO_125 (alias)
	C_128 = SCZO_125 (alias)
	branch al_124 == 0x00 l0800_87AF
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_87AF:
	al_143 = Mem0[ds:si_120:byte]
	si_144 = si_120 + 0x0001
	al_145 = al_143 + al_143 + (al_124 <u 0x00)
	SCZO_146 = cond(al_145)
	Z_147 = SCZO_146 (alias)
	SZO_148 = SCZO_146 (alias)
	C_149 = SCZO_146 (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8794:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8797:
	al_129 = PHI(al_124, al_145)
	Z_130 = PHI(Z_126, Z_147)
	SZO_131 = PHI(SZO_127, SZO_148)
	C_132 = PHI(C_128, C_149)
	SCZO_133 = PHI(SCZO_125, SCZO_146)
	si_134 = PHI(si_120, si_144)
	branch C_132 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8799:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_876A_thunk_fn0800_876B:
	bp_142 = fn0800_876B(al_129, cx, bl, bh_122, si_134, di, es, ds, wArg00, wArg02, psegArg04, wArg06, wArg08, wArg0A, out ds_141)
	return bp_142
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8716:
	bh_105 = bh_54 | bh_54
	bx_106 = DPB(bx_55, bh_105, 8) (alias)
	SZO_107 = cond(bh_105)
	Z_108 = SZO_107 (alias)
	C_109 = false
	branch bh_105 != 0x00 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_871D:
	bh_110 = bh_105 + 0x01
	bx_111 = DPB(bx_106, bh_110, 8) (alias)
	SZO_112 = cond(bh_110)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8722:
	al_78 = PHI(al_61, al_129)
	bh_79 = PHI(bh_110, bh_122)
	bx_80 = PHI(bx_111, bx_123)
	si_81 = PHI(si_66, si_134)
	al_82 = al_78 + al_78
	SCZO_83 = cond(al_82)
	Z_84 = SCZO_83 (alias)
	SZO_85 = SCZO_83 (alias)
	C_86 = SCZO_83 (alias)
	branch al_82 == 0x00 l0800_86E0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_86E0:
	al_98 = Mem0[ds:si_81:byte]
	si_99 = si_81 + 0x0001
	al_100 = al_98 + al_98 + (al_82 <u 0x00)
	SCZO_101 = cond(al_100)
	Z_102 = SCZO_101 (alias)
	SZO_103 = SCZO_101 (alias)
	C_104 = SCZO_101 (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8726:
	al_87 = PHI(al_100, al_82)
	Z_88 = PHI(Z_102, Z_84)
	SZO_89 = PHI(SZO_103, SZO_85)
	C_90 = PHI(C_104, C_86)
	si_91 = PHI(si_99, si_81)
	bh_92 = bh_79 + bh_79 + C_90
	bx_93 = DPB(bx_80, bh_92, 8) (alias)
	SCZO_94 = cond(bh_92)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

l0800_8728:
	al_17 = PHI(al_9, al_61, al_87, al_129)
	Z_18 = PHI(Z_10, Z_108, Z_88, Z_130)
	SZO_19 = PHI(SZO_11, SZO_107, SZO_89, SZO_131)
	C_20 = PHI(C_12, C_109, C_90, C_132)
	bh_21 = PHI(bh, bh_105, bh_92, bh_122)
	bx_22 = PHI(bx, bx_106, bx_93, bx_123)
	si_23 = PHI(si_14, si_66, si_91, si_134)
	bl_26 = Mem0[ds:si_23:byte]
	bx_27 = DPB(bx_22, bl_26, 0) (alias)
	si_28 = si_23 + 0x0001
	bp_29 = si_28
	si_31 = di
	si_32 = si_31 - 0x0001
	si_33 = si_32 - bx_27
	SCZO_34 = cond(si_33)
	__cli()
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:<invalid> bh:<invalid>

l0800_8733:
	si_36 = PHI(si_33, si_42)
	di_37 = PHI(di, di_43)
	cx_38 = PHI(cx, cx_44)
	branch cx_38 == 0x0000 l0800_8736
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bl:<invalid> si:<invalid> bp:<invalid> di:<invalid> cx:<invalid> bh:<invalid>

l0800_8736:
	__sti()
	si_45 = bp_29
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bl:<invalid> si:<invalid> bp:<invalid> di:<invalid> cx:<invalid> bh:<invalid>

l0800_8737_thunk_fn0800_8745:
	bp = fn0800_8745(al, bl, si, di, es, ds, out ds)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bl:<invalid> si:<invalid> bp:<invalid> di:<invalid> cx:<invalid> bh:<invalid>

l0800_8733_1:
	v16_39 = Mem0[ds:si_36:byte]
	Mem40[es:di_37:byte] = v16_39
	si_42 = si_36 + 0x0001
	di_43 = di_37 + 0x0001
	cx_44 = cx_38 - 0x0001
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bl:<invalid> si:<invalid> bp:<invalid> di:<invalid> cx:<invalid> bh:<invalid>

l0800_86FF_thunk_fn0800_8701:
	bp_97 = fn0800_8701(al_87, cx, bl, bh_92, si_91, di, es, ds, out ds_96)
	return bp_97
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> bh:<invalid> si:<invalid>

fn0800_8701_exit:
	al_67 = PHI(al_87, al, al_129)
	Z_68 = PHI(Z_88, Z, Z_130)
	SZO_69 = PHI(SZO_89, SZO, SZO_131)
	C_70 = PHI(C_90, C, C_132)
	bh_71 = PHI(bh_92, bh, bh_122)
	bx_72 = PHI(bx_93, bx, bx_123)
	SCZO_73 = PHI(SCZO_94, SCZO, SCZO_133)
	si_74 = PHI(si_91, si, si_134)
	ds_75 = PHI(ds_96, ds, ds_141)
	bp_76 = PHI(bp_97, bp, bp_142)
	use ds_75 (=> dsOut)
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> si:<invalid> bp:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ds:<invalid> dx:<invalid>



word16 fn0800_8745(byte al, byte bl, word16 si, word16 di, selector es, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bl di ds es si
// LiveOut: bp ds sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8745_entry:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8745:
	sp = v3
	al = al + al
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(ULT,C) l0800_8751
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_8749:
	v9 = Mem0[ds:si:byte]
	Mem0[es:di:byte] = v9
	si = si + 0x0001
	di = di + 0x0001
	al = al + al
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(UGE,C) l0800_8744
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_8751:
	branch Test(EQ,Z) l0800_873C
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_873C:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al + al + C
	SCZO = cond(al)
	C = SCZO (alias)
	branch Test(ULT,C) l0800_8753
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_8741:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_8744:
	v22 = Mem0[ds:si:byte]
	Mem0[es:di:byte] = v22
	si = si + 0x0001
	di = di + 0x0001
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_8753:
	cx = 0x0002
	cl = (byte) cx (alias)
	bh = 0x00
	bx = DPB(bx, bh, 8) (alias)
	al = al + al
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(EQ,Z) l0800_879B
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_879B:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al + al + C
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_875C:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_875F:
	branch Test(UGE,C) l0800_86E6
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_86E6:
	al = al + al
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(EQ,Z) l0800_86BC
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_86BC:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al + al + C
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_86EA:
	cl = 0x04 + C
	cx = DPB(cx, cl, 0) (alias)
	al = al + al
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(EQ,Z) l0800_86C2
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_86C2:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al + al + C
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86F0:
	branch Test(UGE,C) l0800_8701
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86F0_thunk_fn0800_8701:
	bp = fn0800_8701(al, cx, bl, bh, si, di, es, ds, out ds)
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86F2:
	al = al + al
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(EQ,Z) l0800_86C8
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86C8:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al + al + C
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86F9:
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	cl = cl + cl + C
	cx = DPB(cx, cl, 0) (alias)
	SCZO = cond(cl - 0x09)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_86A7
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86A7:
	cl = 0x04
	cx = DPB(cx, cl, 0) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86A9:
	al = al + al
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(EQ,Z) l0800_86A1
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86A1:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al + al + C
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86AD:
	bh = bh + bh + C
	bx = DPB(bx, bh, 8) (alias)
	SCZO = cond(bh)
	cx = cx - 0x0001
	cl = (byte) cx (alias)
	branch cx != 0x0000 l0800_86A9
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86B1:
	cl = 0x03
	cl = 0x03 + bh
	cl = cl + cl
	cx = DPB(cx, cl, 0) (alias)
	SCZO = cond(cl)
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86B7:
	branch cx == 0x0000 l0800_86B9
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86B9:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86B7_1:
	v21 = Mem0[ds:si:word16]
	Mem0[es:di:word16] = v21
	si = si + 0x0002
	di = di + 0x0002
	cx = cx - 0x0001
	cl = (byte) cx (alias)
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_86FF_thunk_fn0800_8701:
	bp = fn0800_8701(al, cx, bl, bh, si, di, es, ds, out ds)
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> cl:<invalid>

l0800_8761:
	al = al + al
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
	branch Test(EQ,Z) l0800_87A0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_87A0:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al + al + C
	SCZO = cond(al)
	Z = SCZO (alias)
	SZO = SCZO (alias)
	C = SCZO (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_8765:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_8768:
	branch Test(UGE,C) l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

l0800_8768_thunk_fn0800_8701:
	bp = fn0800_8701(al, cx, bl, bh, si, di, es, ds, out ds)
	return bp
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02

fn0800_8745_exit:
	use ds (=> dsOut)
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> bp:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ds:<invalid> dx:<invalid>

l0800_876A:
	cx = 0x0003
	SZO = cond(0x0003)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 al:<invalid> si:<invalid> di:<invalid> cx:0x0002 bh:<invalid> cl:0x02



word16 fn0800_876B(byte al, word16 cx, byte bl, byte bh, word16 si, word16 di, selector es, selector ds, word16 wArg00, word16 wArg02, selector psegArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bh bl cx di ds es si
// LiveOut: bp ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
// Stack args: Stack +0004(16) Stack +000A(16)
fn0800_876B_entry:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_876B:
	byte al_10 = al * 0x02
	word16 ax_129 = DPB(ax, al * 0x02, 0)
	byte C_13 = cond(al * 0x02)
	branch al * 0x02 == 0x00 l0800_87A5
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_87A5:
	al_10 = Mem0[ds:si:byte] * 0x02 + (al * 0x02 <u 0x00)
	si = si + 0x0001
	ax_129 = DPB(ax, al_10, 0) (alias)
	C_13 = cond(al_10) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:al * 0x02
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_876F:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:al * 0x02
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_8772:
	branch C_13 l0800_8772_thunk_fn0800_8701
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0001
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_8772_thunk_fn0800_8701:
	selector ds_122
	return fn0800_8701(al_10, cx, bl, bh, si, di, es, ds, out ds_122)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0001

l0800_8774:
	byte cl_38 = Mem0[ds:si:byte]
	word16 si_39 = si + 0x0001
	word16 cx_42 = DPB(cx, cl_38, 0)
	branch cl_38 == 0x00 l0800_87B4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0001
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_87B4:
	byte al_77 = (byte) ax_129
	word16 di_62 = (di & 0x000F) + 0x8000
	word16 ax_66 = es + (di >>u 0x04)
	word16 si_115 = si_39 & 0x000F
	byte bl_72 = (byte) (si_39 >>u 0x04)
	word16 ax_74 = ds + (si_39 >>u 0x04)
	byte al_116 = al_77 * 0x02
	byte C_121 = cond(al_77 * 0x02)
	branch al_77 * 0x02 != 0x00 l0800_87E3
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0003 cl:<invalid>
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_87DD:
	al_116 = Mem0[ax_74:si_39 & 0x000F:byte] * 0x02 + (al_77 * 0x02 <u 0x00)
	si_115 = (si_39 & 0x000F) + 0x0001
	C_121 = cond(al_116) (alias)
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0006 & 0x000F cl:0x04 bx:si + 0x0006 >>u 0x04 di:(di & 0x000F & 0x000F) + 0x8000 ax:<invalid> es:es + (di >>u 0x04) - 0x0800 ds:ds + (si + 0x0006 >>u 0x04) -2(fp):ax
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_87E3:
	branch C_121 l0800_87E8
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:<invalid> cl:0x04 bx:si + 0x0006 >>u 0x04 di:(di & 0x000F & 0x000F) + 0x8000 ax:<invalid> es:es + (di >>u 0x04) - 0x0800 ds:ds + (si + 0x0006 >>u 0x04) -2(fp):ax
// LocalsOut: fp(16) Stack +0004(16) Stack +000A(16)

l0800_87E8:
	selector ds_103
	*dsOut = psegArg04
	return wArg0A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:<invalid> cl:0x04 bx:si + 0x0006 >>u 0x04 di:(di & 0x000F & 0x000F) + 0x8000 ax:<invalid> es:es + (di >>u 0x04) - 0x0800 ds:ds + (si + 0x0006 >>u 0x04) -2(fp):ax

l0800_87E5:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:<invalid> cl:0x04 bx:si + 0x0006 >>u 0x04 di:(di & 0x000F & 0x000F) + 0x8000 ax:<invalid> es:es + (di >>u 0x04) - 0x0800 ds:ds + (si + 0x0006 >>u 0x04) -2(fp):ax

l0800_87E5_thunk_fn0800_8745:
	selector ds_94
	return fn0800_8745(al_116, bl_72, si_115, di_62, ax_66 - 0x0800, ax_74, out ds_94)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:<invalid> cl:0x04 bx:si + 0x0006 >>u 0x04 di:(di & 0x000F & 0x000F) + 0x8000 ax:<invalid> es:es + (di >>u 0x04) - 0x0800 ds:ds + (si + 0x0006 >>u 0x04) -2(fp):ax

l0800_87E5_thunk_fn0800_8745:
	selector ds_92
	return fn0800_8745(al_116, bl_72, si_115, di_62, ax_66 - 0x0800, ax_74, out ds_92)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:<invalid> cl:0x04 bx:si + 0x0006 >>u 0x04 di:(di & 0x000F & 0x000F) + 0x8000 ax:<invalid> es:es + (di >>u 0x04) - 0x0800 ds:ds + (si + 0x0006 >>u 0x04) -2(fp):ax

l0800_877B:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0003 cl:<invalid>

l0800_8781_thunk_fn0800_8701:
	selector ds_53
	return fn0800_8701(al_10, cx_42 + 0x0008, bl, bh, si_39, di, es, ds, out ds_53)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> si:si + 0x0003 cl:<invalid> cx:cx + 0x0008

fn0800_876B_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> si:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> di:<invalid> ax:<invalid> es:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> -2(fp):ax



word16 fn0800_87EF(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: bl bx si
// Trashed: ah al ax bh bl bx eax ebx esi rax rbx rsi si sil
// Preserved: sp
fn0800_87EF_entry:
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87EF:
	word16 si_4
	word16 ax_5 = fn0800_87F4(si, ds, out si_4)
// DataOut: bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F2_thunk_fn0800_87F4:
	word16 si_7
	fn0800_87F4(si_4, ds, out si_7)
	return ax_5
// DataOut: bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>

fn0800_87EF_exit:
// DataOut: bl bx si
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>



word16 fn0800_87F4(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: ax si
// Trashed: ah al ax eax esi rax rsi si sil
// Preserved: ah sp
fn0800_87F4_entry:
// DataOut: bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F4:
	word16 ax_5 = Mem0[ds:si:word16]
	word16 si_8
	*siOut = si + 0x0002
	return DPB(ax_5, (byte) ax_5, 8)
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_87F4_exit:
// DataOut: ax si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:si + 0x0002 al:ah ah:ah



void fn0800_87F8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: di sp
fn0800_87F8_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_87F8:
	ptr32 es_di_8 = Mem0[ds:0x2E37:segptr32]
	word16 di_13 = (word16) es_di_8
	selector es_10 = SLICE(es_di_8, selector, 16)
	word16 ax_11 = Mem0[ds:0x2E31:word16]
	word16 cx_12 = 0x8000
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8804:
	branch cx_12 == 0x0000 l0800_8806
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8806:
	ptr32 es_di_20 = Mem0[ds:0x2E33:segptr32]
	word16 di_21 = (word16) es_di_20
	selector es_22 = SLICE(es_di_20, selector, 16)
	word16 ax_23 = Mem0[ds:0x2E31:word16]
	word16 cx_24 = 0x8000
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810:
	branch cx_24 == 0x0000 l0800_8812
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8812:
	ptr32 es_di_32 = Mem0[ds:0x2E3B:segptr32]
	word16 di_33 = (word16) es_di_32
	selector es_34 = SLICE(es_di_32, selector, 16)
	word16 cx_35 = Mem0[ds:0x2E31:word16]
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881C:
	branch cx_35 == 0x0000 l0800_881E
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881E:
	ptr32 es_di_46 = Mem0[ds:0x2E3F:segptr32]
	word16 di_47 = (word16) es_di_46
	selector es_48 = SLICE(es_di_46, selector, 16)
	word16 ax_49 = 0x0000
	word16 cx_52 = Mem0[ds:0x2E31:word16]
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8828:
	Mem56[es_48:di_47:word16] = ax_49
	di_47 = di_47 + 0x0002
	ax_49 = ax_49 + 0x0001
	cx_52 = cx_52 - 0x0001
	branch cx_52 != 0x0000 l0800_8828
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_882C:
	Mem62[ds:0x2E2D:word16] = cx_52
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

fn0800_87F8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di -2(fp):di

l0800_881C_1:
	Mem42[es_34:di_33:word16] = 0x0000
	di_33 = di_33 + 0x0002
	cx_35 = cx_35 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810_1:
	Mem28[es_22:di_21:word16] = ax_23
	di_21 = di_21 + 0x0002
	cx_24 = cx_24 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8804_1:
	Mem16[es_10:di_13:word16] = ax_11
	di_13 = di_13 + 0x0002
	cx_12 = cx_12 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di



void fn0800_8832(word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si sp
fn0800_8832_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8832:
	fn0800_889A(ds)
	branch Mem0[ds:0x2E29:word16] <u 0x0002 l0800_8897_in_fn0800_8832
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0)

l0800_8897_in_fn0800_8832:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si

l0800_883E:
	branch Mem0[ds:0x2E65:word16] - Mem0[ds:0x2E6D:word16] <u 0x0003 l0800_8897_in_fn0800_8832
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0004(0)

l0800_8897_in_fn0800_8832:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si

l0800_884D:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0004(0)

l0800_8854_thunk_fn0800_8858:
	fn0800_8858(ds, wLoc06, di)
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -4(fp):di -2(fp):si

fn0800_8832_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -4(fp):di -2(fp):si



void fn0800_8858(selector ds, word16 wArg00, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8858_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8858:
	word16 ax_4 = Mem0[ds:0x2E2D:word16]
	word16 ax_11 = ax_4 + 0x0001
	branch ax_4 + 0x0001 != Mem0[ds:0x2E31:word16] l0800_8865
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_8863:
	ax_11 = 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_8865:
	Mem13[ds:0x2E2D:word16] = ax_11
	Mem15[ds:0x2E6D:word16] = Mem13[ds:0x2E6D:word16] + 0x0001
	fn0800_889A(ds)
	Mem18[ds:0x2E6D:word16] = Mem15[ds:0x2E6D:word16] - 0x0001
	Mem19[ds:0x2E2D:word16] = ax_4
	branch Mem19[ds:0x2E29:word16] <=u si l0800_888F
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_888F:
	Mem32[ds:0x2E29:word16] = si
	Mem34[ds:0x2E2B:word16] = di
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_887D:
	Mem30[ds:0x2E29:word16] = 0x0001
	Mem31[ds:0x2E2B:word16] = 0x0000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_8897:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid>

fn0800_8858_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0004 ax:<invalid> di:<invalid> si:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -2(fp):<invalid>



void fn0800_889A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: di ds si sp
fn0800_889A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_889A:
	Mem9[ds:0x2E2B:word16] = 0x0000
	Mem11[ds:0x2E29:word16] = 0x0001
	ptr32 es_di_12 = Mem11[ds:0x2E6D:segptr32]
	word16 ax_15 = Mem11[es_di_12:word16]
	Mem17[ds:0x4E90:word16] = ax_15
	word16 di_13 = (word16) es_di_12
	word16 dx_21 = Mem17[ds:0x2E69:word16] - (di_13 + 0x0001)
	selector es_14 = SLICE(es_di_12, selector, 16)
	byte al_16 = (byte) ax_15
	word16 di_18 = di_13 + 0x0001
	byte Z_230 = cond(dx_21)
	word16 cx_226 = dx_21
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_88BC:
	branch cx_226 == 0x0000 l0800_88BE
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BC_1:
	Z_230 = cond(al_16 - Mem17[es_14:di_236:byte]) (alias)
	di_18 = di_236 + 0x0001
	cx_226 = cx_226 - 0x0001
	word16 di_236 = di_18
	branch al_16 != Mem17[es_14:di_236:byte] l0800_88BC
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BE:
	branch Z_230 l0800_88C1
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C0:
	cx_226 = cx_226 - 0x0001
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C1:
	Mem51[ds:0x4E94:word16] = Mem17[ds:0x2E69:word16] - (word16) Mem17[ds:0x2E6D:segptr32]
	word16 dx_46 = dx_21 - cx_226
	word16 ax_123 = Mem51[Mem51[ds:0x2E39:selector]:Mem51[ds:0x4E90:word16] << 0x0001:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88DC:
	branch ax_123 != Mem51[ds:0x2E31:word16] l0800_88E5
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E5:
	word16 di_91 = ax_123 << 0x0001
	Mem95[ds:0x4E92:word16] = Mem51[Mem51[ds:0x2E41:selector]:di_91:word16]
	word16 bx_224 = Mem95[ds:0x2E2D:word16]
	branch bx_224 >u ax_123 l0800_8903
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88FC:
	bx_224 = bx_224 + Mem95[ds:0x2E31:word16]
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8903:
	ptr32 es_si_101 = Mem95[ds:0x2E6D:segptr32]
	word16 bx_100 = bx_224 - ax_123
	branch Mem95[ds:0x4E90:word16] != Mem95[SLICE(es_si_101, selector, 16):(word16) es_si_101 - bx_100:word16] l0800_897E
// DataOut: bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8914:
	word16 cx_126 = Mem95[Mem95[ds:0x2E3D:selector]:di_91:word16]
	branch cx_126 <=u bx_100 l0800_892D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_892D:
	branch cx_126 <=u dx_46 l0800_893A
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8931:
	bx_100 = bx_100 - (cx_126 - dx_46)
	cx_126 = dx_46
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893A:
	branch cx_126 != dx_46 l0800_8963
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893E:
	ptr32 es_di_160 = Mem95[ds:0x2E6D:segptr32]
	word16 di_163 = (word16) es_di_160 + cx_126
	word16 ax_169 = Mem95[ds:0x4E94:word16] - cx_126
	selector es_162 = SLICE(es_di_160, selector, 16)
	word16 si_166 = di_163 - bx_100
	byte Z_173 = cond(ax_169)
	word16 cx_176 = ax_169
	selector ds_179 = Mem95[ds:0x2E6F:selector]
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957:
	branch cx_176 == 0x0000 l0800_8959
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957_1:
	Z_173 = cond(Mem95[ds_179:si_238:byte] - Mem95[es_162:di_237:byte]) (alias)
	si_166 = si_238 + 0x0001
	di_163 = di_237 + 0x0001
	cx_176 = cx_176 - 0x0001
	word16 di_237 = di_163
	word16 si_238 = si_166
	branch Mem95[ds_179:si_238:byte] != Mem95[es_162:di_237:byte] l0800_8957
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8959:
	branch Z_173 l0800_895C
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895B:
	cx_176 = cx_176 + 0x0001
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895C:
	cx_126 = dx_46 + (ax_169 - cx_176)
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8922:
	bx_100 = 0x0001
	cx_126 = dx_46
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8963:
	branch cx_126 <=u Mem95[ds:0x2E2F:word16] l0800_896D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8969:
	cx_126 = Mem95[ds:0x2E2F:word16]
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_896D:
	branch cx_126 <u Mem95[ds:0x2E29:word16] l0800_897E
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8973:
	Mem149[ds:0x2E29:word16] = cx_126
	Mem150[ds:0x2E2B:word16] = bx_100
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_897E:
	ax_123 = Mem95[ds:0x4E92:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E2:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8984:
	branch Mem51[ds:0x2E29:word16] != 0x0002 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_898B:
	branch Mem51[ds:0x2E2B:word16] <=u 0x0100 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8996:
	Mem88[ds:0x2E29:word16] = 0x0001
	Mem89[ds:0x2E2B:word16] = 0x0000
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_89A5:
	return
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si

fn0800_889A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> di:di dx:<invalid> cx:<invalid> es:<invalid> si:si bx:<invalid> Sequence es:si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si



void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di sp
// Stack args: Stack +0002(16)
fn0800_89A8_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_89A8:
	word16 dx_11 = Mem0[ds:0x2E31:word16]
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_89B1:
	word16 di_27 = Mem0[ds:0x2E2D:word16]
	selector es_29 = Mem0[ds:0x2E41:selector]
	word16 ax_30 = Mem0[es_29:di_27 << 0x0001:word16]
	Mem32[es_29:di_27 << 0x0001:word16] = dx_11
	branch Mem32[ds:0x2E2D:word16] == ax_30 l0800_89EA
// DataOut: ax ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89C7:
	ptr32 es_di_164 = Mem32[ds:0x2E6D:segptr32]
	word16 di_168 = Mem32[SLICE(es_di_164, selector, 16):(word16) es_di_164 - dx_11:word16]
	Mem172[Mem32[ds:0x2E39:selector]:di_168 << 0x0001:word16] = ax_30
	branch ax_30 != dx_11 l0800_89EA
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89E0:
	Mem176[Mem172[ds:0x2E35:selector]:di_168 << 0x0001:word16] = dx_11
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89EA:
	word16 di_38 = Mem32[Mem32[ds:0x2E6D:segptr32]:word16]
	word16 ax_40 = Mem32[ds:0x2E2D:word16]
	selector es_42 = Mem32[ds:0x2E39:selector]
	branch Mem32[es_42:di_38 << 0x0001:word16] != dx_11 l0800_8A08
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A08:
	Mem163[Mem32[ds:0x2E41:selector]:Mem32[Mem32[ds:0x2E35:selector]:di_38 << 0x0001:word16] << 0x0001:word16] = ax_40
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89FF:
	Mem156[es_42:di_38 << 0x0001:word16] = ax_40
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A18:
	Mem47[Mem32[ds:0x2E35:selector]:di_38 << 0x0001:word16] = ax_40
	ptr32 es_di_48 = Mem47[ds:0x2E6D:segptr32]
	word16 di_49 = (word16) es_di_48
	word16 bx_56 = Mem47[ds:0x2E69:word16] - (di_49 + 0x0001)
	selector es_50 = SLICE(es_di_48, selector, 16)
	byte al_51 = Mem47[es_di_48:byte]
	word16 di_153 = di_49 + 0x0001
	byte Z_149 = cond(bx_56)
	word16 cx_146 = bx_56
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A2F:
	branch cx_146 == 0x0000 l0800_8A31
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A2F_1:
	Z_149 = cond(al_51 - Mem47[es_50:di_177:byte]) (alias)
	di_153 = di_177 + 0x0001
	cx_146 = cx_146 - 0x0001
	word16 di_177 = di_153
	branch al_51 != Mem47[es_50:di_177:byte] l0800_8A2F
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A31:
	branch Z_149 l0800_8A34
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A33:
	cx_146 = cx_146 - 0x0001
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A34:
	word16 bx_110 = bx_56 - cx_146
	Mem86[Mem47[ds:0x2E3D:selector]:Mem47[ds:0x2E2D:word16] << 0x0001:word16] = bx_110
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A86:
	word16 ax_95 = Mem86[ds:0x2E2D:word16]
	word16 ax_101 = ax_95 + 0x0001
	branch ax_95 + 0x0001 != dx_11 l0800_8A90
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A8E:
	ax_101 = 0x0000
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A90:
	Mem103[ds:0x2E2D:word16] = ax_101
	Mem105[ds:0x2E6D:word16] = Mem103[ds:0x2E6D:word16] + 0x0001
	word16 v20_106 = wArg02 - 0x0001
	wArg02 = v20_106
	branch v20_106 == 0x0000 l0800_8AA8
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8AA8:
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

fn0800_89A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> di:di es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

l0800_8A9C:
	bx_110 = bx_110 - 0x0001
	branch bx_110 >u 0x0001 l0800_8A46
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A46:
	word16 di_113 = Mem105[ds:0x2E2D:word16]
	Mem116[Mem105[ds:0x2E3D:selector]:di_113 << 0x0001:word16] = bx_110
	selector es_117 = Mem116[ds:0x2E41:selector]
	word16 v22_119 = Mem116[es_117:di_113 << 0x0001:word16]
	Mem120[es_117:di_113 << 0x0001:word16] = Mem116[ds:0x2E2D:word16]
	branch Mem120[ds:0x2E2D:word16] == v22_119 l0800_8A86
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A63:
	ptr32 es_di_125 = Mem120[ds:0x2E6D:segptr32]
	word16 di_129 = Mem120[SLICE(es_di_125, selector, 16):(word16) es_di_125 - dx_11:word16]
	Mem133[Mem120[ds:0x2E39:selector]:di_129 << 0x0001:word16] = v22_119
	branch v22_119 != dx_11 l0800_8A86
// DataOut: bx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A7C:
	Mem137[Mem133[ds:0x2E35:selector]:di_129 << 0x0001:word16] = dx_11
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8AA5:
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)



void fn0800_8ACF(byte al, word16 cx, selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh dl ds dx eax ebx edx es rax rbx rdx
// Preserved: bp ds sp
// Stack args: Stack +0006(32)
fn0800_8ACF_entry:
// DataOut: al cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(32)

l0800_8ACF:
	msdos_unknown_2143()
	word16 ax_12 = DPB(ax, 0x00, 0)
	branch false l0800_8AE9
// DataOut: ax cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(32)

l0800_8AE9:
	fn0800_8D64(ds, ax_12)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x43 al:0x00 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8ADF:
	Mem35[ptrArg06:word16] = cx
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x43 al:0x00 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8AED:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_8ACF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_8B0D(byte al, word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp ds ss
// LiveOut: al ax bx dl ds dx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8B0D_entry:
	*bxOut = bx
	*dsOut = ds
// DataOut: al bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8B0D:
	word16 sp_131 = fp - 0x0004
	word16 si_11 = wArg06
	branch wArg06 != 0x0000 l0800_8B36
// DataOut: al bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B18:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B28:
	branch Mem0[ds:0x224E:word16] != 0x0000 l0800_8B1A
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B1A:
	Mem147[ds:0x224E:word16] = Mem0[ds:0x224E:word16] - 0x0001
	word16 sp_151
	word16 bp_152
	selector ss_153
	word16 si_154
	byte SZO_155
	byte C_156
	byte Z_157
	byte SCZO_158
	word16 cx_161
	word16 bx_162
	word16 ax_164
	word16 dx_165
	call SEQ(cs, Mem147[ds:(Mem147[ds:0x224E:word16] << 0x0001) + 0x4E96:word16]) (retsize: 2; depth: 2)
		uses: al_117,ax_116,bp_126,bx_149,C_121,cs_119,cx_124,ds_120,dx_115,SCZO_150,si_125,sp_127,ss_123,SZO_122,wLoc02_4,wLoc04_8,Z_129
		defs: al_163,ax_164,bp_152,bx_162,C_156,cs_160,cx_161,ds_159,dx_165,SCZO_158,si_154,sp_151,ss_153,SZO_155,Z_157
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B2F:
	word16 bx_130 = fn0800_0150(al)
	word16 bp_132
	byte SZO_135
	byte C_136
	byte Z_137
	byte SCZO_138
	word16 cx_141
	word16 bx_142
	byte al_143
	word16 ax_144
	word16 dx_145
	call SEQ(cs, Mem0[ds:0x2352:word16]) (retsize: 2; depth: 2)
		uses: al_117,ax_116,bp_126,bx_130,C_121,cs_119,cx_124,ds_120,dx_115,SCZO_128,si_125,sp_127,ss_123,SZO_122,wLoc02_4,wLoc04_8,Z_129
		defs: al_143,ax_144,bp_132,bx_142,C_136,cs_140,cx_141,ds_139,dx_145,SCZO_138,si_134,sp_131,ss_133,SZO_135,Z_137
// DataOut: bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B36:
	word16 dx_30
	word16 ax_110 = fn0800_01B9(ds, out dx_30)
	fn0800_0163()
	byte al_109 = (byte) ax_110
	branch wArg04 != 0x0000 l0800_8B55
// DataOut: al ax bx di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> es:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B42:
	branch si_11 != 0x0000 l0800_8B4E
// DataOut: al ax bx di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B46:
	word16 sp_82
	word16 bp_83
	selector ss_84
	word16 si_85
	byte SZO_86
	byte C_87
	byte Z_88
	byte SCZO_89
	selector ds_90
	selector cs_91
	word16 cx_92
	word16 bx_93
	byte al_94
	word16 ax_95
	word16 dx_96
	call SEQ(cs, Mem0[ds:0x2354:word16]) (retsize: 2; depth: 2)
		uses: al_32,ax_31,bp_28,bx_20,C_60,cs_21,cx_26,ds_22,dx_30,SCZO_34,si_57,sp_29,ss_25,SZO_58,wLoc02_4,wLoc04_8,Z_59
		defs: al_94,ax_95,bp_83,bx_93,C_87,cs_91,cx_92,ds_90,dx_96,SCZO_89,si_85,sp_82,ss_84,SZO_86,Z_88
	word16 bp_98
	word16 si_100
	byte SZO_101
	byte C_102
	byte Z_103
	byte SCZO_104
	selector ds_105
	selector cs_106
	word16 cx_107
	word16 bx_108
	word16 dx_111
	call SEQ(cs_91, Mem0[ds_90:0x2356:word16]) (retsize: 2; depth: 2)
		uses: al_94,ax_95,bp_83,bx_93,C_87,cs_91,cx_92,ds_90,dx_96,SCZO_89,si_85,sp_82,ss_84,SZO_86,wLoc02_4,wLoc04_8,Z_88
		defs: al_109,ax_110,bp_98,bx_108,C_102,cs_106,cx_107,ds_105,dx_111,SCZO_104,si_100,sp_97,ss_99,SZO_101,Z_103
// DataOut: al ax bx di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B4E:
	Mem78[ss:sp_131 - 0x0002:word16] = wArg02
	fn0800_0164(al_109, bArg00)
// DataOut: al ax bx di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// Terminates process

l0800_8B55:
	return ax_110
// DataOut: al ax bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp

fn0800_8B0D_exit:
// DataOut: al ax bx dl ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp



word16 fn0800_8B5A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds dx si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8B5A_entry:
	*siOut = si
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B5A:
	word16 dx_19
	word16 bx_20
	selector ds_21
	fn0800_8B0D(0x00, fp - 0x0002, ds, wArg02, 0x0000, 0x0000, out dx_19, out bx_20, out ds_21)
	return dx_19
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B5A_exit:
// DataOut: dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



word16 fn0800_8B69(selector ds, word16 wArg02, ptr16 & bxOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al ax bx ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8B69_entry:
	*siOut = si
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B69:
	word16 dx_20
	word16 bx_21
	selector ds_22
	return fn0800_8B0D(0x00, fp - 0x0002, ds, wArg02, 0x0000, 0x0001, out dx_20, out bx_21, out ds_22)
// DataOut: al ax bx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B69_exit:
// DataOut: al ax bx ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



void fn0800_8B95(byte al, byte dl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al dl
// LiveOut:
// Trashed: ah ax bh bl bx dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8B95_entry:
// DataOut: al dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8B95:
	byte dh_7
	word16 cx_8
	word16 dx_11 = DPB(dx, msdos_get_system_date(out dh_7, out cx_8), 0)
	Mem16[ptrArg02:word16] = cx_8
	Mem17[ptrArg02 + 0x0002:word16] = dx_11
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B95_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2A dl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



void fn0800_8BA8(byte al, byte cl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cl
// LiveOut:
// Trashed: ah ax bh bl bx cl cx eax ebx ecx es rax rbx rcx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8BA8_entry:
// DataOut: al cl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8BA8:
	byte ch_7
	byte dh_8
	byte dl_9
	Mem17[ptrArg02:word16] = DPB(cx, msdos_get_system_time(out ch_7, out dh_8, out dl_9), 0)
	Mem19[ptrArg02 + 0x0002:word16] = dx
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8BA8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2C cl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



word16 fn0800_8BBB(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BBB_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BBB:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC0_thunk_fn0800_8BD8:
	word16 dx_16
	word16 bp_17
	word16 si_18
	word16 di_19
	return fn0800_8BD8(0x0000, bp, si, di, out dx_16, out bp_17, out si_18, out di_19)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8BBB_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BC2(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BC2_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BC2:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC5_thunk_fn0800_8BD8:
	word16 dx_14
	word16 bp_15
	word16 si_16
	word16 di_17
	return fn0800_8BD8(0x0001, bp, si, di, out dx_14, out bp_15, out si_16, out di_17)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:0x0001 -2(fp):<invalid> 0(fp):cs

fn0800_8BC2_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BCA(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: al ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BCA_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BCA:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BD0_thunk_fn0800_8BD8:
	word16 dx_14
	word16 bp_15
	word16 si_16
	word16 di_17
	return fn0800_8BD8(0x0002, bp, si, di, out dx_14, out bp_15, out si_16, out di_17)
// DataOut: al ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:0x0002 -2(fp):<invalid> 0(fp):cs

fn0800_8BCA_exit:
// DataOut: al ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BD8(word16 cx, word16 bp, word16 si, word16 di, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp cx di si ss
// LiveOut: al ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BD8_entry:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_8BD8:
	Mem4[ss:v3 - 0x0002:word16] = bp
	Mem8[ss:v3 - 0x0004:word16] = si
	Mem11[ss:v3 - 0x0006:word16] = di
	word16 cx_21 = Mem11[ss:v3 + 0x000A:word16]
	word16 di_14 = cx
	word16 ax_100 = Mem11[ss:v3 + 0x0004:word16]
	word16 dx_17 = Mem11[ss:v3 + 0x0006:word16]
	word16 bx_19 = Mem11[ss:v3 + 0x0008:word16]
	word16 cx_158 = cx_21
	branch cx_21 != 0x0000 l0800_8BF7
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BEF:
	word32 dx_ax_181 = SEQ(dx_17, ax_100)
	branch dx_17 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF3:
	branch bx_19 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C5C:
	word16 dx_188 = (uint16) (dx_ax_181 % bx_19)
	ax_100 = (uint16) (dx_ax_181 /u bx_19)
	branch (cx & 0x0002) == 0x0000 l0800_8C65
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C64:
	ax_100 = dx_188
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C65:
	word16 dx_195
	*dxOut = 0x0000
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF7:
	word16 bx_163 = bx_19
	word16 dx_116 = dx_17
	branch (cx & 0x0001) != 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BFD:
	dx_116 = dx_17
	branch dx_17 >= 0x0000 l0800_8C0B
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C01:
	ax_100 = -ax_100
	dx_116 = -dx_17 - (ax_100 == 0x0000)
	di_14 = cx | 0x000C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0B:
	cx_158 = cx_21
	branch cx_21 >= 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0F:
	bx_163 = -bx_19
	cx_158 = -cx_21 - (bx_163 == 0x0000)
	di_14 = di_14 ^ 0x0004
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C19:
	Mem69[ss:v3 - 0x0008:word16] = di_14
	ui32 bp_bx_66 = SEQ(cx_158, bx_163)
	word16 cx_107 = 0x0020
	word16 di_104 = 0x0000
	word16 si_105 = 0x0000
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C23:
	ax_100 = ax_100 << 0x0001
	dx_116 = __rcl(dx_116, 0x01, cond(ax_100))
	*dxOut = dx_116
	si_105 = __rcl(si_105, 0x01, (dx_116 & 0x8000) != 0x0000)
	di_104 = __rcl(di_104, 0x01, (si_105 & 0x8000) != 0x0000)
	branch di_104 <u cx_158 l0800_8C3A
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C2F:
	branch di_104 >u cx_158 l0800_8C35
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C31:
	branch si_105 <u bx_163 l0800_8C3A
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C35:
	ui32 di_si_139 = SEQ(di_104, si_105 - bx_163) - bp_bx_66
	di_104 = SLICE(di_si_139, word16, 16) (alias)
	si_105 = (word16) di_si_139 (alias)
	ax_100 = ax_100 + 0x0001
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3A:
	cx_107 = cx_107 - 0x0001
	branch cx_107 != 0x0000 l0800_8C23
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3C:
	word16 bx_108 = Mem69[ss:v3 - 0x0008:word16]
	branch (bx_108 & 0x0002) == 0x0000 l0800_8C49
// DataOut: al ax bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C43:
	ax_100 = si_105
	*dxOut = di_104
	bx_108 = bx_108 >>u 0x0001
// DataOut: al ax bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C49:
	branch (bx_108 & 0x0004) == 0x0000 l0800_8C56
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C4F:
	ax_100 = -ax_100
	word16 dx_126
	*dxOut = -dx_116 - (ax_100 == 0x0000)
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C56:
	word16 di_38
	*diOut = Mem11[ss:v3 - 0x0006:word16]
	word16 si_40
	*siOut = Mem11[ss:v3 - 0x0004:word16]
	word16 bp_43
	*bpOut = Mem11[ss:v3 - 0x0002:word16]
	return ax_100
// DataOut: al ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

fn0800_8BD8_exit:
// DataOut: al ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:v3 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>



word16 fn0800_8C69(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C69_entry:
// DataOut: ax bp cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C69:
	branch cl >=u 0x10 l0800_8C81
// DataOut: ax bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8C81:
	word16 dx_37
	*dxOut = ax << cl - 0x10
	return 0x0000
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C71:
	word16 dx_29
	*dxOut = dx << cl | ax >>u -cl + 0x10
	return ax << cl
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C69_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C8A_entry:
// DataOut: ax bp cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C8A:
	branch cl >=u 0x10 l0800_8CA2
// DataOut: ax bp cl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CA2:
	int32 dx_ax_37 = (int32) dx
	word16 dx_38
	*dxOut = SLICE(dx_ax_37, word16, 16)
	return (word16) dx_ax_37 >> cl - 0x10
// DataOut: al ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C92:
	word16 dx_26
	*dxOut = dx >> cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: al ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C8A_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:dx >> cl cl:<invalid> Sequence dx:ax:(int32) dx -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CAA(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CAA_entry:
// DataOut: ax bp cl di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CAA:
	branch cl >=u 0x10 l0800_8CC2
// DataOut: ax bp cl di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CC2:
	word16 dx_36
	*dxOut = 0x0000
	return dx >>u cl - 0x10
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8CB2:
	word16 dx_25
	*dxOut = dx >>u cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8CAA_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CCB(word16 ax, word16 cx, word16 dx, word16 bx, selector psegArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dh dl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CCB_entry:
// DataOut: ax bp bx cx dh di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CCB:
	byte cl_15 = (byte) cx
	branch cx >= 0x0000 l0800_8CDE
// DataOut: ax bp bx cl cx dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CDE:
	word16 ax_73 = ax + bx
	byte al_74 = (byte) ax_73
	branch ax_73 >=u 0x0000 l0800_8CE6
// DataOut: al ax bp cl dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8CE2:
	dx = dx + 0x1000
	dh = SLICE(dx + 0x1000, byte, 8) (alias)
// DataOut: al ax bp cl dh di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx ax:ax + bx -2(fp):<invalid> 0(fp):cs

l0800_8CE6:
	word16 dx_88
	*dxOut = DPB(dx, dh + (cl_15 << 0x04), 8) + (ax_73 >>u 0x04)
	return DPB(ax_73 >>u 0x04, al_74, 0) & 0x000F
// DataOut: al ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx ax:ax + bx dx:dx + 0x1000 -2(fp):<invalid> 0(fp):cs

l0800_8CD2:
	word16 bx_41 = (word16) (SEQ(~cx, ~bx + 0x0001) + 0x00000001)
// DataOut: ax bl bp bx cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8D0D:
	word16 ax_47 = ax - bx_41
	byte al_48 = (byte) ax_47
	branch ax_47 >=u 0x0000 l0800_8D15
// DataOut: al ax bl bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 -2(fp):<invalid> 0(fp):cs

l0800_8D11:
	dx = dx - 0x1000
// DataOut: al ax bl bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) -2(fp):<invalid> 0(fp):cs

l0800_8D15:
	word16 dx_62
	*dxOut = dx - DPB(bx_41, 0x00, 0) + (ax_47 >>u 0x04)
	return DPB(ax_47 >>u 0x04, al_48, 0) & 0x000F
// DataOut: al ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) dx:dx - 0x1000 -2(fp):<invalid> 0(fp):cs

fn0800_8CCB_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> ch:al cl:0x04 dh:<invalid> al:<invalid> bx:<invalid> bh:0x40 bl:0x00 -2(fp):<invalid> 0(fp):cs



word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_8D2B_entry:
// DataOut: di dl ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D2B:
	word16 si_17
	word16 si_11 = wArg02
	branch wArg02 < 0x0000 l0800_8D4B
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D4B:
	si_17 = -wArg02
	branch si_17 > 0x0023 l0800_8D3B
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D52:
	Mem41[ds:0x2516:word16] = 0xFFFF
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D36:
	branch wArg02 <= 0x0058 l0800_8D3E
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3B:
	si_11 = 0x0057
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3E:
	Mem29[ds:0x2516:word16] = si_11
	si_17 = (int16) Mem29[ds:si_11 + 0x2518:byte]
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D58:
	Mem18[ds:0x007F:word16] = si_17
	return 0xFFFF
// DataOut: al ax di dl ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> -4(fp):si -2(fp):bp

fn0800_8D2B_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si al:0xFF ax:0xFFFF -4(fp):si -2(fp):bp



void fn0800_8D64(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_8D64_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D64:
	fn0800_8D2B(ds, wArg02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8D64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void fn0800_8D76(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8D76_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D76:
	word16 dx_9
	msdos_ioctl_get_device_info(wArg02, out dx_9)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8D76_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x0000 bx:<invalid> dx:0x4400 -2(fp):bp



byte fn0800_8D87(word16 bp, word16 di, selector es, selector psegArg00, word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di es ss
// LiveOut: sil sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)
fn0800_8D87_entry:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)

l0800_8D87:
	word16 di_140 = (word16) ptrArg08
	selector es_19 = SLICE(ptrArg08, selector, 16)
	byte bl_22 = (byte) wArg06
	branch wArg06 >u 0x0024 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8D9B:
	branch bl_22 <u 0x02 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8DA0:
	word16 ax_103 = wArg0C
	word16 cx_168 = wArg0E
	branch wArg0E >= 0x0000 l0800_8DBC
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DAA:
	branch bArg04 == 0x00 l0800_8DBC
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DB0:
	Mem197[ptrArg08:byte] = 0x2D
	ax_103 = -wArg0C
	di_140 = di_140 + 0x0001
	cx_168 = -wArg0E - (ax_103 == 0x0000)
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DBC:
	word16 si_104 = fp - 0x0024
	branch cx_168 == 0x0000 l0800_8DD1
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DC1:
	word32 dx_ax_175 = (uint32) (uint16) cx_168
	word32 dx_ax_181 = SEQ((uint16) (dx_ax_175 % wArg06), ax_103)
	Mem190[ss:si_104:byte] = (byte) (uint16) (dx_ax_181 % wArg06)
	word16 ax_178 = (uint16) (dx_ax_175 /u wArg06)
	cx_168 = ax_178
	ax_103 = (uint16) (dx_ax_181 /u wArg06)
	si_104 = si_104 + 0x0001
	branch ax_178 == 0x0000 l0800_8DD9
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DD9:
	branch ax_103 != 0x0000 l0800_8DD1
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DD1:
	word32 dx_ax_106 = (uint32) (uint16) ax_103
	Mem114[ss:si_104:byte] = (byte) (uint16) (dx_ax_106 % wArg06)
	ax_103 = (uint16) (dx_ax_106 /u wArg06)
	si_104 = si_104 + 0x0001
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DDD:
	word16 cx_133 = 0x0024 - fp + si_104
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DE5:
	byte al_153
	si_104 = si_104 - 0x0001
	byte al_145 = Mem0[ss:si_104:byte]
	branch al_145 >=u 0x0A l0800_8DF1
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:<invalid> al:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF1:
	al_153 = al_145 - 0x0A + bArg02
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DED:
	al_153 = al_145 + 0x30
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF4:
	Mem155[es_19:di_140:byte] = al_153
	di_140 = di_140 + 0x0001
	cx_133 = cx_133 - 0x0001
	branch cx_133 != 0x0000 l0800_8DE5
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF7:
	Mem45[es_19:di_140:byte] = 0x00
	return (byte) si
	Mem60[es:di:byte] = 0x00
	return (byte) wArg04
// DataOut: ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

fn0800_8D87_exit:
// DataOut: sil sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 bp:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> es:<invalid> dx:<invalid> ax:<invalid> di:<invalid> si:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

l0800_8DCF:
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)



byte fn0800_8E09(word16 di, selector es, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di es ss
// LiveOut: sil
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8E09_entry:
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8E09:
	return fn0800_8D87(fp - 0x0002, di, es, psegLoc12, 0x0061, 0x0000, 0x000A, DPB(ptrLoc0A, wArg02, 0), wArg04, wArg06, 0x0000)
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8E09_exit:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> dx:<invalid> si:<invalid> cx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x000A -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_8E29(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al ax dl dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_8E29_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_8E29:
	Mem12[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 ax_18 = DPB(ax, bArg08, 0)
	word16 dx_23
	*dxOut = wArg04
	branch msdos_set_file_position(wArg02, SEQ(wArg06, wArg04), bArg08, SEQ(wArg04, ax_18)) l0800_8E4B
// DataOut: al ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E4B:
	fn0800_8D2B(ds, ax_18)
	word16 dx_44
	*dxOut = 0x0000
	ax_18 = 0xFFFF (alias)
// DataOut: al ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E49:
// DataOut: al ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E50:
	return ax_18
// DataOut: al ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp

fn0800_8E29_exit:
// DataOut: al ax dl dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp



word16 fn0800_8E52(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
fn0800_8E52_entry:
// DataOut: al ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E52:
	word16 ax_20
	__syscall(0x21)
	word16 ax_11 = DPB(ax, 0x39, 8)
	branch C l0800_8E64
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E64:
	ax_20 = fn0800_8D2B(ds, ax_11)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E60:
	ax_20 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E68:
	return ax_20
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8E52_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_8E6A(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & silOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al ax di ds dx sil
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_8E6A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_8E6A:
	branch (wArg08 | wArg0A) != 0x0000 l0800_8E7D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E75:
	wArg0A = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E7D:
	word16 ax_27
	word16 dx_26
	branch (wArg04 | wArg06) != 0x0000 l0800_8E8F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E8F:
	dx_26 = wArg06
	ax_27 = wArg04
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +000A(16)

l0800_8E88:
	dx_26 = ds
	ax_27 = 0x2572
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +000A(16)

l0800_8E95:
	word16 dx_38
	word16 di_39
	selector es_40
	selector ds_41
	word16 ax_42 = fn0800_9CE6(0x4ED6, wArg0A, ax_27, dx_26, out dx_38, out di_39, out es_40, out ds_41)
	byte sil_49
	*silOut = fn0800_8E09(di_39, es_40, ax_42, dx_38, wArg02)
	Mem52[ss:fp - 0x0004:word16] = ds_41
	Mem56[ss:fp - 0x0006:word16] = 0x2576
	Mem59[ss:fp - 0x0008:word16] = Mem56[ss:fp + 0x000A:word16]
	Mem62[ss:fp - 0x000A:word16] = Mem59[ss:fp + 0x0008:word16]
	fn0800_BF5F(ptrArg00, ptrArg04)
	word16 dx_67
	*dxOut = Mem62[ss:fp + 0x000A:word16]
	return Mem62[ss:fp + 0x0008:word16]
// DataOut: al ax di ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds

fn0800_8E6A_exit:
// DataOut: al ax di ds dx sil
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -12(fp):0x4ED6 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds



word16 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dx
// LiveOut: ax dx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: si sp
fn0800_8F18_entry:
// DataOut: ax bp bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F18:
	word16 ax_11 = dx
	branch dx == 0x0000 l0800_8F21
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8F1F:
	ax_11 = (word16) (bx *u dx) (alias)
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si -2(fp):si

l0800_8F21:
	branch cx == 0x0000 l0800_8F28
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F23:
	ax_11 = (word16) (ax *u cx) + ax_11
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F28:
	word32 dx_ax_28 = bx *u ax
	word16 dx_31
	*dxOut = SLICE(dx_ax_28, word16, 16) + ax_11
	return (word16) dx_ax_28
// DataOut: ax bp di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:<invalid> si:si dx:si Sequence dx:ax:<invalid> cx:si -2(fp):si

fn0800_8F18_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp ax:si si:si dx:<invalid> Sequence dx:ax:bx *u si cx:si -2(fp):si



byte fn0800_8F2F(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ax bl bx cl cx dx
// LiveOut: CZ dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: sp
fn0800_8F2F_entry:
// DataOut: al ax bl bx cl cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F2F:
	word16 dx_11 = dx + (ax >>u 0x04)
	word16 cx_21 = cx + (bx >>u 0x04)
	byte dl_12
	*dlOut = (byte) dx_11
	word16 ax_16 = DPB(ax >>u 0x04, bl, 8)
	word16 bx_23 = DPB(bx >>u 0x04, bl, 0)
	byte CZ_33 = cond(dx_11 - cx_21)
	branch dx_11 != cx_21 l0800_8F4F
// DataOut: ax bx dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp

l0800_8F4D:
	CZ_33 = cond((ax_16 & 0x000F) - (bx_23 & 0x000F)) (alias)
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

l0800_8F4F:
	return CZ_33
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

fn0800_8F2F_exit:
// DataOut: dl
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx



word16 fn0800_8F50(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax dl dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_8F50_entry:
	*dxOut = dx
// DataOut: al di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F50:
	word16 wLoc04_33
	word16 ax_21
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0002) == 0x0000 l0800_8F66
// DataOut: al di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F66:
	word16 dx_54 = (word16) ptrArg04
	*dxOut = dx_54
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_21) l0800_8F79
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_8F79:
	wLoc04_33 = ax_21
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F77:
// DataOut: ax di dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F60:
	wLoc04_33 = 0x0005
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F7A:
	ax_21 = fn0800_8D2B(ds, wLoc04_33)
// DataOut: ax di dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 bx:<invalid> ax:0x0005 ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_8F7D:
	return ax_21
// DataOut: ax di dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F50_exit:
// DataOut: ax dl dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_8F7F(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_8F7F_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8F7F:
	word16 ax_11 = DPB(ax, 0x41, 8)
	byte dl_16 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_8F91
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F91:
	fn0800_8D2B(ds, ax_11)
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F8D:
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F95:
	return dl_16
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F7F_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



void fn0800_8F97(word16 bx, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds ss
// LiveOut: sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn0800_8F97_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F97:
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8FC6:
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 0x0002 -48(fp):di -46(fp):si -8(fp):0x0000 -6(fp):0x0000 -2(fp):bp

l0800_8FC7_thunk_fn0800_8FC8:
	fn0800_8FC8(bx, fp - 0x0002, di, ds)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 -50(fp):es -48(fp):di -46(fp):si -8(fp):0x0000 -6(fp):0x0000 -2(fp):bp

fn0800_8F97_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -50(fp):es -48(fp):di -46(fp):si -8(fp):0x0000 -6(fp):0x0000 -2(fp):bp



word16 fn0800_8FAB(word16 bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di es
// Trashed: SCZO di dil edi es rdi
// Preserved: sp
fn0800_8FAB_entry:
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8FAB:
	ptr32 es_di_5 = Mem0[ss:bp + 0x0010:segptr32]
	word16 di_6 = (word16) es_di_5
	branch (Mem0[ss:bp - 0x0001:byte] & 0x20) == 0x00 l0800_8FBC
// DataOut: ax bp bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8FBC:
	word16 di_26 = Mem0[es_di_5:word16]
	Mem33[ss:bp + 0x0010:word16] = Mem0[ss:bp + 0x0010:word16] + 0x0002
	selector es_29
	*esOut = ds
	return di_26
// DataOut: ax bp bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid>

l0800_8FB4:
	ptr32 es_di_19 = Mem0[ds:di_6:segptr32]
	Mem23[ss:bp + 0x0010:word16] = Mem0[ss:bp + 0x0010:word16] + 0x0004
	selector es_21
	*esOut = SLICE(es_di_19, selector, 16)
	return (word16) es_di_19
// DataOut: ax bp bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid>

fn0800_8FAB_exit:
// DataOut: di es
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> di:<invalid> es:ds -2(fp):ds



void fn0800_8FC8(word16 bx, word16 bp, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx di ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi es esi esp rax rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
l0800_8FC8:
	si = Mem0[ss:bp + 0x000C:word16]
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn:

l0800_8FC8_thunk_fn0800_8FCB:
	fn0800_8FCB(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn:

fn0800_8FC8_entry:
	def fp
	def ss
	def bp
	def Mem0
	def bx
	def di
	def ds
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8FC8:
	sp_1 = fp
	si_5 = Mem0[ss:bp + 0x000C:word16]
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8FC8_thunk_fn0800_8FCB:
	fn0800_8FCB(bx, bp, si_5, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp si:<invalid>

fn0800_8FC8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid>



void fn0800_8FCB(word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi es esi esp rax rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn0800_8FCB_entry:
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_8FCB:
	sp = v3
	es = Mem0[ss:bp + 0x000E:selector]
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	al = al | al
	ax = DPB(ax, al, 0) (alias)
	SZO = cond(al)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_9042
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_9042:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>

l0800_8FD4:
	SCZO = cond(al - 0x25)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_9045
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_9045:
	Mem0[ss:bp - 0x000A:word16] = 0xFFFF
	es = Mem0[ss:bp + 0x000E:selector]
	Mem0[ss:bp - 0x0001:byte] = 0x20
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	ax = (int16) al
	Mem0[ss:bp + 0x000C:word16] = si
	v36 = ax
	ax = di
	di = v36
	di = di | di
	SZO = cond(di)
	SO = SZO (alias)
	C = false
	branch Test(LT,SO) l0800_9075
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>

l0800_9075:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>

l0800_93BE:
	sp = v3
	es = Mem0[ss:sp:selector]
	sp = sp + 0x0002
	ax = Mem0[ss:bp - 0x0004:word16]
// DataOut: bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid>

l0800_9453:
	di = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	si = Mem0[ss:sp:word16]
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 0x0002 es:<invalid> ax:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid>

fn0800_93BE_exit:
	di_4 = PHI(di, di)
	si_5 = PHI(si, si)
	bp_6 = PHI(bp, bp)
	sp_7 = PHI(sp, sp)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> al:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid>

l0800_905C:
	bl = Mem0[ds:di + 0x257C:byte]
	bh = 0x00
	bx = DPB(bx, bh, 8) (alias)
	SCZO = cond(bx - 0x0015)
	CZ = SCZO (alias)
	branch Test(ULE,CZ) l0800_906A
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>

l0800_906A:
	bx = bx << 0x0001
	bl = (byte) bx (alias)
	bh = SLICE(bx, byte, 8) (alias)
	SCZO = cond(bx)
	switch (di) { l0800_93BE }
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:0x00 cx:<invalid> bx:<invalid>

l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid>

l0800_9067:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:0x00 cx:<invalid> bx:<invalid>

l0800_9067_thunk_fn0800_93A6:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> bx:<invalid>

l0800_8FD8:
	ax = (int16) al
	v15 = ax
	ax = di
	di = v15
	v17 = Mem0[ss:bp - 0x0006:word16] + 0x0001
	Mem0[ss:bp - 0x0006:word16] = v17
	SZO = cond(v17)
	v18 = Mem0[ss:bp + 0x000A:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v18
	v19 = Mem0[ss:bp + 0x0008:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v19
	call SEQ(cs, Mem0[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		defs: al,ax,bh,bl,bp,bx,C,cs,cx,CZ,di,ds,es,S,SCZO,si,SO,sp,ss,SZO,Z
	cx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	cx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	ax = ax | ax
	al = (byte) ax (alias)
	SZO = cond(ax)
	SO = SZO (alias)
	C = false
	branch Test(LT,SO) l0800_9016
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_8FEC:
	ax = (int16) al
	al = (byte) ax (alias)
	di = di | di
	SZO = cond(di)
	S = SZO (alias)
	C = false
	branch Test(SG,S) l0800_902B
// DataOut: al ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_8FF1:
	SCZO = cond(Mem0[ds:di + 0x257C:byte] - 0x01)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_902B
// DataOut: al ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_902B:
	SCZO = cond(ax - di)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_8FCB
// DataOut: ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_902F:
	v33 = Mem0[ss:bp + 0x000A:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v33
	v34 = Mem0[ss:bp + 0x0008:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v34
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = ax
	call SEQ(cs, Mem0[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
		defs: al,ax,bh,bl,bp,bx,C,cs,cx,CZ,di,ds,es,S,SCZO,si,SO,sp,ss,SZO,Z
	sp = sp + 0x0006
	SCZO = cond(sp)
	v35 = Mem0[ss:bp - 0x0006:word16] - 0x0001
	Mem0[ss:bp - 0x0006:word16] = v35
	SZO = cond(v35)
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>

l0800_903C_thunk_fn0800_93A6:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>

l0800_8FF8:
	v24 = ax
	ax = bx
	al = (byte) ax (alias)
	bx = v24
	bl = (byte) bx (alias)
	bh = SLICE(bx, byte, 8) (alias)
	bl = bl | bl
	bx = DPB(bx, bl, 0) (alias)
	SZO = cond(bl)
	S = SZO (alias)
	C = false
	branch Test(SG,S) l0800_9019
// DataOut: ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_8FFD:
	SCZO = cond(Mem0[ds:bx + 0x257C:byte] - 0x01)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_9019
// DataOut: ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_9019:
	v30 = Mem0[ss:bp + 0x000A:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v30
	v31 = Mem0[ss:bp + 0x0008:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v31
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = bx
	call SEQ(cs, Mem0[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
		defs: al,ax,bh,bl,bp,bx,C,cs,cx,CZ,di,ds,es,S,SCZO,si,SO,sp,ss,SZO,Z
	sp = sp + 0x0006
	SCZO = cond(sp)
	v32 = Mem0[ss:bp - 0x0006:word16] - 0x0001
	Mem0[ss:bp - 0x0006:word16] = v32
	SZO = cond(v32)
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_9004:
	v27 = Mem0[ss:bp - 0x0006:word16] + 0x0001
	Mem0[ss:bp - 0x0006:word16] = v27
	SZO = cond(v27)
	v28 = Mem0[ss:bp + 0x000A:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v28
	v29 = Mem0[ss:bp + 0x0008:word16]
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = v29
	call SEQ(cs, Mem0[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		defs: al,ax,bh,bl,bp,bx,C,cs,cx,CZ,di,ds,es,S,SCZO,si,SO,sp,ss,SZO,Z
	cx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	cx = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	ax = ax | ax
	al = (byte) ax (alias)
	SZO = cond(ax)
	C = false
	branch Test(GT,SZO) l0800_8FF8
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>
// LocalsOut: v3(16)

l0800_9016:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid>

l0800_9016_thunk_fn0800_93A6:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid>

fn0800_8FCB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid>



void fn0800_90F2(word16 ax, word16 bx, word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: dx
fn0800_90F2_entry:
// DataOut: ax bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_90F2:
	word16 dx_22
	word16 bx_23
	word16 si_24
	word16 di_25
	word16 ax_26 = fn0800_94B0(ax, bx, ds, Mem0[ss:bp + 0x0008:word16], wArg00, wArg02, wArg04, ptrArg06, ptrArg0A, out dx_22, out bx_23, out si_24, out di_25)
	branch Mem0[ss:bp - 0x0008:word16] <= 0x0000 l0800_911F
// DataOut: ax bp bx di ds dx si ss
// DataOut (flags): SO
// SymbolicIn: sp:fp

l0800_911F:
	branch Mem0[ss:bp - 0x0008:word16] < 0x0000 l0800_9124
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_9124:
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_9124_thunk_fn0800_93A6:
	fn0800_93A6(bx_23, bp, si_24, di_25, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_9121:
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_9121_thunk_fn0800_93BE:
	fn0800_93BE(bx_23, bp, si_24, di_25, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_9121_thunk_fn0800_93BE:
	fn0800_93BE(bx_23, bp, si_24, di_25, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_9107:
	branch (Mem0[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_911C
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_910D:
	Mem52[ss:bp - 0x0004:word16] = Mem0[ss:bp - 0x0004:word16] + 0x0001
	selector es_54
	word16 di_55 = fn0800_8FAB(bp, ds, out es_54)
	Mem56[es_54:di_55:word16] = ax_26
	di_25 = di_55 + 0x0002
	branch (Mem56[ss:bp - 0x0001:byte] & 0x04) == 0x00 l0800_911C
// DataOut: bp bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_911A:
	Mem64[es_54:di_55 + 0x0002:word16] = dx_22
	di_25 = di_55 + 0x0004
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_911C:
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_911C_thunk_fn0800_8FC8:
	fn0800_8FC8(bx_23, bp, di_25, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_90F2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> di:<invalid> si:<invalid> ax:<invalid> bp:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_912A(word16 ax, word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi es esi esp rax rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_912A_entry:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_912A:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_912A_thunk_fn0800_93C5:
	fn0800_93C5(ax, bx, bp, si, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_912A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> es:<invalid> si:<invalid> bx:<invalid> di:<invalid> bl:<invalid> bh:<invalid>



void fn0800_9145(word16 ax, word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_9145_entry:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9145:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9145_thunk_fn0800_93EF:
	fn0800_93EF(ax, bx, bp, si, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9145_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> al:<invalid> si:<invalid> ch:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dl:<invalid>



void fn0800_9169(word16 ax, word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_9169_entry:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9169:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9169_thunk_fn0800_93EF:
	fn0800_93EF(ax, bx, bp, si, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9169_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> al:<invalid> si:<invalid> ch:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dl:<invalid>



void fn0800_920E(word16 ax, word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi es esi esp rax rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_920E_entry:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_920E:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_920E_thunk_fn0800_93C5:
	fn0800_93C5(ax, bx, bp, si, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_920E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> es:<invalid> si:<invalid> bx:<invalid> di:<invalid> bl:<invalid> bh:<invalid>



void fn0800_93A6(word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi es esi esp rax rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn0800_93A6_entry:
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_93A6:
	word16 sp_15
	selector ss_16
	word16 bp_17
	word16 ax_18
	selector cs_19
	byte SCZO_20
	byte C_21
	selector es_22
	word16 di_23
	word16 si_24
	word16 bx_25
	selector ds_26
	call SEQ(cs, Mem0[ss:bp + 0x0006:word16]) (retsize: 2; depth: 8)
		uses: ax_11,bp,cs,sp_12,ss,wLoc02_7,wLoc04_10,wLoc06_13
		defs: ax_18,bp_17,bx_25,C_21,cs_19,di_23,ds_26,es_22,SCZO_20,si_24,sp_15,ss_16
	Mem31[ss_16:bp_17 - 0x0004:word16] = Mem0[ss_16:bp_17 - 0x0004:word16] - (Mem0[ss_16:bp_17 - 0x0004:word16] <u 0x0001)
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_93BA_thunk_fn0800_8FCB:
	fn0800_8FCB(bx_25, bp_17, si_24, di_23, ds_26)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> -6(fp):0xFFFF -4(fp):<invalid> -2(fp):<invalid>

fn0800_93A6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -6(fp):0xFFFF -4(fp):<invalid> -2(fp):<invalid>



void fn0800_93BE(word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_93BE_entry:
	fn0800_8FCB(bx, bp, si, di, ds)
	return
	def di
	def si
	def bp
	def sp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_93BE:
	sp = v3
	es = Mem0[ss:sp:selector]
	sp = sp + 0x0002
	ax = Mem0[ss:bp - 0x0004:word16]
// DataOut: bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> al:<invalid> si:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid>

l0800_9453:
	di = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	si = Mem0[ss:sp:word16]
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:v3 + 0x0002 es:<invalid> ax:<invalid> al:<invalid> si:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid>

fn0800_93BE_exit:
	di_4 = PHI(di, di)
	si_5 = PHI(si, si)
	bp_6 = PHI(bp, bp)
	sp_7 = PHI(sp, sp)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> al:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid>



void fn0800_93C5(word16 ax, word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi es esi esp rax rbx rcx rdi rsi rsp si sil sp spl
// Preserved: bx
fn0800_93C5_entry:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_93C5:
	Mem8[ss:bp - 0x0006:word16] = Mem0[ss:bp - 0x0006:word16] + 0x0001
	word16 sp_17
	byte SZO_20
	selector cs_21
	word16 cx_22
	word16 ax_23
	byte C_24
	byte al_25
	byte S_26
	word16 bx_27
	selector ds_28
	byte SCZO_29
	byte Z_30
	word16 si_31
	word16 di_32
	call SEQ(cs, Mem8[ss:bp + 0x0004:word16]) (retsize: 2; depth: 6)
		uses: bp_3,cs,sp_14,ss_2,SZO_9,wLoc02_12,wLoc04_15
		defs: al_25,ax_23,bp_18,bx_27,C_24,cs_21,cx_22,di_32,ds_28,S_26,SCZO_29,si_31,sp_17,ss_19,SZO_20,Z_30
	byte al_38 = (byte) ax_23
	branch ax_23 <= 0x0000 l0800_93EA
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_93EA:
	branch ax_23 == 0x0000 l0800_93E4
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_93EC:
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_93ED_thunk_fn0800_93A6:
	fn0800_93A6(bx_27, bp, si_31, di_32, ds_28)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_93D7:
	word16 ax_65 = DPB(ax_23, al_38, 0)
	branch al_38 < 0x00 l0800_93E4
// DataOut: ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_93DB:
	branch Mem8[ds_28:ax_65 + 0x257C:byte] == 0x01 l0800_93C5
// DataOut: ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_93E4:
	word16 cx_62 = Mem8[ss:sp_17 + 0x0004:word16]
// DataOut: cx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_93E4_thunk_fn0800_93E5:
	fn0800_93E5(cx_62)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_93C5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_93E5(word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx
// LiveOut:
// Trashed: SCZO ch cl cx ecx esp rcx rsp sp spl
// Preserved:
fn0800_93E5_entry:
// DataOut: cx
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_93E5:
	word16 sp_5
	word16 cx_6
	byte SCZO_7
	call cx + 0x0003 (retsize: 4; depth: 4)
		uses: cx_3,SCZO_4,sp_1
		defs: cx_6,SCZO_7,sp_5
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_93E5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid>



void fn0800_93EF(word16 ax, word16 bx, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_93EF_entry:
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_93EF:
	word16 sp_1 = fp
	word16 dx_175 = 0x0000
	word16 cx_161 = 0x0004
	byte cl_146 = 0x04
// DataOut: ax bp bx cl cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_93F4:
	word16 v8_38 = Mem0[ss:bp - 0x000A:word16] - 0x0001
	Mem39[ss:bp - 0x000A:word16] = v8_38
	branch v8_38 < 0x0000 l0800_9442
// DataOut: ax bp bx cl cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9442:
// DataOut: bp bx cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_93F9:
	word16 sp_108 = sp_1 - 0x0002
	Mem109[ss:sp_108:word16] = dx_175
	Mem111[ss:sp_108 - 0x0002:word16] = cx_161
	Mem113[ss:bp - 0x0006:word16] = Mem111[ss:bp - 0x0006:word16] + 0x0001
	Mem117[ss:sp_108 - 0x0004:word16] = Mem113[ss:bp + 0x000A:word16]
	Mem120[ss:sp_108 - 0x0006:word16] = Mem117[ss:bp + 0x0008:word16]
	word16 sp_121
	word16 dx_122
	byte SCZO_123
	word16 cx_124
	byte SZO_127
	byte SO_128
	word16 ax_130
	byte C_131
	byte cl_132
	byte ch_133
	byte al_134
	byte dl_135
	byte Z_136
	call SEQ(cs, Mem120[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: al_24,ax_27,bp_30,bx_22,C_26,ch_32,cl_25,cs_28,cx_33,di_20,dl_34,ds_19,dx_35,SCZO_36,si_21,SO_41,sp_119,ss_29,SZO_114,Z_23
		defs: al_134,ax_130,bp_125,bx_137,C_131,ch_133,cl_132,cs_129,cx_124,di_139,dl_135,ds_140,dx_122,SCZO_123,si_138,SO_128,sp_121,ss_126,SZO_127,Z_136
	word16 cx_145 = Mem120[ss:sp_121 + 0x0004:word16]
	cl_146 = (byte) cx_145 (alias)
	word16 dx_148 = Mem120[ss:sp_121 + 0x0006:word16]
	sp_1 = sp_121 + 0x0008
	byte al_152 = (byte) ax_130
	branch ax_130 <= 0x0000 l0800_9444
// DataOut: al ax bp bx cl di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_940F:
	cl_146 = cl_146 - 0x01
	word16 cx_156 = DPB(cx_145, cl_146 - 0x01, 0)
	branch cl_146 < 0x01 l0800_9444
// DataOut: al ax bp bx cl di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9413:
	byte ch_160 = al_152 - 0x30
	cx_161 = DPB(cx_156, al_152 - 0x30, 8) (alias)
	branch al_152 <u 0x30 l0800_9444
// DataOut: ax bp bx ch cl cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_941A:
	branch al_152 <u 0x3A l0800_9436
// DataOut: ax bp bx ch cl cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x30 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_941F:
	byte ch_177 = al_152 - 0x41
	word16 cx_178 = DPB(cx_156, al_152 - 0x41, 8)
	branch al_152 <u 0x41 l0800_9444
// DataOut: ax bp bx ch cl di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x30 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9424:
	branch al_152 <u 0x47 l0800_9433
// DataOut: ax bp bx ch cl di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x41 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9429:
	ch_177 = al_152 - 0x61
	cx_178 = DPB(cx_156, al_152 - 0x61, 8) (alias)
	branch al_152 <u 0x61 l0800_9444
// DataOut: ax bp bx ch cl di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x41 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_942E:
	branch al_152 >=u 0x67 l0800_9444
// DataOut: ax bp bx ch cl di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x61 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9444:
	branch cl_146 == 0x04 l0800_944F
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_944F:
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9450_thunk_fn0800_93A6:
	fn0800_93A6(bx, bp, si, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9449:
	word16 sp_86
	word16 dx_87
	byte SCZO_88
	word16 cx_89
	word16 bp_90
	selector ss_91
	byte SZO_92
	byte SO_93
	selector cs_94
	word16 ax_95
	byte C_96
	byte cl_97
	byte ch_98
	byte al_99
	byte dl_100
	byte Z_101
	word16 bx_102
	word16 si_103
	word16 di_104
	selector ds_105
	call Mem39[ss:sp_1:word16] + 0x0003 (retsize: 4; depth: 4)
		uses: al_46,ax_49,bp_54,bx_45,C_48,ch_56,cl_47,cs_50,cx_84,di_43,dl_58,ds_42,dx_59,SCZO_85,si_44,SO_51,sp_83,ss_53,SZO_52,Z_61
		defs: al_99,ax_95,bp_90,bx_102,C_96,ch_98,cl_97,cs_94,cx_89,di_104,dl_100,ds_105,dx_87,SCZO_88,si_103,SO_93,sp_86,ss_91,SZO_92,Z_101
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

fn0800_93EF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> al:<invalid> si:<invalid> ch:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9433:
	ch_160 = ch_177 + 0x0A
	cx_161 = DPB(cx_178, ch_160, 8) (alias)
// DataOut: ax bp bx ch cl cx di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9436:
	dx_175 = DPB(dx_148 << 0x0004, (byte) (dx_148 << 0x0004) + ch_160, 0) (alias)
// DataOut: ax bp bx cl cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000



byte fn0800_9485(byte cl, byte bl, ptr16 & blOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl cl
// LiveOut: C bl
// Trashed: SCZO bh bl bx ebx rbx
// Preserved: bx sp
fn0800_9485_entry:
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9485:
	byte C_13
	byte bl_29
	*blOut = bl - 0x30
	branch bl <u 0x30 l0800_94AD
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(8)

l0800_948B:
	branch bl <=u 0x39 l0800_94A2
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16) Local -0002(8)

l0800_9490:
	branch bl >u 0x5A l0800_949A
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16) Local -0002(8)

l0800_949A:
	*blOut = bl - 0x57
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16) Local -0002(8)

l0800_9495:
	*blOut = bl - 0x37
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16) Local -0002(8)

l0800_949D:
	branch bl_29 <=u 0x09 l0800_94AD
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:<invalid> -2(fp):bx
// LocalsOut: fp(16) Local -0002(8)

l0800_94A2:
	branch bl_29 >=u cl l0800_94AD
// DataOut: bl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:<invalid> -2(fp):bx
// LocalsOut: fp(16) Local -0002(8)

l0800_94AD:
	byte bl_20
	*blOut = (byte) bx
	C_13 = true
// DataOut: bl cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bl:<invalid> -2(fp):bx

l0800_94A6:
	C_13 = false
// DataOut: bl cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bl:<invalid> -2(fp):bx

l0800_94AF:
	return C_13
// DataOut: bl cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx

fn0800_9485_exit:
// DataOut: bl
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx



word16 fn0800_94B0(word16 ax, word16 bx, selector ds, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, segptr32 ptrArg0E, segptr32 ptrArg12, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx ds ss
// LiveOut: ax bx di dx si
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: al bp sp
// Stack args: Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)
fn0800_94B0_entry:
// DataOut: ax bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94B0:
	word16 sp_1016 = fp - 0x000C
	byte bLoc03_1025 = 0x00
	word16 wLoc06_1033 = 0x0000
	word16 wLoc08_131 = 0x0001
// DataOut: ax bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94C6:
	word16 ax_180
	word16 v8_21 = wLoc06_1033 + 0x0001
	word16 sp_26 = sp_1016 - 0x0002
	Mem27[ss:sp_26:word16] = wArg08
	Mem31[ss:sp_26 - 0x0002:word16] = wArg06
	wLoc06_1033 = v8_21
	word16 sp_33
	word16 bp_34
	byte SCZO_36
	word16 si_37
	word16 di_38
	byte SZO_39
	selector cs_40
	word16 cx_41
	word16 ax_42
	byte C_43
	byte SO_44
	byte al_45
	word16 bx_46
	byte bl_47
	byte Z_48
	selector ds_49
	byte CZ_50
	byte cl_51
	selector es_52
	word16 dx_53
	byte dl_54
	byte dh_55
	byte ah_56
	call SEQ(cs, Mem31[ss:fp + 0x0002:word16]) (retsize: 2; depth: 2)
		uses: bLoc03_14,bp_5,cs,di,SCZO_7,si,sp_30,ss_18,SZO_23,wLoc02_4,wLoc06_22,wLoc08_16,wLoc0A_10,wLoc0C_13
		defs: ah_56,al_45,ax_42,bl_47,bp_34,bx_46,C_43,cl_51,cs_40,cx_41,CZ_50,dh_55,di_38,dl_54,ds_49,dx_53,es_52,SCZO_36,si_37,SO_44,sp_33,ss_35,SZO_39,Z_48
	sp_1016 = sp_33 + 0x0004
	word16 ax_1069 = ax_42
	byte al_64 = (byte) ax_42
	branch ax_42 < 0x0000 l0800_9549
// DataOut: al ax bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94D8:
	word16 ax_221 = (int16) al_64
	byte bl_230 = (byte) ax_221
	branch (bl_230 & 0x80) != 0x00 l0800_94E7
// DataOut: ax bl bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94DF:
	branch (Mem31[ds_49:ax_221 + 0x2251:byte] & 0x01) != 0x00 l0800_94C6
// DataOut: ax bl bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94E7:
	ax_1069 = ax_221
	byte al_1072 = (byte) ax_221
	word16 wArg0C_1029 = wArg0C - 0x0001
	branch wArg0C < 0x0001 l0800_9550
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94ED:
	word16 bp_1042
	selector cs_1048
	branch al_1072 == 0x2B l0800_94F8
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F1:
	cs_1048 = cs_40
	bp_1042 = bp_34
	branch al_1072 != 0x2D l0800_950F
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F5:
	bLoc03_1025 = 0x01
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F8:
	wArg0C_1029 = wArg0C - 0x0002
	branch wArg0C < 0x0002 l0800_9550
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94FD:
	Mem1037[ss:sp_33 + 0x0002:word16] = wArg08
	Mem1040[ss:sp_33:word16] = wArg06
	wLoc06_1033 = v8_21 + 0x0001
	word16 sp_1041
	byte SCZO_1044
	word16 si_1045
	word16 di_1046
	byte SZO_1047
	word16 cx_1049
	word16 ax_1050
	byte C_1051
	byte SO_1052
	byte al_1053
	word16 bx_1054
	byte bl_1055
	byte Z_1056
	selector ds_1057
	byte CZ_1058
	byte cl_1059
	selector es_1060
	word16 dx_1061
	byte dl_1062
	byte dh_1063
	byte ah_1064
	call SEQ(cs_40, Mem1040[ss:bp_34 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_242,al_241,ax_238,bl_230,bLoc03_1025,bp_34,bx_244,C_235,cl_51,cs_40,cx_59,CZ_50,dh_55,di_236,dl_54,ds_49,dx_53,es_52,SCZO_1027,si_37,SO_1031,sp_1039,ss_35,SZO_1034,wLoc02_4,wLoc06_1033,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_1026
		defs: ah_1064,al_1053,ax_1050,bl_1055,bp_1042,bx_1054,C_1051,cl_1059,cs_1048,cx_1049,CZ_1058,dh_1063,di_1046,dl_1062,ds_1057,dx_1061,es_1060,SCZO_1044,si_1045,SO_1052,sp_1041,ss_1043,SZO_1047,Z_1056
	sp_1016 = sp_1041 + 0x0004
	ax_1069 = ax_1050
	al_1072 = (byte) ax_1050 (alias)
	branch ax_1050 < 0x0000 l0800_9549
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9549:
	wLoc08_131 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_950F:
	word16 ax_460
	word16 si_310 = 0x0000
	word16 di_313 = 0x0000
	byte cl_318 = (byte) wArg0A
	branch wArg0A == 0x0000 l0800_956E
// DataOut: al ax cl cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_956E:
	wArg0A = 0x000A
	branch al_1072 != 0x30 l0800_959E
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9577:
	word16 v87_975 = wArg0C_1029 - 0x0001
	wArg0C_1029 = v87_975
	branch v87_975 < 0x0000 l0800_956B
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_957C:
	word16 sp_983 = sp_1016 - 0x0002
	Mem984[ss:sp_983:word16] = wArg08
	Mem987[ss:sp_983 - 0x0002:word16] = wArg06
	wLoc06_1033 = wLoc06_1033 + 0x0001
	word16 sp_988
	byte SCZO_991
	byte SZO_994
	word16 cx_996
	byte C_998
	byte SO_999
	byte al_1000
	word16 bx_1001
	byte bl_1002
	byte Z_1003
	selector ds_1004
	byte CZ_1005
	byte cl_1006
	selector es_1007
	word16 dx_1008
	byte dl_1009
	byte dh_1010
	byte ah_1011
	call SEQ(cs_1048, Mem987[ss:bp_1042 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_298,al_297,ax_296,bl_307,bLoc03_286,bp_308,bx_306,C_300,cl_318,cs_291,cx_316,CZ_288,dh_304,di_313,dl_303,ds_289,dx_301,es_305,SCZO_972,si_310,SO_978,sp_986,ss_292,SZO_981,wLoc02_4,wLoc06_980,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_973
		defs: ah_1011,al_1000,ax_997,bl_1002,bp_989,bx_1001,C_998,cl_1006,cs_995,cx_996,CZ_1005,dh_1010,di_993,dl_1009,ds_1004,dx_1008,es_1007,SCZO_991,si_992,SO_999,sp_988,ss_990,SZO_994,Z_1003
	sp_1016 = sp_988 + 0x0004
	wArg0A = 0x0008
	branch al_1000 == 0x78 l0800_9597
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9593:
	branch al_1000 != 0x58 l0800_95C8
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0008 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9597:
	wArg0A = 0x0010
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0008 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9518:
	branch wArg0A >u 0x0024 l0800_9550
// DataOut: al ax cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_951D:
	branch cl_318 <u 0x02 l0800_9550
// DataOut: al ax cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9522:
	branch al_1072 != 0x30 l0800_959E
// DataOut: al cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_959E:
	byte bl_900
	branch fn0800_9485(0x0A, (byte) ax_1069, out bl_900) l0800_9550
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9550:
	wLoc08_131 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_9555:
	word16 sp_141 = sp_1016 - 0x0002
	Mem142[ss:sp_141:word16] = wArg08
	Mem145[ss:sp_141 - 0x0002:word16] = wArg06
	Mem147[ss:sp_141 - 0x0004:word16] = ax_1069
	word16 sp_148
	word16 bp_149
	byte SCZO_151
	word16 si_152
	word16 di_153
	byte SZO_154
	selector cs_155
	word16 cx_156
	word16 ax_157
	byte C_158
	byte SO_159
	byte al_160
	word16 bx_161
	byte bl_162
	byte Z_163
	selector ds_164
	byte CZ_165
	byte cl_166
	selector es_167
	word16 dx_168
	byte dl_169
	byte dh_170
	byte ah_171
	call SEQ(cs_40, Mem147[ss:bp_34 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_65,al_64,ax_135,bl_47,bLoc03_129,bp_34,bx_46,C_69,cl_51,cs_40,cx_59,CZ_50,dh_55,di_38,dl_54,ds_49,dx_53,es_52,SCZO_36,si_37,SO_68,sp_146,ss_133,SZO_67,wLoc02_4,wLoc06_134,wLoc08_131,wLoc0A_10,wLoc0C_13,Z_48
		defs: ah_171,al_160,ax_157,bl_162,bp_149,bx_161,C_158,cl_166,cs_155,cx_156,CZ_165,dh_170,di_153,dl_169,ds_164,dx_168,es_167,SCZO_151,si_152,SO_159,sp_148,ss_150,SZO_154,Z_163
	sp_1016 = sp_148 + 0x0006
	wLoc06_1033 = wLoc06_1033 - 0x0001
	ax_180 = 0x0000 (alias)
	word16 dx_182
	*dxOut = 0x0000
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_95A8:
	si_310 = ax_1069
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:0x000A ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9526:
	branch cl_318 != 0x10 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_952B:
	word16 v32_926 = wArg0C_1029 - 0x0001
	wArg0C_1029 = v32_926
	branch v32_926 < 0x0000 l0800_956B
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_956B:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9530:
	word16 sp_934 = sp_1016 - 0x0002
	Mem935[ss:sp_934:word16] = wArg08
	Mem938[ss:sp_934 - 0x0002:word16] = wArg06
	wLoc06_1033 = wLoc06_1033 + 0x0001
	word16 sp_939
	byte SCZO_942
	byte SZO_945
	word16 cx_947
	byte C_949
	byte SO_950
	byte al_951
	word16 bx_952
	byte bl_953
	byte Z_954
	selector ds_955
	byte CZ_956
	byte cl_957
	selector es_958
	word16 dx_959
	byte dl_960
	byte dh_961
	byte ah_962
	call SEQ(cs_1048, Mem938[ss:bp_1042 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_298,al_297,ax_296,bl_307,bLoc03_286,bp_308,bx_306,C_921,cl_318,cs_291,cx_316,CZ_919,dh_304,di_313,dl_303,ds_289,dx_301,es_305,SCZO_924,si_310,SO_929,sp_937,ss_292,SZO_932,wLoc02_4,wLoc06_931,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_925
		defs: ah_962,al_951,ax_948,bl_953,bp_940,bx_952,C_949,cl_957,cs_946,cx_947,CZ_956,dh_961,di_944,dl_960,ds_955,dx_959,es_958,SCZO_942,si_943,SO_950,sp_939,ss_941,SZO_945,Z_954
	sp_1016 = sp_939 + 0x0004
	branch al_951 == 0x78 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9542:
	branch al_951 == 0x58 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_959C:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0010 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9546:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95C8:
	byte cl_504 = (byte) wArg0A
	byte bl_509
	byte C_510 = fn0800_9485(cl_504, (byte) ax_460, out bl_509)
	word16 ax_512 = ax_460
	branch C_510 l0800_95AB
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95AB:
	int32 dx_ax_645 = wArg0A *u si_310
	ui32 di_si_652 = SEQ(di_313, ax_460 + (word16) dx_ax_645) + dx_ax_645
	di_313 = SLICE(di_si_652, word16, 16) (alias)
	si_310 = (word16) di_si_652 (alias)
	cs_662 = cs_1048
	bp_685 = bp_1042
	branch di_si_652 != 0x00000000 l0800_95E5
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95E5:
	selector cs_662
	word16 bp_685
	word16 v59_687 = wArg0C_1029 - 0x0001
	branch v59_687 < 0x0000 l0800_9612
	wArg0C_1029 = v59_687 - 0x0001
	branch v59_687 < 0x0001 l0800_9612
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95EA:
	word16 sp_699 = sp_1016 - 0x0002
	Mem700[ss:sp_699:word16] = wArg08
	Mem703[ss:sp_699 - 0x0002:word16] = wArg06
	word16 sp_704
	word16 bp_705
	selector ss_706
	byte SCZO_707
	word16 si_708
	word16 di_709
	byte SZO_710
	selector cs_711
	word16 cx_712
	word16 ax_713
	byte C_714
	byte SO_715
	byte al_716
	word16 bx_717
	byte bl_718
	byte Z_719
	selector ds_720
	byte CZ_721
	byte cl_722
	selector es_723
	word16 dx_724
	byte dl_725
	byte dh_726
	byte ah_727
	call SEQ(cs_662, Mem703[ss:bp_685 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_668,al_667,ax_666,bl_678,bLoc03_286,bp_685,bx_677,C_670,cl_658,cs_662,cx_661,CZ_659,dh_674,di_679,dl_673,ds_660,dx_671,es_676,SCZO_675,si_682,SO_694,sp_702,ss_663,SZO_697,wLoc02_4,wLoc06_696,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_665
		defs: ah_727,al_716,ax_713,bl_718,bp_705,bx_717,C_714,cl_722,cs_711,cx_712,CZ_721,dh_726,di_709,dl_725,ds_720,dx_724,es_723,SCZO_707,si_708,SO_715,sp_704,ss_706,SZO_710,Z_719
	byte cl_733 = (byte) wArg0A
	word16 v60_695 = wLoc06_1033 + 0x0001
	byte bl_738
	byte C_739 = fn0800_9485(cl_733, (byte) ax_713, out bl_738)
	branch C_739 l0800_95D4
	Mem748[ss_706:sp_704 + 0x0002:word16] = wArg08
	Mem751[ss_706:sp_704:word16] = wArg06
	wLoc06_1033 = v60_695 + 0x0001
	word16 sp_752
	byte SCZO_755
	word16 si_756
	word16 di_757
	byte SZO_758
	word16 cx_760
	word16 ax_761
	byte C_762
	byte SO_763
	byte al_764
	word16 bx_765
	byte bl_766
	byte Z_767
	selector ds_768
	byte CZ_769
	byte cl_770
	selector es_771
	word16 dx_772
	byte dl_773
	byte dh_774
	byte ah_775
	call SEQ(cs_711, Mem751[ss_706:bp_705 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_727,al_716,ax_741,bl_738,bLoc03_286,bp_705,bx_742,C_739,cl_733,cs_711,cx_732,CZ_721,dh_726,di_709,dl_725,ds_720,dx_724,es_723,SCZO_707,si_708,SO_715,sp_750,ss_706,SZO_745,wLoc02_4,wLoc06_744,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_719
		defs: ah_775,al_764,ax_761,bl_766,bp_753,bx_765,C_762,cl_770,cs_759,cx_760,CZ_769,dh_774,di_757,dl_773,ds_768,dx_772,es_771,SCZO_755,si_756,SO_763,sp_752,ss_754,SZO_758,Z_767
	sp_1016 = sp_752 + 0x0004
	ax_512 = ax_761
	byte bl_787
	branch fn0800_9485((byte) wArg0A, (byte) ax_761, out bl_787) l0800_95D4
// DataOut: ax cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95D4:
	int32 dx_ax_800 = wArg0A *u si_756
	word16 ax_801 = (word16) dx_ax_800
	ui32 ax_si_816 = SEQ(di_757, ax_761 + ax_801) + SEQ(SLICE(dx_ax_800, word16, 16), ax_801)
	int32 dx_ax_810 = wArg0A *u di_757
	si_310 = (word16) ax_si_816 (alias)
	di_313 = SLICE(ax_si_816, word16, 16)
	branch SLICE(dx_ax_810, byte, 16) + SLICE(dx_ax_810, byte, 24) + (ax_si_816 <u 0x00000000) != 0x00 l0800_9636
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9636:
	byte ah_841 = (bLoc03_1025 <u 0xFF) + 0xFF
	ax_180 = DPB(0xFFFF, ah_841, 8) (alias)
	word16 dx_847
	*dxOut = (ah_841 <u 0x00) + 0x7FFF
	wLoc08_131 = 0x0002
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_95B5:
	word16 v45_397 = wArg0C_1029 - 0x0001
	branch v45_397 < 0x0000 l0800_9612
	wArg0C_1029 = v45_397 - 0x0001
	branch v45_397 < 0x0001 l0800_9612
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95BA:
	word16 sp_409 = sp_1016 - 0x0002
	Mem410[ss:sp_409:word16] = wArg08
	Mem413[ss:sp_409 - 0x0002:word16] = wArg06
	word16 sp_414
	word16 bp_415
	selector ss_416
	byte SCZO_417
	word16 si_418
	word16 di_419
	byte SZO_420
	selector cs_421
	word16 cx_422
	word16 ax_423
	byte C_424
	byte SO_425
	byte al_426
	word16 bx_427
	byte bl_428
	byte Z_429
	selector ds_430
	byte CZ_431
	byte cl_432
	selector es_433
	word16 dx_434
	byte dl_435
	byte dh_436
	byte ah_437
	call SEQ(cs_1048, Mem413[ss:bp_1042 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_379,al_378,ax_377,bl_389,bLoc03_286,bp_395,bx_388,C_381,cl_369,cs_373,cx_372,CZ_370,dh_385,di_390,dl_384,ds_371,dx_382,es_387,SCZO_386,si_392,SO_404,sp_412,ss_374,SZO_407,wLoc02_4,wLoc06_406,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_376
		defs: ah_437,al_426,ax_423,bl_428,bp_415,bx_427,C_424,cl_432,cs_421,cx_422,CZ_431,dh_436,di_419,dl_435,ds_430,dx_434,es_433,SCZO_417,si_418,SO_425,sp_414,ss_416,SZO_420,Z_429
	Mem447[ss_416:sp_414 + 0x0002:word16] = wArg08
	Mem450[ss_416:sp_414:word16] = wArg06
	wLoc06_1033 = wLoc06_1033 + 0x0002
	word16 sp_451
	byte SCZO_454
	byte SZO_457
	word16 cx_459
	byte C_461
	byte SO_462
	byte al_463
	word16 bx_464
	byte bl_465
	byte Z_466
	selector ds_467
	byte CZ_468
	byte cl_469
	selector es_470
	word16 dx_471
	byte dl_472
	byte dh_473
	byte ah_474
	call SEQ(cs_421, Mem450[ss_416:bp_415 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_437,al_426,ax_423,bl_428,bLoc03_286,bp_415,bx_427,C_424,cl_432,cs_421,cx_440,CZ_431,dh_436,di_419,dl_435,ds_430,dx_434,es_433,SCZO_417,si_418,SO_425,sp_449,ss_416,SZO_444,wLoc02_4,wLoc06_443,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_429
		defs: ah_474,al_463,ax_460,bl_465,bp_452,bx_464,C_461,cl_469,cs_458,cx_459,CZ_468,dh_473,di_456,dl_472,ds_467,dx_471,es_470,SCZO_454,si_455,SO_462,sp_451,ss_453,SZO_457,Z_466
	sp_1016 = sp_451 + 0x0004
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95D2:
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_9602:
	word16 sp_531 = sp_1016 - 0x0002
	Mem532[ss:sp_531:word16] = wArg08
	Mem535[ss:sp_531 - 0x0002:word16] = wArg06
	Mem537[ss:sp_531 - 0x0004:word16] = ax_512
	word16 sp_538
	word16 bp_539
	selector ss_540
	byte SCZO_541
	word16 si_542
	word16 di_543
	byte SZO_544
	selector cs_545
	word16 cx_546
	word16 ax_547
	byte C_548
	byte SO_549
	byte al_550
	word16 bx_551
	byte bl_552
	byte Z_553
	selector ds_554
	byte CZ_555
	byte cl_556
	selector es_557
	word16 dx_558
	byte dl_559
	byte dh_560
	byte ah_561
	call SEQ(cs_1048, Mem537[ss:bp_1042 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_516,al_515,ax_522,bl_509,bLoc03_286,bp_500,bx_518,C_510,cl_504,cs_485,cx_502,CZ_482,dh_493,di_497,dl_492,ds_483,dx_491,es_495,SCZO_494,si_498,SO_484,sp_536,ss_520,SZO_488,wLoc02_4,wLoc06_521,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_489
		defs: ah_561,al_550,ax_547,bl_552,bp_539,bx_551,C_548,cl_556,cs_545,cx_546,CZ_555,dh_560,di_543,dl_559,ds_554,dx_558,es_557,SCZO_541,si_542,SO_549,sp_538,ss_540,SZO_544,Z_553
	Mem569[ss_540:sp_538 + 0x0004:word16] = wArg08
	Mem572[ss_540:sp_538 + 0x0002:word16] = wArg06
	Mem574[ss_540:sp_538:word16] = ax_547
	word16 sp_575
	word16 bp_576
	selector ss_577
	byte SCZO_578
	word16 si_579
	word16 di_580
	byte SZO_581
	selector cs_582
	word16 cx_583
	word16 ax_584
	byte C_585
	byte SO_586
	byte al_587
	word16 bx_588
	byte bl_589
	byte Z_590
	selector ds_591
	byte CZ_592
	byte cl_593
	selector es_594
	word16 dx_595
	byte dl_596
	byte dh_597
	byte ah_598
	call SEQ(cs_545, Mem574[ss_540:bp_539 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_561,al_550,ax_547,bl_552,bLoc03_286,bp_539,bx_551,C_548,cl_556,cs_545,cx_546,CZ_555,dh_560,di_543,dl_559,ds_554,dx_558,es_557,SCZO_563,si_542,SO_549,sp_573,ss_540,SZO_566,wLoc02_4,wLoc06_565,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_553
		defs: ah_598,al_587,ax_584,bl_589,bp_576,bx_588,C_585,cl_593,cs_582,cx_583,CZ_592,dh_597,di_580,dl_596,ds_591,dx_595,es_594,SCZO_578,si_579,SO_586,sp_575,ss_577,SZO_581,Z_590
	Mem606[ss_577:sp_575 + 0x0004:word16] = wArg08
	Mem609[ss_577:sp_575 + 0x0002:word16] = wArg06
	Mem611[ss_577:sp_575:word16] = ax_584
	word16 sp_612
	word16 bp_613
	byte SCZO_615
	byte SZO_618
	selector cs_619
	word16 cx_620
	word16 ax_621
	byte C_622
	byte SO_623
	byte al_624
	word16 bx_625
	byte bl_626
	byte Z_627
	selector ds_628
	byte CZ_629
	byte cl_630
	selector es_631
	word16 dx_632
	byte dl_633
	byte dh_634
	byte ah_635
	call SEQ(cs_582, Mem611[ss_577:bp_576 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_598,al_587,ax_584,bl_589,bLoc03_286,bp_576,bx_588,C_585,cl_593,cs_582,cx_583,CZ_592,dh_597,di_580,dl_596,ds_591,dx_595,es_594,SCZO_600,si_579,SO_586,sp_610,ss_577,SZO_603,wLoc02_4,wLoc06_602,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_590
		defs: ah_635,al_624,ax_621,bl_626,bp_613,bx_625,C_622,cl_630,cs_619,cx_620,CZ_629,dh_634,di_617,dl_633,ds_628,dx_632,es_631,SCZO_615,si_616,SO_623,sp_612,ss_614,SZO_618,Z_627
	sp_1016 = sp_612 + 0x0006
	wLoc06_1033 = wLoc06_1033 - 0x0003
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9612:
	word16 dx_342
	*dxOut = di_313
	ax_180 = si_310
	branch bLoc03_1025 == 0x00 l0800_9622
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_961B:
	ax_180 = -si_310
	word16 dx_362
	*dxOut = -di_313 - (ax_180 == 0x0000)
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9622:
	Mem106[ptrArg0E:word16] = Mem31[ptrArg0E:word16] + wLoc06_1033
	Mem114[ptrArg12:word16] = wLoc08_131
	word16 bx_112
	*bxOut = wLoc08_131
// DataOut: ax bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16)

l0800_964C:
	word16 di_115
	*diOut = Mem114[ss:sp_1016:word16]
	word16 si_119
	*siOut = Mem114[ss:sp_1016 + 0x0002:word16]
	return ax_180
// DataOut: ax bx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_94B0_exit:
// DataOut: ax bx di dx si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>



void fn0800_9652(byte al, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed: ah ax ch cl cx dh dl dx eax ecx edx es esi rax rcx rdx rsi si sil
// Preserved: bp si sp
// Stack args: Stack +0002(32)
fn0800_9652_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_9652:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9652_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2B Sequence es:si:<invalid> cx:<invalid> dx:<invalid> si:si -4(fp):si -2(fp):bp



void fn0800_9667(byte al, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed: ah ax ch cl cx dh dl dx eax ecx edx es esi rax rcx rdx rsi si sil
// Preserved: bp si sp
// Stack args: Stack +0002(32)
fn0800_9667_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_9667:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9667_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2D Sequence es:si:<invalid> cx:<invalid> dx:<invalid> si:si -4(fp):si -2(fp):bp



word16 fn0800_9764(byte dl, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl ds ss
// LiveOut: ax di dl ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9764_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0014(16) Stack +0002(16) Stack +0004(16)

l0800_9764:
	fn0800_8B95((byte) (fp - 0x0006), dl, DPB(ptrLoc12, fp - 0x0006, 0))
	fn0800_8BA8((byte) (fp - 0x000A), (byte) ss, DPB(ptrLoc12, fp - 0x000A, 0))
	word16 dx_48
	word16 di_49
	selector ds_50
	word16 ax_51 = fn0800_C04F(ds, DPB(ptrLoc16, fp - 0x0006, 0), DPB(ptrLoc12, fp - 0x000A, 0), out dx_48, out di_49, out ds_50)
	branch (wArg02 | wArg04) == 0x0000 l0800_97AC
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_979C:
	Mem84[ptrArg02 + 0x0002:word16] = dx_48
	Mem85[ptrArg02:word16] = ax_51
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 ax:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16)

l0800_97AC:
	byte dl_69
	*dlOut = (byte) dx_48
	return ax_51
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_9764_exit:
// DataOut: ax di dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_97B6(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97B6_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97B6:
	word16 dx_23
	return fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x01, out dx_23)
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_97B6_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



byte fn0800_97CC(selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97CC_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97CC:
	byte al_18
	byte dl_8 = (byte) wArg02
	*dlOut = dl_8
	branch wArg02 != 0xFFFF l0800_97DC
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_97DC:
	branch (Mem0[ds:DPB(ax, 0x00, 8) + 0x2251:byte] & 0x08) == 0x00 l0800_97F2
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_97F2:
	al_18 = dl_8
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97E9:
	al_18 = (byte) (DPB(ax, 0x00, 8) + 0xFFE0) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97D7:
	al_18 = 0xFF (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_97F6:
	return al_18
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp

fn0800_97CC_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp



byte fn0800_97F8(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_97F8_entry:
// DataOut: al di ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_97F8:
	word16 ax_11 = DPB(ax, 0x41, 8)
	byte dl_16 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_980A
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_980A:
	fn0800_8D2B(ds, ax_11)
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_9806:
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_980E:
	return dl_16
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_97F8_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



void fn0800_9810(byte dh, byte dl, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dh di dl es
// LiveOut:
// Trashed: SCZO ah al ax di dil eax edi esp rax rdi rsp sp spl
// Preserved:
fn0800_9810_entry:
// DataOut: dh di dl es
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9810:
	word16 di_6 = fn0800_9817(dh, di, es)
// DataOut: al di es
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9815_thunk_fn0800_9817:
	fn0800_9817(dl, di_6, es)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFE al:dl ax:<invalid> ah:<invalid> di:<invalid>

fn0800_9810_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFE al:<invalid> ax:<invalid> ah:<invalid> di:<invalid>



word16 fn0800_9817(byte al, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es
// LiveOut: di
// Trashed: SCZO ah al ax di dil eax edi rax rdi
// Preserved: ah sp
fn0800_9817_entry:
// DataOut: al di dl es
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9817:
	word16 ax_3 = __aam(al)
	byte al_4 = (byte) ax_3
	word16 di_11 = fn0800_9820(SLICE(ax_3, byte, 8), di, es)
// DataOut: al di dl es
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_981E_thunk_fn0800_9820:
	return fn0800_9820(al_4, di_11, es)
// DataOut: di dl es
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> al:ah ah:<invalid> di:<invalid>

fn0800_9817_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> al:<invalid> ah:<invalid> di:<invalid>



word16 fn0800_9820(byte al, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es
// LiveOut: di
// Trashed: SCZO al ax di dil eax edi rax rdi
// Preserved: sp
fn0800_9820_entry:
// DataOut: ah al di dl es
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9820:
	byte al_4
	byte C_5 = __daa(al + 0x90, &al_4)
	byte al_8
	__daa(al_4 + 0x40 + C_5, &al_8)
	Mem10[es:di:byte] = al_8
	return di + 0x0001
// DataOut: ah di dl es
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9820_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> di:di + 0x0001



word16 fn0800_9828(selector ds, segptr32 ptrArg04, selector psegArg06, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0004(32)
fn0800_9828_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(32)

l0800_9828:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(8) Stack +0004(32)

l0800_988C:
	word16 sp_160 = fp - 0x009E
	word16 di_105 = fp - 0x0098
	word16 si_102 = (word16) ptrArg04
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009C bp:fp - 0x0002 -156(fp):di -154(fp):si -24(fp):0x0000 -22(fp):0x0050 -20(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_989B:
	byte al_38 = Mem0[ds:si_102:byte]
	si_102 = si_102 + 0x0001
	byte al_111 = al_38
	ax = DPB(ax, al_38, 0) (alias)
	branch al_38 == 0x00 l0800_98B3
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98B3:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_98A1:
	branch al_38 == 0x25 l0800_98B6
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98B6:
	al_111 = Mem0[ds:si_102:byte]
	ax = DPB(ax, al_111, 0) (alias)
	si_102 = si_102 + 0x0001
	branch al_111 == 0x25 l0800_98A5
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0012(16) Local -0016(8)

l0800_98BF:
	byte bLoc0D_125 = 0x00
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98DD:
	word16 ax_137 = DPB(ax, 0x00, 8)
	byte bl_141 = (byte) ax_137
	byte dl_139 = (byte) ax_137
	word16 bx_143 = DPB(ax_137, bl_141 - 0x20, 0)
	branch bl_141 >=u 0x80 l0800_98FE
// DataOut: bp bx ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98EB:
	word16 bx_177 = DPB(ax_137, Mem0[ds:bx_143 + 0x2605:byte], 0)
	branch bx_177 <=u 0x0017 l0800_98F7
// DataOut: bp bx ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98F7:
	switch (bx_177 << 0x0001) { l0800_9917 }
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9917:
	branch true l0800_98FE
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98FE:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_991C:
	branch bLoc0D_125 == 0x2B l0800_9925
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9922:
	bLoc0D_125 = dl_139
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9925:
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98DB:
	ax = DPB(ax_137, Mem0[ds:si_102:byte], 0) (alias)
	si_102 = si_102 + 0x0001
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98F4:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_9C82:
	word16 si_150 = si_102
	byte al_155 = 0x25
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_9C8D:
	di_105 = fn0800_984F(al_155, fp - 0x0002, di_105)
	byte al_164 = Mem0[ds:si_150:byte]
	sp_160 = sp_160 + 0xFFFE
	si_150 = si_150 + 0x0001
	al_155 = al_164
	branch al_164 != 0x00 l0800_9C8D
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_9C96:
	branch bLoc16 >= 0x50 l0800_9C9F
	branch bLoc16 >= 0x50 l0800_9C9F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9C9C:
	fn0800_9858(fp - 0x0002, fn0800_9858(fp - 0x0002, di_105))
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9C9F:
	word16 sp_79 = sp_160 + 0x0002
	branch 0x0000 == 0x0000 l0800_9CAB
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CAB:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CA6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CAE:
	word16 di_83
	*diOut = Mem0[ss:sp_79:word16]
	return Mem0[ss:sp_79 + 0x0002:word16]
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp

fn0800_9828_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp

l0800_98A5:
	Mem104[ss:di_105:byte] = al_111
	byte v16_106 = bLoc16 - 0x01
	di_105 = di_105 + 0x0001
	bLoc16 = v16_106
	branch v16_106 > 0x00 l0800_989B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98AE:
	di_105 = fn0800_9858(fp - 0x0002, di_105)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)



void fn0800_9842(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di es
// LiveOut:
// Trashed: SCZO al ax ch cl cx eax ecx rax rcx
// Preserved: di sp
fn0800_9842_entry:
// DataOut: di es
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9842:
	word16 cx_13 = 0xFFFF
// DataOut: cx di es
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9848:
	branch cx_13 == 0x0000 l0800_984A
// DataOut: cx di es
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

l0800_9848_1:
	di = di_29 + 0x0001
	cx_13 = cx_13 - 0x0001
	word16 di_29 = di
	branch 0x00 != Mem0[es:di_29:byte] l0800_9848
// DataOut: cx di es
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

l0800_984A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

fn0800_9842_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> al:0x00 di:di -2(fp):di



word16 fn0800_984F(byte al, word16 bp, word16 di)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ss
// LiveOut: di
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved: sp
fn0800_984F_entry:
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_984F:
	Mem3[ss:di:byte] = al
	byte v8_8 = Mem3[ss:bp - 0x0014:byte] - 0x01
	Mem9[ss:bp - 0x0014:byte] = v8_8
	branch v8_8 != 0x00 l0800_988B_in_fn0800_984F
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_988B_in_fn0800_984F:
	return di + 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_9856_thunk_fn0800_9858:
	word16 di_13 = fn0800_9858(bp, di + 0x0001)
	return di_13
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_9856_thunk_fn0800_9858:
	return fn0800_9858(bp, di_13)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>

fn0800_984F_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_9858(word16 bp, word16 di)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: di sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved:
fn0800_9858_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9858:
	word16 sp_35
	word16 bx_36
	selector ss_37
	word16 cx_38
	word16 dx_39
	selector es_40
	word16 bp_41
	word16 ax_42
	word16 di_43
	byte SCZO_44
	selector cs_45
	byte SZO_46
	byte C_47
	byte Z_48
	call SEQ(cs, Mem0[ss:bp + 0x000E:word16]) (retsize: 2; depth: 20)
		uses: ax_22,bp,bx,cs,cx,di_17,dx,es,SCZO_18,sp_32,ss,wLoc02_4,wLoc04_7,wLoc06_10,wLoc08_13,wLoc0A_21,wLoc0C_24,wLoc0E_26,wLoc10_30,wLoc12_33
		defs: ax_42,bp_41,bx_36,C_47,cs_45,cx_38,di_43,dx_39,es_40,SCZO_44,sp_35,ss_37,SZO_46,Z_48
	branch ax_42 != 0x0000 l0800_987B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9876:
	Mem66[ss_37:bp_41 - 0x0016:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_987B:
	Mem53[ss_37:bp_41 - 0x0014:word16] = 0x0050
	Mem55[ss_37:bp_41 - 0x0012:word16] = Mem53[ss_37:bp_41 - 0x0012:word16] + di_43
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_988B:
	return bp_41 - 0x0096
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:bp - 0x0096 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_9858_exit:
// DataOut: di sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:bp - 0x0096 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



word16 fn0800_9CE6(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax di ds dx es
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_9CE6_entry:
	*diOut = di
	*dsOut = ds
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_9CE6:
	word16 ax_19 = fn0800_BFC7(DPB(ptrLoc08, wArg06, 0), wArg08)
	selector es_47
	*esOut = fn0800_B03B(DPB(ptrLoc0E, wArg02, 0), wArg04, DPB(ptrLoc0A, wArg06, 0), ax_19 + 0x0001)
	word16 dx_49
	*dxOut = wArg04
	return wArg02 + ax_19
// DataOut: ax di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9CE6_exit:
// DataOut: ax di ds dx es
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_9D41(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9D41_entry:
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D41:
	word16 wLoc02_11
	selector ds_10
	branch dx == Mem0[0x0800:0x9D35:word16] l0800_9D7F
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D48:
	selector ds_43 = Mem0[dx:0x0002:selector]
	branch Mem0[ds_43:0x0002:word16] == 0x0000 l0800_9D5C
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D5C:
	branch ds_43 == Mem0[0x0800:0x9D35:word16] l0800_9D7A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D7A:
	dx = Mem0[0x0800:0x9D35:word16]
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(16)

l0800_9D7F:
	Mem39[0x0800:0x9D35:word16] = 0x0000
	Mem40[0x0800:0x9D37:word16] = 0x0000
	Mem41[0x0800:0x9D39:word16] = 0x0000
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_9D65:
	Mem51[0x0800:0x9D37:word16] = Mem0[ds_43:0x0008:word16]
	fn0800_9E15(ds_43)
	wLoc02_11 = ds_43
	ds_10 = Mem51[0x0800:0x9D3B:selector]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(16) Local -0002(0) Local -0004(0)

l0800_9D55:
	Mem46[0x0800:0x9D37:word16] = ds_43
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D94:
	ds_10 = Mem0[0x0800:0x9D3B:selector]
	wLoc02_11 = dx
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(16) Local -0002(0) Local -0004(0)

l0800_9D9D:
	return fn0800_A1D6(ds_10, 0x0000, wLoc02_11)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_9D41_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



byte fn0800_9DA4(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9DA4_entry:
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9DA4:
	selector es_7 = Mem0[dx:0x0002:selector]
	Mem8[dx:0x0002:word16] = 0x0000
	Mem9[dx:0x0008:word16] = es_7
	word16 wLoc02_12 = dx
	branch dx == Mem9[0x0800:0x9D35:word16] l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9DBC:
	branch Mem9[es_7:0x0002:word16] != 0x0000 l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: fp(16) Local -0002(16)

l0800_9DEA:
	fn0800_9E3E(dx)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DC4:
	word16 ax_44 = Mem9[dx:0x0000:word16]
	Mem50[es_7:0x0000:word16] = Mem9[es_7:0x0000:word16] + ax_44
	word16 dx_52 = dx + ax_44
	wLoc02_12 = es_7
	dl = (byte) dx_52 (alias)
	branch Mem50[dx_52:0x0002:word16] != 0x0000 l0800_9DE3
// DataOut: cx dl es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DE3:
	Mem58[dx_52:0x0002:word16] = es_7
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DDC:
	Mem57[dx_52:0x0008:word16] = es_7
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DED:
	word16 ax_20 = wLoc02_12 + Mem9[wLoc02_12:0x0000:word16]
	branch Mem9[ax_20:0x0002:word16] == 0x0000 l0800_9DFF
// DataOut: dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFF:
	Mem30[wLoc02_12:0x0000:word16] = Mem9[wLoc02_12:0x0000:word16] + Mem9[ax_20:0x0000:word16]
	Mem36[ax_20 + Mem30[ax_20:0x0000:word16]:0x0002:word16] = wLoc02_12
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9E11_thunk_fn0800_9E15:
	fn0800_9E15(ax_20)
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFE:
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

fn0800_9DA4_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>



void fn0800_9E15(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO bh bl bx ebx es rbx
// Preserved: ds sp
fn0800_9E15_entry:
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E15:
	branch ds == Mem0[ds:0x0006:word16] l0800_9E36
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E36:
	Mem15[0x0800:0x9D39:word16] = 0x0000
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

l0800_9E1D:
	selector es_9 = Mem0[ds:0x0006:selector]
	selector ds_10 = Mem0[ds:0x0004:selector]
	Mem11[ds_10:0x0006:word16] = es_9
	Mem12[es_9:0x0004:word16] = ds_10
	Mem13[0x0800:0x9D39:word16] = ds_10
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

fn0800_9E15_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds es:<invalid> ds:ds



void fn0800_9E3E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bx eax ebx es rax rbx
// Preserved: sp ss
fn0800_9E3E_entry:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E3E:
	word16 ax_3 = Mem0[0x0800:0x9D39:word16]
	branch ax_3 == 0x0000 l0800_9E67
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E67:
	Mem29[0x0800:0x9D39:word16] = ds
	Mem30[ds:0x0004:word16] = ds
	Mem31[ds:0x0006:word16] = ds
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_9E46:
	__cli()
	selector es_20 = Mem0[ax_3:0x0006:selector]
	Mem22[ax_3:0x0006:word16] = ds
	Mem23[ds:0x0004:word16] = ax_3
	Mem27[es_20:0x0004:word16] = ds
	Mem28[ds:0x0006:word16] = es_20
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

fn0800_9E3E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> bx:ss ss:ss es:<invalid> -2(fp):<invalid>



byte fn0800_9E75(selector ds, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0004(16)
fn0800_9E75_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_9E75:
	Mem13[0x0800:0x9D3B:word16] = ds
	byte dl_17 = (byte) wArg04
	branch wArg04 == 0x0000 l0800_9E95
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E86:
	branch wArg04 != Mem13[0x0800:0x9D37:word16] l0800_9E92
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E92:
	dl_17 = fn0800_9DA4(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E8D:
	dl_17 = fn0800_9D41(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E95:
	selector ds_26
	*dsOut = Mem13[0x0800:0x9D3B:selector]
	return dl_17
// DataOut: dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_9E75_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> di:di si:si ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_9E9E(word16 ax, word16 bp, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9E9E_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E9E:
	word16 dx_15
	word16 ax_16 = fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0000, 0x0000, out dx_15)
	branch (ax_16 & 0x000F) == 0x0000 l0800_9EC7
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9EB3:
	word16 dx_85
	fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0010 - (ax_16 & 0x000F), 0x0000, out dx_85)
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):ax
// LocalsOut: fp(16) Local -0002(16)

l0800_9EC7:
	word16 dx_43
	branch fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], ax << 0x04, (word16) SLICE(ax, byte, 8) >>u 0x04, out dx_43) == 0xFFFF l0800_9EFE
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9EFE:
	word16 dx_73
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9EE6:
	Mem60[0x0800:0x9D35:word16] = dx_43
	Mem61[0x0800:0x9D37:word16] = dx_43
	Mem63[dx_43:0x0000:word16] = ax
	Mem64[dx_43:0x0002:word16] = dx_43
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

fn0800_9E9E_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> Sequence dx:ax:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F02(word16 ax, word16 bp, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah ax bp ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9F02_entry:
// DataOut: ah ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_9F02:
	selector ds_14 = Mem0[0x0800:0x9D3B:selector]
	word16 dx_116
	word16 ax_21 = fn0800_A215(bp, ds_14, ax << 0x04, (word16) ah >>u 0x04, out dx_116)
	branch ax_21 == 0xFFFF l0800_9F58
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9F20:
	branch (ax_21 & 0x000F) != 0x0000 l0800_9F3D
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax
// LocalsOut: fp(16)

l0800_9F3D:
	word16 dx_105
	branch fn0800_A215(bp, ds_14, -(ax_21 & 0x000F) + 0x0010, 0x0000, out dx_105) == 0xFFFF l0800_9F58
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9F58:
	word16 dx_64
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9F55:
	*dxOut = dx_116 + 0x0001
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):<invalid> -2(fp):ax

l0800_9F25:
	word16 cx_84 = Mem0[0x0800:0x9D37:word16]
	Mem85[0x0800:0x9D37:word16] = dx_116
	Mem87[dx_116:0x0000:word16] = ax
	Mem88[dx_116:0x0002:word16] = cx_84
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

fn0800_9F02_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax ds dx
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl ds dx eax ebx edx rax rbx rdx
// Preserved: sp
fn0800_9F5C_entry:
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9F5C:
	Mem8[ds:0x0000:word16] = Mem0[ds:0x0000:word16] - ax
	word16 dx_9 = dx + Mem8[ds:0x0000:word16]
	*dxOut = dx_9
	Mem11[dx_9:0x0000:word16] = ax
	Mem12[dx_9:0x0002:word16] = dx
	Mem17[dx_9 + Mem12[dx_9:0x0000:word16]:0x0002:word16] = dx_9
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9F5C_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> dx:<invalid> ds:<invalid> ax:0x0004



word16 fn0800_9F7F(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esp rax rbp rbx rcx rdx rsp sp spl
// Preserved:
// Stack args: Stack +0002(16)
fn0800_9F7F_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_9F7F:
// DataOut: ax bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9F87_thunk_fn0800_9F92:
	word16 dx_13
	word16 bp_14
	selector ds_15
	return fn0800_9F92(wArg02, 0x0000, fp - 0x0002, ds, wLoc04, out dx_13, out bp_14, out ds_15)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:0x0000 ax:<invalid> -2(fp):bp

fn0800_9F7F_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



void fn0800_9F89(word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_9F89_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_9F89_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9F89:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



word16 fn0800_9F92(word16 ax, word16 dx, word16 bp, selector ds, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds dx ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esp rax rbp rbx rcx rdx rsp sp spl
// Preserved: di si
// Stack args: Stack +0000(16)
l0800_9F92:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F8F_thunk_fn0800_9F92:
	ax = fn0800_9F92(ax, dx, bp, ds, wArg00, out dx, out bp, out ds)
	return ax
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

fn0800_9F92_entry:
	*dxOut = dx
	*dsOut = ds
	*bpOut = bp
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9F92:
	Mem16[0x0800:0x9D3B:word16] = ds
	branch (ax | dx) == 0x0000 l0800_9FFD
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9F9F:
	int32 dx_ax_54 = SEQ(dx, ax + 0x0013)
	word16 ax_57 = (word16) (dx_ax_54 + 0x00000013)
	word16 dx_58 = SLICE(dx_ax_54 + 0x00000013, word16, 16)
	branch dx_ax_54 <u 0x00000013 l0800_9FE8
// DataOut: ax bp dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FA7:
	branch (dx_58 & 0xFFF0) != 0x0000 l0800_9FE8
// DataOut: ax bp dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx ax:ax + 0x0013 dx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FE8:
	ax = 0x0000 (alias)
	word16 dx_69
	*dxOut = 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx ax:ax + 0x0013 dx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FAD:
	word16 ax_81 = DPB(ax_57 >>u 0x04, SLICE(ax_57 >>u 0x04, byte, 8) | (byte) (dx_58 << 0x04), 8)
	branch Mem16[0x0800:0x9D35:word16] == 0x0000 l0800_9FDE
// DataOut: ah ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx ax:ax + 0x0013 dx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FDE:
	word16 dx_132
	ax = fn0800_9E9E(ax_81, bp, out dx_132)
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FBE:
	word16 dx_88 = Mem16[0x0800:0x9D39:word16]
	word16 dx_110
	*dxOut = dx_88
	branch dx_88 == 0x0000 l0800_9FD9
// DataOut: ah ax bp dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FC7:
// DataOut: ah ax bp bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FC9:
	branch Mem16[dx_110:0x0000:word16] >=u ax_81 l0800_9FED
// DataOut: ah ax bp bx ds dx ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FED:
	branch Mem16[dx_110:0x0000:word16] >u ax_81 l0800_9FE3
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FE3:
	word16 dx_128
	ax = fn0800_9F5C(ax_81, dx_110, dx_110, out dx_128)
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FEF:
	fn0800_9E15(dx_110)
	Mem124[dx_110:0x0002:word16] = Mem16[dx_110:0x0008:word16]
	ax = 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FD1:
	dx_110 = Mem16[dx_110:0x0006:word16]
	*dxOut = dx_110
	branch dx_110 != dx_88 l0800_9FC9
// DataOut: ah ax bp bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FD9:
	word16 dx_104
	ax = fn0800_9F02(ax_81, bp, out dx_104)
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FFD:
	selector ds_36
	*dsOut = Mem16[0x0800:0x9D3B:selector]
	word16 bp_42
	*bpOut = wArg00
	return ax
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:(int32) (ax + 0x0026 ^ ax + 0x0026) cl:<invalid> ah:<invalid> ds:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -4(fp):di -2(fp):si

fn0800_9F92_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 cx:<invalid> ds:<invalid> di:di si:si bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:(int32) (ax + 0x0026 ^ ax + 0x0026) cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -4(fp):di -2(fp):si



void fn0800_A006(word16 dx, word16 bx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx dx ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_A006_entry:
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A006:
	fn0800_9F89(Mem0[0x0800:0x9D3F:word16], Mem0[0x0800:0x9D3D:word16])
	branch dx != 0x0000 l0800_A01F
// DataOut: bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)
// Terminates process

l0800_A01F:
	selector ds_46 = Mem0[ss:fp - 0x0002:selector]
	Mem50[ss:fp - 0x0002:word16] = dx
	Mem52[ss:fp - 0x0004:word16] = ds_46
	Mem54[ss:fp - 0x0006:word16] = bx
	word16 dx_55 = Mem54[ds_46:0x0000:word16]
	word16 di_60 = 0x0004
	word16 si_61 = 0x0004
	word16 cx_62 = 0x0006
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0004 dx:dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A033:
	branch cx_62 == 0x0000 l0800_A035
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:dx di:<invalid> si:<invalid> cx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A035:
	word16 dx_121 = dx_55 - 0x0001
	branch dx_55 == 0x0001 l0800_A070
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:dx di:<invalid> si:<invalid> cx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A039:
	selector es_100 = dx + 0x0001
	selector ds_102 = ds_46 + 0x0001
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:dx di:<invalid> si:<invalid> cx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A043:
	word16 di_103 = 0x0000
	word16 si_104 = 0x0000
	word16 cx_105 = dx_121
	branch dx_121 <=u 0x1000 l0800_A052
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A04F:
	cx_105 = 0x1000
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A052:
	word16 cx_111 = cx_105 << 0x0003
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A058:
	branch cx_111 == 0x0000 l0800_A05A
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A05A:
	dx_121 = dx_121 - 0x1000
	branch dx_121 <=u 0x0000 l0800_A070
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A070:
	selector ds_84
	fn0800_9E75(Mem54[0x0800:0x9D3B:selector], wArg02, out ds_84)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx

l0800_A060:
	es_100 = es_100 + 0x1000
	ds_102 = ds_102 + 0x1000
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A058_1:
	Mem117[es_100:di_103:word16] = Mem54[ds_102:si_104:word16]
	si_104 = si_104 + 0x0002
	di_103 = di_103 + 0x0002
	cx_111 = cx_111 - 0x0001
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A033_1:
	Mem67[dx:di_60:word16] = Mem54[ds_46:si_61:word16]
	si_61 = si_61 + 0x0002
	di_60 = di_60 + 0x0002
	cx_62 = cx_62 - 0x0001
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0042 dx:<invalid> ds:<invalid> es:dx di:<invalid> si:<invalid> cx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A01D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:sp + 0x0004 dx:dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx

fn0800_A006_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ax:0x0004 ch:<invalid> cl:<invalid> al:0x04 ah:0x00 bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx



void fn0800_A080(word16 ax, word16 cx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx ds
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: sp
fn0800_A080_entry:
// DataOut: ax bx cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(0)

l0800_A080:
	branch bx == Mem0[0x0800:0x9D37:word16] l0800_A0CB
// DataOut: ax bx cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(0)

l0800_A0CB:
	Mem58[bx:0x0000:word16] = ax
	fn0800_A1D6(ds, 0x0000, bx + ax)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A087:
	word16 di_24 = bx + ax
	Mem29[di_24:0x0000:word16] = cx - ax
	Mem30[di_24:0x0002:word16] = bx
	Mem36[bx:0x0000:word16] = ax
	word16 dx_38 = bx + cx
	branch Mem36[dx_38:0x0002:word16] == 0x0000 l0800_A0B8
// DataOut: di ds es
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Local -0006(0)

l0800_A0B8:
	Mem54[dx_38:0x0008:word16] = di_24
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Local -0006(0)

l0800_A0B1:
	Mem53[dx_38:0x0002:word16] = di_24
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Local -0006(0)

l0800_A0BD:
	selector ds_44
	fn0800_9E75(ds, di_24, out ds_44)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax

fn0800_A080_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> bx:<invalid> ax:0x0004 dx:bx di:bx + ax si:bx ds:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:0x04 ah:0x00 bl:<invalid> -6(fp):0x0000 -4(fp):<invalid> -2(fp):<invalid>



void fn0800_A14B(byte al, word16 dx, word16 bp, word16 di, selector ds, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ds dx ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_A14B_entry:
// DataOut: al bp di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A14B:
	selector ds_14
	fn0800_9E75(ds, wArg02, out ds_14)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A14B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000A al:<invalid> dx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid>



word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A162_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A162:
	word16 ax_35
	word16 si_17 = wArg04 + 0x0001 - Mem0[ds:0x007B:word16] + 0x003F >>u 0x06
	branch si_17 != Mem0[ds:0x2698:word16] l0800_A18D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A18D:
	word16 ax_66 = (si_17 << 0x06) + Mem0[ds:0x007B:word16]
	word16 si_62 = si_17 << 0x06
	word16 dx_63 = Mem0[ds:0x0091:word16]
	byte al_67 = (byte) ax_66
	branch ax_66 <=u dx_63 l0800_A1A5
// DataOut: al ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A19F:
	si_62 = dx_63 - Mem0[ds:0x007B:word16]
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1A5:
	word16 ax_76 = fn0800_A401(al_67, ds, Mem0[ds:0x007B:word16], si_62)
	byte dl_82
	*dlOut = (byte) ax_76
	branch ax_76 != 0xFFFF l0800_A1C1
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1C1:
	Mem92[ds:0x0091:word16] = Mem0[ds:0x007B:word16] + ax_76
	Mem93[ds:0x008F:word16] = 0x0000
	ax_35 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1B6:
	Mem89[ds:0x2698:word16] = si_62 >>u 0x06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A17B:
	Mem55[ds:0x008D:word16] = wArg04
	Mem56[ds:0x008B:word16] = wArg02
	byte dl_54
	*dlOut = (byte) wArg02
	ax_35 = 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1D1:
	return ax_35
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A162_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A1D6_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1D6:
	byte dl_15
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0089:word16], wArg04, Mem0[ds:0x0087:word16], out dl_15) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1EC:
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0091:word16], wArg04, Mem0[ds:0x008F:word16], out dl_15) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out dl_15) != 0x0000 l0800_A211
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp

l0800_A211:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A20C:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A213:
	return dl_15
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A1D6_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A215(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A215_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A215:
	word16 ax_118
	word16 dx_15
	word16 ax_17 = fn0800_8C69(Mem0[ds:0x008D:word16], 0x04, 0x0000, wLoc0C, out dx_15) + Mem0[ds:0x008B:word16]
	ui32 dx_ax_26 = SEQ(dx_15 + (ax_17 <u 0x0000), ax_17 + wArg02) + _
	word16 ax_27 = (word16) dx_ax_26
	word16 dx_28 = SLICE(dx_ax_26, word16, 16)
	branch dx_28 < 0x000F l0800_A246
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A237:
	branch dx_28 > 0x000F l0800_A23E
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A239:
	branch ax_27 <=u 0xFFFF l0800_A246
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A246:
	word16 dx_76
	word16 ax_77 = fn0800_8CCB(Mem0[ds:0x008B:word16], wArg04, Mem0[ds:0x008D:word16], wArg02, bp, out dx_76)
	byte dl_84
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0089:word16], dx_76, Mem0[ds:0x0087:word16], out dl_84) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A26C:
	byte dl_94
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0091:word16], dx_76, Mem0[ds:0x008F:word16], out dl_94) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A27F:
	word16 ax_96 = Mem0[ds:0x008D:word16]
	word16 dx_97 = Mem0[ds:0x008B:word16]
	Mem103[ss:fp - 0x000C:word16] = dx_76
	Mem107[ss:fp - 0x000E:word16] = ax_77
	byte dl_109
	branch fn0800_A162(ds, wArg00, wArg02, out dl_109) == 0x0000 l0800_A23E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A299:
	word16 dx_116
	*dxOut = ax_96
	ax_118 = dx_97
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A23E:
	word16 dx_66
	*dxOut = 0xFFFF
	ax_118 = 0xFFFF
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A29F:
	return ax_118
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A215_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A2A3(byte al, selector ds, word16 wArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0004(16) Stack +0006(32)
fn0800_A2A3_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(32)

l0800_A2A3:
	msdos_unknown_2144()
	word16 dx_11 = (word16) ptrArg06
	word16 ax_16 = DPB(ax, bArg04, 0)
	branch C l0800_A2C6
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_A2C6:
	ax_16 = fn0800_8D2B(ds, ax_16)
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2BA:
	branch wArg04 != 0x0000 l0800_A2C4
// DataOut: al ax di dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C4:
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C0:
	ax_16 = dx_11
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2CA:
	return ax_16
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A2A3_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_A2CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: esp rsp sp spl
// Preserved:
fn0800_A2CC_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A2CC:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F4:word16] (retsize: 4; depth: 4)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2CC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid>



void fn0800_A2D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: esp rsp sp spl
// Preserved:
fn0800_A2D0_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A2D0:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F6:word16] (retsize: 4; depth: 4)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2D0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid>



void fn0800_A2D4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: esp rsp sp spl
// Preserved:
fn0800_A2D4_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A2D4:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F8:word16] (retsize: 4; depth: 4)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid>



void fn0800_A2D8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: esp rsp sp spl
// Preserved:
fn0800_A2D8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A2D8:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26FA:word16] (retsize: 4; depth: 4)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2D8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid>



void fn0800_A36D(word16 ax, word16 cx, word16 dx, word16 bx, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx di ds dx es si
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ah sp
fn0800_A36D_entry:
// DataOut: ax bx cx di ds dx es si
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A36D:
	byte al_4 = (byte) ax
	branch ax == 0x0000 l0800_A378
// DataOut: ah al bx cx di ds dx es si
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A371:
	Mem62[es:di:byte] = al_4
	branch al_4 != 0x00 l0800_A378
// DataOut: ah bx cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:ax

l0800_A377:
// DataOut: ah cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:al

l0800_A378:
	branch cx == 0x0000 l0800_A394
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:al bx:bx + 0x0001

l0800_A37F:
	byte al_37 = Mem0[ds:si:byte]
	branch al_37 == 0x22 l0800_A394
// DataOut: al cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:0x00 ah:ah bx:bx + 0x0001

l0800_A385:
	branch al_37 != 0x5C l0800_A392
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A38B:
	branch Mem0[ds:si + 0x0001:byte] != 0x22 l0800_A392
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A390:
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A392:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001

l0800_A394:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001

fn0800_A36D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001



word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A401_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A401:
	word16 ax_17
	word16 ax_8 = DPB(ax, 0x4A, 8)
	word16 bx_13
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_13) l0800_A415
// DataOut: ax bx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A415:
	fn0800_8D2B(ds, ax_8)
	ax_17 = bx_13
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A410:
	ax_17 = 0xFFFF
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A41B:
	return ax_17
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp

fn0800_A401_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp



word16 fn0800_A471(byte bl, selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(32)
fn0800_A471_entry:
// DataOut: bl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0002(32)

l0800_A471:
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 si_164 = (word16) ptrArg02
	word16 ax_124 = 0x0000
	byte dl_148 = 0x00
	word16 dx_149 = 0x0000
	*dxOut = dx_149
	ui32 dh_bx_135 = DPB(dh_bx, 0x00, 8)
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A487:
	byte bl_225 = Mem0[es_19:si_164:byte]
	bx = DPB(bx, bl_225, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_225, 0) (alias)
	si_164 = si_164 + 0x0001
	branch (Mem0[ds:bx + 0x2251:byte] & 0x01) != 0x00 l0800_A487
// DataOut: ax bl di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A490:
	word16 bp_224 = 0x0000
	branch bl_225 == 0x2B l0800_A49E
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A498:
	branch bl_225 != 0x2D l0800_A4A2
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49D:
	bp_224 = 0x0001
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49E:
	bl_225 = Mem0[es_19:si_164:byte]
	bx = DPB(bx, bl_225, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_225, 0) (alias)
	si_164 = si_164 + 0x0001
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A2:
	branch bl_225 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A7:
	byte bl_133 = bl_225 - 0x30
	bx = DPB(bx, bl_133, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_133, 0) (alias)
	branch bl_133 <u 0x00 l0800_A4D6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4AC:
	ui32 dl_ax_146 = SEQ(dl_148, (word16) (ax_124 *u 0x000A) + bx) + dh_bx_135
	ax_124 = (word16) dl_ax_146 (alias)
	dl_148 = SLICE(dl_ax_146, byte, 16) (alias)
	*dxOut = SLICE(dl_ax_146, word16, 16)
	branch dl_ax_146 == 0x00000000 l0800_A49E
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B4:
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4C8:
	byte bl_165 = Mem0[es_19:si_164:byte]
	si_164 = si_164 + 0x0001
	branch bl_165 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D1:
	bx = DPB(bx, bl_165 - 0x30, 0) (alias)
	branch bl_165 >=u 0x30 l0800_A4B6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B6:
	int32 dx_ax_181 = ax_124 *u 0x000A
	int32 dx_ax_204 = SEQ((word16) (dx_149 *u 0x000A), (word16) dx_ax_181 + bx) + SEQ(SLICE(dx_ax_181, word16, 16), bx)
	ax_124 = (word16) dx_ax_204 (alias)
	*dxOut = SLICE(dx_ax_204, word16, 16)
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D6:
	word16 bp_93 = bp_224 - 0x0001
	branch bp_93 < 0x0000 l0800_A4E0
	branch bp_93 < 0x0001 l0800_A4E0
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D9:
	word16 ax_120 = -ax_124
	ax_124 = -ax_120
	word16 dx_126
	*dxOut = (ax_120 == 0x0000) - -dx_149 - (ax_124 == 0x0000)
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4E0:
	return ax_124
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dx:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp

fn0800_A471_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:di bl:<invalid> si:si dx:<invalid> es:es dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_A4F6(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds
// LiveOut: ds
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_A4F6_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A4F6:
	word16 ax_24 = fn0800_A53C(0x00, ds, DPB(ptrLoc08, wArg02, 0), 0x00, bp)
	branch ax_24 != 0xFFFF l0800_A513
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A513:
	word16 dx_61 = ax_24 & 0xFFFE
	branch (wArg06 & 0x0080) != 0x0000 l0800_A520
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A51D:
	dx_61 = ax_24 & 0xFFFE | 0x0001
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A520:
	branch fn0800_A53C(0x01, ds, DPB(ptrLoc0A, wArg02, 0), 0x01, dx_61) == 0xFFFF l0800_A50F
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_A538:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):<invalid> -2(fp):bp

l0800_A50F:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A53A:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A4F6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A53C(byte al, selector ds, segptr32 ptrArg02, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0006(8) Stack +0008(16)
fn0800_A53C_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(8) Stack +0008(16)

l0800_A53C:
	word16 ax_24
	msdos_unknown_2143()
	word16 ax_15 = DPB(ax, bArg06, 0)
	branch C l0800_A553
// DataOut: ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A553:
	ax_24 = fn0800_8D2B(ds, ax_15)
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A550:
	ax_24 = wArg08
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A557:
	return ax_24
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A53C_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A559(byte al, selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A559_entry:
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A559:
	byte al_18
	byte dl_8
	*dlOut = (byte) wArg02
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A56E
// DataOut: al di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A56E:
	Mem33[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_18 = fn0800_A57F(al, ds, wArg02)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_A565:
	al_18 = (byte) fn0800_8D2B(ds, 0x0006) (alias)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_A57D:
	return al_18
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_A559_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A57F_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A57F:
	byte al_15
	word16 ax_8 = DPB(ax, 0x3E, 8)
	branch msdos_close_file(wArg02) l0800_A597
// DataOut: ax bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A597:
	al_15 = (byte) fn0800_8D2B(ds, ax_8) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A58B:
	Mem21[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_15 = 0x00 (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A59B:
	return al_15
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp

fn0800_A57F_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp



word16 fn0800_A59D(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A59D_entry:
	*dxOut = dx
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A59D:
	word16 wLoc08_110
	word16 ax_126
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A5B2
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5B2:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_A5C4
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5C4:
	word16 ax_106 = 0x4400
	word16 dx_94
	branch msdos_ioctl_get_device_info(wArg02, out dx_94) l0800_A60C
// DataOut: ax bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5CE:
	branch (dl & 0x80) != 0x00 l0800_A608
// DataOut: bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5D3:
	ax_106 = 0x4201
	word16 dx_135
	*dxOut = 0x0000
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_A60C
// DataOut: ax bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5DE:
	ax_106 = 0x4202
	word16 dx_154 = 0x4201
	*dxOut = dx_154
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_A60C
// DataOut: ax bx cx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4201 bx:<invalid> cx:0x0000 dx:0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5F3:
	ax_106 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_A60C
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4202 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A60C:
	wLoc08_110 = ax_106
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A5FA:
	branch false l0800_A608
// DataOut: di dl ds dx ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5FF:
	branch false l0800_A606
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A601:
	branch false l0800_A608
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A608:
	ax_126 = 0x0000
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A606:
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5BF:
	ax_126 = 0x0001
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5AC:
	wLoc08_110 = 0x0006
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A60D:
	ax_126 = fn0800_8D2B(ds, wLoc08_110)
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A610:
	return ax_126
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp

fn0800_A59D_exit:
// DataOut: ax dl dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp



byte fn0800_A614(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al di dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_A614_entry:
	*diOut = di
	*dsOut = ds
	*dlOut = dl
// DataOut: bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_A614:
	word16 si_151 = 0xFFFF
	branch Mem0[ptrArg02 + 0x0012:word16] == wArg02 l0800_A62A
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_A62A:
	word16 bx_61 = (word16) ptrArg02
	branch Mem0[ptrArg02 + 0x0006:word16] == 0x0000 l0800_A65F
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0004(16)

l0800_A634:
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_A647
// DataOut: bp bx di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0004(16)

l0800_A63A:
	byte dl_190
	byte sil_191
	word16 di_192
	branch fn0800_A6B7(ds, DPB(ptrLoc08, bx_61, 0), wArg04, out dl_190, out sil_191, out di_192, out ds) != 0x0000 l0800_A6B2
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A647:
	ptr32 es_bx_165 = Mem0[ss:fp + 0x0002:segptr32]
	branch (Mem0[es_bx_165 + 0x0002:word16] & 0x0004) == 0x0000 l0800_A65F
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A652:
	Mem173[ss:fp - 0x0006:word16] = Mem0[es_bx_165 + 0x000A:word16]
	Mem176[ss:fp - 0x0008:word16] = Mem173[es_bx_165 + 0x0008:word16]
	byte dl_178
	*dlOut = fn0800_9E75(ds, wArg02, out ds)
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A65F:
	ptr32 es_bx_79 = Mem0[ss:fp + 0x0002:segptr32]
	branch Mem0[es_bx_79 + 0x0004:byte] < 0x00 l0800_A675
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A669:
	word16 ax_142 = (int16) Mem0[es_bx_79 + 0x0004:byte]
	Mem145[ss:fp - 0x0006:word16] = ax_142
	byte dl_146
	si_151 = DPB(ax_142, fn0800_A559((byte) ax_142, ds, wArg00, out dl_146), 0)
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_A675:
	ptr32 es_bx_92 = Mem0[ss:fp + 0x0002:segptr32]
	Mem95[es_bx_92 + 0x0002:word16] = 0x0000
	Mem96[es_bx_92 + 0x0006:word16] = 0x0000
	Mem97[es_bx_92:word16] = 0x0000
	Mem98[es_bx_92 + 0x0004:byte] = 0xFF
	branch Mem98[es_bx_92 + 0x0010:word16] == 0x0000 l0800_A6B2
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_A695:
	Mem105[ss:fp - 0x0006:word16] = 0x0000
	Mem107[ss:fp - 0x0008:word16] = 0x0000
	Mem109[ss:fp - 0x000A:word16] = 0x0000
	Mem111[ss:fp - 0x000C:word16] = 0x0000
	Mem114[ss:fp - 0x000E:word16] = Mem111[es_bx_92 + 0x0010:word16]
	word16 dx_119
	byte sil_120
	word16 di_121
	selector ds_122
	word16 ax_123 = fn0800_8E6A(fp - 0x0002, ds, wArg00, wArg02, wArg04, wArg06, wArg08, out dx_119, out sil_120, out di_121, out ds_122)
	Mem127[ss:fp - 0x0006:word16] = dx_119
	Mem129[ss:fp - 0x0008:word16] = ax_123
	byte dl_131
	*dlOut = fn0800_97F8((byte) ax_123, ds_122, ptrArg00)
	Mem140[Mem129[ss:fp + 0x0002:segptr32] + 0x0010:word16] = 0x0000
// DataOut: di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_A627:
// DataOut: di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp

l0800_A6B2:
	return (byte) si_151
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A614_exit:
// DataOut: al di dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A6B7(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & silOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax di dl ds sil
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A6B7_entry:
	*diOut = di
	*dsOut = ds
	*dlOut = dl
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A6B7:
	word16 ax_104
	branch (wArg02 | wArg04) != 0x0000 l0800_A6C9
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_A6C9:
	branch Mem0[ptrArg02 + 0x0012:word16] == wArg02 l0800_A6DB
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_A6DB:
	branch Mem0[ptrArg02:word16] < 0x0000 l0800_A732
// DataOut: bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_A732:
	word16 ax_143 = Mem0[ptrArg02 + 0x0006:word16] + Mem0[ptrArg02:word16]
	Mem147[ptrArg02:word16] = Mem0[ptrArg02:word16] - (ax_143 + 0x0001)
	word16 ax_151 = Mem147[ptrArg02 + 0x000A:word16]
	word16 dx_152 = Mem147[ptrArg02 + 0x0008:word16]
	Mem154[ptrArg02 + 0x000E:word16] = ax_151
	Mem155[ptrArg02 + 0x000C:word16] = dx_152
	byte dl_164
	selector ds_165
	branch fn0800_C632(ds, (int16) Mem155[ptrArg02 + 0x0004:byte], dx_152, ax_151, ax_143 + 0x0001, out dl_164, out ds_165) == ax_143 + 0x0001 l0800_A778
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp

l0800_A765:
	ptr32 es_bx_170 = Mem155[ss:fp + 0x0002:segptr32]
	branch (Mem155[es_bx_170 + 0x0002:word16] & 0x0200) != 0x0000 l0800_A778
// DataOut: bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_A770:
	Mem177[es_bx_170 + 0x0002:word16] = Mem155[es_bx_170 + 0x0002:word16] | 0x0010
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_A6E4:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_A701
// DataOut: bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Stack +0002(32) Stack +0004(16)

l0800_A6EC:
	byte dl_134
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem0[ptrArg02 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Stack +0002(32) Stack +0004(16)

l0800_A6FB:
	branch Mem0[ptrArg02 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Stack +0002(32) Stack +0004(16)

l0800_A701:
	Mem117[ptrArg02:word16] = 0x0000
	byte dl_121
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem117[ptrArg02 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp

l0800_A718:
	branch Mem117[ptrArg02 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp

l0800_A71E:
	word16 dx_127 = Mem117[ptrArg02 + 0x0008:word16]
	Mem129[ptrArg02 + 0x000E:word16] = Mem117[ptrArg02 + 0x000A:word16]
	Mem130[ptrArg02 + 0x000C:word16] = dx_127
	byte dl_128
	*dlOut = (byte) dx_127
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp

l0800_A6D5:
	ax_104 = 0xFFFF
// DataOut: ax di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_A6C3:
	selector ds_66
	byte dl_67
	*dlOut = fn0800_A877(fp - 0x0002, ds, out ds_66)
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp

l0800_A778:
	ax_104 = 0x0000
// DataOut: ax di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_A77A:
	byte sil_37
	*silOut = (byte) Mem0[ss:fp - 0x0004:word16]
	return ax_104
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A6B7_exit:
// DataOut: ax di dl ds sil
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A77D(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds dx
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0006(16)
fn0800_A77D_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16)

l0800_A77D:
	word16 di_132 = wArg06
	word16 cx_15 = 0x0000
// DataOut: bp cx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_A7A1:
	branch cx_15 == 0x000A l0800_A7D8
// DataOut: bp cx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A7A6:
	di_132 = di_132 - 0x0001
	branch di_132 <= 0x0000 l0800_A7D8
// DataOut: bp cx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A7A9:
	word16 ax_144
	ptr32 es_bx_134 = Mem0[ss:fp + 0x0008:segptr32]
	word16 v17_137 = Mem0[es_bx_134:word16] - 0x0001
	Mem138[es_bx_134:word16] = v17_137
	branch v17_137 < 0x0000 l0800_A7C6
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A7C6:
	Mem173[ss:fp - 0x000C:word16] = Mem138[ss:fp + 0x000A:word16]
	Mem176[ss:fp - 0x000E:word16] = Mem173[ss:fp + 0x0008:word16]
	word16 dx_178
	ax_144 = fn0800_AEC2(ds, ptrArg00, wArg02, out dx_178, out di_132, out ds)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A7B1:
	word16 ax_162 = Mem138[es_bx_134 + 0x000E:word16]
	Mem165[es_bx_134 + 0x000C:word16] = Mem138[es_bx_134 + 0x000C:word16] + 0x0001
	ax_144 = DPB(ax_162, 0x00, 8) (alias)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A7D1:
	cx_15 = ax_144
	byte cl_152 = (byte) ax_144
	branch ax_144 != 0xFFFF l0800_A798
// DataOut: bp cl cx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A798:
	Mem158[Mem138[ss:fp - 0x0006:segptr32]:byte] = cl_152
	Mem160[ss:fp - 0x0006:word16] = Mem158[ss:fp - 0x0006:word16] + 0x0001
// DataOut: bp cx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A7D8:
	word16 ax_103
	branch cx_15 != 0xFFFF l0800_A7F3
	branch cx_15 != 0xFFFF l0800_A7F3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A7DD:
	branch Mem0[ss:fp - 0x0004:word16] != Mem0[ss:fp + 0x0004:word16] l0800_A7F3
	word16 dx_117 = Mem0[ss:fp - 0x0006:word16]
	branch Mem0[ss:fp - 0x0004:word16] != Mem0[ss:fp + 0x0004:word16] l0800_A7F3
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A7E8:
	branch dx_117 != Mem0[ss:fp + 0x0002:word16] l0800_A7F3
	branch dx_117 != Mem0[ss:fp + 0x0002:word16] l0800_A7F3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A7F3:
	Mem95[Mem0[ss:fp - 0x0006:segptr32]:byte] = 0x00
	branch (Mem95[Mem95[ss:fp + 0x0008:segptr32] + 0x0002:word16] & 0x0010) == 0x0000 l0800_A80B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A80B:
	word16 dx_108
	*dxOut = Mem95[ss:fp + 0x0004:word16]
	ax_103 = Mem95[ss:fp + 0x0002:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A805:
	word16 dx_102
	*dxOut = 0x0000
	ax_103 = 0x0000
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A7ED:
	word16 dx_126
	*dxOut = 0x0000
	ax_103 = 0x0000
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A811:
	return ax_103
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A77D_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A817(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP al ds
// LiveOut: ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_A817_entry:
// DataOut: al ds si ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_A817:
	word16 ax_54
	word32 es_bx_9 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg06, selector, 16), (word16) ptrArg06)
	word16 bx_11 = (word16) es_bx_9
	bool C_29 = msdos_find_first_file(wArg0A, SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	msdos_set_DTA(SLICE(es_bx_9, selector, 16), bx_11)
	word16 ax_22 = DPB(ax, 0x4E, 8)
	byte dl_41
	*dlOut = (byte) bx_11
	branch C_29 l0800_A844
// DataOut: bx dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A844:
	ax_54 = fn0800_8D2B(ds, ax_22)
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A840:
	ax_54 = 0x0000
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A848:
	return ax_54
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A817_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A84A(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP al ds
// LiveOut: ax
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32)
fn0800_A84A_entry:
// DataOut: al ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A84A:
	word16 ax_47
	word32 es_bx_9 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	bool C_23 = msdos_find_next_file()
	msdos_set_DTA(SLICE(es_bx_9, selector, 16), (word16) es_bx_9)
	word16 ax_22 = DPB(ax, 0x4F, 8)
	branch C_23 l0800_A871
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A871:
	ax_47 = fn0800_8D2B(ds, ax_22)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A86D:
	ax_47 = 0x0000
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A875:
	return ax_47
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A84A_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A877(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_A877_entry:
	*dsOut = ds
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A877:
	word16 si_18 = Mem0[ds:0x24E8:word16]
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_A8A8:
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_A88F
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A88F:
	ptr32 es_bx_54 = Mem0[ss:fp - 0x0006:segptr32]
	word16 bx_55 = (word16) es_bx_54
	branch (Mem0[es_bx_54 + 0x0002:word16] & 0x0003) == 0x0000 l0800_A8A4
// DataOut: bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A89A:
	Mem73[ss:fp - 0x000C:word16] = Mem0[ss:fp - 0x0004:word16]
	Mem75[ss:fp - 0x000E:word16] = bx_55
	byte sil_79
	word16 di_80
	fn0800_A6B7(ds, ptrArg00, wArg02, out dl, out sil_79, out di_80, out ds)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A8A4:
	Mem69[ss:fp - 0x0006:word16] = Mem0[ss:fp - 0x0006:word16] + 0x0014
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A8AF:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_A877_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(32)
fn0800_A8B7_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8B7:
	word16 dx_117
	word16 si_121
	word16 ax_150
	word16 di_12 = 0x0000
	byte cl_21 = Mem0[ptrArg0A:byte]
	branch cl_21 != 0x72 l0800_A8D5
// DataOut: cl di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8D5:
	branch cl_21 != 0x77 l0800_A8DF
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DF:
	branch cl_21 != 0x61 l0800_A8EF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8EF:
	ax_150 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A8E4:
	dx_117 = 0x0902
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DA:
	dx_117 = 0x0302
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8E7:
	di_12 = 0x0080
	si_121 = 0x0002
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8CD:
	dx_117 = 0x0001
	si_121 = 0x0001
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8F3:
	byte cl_112 = Mem0[ptrArg0A:byte]
	branch cl_112 == 0x2B l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A901:
	branch Mem0[ptrArg0A:byte] != 0x2B l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90A:
	branch cl_112 == 0x74 l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90F:
	branch cl_112 != 0x62 l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A914:
	branch cl_112 != 0x2B l0800_A91F
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A919:
	cl_112 = Mem0[ptrArg0A:byte]
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A91F:
	dx_117 = dx_117 & 0xFFFC | 0x0004
	di_12 = 0x0180
	si_121 = 0x0003
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A92B:
	word16 dx_102
	branch cl_112 != 0x74 l0800_A936
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A936:
	branch cl_112 != 0x62 l0800_A941
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A941:
	dx_102 = dx_117 | Mem0[ds:0x2512:word16] & 0xC000
	branch (dx_102 & 0x8000) == 0x0000 l0800_A953
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A93B:
	dx_102 = dx_117 | 0x8000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A950:
	si_121 = si_121 | 0x0040
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A930:
	dx_102 = dx_117 | 0x4000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A953:
	Mem71[ds:0x2354:word16] = 0xC7B5
	Mem77[ptrArg06:word16] = dx_102
	Mem82[ptrArg02:word16] = di_12
	ax_150 = si_121
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A967:
	return ax_150
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>

fn0800_A8B7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> si:si dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>



word16 fn0800_A96D(word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, segptr32 ptrArg0C, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax di dl ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32)
fn0800_A96D_entry:
	*dsOut = ds
	*siOut = si
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32)

l0800_A96D:
	word16 ax_203
	word16 ax_34 = fn0800_A8B7(ds, DPB(ptrLoc12, fp - 0x0006, 0), DPB(ptrLoc0E, fp - 0x0004, 0), DPB(ptrLoc0A, wArg04, 0))
	Mem40[ptrArg0C + 0x0002:word16] = ax_34
	word16 bp_112 = fp - 0x0002
	word16 sp_131 = fp - 0x0006
	branch ax_34 == 0x0000 l0800_A9B9
// DataOut: bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Local -0006(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16)

l0800_A991:
	branch Mem40[ptrArg0C + 0x0004:byte] >= 0x00 l0800_A9CD
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Local -0006(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16)

l0800_A998:
	word16 si_236
	word16 di_237
	byte al_239 = fn0800_B140(si, di, ds, wArg08, wArg0A, wLoc04 | wArg02, wLoc06, out bp_112, out si_236, out di_237, out ds)
	Mem245[Mem40[ss:bp_112 + 0x000E:segptr32] + 0x0004:byte] = al_239
	sp_131 = fp - 0x0004
	branch al_239 >= 0x00 l0800_A9CD
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_A9CD:
	word16 sp_137 = sp_131 - 0x0002
	Mem138[ss:sp_137:word16] = (int16) Mem40[Mem40[ss:bp_112 + 0x000E:segptr32] + 0x0004:byte]
	fn0800_8D76(wArg00)
	branch 0x0000 == 0x0000 l0800_A9E7
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> si:<invalid> di:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_A9DE:
	ptr32 es_bx_211 = Mem138[ss:bp_112 + 0x000E:segptr32]
	Mem215[es_bx_211 + 0x0002:word16] = Mem138[es_bx_211 + 0x0002:word16] | 0x0200
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:0x00 es:<invalid> cl:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_A9E7:
	word16 ax_155
	Mem148[ss:sp_137:word16] = 0x0200
	branch (Mem148[Mem148[ss:bp_112 + 0x000E:segptr32] + 0x0002:word16] & 0x0200) == 0x0000 l0800_A9FB
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:0x00 es:<invalid> cl:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_A9FB:
	ax_155 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:0x02 es:<invalid> cl:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_A9F6:
	ax_155 = 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:0x02 es:<invalid> cl:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_A9FD:
	Mem158[ss:sp_137 - 0x0002:word16] = ax_155
	Mem163[ss:sp_137 - 0x0004:word16] = 0x0000
	Mem165[ss:sp_137 - 0x0006:word16] = 0x0000
	Mem168[ss:sp_137 - 0x0008:word16] = Mem165[ss:bp_112 + 0x0010:word16]
	Mem171[ss:sp_137 - 0x000A:word16] = Mem168[ss:bp_112 + 0x000E:word16]
	selector ds_176
	branch fn0800_BA89(bp_112, ds, ptrArg00, wArg02, wArg08, wArg0A, out ds_176) == 0x0000 l0800_AA1F
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:0x4400 cx:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:0x00 es:<invalid> cl:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AA1F:
	Mem200[Mem171[ss:bp_112 + 0x000E:segptr32] + 0x0010:word16] = 0x0000
	word16 dx_201
	*dxOut = Mem200[ss:bp_112 + 0x0010:word16]
	ax_203 = Mem200[ss:bp_112 + 0x000E:word16]
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_AA12:
	Mem185[ss:sp_137:word16] = Mem171[ss:bp_112 + 0x0010:word16]
	Mem188[ss:sp_137 - 0x0002:word16] = Mem185[ss:bp_112 + 0x000E:word16]
	byte dl_189
	word16 di_190
	selector ds_191
	fn0800_A614(bp_112, ds_176, ptrArg00, wArg02, out dl_189, out di_190, out ds_191)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> si:<invalid> di:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_A9B9:
	ptr32 es_bx_114 = Mem40[ss:bp_112 + 0x000E:segptr32]
	Mem117[es_bx_114 + 0x0004:byte] = 0xFF
	Mem118[es_bx_114 + 0x0002:word16] = 0x0000
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> si:<invalid> di:<invalid> es:<invalid> bx:<invalid> cl:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_A9C7:
	word16 dx_93
	*dxOut = 0x0000
	ax_203 = 0x0000
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_AA2E:
	return ax_203
// DataOut: ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

fn0800_A96D_exit:
// DataOut: ax di dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_AA34(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
fn0800_AA34_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AA34:
	word16 wLoc06_10 = 0x2358
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA42:
	branch Mem0[ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA64
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA4C:
	wLoc06_10 = wLoc06_10 + 0x0014
	branch wLoc06_10 <u (word16) (Mem0[ds:0x24E8:word16] *s 0x0014) + 0x2358 l0800_AA42
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA64:
	word16 ax_43
	branch Mem0[ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA74
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AA74:
	word16 dx_56
	*dxOut = ds
	ax_43 = wLoc06_10
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA6E:
	word16 dx_51
	*dxOut = 0x0000
	ax_43 = 0x0000
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA7A:
	return ax_43
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AA34_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AA7E(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax di dl ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_AA7E_entry:
	*dsOut = ds
	*siOut = si
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA7E:
	word16 ax_29
	word16 dx_9
	word16 ax_10 = fn0800_AA34(ds, out dx_9)
	branch (ax_10 | dx_9) != 0x0000 l0800_AA97
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA97:
	word16 dx_83
	word16 si_84
	word16 di_85
	selector ds_86
	ax_29 = fn0800_A96D(fp - 0x0002, si, di, ds, 0x0000, wArg06, wArg08, wArg02, wArg04, DPB(ptrLoc0A, ax_10, 0), out dx_83, out si_84, out di_85, out ds_86)
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AA91:
	word16 dx_41
	*dxOut = 0x0000
	ax_29 = 0x0000
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AAAF:
	return ax_29
// DataOut: ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AA7E_exit:
// DataOut: ax di dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AAB3(word16 dx, word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds dx ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_AAB3_entry:
	*dsOut = ds
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AAB3:
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_AB91:
	branch Mem0[ss:fp + 0x0006:word16] == 0x0000 l0800_AB9A
	branch Mem0[ss:fp + 0x0006:word16] == 0x0000 l0800_AB9A
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB97:
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AABB:
	word16 ax_265
	Mem74[ss:fp + 0x0006:word16] = Mem0[ss:fp + 0x0006:word16] + 0x0001
	branch Mem74[Mem74[ss:fp + 0x0002:segptr32] + 0x0006:word16] <=u Mem74[ss:fp + 0x0006:word16] l0800_AACF
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AACF:
	ax_265 = Mem74[Mem74[ss:fp + 0x0002:segptr32] + 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AACA:
	ax_265 = Mem74[ss:fp + 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AAD6:
	word16 di_123 = ax_265
	ptr32 es_bx_85 = Mem74[ss:fp + 0x0002:segptr32]
	branch (Mem74[es_bx_85 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AB50
// DataOut: bp bx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AAE3:
	branch Mem74[es_bx_85 + 0x0006:word16] == 0x0000 l0800_AB50
// DataOut: bp bx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AAEA:
	branch Mem74[es_bx_85 + 0x0006:word16] >=u Mem74[ss:fp + 0x0006:word16] l0800_AB50
// DataOut: bp bx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AAF3:
	branch Mem74[es_bx_85:word16] != 0x0000 l0800_AB50
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_AB50:
	Mem127[ss:fp + 0x0006:word16] = Mem74[ss:fp + 0x0006:word16] - 0x0001
	branch Mem127[ss:fp + 0x0006:word16] == 0x0000 l0800_AB8C
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB5A:
	di_123 = di_123 - 0x0001
	branch di_123 == 0x0000 l0800_AB8C
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB5D:
	word16 ax_164
	ptr32 es_bx_153 = Mem127[ss:fp + 0x0002:segptr32]
	word16 v19_156 = Mem127[es_bx_153:word16] - 0x0001
	Mem157[es_bx_153:word16] = v19_156
	branch v19_156 < 0x0000 l0800_AB7A
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB7A:
	Mem192[ss:fp - 0x0008:word16] = Mem157[ss:fp + 0x0004:word16]
	Mem195[ss:fp - 0x000A:word16] = Mem192[ss:fp + 0x0002:word16]
	word16 dx_198
	ax_164 = fn0800_AEC2(ds, ptrArg00, wArg02, out dx_198, out di_123, out ds)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB65:
	word16 ax_181 = Mem157[es_bx_153 + 0x000E:word16]
	Mem184[es_bx_153 + 0x000C:word16] = Mem157[es_bx_153 + 0x000C:word16] + 0x0001
	ax_164 = DPB(ax_181, 0x00, 8) (alias)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB85:
	dx = ax_164
	byte dl_171 = (byte) ax_164
	branch ax_164 != 0xFFFF l0800_AB47
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB47:
	Mem177[Mem157[ss:fp + 0x0008:segptr32]:byte] = dl_171
	Mem179[ss:fp + 0x0008:word16] = Mem177[ss:fp + 0x0008:word16] + 0x0001
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB8C:
	branch dx == 0xFFFF l0800_AB3D
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AAF9:
	Mem216[ss:fp + 0x0006:word16] = Mem74[ss:fp + 0x0006:word16] - 0x0001
	word16 di_217 = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_AB0E:
	ptr32 es_bx_221 = Mem216[ss:fp + 0x0002:segptr32]
	branch Mem216[es_bx_221 + 0x0006:word16] <=u Mem216[ss:fp + 0x0006:word16] l0800_AB00
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_AB00:
	ptr32 es_bx_257 = Mem216[ss:fp + 0x0002:segptr32]
	di_217 = di_217 + Mem216[es_bx_257 + 0x0006:word16]
	Mem263[ss:fp + 0x0006:word16] = Mem216[ss:fp + 0x0006:word16] - Mem216[es_bx_257 + 0x0006:word16]
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_AB1A:
	Mem228[ss:fp - 0x0008:word16] = di_217
	Mem231[ss:fp - 0x000A:word16] = Mem228[ss:fp + 0x000A:word16]
	Mem234[ss:fp - 0x000C:word16] = Mem231[ss:fp + 0x0008:word16]
	word16 ax_236 = (int16) Mem234[es_bx_221 + 0x0004:byte]
	Mem239[ss:fp - 0x000E:word16] = ax_236
	word16 dx_243
	word16 ax_244 = fn0800_8F50((byte) ax_236, ds, wArg00, ptrArg02, wArg06, out dx_243)
	Mem249[ss:fp + 0x0008:word16] = Mem239[ss:fp + 0x0008:word16] + ax_244
	dx = ax_244
	branch ax_244 == di_217 l0800_AB91
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_AB36:
	Mem255[ss:fp + 0x0006:word16] = Mem249[ss:fp + 0x0006:word16] + (di_217 - ax_244)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:0xFF bx:<invalid> ah:0x3F cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AB3D:
	ptr32 es_bx_105 = Mem74[ss:fp + 0x0002:segptr32]
	Mem109[es_bx_105 + 0x0002:word16] = Mem74[es_bx_105 + 0x0002:word16] | 0x0020
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AB9A:
	return Mem0[ss:fp + 0x0006:word16]
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_AAB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_ABA3(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_ABA3_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_ABA3:
	word16 ax_106
	branch wArg06 != 0x0000 l0800_ABB6
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0008(16)

l0800_ABB6:
	word16 dx_136
	fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_136)
	branch dx_136 >u 0x0001 l0800_ABF2
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0008(16)

l0800_ABCD:
	branch dx_136 <u 0x0001 l0800_ABD3
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0008(16)

l0800_ABCF:
	branch false l0800_ABF2
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0008(16)

l0800_ABF2:
	word16 si_85 = wArg08 + 0x0001
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_AC0B:
	si_85 = si_85 - 0x0001
	branch si_85 == 0x0000 l0800_AC26
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_AC12:
	Mem111[ss:fp - 0x000C:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem114[ss:fp - 0x000E:word16] = Mem111[ss:fp + 0x0002:word16]
	Mem116[ss:fp - 0x0010:word16] = wArg06
	Mem119[ss:fp - 0x0012:word16] = Mem116[ss:fp + 0x000C:word16]
	Mem122[ss:fp - 0x0014:word16] = Mem119[ss:fp + 0x000A:word16]
	branch fn0800_AAB3(dx_136, fp - 0x0002, ds, out ds) == 0x0000 l0800_ABF8
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_ABF8:
	word16 ax_137 = fn0800_8CCB(Mem122[ss:fp + 0x0002:word16], 0x0000, Mem122[ss:fp + 0x0004:word16], wArg06, bp, out dx_136)
	Mem139[ss:fp + 0x0004:word16] = dx_136
	Mem140[ss:fp + 0x0002:word16] = ax_137
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_AC26:
	ax_106 = Mem0[ss:fp + 0x0008:word16] - si_85
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_ABD3:
	selector ds_162
	Mem168[ss:fp - 0x000C:word16] = Mem0[ss:fp - 0x0006:word16] - fn0800_AAB3(dx_136, fp - 0x0002, ds, out ds_162)
	ax_106 = (uint16) ((uint32) (uint16) Mem168[ss:fp - 0x000C:word16] /u wArg06)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_ABB2:
	ax_106 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_AC2B:
	return ax_106
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_ABA3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_AC31(word16 bp, word16 wArg00, segptr32 ptrArg02, ptr16 & bpOut, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(32)
fn0800_AC31_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(32)

l0800_AC31:
	word16 cx_101
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_AC4D
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC4D:
	int32 dx_ax_128 = (int32) Mem0[ptrArg02:word16]
	word16 dx_130 = SLICE(dx_ax_128, word16, 16)
	ax = ((word16) dx_ax_128 ^ dx_130) - dx_130
	cx_101 = ax
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC41:
	cx_101 = Mem0[ptrArg02 + 0x0006:word16] + Mem0[ptrArg02:word16] + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC5C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_ACAA
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC67:
	word16 wLoc06_66 = Mem0[ptrArg02 + 0x000C:word16]
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_ACA3:
	cx_101 = cx_101 - 0x0001
	ax = cx_101
	branch cx_101 != 0x0000 l0800_AC96
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC96:
	branch Mem0[ptrLoc06:byte] != 0x0A l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_ACA2:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC7E:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC8D:
	cx_101 = cx_101 - 0x0001
	ax = cx_101
	branch cx_101 != 0x0000 l0800_AC80
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC80:
	word16 v18_83 = wLoc06_66 - 0x0001
	ptrLoc06 = DPB(ptrLoc06, v18_83, 0) (alias)
	wLoc06_66 = v18_83
	branch Mem0[SLICE(ptrLoc06, selector, 16):v18_83:byte] != 0x0A l0800_AC8D
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC8C:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC94:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16)

l0800_ACAA:
	return ax
	word16 si_53
	*siOut = wArg00
	word16 bp_56
	*bpOut = Mem0[ss:bp:word16]
	return si
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AC31_exit:
// DataOut: ax bp si sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 bp:<invalid> Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:si Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_ACB3(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg0A, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_ACB3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_ACB3:
	word16 ax_108
	word16 bp_129 = fp - 0x0002
	word16 si_10 = wArg0A
	byte dl_23
	byte sil_24
	word16 di_25
	selector ds_26
	branch fn0800_A6B7(ds, DPB(ptrLoc08, wArg02, 0), wArg04, out dl_23, out sil_24, out di_25, out ds_26) == 0x0000 l0800_ACCE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_ACCE:
	branch wArg0A != 0x0001 l0800_ACEA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_ACD3:
	ptr32 es_bx_118 = Mem0[ss:fp + 0x0002:segptr32]
	word16 bx_119 = (word16) es_bx_118
	branch Mem0[es_bx_118:word16] <= 0x0000 l0800_ACEA
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_ACDC:
	Mem125[ss:fp - 0x0006:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem127[ss:fp - 0x0008:word16] = bx_119
	word16 ax_134 = (word16) (int32) fn0800_AC31(fp - 0x0002, bp, ptrArg00, out bp_129, out si_10)
	Mem136[ss:bp_129 + 0x0008:word16] = Mem127[ss:bp_129 + 0x0008:word16] - ax_134
	Mem140[ss:bp_129 + 0x000A:word16] = v21
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_ACEA:
	ptr32 es_bx_72 = Mem0[ss:bp_129 + 0x0004:segptr32]
	Mem76[es_bx_72 + 0x0002:word16] = Mem0[es_bx_72 + 0x0002:word16] & 0xFE5F
	Mem79[es_bx_72:word16] = 0x0000
	word16 dx_81 = Mem79[es_bx_72 + 0x0008:word16]
	Mem82[es_bx_72 + 0x000E:word16] = Mem79[es_bx_72 + 0x000A:word16]
	Mem83[es_bx_72 + 0x000C:word16] = dx_81
	Mem85[ss:fp - 0x0006:word16] = si_10
	Mem88[ss:fp - 0x0008:word16] = Mem85[ss:bp_129 + 0x000A:word16]
	Mem91[ss:fp - 0x000A:word16] = Mem88[ss:bp_129 + 0x0008:word16]
	word16 ax_93 = (int16) Mem91[es_bx_72 + 0x0004:byte]
	Mem96[ss:fp - 0x000C:word16] = ax_93
	word16 dx_99
	word16 ax_100 = fn0800_8E29((byte) ax_93, ds_26, wArg00, wArg02, wArg04, bArg06, out dx_99)
	branch dx_99 != 0xFFFF l0800_AD2A
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD20:
	branch ax_100 != 0xFFFF l0800_AD2A
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> di:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD2A:
	ax_108 = 0x0000
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> di:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD25:
	ax_108 = 0xFFFF
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> di:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_ACC9:
	ax_108 = 0xFFFF
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AD2C:
	return ax_108
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> di:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_ACB3_exit:
// DataOut: ax di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> di:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_AD2F(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AD2F_entry:
	*siOut = si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AD2F:
	word16 bp_39 = fp - 0x0002
	word16 dx_18
	word16 ax_19 = fn0800_97B6(ds, (int16) Mem0[ptrArg02 + 0x0004:byte], out dx_18)
	branch dx_18 != 0xFFFF l0800_AD52
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AD4D:
	branch ax_19 == 0xFFFF l0800_AD7B
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AD52:
	word16 bx_53 = (word16) ptrArg02
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_AD6B
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_AD6B:
	word16 si_89
	int32 dx_ax_92 = (int32) fn0800_AC31(fp - 0x0002, wLoc0C, DPB(ptrLoc0A, wArg02, 0), out bp_39, out si_89)
	word16 v22_95 = Mem0[ss:bp_39 - 0x0004:word16] - (word16) dx_ax_92
	Mem96[ss:bp_39 - 0x0004:word16] = v22_95
	Mem100[ss:bp_39 - 0x0002:word16] = Mem96[ss:bp_39 - 0x0002:word16] - SLICE(dx_ax_92, word16, 16) - (v22_95 <u 0x0000)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AD5B:
	word16 si_67
	int32 dx_ax_70 = (int32) fn0800_AC31(fp - 0x0002, wLoc0C, DPB(ptrLoc0A, bx_53, 0), out bp_39, out si_67)
	word16 v17_73 = Mem0[ss:bp_39 - 0x0004:word16] + (word16) dx_ax_70
	Mem74[ss:bp_39 - 0x0004:word16] = v17_73
	Mem78[ss:bp_39 - 0x0002:word16] = Mem74[ss:bp_39 - 0x0002:word16] + SLICE(dx_ax_70, word16, 16) + (v17_73 <u 0x0000)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AD7B:
	byte dl_42
	*dlOut = (byte) Mem0[ss:bp_39 - 0x0002:word16]
	return Mem0[ss:bp_39 - 0x0004:word16]
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:0x42 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AD2F_exit:
// DataOut: ax dl si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> si:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AD85(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_AD85_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD85:
	word16 ax_134
	branch wArg06 == 0x0000 l0800_AE07
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD94:
	word16 dx_85
	word16 ax_86 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_85)
	branch dx_85 >u 0x0001 l0800_ADC9
// DataOut: ax bp di ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAB:
	branch dx_85 <u 0x0001 l0800_ADB1
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAD:
	branch false l0800_ADC9
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADC9:
	word16 si_104 = 0x0000
	branch 0x0000 >=u wArg08 l0800_AE07
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_ADD0:
	Mem108[ss:fp - 0x000C:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem111[ss:fp - 0x000E:word16] = Mem108[ss:fp + 0x0002:word16]
	Mem113[ss:fp - 0x0010:word16] = wArg06
	Mem116[ss:fp - 0x0012:word16] = Mem113[ss:fp + 0x000C:word16]
	Mem119[ss:fp - 0x0014:word16] = Mem116[ss:fp + 0x000A:word16]
	word16 ax_124 = fn0800_B4BE(fp - 0x0002, ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds)
	branch false l0800_ADEA
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_ADE6:
	branch ax_124 == wArg06 l0800_ADEE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_ADEE:
	word16 dx_144
	word16 ax_145 = fn0800_8CCB(Mem119[ss:fp + 0x0002:word16], 0x0000, Mem119[ss:fp + 0x0004:word16], wArg06, bp, out dx_144)
	Mem146[ss:fp + 0x0004:word16] = dx_144
	Mem147[ss:fp + 0x0002:word16] = ax_145
	si_104 = si_104 + 0x0001
	branch si_104 <u Mem147[ss:fp + 0x0008:word16] l0800_ADD0
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_AE07:
	ax_134 = Mem0[ss:fp + 0x0008:word16]
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_ADEA:
	ax_134 = si_104
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_ADB1:
	selector ds_171
	ax_134 = (uint16) ((uint32) (uint16) fn0800_B4BE(fp - 0x0002, ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_86, wArg02, wArg04, out ds_171) /u wArg06)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE0A:
	return ax_134
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_AD85_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_AE10(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_AE10_entry:
	*dsOut = ds
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AE10:
	word16 si_11 = 0x0014
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_AE40:
	si_11 = si_11 - 0x0001
	branch si_11 != 0x0000 l0800_AE24
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AE24:
	ptr32 es_bx_46 = Mem0[ss:fp - 0x0006:segptr32]
	word16 bx_47 = (word16) es_bx_46
	branch (Mem0[es_bx_46 + 0x0002:word16] & 0x0300) != 0x0300 l0800_AE3C
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AE33:
	Mem65[ss:fp - 0x000A:word16] = Mem0[ss:fp - 0x0004:word16]
	Mem67[ss:fp - 0x000C:word16] = bx_47
	byte dl_70
	byte sil_71
	fn0800_A6B7(ds, ptrArg00, wArg02, out dl_70, out sil_71, out di, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AE3C:
	Mem61[ss:fp - 0x0006:word16] = Mem0[ss:fp - 0x0006:word16] + 0x0014
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AE47:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AE10_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AE4C(word16 bp, selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di dl ds dx
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_AE4C_entry:
	*diOut = di
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE4C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AE5D
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_AE5A:
	word16 di_100
	*diOut = fn0800_AE10(fp - 0x0002, ds, out ds)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_AE5D:
	word16 ax_56
	ptr32 es_bx_19 = Mem0[ss:fp + 0x0002:segptr32]
	Mem24[ss:fp - 0x0004:word16] = Mem0[es_bx_19 + 0x0006:word16]
	word16 ax_25 = Mem24[es_bx_19 + 0x000A:word16]
	word16 dx_26 = Mem24[es_bx_19 + 0x0008:word16]
	Mem27[es_bx_19 + 0x000E:word16] = ax_25
	Mem28[es_bx_19 + 0x000C:word16] = dx_26
	Mem30[ss:fp - 0x0006:word16] = ax_25
	Mem32[ss:fp - 0x0008:word16] = dx_26
	Mem36[ss:fp - 0x000A:word16] = (int16) Mem32[es_bx_19 + 0x0004:byte]
	word16 dx_40
	selector ds_41
	word16 ax_42 = fn0800_B97F(ds, wArg00, ptrArg02, wArg04, wArg06, out dx_40, out ds_41)
	ptr32 es_bx_44 = Mem36[ss:fp + 0x0002:segptr32]
	Mem47[es_bx_44:word16] = ax_42
	branch ax_42 <= 0x0000 l0800_AE95
// DataOut: bp bx di dl ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> si:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -2(fp):bp

l0800_AE95:
	ptr32 es_bx_73 = Mem47[ss:fp + 0x0002:segptr32]
	branch Mem47[es_bx_73:word16] != 0x0000 l0800_AEAE
// DataOut: bp bx di dl ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEAE:
	ptr32 es_bx_91 = Mem47[ss:fp + 0x0002:segptr32]
	Mem94[es_bx_91:word16] = 0x0000
	Mem96[es_bx_91 + 0x0002:word16] = Mem94[es_bx_91 + 0x0002:word16] | 0x0010
// DataOut: di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE9E:
	Mem90[es_bx_73 + 0x0002:word16] = Mem47[es_bx_73 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBB:
	ax_56 = 0xFFFF
// DataOut: ax di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE8C:
	Mem66[es_bx_44 + 0x0002:word16] = Mem47[es_bx_44 + 0x0002:word16] & 0xFFDF
	ax_56 = 0x0000
// DataOut: ax di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBE:
	return ax_56
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AE4C_exit:
// DataOut: ax di dl ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax di dl ds dx
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AEC2_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AEC2:
	Mem12[ptrArg02:word16] = Mem0[ptrArg02:word16] + 0x0001
	word16 dx_23
	word16 di_24
	selector ds_25
	return fn0800_AED6(fp - 0x0002, ds, DPB(ptrLoc06, (word16) ptrArg02, 0), wArg04, out dx_23, out di_24, out ds_25)
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_AEC2_exit:
// DataOut: ax di dl ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_AED6(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di dl ds dx
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_AED6_entry:
	*dxOut = dx
	*diOut = di
	*dsOut = ds
// DataOut: bp di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_AED6:
	word16 ax_100
	branch (wArg02 | wArg04) != 0x0000 l0800_AEE8
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_AEE8:
	word16 ax_124
	branch Mem0[ptrArg02:word16] <= 0x0000 l0800_AF0B
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_AF0B:
	branch Mem0[ptrArg02:word16] < 0x0000 l0800_AF7F
// DataOut: bp bx di dl ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_AF14:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0110) != 0x0000 l0800_AF7F
// DataOut: bp bx di dl ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_AF1C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0001) == 0x0000 l0800_AF7F
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_AF24:
	Mem163[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] | 0x0080
	word16 bx_160 = (word16) ptrArg02
	branch Mem163[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AF43
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(16)

l0800_AF43:
	branch (Mem163[Mem163[ss:fp + 0x0002:segptr32] + 0x0002:word16] & 0x0200) == 0x0000 l0800_AF51
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_AF4E:
	word16 di_263
	*diOut = fn0800_AE10(fp - 0x0002, ds, out ds)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_AF51:
	Mem199[ss:fp - 0x0006:word16] = 0x0001
	Mem201[ss:fp - 0x0008:word16] = ds
	Mem204[ss:fp - 0x000A:word16] = 0x4EE4
	Mem211[ss:fp - 0x000C:word16] = (int16) Mem204[Mem204[ss:fp + 0x0002:segptr32] + 0x0004:byte]
	word16 dx_214
	word16 ax_216 = fn0800_B97F(ds, wArg00, ptrArg02, wArg04, wArg06, out dx_214, out ds)
	branch ax_216 != 0x0000 l0800_AF9E
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AF9E:
	branch Mem211[ds:0x4EE4:byte] != 0x0D l0800_AFB0
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_AFA5:
	branch (Mem211[Mem211[ss:fp + 0x0002:segptr32] + 0x0002:word16] & 0x0040) == 0x0000 l0800_AF43
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_AFB0:
	ptr32 es_bx_247 = Mem211[ss:fp + 0x0002:segptr32]
	Mem251[es_bx_247 + 0x0002:word16] = Mem211[es_bx_247 + 0x0002:word16] & 0xFFDF
	ax_124 = DPB(ax_216, Mem251[ds:0x4EE4:byte], 0) (alias)
// DataOut: al di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp

l0800_AF6D:
	Mem228[ss:fp - 0x0006:word16] = (int16) Mem211[Mem211[ss:fp + 0x0002:segptr32] + 0x0004:byte]
	word16 dx_229
	branch fn0800_A59D(ds, wArg00, out dx_229) == 0x0001 l0800_AF8A
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp

l0800_AF8A:
	ptr32 es_bx_235 = Mem228[ss:fp + 0x0002:segptr32]
	Mem243[es_bx_235 + 0x0002:word16] = Mem228[es_bx_235 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AF7F:
	ptr32 es_bx_140 = Mem0[ss:fp + 0x0002:segptr32]
	Mem144[es_bx_140 + 0x0002:word16] = Mem0[es_bx_140 + 0x0002:word16] | 0x0010
	ptr32 es_bx_146 = Mem144[ss:fp + 0x0002:segptr32]
	Mem150[es_bx_146 + 0x0002:word16] = Mem144[es_bx_146 + 0x0002:word16] | 0x0010
// DataOut: di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AF34:
	word16 dx_173
	word16 di_174
	selector ds_175
	branch fn0800_AE4C(fp - 0x0002, ds, DPB(ptrLoc08, bx_160, 0), out dx_173, out di_174, out ds_175) == 0x0000 l0800_AEF1
// DataOut: bp di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp

l0800_AF3F:
// DataOut: di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AEF1:
	ptr32 es_bx_112 = Mem0[ss:fp + 0x0002:segptr32]
	Mem116[es_bx_112:word16] = Mem0[es_bx_112:word16] - 0x0001
	word16 ax_117 = Mem116[es_bx_112 + 0x000E:word16]
	word16 si_118 = Mem116[es_bx_112 + 0x000C:word16]
	Mem120[es_bx_112 + 0x000C:word16] = Mem116[es_bx_112 + 0x000C:word16] + 0x0001
	ax_124 = DPB(ax_117, Mem120[ax_117:si_118:byte], 0) (alias)
// DataOut: al di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AFBB:
	ax_100 = DPB(ax_124, 0x00, 8) (alias)
// DataOut: ax di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AEE2:
	ax_100 = 0xFFFF
// DataOut: ax di dl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AFBD:
	return ax_100
// DataOut: ax di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_AED6_exit:
// DataOut: ax di dl ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_AFCB(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_AFCB_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFCB:
	word16 ax_188
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	branch (es_16 | di_15) == 0x0000 l0800_AFFC
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFDC:
	byte ah_82 = Mem0[ptrArg02:byte]
	word16 cx_205 = 0xFFFF
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:es | di -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5:
	branch cx_205 == 0x0000 l0800_AFE7
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5_1:
	di_15 = di_206 + 0x0001
	cx_205 = cx_205 - 0x0001
	word16 di_206 = di_15
	branch 0x00 != Mem0[es_16:di_206:byte] l0800_AFE5
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE7:
	word16 cx_95 = ~cx_205
	branch cx_95 == 0x0001 l0800_AFFC
// DataOut: ah cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFEC:
	ptr32 es_di_99 = Mem0[ds:0x26AA:segptr32]
	word16 di_100 = (word16) es_di_99
	word16 wLoc06_108 = di_100
	branch (SLICE(es_di_99, selector, 16) | di_100) != 0x0000 l0800_B009
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B009:
	ptr32 es_di_121 = Mem0[ds:di_100:segptr32]
	word16 di_122 = (word16) es_di_121
	selector es_123 = SLICE(es_di_121, selector, 16)
	word16 cx_112 = cx_95 - 0x0001
	branch (es_123 | di_122) == 0x0000 l0800_AFFC
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B012:
	byte al_129 = Mem0[es_di_121:byte]
	branch al_129 == 0x00 l0800_AFFC
// DataOut: ah al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B019:
	branch ah_82 != al_129 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B01D:
	byte Z_156 = cond(Mem0[es_123:cx_95 - 0x0001 + di_122:byte] - 0x3D)
	branch Mem0[es_123:cx_95 - 0x0001 + di_122:byte] != 0x3D l0800_B002
// DataOut: ah bx cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B025:
	selector ds_161 = SLICE(ptrArg02, selector, 16)
	word16 si_162 = (word16) ptrArg02
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029:
	branch cx_112 == 0x0000 l0800_B02B
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029_1:
	Z_156 = cond(Mem0[ds_161:si_208:byte] - Mem0[es_123:di_122:byte]) (alias)
	si_162 = si_208 + 0x0001
	di_122 = di_122 + 0x0001
	cx_112 = cx_112 - 0x0001
	word16 si_208 = si_162
	branch Mem0[ds_161:si_208:byte] != Mem0[es_123:di_122:byte] l0800_B029
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B02B:
	branch Z_156 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B002:
	word16 v23_147 = wLoc06_108 + 0x0004
	wLoc06_108 = v23_147
	di_100 = v23_147 (alias)
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B030:
	ax_188 = di_122 + 0x0001
	word16 dx_191
	*dxOut = es_123
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_AFFC:
	word16 dx_74
	*dxOut = 0x0000
	ax_188 = 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_B035:
	return ax_188
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp

fn0800_AFCB_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> dx:<invalid> di:di si:si al:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> Sequence ds:si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp



selector fn0800_B03B(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: es
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es esi rax rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_B03B_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B03B:
	word16 di_16 = (word16) ptrArg02
	selector es_17 = SLICE(ptrArg02, selector, 16)
	selector ds_20 = SLICE(ptrArg06, selector, 16)
	word16 si_21 = (word16) ptrArg06
	word16 cx_24 = wArg0A >>u 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B04E:
	branch cx_24 == 0x0000 l0800_B050
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B050:
	branch wArg0A >>u 0x0001 >=u 0x0000 l0800_B053
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B052:
	Mem54[es_17:di_16:byte] = Mem0[ds_20:si_21:byte]
// DataOut: es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B053:
	return es_17
// DataOut: es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_B03B_exit:
// DataOut: es
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:si di:di ds:ds ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_B04E_1:
	Mem35[es_17:di_16:word16] = Mem0[ds_20:si_21:word16]
	si_21 = si_21 + 0x0002
	di_16 = di_16 + 0x0002
	cx_24 = cx_24 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(8)
fn0800_B05F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(8)

l0800_B05F:
	word16 di_11 = (word16) ptrArg02
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 cx_14 = wArg06
	word16 ax_19 = DPB(ax, bArg08, 8)
	branch (di_11 & 0x0001) == 0x0000 l0800_B079
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B075:
	branch wArg06 == 0x0000 l0800_B080
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B077:
	Mem52[ptrArg02:byte] = bArg08
	di_11 = di_11 + 0x0001
	cx_14 = wArg06 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B079:
	word16 cx_37 = cx_14 >>u 0x0001
	cx_44 = cx_37
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di + 0x0001 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07B:
	word16 cx_44
	branch cx_44 == 0x0000 l0800_B07D
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07D:
	branch cx_37 >=u 0x0000 l0800_B080
// DataOut: al di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07F:
	Mem49[es_12:di_11:byte] = bArg08
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B080:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp

fn0800_B05F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di -4(fp):di -2(fp):bp

l0800_B07B_1:
	Mem45[es_12:di_11:word16] = ax_19
	di_11 = di_11 + 0x0002
	cx_44 = cx_44 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B083(word16 wArg02, word16 wArg04, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)
fn0800_B083_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)

l0800_B083:
	fn0800_B05F(DPB(ptrLoc0A, wArg02, 0), wArg08, bArg06)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B083_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> dx:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ax -2(fp):bp



void fn0800_B0A1(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0A1_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0A1:
	word16 ax_119
	byte dl_24
	branch fn0800_8F2F(wArg02, wArg08, wArg04, wArg06, out dl_24) l0800_B0BE
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0BE:
	ax_119 = 0x0000
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0B8:
	ax_119 = 0x0001
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0C1:
	selector ds_31 = SLICE(ptrArg02, selector, 16)
	word16 si_104 = (word16) ptrArg02
	word16 di_106 = (word16) ptrArg06
	selector es_36 = SLICE(ptrArg06, selector, 16)
	word16 cx_108 = wArg0A
	branch ax_119 == 0x0000 l0800_B0D4
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0CE:
	si_104 = si_104 + wArg0A - 0x0001
	di_106 = di_106 + wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0D4:
	branch (di_106 & 0x0001) == 0x0000 l0800_B0DE
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DA:
	branch wArg0A == 0x0000 l0800_B0ED
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DC:
	Mem103[es_36:di_106:byte] = Mem0[ds_31:si_104:byte]
	si_104 = si_104 + 0x0001
	di_106 = di_106 + 0x0001
	cx_108 = wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DE:
	word16 si_72 = si_104 - ax_119
	word16 di_74 = di_106 - ax_119
	word16 cx_76 = cx_108 >>u 0x0001
	cx_86 = cx_76
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E4:
	word16 cx_86
	branch cx_86 == 0x0000 l0800_B0E6
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E6:
	branch cx_76 >=u 0x0000 l0800_B0ED
// DataOut: ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E8:
	Mem99[es_36:di_74 + ax_119:byte] = Mem0[ds_31:si_72 + ax_119:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0ED:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_B0A1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:si di:di ds:ds ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_B0E4_1:
	Mem89[es_36:di_74:word16] = Mem0[ds_31:si_72:word16]
	si_72 = si_72 + 0x0002
	di_74 = di_74 + 0x0002
	cx_86 = cx_86 - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_B0F3(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: di ds si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0F3_entry:
	*diOut = di
	*dsOut = ds
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0F3:
	fn0800_B0A1(DPB(ptrLoc0C, wArg06, 0), wArg08, DPB(ptrLoc08, wArg02, 0), wArg04, wArg0A)
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B0F3_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B113(byte al, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_B113_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_B113:
	word16 ax_18
	branch msdos_create_truncate_file(wArg02, SLICE(ptrArg04, selector, 16), (word16) ptrArg04, out ax_18) l0800_B126
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B126:
	fn0800_8D2B(ds, ax_18)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B124:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B12A:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp

fn0800_B113_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp



void fn0800_B12E(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_B12E_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_B12E:
	word16 ax_16
	msdos_write_file(wArg02, 0x0000, SEQ(ds, 0x0000), out ax_16)
	return
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B12E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> cx:0x0000 dx:0x0000 ah:0x40 -2(fp):bp



byte fn0800_B140(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: al bp di ds si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B140_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B140:
	sp = fp
	sp = fp - 0x0002
	wLoc02 = bp
	bp = fp - 0x0002
	sp = fp - 0x0006
	sp = fp - 0x0008
	wLoc08 = si
	sp = fp - 0x000A
	wLoc0A = di
	si = wArg06
	di = wArg08
	SZO = cond(si & 0xC000)
	Z = SZO (alias)
	C = false
	branch Test(NE,Z) l0800_B15C
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B154:
	ax = Mem0[ds:0x2512:word16]
	ax = ax & 0xC000
	si = si | ax
	SZO = cond(si)
	C = false
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B15C:
	ax = 0x0000
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
	sp = fp - 0x000C
	wLoc0C = 0x0000
	bLoc0C = (byte) wLoc0C (alias)
	v13 = wArg04
	sp = fp - 0x000E
	wLoc0E = v13
	v14 = wArg02
	sp = fp - 0x0010
	wLoc10 = v14
	ptrLoc10 = DPB(ptrLoc10, wLoc10, 0) (alias)
	ax = fn0800_A53C(al, ds, ptrLoc10, bLoc0C, wLoc0A)
	sp = fp - 0x000A
	wLoc04 = ax
	SZO = cond(si & 0x0100)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_B1F2
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B174:
	di = di & Mem0[ds:0x2514:word16]
	ax = di
	SZO = cond(ax & 0x0180)
	Z = SZO (alias)
	C = false
	branch Test(NE,Z) l0800_B186
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B17F:
	ax = 0x0001
	sp = fp - 0x000C
	wLoc0C = 0x0001
	ax = fn0800_8D2B(ds, wLoc0C)
	sp = fp - 0x000A
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B186:
	SCZO = cond(wLoc04 - 0xFFFF)
	Z = SCZO (alias)
	branch Test(NE,Z) l0800_B1AF
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B1AF:
	SZO = cond(si & 0x0400)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_B1F2
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B1B5:
	ax = 0x0050
	sp = fp - 0x000C
	wLoc0C = 0x0050
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B18C:
	SCZO = cond(Mem0[ds:0x2516:word16] - 0x0002)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0800_B19D
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B19D:
	SZO = cond(di & 0x0080)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_B1A7
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B1A7:
	ax = 0x0001
	al = (byte) ax (alias)
// DataOut: al ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B1A3:
	ax = 0x0000
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
// DataOut: al ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B1AA:
	wLoc04 = ax
// DataOut: al bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B1BB:
	SZO = cond(si & 0x00F0)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_B1DD
// DataOut: al bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B1DD:
	v26 = wArg04
	sp = fp - 0x000C
	wLoc0C = v26
	v27 = wArg02
	sp = fp - 0x000E
	wLoc0E = v27
	ptrLoc0E = DPB(ptrLoc0E, wLoc0E, 0) (alias)
	v28 = wLoc04
	sp = fp - 0x0010
	wLoc10 = v28
	fn0800_B113(al, ds, wLoc10, ptrLoc0E)
	sp = fp - 0x000A
	di = 0xFFFF
	ax = 0xFFFF
	SZO = cond(0xFFFF)
	SO = SZO (alias)
	C = false
	branch Test(GE,SO) l0800_B265
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B1ED_thunk_fn0800_B265:
	al = fn0800_B265(bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B1EF:
	al = fn0800_B265(bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B1C1:
	v24 = wArg04
	sp = fp - 0x000C
	wLoc0C = v24
	v25 = wArg02
	sp = fp - 0x000E
	wLoc0E = v25
	ptrLoc0E = DPB(ptrLoc0E, wLoc0E, 0) (alias)
	ax = 0x0000
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
	sp = fp - 0x0010
	wLoc10 = 0x0000
	fn0800_B113(al, ds, wLoc10, ptrLoc0E)
	sp = fp - 0x000A
	di = 0xFFFF
	ax = 0xFFFF
	al = (byte) ax (alias)
	SZO = cond(0xFFFF)
	SO = SZO (alias)
	C = false
	branch Test(GE,SO) l0800_B1D6
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B1D6:
	sp = fp - 0x000C
	wLoc0C = 0xFFFF
	al = fn0800_A57F(al, ds, wLoc0C)
	cx = 0xFFFF
	sp = fp - 0x000A
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B1F2:
	sp = fp - 0x000C
	wLoc0C = si
	v15 = wArg04
	sp = fp - 0x000E
	wLoc0E = v15
	v16 = wArg02
	sp = fp - 0x0010
	wLoc10 = v16
	ptrLoc10 = DPB(ptrLoc10, wLoc10, 0) (alias)
	fn0800_B2A0(ds, ptrLoc10, wLoc0C)
	sp = fp - 0x000A
	di = ax
	ax = ax | ax
	SZO = cond(ax)
	SO = SZO (alias)
	C = false
	branch Test(LT,SO) l0800_B265
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0010(16)

l0800_B203_thunk_fn0800_B265:
	al = fn0800_B265(bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B205:
	ax = 0x0000
	al = (byte) ax (alias)
	SZO = cond(0x0000)
	C = false
	sp = fp - 0x000C
	wLoc0C = 0x0000
	sp = fp - 0x000E
	wLoc0E = di
	ax = fn0800_A2A3(al, ds, wLoc0E, wLoc0C, ptrLoc0A, wLoc06)
	al = (byte) ax (alias)
	cx = wLoc0E
	sp = fp - 0x000C
	cx = 0x0000
	sp = fp - 0x000A
	wLoc06 = ax
	SZO = cond(ax & 0x0080)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_B237
// DataOut: al ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000E(16)

l0800_B237:
	SZO = cond(si & 0x0200)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_B241
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000E(16)

l0800_B23B_thunk_fn0800_B241:
	al = fn0800_B241(bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B23D:
	sp = fp - 0x000C
	wLoc0C = di
	fn0800_B12E(al, ds, wLoc0C)
	sp = fp - 0x000A
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B23E_thunk_fn0800_B241:
	al = fn0800_B241(bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:0x0000 ah:0x40 al:<invalid> bx:<invalid> cx:0x0000 cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B216:
	si = si | 0x2000
	SZO = cond(si & 0x8000)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0800_B241
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B21E_thunk_fn0800_B241:
	al = fn0800_B241(bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B220:
	ax = ax & 0x00FF
	ax = ax | 0x0020
	al = (byte) ax (alias)
	SZO = cond(ax)
	C = false
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B223_thunk_fn0800_B226:
	al = fn0800_B226(ax, bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B1D3:
	al = fn0800_B265(bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B298:
	byte al_21 = (byte) di
// DataOut: al bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):<invalid>

l0800_B29A:
	word16 di_24
	*diOut = Mem0[ss:fp:word16]
	word16 si_26
	*siOut = Mem0[ss:fp + 0x0002:word16]
	word16 bp_29
	*bpOut = Mem0[ss:bp:word16]
	return al_21
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):<invalid>

fn0800_B265_exit:
// DataOut: al bp di ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> si:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):<invalid>

l0800_B193:
	v19 = Mem0[ds:0x2516:word16]
	sp = fp - 0x000C
	wLoc0C = v19
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B197:
	ax = fn0800_8D2B(ds, wLoc0C)
	sp = fp - 0x000A
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B197_thunk_fn0800_B265:
	al = fn0800_B265(bp, si, di, ds, out bp, out si, out di, out ds)
	ax = DPB(ax, al, 0) (alias)
	return al
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:0xFFFF al:0xFF cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_B140_exit:
	use bp (=> bpOut)
	use si (=> siOut)
	use di (=> diOut)
	use ds (=> dsOut)
// DataOut: al bp di ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_B226(word16 ax, word16 bp, word16 si, word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp di ds si ss
// LiveOut: al bp di ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_B226_entry:
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B226:
	fn0800_A2A3(0x01, ds, di, 0x0001, DPB(ptrLoc04, ax, 0), wArg00)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B235_thunk_fn0800_B241:
	word16 bp_26
	word16 si_27
	word16 di_28
	selector ds_29
	return fn0800_B241(bp, si, di, ds, out bp_26, out si_27, out di_28, out ds_29)
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:<invalid> ax:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):0x0001 -4(fp):ax -2(fp):0x0000

fn0800_B226_exit:
// DataOut: al bp di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> ax:<invalid> ds:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> bp:<invalid> -8(fp):di -6(fp):0x0001 -4(fp):ax -2(fp):0x0000



byte fn0800_B241(word16 bp, word16 si, word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: al bp di ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_B241_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B241:
	branch (Mem0[ss:bp - 0x0002:word16] & 0x0001) == 0x0000 l0800_B265
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B246_thunk_fn0800_B265:
	word16 bp_82
	word16 si_83
	word16 di_84
	selector ds_85
	return fn0800_B265(bp, si, di, ds, out bp_82, out si_83, out di_84, out ds_85)
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B248:
	branch (si & 0x0100) == 0x0000 l0800_B265
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B24C_thunk_fn0800_B265:
	word16 bp_75
	word16 si_76
	word16 di_77
	selector ds_78
	return fn0800_B265(bp, si, di, ds, out bp_75, out si_76, out di_77, out ds_78)
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B24E:
	branch (si & 0x00F0) == 0x0000 l0800_B265
// DataOut: bp di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B252_thunk_fn0800_B265:
	word16 bp_63
	word16 si_64
	word16 di_65
	selector ds_66
	return fn0800_B265(bp, si, di, ds, out bp_63, out si_64, out di_65, out ds_66)
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B254:
	fn0800_A53C(0x01, ds, DPB(ptrLoc08, Mem0[ss:bp + 0x0004:word16], 0), 0x01, 0x0001)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B262_thunk_fn0800_B265:
	word16 bp_57
	word16 si_58
	word16 di_59
	selector ds_60
	return fn0800_B265(bp, si, di, ds, out bp_57, out si_58, out di_59, out ds_60)
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):0x0001

fn0800_B241_exit:
// DataOut: al bp di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> di:<invalid> si:<invalid> bp:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0001 -2(fp):0x0001



void fn0800_B25A(byte al, word16 bp, word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  CZ al bp di ds si ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_B25A_entry:
// DataOut: al bp di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B25A:
	branch CZ l0800_B262
// DataOut: al bp di ds si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B25C:
	fn0800_A53C(al, ds, DPB(ptrLoc02, Mem0[ss:bp + 0x0004:word16], 0), bArg02, wArg04)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B262:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> ax:<invalid> -2(fp):<invalid>

l0800_B262_thunk_fn0800_B265:
	word16 bp_16
	word16 si_17
	word16 di_18
	selector ds_19
	fn0800_B265(bp, si, di, ds, out bp_16, out si_17, out di_18, out ds_19)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> ax:<invalid> -2(fp):<invalid>

fn0800_B25A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> si:<invalid> bp:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> bx:<invalid> -2(fp):<invalid>



byte fn0800_B265(word16 bp, word16 si, word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: al bp di ds si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_B265_entry:
	*dsOut = ds
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B265:
	branch di < 0x0000 l0800_B298
// DataOut: bp di dil ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B269:
	word16 ax_40
	branch (si & 0x0300) == 0x0000 l0800_B274
// DataOut: bp di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di
// LocalsOut: fp(16)

l0800_B274:
	ax_40 = 0x0000
// DataOut: ax bp di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di
// LocalsOut: fp(16)

l0800_B26F:
	ax_40 = 0x1000
// DataOut: ax bp di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di
// LocalsOut: fp(16)

l0800_B276:
	word16 ax_52
	word16 dx_44 = si & 0xF8FF | ax_40
	branch (Mem0[ss:bp - 0x0002:word16] & 0x0001) == 0x0000 l0800_B28A
// DataOut: bp di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di ax:<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_B28A:
	ax_52 = 0x0100
// DataOut: ax bp di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 di:di ax:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_B286:
	ax_52 = 0x0000
// DataOut: ax bp di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 di:di ax:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16)

l0800_B28D:
	Mem60[ds:(di << 0x0001) + 0x24EA:word16] = dx_44 | ax_52
// DataOut: bp dil ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 di:di ax:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_B298:
	byte al_21 = (byte) di
// DataOut: al bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):<invalid>

l0800_B29A:
	word16 di_24
	*diOut = Mem0[ss:fp:word16]
	word16 si_26
	*siOut = Mem0[ss:fp + 0x0002:word16]
	word16 bp_29
	*bpOut = Mem0[ss:bp:word16]
	return al_21
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):<invalid>

fn0800_B265_exit:
// DataOut: al bp di ds si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> si:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):<invalid>



void fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ax bp ds sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_B2A0_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_B2A0:
	byte al_17 = 0x01
	branch (wArg06 & 0x0002) != 0x0000 l0800_B2BB
// DataOut: al cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B1:
	al_17 = 0x02
	branch (wArg06 & 0x0004) != 0x0000 l0800_B2BB
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:0x01 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B9:
	al_17 = 0x00
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:0x02 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2BB:
	word16 ax_31
	branch msdos_open_file(ptrArg02, al_17 | bArg06 & 0xF0, out ax_31) l0800_B2E7
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0006(16)

l0800_B2E7:
	fn0800_8D2B(ds, ax_31)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2CD:
	Mem52[ds:(ax_31 << 0x0001) + 0x24EA:word16] = wArg06 & 0xB8FF | 0x8000
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2EB:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp

fn0800_B2A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp



word16 fn0800_B2EF(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_B2EF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_B2EF:
	word16 di_28
	return fn0800_9828(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, out di_28)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B2EF_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -14(fp):fp + 0x0006 -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x236C -6(fp):ds -4(fp):0xB4BE -2(fp):bp



word16 fn0800_B30A(selector ds, segptr32 ptrArg04, ptr16 & dlOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax bp di dl ds sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0004(32)
fn0800_B30A_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B30A:
	Mem12[ptrArg04:word16] = Mem0[ptrArg04:word16] - 0x0001
	word16 bx_8 = (word16) ptrArg04
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B310_thunk_fn0800_B313:
	byte dl_15
	word16 bp_16
	word16 di_17
	selector ds_18
	return fn0800_B313(bx_8, fp - 0x0002, ds, out dl_15, out bp_16, out di_17, out ds_18)
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp

fn0800_B30A_exit:
// DataOut: ax bp di dl ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> -2(fp):bp



word16 fn0800_B313(word16 bx, word16 bp, selector ds, ptr16 & dlOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx ds ss
// LiveOut: ax bp di dl ds sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_B313_entry:
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B313:
	byte dl_19
	word16 di_20
	selector ds_21
	word16 ax_22 = fn0800_B324(bp, ds, (byte) (int16) Mem0[ss:bp + 0x0004:byte], DPB(ptrLoc04, bx, 0), Mem0[ss:bp + 0x0008:word16], out dl_19, out di_20, out ds_21)
	word16 bp_26
	*bpOut = Mem0[ss:fp:word16]
	return ax_22
// DataOut: ax bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B313_exit:
// DataOut: ax bp di dl ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> ax:<invalid> bp:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> -6(fp):<invalid> -4(fp):bx -2(fp):<invalid>



word16 fn0800_B324(word16 bp, selector ds, byte bArg02, segptr32 ptrArg04, selector psegArg06, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B324_entry:
	*dsOut = ds
	*diOut = di
	*dlOut = dl
// DataOut: bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(0) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B324:
	word16 ax_104
	word16 ax_41
	Mem11[ds:0x4EE6:byte] = bArg02
	word16 bx_15 = (word16) ptrArg04
	branch Mem11[ptrArg04:word16] >= 0xFFFF l0800_B389
// DataOut: bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -000A(0) Stack +0004(32) Stack +0006(16)

l0800_B389:
	branch (Mem11[ptrArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_B39C
// DataOut: bp bx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -000A(0) Stack +0004(32) Stack +0006(16)

l0800_B394:
	branch (Mem11[ptrArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_B3A6
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -000A(0) Stack +0004(32) Stack +0006(16)

l0800_B3A6:
	Mem189[ptrArg04 + 0x0002:word16] = Mem11[ptrArg04 + 0x0002:word16] | 0x0100
	word16 bx_186 = (word16) ptrArg04
	branch Mem189[ptrArg04 + 0x0006:word16] == 0x0000 l0800_B421
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -000A(0) Stack +0004(32) Stack +0006(16)

l0800_B421:
	selector es_268 = SLICE(ptrArg04, selector, 16)
	branch (Mem189[ds:((int16) Mem189[ptrArg04 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B44C
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_B435:
	word16 ax_370 = (int16) Mem189[es_268:wArg04 + 0x0004:byte]
	word16 dx_374
	fn0800_8E29((byte) ax_370, ds, ax_370, 0x0000, 0x0000, 0x02, out dx_374)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B44C:
	branch Mem189[ds:0x4EE6:byte] != 0x0A l0800_B478
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B453:
	branch (Mem189[ptrArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B478
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B45E:
	word16 ax_348 = (int16) Mem189[ptrArg04 + 0x0004:byte]
	ptrLoc0A = DPB(ptrLoc0A, 0x26AE, 0) (alias)
	byte dl_352
	ax_104 = fn0800_C779((byte) ax_348, ds, ax_348, ptrLoc0A, 0x0001, out dl_352)
	branch ax_104 != 0x0001 l0800_B495
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B478:
	word16 ax_323 = (int16) Mem189[ptrArg04 + 0x0004:byte]
	byte dl_327
	ax_104 = fn0800_C779((byte) ax_323, ds, ax_323, DPB(ptrLoc0A, 0x4EE6, 0), 0x0001, out dl_327)
	branch ax_104 == 0x0001 l0800_B4A3
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Stack +0004(32)

l0800_B495:
	branch (Mem189[ptrArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_B4A3
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: Stack +0004(32)

l0800_B4A0:
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: Stack +0004(32)

l0800_B3B6:
	branch Mem189[ptrArg04:word16] == 0x0000 l0800_B3C9
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -000A(0) Stack +0006(16)

l0800_B3BC:
	byte dl_253
	byte sil_254
	word16 di_255
	branch fn0800_A6B7(ds, DPB(ptrLoc08, bx_186, 0), psegArg06, out dl_253, out sil_254, out di_255, out ds) != 0x0000 l0800_B380
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_B3C9:
	ptr32 es_bx_203 = Mem189[ss:fp + 0x0004:segptr32]
	Mem208[es_bx_203:word16] = -Mem189[es_bx_203 + 0x0006:word16]
	ax_104 = Mem208[es_bx_203 + 0x000E:word16]
	word16 si_210 = Mem208[es_bx_203 + 0x000C:word16]
	Mem212[es_bx_203 + 0x000C:word16] = Mem208[es_bx_203 + 0x000C:word16] + 0x0001
	byte dl_213 = Mem212[ds:0x4EE6:byte]
	*dlOut = dl_213
	Mem216[ax_104:si_210:byte] = dl_213
	branch (Mem216[Mem216[ss:fp + 0x0006:selector]:(word16) es_bx_203 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B3F8
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_B3F8:
	branch Mem216[ds:0x4EE6:byte] == 0x0A l0800_B409
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_B3FF:
	branch Mem216[ds:0x4EE6:byte] == 0x0D l0800_B409
// DataOut: bp di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_B409:
	Mem226[ss:fp - 0x0006:word16] = Mem216[ss:fp + 0x0006:word16]
	Mem229[ss:fp - 0x0008:word16] = Mem226[ss:fp + 0x0004:word16]
	byte dl_232
	byte sil_233
	word16 di_234
	selector ds_235
	word16 ax_236 = fn0800_A6B7(ds, ptrArg00, wArg02, out dl_232, out sil_233, out di_234, out ds_235)
	ax_104 = ax_236
	branch ax_236 != 0x0000 l0800_B41B
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_B41B:
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_B418:
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_B406:
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_B3F5:
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_B39C:
	Mem179[ptrArg04 + 0x0002:word16] = Mem11[ptrArg04 + 0x0002:word16] | 0x0010
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp

l0800_B337:
	Mem103[ptrArg04:word16] = Mem11[ptrArg04:word16] + 0x0001
	ax_104 = Mem103[ptrArg04 + 0x000E:word16]
	word16 si_105 = Mem103[ptrArg04 + 0x000C:word16]
	Mem107[ptrArg04 + 0x000C:word16] = Mem103[ptrArg04 + 0x000C:word16] + 0x0001
	byte dl_108 = Mem107[ds:0x4EE6:byte]
	*dlOut = dl_108
	Mem112[ax_104:si_105:byte] = dl_108
	branch (Mem112[psegArg06:bx_15 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B35D
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0004(16) Stack +0006(16)

l0800_B35D:
	branch Mem112[ds:0x4EE6:byte] == 0x0A l0800_B36E
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0004(16) Stack +0006(16)

l0800_B364:
	branch Mem112[ds:0x4EE6:byte] == 0x0D l0800_B36E
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0004(16) Stack +0006(16)

l0800_B36E:
	byte dl_139
	byte sil_140
	word16 di_141
	selector ds_142
	word16 ax_143 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_139, out sil_140, out di_141, out ds_142)
	ax_104 = ax_143
	branch ax_143 != 0x0000 l0800_B380
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp

l0800_B380:
	ax_41 = 0xFFFF
// DataOut: ax di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_B37D:
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_B36B:
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp

l0800_B35A:
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp

l0800_B4A3:
	ax_41 = DPB(ax_104, 0x00, 8) (alias)
// DataOut: ax di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_B4A8:
	return ax_41
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_B324_exit:
// DataOut: ax di dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_B4BE(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B4BE_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(0) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B4BE:
	word16 ax_106
	word16 bp_189 = fp - 0x0002
	word16 di_122 = wArg06
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0008) == 0x0000 l0800_B504
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B504:
	word16 bx_167 = (word16) ptrArg02
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B512
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B512:
	branch Mem0[ptrArg02 + 0x0006:word16] != 0x0000 l0800_B51C
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B51C:
	branch Mem0[ptrArg02 + 0x0006:word16] >=u wArg06 l0800_B583
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0) Stack +0002(32) Stack +0004(16)

l0800_B583:
	branch Mem0[ptrArg02:word16] + wArg06 < 0x0000 l0800_B5B1
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0) Stack +0002(16) Stack +0004(16)

l0800_B58D:
	branch Mem0[ptrArg02:word16] != 0x0000 l0800_B59F
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0) Stack +0002(16) Stack +0004(16)

l0800_B59F:
	byte dl_494
	byte sil_495
	selector ds_497
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, out dl_494, out sil_495, out di_122, out ds_497) == 0x0000 l0800_B5B1
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B5AE:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B593:
	Mem486[ptrArg02:word16] = 0xFFFF - Mem0[ptrArg02 + 0x0006:word16]
// DataOut: bp di sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B5B1:
	Mem452[ss:fp - 0x000A:word16] = di_122
	Mem455[ss:fp - 0x000C:word16] = Mem452[ss:fp + 0x000A:word16]
	Mem458[ss:fp - 0x000E:word16] = Mem455[ss:fp + 0x0008:word16]
	ptr32 es_bx_459 = Mem458[ss:fp + 0x0002:segptr32]
	Mem464[ss:fp - 0x0010:word16] = Mem458[es_bx_459 + 0x000E:word16]
	Mem467[ss:fp - 0x0012:word16] = Mem464[es_bx_459 + 0x000C:word16]
	fn0800_B03B(ptrArg00, wArg02, ptrArg04, wArg08)
	ptr32 es_bx_472 = Mem467[ss:fp + 0x0002:segptr32]
	Mem477[es_bx_472:word16] = Mem467[es_bx_472:word16] + di_122
	Mem479[es_bx_472 + 0x000C:word16] = Mem477[es_bx_472 + 0x000C:word16] + di_122
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B522:
	branch Mem0[ptrArg02:word16] == 0x0000 l0800_B535
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0) Stack +0004(16)

l0800_B528:
	byte dl_419
	byte sil_420
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, bx_167, 0), wArg04, out dl_419, out sil_420, out di_122, out ds) != 0x0000 l0800_B4F5
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B535:
	ptr32 es_bx_356 = Mem0[ss:fp + 0x0002:segptr32]
	selector es_358 = SLICE(es_bx_356, selector, 16)
	branch (Mem0[ds:((int16) Mem0[es_bx_356 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B560
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B549:
	Mem394[ss:fp - 0x000A:word16] = 0x0002
	Mem399[ss:fp - 0x000C:word16] = 0x0000
	Mem401[ss:fp - 0x000E:word16] = 0x0000
	word16 ax_404 = (int16) Mem401[es_358:Mem401[ss:fp + 0x0002:word16] + 0x0004:byte]
	Mem407[ss:fp - 0x0010:word16] = ax_404
	word16 dx_409
	fn0800_8E29((byte) ax_404, ds, wArg00, wArg02, wArg04, bArg06, out dx_409)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B560:
	Mem371[ss:fp - 0x000A:word16] = di_122
	Mem374[ss:fp - 0x000C:word16] = Mem371[ss:fp + 0x000A:word16]
	Mem377[ss:fp - 0x000E:word16] = Mem374[ss:fp + 0x0008:word16]
	word16 ax_382 = (int16) Mem377[Mem377[ss:fp + 0x0002:segptr32] + 0x0004:byte]
	Mem385[ss:fp - 0x0010:word16] = ax_382
	byte dl_387
	branch fn0800_C779((byte) ax_382, ds, wArg00, ptrArg02, wArg06, out dl_387) <u di_122 l0800_B57D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> si:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B57D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B57A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B519:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5DB:
	selector es_287 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B606
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5EF:
	word16 ax_335 = (int16) Mem0[es_287:wArg02 + 0x0004:byte]
	word16 dx_339
	fn0800_8E29((byte) ax_335, ds, ax_335, 0x0000, 0x0000, 0x02, out dx_339)
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B606:
	word16 ax_312 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	byte dl_316
	branch fn0800_C779((byte) ax_312, ds, ax_312, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_316) >=u wArg06 l0800_B69D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):0x0000 -10(fp):0x0002 -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B620:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B50F:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B625:
	branch Mem0[ptrArg02 + 0x0006:word16] == 0x0000 l0800_B680
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B680:
	byte dl_277
	selector ds_278
	branch fn0800_C632(ds, (int16) Mem0[ptrArg02 + 0x0004:byte], wArg08, wArg0A, wArg06, out dl_277, out ds_278) >=u wArg06 l0800_B69D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B69A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> es:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_B62F:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B677:
	di_122 = di_122 - 0x0001
	branch di_122 != 0x0000 l0800_B631
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B631:
	word16 ax_210
	ptr32 es_bx_197 = Mem0[ss:bp_189 + 0x0004:segptr32]
	word16 v19_200 = Mem0[es_bx_197:word16] + 0x0001
	Mem201[es_bx_197:word16] = v19_200
	branch v19_200 >= 0x0000 l0800_B659
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B659:
	Mem237[ss:fp - 0x000A:word16] = Mem201[ss:bp_189 + 0x0006:word16]
	Mem240[ss:fp - 0x000C:word16] = Mem237[ss:bp_189 + 0x0004:word16]
	ptr32 es_bx_241 = Mem240[ss:bp_189 + 0x000A:segptr32]
	Mem245[ss:bp_189 + 0x000A:word16] = Mem240[ss:bp_189 + 0x000A:word16] + 0x0001
	Mem250[ss:fp - 0x000E:word16] = DPB(di_122, Mem245[es_bx_241:byte], 0)
	byte dl_251
	ax_210 = fn0800_B30A(ds, ptrArg02, out dl_251, out bp_189, out di_122, out ds)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B639:
	word16 ax_219 = Mem201[es_bx_197 + 0x000E:word16]
	word16 si_220 = Mem201[es_bx_197 + 0x000C:word16]
	Mem222[es_bx_197 + 0x000C:word16] = Mem201[es_bx_197 + 0x000C:word16] + 0x0001
	ptr32 es_bx_223 = Mem222[ss:bp_189 + 0x000A:segptr32]
	Mem227[ss:bp_189 + 0x000A:word16] = Mem222[ss:bp_189 + 0x000A:word16] + 0x0001
	Mem231[ax_219:si_220:byte] = Mem227[es_bx_223:byte]
	ax_210 = DPB(ax_219, 0x00, 8) (alias)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B66F:
	branch ax_210 != 0xFFFF l0800_B677
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B674:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

l0800_B67E:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

l0800_B4D7:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B4FA:
	branch di_122 != 0x0000 l0800_B4D9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B4D9:
	Mem143[ss:fp - 0x000A:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem146[ss:fp - 0x000C:word16] = Mem143[ss:fp + 0x0002:word16]
	ptr32 es_bx_147 = Mem146[ss:fp + 0x0008:segptr32]
	Mem151[ss:fp + 0x0008:word16] = Mem146[ss:fp + 0x0008:word16] + 0x0001
	Mem156[ss:fp - 0x000E:word16] = (int16) Mem151[es_bx_147:byte]
	selector ds_507 = ds
	byte dl_159
	branch fn0800_B324(fp - 0x0002, ds_507, bArg00, ptrArg02, wArg04, out dl_159, out di_122, out ds) != 0xFFFF l0800_B4FA
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B4F5:
	ax_106 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

l0800_B501:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

l0800_B69D:
	ax_106 = Mem0[ss:bp_189 - 0x0002:word16]
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> si:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

l0800_B6A0:
	return ax_106
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

fn0800_B4BE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> si:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>



word16 fn0800_B6A8(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZDO ah al ax ch cl cx di dil ds eax ecx edi es esi rax rcx rdi rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_B6A8_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_B6A8:
	word16 ax_30
	word16 cx_17 = Mem0[ds:0x4EE8:word16]
	word16 di_20 = (word16) ptrArg02
	selector es_21 = SLICE(ptrArg02, selector, 16)
	selector ds_24 = SLICE(ptrArg06, selector, 16)
	word16 si_25 = (word16) ptrArg06
	word16 cx_26 = cx_17 >>u 0x0001
	branch cx_17 >>u 0x0001 >=u 0x0000 l0800_B6C6
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B6BD:
	byte al_56 = Mem0[ptrArg02:byte]
	Mem60[ptrArg02:byte] = Mem0[ptrArg06:byte]
	Mem65[ptrArg06:byte] = al_56
	ax_30 = DPB(ax, al_56, 0) (alias)
	si_25 = si_25 + 0x0001
	di_20 = di_20 + 0x0001
	branch cx_17 >>u 0x0001 == 0x0000 l0800_B6CF
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B6C6:
	ax_30 = Mem0[es_21:di_20:word16]
	Mem49[es_21:di_20:word16] = Mem0[ds_24:si_25:word16]
	si_25 = si_25 + 0x0002
	Mem54[ds_24:si_25 - 0x0002:word16] = ax_30
	di_20 = di_20 + 0x0002
	cx_26 = cx_26 - 0x0001
	branch cx_26 != 0x0000 l0800_B6C6
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:<invalid> di:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B6CF:
	return ax_30
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:<invalid> di:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_B6A8_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:si di:di ax:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp



void fn0800_B6D6(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_B6D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_B6D6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B6D6:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_B6E1(word16 bp, word16 si, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
l0800_B6E1:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_B6E1_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0)

l0800_B6E1:
	branch si >u 0x0002 l0800_B726
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0)

l0800_B726:
	word16 bx_94 = Mem0[ss:bp + 0x0006:word16] + (word16) (Mem0[ds:0x4EE8:word16] *s (si - 0x0001))
	Mem95[ss:bp - 0x0006:word16] = Mem0[ss:bp + 0x0008:word16]
	Mem96[ss:bp - 0x0008:word16] = bx_94
	word16 ax_100 = (word16) (Mem96[ds:0x4EE8:word16] *s (si >>u 0x0001))
	word16 dx_101 = Mem96[ss:bp + 0x0008:word16]
	word16 bx_103 = Mem96[ss:bp + 0x0006:word16] + ax_100
	Mem105[ss:bp - 0x0002:word16] = dx_101
	Mem106[ss:bp - 0x0004:word16] = bx_103
	word16 sp_119
	word16 si_120
	byte SCZO_121
	byte CZ_122
	byte Z_123
	word16 ax_124
	byte SZO_125
	selector ds_126
	word16 dx_127
	word16 bp_128
	selector ss_129
	word16 bx_130
	selector cs_131
	byte C_132
	call SEQ(cs, Mem106[ds:0x4EEA:word16]) (retsize: 2; depth: 10)
		uses: ax_100,bp,bx_103,C,cs,CZ_4,ds,dx_101,SCZO_104,si,sp_116,ss,SZO,wLoc02_109,wLoc04_112,wLoc06_115,wLoc08_117,Z
		defs: ax_124,bp_128,bx_130,C_132,cs_131,CZ_122,ds_126,dx_127,SCZO_121,si_120,sp_119,ss_129,SZO_125,Z_123
	branch ax_124 <= 0x0000 l0800_B764_thunk_fn0800_B775
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B764_thunk_fn0800_B775:
	fn0800_B775(ax_124, bp_128, si_120, ds_126)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B766:
	Mem140[ss_129:sp_119 + 0x0006:word16] = Mem106[ss_129:bp_128 - 0x0002:word16]
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B766_thunk_fn0800_B769:
	fn0800_B769(bp_128, ds_126)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B6E6:
	branch si == 0x0002 l0800_B6EE
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0)

l0800_B6EE:
	word16 ax_42 = Mem0[ss:bp + 0x0008:word16]
	word16 dx_44 = Mem0[ss:bp + 0x0006:word16] + Mem0[ds:0x4EE8:word16]
	Mem46[ss:bp - 0x0006:word16] = ax_42
	Mem47[ss:bp - 0x0008:word16] = dx_44
	word16 sp_58
	word16 si_59
	byte SCZO_60
	byte CZ_61
	byte Z_62
	word16 ax_63
	byte SZO_64
	selector ds_65
	word16 dx_66
	word16 bp_67
	selector ss_68
	word16 bx_69
	selector cs_70
	byte C_71
	call SEQ(cs, Mem47[ds:0x4EEA:word16]) (retsize: 2; depth: 10)
		uses: ax_42,bp,bx,C,cs,CZ_4,ds,dx_44,SCZO_45,si,sp_56,ss,SZO,wLoc02_49,wLoc04_51,wLoc06_54,wLoc08_57,Z_25
		defs: ax_63,bp_67,bx_69,C_71,cs_70,CZ_61,ds_65,dx_66,SCZO_60,si_59,sp_58,ss_68,SZO_64,Z_62
	branch ax_63 > 0x0000 l0800_B714
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_B714:
	Mem78[ss_68:sp_58 + 0x0006:word16] = Mem47[ss_68:bp_67 + 0x0008:word16]
	Mem81[ss_68:sp_58 + 0x0004:word16] = Mem78[ss_68:bp_67 + 0x0006:word16]
	Mem84[ss_68:sp_58 + 0x0002:word16] = Mem81[ss_68:bp_67 - 0x0006:word16]
	Mem87[ss_68:sp_58:word16] = Mem84[ss_68:bp_67 - 0x0008:word16]
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B71D_thunk_fn0800_B720:
	fn0800_B720(bp_67, ds_65)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B711:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_B711_thunk_fn0800_B956:
	fn0800_B956(bp_67, ax_42, wArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B711_thunk_fn0800_B956:
	fn0800_B956(bp_67, ax_42, wArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B6EB:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_B6EB_thunk_fn0800_B956:
	fn0800_B956(bp, wLoc02, wArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B6EB_thunk_fn0800_B956:
	fn0800_B956(bp, wLoc02, wArg00)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B6E1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> di:<invalid> si:<invalid> bp:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_B720(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bp bpl ch cl cx di dil ds eax ebp ecx edi es esi esp rax rbp rcx rdi rsi rsp si sil sp spl
// Preserved:
l0800_B720:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn:

l0800_B6DE_thunk_fn0800_B6E1:
	fn0800_B6E1(bp, si, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_B720_entry:
	def fp
	def ds
	def ptrArg00
	def ptrArg04
	def bp
	def wArg00
	def wArg02
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B720:
	sp_1 = fp
	ax_5 = fn0800_B6A8(ds, ptrArg00, ptrArg04)
	sp_6 = fp + 0x0008
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B723_thunk_fn0800_B956:
	fn0800_B956(bp, wArg00, wArg02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0008 cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> si:<invalid> al:<invalid> ax:<invalid>

fn0800_B720_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> si:<invalid> bp:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> ax:<invalid>



void fn0800_B769(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_B769_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B769:
	word16 ax_19 = fn0800_B6A8(ds, DPB(ptrLoc06, Mem0[ss:bp - 0x0008:word16], 0), DPB(ptrLoc02, Mem0[ss:bp - 0x0004:word16], 0))
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_B772_thunk_fn0800_B775:
	fn0800_B775(ax_19, bp, si, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> si:<invalid> al:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_B769_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> si:<invalid> al:<invalid> ax:<invalid> bp:<invalid> dx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_B775(word16 ax, word16 bp, word16 si, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds si ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_B775_entry:
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B775:
	word16 sp_446
	word16 sp_118
	word16 sp_19
	byte SCZO_24
	word16 ax_25
	byte SZO_26
	byte C_27
	byte Z_29
	word16 dx_30
	word16 di_31
	byte SO_32
	selector cs_23
	selector ds_22
	selector ss_106
	word16 bp_105
	word16 si_28
	call SEQ(cs, Mem0[ds:0x4EEA:word16]) (retsize: 2; depth: 10)
		uses: bp,cs,ds,sp_15,ss,wLoc02_7,wLoc04_10,wLoc06_13,wLoc08_16
		defs: ax_25,bp_20,C_27,cs_23,di_31,ds_22,dx_30,SCZO_24,si_28,SO_32,sp_19,ss_21,SZO_26,Z_29
	word16 v5_5 = Mem0[ss:bp + 0x0008:word16]
	branch ax_25 <= 0x0000 l0800_B79A
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_B79A:
	Mem463[ss_106:sp_19 + 0x0006:word16] = Mem0[ss_106:bp_105 - 0x0006:word16]
	Mem466[ss_106:sp_19 + 0x0004:word16] = Mem463[ss_106:bp_105 - 0x0008:word16]
	Mem469[ss_106:sp_19 + 0x0002:word16] = Mem466[ss_106:bp_105 + 0x0008:word16]
	Mem472[ss_106:sp_19:word16] = Mem469[ss_106:bp_105 + 0x0006:word16]
	word16 sp_473
	byte SCZO_478
	word16 ax_479
	byte SZO_480
	byte C_481
	byte Z_483
	word16 dx_484
	word16 di_485
	byte SO_486
	call SEQ(cs_23, Mem472[ds_22:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_34,bp_20,C_37,cs_23,di_31,ds_22,dx_30,SCZO_24,si_28,SO_32,sp_471,ss_21,SZO_36,wLoc02_7,wLoc04_10,wLoc06_13,wLoc08_16,Z_29
		defs: ax_479,bp_474,C_481,cs_477,di_485,ds_476,dx_484,SCZO_478,si_482,SO_486,sp_473,ss_475,SZO_480,Z_483
	sp_118 = sp_473 + 0x0008
	branch ax_479 <= 0x0000 l0800_B7C0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:ax -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B7B1:
	Mem493[ss_106:sp_473 + 0x0006:word16] = Mem472[ss_106:bp_105 + 0x0008:word16]
	Mem496[ss_106:sp_473 + 0x0004:word16] = Mem493[ss_106:bp_105 + 0x0006:word16]
	Mem499[ss_106:sp_473 + 0x0002:word16] = Mem496[ss_106:bp_105 - 0x0006:word16]
	Mem502[ss_106:sp_473:word16] = Mem499[ss_106:bp_105 - 0x0008:word16]
	sp_446 = sp_473
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B78C:
	Mem451[ss_106:sp_19 + 0x0006:word16] = Mem0[ss_106:bp_105 - 0x0002:word16]
	Mem454[ss_106:sp_19 + 0x0004:word16] = Mem451[ss_106:bp_105 - 0x0004:word16]
	Mem457[ss_106:sp_19 + 0x0002:word16] = Mem454[ss_106:bp_105 + 0x0008:word16]
	Mem460[ss_106:sp_19:word16] = Mem457[ss_106:bp_105 + 0x0006:word16]
	sp_446 = sp_19
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:ax -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B7BD:
	fn0800_B6A8(ds_22, ptrArg00, ptrArg04)
	sp_118 = sp_446 + 0x0008
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B7C0:
	branch si_28 != 0x0003 l0800_B7D4
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B7D4:
	word16 ax_79 = Mem0[ss_106:bp_105 + 0x0008:word16]
	word16 dx_81 = Mem0[ss_106:bp_105 + 0x0006:word16] + Mem0[ds_22:0x4EE8:word16]
	Mem84[ss_106:bp_105 - 0x000A:word16] = ax_79
	Mem85[ss_106:bp_105 - 0x000C:word16] = dx_81
	Mem86[ss_106:bp_105 - 0x0002:word16] = ax_79
	Mem87[ss_106:bp_105 - 0x0004:word16] = dx_81
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B813:
	word16 sp_93 = sp_118 - 0x0002
	Mem94[ss_106:sp_93:word16] = Mem87[ss_106:bp_105 + 0x0008:word16]
	Mem97[ss_106:sp_93 - 0x0002:word16] = Mem94[ss_106:bp_105 + 0x0006:word16]
	Mem100[ss_106:sp_93 - 0x0004:word16] = Mem97[ss_106:bp_105 - 0x0002:word16]
	Mem103[ss_106:sp_93 - 0x0006:word16] = Mem100[ss_106:bp_105 - 0x0004:word16]
	word16 sp_104
	selector ds_107
	selector cs_108
	byte SCZO_109
	word16 ax_110
	byte SZO_111
	byte C_112
	word16 si_113
	byte Z_114
	word16 dx_115
	word16 di_116
	byte SO_117
	call SEQ(cs_23, Mem103[ds_22:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_79,bp_89,C_45,cs_39,di_44,ds_40,dx_81,SCZO_83,si_48,SO_38,sp_102,ss_88,SZO_42,wLoc02_7,wLoc04_10,wLoc06_13,wLoc08_16,Z_51
		defs: ax_110,bp_105,C_112,cs_108,di_116,ds_107,dx_115,SCZO_109,si_113,SO_117,sp_104,ss_106,SZO_111,Z_114
	sp_118 = sp_104 + 0x0008
	branch ax_110 <= 0x0000 l0800_B7EC
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B7EC:
	branch ax_110 != 0x0000 l0800_B805
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B7F0:
	Mem418[ss_106:sp_104 + 0x0006:word16] = Mem103[ss_106:bp_105 - 0x0002:word16]
	Mem421[ss_106:sp_104 + 0x0004:word16] = Mem418[ss_106:bp_105 - 0x0004:word16]
	Mem424[ss_106:sp_104 + 0x0002:word16] = Mem421[ss_106:bp_105 - 0x000A:word16]
	Mem427[ss_106:sp_104:word16] = Mem424[ss_106:bp_105 - 0x000C:word16]
	fn0800_B6A8(ds_107, ptrArg00, ptrArg04)
	Mem432[ss_106:bp_105 - 0x000C:word16] = Mem427[ss_106:bp_105 - 0x000C:word16] + Mem427[ds_107:0x4EE8:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B805:
	sp_118 = sp_104 + 0x0008
	branch Mem103[ss_106:bp_105 - 0x0004:word16] >=u Mem103[ss_106:bp_105 - 0x0008:word16] l0800_B883
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B80D:
	Mem414[ss_106:bp_105 - 0x0004:word16] = Mem103[ss_106:bp_105 - 0x0004:word16] + Mem103[ds_107:0x4EE8:word16]
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B82C:
	word16 ax_312 = Mem103[ss_106:bp_105 - 0x0004:word16]
	branch ax_312 >=u Mem103[ss_106:bp_105 - 0x0008:word16] l0800_B87B
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B834:
	word16 sp_339 = sp_118 - 0x0002
	Mem340[ss_106:sp_339:word16] = Mem103[ss_106:bp_105 - 0x0006:word16]
	Mem343[ss_106:sp_339 - 0x0002:word16] = Mem340[ss_106:bp_105 - 0x0008:word16]
	Mem346[ss_106:sp_339 - 0x0004:word16] = Mem343[ss_106:bp_105 + 0x0008:word16]
	Mem349[ss_106:sp_339 - 0x0006:word16] = Mem346[ss_106:bp_105 + 0x0006:word16]
	word16 sp_350
	selector ds_353
	selector cs_354
	byte SCZO_355
	word16 ax_356
	byte SZO_357
	byte C_358
	word16 si_359
	byte Z_360
	word16 dx_361
	word16 di_362
	byte SO_363
	call SEQ(cs_108, Mem349[ds_107:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_312,bp_335,C_315,cs_108,di_119,ds_107,dx_115,SCZO_314,si_113,SO_117,sp_348,ss_334,SZO_121,wLoc02_7,wLoc04_10,wLoc06_13,wLoc08_16,Z_114
		defs: ax_356,bp_351,C_358,cs_354,di_362,ds_353,dx_361,SCZO_355,si_359,SO_363,sp_350,ss_352,SZO_357,Z_360
	sp_118 = sp_350 + 0x0008
	branch ax_356 >= 0x0000 l0800_B855
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B855:
	Mem380[ss_106:sp_350 + 0x0006:word16] = Mem349[ss_106:bp_105 - 0x0002:word16]
	Mem383[ss_106:sp_350 + 0x0004:word16] = Mem380[ss_106:bp_105 - 0x0004:word16]
	Mem386[ss_106:sp_350 + 0x0002:word16] = Mem383[ss_106:bp_105 - 0x0006:word16]
	Mem389[ss_106:sp_350:word16] = Mem386[ss_106:bp_105 - 0x0008:word16]
	fn0800_B6A8(ds_353, ptrArg00, ptrArg04)
	sp_118 = sp_350 + 0x0008
	branch ax_356 == 0x0000 l0800_B87B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B868:
	word16 ax_396 = Mem389[ds_353:0x4EE8:word16]
	Mem398[ss_106:bp_105 - 0x0004:word16] = Mem389[ss_106:bp_105 - 0x0004:word16] + ax_396
	Mem400[ss_106:bp_105 - 0x0008:word16] = Mem398[ss_106:bp_105 - 0x0008:word16] - ax_396
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B84D:
	Mem372[ss_106:bp_105 - 0x0008:word16] = Mem349[ss_106:bp_105 - 0x0008:word16] - Mem349[ds_353:0x4EE8:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B873:
	branch Mem372[ss_106:bp_105 - 0x0004:word16] <u Mem372[ss_106:bp_105 - 0x0008:word16] l0800_B834
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B87B:
	branch Mem103[ss_106:bp_105 - 0x0004:word16] <u Mem103[ss_106:bp_105 - 0x0008:word16] l0800_B813
	branch Mem103[ss_106:bp_105 - 0x0004:word16] <u Mem103[ss_106:bp_105 - 0x0008:word16] l0800_B813
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B883:
	word16 sp_128 = sp_118 - 0x0002
	Mem129[ss_106:sp_128:word16] = Mem103[ss_106:bp_105 + 0x0008:word16]
	Mem132[ss_106:sp_128 - 0x0002:word16] = Mem129[ss_106:bp_105 + 0x0006:word16]
	Mem135[ss_106:sp_128 - 0x0004:word16] = Mem132[ss_106:bp_105 - 0x0002:word16]
	Mem138[ss_106:sp_128 - 0x0006:word16] = Mem135[ss_106:bp_105 - 0x0004:word16]
	word16 sp_139
	word16 bp_140
	selector ss_141
	selector ds_142
	selector cs_143
	byte SCZO_144
	word16 ax_145
	byte SZO_146
	byte C_147
	word16 si_148
	byte Z_149
	word16 dx_150
	word16 di_151
	byte SO_152
	call SEQ(cs_108, Mem138[ds_107:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_120,bp_124,C_122,cs_108,di_119,ds_107,dx_115,SCZO_109,si_113,SO_117,sp_137,ss_123,SZO_121,wLoc02_7,wLoc04_10,wLoc06_13,wLoc08_16,Z_114
		defs: ax_145,bp_140,C_147,cs_143,di_151,ds_142,dx_150,SCZO_144,si_148,SO_152,sp_139,ss_141,SZO_146,Z_149
	branch ax_145 > 0x0000 l0800_B8AA
	Mem159[ss_141:sp_139 + 0x0006:word16] = Mem138[ss_141:bp_140 + 0x0008:word16]
	Mem162[ss_141:sp_139 + 0x0004:word16] = Mem159[ss_141:bp_140 + 0x0006:word16]
	Mem165[ss_141:sp_139 + 0x0002:word16] = Mem162[ss_141:bp_140 - 0x0002:word16]
	Mem168[ss_141:sp_139:word16] = Mem165[ss_141:bp_140 - 0x0004:word16]
	word16 sp_169
	word16 bp_170
	selector ss_171
	selector ds_172
	selector cs_173
	byte SCZO_174
	word16 ax_175
	byte SZO_176
	byte C_177
	word16 si_178
	byte Z_179
	word16 dx_180
	word16 di_181
	byte SO_182
	call SEQ(cs_143, Mem168[ds_142:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_154,bp_140,C_156,cs_143,di_151,ds_142,dx_150,SCZO_144,si_148,SO_152,sp_167,ss_141,SZO_155,wLoc02_7,wLoc04_10,wLoc06_13,wLoc08_16,Z_149
		defs: ax_175,bp_170,C_177,cs_173,di_181,ds_172,dx_180,SCZO_174,si_178,SO_182,sp_169,ss_171,SZO_176,Z_179
	branch ax_175 > 0x0000 l0800_B8AA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B89A:
	word16 dx_303 = Mem168[ss_171:bp_170 - 0x0004:word16] + Mem168[ds_172:0x4EE8:word16]
	Mem304[ss_171:bp_170 - 0x0002:word16] = Mem168[ss_171:bp_170 - 0x0002:word16]
	Mem305[ss_171:bp_170 - 0x0004:word16] = dx_303
	word16 dx_308 = Mem305[ss_171:bp_170 - 0x0004:word16] + Mem305[ds_172:0x4EE8:word16]
	Mem310[ss_171:bp_170 - 0x0002:word16] = Mem305[ss_171:bp_170 - 0x0002:word16]
	Mem311[ss_171:bp_170 - 0x0004:word16] = dx_308
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B8AA:
	word16 dx_189 = Mem168[ss_171:bp_170 - 0x0004:word16] - Mem168[ds_172:0x4EE8:word16]
	Mem191[ss_171:bp_170 - 0x0012:word16] = Mem168[ss_171:bp_170 - 0x0002:word16]
	Mem192[ss_171:bp_170 - 0x0014:word16] = dx_189
	word16 dx_194 = Mem192[ss_171:bp_170 + 0x0006:word16]
	Mem195[ss_171:bp_170 - 0x000E:word16] = Mem192[ss_171:bp_170 + 0x0008:word16]
	Mem196[ss_171:bp_170 - 0x0010:word16] = dx_194
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B8E0:
	branch Mem196[ss_171:bp_170 - 0x0010:word16] >=u Mem196[ss_171:bp_170 - 0x000C:word16] l0800_B8F0
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B8E8:
	branch Mem196[ss_171:bp_170 - 0x0014:word16] >=u Mem196[ss_171:bp_170 - 0x000C:word16] l0800_B8C8
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B8C8:
	Mem281[ss_171:sp_169 + 0x0006:word16] = Mem196[ss_171:bp_170 - 0x000E:word16]
	Mem284[ss_171:sp_169 + 0x0004:word16] = Mem281[ss_171:bp_170 - 0x0010:word16]
	Mem287[ss_171:sp_169 + 0x0002:word16] = Mem284[ss_171:bp_170 - 0x0012:word16]
	Mem290[ss_171:sp_169:word16] = Mem287[ss_171:bp_170 - 0x0014:word16]
	fn0800_B6A8(ds_172, ptrArg00, ptrArg04)
	word16 ax_295 = Mem290[ds_172:0x4EE8:word16]
	Mem297[ss_171:bp_170 - 0x0010:word16] = Mem290[ss_171:bp_170 - 0x0010:word16] + ax_295
	Mem299[ss_171:bp_170 - 0x0014:word16] = Mem297[ss_171:bp_170 - 0x0014:word16] - ax_295
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_B8F0:
	Mem203[ss_171:sp_169 + 0x0006:word16] = 0x0000
	Mem206[ss_171:sp_169 + 0x0004:word16] = Mem203[ds_172:0x4EE8:word16]
	word16 ax_209 = Mem206[ss_171:bp_170 - 0x0004:word16] - Mem206[ss_171:bp_170 - 0x000C:word16]
	Mem215[ss_171:sp_169 + 0x0002:word16] = 0x0000 - (ax_209 <u 0x0000)
	Mem217[ss_171:sp_169:word16] = ax_209
	word16 dx_218
	word16 bp_219
	word16 si_220
	word16 di_221
	word16 ax_222 = fn0800_8BBB(bp_170, si_178, di_181, v5_5, out dx_218, out bp_219, out si_220, out di_221)
	Mem226[ss_171:sp_169 - 0x0002:word16] = 0x0000
	Mem229[ss_171:sp_169 - 0x0004:word16] = Mem226[ds_172:0x4EE8:word16]
	word16 dx_236 = Mem229[ss_171:bp_219 + 0x0006:word16] + (word16) (Mem229[ds_172:0x4EE8:word16] *s si_220) - Mem229[ss_171:bp_219 - 0x0004:word16]
	Mem242[ss_171:sp_169 - 0x0006:word16] = 0x0000 - (dx_236 <u 0x0000)
	Mem244[ss_171:sp_169 - 0x0008:word16] = dx_236
	word16 dx_245
	word16 bp_246
	word16 si_247
	word16 di_248
	word16 ax_249 = fn0800_8BBB(bp_219, si_220, ax_222, v5_5, out dx_245, out bp_246, out si_247, out di_248)
	branch ax_249 >=u di_248 l0800_B93D
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(0)

l0800_B93D:
	Mem266[ss_171:sp_169 - 0x000A:word16] = Mem244[ss_171:bp_246 + 0x0008:word16]
	Mem269[ss_171:sp_169 - 0x000C:word16] = Mem266[ss_171:bp_246 + 0x0006:word16]
	Mem271[ss_171:sp_169 - 0x000E:word16] = di_248
	fn0800_B6D6(wArg00)
	word16 dx_273 = Mem271[ss_171:bp_246 - 0x0004:word16]
	Mem274[ss_171:bp_246 + 0x0008:word16] = Mem271[ss_171:bp_246 - 0x0002:word16]
	Mem275[ss_171:bp_246 + 0x0006:word16] = dx_273
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> bp:<invalid> bx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B953_thunk_fn0800_B6E1:
	fn0800_B6E1(bp_246, ax_249, ds_172)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: ax:<invalid> dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B92E:
	Mem256[ss_171:sp_169 - 0x000A:word16] = Mem244[ss_171:bp_246 - 0x0002:word16]
	Mem259[ss_171:sp_169 - 0x000C:word16] = Mem256[ss_171:bp_246 - 0x0004:word16]
	Mem261[ss_171:sp_169 - 0x000E:word16] = ax_249
	fn0800_B6D6(wArg00)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> al:<invalid> bp:<invalid> bx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B93A_thunk_fn0800_B6E1:
	fn0800_B6E1(bp_246, di_248, ds_172)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: si:di -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B7C5:
	word16 sp_68 = sp_118 - 0x0002
	Mem69[ss_106:sp_68:word16] = Mem0[ss_106:bp_105 + 0x0008:word16]
	Mem72[ss_106:sp_68 - 0x0002:word16] = Mem69[ss_106:bp_105 + 0x0006:word16]
	Mem75[ss_106:sp_68 - 0x0004:word16] = Mem72[ss_106:bp_105 - 0x0002:word16]
	Mem78[ss_106:sp_68 - 0x0006:word16] = Mem75[ss_106:bp_105 - 0x0004:word16]
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_B7D1_thunk_fn0800_B720:
	fn0800_B720(bp_105, ds_22)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> si:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_B775_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> dx:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_B956(word16 bp, word16 wArg00, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut:
// Trashed: bp bpl di dil ebp edi esi esp rbp rdi rsi rsp si sil sp spl
// Preserved:
l0800_B956:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_B956_entry:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B956:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B956_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_B95E(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds
// LiveOut: bp sp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
fn0800_B95E_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B95E:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_B95E_thunk_fn0800_B95F:
	return fn0800_B95F(ds, wLoc04, wArg00, wArg02, wArg04, wArg06, wArg08)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):bp

fn0800_B95E_exit:
// DataOut: bp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> -2(fp):bp



word16 fn0800_B95F(selector ds, word16 wArg00, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: bp sp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
// Stack args: Stack +0000(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_B95F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_B95F:
	Mem5[ds:0x4EE8:word16] = wArg0A
	branch wArg0A == 0x0000 l0800_B97D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0008(16) Stack +000C(16)

l0800_B96B:
	Mem23[ds:0x4EEA:word16] = wArg0C
	fn0800_B6D6(wArg08)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp bp:fp ax:<invalid>
// LocalsOut: fp(16) Stack +0000(16)
// Terminates process

l0800_B97D:
	return wArg00
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp bp:fp ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_B95F_exit:
// DataOut: bp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 bp:<invalid> ax:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_B97F(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B97F_entry:
	*dsOut = ds
	*dxOut = dx
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B97F:
	word16 ax_130
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_B99A
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B99A:
	byte al_101 = (byte) (wArg08 + 0x0001)
	branch wArg08 <u 0xFFFF l0800_B9B0
// DataOut: al dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9A3:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_B9B5
// DataOut: al dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9B5:
	ptrLoc10 = DPB(ptrLoc10, wArg04, 0) (alias)
	word16 dx_119
	word16 ax_120 = fn0800_8F50(al_101, ds, wArg02, ptrLoc10, wArg08, out dx_119)
	branch ax_120 <u 0xFFFF l0800_B9DD
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9D0:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_B9E2
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9E2:
	word16 si_140 = (word16) ptrArg04
	word16 cx_137 = ax_120
	selector es_141 = SLICE(ptrArg04, selector, 16)
	word16 di_142 = si_140
	si_148 = si_140
// DataOut: bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9ED:
	word16 si_148
	al_101 = Mem0[ds:si_148:byte]
	si_148 = si_148 + 0x0001
	branch al_101 == 0x1A l0800_BA21
// DataOut: al bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> al:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA21:
	word16 cx_242 = -cx_137
	word16 ax_244 = 0x0000 - (cx_242 == 0x0000)
	word16 dx_254
	fn0800_8E29((byte) ax_244, ds, wArg02, cx_242, ax_244, 0x01, out dx_254)
	Mem260[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x0200
// DataOut: bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9F3:
	branch al_101 == 0x0D l0800_B9FC
// DataOut: al bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FC:
	cx_137 = cx_137 - 0x0001
	branch cx_137 != 0x0000 l0800_B9ED
// DataOut: bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FE:
	ptrLoc14 = DPB(ptrLoc14, fp - 0x0005, 0) (alias)
	word16 dx_222
	fn0800_8F50((byte) (fp - 0x0005), ds, wArg02, ptrLoc14, 0x0001, out dx_222)
	Mem234[es_141:di_142:byte] = bLoc05
	al_101 = bLoc05
	di_142 = di_142 + 0x0001
// DataOut: al bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9F7:
	Mem200[es_141:di_142:byte] = al_101
	di_142 = di_142 + 0x0001
	cx_137 = cx_137 - 0x0001
	branch cx_137 != 0x0000 l0800_B9ED
// DataOut: al bx cx di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FA:
// DataOut: al bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA19:
	branch di_142 != si_140 l0800_BA1F
// DataOut: al bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA1F:
// DataOut: bx di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA41:
	ax_130 = di_142 - si_140
// DataOut: ax dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA1D:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9DD:
	ax_130 = ax_120
// DataOut: ax dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9B0:
	ax_130 = 0x0000
// DataOut: ax dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B990:
	ax_130 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BA44:
	return ax_130
// DataOut: ax dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_B97F_exit:
// DataOut: ax dl ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_BA4A(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh di dil dl ds dx eax edi edx es rax rdi rdx
// Preserved: bp di ds sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BA4A_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BA4A:
	word16 ax_26
	word16 ax_19
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_19) l0800_BA60
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BA60:
	ax_26 = fn0800_8D2B(ds, ax_19)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA5C:
	ax_26 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA64:
	return ax_26
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp

fn0800_BA4A_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> di:di al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp



selector fn0800_BA67(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_BA67_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_BA67:
	word16 di_24
	selector ds_25
	branch fn0800_ACB3(fp - 0x0002, ds, wArg02, wArg04, 0x0000, out di_24, out ds_25) != 0x0000 l0800_BA87
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_BA7F:
	ptr32 es_bx_44 = Mem0[ss:fp + 0x0002:segptr32]
	Mem48[es_bx_44 + 0x0002:word16] = Mem0[es_bx_44 + 0x0002:word16] & 0xFFEF
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

l0800_BA87:
	return ds_25
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

fn0800_BA67_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



word16 fn0800_BA89(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16)
fn0800_BA89_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16)

l0800_BA89:
	word16 ax_145
	word16 bp_162 = fp - 0x0002
	word16 di_105 = wArg0A
	branch Mem0[ptrArg02 + 0x0012:word16] != wArg02 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAA0:
	branch wArg0A > 0x0002 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAA5:
	branch wArg0C <=u 0x7FFF l0800_BAB1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAB1:
	branch Mem0[ds:0x26B2:word16] != 0x0000 l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAB8:
	branch wArg02 != 0x236C l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BAC7:
	branch Mem0[ds:0x26B0:word16] != 0x0000 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BACE:
	branch wArg02 != 0x2358 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BAD5:
	Mem240[ds:0x26B0:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BABF:
	Mem243[ds:0x26B2:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BADB:
	word16 bx_93 = (word16) ptrArg02
	branch Mem0[ptrArg02:word16] == 0x0000 l0800_BAF6
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0004(16)

l0800_BAE4:
	fn0800_ACB3(fp - 0x0002, ds, bx_93, wArg04, 0x0001, out di_105, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BAF6:
	ptr32 es_bx_107 = Mem0[ss:fp + 0x0002:segptr32]
	branch (Mem0[es_bx_107 + 0x0002:word16] & 0x0004) == 0x0000 l0800_BB0E
// DataOut: bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB01:
	Mem205[ss:fp - 0x0008:word16] = Mem0[es_bx_107 + 0x000A:word16]
	Mem208[ss:fp - 0x000A:word16] = Mem205[es_bx_107 + 0x0008:word16]
	fn0800_9E75(ds, wArg02, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_BB0E:
	ptr32 es_bx_117 = Mem0[ss:fp + 0x0002:segptr32]
	Mem121[es_bx_117 + 0x0002:word16] = Mem0[es_bx_117 + 0x0002:word16] & 0xFFF3
	Mem123[es_bx_117 + 0x0006:word16] = 0x0000
	word16 ax_124 = Mem123[ss:fp + 0x0004:word16]
	word16 dx_125 = Mem123[ss:fp + 0x0002:word16]
	Mem127[es_bx_117 + 0x000A:word16] = ax_124
	Mem128[es_bx_117 + 0x0008:word16] = dx_125 + 0x0005
	Mem129[es_bx_117 + 0x000E:word16] = ax_124
	Mem130[es_bx_117 + 0x000C:word16] = dx_125 + 0x0005
	branch di_105 == 0x0002 l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_BB3A:
	branch false l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_BB3E:
	Mem152[ds:0x2352:word16] = 0xC7F0
	branch (Mem152[ss:fp + 0x0006:word16] | Mem152[ss:fp + 0x0008:word16]) != 0x0000 l0800_BB6B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_BB4C:
	Mem181[ss:fp - 0x0008:word16] = wArg0C
	word16 dx_183
	selector ds_185
	word16 ax_186 = fn0800_9F7F(ds, wArg00, out dx_183, out bp_162, out ds_185)
	Mem190[ss:bp_162 + 0x000A:word16] = dx_183
	Mem191[ss:bp_162 + 0x0008:word16] = ax_186
	branch (ax_186 | dx_183) != 0x0000 l0800_BB5E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5E:
	ptr32 es_bx_196 = Mem191[ss:bp_162 + 0x0004:segptr32]
	Mem200[es_bx_196 + 0x0002:word16] = Mem191[es_bx_196 + 0x0002:word16] | 0x0004
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB6B:
	ptr32 es_bx_164 = Mem152[ss:bp_162 + 0x0004:segptr32]
	word16 ax_167 = Mem152[ss:bp_162 + 0x000A:word16]
	word16 dx_168 = Mem152[ss:bp_162 + 0x0008:word16]
	Mem169[es_bx_164 + 0x000E:word16] = ax_167
	Mem170[es_bx_164 + 0x000C:word16] = dx_168
	Mem171[es_bx_164 + 0x000A:word16] = ax_167
	Mem172[es_bx_164 + 0x0008:word16] = dx_168
	Mem173[es_bx_164 + 0x0006:word16] = wArg0C
	branch di_105 != 0x0001 l0800_BB92
// DataOut: bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB8D:
	Mem177[es_bx_164 + 0x0002:word16] = Mem173[es_bx_164 + 0x0002:word16] | 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB92:
	ax_145 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5B:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BAAB:
	ax_145 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB94:
	return ax_145
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_BA89_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_BB98(word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_BB98_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BB98:
	branch (wArg08 | wArg0A) == 0x0000 l0800_BBE4
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000E(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BBA7:
	branch fn0800_BFC7(DPB(ptrLoc08, wArg04, 0), wArg06) <u wArg02 l0800_BBD2
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BBD2:
	fn0800_BF9E(DPB(ptrLoc0C, wArg08, 0), wArg0A, DPB(ptrLoc08, wArg04, 0))
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BBB6:
	fn0800_C01E(DPB(ptrLoc0E, wArg08, 0), wArg0A, DPB(ptrLoc0A, wArg04, 0), wArg02)
	Mem90[ptrArg08 + wArg02:byte] = 0x00
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BBE4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_BB98_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void fn0800_BBE9(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx eax ebp ebx ecx es esp rax rbp rbx rcx rsp sp spl
// Preserved:
// Stack args: Stack +0002(32)
fn0800_BBE9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBE9:
	branch Mem0[ptrArg02 - 0x0001:byte] != 0x2E l0800_BBFC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBF9:
	wArg02 = wArg02 - 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBFC:
	word16 v12_16 = wArg02 - 0x0001
	selector es_22 = SLICE(DPB(ptrArg02, v12_16, 0), selector, 16)
	byte al_23 = Mem0[es_22:v12_16:byte]
	word16 ax_24 = (int16) al_23
	word16 cx_26 = 0x0004
	word16 bx_27 = 0xBC39
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC0F:
	word16 ax_32 = Mem0[0x0800:bx_27:word16]
	branch ax_32 == ax_24 l0800_BC1E
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC1E:
	word16 sp_60
	word16 bp_61
	selector ss_62
	byte SCZO_63
	word16 bx_64
	selector es_65
	byte Z_66
	byte SZO_67
	byte al_68
	word16 ax_69
	word16 cx_70
	byte C_71
	call Mem0[0x0800:bx_27 + 0x0008:word16] (retsize: 4; depth: 8)
		uses: al_23,ax_32,bp_5,bx_29,C,cx_31,es_22,SCZO_33,sp_6,ss,SZO_19,wLoc02_4,wLoc04_25,Z_34
		defs: al_68,ax_69,bp_61,bx_64,C_71,cx_70,es_65,SCZO_63,sp_60,ss_62,SZO_67,Z_66
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

l0800_BC17:
	bx_27 = bx_27 + 0x0002
	cx_26 = cx_26 - 0x0001
	branch cx_26 != 0x0000 l0800_BC0F
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC1C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16)

l0800_BC31:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

fn0800_BBE9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>



void fn0800_BC49(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, segptr32 ptrArg0A, word16 wArg0C, segptr32 ptrArg0E, word16 wArg10, segptr32 ptrArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut: sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BC49_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC49:
	branch (wArg06 | wArg08) == 0x0000 l0800_BC62
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC5B:
	Mem189[ptrArg06:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC62:
	branch (wArg0A | wArg0C) == 0x0000 l0800_BC71
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(32) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC6A:
	Mem184[ptrArg0A:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC71:
	branch (wArg0E | wArg10) == 0x0000 l0800_BC80
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(32) Stack +0012(16) Stack +0014(16)

l0800_BC79:
	Mem179[ptrArg0E:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(16) Stack +0014(16)

l0800_BC80:
	branch (wArg12 | wArg14) == 0x0000 l0800_BC8F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(32)

l0800_BC88:
	Mem174[ptrArg12:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC8F:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9D:
	word16 bx_66 = (word16) ptrArg02
	branch Mem0[ptrArg02:byte] == 0x20 l0800_BC9A
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9A:
	wArg02 = wArg02 + 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BCA6:
	segptr32 ptrLoc62_78 = DPB(ptrLoc62, bx_66, 0)
	word16 ax_79 = fn0800_BFC7(ptrLoc62_78, wArg04)
	word16 si_166 = ax_79
	branch ax_79 <= 0x0050 l0800_BCB9
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB6:
	si_166 = 0x0050
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB9:
	Mem92[ptrLoc06:byte] = 0x00
	segptr32 ptrLoc64_105 = DPB(ptrLoc64, wArg02, 0)
	segptr32 ptrLoc68_113 = DPB(ptrLoc68, fp - 0x0059, 0)
	fn0800_C01E(ptrLoc68_113, ss, ptrLoc64_105, si_166)
	word16 v23_115 = fp - 0x0059 + si_166
	segptr32 ptrLoc06_117 = DPB(ptrLoc06, v23_115, 0)
	Mem121[SLICE(ptrLoc06_117, selector, 16):v23_115:byte] = 0x00
	word16 wLoc06_116 = v23_115
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)

l0800_BCE2:
	word16 v24_129 = wLoc06_116 - 0x0001
	ptrLoc06_117 = DPB(ptrLoc06_117, v24_129, 0) (alias)
	selector es_135 = SLICE(ptrLoc06_117, selector, 16)
	byte al_136 = Mem121[es_135:v24_129:byte]
	wLoc06_116 = v24_129
	word16 ax_137 = (int16) al_136
	word16 cx_139 = 0x0007
	word16 bx_140 = 0xBE1F
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BCF5:
	word16 ax_145 = Mem121[0x0800:bx_140:word16]
	branch ax_145 == ax_137 l0800_BD04
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD04:
	word16 sp_152
	word16 bp_153
	selector ss_154
	byte SCZO_155
	word16 si_156
	word16 di_157
	byte SZO_158
	byte C_159
	word16 ax_160
	byte Z_161
	word16 bx_162
	selector es_163
	word16 cx_164
	byte al_165
	call Mem121[0x0800:bx_140 + 0x000E:word16] (retsize: 4; depth: 98)
		uses: al_136,ax_145,bp_5,bx_142,C_124,cx_144,di_13,es_135,ptrLoc06_131,ptrLoc62_78,ptrLoc64_105,ptrLoc68_113,SCZO_146,si_122,sp_114,ss,SZO_132,wLoc02_4,wLoc04_59,wLoc06_130,wLoc08_138,wLoc5C_9,wLoc5E_12,wLoc60_97,wLoc62_100,wLoc64_103,wLoc66_108,wLoc68_111,Z_147
		defs: al_165,ax_160,bp_153,bx_162,C_159,cx_164,di_157,es_163,SCZO_155,si_156,sp_152,ss_154,SZO_158,Z_161
	return
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

fn0800_BC49_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

l0800_BCFD:
	bx_140 = bx_140 + 0x0002
	cx_139 = cx_139 - 0x0001
	branch cx_139 != 0x0000 l0800_BCF5
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD02:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)



void fn0800_BE3B(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, word16 wArg10, word16 wArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BE3B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BE3B:
	fn0800_BC49(DPB(ptrLoc16, wArg02, 0), wArg04, DPB(ptrLoc12, wArg06, 0), wArg08, DPB(ptrLoc0E, wArg0A, 0), wArg0C, DPB(ptrLoc0A, wArg0E, 0), wArg10, DPB(ptrLoc06, wArg12, 0), wArg14)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BE3B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> al:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_BEA2(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_BEA2_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_BEA2:
	Mem10[ptrArg02:byte] = 0x00
	word16 di_34
	return fn0800_9828(ds, DPB(ptrLoc0C, wArg06, 0), wArg08, out di_34)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BEA2_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -14(fp):fp + 0x000A -12(fp):<invalid> -10(fp):<invalid> -8(fp):fp + 0x0002 -6(fp):ss -4(fp):0xBE64 -2(fp):bp



void fn0800_BF18(word16 bx, word16 di, selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_BF18_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BF18:
	fn0800_8F97(bx, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BF18_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -18(fp):0xBEE5 -16(fp):0xBF0D -14(fp):fp + 0x0002 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -6(fp):fp + 0x000A -4(fp):ss -2(fp):bp



void fn0800_BF5F(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds es si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF5F_entry:
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF5F:
	word16 di_116 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 cx_118 = 0xFFFF
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70:
	branch cx_118 == 0x0000 l0800_BF72
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70_1:
	di_116 = di_116 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch 0x00 != Mem0[es_19:di_116:byte] l0800_BF70
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF72:
	word16 si_37 = di_116 - 0x0001
	word16 di_111 = (word16) ptrArg06
	selector es_41 = SLICE(ptrArg06, selector, 16)
	word16 cx_113 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C:
	branch cx_113 == 0x0000 l0800_BF7E
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C_2:
	di_111 = di_111 + 0x0001
	cx_113 = cx_113 - 0x0001
	branch 0x00 != Mem0[es_41:di_111:byte] l0800_BF7C
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7E:
	word16 cx_107 = ~cx_113
	word16 di_52 = di_111 - cx_107
	word16 di_105 = si_37
	word16 si_104 = di_52
	branch (di_52 & 0x0001) == 0x0000 l0800_BF8F
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8D:
	Mem103[es_19:si_37:byte] = Mem0[es_41:di_52:byte]
	si_104 = di_52 + 0x0001
	di_105 = si_37 + 0x0001
	cx_107 = cx_107 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8F:
	word16 cx_70 = cx_107 >>u 0x0001
	cx_78 = cx_70
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF91:
	word16 cx_78
	branch cx_78 == 0x0000 l0800_BF93
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF93:
	branch cx_70 >=u 0x0000 l0800_BF96
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF95:
	Mem99[es_19:di_105:byte] = Mem0[es_41:si_104:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF96:
	return
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF5F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> dx:es al:<invalid> cx:<invalid> di:di si:si ds:ds es:es ax:di -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BF91_1:
	Mem81[es_19:di_105:word16] = Mem0[es_41:si_104:word16]
	si_104 = si_104 + 0x0002
	di_105 = di_105 + 0x0002
	cx_78 = cx_78 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)



void fn0800_BF9E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF9E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF9E:
	word16 di_15 = (word16) ptrArg06
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 si_17 = di_15
	word16 cx_21 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE:
	branch cx_21 == 0x0000 l0800_BFB0
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE_1:
	di_15 = di_70 + 0x0001
	cx_21 = cx_21 - 0x0001
	word16 di_70 = di_15
	branch 0x00 != Mem0[es_16:di_70:byte] l0800_BFAE
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFB0:
	word16 cx_32 = ~cx_21
	word16 di_40 = (word16) ptrArg02
	selector es_41 = SLICE(ptrArg02, selector, 16)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBA:
	branch cx_32 == 0x0000 l0800_BFBC
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBC:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF9E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> cx:<invalid> di:di ax:<invalid> ds:ds dx:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BFBA_2:
	Mem48[es_41:di_40:byte] = Mem0[es_16:si_17:byte]
	si_17 = si_17 + 0x0001
	di_40 = di_40 + 0x0001
	cx_32 = cx_32 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_BFC7(segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_BFC7_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_BFC7:
	word16 di_11 = (word16) ptrArg02
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 ax_13 = 0x0000
	branch 0x0000 != wArg04 l0800_BFD9
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BFD5:
	branch 0x0000 == di_11 l0800_BFE3
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFD9:
	word16 cx_33 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD:
	branch cx_33 == 0x0000 l0800_BFDF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD_1:
	di_11 = di_62 + 0x0001
	cx_33 = cx_33 - 0x0001
	word16 di_62 = di_11
	branch 0x00 != Mem0[es_12:di_62:byte] l0800_BFDD
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDF:
	ax_13 = ~cx_33 - 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFE3:
	return ax_13
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:0x0000 di:<invalid> -4(fp):di -2(fp):bp

fn0800_BFC7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> di:di cx:0x0000 -4(fp):di -2(fp):bp



word16 fn0800_BFE6(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_BFE6_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_BFE6:
	word16 di_17 = (word16) ptrArg06
	selector es_18 = SLICE(ptrArg06, selector, 16)
	word16 ax_22 = wArg0A
	word16 cx_110 = wArg0A
	branch wArg0A == 0x0000 l0800_C018
// DataOut: ax cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFA:
	di_108 = di_17
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE:
	word16 di_108
	branch cx_110 == 0x0000 l0800_C000
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE_1:
	di_108 = di_111 + 0x0001
	cx_110 = cx_110 - 0x0001
	word16 di_111 = di_108
	branch 0x00 != Mem0[es_18:di_111:byte] l0800_BFFE
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C000:
	word16 bx_66 = wArg0A - cx_110
	word16 cx_105 = bx_66
	word16 di_103 = di_17
	selector ds_73 = SLICE(ptrArg02, selector, 16)
	word16 si_101 = (word16) ptrArg02
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009:
	branch cx_105 == 0x0000 l0800_C00B
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009_2:
	si_101 = si_113 + 0x0001
	di_103 = di_112 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_112 = di_103
	word16 si_113 = si_101
	branch Mem0[ds_73:si_113:byte] != Mem0[es_18:di_112:byte] l0800_C009
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C00B:
	ax_22 = DPB(wArg0A, 0x00, 8) - DPB(bx_66, 0x00, 8)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C018:
	return ax_22
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> di:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp

fn0800_BFE6_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:ds Sequence es:di:<invalid> si:si ax:<invalid> cx:<invalid> ds:ds di:di bx:<invalid> al:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp



void fn0800_C01E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_C01E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_C01E:
	word16 di_15 = (word16) ptrArg06
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 si_17 = di_15
	word16 cx_23 = wArg0A
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030:
	branch cx_23 == 0x0000 l0800_C032
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030_1:
	di_15 = di_83 + 0x0001
	cx_23 = cx_23 - 0x0001
	word16 di_83 = di_15
	branch 0x00 != Mem0[es_16:di_83:byte] l0800_C030
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C032:
	word16 di_42 = (word16) ptrArg02
	selector es_43 = SLICE(ptrArg02, selector, 16)
	word16 cx_46 = wArg0A - cx_23
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E:
	branch cx_46 == 0x0000 l0800_C040
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C040:
	word16 cx_58 = cx_23
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C042:
	branch cx_58 == 0x0000 l0800_C044
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C044:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_C01E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> bx:<invalid> cx:<invalid> di:di ds:ds dx:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_C042_1:
	Mem62[es_43:di_42:byte] = 0x00
	di_42 = di_42 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E_2:
	Mem53[es_43:di_42:byte] = Mem0[es_16:si_17:byte]
	si_17 = si_17 + 0x0001
	di_42 = di_42 + 0x0001
	cx_46 = cx_46 - 0x0001
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_C04F(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax di ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_C04F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_C04F:
	selector ds_12
	word16 di_13
	*diOut = fn0800_C379(ds, out ds_12)
	word16 si_29 = Mem0[ptrArg02:word16]
	int32 dx_ax_36 = (int32) (si_29 + 0xF844 >> 0x0002)
	int32 dx_ax_63 = (int32) (si_29 + 0xF844 & 0x0003)
	word16 dx_49
	word16 dx_76
	word16 v19_79 = (word16) (SEQ(Mem0[ds_12:0x26E4:word16], Mem0[ds_12:0x26E2:word16] + 0xA600) + 0x12CEA600) + fn0800_8F18(0x1F80, SLICE(dx_ax_36, word16, 16), 0x0786, (word16) dx_ax_36, out dx_49) + fn0800_8F18(0x3380, SLICE(dx_ax_63, word16, 16), 0x01E1, (word16) dx_ax_63, out dx_76)
	word16 wLoc06_292 = v19_79
	branch (si_29 + 0xF844 & 0x0003) == 0x0000 l0800_C0B9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0B0:
	wLoc06_292 = v19_79 + 0x5180
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0B9:
	word16 cx_107 = 0x0000
	word16 si_105 = (int16) Mem0[ptrArg02 + 0x0003:byte] - 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0D0:
	branch si_105 > 0x0000 l0800_C0C8
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0C8:
	si_105 = si_105 - 0x0001
	cx_107 = cx_107 + (int16) Mem0[ds_12:si_105 + 0x26B4:byte]
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0D4:
	word16 ax_121 = (int16) Mem0[ptrArg02 + 0x0002:byte]
	word16 cx_123 = cx_107 + (ax_121 - 0x0001)
	branch Mem0[ptrArg02 + 0x0003:byte] <= 0x02 l0800_C0EE
// DataOut: bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0E6:
	branch (Mem0[ptrArg02:word16] & 0x0003) != 0x0000 l0800_C0EE
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0ED:
	cx_123 = cx_123 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0EE:
	word16 ax_148 = (word16) (cx_123 *s 0x0018) + DPB(ax_121 - 0x0001, 0x00, 8)
	word16 si_149 = ax_148
	branch Mem0[ds_12:0x26E6:word16] == 0x0000 l0800_C128
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C10B:
	branch fn0800_C553(ds_12, Mem0[ptrArg02:word16] + 0xF84E, 0x0000, cx_123, (byte) DPB(ax_148, 0x00, 8)) == 0x0000 l0800_C128
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0006(32)

l0800_C127:
	si_149 = ax_148 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0006(32)

l0800_C128:
	int32 dx_ax_161 = (int32) si_149
	word16 dx_176
	word16 ax_177 = fn0800_8F18(0x0E10, SLICE(dx_ax_161, word16, 16), 0x0000, (word16) dx_ax_161, out dx_176)
	int32 dx_ax_192 = (int32) DPB(ax_177, 0x00, 8)
	int32 dx_ax_220 = (int32) DPB((word16) ptrArg06, 0x00, 8)
	word16 dx_207
	word16 cx_226 = fn0800_8F18(0x003C, SLICE(dx_ax_192, word16, 16), 0x0000, (word16) dx_ax_192, out dx_207) + (word16) dx_ax_220
	word16 dx_239
	*dxOut = v31
	return wLoc06_292 + ax_177 + (word16) (SEQ(dx_207, cx_226) + dx_ax_220)
// DataOut: ax di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C04F_exit:
// DataOut: ax di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> es:<invalid> di:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_C177(word16 bp, word16 si, selector ds, word16 wArg02, word16 wArg04, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(32) Stack +000A(32)
fn0800_C177_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +000A(32)

l0800_C177:
	selector ds_7
	word16 di_8 = fn0800_C379(ds, out ds_7)
	word16 v10_18 = wArg02 - (word16) (SEQ(Mem0[ds_7:0x26E4:word16], Mem0[ds_7:0x26E2:word16] + 0xA600) + 0x12CEA600)
	Mem30[ptrArg0A + 0x0002:byte] = 0x00
	word16 dx_47
	word16 bp_48
	word16 si_49
	word16 di_50
	byte al_52 = (byte) fn0800_8BCA(fp - 0x0002, si, di_8, wLoc0C, out dx_47, out bp_48, out si_49, out di_50)
	Mem57[Mem30[ss:bp_48 + 0x000C:segptr32] + 0x0003:byte] = al_52
	Mem63[ss:fp - 0x000C:word16] = 0x0000
	Mem65[ss:fp - 0x000E:word16] = 0x003C
	Mem68[ss:fp - 0x0010:word16] = Mem65[ss:bp_48 + 0x0006:word16]
	Mem71[ss:fp - 0x0012:word16] = Mem68[ss:bp_48 + 0x0004:word16]
	word16 dx_72
	word16 bp_73
	word16 si_74
	word16 di_75
	word16 ax_76 = fn0800_8BBB(bp_48, si_49, di_50, bp, out dx_72, out bp_73, out si_74, out di_75)
	Mem77[ss:bp_73 + 0x0006:word16] = dx_72
	Mem78[ss:bp_73 + 0x0004:word16] = ax_76
	Mem84[ss:fp - 0x0014:word16] = 0x0000
	Mem86[ss:fp - 0x0016:word16] = 0x003C
	Mem89[ss:fp - 0x0018:word16] = Mem86[ss:bp_73 + 0x0006:word16]
	Mem92[ss:fp - 0x001A:word16] = Mem89[ss:bp_73 + 0x0004:word16]
	word16 dx_93
	word16 bp_94
	word16 si_95
	word16 di_96
	byte al_98 = (byte) fn0800_8BCA(bp_73, si_74, di_75, bp, out dx_93, out bp_94, out si_95, out di_96)
	Mem102[Mem92[ss:bp_94 + 0x000C:segptr32]:byte] = al_98
	Mem108[ss:fp - 0x001C:word16] = 0x0000
	Mem110[ss:fp - 0x001E:word16] = 0x003C
	Mem113[ss:fp - 0x0020:word16] = Mem110[ss:bp_94 + 0x0006:word16]
	Mem116[ss:fp - 0x0022:word16] = Mem113[ss:bp_94 + 0x0004:word16]
	word16 dx_117
	word16 bp_118
	word16 si_119
	word16 di_120
	word16 ax_121 = fn0800_8BBB(bp_94, si_95, di_96, bp, out dx_117, out bp_118, out si_119, out di_120)
	Mem122[ss:bp_118 + 0x0006:word16] = dx_117
	Mem123[ss:bp_118 + 0x0004:word16] = ax_121
	Mem129[ss:fp - 0x0024:word16] = 0x0000
	Mem131[ss:fp - 0x0026:word16] = 0x88F8
	Mem134[ss:fp - 0x0028:word16] = Mem131[ss:bp_118 + 0x0006:word16]
	Mem137[ss:fp - 0x002A:word16] = Mem134[ss:bp_118 + 0x0004:word16]
	word16 dx_138
	word16 bp_139
	word16 si_140
	word16 di_141
	word16 ax_145 = (fn0800_8BBB(bp_118, si_119, di_120, bp, out dx_138, out bp_139, out si_140, out di_141) << 0x0002) + 0x07BC
	Mem149[Mem137[ss:bp_139 + 0x0008:segptr32]:word16] = ax_145
	Mem155[ss:fp - 0x002C:word16] = 0x0000
	Mem157[ss:fp - 0x002E:word16] = 0x88F8
	Mem160[ss:fp - 0x0030:word16] = Mem157[ss:bp_139 + 0x0006:word16]
	Mem163[ss:fp - 0x0032:word16] = Mem160[ss:bp_139 + 0x0004:word16]
	word16 dx_164
	word16 si_166
	word16 di_167
	word16 bp_165
	word16 ax_168 = fn0800_8BCA(bp_139, si_140, di_141, bp, out dx_164, out bp_165, out si_166, out di_167)
	Mem169[ss:bp_165 + 0x0006:word16] = dx_164
	Mem170[ss:bp_165 + 0x0004:word16] = ax_168
	word16 sp_162 = fp - 0x0032
	branch Mem170[ss:bp_165 + 0x0006:word16] < 0x0000 l0800_C26F
// DataOut: bp di ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_C22B:
	branch Mem170[ss:bp_165 + 0x0006:word16] != 0x0000 l0800_C234
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C22D:
	branch Mem170[ss:bp_165 + 0x0004:word16] <u 0x2250 l0800_C26F
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C234:
	Mem437[ss:bp_165 + 0x0004:word16] = Mem170[ss:bp_165 + 0x0004:word16] - 0x2250
	Mem441[ss:bp_165 + 0x0006:word16] = v32
	ptr32 es_bx_442 = Mem441[ss:bp_165 + 0x0008:segptr32]
	Mem446[es_bx_442:word16] = Mem441[es_bx_442:word16] + 0x0001
	Mem452[ss:fp - 0x0034:word16] = 0x0000
	Mem454[ss:fp - 0x0036:word16] = 0x2238
	Mem457[ss:fp - 0x0038:word16] = Mem454[ss:bp_165 + 0x0006:word16]
	Mem460[ss:fp - 0x003A:word16] = Mem457[ss:bp_165 + 0x0004:word16]
	word16 dx_461
	word16 bp_462
	word16 si_463
	word16 di_464
	word16 ax_465 = fn0800_8BBB(bp_165, si_166, di_167, bp, out dx_461, out bp_462, out si_463, out di_464)
	ptr32 es_bx_466 = Mem460[ss:bp_462 + 0x0008:segptr32]
	Mem470[es_bx_466:word16] = Mem460[es_bx_466:word16] + ax_465
	Mem476[ss:fp - 0x003C:word16] = 0x0000
	Mem478[ss:fp - 0x003E:word16] = 0x2238
	Mem481[ss:fp - 0x0040:word16] = Mem478[ss:bp_462 + 0x0006:word16]
	Mem484[ss:fp - 0x0042:word16] = Mem481[ss:bp_462 + 0x0004:word16]
	word16 dx_485
	word16 ax_489 = fn0800_8BCA(bp_462, si_463, di_464, bp, out dx_485, out bp_165, out si_166, out di_167)
	Mem490[ss:bp_165 + 0x0006:word16] = dx_485
	Mem491[ss:bp_165 + 0x0004:word16] = ax_489
	sp_162 = fp - 0x0042
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C26F:
	branch Mem170[ds_7:0x26E6:word16] == 0x0000 l0800_C2B4
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):0x2238 -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C276:
	word16 sp_372 = sp_162 - 0x0002
	Mem373[ss:sp_372:word16] = 0x0000
	Mem375[ss:sp_372 - 0x0002:word16] = 0x0018
	Mem378[ss:sp_372 - 0x0004:word16] = Mem375[ss:bp_165 + 0x0006:word16]
	Mem381[ss:sp_372 - 0x0006:word16] = Mem378[ss:bp_165 + 0x0004:word16]
	word16 dx_382
	word16 bp_383
	word16 si_384
	word16 di_385
	Mem388[ss:sp_372 - 0x0008:word16] = fn0800_8BCA(bp_165, si_166, di_167, bp, out dx_382, out bp_383, out si_384, out di_385)
	Mem394[ss:sp_372 - 0x000A:word16] = 0x0000
	Mem396[ss:sp_372 - 0x000C:word16] = 0x0018
	Mem399[ss:sp_372 - 0x000E:word16] = Mem396[ss:bp_383 + 0x0006:word16]
	Mem402[ss:sp_372 - 0x0010:word16] = Mem399[ss:bp_383 + 0x0004:word16]
	word16 dx_403
	Mem409[ss:sp_372 - 0x0012:word16] = fn0800_8BBB(bp_383, si_384, di_385, bp, out dx_403, out bp_165, out si_166, out di_167)
	Mem412[ss:sp_372 - 0x0014:word16] = 0x0000
	Mem420[ss:sp_372 - 0x0016:word16] = Mem412[Mem412[ss:bp_165 + 0x0008:segptr32]:word16] + 0xF84E
	sp_162 = sp_372 - 0x000E
	branch fn0800_C553(ds_7, wArg00, v10_18, v11, bArg06) == 0x0000 l0800_C2B4
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):0x2238 -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C2AC:
	Mem430[ss:bp_165 + 0x0004:word16] = Mem420[ss:bp_165 + 0x0004:word16] + 0x0001
	Mem434[ss:bp_165 + 0x0006:word16] = v44
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C2B4:
	word16 sp_202 = sp_162 - 0x0002
	Mem203[ss:sp_202:word16] = 0x0000
	Mem205[ss:sp_202 - 0x0002:word16] = 0x0018
	Mem208[ss:sp_202 - 0x0004:word16] = Mem205[ss:bp_165 + 0x0006:word16]
	Mem211[ss:sp_202 - 0x0006:word16] = Mem208[ss:bp_165 + 0x0004:word16]
	word16 dx_212
	word16 bp_213
	word16 si_214
	word16 di_215
	byte al_217 = (byte) fn0800_8BCA(bp_165, si_166, di_167, bp, out dx_212, out bp_213, out si_214, out di_215)
	Mem221[Mem211[ss:bp_213 + 0x000C:segptr32] + 0x0001:byte] = al_217
	Mem227[ss:sp_202 - 0x0008:word16] = 0x0000
	Mem229[ss:sp_202 - 0x000A:word16] = 0x0018
	Mem232[ss:sp_202 - 0x000C:word16] = Mem229[ss:bp_213 + 0x0006:word16]
	Mem235[ss:sp_202 - 0x000E:word16] = Mem232[ss:bp_213 + 0x0004:word16]
	word16 dx_236
	word16 bp_237
	word16 si_238
	word16 di_239
	word16 ax_240 = fn0800_8BBB(bp_213, si_214, di_215, bp, out dx_236, out bp_237, out si_238, out di_239)
	Mem241[ss:bp_237 + 0x0006:word16] = dx_236
	Mem242[ss:bp_237 + 0x0004:word16] = ax_240
	Mem244[ss:bp_237 + 0x0004:word16] = Mem242[ss:bp_237 + 0x0004:word16] + 0x0001
	Mem248[ss:bp_237 + 0x0006:word16] = v50
	branch (Mem248[Mem248[ss:bp_237 + 0x0008:segptr32]:word16] & 0x0003) != 0x0000 l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2F3:
	branch Mem248[ss:bp_237 + 0x0006:word16] < 0x0000 l0800_C30B
// DataOut: bp ds sp ss
// DataOut (flags): SZO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2F9:
	branch Mem248[ss:bp_237 + 0x0006:word16] > 0x0000 l0800_C301
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2FB:
	branch Mem248[ss:bp_237 + 0x0004:word16] <=u 0x003C l0800_C30B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C30B:
	branch Mem248[ss:bp_237 + 0x0006:word16] != 0x0000 l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C311:
	branch Mem248[ss:bp_237 + 0x0004:word16] != 0x003C l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C317:
	ptr32 es_bx_352 = Mem248[ss:bp_237 + 0x0008:segptr32]
	Mem355[es_bx_352 + 0x0003:byte] = 0x02
	Mem356[es_bx_352 + 0x0002:byte] = 0x1D
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C301:
	Mem360[ss:bp_237 + 0x0004:word16] = Mem248[ss:bp_237 + 0x0004:word16] - 0x0001
	Mem364[ss:bp_237 + 0x0006:word16] = v53
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C326:
	Mem284[Mem248[ss:bp_237 + 0x0008:segptr32] + 0x0003:byte] = 0x00
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C34D:
	int32 dx_ax_297 = (int32) (int16) Mem284[ds_7:(int16) Mem284[Mem284[ss:bp_237 + 0x0008:segptr32] + 0x0003:byte] + 0x26B4:byte]
	word16 ax_298 = (word16) dx_ax_297
	word16 dx_299 = SLICE(dx_ax_297, word16, 16)
	branch dx_299 < Mem284[ss:bp_237 + 0x0006:word16] l0800_C330
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C362:
	branch dx_299 != Mem284[ss:bp_237 + 0x0006:word16] l0800_C369
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C364:
	branch ax_298 <u Mem284[ss:bp_237 + 0x0004:word16] l0800_C330
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C330:
	ptr32 es_bx_308 = Mem284[ss:bp_237 + 0x0008:segptr32]
	Mem319[ss:bp_237 + 0x0004:word16] = Mem284[ss:bp_237 + 0x0004:word16] - (word16) ((int32) ((int16) Mem284[ds_7:(int16) Mem284[es_bx_308 + 0x0003:byte] + 0x26B4:byte]))
	Mem323[ss:bp_237 + 0x0006:word16] = v57
	selector es_310 = SLICE(es_bx_308, selector, 16)
	word16 bx_325 = Mem323[ss:bp_237 + 0x0008:word16]
	Mem327[es_310:bx_325 + 0x0003:byte] = Mem323[es_310:bx_325 + 0x0003:byte] + 0x01
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C369:
	ptr32 es_bx_331 = Mem284[ss:bp_237 + 0x0008:segptr32]
	Mem335[es_bx_331 + 0x0003:byte] = Mem284[es_bx_331 + 0x0003:byte] + 0x01
	Mem338[es_bx_331 + 0x0002:byte] = Mem335[ss:bp_237 + 0x0004:byte]
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C377:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_C177_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_C379(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: di ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
fn0800_C379_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0012(16)

l0800_C379:
	segptr32 ptrLoc0C_151 = DPB(ptrLoc0C, 0x26E8, 0)
	word16 dx_19
	word16 ax_20 = fn0800_AFCB(ds, ptrLoc0C_151, out dx_19)
	branch (ax_20 | dx_19) != 0x0000 l0800_C397
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000E(16) Local -0012(16)

l0800_C397:
	ptrLoc0C_151 = DPB(ptrLoc0C, ax_20, 0) (alias)
	branch fn0800_BFC7(ptrLoc0C_151, dx_19) >=u 0x0004 l0800_C3AA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3AA:
	selector es_162 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[ptrLoc06:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3BD:
	branch ((int16) Mem0[ds:(int16) Mem0[es_162:ax_20 + 0x0001:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3D1:
	branch ((int16) Mem0[ds:(int16) Mem0[es_162:ax_20 + 0x0002:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3E5:
	branch Mem0[es_162:ax_20 + 0x0003:byte] == 0x2D l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3EF:
	branch Mem0[es_162:ax_20 + 0x0003:byte] == 0x2B l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3F6:
	branch (Mem0[ds:(int16) Mem0[es_162:ax_20 + 0x0003:byte] + 0x2251:byte] & 0x02) == 0x00 l0800_C42C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C404:
	selector es_201 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[ptrLoc06 + 0x0003:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C418:
	branch ((int16) Mem0[ds:(int16) Mem0[es_201:ax_20 + 0x0004:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C467:
	fn0800_B083(Mem0[ds:0x26DE:word16], Mem0[ds:0x26E0:word16], 0x00, 0x0004)
	fn0800_C01E(DPB(ptrLoc12, Mem0[ds:0x26DA:word16], 0), Mem0[ds:0x26DC:word16], DPB(ptrLoc0E, ax_20, 0), 0x0003)
	ptr32 es_bx_248 = Mem0[ds:0x26DA:segptr32]
	Mem252[es_bx_248 + 0x0003:byte] = 0x00
	word16 dx_262
	word16 ax_263 = fn0800_A471((byte) es_bx_248, ds, DPB(ptrLoc0C, ax_20 + 0x0003, 0), out dx_262)
	word16 dx_280
	word16 ax_281 = fn0800_8F18(0x0E10, dx_262, 0x0000, ax_263, out dx_280)
	Mem282[ds:0x26E4:word16] = dx_280
	Mem283[ds:0x26E2:word16] = ax_281
	Mem284[ds:0x26E6:word16] = 0x0000
	word16 si_285 = 0x0003
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C542:
	branch Mem284[ptrLoc06 + si_285:byte] == 0x00 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C54B:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4CA:
	branch (Mem284[ds:(int16) Mem284[ptrLoc06 + si_285:byte] + 0x2251:byte] & 0x0C) == 0x00 l0800_C541
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C541:
	si_285 = si_285 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4DA:
	branch fn0800_BFC7(DPB(ptrLoc0C, ax_20 + si_285, 0), dx_19) <u 0x0003 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_C4ED:
	selector es_323 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem284[ds:(int16) Mem284[es_323:(word16) ptrLoc06 + 0x0001 + si_285:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C501:
	branch ((int16) Mem284[ds:(int16) Mem284[es_323:ax_20 + 0x0002 + si_285:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C515:
	fn0800_C01E(DPB(ptrLoc12, Mem284[ds:0x26DE:word16], 0), Mem284[ds:0x26E0:word16], DPB(ptrLoc0E, ax_20 + si_285, 0), 0x0003)
	Mem366[Mem284[ds:0x26DE:segptr32] + 0x0003:byte] = 0x00
	Mem367[ds:0x26E6:word16] = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C3A7:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C394:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C42C:
	Mem69[ds:0x26E6:word16] = 0x0001
	Mem70[ds:0x26E4:word16] = 0x0000
	Mem71[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(DPB(ptrLoc10, Mem71[ds:0x26DA:word16], 0), Mem71[ds:0x26DC:word16], DPB(ptrLoc0C_151, 0x26EB, 0))
	fn0800_BF9E(DPB(ptrLoc10, Mem71[ds:0x26DE:word16], 0), Mem71[ds:0x26E0:word16], DPB(ptrLoc0C_151, 0x26EF, 0))
	Mem103[ds:0x26E6:word16] = 0x0001
	Mem104[ds:0x26E4:word16] = 0x0000
	Mem105[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(DPB(ptrLoc10, Mem105[ds:0x26DA:word16], 0), Mem105[ds:0x26DC:word16], DPB(ptrLoc0C_151, 0x26EB, 0))
	fn0800_BF9E(DPB(ptrLoc10, Mem105[ds:0x26DE:word16], 0), Mem105[ds:0x26E0:word16], DPB(ptrLoc0C_151, 0x26EF, 0))
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C54E:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C379_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_C553_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C553:
	branch wArg04 != 0x0000 l0800_C589
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C589:
	branch wArg04 <u 0x0003 l0800_C59A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C58F:
	branch (wArg02 + 0x0046 & 0x0003) == 0x0000 l0800_C59D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C59A:
	wArg06 = wArg06 - 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C59D:
	wArg06 = wArg06 + Mem0[ds:(wArg04 - 0x0001 << 0x0001) + 0x26C0:word16]
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C55D:
	word16 si_134 = wArg06
	branch wArg06 <u 0x003B l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C566:
	branch (wArg02 + 0x0046 & 0x0003) != 0x0000 l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C571:
	si_134 = wArg06 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C572:
	wArg04 = 0x0000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C57C:
	branch Mem0[ds:(wArg04 << 0x0001) + 0x26C0:word16] <=u si_134 l0800_C579
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C579:
	wArg04 = wArg04 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C587:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5AA:
	word16 ax_34
	branch wArg04 <u 0x0004 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B0:
	branch wArg04 == 0x0004 l0800_C5BA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B2:
	branch wArg04 >u 0x000A l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B8:
	branch wArg04 != 0x000A l0800_C626
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5BA:
	word16 cx_116
	word16 bx_66 = wArg04 << 0x0001
	branch wArg02 <= 0x0010 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5C5:
	branch wArg04 != 0x0004 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D4:
	cx_116 = Mem0[ds:bx_66 + 0x26C0:word16]
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5CB:
	cx_116 = Mem0[ds:bx_66 + 0x26BE:word16] + 0x0007
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D8:
	branch ((byte) (wArg02 + 0x07B2) & 0x03) == 0x00 l0800_C5E5
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E4:
	cx_116 = cx_116 - 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E5:
	word16 cx_96 = cx_116 - (uint16) ((uint32) ((uint16) (((wArg02 + 0x0001 >> 0x0002) + cx_116) + 0x0171)) % 0x0007)
	branch wArg04 != 0x0004 l0800_C61A
// DataOut: ax cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61A:
	branch wArg06 <u cx_96 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61E:
	branch wArg06 != cx_96 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C620:
	branch bArg08 >u 0x01 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C60C:
	branch wArg06 >u cx_96 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C610:
	branch wArg06 != cx_96 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C612:
	branch bArg08 <u 0x02 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62B:
	ax_34 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C618:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C626:
	ax_34 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62D:
	return ax_34
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>

fn0800_C553_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> si:si cx:<invalid> Sequence dx:ax:<invalid> dx:(uint16) (dx_ax % 0x0007) -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>



word16 fn0800_C632(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_C632_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C632:
	word16 ax_130
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_C64E
// DataOut: bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C64E:
	byte al_108 = (byte) (wArg08 + 0x0001)
	branch wArg08 >=u 0xFFFF l0800_C65C
// DataOut: al bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C65C:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_C677
// DataOut: al bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C668:
	word16 dx_164
	al_108 = (byte) fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x02, out dx_164) (alias)
// DataOut: al bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C677:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_C696
// DataOut: al bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C696:
	Mem137[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp

l0800_C6AF_thunk_fn0800_C727:
	byte dl_146
	selector ds_147
	return fn0800_C727(fp - 0x0002, wArg02, ds, out dl_146, out ds_147)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_C683:
	byte dl_129
	ax_130 = fn0800_C779(al_108, ds, wArg02, DPB(ptrLoc9A, wArg04, 0), wArg08, out dl_129)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C657:
	ax_130 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C644:
	ax_130 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C773:
	return ax_130
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -2(fp):bp

fn0800_C632_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_C6D7(byte al, word16 bx, word16 bp, word16 di, selector es, selector ds, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp bx di ds es ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_C6D7_entry:
	*dsOut = ds
// DataOut: al bp bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_C6D7:
	Mem3[es:bx:byte] = al
	Mem9[ss:bp - 0x0004:word16] = Mem3[ss:bp - 0x0004:word16] + 0x0001
	word16 dx_13 = Mem9[ss:bp - 0x0004:word16] - (bp - 0x008E)
	word16 bx_17 = 0x0000 - (dx_13 <u 0x0000)
	branch bx_17 < 0x0000 l0800_C6ED_thunk_fn0800_C731
// DataOut: bp di ds dx ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_C6ED_thunk_fn0800_C731:
	byte dl_102
	selector ds_103
	return fn0800_C731(bp, di, ds, wArg00, wArg02, out dl_102, out ds_103)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:bp - 0x008E dx:<invalid> bx:<invalid>

l0800_C6EF:
	branch bx_17 != 0x0000 l0800_C6F7
// DataOut: bp di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:bp - 0x008E dx:<invalid> bx:<invalid>
// LocalsOut: fp(16)

l0800_C6F1:
	branch dx_13 <u 0x0080 l0800_C6F5_thunk_fn0800_C731
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:bp - 0x008E dx:<invalid> bx:<invalid>
// LocalsOut: fp(16)

l0800_C6F5_thunk_fn0800_C731:
	byte dl_93
	selector ds_94
	return fn0800_C731(bp, di, ds, wArg00, wArg02, out dl_93, out ds_94)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:bp - 0x008E dx:<invalid> bx:<invalid>

l0800_C6F7:
	word16 si_46 = Mem9[ss:bp - 0x0004:word16] - (bp - 0x008E)
	byte dl_64
	word16 ax_65 = fn0800_C779((byte) (bp - 0x008E), ds, di, DPB(ptrLoc06, bp - 0x008E, 0), si_46, out dl_64)
	byte dl_68
	*dlOut = (byte) ax_65
	branch ax_65 == si_46 l0800_C713_thunk_fn0800_C727
// DataOut: bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:bp - 0x008E dx:<invalid> bx:<invalid>

l0800_C713_thunk_fn0800_C727:
	byte dl_85
	selector ds_86
	return fn0800_C727(bp, di, ds, out dl_85, out ds_86)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C715:
	branch ax_65 != 0xFFFF l0800_C71F
// DataOut: bp dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C71F:
	word16 ax_80 = Mem9[ss:bp + 0x000A:word16] - Mem9[ss:bp - 0x0006:word16]
// DataOut: ax bp dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C725_thunk_fn0800_C76A:
	return fn0800_C76A(ax_80, ax_65, bp, si_46)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:<invalid> -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C718_thunk_fn0800_C71A:
	word16 bp_73
	return fn0800_C71A(bp, out bp_73)
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C718_thunk_fn0800_C71A:
	word16 bp_76
	return fn0800_C71A(bp_73, out bp_76)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0xFFFF dx:<invalid> bx:<invalid> si:<invalid> di:<invalid> bp:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

fn0800_C6D7_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> di:<invalid> bp:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>



word16 fn0800_C71A(word16 bp, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp
// Trashed: ah al ax bp bpl di dil eax ebp edi esi esp rax rbp rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_C71A_entry:
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_C71A:
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_C71D_thunk_fn0800_C76E:
	word16 bp_6
	*bpOut = fn0800_C76E(bp, wArg00, wArg02)
	return 0xFFFF
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0xFFFF

fn0800_C71A_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0xFFFF di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_C727(word16 bp, word16 di, selector ds, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_C727_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_C727:
	Mem5[ss:bp - 0x0002:word16] = ss
	Mem6[ss:bp - 0x0004:word16] = bp - 0x008E
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_C72E_thunk_fn0800_C731:
	byte dl_11
	selector ds_12
	return fn0800_C731(bp, di, ds, wArg00, wArg02, out dl_11, out ds_12)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:bp - 0x008E

fn0800_C727_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> dx:<invalid> di:<invalid> bp:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid>



word16 fn0800_C731(word16 bp, word16 di, selector ds, word16 wArg00, word16 wArg02, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_C731_entry:
	*dsOut = ds
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_C731:
	branch Mem0[ss:bp - 0x0006:word16] == 0x0000 l0800_C73A
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_C73A:
	word16 si_75 = Mem0[ss:bp - 0x0004:word16] - (bp - 0x008E)
	byte dl_79
	*dlOut = (byte) (0x0000 - (si_75 <u 0x0000))
	branch false l0800_C770
// DataOut: bp di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_C74E:
	byte dl_119
	word16 ax_120 = fn0800_C779((byte) (bp - 0x008E), ds, di, DPB(ptrLoc06, bp - 0x008E, 0), si_75, out dl_119)
	byte dl_123 = (byte) ax_120
	*dlOut = dl_123
	branch ax_120 == si_75 l0800_C770
// DataOut: bp dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_C770:
	word16 ax_95 = Mem0[ss:bp + 0x000A:word16]
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_C773_in_fn0800_C731:
	return ax_95
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:<invalid> -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C762:
	branch ax_120 == 0xFFFF l0800_C71A
// DataOut: bp dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C765_thunk_fn0800_C71A:
	word16 bp_132
	return fn0800_C71A(bp, out bp_132)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C767:
	word16 ax_128 = Mem0[ss:bp + 0x000A:word16]
// DataOut: ax bp dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:0xFF -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C767_thunk_fn0800_C76A:
	return fn0800_C76A(ax_128, ax_120, bp, si_75)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> al:<invalid> -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>

l0800_C737:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_C6B4:
	Mem32[ss:bp - 0x0006:word16] = Mem0[ss:bp - 0x0006:word16] - 0x0001
	ptr32 es_bx_33 = Mem32[ss:bp - 0x000C:segptr32]
	Mem37[ss:bp - 0x000C:word16] = Mem32[ss:bp - 0x000C:word16] + 0x0001
	byte al_38 = Mem37[es_bx_33:byte]
	Mem39[ss:bp - 0x0007:byte] = al_38
	branch al_38 != 0x0A l0800_C6D1
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_C6C7:
	Mem68[Mem39[ss:bp - 0x0004:segptr32]:byte] = 0x0D
	Mem70[ss:bp - 0x0004:word16] = Mem68[ss:bp - 0x0004:word16] + 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid>

l0800_C6D1:
	ptr32 es_bx_44 = Mem39[ss:bp - 0x0004:segptr32]
	word16 bx_45 = (word16) es_bx_44
	selector es_46 = SLICE(es_bx_44, selector, 16)
	byte al_47 = Mem39[ss:bp - 0x0007:byte]
// DataOut: al bp bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid>

l0800_C6D4_thunk_fn0800_C6D7:
	byte dl_52
	selector ds_53
	return fn0800_C6D7(al_47, bx_45, bp, di, es_46, ds, out dl_52, out ds_53)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:bx:<invalid> al:<invalid>

fn0800_C731_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> si:<invalid> dx:<invalid> di:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> -8(fp):di -6(fp):bp - 0x008E -4(fp):ss -2(fp):<invalid>



word16 fn0800_C76A(word16 ax, word16 dx, word16 bp, word16 si)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp dx si ss
// LiveOut: ax
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi esi esp rax rbp rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_C76A_entry:
// DataOut: ax bp dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_C76A:
	word16 ax_6 = ax + dx - si
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_C76C_thunk_fn0800_C76E:
	fn0800_C76E(bp, wArg00, wArg02)
	return ax_6
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:ax + dx - si

fn0800_C76A_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:ax + dx - si di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_C76E(word16 bp, word16 wArg00, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: bp
// Trashed: bp bpl di dil ebp edi esi esp rbp rdi rsi rsp si sil sp spl
// Preserved:
fn0800_C76E_entry:
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_C76E:
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_C773_in_fn0800_C76E:
	return Mem0[ss:bp:word16]
// DataOut: ax bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_C76E_exit:
// DataOut: bp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_C779(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_C779_entry:
	*dlOut = dl
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C779:
	word16 wLoc04_36
	word16 ax_23
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0001) == 0x0000 l0800_C78F
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C78F:
	byte dl_59 = (byte) ptrArg04
	*dlOut = dl_59
	word16 ax_60
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_60) l0800_C7AF
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_C7AF:
	wLoc04_36 = ax_60
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7A0:
	Mem70[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x1000
	ax_23 = ax_60
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_C789:
	wLoc04_36 = 0x0005
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7B0:
	ax_23 = fn0800_8D2B(ds, wLoc04_36)
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 bx:<invalid> ax:0x0005 ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_C7B3:
	return ax_23
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_C779_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



void fn1483_0ADB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn1483_0ADB_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0ADB:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0ADB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



real64 fn1483_1104(word16 ax, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, real64 rArg0, real64 rArg1, real64 rArg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bl bp bpl bx di dl ds es si ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1104_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_1104_entry:
// DataOut: ax bl bp bpl bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_1104:
	byte al_4 = (byte) (ax - 0x5D97)
	word16 sp_1 = fp
	word16 dx_23 = DPB(dx, 0x26, 8)
	byte C_16 = cond(SEQ(al_4, __aam(al_4)) - 0x00755D97)
// DataOut: al bl bp bpl bx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_110D:
	Mem40[ss:bp + 0x450F:word16] = Mem0[ss:bp + 0x450F:word16] + 0x9F59 + C_16
	word16 sp_43 = sp_1 - 0x0002
	Mem44[ss:sp_43:word16] = es
	dx_23 = DPB(dx_23, 0x34, 8) (alias)
	Mem46[ss:bp + 0x005E + si:word16] = dx_23
	Mem49[ds:bx + 0x675E + di:word16] = Mem46[ds:bx + 0x675E + di:word16] - 0x007D
	Mem58[ss:sp_43 - 0x0002:word16] = dx_23
	real64 rArg1_62 = rArg1 * lg2(rArg0 + 1.0)
	ptr32 es_bx_73 = Mem58[ds:0x9F59:segptr32]
	rArg1 = scalbn(rArg1_62, rArg2)
	word16 v27_83 = Mem58[ss:bp + 0x1EC4:word16] + bp
	Mem84[ss:bp + 0x1EC4:word16] = v27_83
	sp_1 = sp_43
	si = 0x9F59
	es = SLICE(es_bx_73, selector, 16) (alias)
	bx = (word16) es_bx_73 (alias)
	di = 0xBFC4
	C_16 = cond(v27_83) (alias)
// DataOut: al bl bp bpl bx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> dh:<invalid> al:<invalid> cl:0x1C bl:<invalid> si:0x9F59 Sequence es:bx:<invalid> di:0xBFC4 -4(fp):dx -2(fp):es



void fn1483_14C4(byte al, word16 bx, word16 di, selector es, selector ds, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, word16 wArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al bx di dil ds es ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0008(16) Stack +000A(8) Stack +000C(16)
fn1483_14C4_entry:
// DataOut: al bx di dil ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0008(16) Stack +000A(8) Stack +000C(16)

l1483_14C4:
	Mem2[ds:bx + 0xC841 + di:byte] = 0xF0
	Mem10[es:di:byte] = (byte) (ax - di - C)
	Mem38[ds:wArg00 + 0x0047:word16] = 0x9FF7
	Mem43[ds:wArg08:word16] = -Mem38[ds:wArg08:word16]
	Mem45[ds:wArg08 + wArg00:word16] = Mem43[ds:wArg08 + wArg00:word16] >> (byte) wArg0C
	byte al_51 = Mem45[ds:0x032B:byte]
	Mem54[ds:wArg00:word16] = ss
	__aam(al_51)
	__inw(0x94)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_14C4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0012 ax:<invalid> di:<invalid> si:<invalid> bp:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> dl:<invalid> al:<invalid> ch:<invalid>



void fn1483_1C50(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut:
// Trashed: al ax eax esp rax rsp sp spl
// Preserved:
fn1483_1C50_entry:
// DataOut: dx
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1C50:
	byte al_3 = __inb(dx)
	word16 ax_5 = DPB(ax, al_3, 0)
	word16 sp_6
	byte al_7
	word16 dx_8
	word16 ax_9
	call ax_5 (retsize: 4; depth: 4)
		uses: al_3,ax_5,dx,sp_1
		defs: al_7,ax_9,dx_8,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_1C50_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid>



void fn1483_1C95(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl eax ebp rax rbp
// Preserved: sp
fn1483_1C95_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1C95:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_1C95_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:ax + 0x7A52 bp:<invalid>



