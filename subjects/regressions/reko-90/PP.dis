byte fn0800_0150(ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ah bx dx
// Trashed: SCZO ah bx dx es Top
// Preserved: di si sp
fn0800_0150_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0150:
	word16 bx_16
	word16 dx_17
	byte ah_15 = fn0800_01E6(0x2714, 0x2714, Mem0[0x0800:0x025A:selector], out dx_17, out bx_16)
	dxOut = dx_17
	bxOut = bx_16
	return ah_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0150_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0163()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_0163_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0163:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0163_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0164(byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0800_0164_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0164_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0164:
	msdos_terminate(bArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0176(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15]
// LiveOut:
// Trashed: ax bx dx es Top
// Preserved: ds sp
fn0800_0176_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0176:
	word32 es_bx_10 = msdos_get_interrupt_vector(0x00)
	Mem12[ds:0x005B:word16] = (word16) es_bx_10
	Mem14[ds:0x005D:word16] = SLICE(es_bx_10, selector, 16)
	word32 es_bx_17 = msdos_get_interrupt_vector(0x04)
	Mem19[ds:0x005F:word16] = (word16) es_bx_17
	Mem21[ds:0x0061:word16] = SLICE(es_bx_17, selector, 16)
	word32 es_bx_24 = msdos_get_interrupt_vector(0x05)
	Mem26[ds:0x0063:word16] = (word16) es_bx_24
	Mem28[ds:0x0065:word16] = SLICE(es_bx_24, selector, 16)
	word32 es_bx_31 = msdos_get_interrupt_vector(0x06)
	Mem33[ds:0x0067:word16] = (word16) es_bx_31
	Mem35[ds:0x0069:word16] = SLICE(es_bx_31, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x016D))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0176_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_01B9(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: ax dx
// Trashed: ax dx Top
// Preserved: ds sp
fn0800_01B9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01B9:
	msdos_set_interrupt_vector(0x00, Mem7[ds:0x005B:segptr32])
	msdos_set_interrupt_vector(0x04, Mem16[ds:0x005F:segptr32])
	msdos_set_interrupt_vector(0x05, Mem25[ds:0x0063:segptr32])
	ptr32 ds_dx_36 = Mem34[ds:0x0067:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_36)
	dxOut = (word16) ds_dx_36
	return 0x2506
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01B9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_01E6(word16 si, word16 di, selector es, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15] si:[0..15]
// LiveOut: ah bx dx
// Trashed: SCZO ah bx dx Top
// Preserved: es sp
fn0800_01E6_entry:
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01E6:
	byte ah_35
	branch si == 0x26FC l0800_01F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F0:
	ah_35 = 0xFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01EC:
	ah_35 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F2:
	word16 dx_13 = di
	word16 bx_15 = si
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F6:
	branch bx_15 == di l0800_021D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_021D:
	branch dx_13 == di l0800_023C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_023C:
	dxOut = dx_13
	bxOut = bx_15
	return ah_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0221:
	Mem27[es:dx_13:byte] = 0xFF
	branch Mem80[es:dx_13:byte] == 0x00 l0800_0235
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0235:
	call SEQ(0x0800, Mem31[es:dx_13 + 0x0002:word16]) (retsize: 2;)
		uses: ah:ah_35,bx:dx_20,dx:dx_20,sp:fp - 2,Stack +0002:es,Top:Top_98
		defs: Top:Top_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_022E:
	call Mem31[es:dx_13 + 0x0002:ptr32] (retsize: 4;)
		uses: ah:ah_35,bx:dx_20,dx:dx_20,sp:fp - 2,Stack +0004:es,Top:Top_98
		defs: Top:Top_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01FA:
	branch Mem80[es:bx_15:byte] == 0xFF l0800_0218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0200:
	byte CZ_58
	branch si == 0x26FC l0800_020C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_020C:
	CZ_58 = SLICE(cond(Mem80[es:bx_15 + 0x0001:byte] - ah_35), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0206:
	CZ_58 = SLICE(cond(ah_35 - Mem80[es:bx_15 + 0x0001:byte]), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0210:
	branch CZ_58 l0800_0218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0212:
	ah_35 = Mem80[es:bx_15 + 0x0001:byte]
	dx_13 = bx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0218:
	bx_15 = bx_15 + 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_023D(char * ds_dx, word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Sequence ds:dx:[0..31]
// LiveOut:
// Trashed: C ax bx Top
// Preserved: sp
fn0800_023D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_023D:
	word16 ax_10
	msdos_write_file(0x0002, cx, ds_dx, out ax_10)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_023D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void main(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved: P
main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_025E:
	Mem15[ds:0x2A27:word16] = 0x0001
	Mem16[ds:0x2E4D:word16] = 0x0000
	Mem17[ds:0x2A1F:word16] = 0x0000
	Mem18[ds:0x2E4F:word16] = 0x0000
	Mem19[ds:0x2A1D:word16] = 0x0000
	Mem20[ds:0x2A17:word16] = 0x0000
	Mem21[ds:0x2A1B:word16] = 0x0000
	Mem22[ds:0x2A11:word16] = 0x0000
	Mem23[ds:0x2A0F:word16] = 0x0000
	Mem24[ds:0x2A0D:word16] = 0x0000
	Mem25[ds:0x2A0B:word16] = 0x3000
	Mem26[ds:0x2E31:word16] = 0x8000
	Mem27[ds:0x2E2F:word16] = 0x1000
	Mem28[ds:0x2A21:word16] = 0x0001
	Mem29[ds:0x29F5:word16] = 0x0000
	Mem30[ds:0x29F3:word16] = 0x0000
	Mem31[ds:0x29F1:word16] = 0x0000
	Mem32[ds:0x29EF:word16] = 0x0000
	Mem33[ds:0x2A13:word16] = 0x0000
	Mem34[ds:0x2A23:word16] = 0x0001
	word16 bx_36
	word16 dx_38
	word16 cx_37 = fn0800_2C9A(ds, out dx_38, out bx_36)
	word16 di_54
	fn0800_B2EF(cx_37, dx_38, bx_36, ds, SEQ(ds, 0x07E8), out si_451, out di_54)
	selector ds_126
	word16 bp_122
	word16 dx_127 = fn0800_0541(fn0800_0402(cx_37, dx_38, bx_36, ds), di_54, ds, out bp_122, out ds_126)
	word16 sp_82 = <invalid>
	Mem89[ss:sp_82 - 2:word16] = 0x0001
	Mem91[ss:sp_82 - 4:word16] = 0x0001
	fn0800_2DBF(ds_126, Mem91[ss:sp_82 - 4:word16], Mem91[ss:sp_82 - 2:word16])
	Mem98[ss:sp_82 - 2:word16] = 0x0000
	Mem100[ss:sp_82 - 4:word16] = 0x0000
	word16 cx_102 = fn0800_9764(ds_126, Mem100[ss:sp_82 - 4:segptr32])
	Mem110[ss:bp_122 - 0x0002:word16] = dx_127
	Mem111[ss:bp_122 - 0x0004:word16] = 0x0000
	word16 sp_109 = sp_82
	word16 bx_112 = Mem111[ds_126:0x2A25:word16]
	branch bx_112 >u 0x0008 l0800_0338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_031A:
	switch (bx_112 << 0x0001) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0335:
	dx_127 = fn0800_19EE(cx_102, dx_127, ds_126, out bp_122, out ds_126)
	sp_109 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_032B:
	dx_127 = fn0800_18D9(cx_102, dx_127, ds_126, out bp_122, out ds_126)
	sp_109 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0326:
	dx_127 = fn0800_12E2(cx_102, dx_127, ds_126, out bp_122, out ds_126)
	sp_109 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0330:
	dx_127 = fn0800_112D(cx_102, dx_127, bp_122, ds_126, out ds_126)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0321:
	dx_127 = fn0800_0DE8(cx_102, dx_127, bp_122, ds_126, out ds_126)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0338:
	word16 sp_213 = sp_109 - 2
	Mem215[ss:sp_213:word16] = 0x0000
	Mem217[ss:sp_213 - 2:word16] = 0x0000
	fn0800_9764(ds_126, Mem217[ss:sp_213 - 2:segptr32])
	word16 ax_229 = 0x0000 - Mem217[ss:bp_122 - 0x0004:word16]
	Mem235[ss:bp_122 - 0x0002:word16] = dx_127 - Mem217[ss:bp_122 - 0x0002:word16] - (ax_229 <u 0x0000)
	Mem236[ss:bp_122 - 0x0004:word16] = ax_229
	Mem239[ss:sp_213:word16] = Mem236[ds_126:0x29F1:word16]
	Mem242[ss:sp_213 - 2:word16] = Mem239[ds_126:0x29EF:word16]
	Mem245[ss:sp_213 - 4:word16] = Mem242[ds_126:0x29F5:word16]
	Mem248[ss:sp_213 - 6:word16] = Mem245[ds_126:0x29F3:word16]
	word16 ax_249 = fn0800_0B79(Mem248[ss:sp_213 - 6:word32], Mem248[ss:sp_213 - 2:ui32])
	Mem264[ss:sp_213:word16] = 0x0000
	Mem266[ss:sp_213 - 2:word16] = 0x003C
	Mem269[ss:sp_213 - 4:word16] = Mem266[ss:bp_122 - 0x0002:word16]
	Mem272[ss:sp_213 - 6:word16] = Mem269[ss:bp_122 - 0x0004:word16]
	word16 dx_276
	word16 ax_273 = fn0800_8BCA(Mem272[ss:sp_213 - 6:word32], Mem272[ss:sp_213 - 2:word16], Mem272[ss:sp_213:word16], out dx_276)
	word16 sp_277 = <invalid>
	Mem283[ss:sp_277 - 2:word16] = dx_276
	Mem285[ss:sp_277 - 4:word16] = ax_273
	Mem291[ss:sp_277 - 6:word16] = 0x0000
	Mem293[ss:sp_277 - 8:word16] = 0x003C
	Mem296[ss:sp_277 - 10:word16] = 0x0000
	Mem298[ss:sp_277 - 12:word16] = 0x0E10
	Mem301[ss:sp_277 - 14:word16] = Mem298[ss:bp_122 - 0x0002:word16]
	Mem304[ss:sp_277 - 16:word16] = Mem301[ss:bp_122 - 0x0004:word16]
	word16 dx_308
	word16 ax_305 = fn0800_8BCA(Mem304[ss:sp_277 - 16:word32], Mem304[ss:sp_277 - 12:word16], Mem304[ss:sp_277 - 10:word16], out dx_308)
	word16 sp_309 = <invalid>
	Mem315[ss:sp_309 - 2:word16] = dx_308
	Mem317[ss:sp_309 - 4:word16] = ax_305
	word16 dx_321
	word16 ax_318 = fn0800_8BBB(Mem317[ss:sp_309 - 4:word32], Mem317[ss:sp_309:word16], Mem317[ss:sp_309 + 2:word16], out cx_452, out dx_321, out bx_453)
	word16 sp_322 = <invalid>
	Mem328[ss:sp_322 - 2:word16] = dx_321
	Mem330[ss:sp_322 - 4:word16] = ax_318
	Mem336[ss:sp_322 - 6:word16] = 0x0000
	Mem338[ss:sp_322 - 8:word16] = 0x0E10
	Mem341[ss:sp_322 - 10:word16] = 0x0000
	Mem343[ss:sp_322 - 12:word16] = 0x5180
	Mem346[ss:sp_322 - 14:word16] = Mem343[ss:bp_122 - 0x0002:word16]
	Mem349[ss:sp_322 - 16:word16] = Mem346[ss:bp_122 - 0x0004:word16]
	word16 dx_353
	word16 ax_350 = fn0800_8BCA(Mem349[ss:sp_322 - 16:word32], Mem349[ss:sp_322 - 12:word16], Mem349[ss:sp_322 - 10:word16], out dx_353)
	word16 sp_354 = <invalid>
	Mem360[ss:sp_354 - 2:word16] = dx_353
	Mem362[ss:sp_354 - 4:word16] = ax_350
	word16 cx_365
	word16 dx_366
	word16 ax_363 = fn0800_8BBB(Mem362[ss:sp_354 - 4:word32], Mem362[ss:sp_354:word16], Mem362[ss:sp_354 + 2:word16], out cx_365, out dx_366, out bx_454)
	word16 sp_367 = <invalid>
	Mem373[ss:sp_367 - 2:word16] = dx_366
	Mem375[ss:sp_367 - 4:word16] = ax_363
	Mem384[ss:sp_367 - 6:word16] = (uint16) ((uint32) (uint16) ax_249 % 0x0064)
	word32 dx_ax_387 = (uint32) (uint16) ax_249
	Mem393[ss:sp_367 - 8:word16] = (uint16) (dx_ax_387 /u 0x0064)
	Mem396[ss:sp_367 - 10:word16] = Mem393[ds_126:0x29F1:word16]
	Mem399[ss:sp_367 - 12:word16] = Mem396[ds_126:0x29EF:word16]
	Mem402[ss:sp_367 - 14:word16] = Mem399[ds_126:0x29F5:word16]
	Mem405[ss:sp_367 - 16:word16] = Mem402[ds_126:0x29F3:word16]
	Mem407[ss:sp_367 - 18:word16] = ds_126
	Mem410[ss:sp_367 - 20:word16] = 0x05DC
	Mem413[ss:sp_367 - 22:word16] = 0x0008
	Mem416[ss:sp_367 - 24:word16] = Mem413[ds_126:0x2A13:word16]
	Mem418[ss:sp_367 - 26:word16] = ds_126
	Mem421[ss:sp_367 - 28:word16] = 0x07EB
	fn0800_B2EF(cx_365, (uint16) (dx_ax_387 % 0x0064), 0x0064, ds_126, Mem421[ss:sp_367 - 28:word32], out si_455, out di_456)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0402(word16 cx, word16 dx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: cx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di ds si sp
fn0800_0402_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0402:
	branch Mem10[ds:0x2A27:word16] != Mem10[ds:0x269A:word16] l0800_0410
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_040D:
	fn0800_0DCE(cx, dx, bx, ds, out di_607)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0410:
	ptr32 es_bx_32 = Mem10[ds:0x269C:segptr32]
	selector es_36 = SLICE(es_bx_32, selector, 16)
	word16 bx_34 = (word16) es_bx_32 + (Mem10[ds:0x2A27:word16] << 0x0002)
	word16 cx_168
	branch fn0800_BFC7(SEQ(Mem10[es_36:bx_34 + 0x0002:word16], Mem41[es_36:bx_34:word16]), out cx_168) <=u 0x0001 l0800_044D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_042F:
	ptr32 es_bx_59 = Mem44[ds:0x269C:segptr32]
	selector es_63 = SLICE(es_bx_59, selector, 16)
	word16 bx_61 = (word16) es_bx_59 + (Mem44[ds:0x2A27:word16] << 0x0002)
	fn0800_0D24(ds, 0x0001, SEQ(Mem44[es_63:bx_61 + 0x0002:word16], Mem66[es_63:bx_61:word16]), out cx_168, out dx_608, out bx_609, out si_610, out di_611, out es_612, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_044D:
	word16 ax_90 = Mem89[ds:0x2A27:word16]
	byte cl_113
	word16 bx_112
	word16 dx_114
	word16 ax_111 = fn0800_0C29(ds, SEQ(ds, 0x0829), SLICE(DPB(ax_90 << 0x0002, Mem89[Mem89[ds:(word16) Mem89[ds:0x269C:segptr32] + (ax_90 << 0x0002):segptr32]:byte], 0), byte, 0), out cl_113, out dx_114, out bx_112, out es_115)
	Mem121[ds:0x2A25:word16] = ax_111
	word16 cx_143 = DPB(cx_168, cl_113, 0)
	branch ax_111 < 0x0009 l0800_0492
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0474:
	ptr32 es_bx_127 = Mem121[ds:0x269C:segptr32]
	selector es_131 = SLICE(es_bx_127, selector, 16)
	word16 bx_129 = (word16) es_bx_127 + (Mem121[ds:0x2A27:word16] << 0x0002)
	fn0800_0D24(ds, 0x0001, SEQ(Mem121[es_131:bx_129 + 0x0002:word16], Mem134[es_131:bx_129:word16]), out cx_143, out dx_114, out bx_112, out si_613, out di_614, out es_615, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0492:
	Mem159[ds:0x2A27:word16] = Mem157[ds:0x2A27:word16] + 0x0001
	branch Mem159[ds:0x2A25:word16] > 0x0002 l0800_04A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04A0:
	branch Mem159[ds:0x2A27:word16] != Mem159[ds:0x269A:word16] l0800_04AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04A9:
	fn0800_0DCE(cx_143, dx_114, bx_112, ds, out di_616)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04AC:
	word16 ax_182 = Mem159[ds:0x2A27:word16]
	Mem184[ds:0x2A27:word16] = Mem159[ds:0x2A27:word16] + 0x0001
	ptr32 es_bx_187 = Mem184[ds:0x269C:segptr32]
	selector es_191 = SLICE(es_bx_187, selector, 16)
	word16 bx_189 = (word16) es_bx_187 + (ax_182 << 0x0002)
	fn0800_BF9E(SEQ(ds, 0x4348), SEQ(Mem184[es_191:bx_189 + 0x0002:word16], Mem197[es_191:bx_189:word16]))
	fn0800_0C6C(ds, SEQ(ds, 0x4348))
	word16 di_235 = 0x4348
	word16 cx_239 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E4:
	branch cx_239 == 0x0000 l0800_04E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E4_1:
	di_235 = di_235 + 0x0001
	cx_239 = cx_239 - 0x0001
	branch Mem232[ds:di_235:byte] == 0x00 l0800_04E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E6:
	word16 di_253 = di_235 - 0x0001
	word16 cx_250 = ~cx_239
	bool Z_264 = SLICE(cond(di_253), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04ED:
	branch cx_250 == 0x0000 l0800_04EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04ED_2:
	Z_264 = SLICE(cond(0x2E - Mem232[ds:di_253:byte]), bool, 2) (alias)
	di_253 = di_253 - 0x0001
	cx_250 = cx_250 - 0x0001
	branch Mem232[ds:di_253:byte] == 0x2E l0800_04ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04EF:
	branch Z_264 l0800_04F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F1:
	di_253 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F8:
	word16 di_275 = di_253 + 0x0001
	word16 di_301 = 0x4348
	word16 cx_305 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0507:
	branch cx_305 == 0x0000 l0800_0509
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0507_1:
	di_301 = di_301 + 0x0001
	cx_305 = cx_305 - 0x0001
	branch Mem300[ds:di_301:byte] == 0x00 l0800_0507
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0509:
	cx_143 = ~cx_305
	word16 di_319 = di_301 - cx_143
	bool Z_329 = SLICE(cond(di_319), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0510:
	branch cx_143 == 0x0000 l0800_0512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0510_2:
	Z_329 = SLICE(cond(0x5C - Mem300[ds:di_319:byte]), bool, 2) (alias)
	di_319 = di_319 + 0x0001
	cx_143 = cx_143 - 0x0001
	branch Mem300[ds:di_319:byte] == 0x5C l0800_0510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0512:
	branch Z_329 l0800_051B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0514:
	di_319 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_051B:
	branch di_275 >u di_319 - 0x0001 l0800_0538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0523:
	word16 di_366 = 0x4348
	word16 si_367 = 0x0833
	word16 cx_368 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0530:
	branch cx_368 == 0x0000 l0800_0532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0530_1:
	di_366 = di_366 + 0x0001
	cx_368 = cx_368 - 0x0001
	branch Mem363[ds:di_366:byte] == 0x00 l0800_0530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0532:
	word16 di_382 = di_366 - 0x0001
	cx_143 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0536:
	branch cx_143 == 0x0000 l0800_0538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0538:
	Mem388[ds:0x2A19:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0536_2:
	Mem394[ds:di_382:byte] = Mem390[ds:si_367:byte]
	si_367 = si_367 + 0x0001
	di_382 = di_382 + 0x0001
	cx_143 = cx_143 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_049D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_053E:
	return cx_143
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0402_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0541(byte ch, word16 di, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[8..15] di:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_0541_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0541:
	word16 bp_1172 = fp - 2
	word16 ax_17 = Mem15[ds:0x2A27:word16]
	branch ax_17 != Mem15[ds:0x269A:word16] l0800_0555
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0555:
	segptr32 ptrLoc06_1711
	branch Mem15[Mem15[ds:(word16) Mem15[ds:0x269C:segptr32] + (ax_17 << 0x0002):segptr32]:byte] != 0x2D l0800_056B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_056B:
	branch Mem15[Mem15[ds:(word16) Mem15[ds:0x269C:segptr32] + (Mem15[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0584:
	bpOut = bp
	dsOut = ds
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0581:
	ptrLoc06_1711 = ptrLoc06 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0568:
	ptrLoc06_1711 = ptrLoc06 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_086D:
	branch Mem48[Mem48[ds:(word16) Mem48[ds:0x269C:segptr32] + (Mem48[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2D l0800_0886
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0886:
	branch Mem48[Mem48[ds:(word16) Mem48[ds:0x269C:segptr32] + (Mem48[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_089F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_089F:
	word16 ax_71 = Mem48[ds:0x2A21:word16]
	branch ax_71 == 0x0001 l0800_08AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08AE:
	word16 di_1739 = 0x4271
	word16 si_107 = 0x085B
	word16 cx_82 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BB:
	branch cx_82 == 0x0000 l0800_08BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BB_1:
	di_1739 = di_1739 + 0x0001
	cx_82 = cx_82 - 0x0001
	branch Mem77[ds:di_1739:byte] == 0x00 l0800_08BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BD:
	word16 di_110 = di_1739 - 0x0001
	word16 cx_114 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C1:
	branch cx_114 == 0x0000 l0800_08C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C3:
	branch Mem101[ds:0x2E31:word16] <=u 0x8000 l0800_08D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08CB:
	Mem104[ds:0x2E31:word16] = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08D1:
	Mem106[ds:0x2E2F:word16] = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C1_2:
	Mem111[ds:di_110:byte] = Mem101[ds:si_107:byte]
	si_107 = si_107 + 0x0001
	di_110 = di_110 + 0x0001
	cx_114 = cx_114 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08A7:
	branch ax_71 == 0x0002 l0800_08D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08D9:
	word16 di_121 = 0x4271
	word16 si_122 = 0x085D
	word16 cx_123 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E6:
	branch cx_123 == 0x0000 l0800_08E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E6_1:
	di_121 = di_121 + 0x0001
	cx_123 = cx_123 - 0x0001
	branch Mem118[ds:di_121:byte] == 0x00 l0800_08E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E8:
	word16 di_137 = di_121 - 0x0001
	word16 cx_139 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EC:
	branch cx_139 == 0x0000 l0800_08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EE:
	branch Mem142[ds:0x2E31:word16] <=u 0x1000 l0800_08FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08F6:
	Mem145[ds:0x2E31:word16] = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08FC:
	Mem147[ds:0x2E2F:word16] = 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EC_2:
	Mem152[ds:di_137:byte] = Mem142[ds:si_122:byte]
	si_122 = si_122 + 0x0001
	di_137 = di_137 + 0x0001
	cx_139 = cx_139 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08AC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0902:
	branch Mem157[ds:0x2A23:word16] != 0x0002 l0800_0911
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0909:
	Mem163[ds:0x2A1D:word16] = 0x0000
	Mem164[ds:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0911:
	branch Mem166[ds:0x2E4F:word16] == 0x0000 l0800_092D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0918:
	word16 di_1741 = 0x4271
	word16 si_194 = 0x0653
	word16 cx_195 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0925:
	branch cx_195 == 0x0000 l0800_0927
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0925_1:
	di_1741 = di_1741 + 0x0001
	cx_195 = cx_195 - 0x0001
	branch Mem190[ds:di_1741:byte] == 0x00 l0800_0925
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0927:
	word16 di_209 = di_1741 - 0x0001
	word16 cx_211 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092B:
	branch cx_211 == 0x0000 l0800_092D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092D:
	branch Mem215[ds:0x2A1D:word16] == 0x0000 l0800_0949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0934:
	word16 di_1742 = 0x4271
	word16 si_228 = 0x085F
	word16 cx_229 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0941:
	branch cx_229 == 0x0000 l0800_0943
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0941_1:
	di_1742 = di_1742 + 0x0001
	cx_229 = cx_229 - 0x0001
	branch Mem224[ds:di_1742:byte] == 0x00 l0800_0941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0943:
	word16 di_243 = di_1742 - 0x0001
	word16 cx_245 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0947:
	branch cx_245 == 0x0000 l0800_0949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0949:
	word16 di_1743 = 0x4271
	word16 si_258 = 0x0861
	word16 cx_259 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0956:
	branch cx_259 == 0x0000 l0800_0958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0956_1:
	di_1743 = di_1743 + 0x0001
	cx_259 = cx_259 - 0x0001
	branch Mem254[ds:di_1743:byte] == 0x00 l0800_0956
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0958:
	word16 di_273 = di_1743 - 0x0001
	word16 cx_275 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095C:
	branch cx_275 == 0x0000 l0800_095E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095E:
	branch Mem278[ds:0x2A25:word16] != 0x0000 l0800_0987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0965:
	branch Mem278[Mem278[ds:(Mem278[ds:0x2A23:word16] << 0x0002) + 0x0545:segptr32]:byte] == 0x00 l0800_0987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0977:
	dx = fn0800_09A3(out bp_1172, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095C_2:
	Mem322[ds:di_273:byte] = Mem278[ds:si_258:byte]
	si_258 = si_258 + 0x0001
	di_273 = di_273 + 0x0001
	cx_275 = cx_275 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0947_2:
	Mem331[ds:di_243:byte] = Mem327[ds:si_228:byte]
	si_228 = si_228 + 0x0001
	di_243 = di_243 + 0x0001
	cx_245 = cx_245 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092B_2:
	Mem339[ds:di_209:byte] = Mem216[ds:si_194:byte]
	si_194 = si_194 + 0x0001
	di_209 = di_209 + 0x0001
	cx_211 = cx_211 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_089C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0883:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_058A:
	word16 ax_345 = Mem48[ds:0x2A27:word16]
	byte cl_368
	selector es_370
	word16 ax_366 = fn0800_0C29(ds, SEQ(ds, 0x0838), SLICE(DPB(ax_345 << 0x0002, Mem48[Mem48[ds:(word16) Mem48[ds:0x269C:segptr32] + (ax_345 << 0x0002):segptr32] + 0x0001:byte], 0), byte, 0), out cl_368, out dx, out bx_1719, out es_370)
	cx = DPB(cx, cl_368, 0) (alias)
	word16 si_376 = ax_366
	branch ax_366 < 0x000B l0800_05CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05B1:
	ptr32 es_bx_382 = Mem365[ds:0x269C:segptr32]
	selector es_386 = SLICE(es_bx_382, selector, 16)
	word16 bx_384 = (word16) es_bx_382 + (Mem365[ds:0x2A27:word16] << 0x0002)
	fn0800_0D24(ds, 0x0002, SEQ(Mem365[es_386:bx_384 + 0x0002:word16], Mem389[es_386:bx_384:word16]), out cx, out dx, out bx_1720, out si_376, out di, out es_370, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05CF:
	segptr32 ptrLoc06_1353
	branch si_376 < 0x0006 l0800_05D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05D7:
	ptr32 es_bx_419 = Mem415[ds:0x269C:segptr32]
	selector es_423 = SLICE(es_bx_419, selector, 16)
	word16 bx_421 = (word16) es_bx_419 + (Mem415[ds:0x2A27:word16] << 0x0002)
	branch fn0800_BFC7(SEQ(Mem415[es_423:bx_421 + 0x0002:word16], Mem428[es_423:bx_421:word16]), out cx) != 0x0002 l0800_0622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0622:
	ptr32 es_bx_446 = Mem431[ds:0x269C:segptr32]
	selector es_449 = SLICE(es_bx_446, selector, 16)
	word16 bx_448 = (word16) es_bx_446 + (Mem431[ds:0x2A27:word16] << 0x0002)
	word16 dx_451 = Mem431[es_449:bx_448:word16]
	dx = dx_451 + 0x0002
	ptrLoc06_1353 = SEQ(Mem431[es_449:bx_448 + 0x0002:word16], dx_451 + 0x0002) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05F6:
	Mem460[ds:0x2A27:word16] = Mem431[ds:0x2A27:word16] + 0x0001
	branch Mem460[ds:0x2A27:word16] != Mem460[ds:0x269A:word16] l0800_0606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0603:
	si_376 = fn0800_0DCE(cx, dx, bx_421, ds, out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0606:
	ptr32 es_bx_479 = Mem460[ds:0x269C:segptr32]
	selector es_483 = SLICE(es_bx_479, selector, 16)
	word16 bx_481 = (word16) es_bx_479 + (Mem460[ds:0x2A27:word16] << 0x0002)
	dx = Mem460[es_483:bx_481:word16]
	ptrLoc06_1353 = SEQ(Mem460[es_483:bx_481 + 0x0002:word16], dx) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_063F:
	es_370 = SLICE(ptrLoc06_1353, selector, 16) (alias)
	branch (int16) Mem492[ptrLoc06_1353:byte] != 0x0000 l0800_0659
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_064A:
	fn0800_0D24(ds, 0x0002, SEQ(ds, 0x05DC), out cx, out dx, out bx_1738, out si_376, out di, out es_370, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05D4:
	ptrLoc06_1353 = ptrLoc06_1711 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0659:
	word16 wLoc06_1370 = SLICE(ptrLoc06_1353, word16, 0)
	word16 wLoc04_1364 = SLICE(ptrLoc06_1353, word16, 16)
	branch si_376 <=u 0x000A l0800_0663
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0663:
	word16 bx_534 = si_376 << 0x0001
	switch (bx_534) { l0800_069D l0800_0716 l0800_0765 l0800_080A l0800_07A9 l0800_074C l0800_066A l0800_0682 l0800_0679 l0800_068B l0800_0694 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0694:
	Mem537[ds:0x2A15:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_068B:
	Mem538[ds:0x2A17:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0679:
	Mem539[ds:0x2A1D:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0682:
	Mem540[ds:0x2A1B:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_066A:
	Mem541[ds:0x2A1F:word16] = 0x0001
	Mem542[ds:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_074C:
	cx = (word16) fn0800_BF18(cx, dx, bx_534, si_376, di, es_370, ds, 0x0853, ds, out dx, out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07A9:
	word16 di_1744 = wLoc06_1370
	word16 cx_608 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BB:
	branch cx_608 == 0x0000 l0800_07BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BB_1:
	di_1744 = di_1744 + 0x0001
	cx_608 = cx_608 - 0x0001
	branch Mem603[wLoc04_1364:di_1744:byte] == 0x00 l0800_07BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BD:
	word16 cx_619 = ~cx_608
	word16 cx_622 = cx_619 >>u 0x0001
	word16 si_624 = di_1744 - cx_619
	word16 di_630 = 0x42E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CC:
	branch cx_622 == 0x0000 l0800_07CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CE:
	word16 cx_643 = cx_622 * 0x0002 + (cx_619 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D0:
	branch cx_643 == 0x0000 l0800_07D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D2:
	dx = fn0800_0C6C(ds, SEQ(ds, 0x42E3))
	di = 0x42E3
	word16 cx_673 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07E8:
	branch cx_673 == 0x0000 l0800_07EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07E8_1:
	di = di + 0x0001
	cx_673 = cx_673 - 0x0001
	branch Mem666[ds:di:byte] == 0x00 l0800_07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07EA:
	word16 cx_684 = ~cx_673
	cx = cx_684 - 0x0002
	branch Mem666[ds:cx_684 + 0x42E1:byte] == 0x5C l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07F7:
	word16 di_1746 = 0x42E3
	word16 si_694 = 0x0859
	word16 cx_695 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0800:
	branch cx_695 == 0x0000 l0800_0802
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0800_2:
	di_1746 = di_1746 + 0x0001
	cx_695 = cx_695 - 0x0001
	branch Mem666[ds:di_1746:byte] == 0x00 l0800_0800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0802:
	di = di_1746 - 0x0001
	cx = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0806:
	branch cx == 0x0000 l0800_0808
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0808:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0806_3:
	Mem716[ds:di:byte] = Mem712[ds:si_694:byte]
	si_694 = si_694 + 0x0001
	di = di + 0x0001
	cx = cx - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D0_1:
	Mem725[ds:di_630:byte] = Mem648[wLoc04_1364:si_624:byte]
	si_624 = si_624 + 0x0001
	di_630 = di_630 + 0x0001
	cx_643 = cx_643 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CC_2:
	Mem735[ds:di_630:word16] = Mem731[wLoc04_1364:si_624:word16]
	si_624 = si_624 + 0x0002
	di_630 = di_630 + 0x0002
	cx_622 = cx_622 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_080A:
	word16 di_1747 = wLoc06_1370
	word16 cx_753 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081C:
	branch cx_753 == 0x0000 l0800_081E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081C_1:
	di_1747 = di_1747 + 0x0001
	cx_753 = cx_753 - 0x0001
	branch Mem748[wLoc04_1364:di_1747:byte] == 0x00 l0800_081C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081E:
	word16 cx_764 = ~cx_753
	word16 cx_767 = cx_764 >>u 0x0001
	word16 si_769 = di_1747 - cx_764
	word16 di_775 = 0x427E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082D:
	branch cx_767 == 0x0000 l0800_082F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082F:
	word16 cx_788 = cx_767 * 0x0002 + (cx_764 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0831:
	branch cx_788 == 0x0000 l0800_0833
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0833:
	dx = fn0800_0C6C(ds, SEQ(ds, 0x427E))
	di = 0x427E
	word16 cx_818 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0849:
	branch cx_818 == 0x0000 l0800_084B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0849_1:
	di = di + 0x0001
	cx_818 = cx_818 - 0x0001
	branch Mem811[ds:di:byte] == 0x00 l0800_0849
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_084B:
	word16 cx_829 = ~cx_818
	cx = cx_829 - 0x0002
	branch Mem811[ds:cx_829 + 0x427C:byte] == 0x5C l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0858:
	word16 di_1749 = 0x427E
	word16 si_839 = 0x0859
	word16 cx_840 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0861:
	branch cx_840 == 0x0000 l0800_0863
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0861_2:
	di_1749 = di_1749 + 0x0001
	cx_840 = cx_840 - 0x0001
	branch Mem811[ds:di_1749:byte] == 0x00 l0800_0861
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0863:
	di = di_1749 - 0x0001
	cx = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0867:
	branch cx == 0x0000 l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0867_3:
	Mem861[ds:di:byte] = Mem857[ds:si_839:byte]
	si_839 = si_839 + 0x0001
	di = di + 0x0001
	cx = cx - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0831_1:
	Mem870[ds:di_775:byte] = Mem793[wLoc04_1364:si_769:byte]
	si_769 = si_769 + 0x0001
	di_775 = di_775 + 0x0001
	cx_788 = cx_788 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082D_2:
	Mem880[ds:di_775:word16] = Mem876[wLoc04_1364:si_769:word16]
	si_769 = si_769 + 0x0002
	di_775 = di_775 + 0x0002
	cx_767 = cx_767 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0765:
	cx = (word16) fn0800_BF18(cx, dx, bx_534, si_376, di, es_370, ds, 0x0856, ds, out dx, out di)
	branch Mem899[ds:0x2A21:word16] > 0x0002 l0800_0796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0782:
	branch Mem899[ds:0x2A21:word16] == 0x0000 l0800_078C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_078C:
	branch Mem899[ds:0x2A25:word16] == 0x0000 l0800_0796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0796:
	fn0800_0D24(ds, 0x0005, ptrLoc06_1353, out cx, out dx, out bx_1721, out si_1722, out di, out es_1723, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0793:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0789:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0716:
	cx = (word16) fn0800_BF18(cx, dx, bx_534, si_376, di, es_370, ds, 0x084F, ds, out dx, out di)
	branch Mem964[ds:0x2E4F:word16] != 0x0000 l0800_0743
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0733:
	fn0800_0D24(ds, 0x0004, ptrLoc06_1353, out cx, out dx, out bx_1724, out si_1725, out di, out es_1726, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0743:
	Mem1006[ds:0x2A1F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_069D:
	branch Mem1007[ds:0x2A19:word16] == 0x0000 l0800_06A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06A7:
	selector es_1323 = SLICE(ptrLoc06_1353, selector, 16)
	word16 di_1018 = (word16) ptrLoc06_1353
	word16 ax_1011 = 0x0000
	word16 cx_1014 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06AF:
	ax_1011 = DPB(ax_1011, 0x00, 0) (alias)
	ax_1011 = DPB(ax_1011, 0x00, 0) (alias)
	branch cx_1014 == 0x0000 l0800_06B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06AF_1:
	di_1018 = di_1750 + 0x0001
	cx_1014 = cx_1014 - 0x0001
	di_1750 = di_1018
	branch Mem1007[es_1323:di_1750:byte] == 0x00 l0800_06AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B1:
	word16 cx_1025 = ~cx_1014
	word16 cx_1026 = cx_1025 - 0x0001
	branch cx_1025 <=u 0x0002 l0800_06C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B9:
	ax_1011 = fn0800_0D24(ds, 0x0003, ptrLoc06_1353, out cx_1026, out dx_1729, out bx_1730, out si_1731, out di_1732, out es_1733, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06C9:
	byte cl_1086
	word16 ax_1084 = fn0800_0C29(ds, SEQ(ds, 0x0844), SLICE(DPB(ax_1011, Mem1064[ptrLoc06_1353:byte], 0), byte, 0), out cl_1086, out dx, out bx_1727, out es_1728)
	Mem1094[ds:0x2A23:word16] = ax_1084
	cx = DPB(cx_1026, cl_1086, 0) (alias)
	branch ax_1084 < 0x0006 l0800_06F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06E3:
	fn0800_0D24(ds, 0x0003, ptrLoc06_1353, out cx, out dx, out bx_1734, out si_1735, out di_1736, out es_1737, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06F3:
	fn0800_BEA2(cx, dx, ds, SEQ(ds, 0x4271), SEQ(ds, 0x084B), out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06A4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0660:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0869:
	Mem1164[ds:0x2A27:word16] = Mem1162[ds:0x2A27:word16] + 0x0001
	ptrLoc06_1711 = ptrLoc06_1353 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0552:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0987:
	bpOut = Mem1168[ss:bp_1172:word16]
	dsOut = ds
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0541_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_09A3(ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_09A3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09A3:
	word16 bp_55
	selector ds_59
	word16 dx_60
	word16 ax_54 = fn0800_4311(out dx_60, out bp_55, out si_431, out di_432, out ds_59)
	Mem70[ss:bp_55 - 0x0002:word16] = dx_60
	Mem71[ss:bp_55 - 0x0004:word16] = ax_54
	Mem72[ss:bp_55 - 0x0006:word16] = dx_60
	Mem73[ss:bp_55 - 0x0008:word16] = ax_54
	word16 sp_63 = <invalid>
	Mem76[ss:sp_63 + 0x0002:word16] = Mem73[ss:bp_55 - 0x0002:word16]
	Mem78[ss:sp_63:word16] = ax_54
	Mem80[ss:sp_63 - 2:word16] = ds_59
	Mem83[ss:sp_63 - 4:word16] = 0x0A6E
	selector ds_107
	word16 bp_85 = fn0800_867A(Mem83[ss:sp_63 - 4:word16], Mem83[ss:sp_63 - 2:selector], Mem83[ss:sp_63:word16], Mem83[ss:sp_63 + 2:selector], out ds_107)
	word16 sp_93 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A4F:
	word16 dx_271
	word16 si_104 = Mem103[ss:bp_85 + 0x0004:word16]
	Mem108[ss:sp_93 + 0x0006:word16] = ds_107
	ptr32 es_di_110 = Mem108[ss:bp_85 - 0x0008:segptr32]
	selector ds_109 = Mem108[ss:bp_85 + 0x0006:selector]
	selector es_389 = SLICE(es_di_110, selector, 16)
	word16 di_118 = (word16) es_di_110
	word16 ax_111 = 0x0000
	word16 cx_114 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5E:
	ax_111 = DPB(ax_111, 0x00, 0) (alias)
	ax_111 = DPB(ax_111, 0x00, 0) (alias)
	branch cx_114 == 0x0000 l0800_0A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5E_1:
	di_118 = di_118 + 0x0001
	cx_114 = cx_114 - 0x0001
	branch Mem108[es_389:di_118:byte] == 0x00 l0800_0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A60:
	word16 cx_125 = ~cx_114
	word16 di_127 = di_118 - cx_125
	bool Z_139 = SLICE(cond(di_127), bool, 2)
	di_134 = di_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A64:
	word16 di_134
	branch cx_125 == 0x0000 l0800_0A66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A64_2:
	Z_139 = SLICE(cond(Mem108[ds_109:si_436:byte] - Mem108[es_389:di_437:byte]), bool, 2) (alias)
	si_104 = si_436 + 0x0001
	di_134 = di_437 + 0x0001
	cx_125 = cx_125 - 0x0001
	si_436 = si_104
	di_437 = di_134
	branch Mem108[ds_109:si_436:byte] != Mem108[es_389:di_437:byte] l0800_0A64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A66:
	branch Z_139 l0800_0A6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A68:
	word16 ax_147 = 0x0000 - (di_127 <u 0x0000)
	ax_111 = ax_147 - 0xFFFF - (ax_147 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A6D:
	ds_107 = Mem108[ss:sp_93 + 0x0006:selector]
	branch ax_111 != 0x0000 l0800_09FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09FF:
	ptr32 es_di_182 = Mem108[ss:bp_85 - 0x0008:segptr32]
	selector es_398 = SLICE(es_di_182, selector, 16)
	word16 di_190 = (word16) es_di_182
	word16 cx_186 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A07:
	branch cx_186 == 0x0000 l0800_0A09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A07_1:
	di_190 = di_438 + 0x0001
	cx_186 = cx_186 - 0x0001
	di_438 = di_190
	branch Mem108[es_398:di_438:byte] == 0x00 l0800_0A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A09:
	word16 di_212 = Mem108[ss:bp_85 - 0x0008:word16]
	Mem216[ss:sp_93 + 0x0006:word16] = (int16) Mem108[es_398:Mem108[ss:bp_85 - 0x0008:word16] + (~cx_186 - 0x0001) + 0x0001:byte] << 0x08
	word16 cx_220 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A25:
	branch cx_220 == 0x0000 l0800_0A27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A25_2:
	di_212 = di_439 + 0x0001
	cx_220 = cx_220 - 0x0001
	di_439 = di_212
	branch Mem216[es_398:di_439:byte] == 0x00 l0800_0A25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A27:
	word16 ax_239 = Mem216[ss:bp_85 - 0x0008:word16] + (~cx_220 - 0x0001)
	word16 dx_250 = Mem216[ss:sp_93 + 0x0006:word16] + DPB(DPB(ax_239, Mem216[es_398:ax_239 + 0x0002:byte], 0), 0x00, 8)
	word16 di_251 = Mem216[ss:bp_85 - 0x0008:word16]
	word16 cx_255 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A42:
	branch cx_255 == 0x0000 l0800_0A44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A42_3:
	di_251 = di_440 + 0x0001
	cx_255 = cx_255 - 0x0001
	di_440 = di_251
	branch Mem216[es_398:di_440:byte] == 0x00 l0800_0A42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A44:
	word16 dx_270 = dx_250 + (~cx_255 - 0x0001)
	Mem278[ss:bp_85 - 0x0008:word16] = Mem216[ss:bp_85 - 0x0008:word16] + (dx_270 + 0x0003)
	dx_271 = dx_270 + 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A72:
	ptr32 es_di_280 = Mem108[ss:bp_85 - 0x0008:segptr32]
	selector es_403 = SLICE(es_di_280, selector, 16)
	word16 di_288 = (word16) es_di_280
	word16 cx_284 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7A:
	branch cx_284 == 0x0000 l0800_0A7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7A_1:
	di_288 = di_441 + 0x0001
	cx_284 = cx_284 - 0x0001
	di_441 = di_288
	branch Mem108[es_403:di_441:byte] == 0x00 l0800_0A7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7C:
	Mem304[ss:bp_85 - 0x0008:word16] = Mem108[ss:bp_85 - 0x0008:word16] + ~cx_284
	ptr32 es_bx_305 = Mem304[ss:bp_85 - 0x0008:segptr32]
	Mem330[ss:sp_93 + 0x0006:word16] = ((int16) Mem304[es_bx_305:byte] << 0x08) + DPB(DPB(dx_271, Mem304[es_bx_305 + 0x0001:byte], 0), 0x00, 8) + 0x0002
	Mem333[ss:sp_93 + 0x0004:word16] = Mem330[ss:bp_85 - 0x0006:word16]
	Mem335[ss:sp_93 + 0x0002:word16] = (word16) es_bx_305
	Mem338[ss:sp_93:word16] = Mem335[ss:bp_85 + 0x000A:word16]
	Mem341[ss:sp_93 - 0x0002:word16] = Mem338[ss:bp_85 + 0x0008:word16]
	fn0800_B0F3(Mem341[ss:sp_93 - 0x0002:word32], Mem341[ss:sp_93 + 0x0002:word32], Mem341[ss:sp_93 + 0x0006:word16])
	Mem356[ss:sp_93 + 0x0006:word16] = Mem341[ss:bp_85 - 0x0002:word16]
	Mem359[ss:sp_93 + 0x0004:word16] = Mem356[ss:bp_85 - 0x0004:word16]
	selector ds_365
	word16 dx_366
	fn0800_4346(ds_107, Mem359[ss:sp_93 + 0x0006:word16], out cx_433, out dx_366, out bx_434, out ds_365)
	bpOut = Mem359[ss:bp_85:word16]
	dsOut = ds_365
	return dx_366
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_09A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0ABC(word16 di, selector ds, word16 wArg02, word32 dwArg04, ptr16 & dxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: cx di dx
// Trashed: SCZDO ax bx cx di dx es Top
// Preserved: bp si sp
fn0800_0ABC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ABC:
	fn0800_35A3(wArg02, di, fp - 0x0010, ss, dwArg04)
	word16 ax_52 = fn0800_0B79(SEQ(Mem45[ds:0x2A09:word16], Mem48[ds:0x2A07:word16]), SEQ(Mem25[ds:0x2A05:word16], Mem42[ds:0x2A03:word16]))
	word16 dx_74 = (uint16) ((uint32) (uint16) ax_52 % 0x0064)
	word16 si_108
	fn0800_B2EF(ax_52, dx_74, 0x0064, ds, SEQ(ds, 0x0866), out si_108, out di_267)
	word16 bx_124 = 0x0064
	branch Mem105[ds:0x2A25:word16] == 0x0002 l0800_0B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B2A:
	branch si_108 == 0x0000 l0800_0B47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B2E:
	fn0800_B2EF(ax_52, dx_74, si_108 << 0x0002, ds, SEQ(ds, 0x0889), out si_268, out di_269)
	bx_124 = si_108 << 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B47:
	word16 di_165
	fn0800_B2EF(ax_52, dx_74, bx_124, ds, SEQ(ds, 0x0827), out si_270, out di_165)
	word16 ax_173 = Mem160[ds:0x2A09:word16]
	word16 dx_174 = Mem160[ds:0x2A07:word16]
	Mem176[ds:0x29F3:word16] = v30_175
	ui32 v31_v30_200 = SEQ(Mem176[ds:0x29F5:word16], Mem160[ds:0x29F3:word16]) + SEQ(ax_173, dx_174)
	Mem180[ds:0x29F5:word16] = SLICE(v31_v30_200, word16, 16)
	word16 ax_181 = Mem180[ds:0x2A05:word16]
	word16 dx_182 = Mem180[ds:0x2A03:word16]
	Mem184[ds:0x29EF:word16] = v32_183
	ui32 v33_v32_202 = SEQ(Mem184[ds:0x29F1:word16], Mem180[ds:0x29EF:word16]) + SEQ(ax_181, dx_182)
	Mem188[ds:0x29F1:word16] = SLICE(v33_v32_202, word16, 16)
	Mem191[ds:0x2A13:word16] = Mem188[ds:0x2A13:word16] + 0x0001
	dxOut = dx_182
	diOut = di_165
	word16 v30_175 = (word16) v31_v30_200
	word16 v32_183 = (word16) v33_v32_202
	return ax_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0ABC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0B79(word32 dwArg02, ui32 dwArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0B79_entry:
	word16 wArg02 = SLICE(dwArg02, word16, 0)
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg06 = SLICE(dwArg06, word16, 0)
	word16 wArg08 = SLICE(dwArg06, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B79:
	word16 sp_4 = fp - 2
	branch (wArg02 | wArg04) == 0x0000 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B84:
	branch (wArg06 | wArg08) == 0x0000 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B8C:
	word32 dwArg02_204 = dwArg02
	ui32 dwArg06_208 = dwArg06
	branch wArg04 >u wArg08 l0800_0BCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B99:
	dwArg02_204 = dwArg02 (alias)
	dwArg06_208 = dwArg06 (alias)
	branch wArg02 >u wArg06 l0800_0BCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BCE:
	ui32 ax_dx_148 = dwArg02_204 - dwArg06_208
	word16 wArg02_157 = SLICE(dwArg02_204, word16, 0)
	word16 wArg04_156 = SLICE(dwArg02_204, word16, 16)
	word16 wArg08_166 = SLICE(dwArg06_208, word16, 16)
	word16 wArg06_168 = SLICE(dwArg06_208, word16, 0)
	word16 dx_31 = (word16) ax_dx_148
	word16 ax_34 = SLICE(ax_dx_148, word16, 16)
	branch ax_34 >u 0x0006 l0800_0BA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BDF:
	branch ax_34 != 0x0006 l0800_0BE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BE1:
	branch dx_31 >u 0x8DB8 l0800_0BA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BA2:
	word16 sp_46 = sp_4 - 2
	Mem48[ss:sp_46:word16] = 0x0000
	Mem50[ss:sp_46 - 2:word16] = 0x000A
	Mem54[ss:sp_46 - 4:word16] = wArg04_156
	Mem57[ss:sp_46 - 6:word16] = wArg02_157
	word16 dx_61
	word16 ax_58 = fn0800_8BC2(Mem57[ss:sp_46 - 6:word32], Mem57[ss:sp_46 - 2:word16], Mem57[ss:sp_46:word16], out cx_214, out dx_61, out bx_215)
	word16 sp_62 = <invalid>
	Mem75[ss:sp_62 + 0x0006:word16] = 0x0000
	Mem77[ss:sp_62 + 0x0004:word16] = 0x000A
	Mem80[ss:sp_62 + 0x0002:word16] = wArg08_166
	Mem83[ss:sp_62:word16] = wArg06_168
	word16 sp_88 = <invalid>
	sp_4 = sp_88 + 0x0008
	dwArg02_204 = SEQ(dx_61, ax_58) (alias)
	word16 dx_87
	dwArg06_208 = SEQ(dx_87, fn0800_8BC2(Mem83[ss:sp_62:word32], Mem83[ss:sp_62 + 4:word16], Mem83[ss:sp_62 + 6:word16], out cx_216, out dx_87, out bx_217)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BE7:
	word16 sp_101 = sp_4 - 2
	Mem102[ss:sp_101:word16] = wArg04_156
	Mem105[ss:sp_101 - 2:word16] = wArg02_157
	ui32 cx_bx_150 = dwArg02_204 - dwArg06_208
	word16 dx_117
	word16 ax_116 = fn0800_8F18(0x2710, SLICE(cx_bx_150, word16, 16), 0x0000, (word16) cx_bx_150, out ch_218, out dx_117)
	Mem124[ss:sp_101 - 4:word16] = dx_117
	Mem126[ss:sp_101 - 6:word16] = ax_116
	return fn0800_8BC2(Mem126[ss:sp_101 - 6:word32], Mem126[ss:sp_101 - 2:word16], Mem126[ss:sp_101:word16], out cx_219, out dx_220, out bx_221)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B9E:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0B79_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C08(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_0C08_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C08:
	word16 si_12 = wArg02
	word16 cx_13 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C15:
	word16 ax_21 = (uint16) ((uint32) (uint16) si_12 /u 0x0002)
	si_12 = ax_21
	branch ax_21 != 0x0000 l0800_0C14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C14:
	cx_13 = cx_13 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C24:
	return cx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C08_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C29(selector ds, word32 dwArg02, byte bArg06, ptr16 & clOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..7]
// LiveOut: ax bx cl dx es
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp sp
fn0800_0C29_entry:
	word16 wArg02 = SLICE(dwArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C29:
	byte al_26 = (byte) (word16) fn0800_97CC(ds, (int16) bArg06, out dx_91)
	segptr32 ptrLoc06_66 = dwArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C4F:
	word16 wLoc06_67 = SLICE(ptrLoc06_66, word16, 0)
	word16 wLoc04_75 = SLICE(ptrLoc06_66, word16, 16)
	selector es_36 = SLICE(ptrLoc06_66, selector, 16)
	word16 bx_37 = (word16) ptrLoc06_66
	branch Mem34[ptrLoc06_66:byte] == 0x00 l0800_0C5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C58:
	branch Mem34[ptrLoc06_66:byte] != al_26 l0800_0C4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C4C:
	ptrLoc06_66 = SEQ(wLoc04_75, wLoc06_67 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C5D:
	clOut = al_26
	word16 ax_51 = wLoc06_67 - wArg02
	dxOut = 0x0000 - (ax_51 <u 0x0000)
	bxOut = bx_37
	esOut = es_36
	return ax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C29_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: dx
// Trashed: SCZO ax bx dx es Top
// Preserved: bp sp
fn0800_0C6C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C6C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C88:
	word16 wArg02_49 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_53 = SLICE(ptrArg02, word16, 16)
	branch Mem11[ptrArg02:byte] != 0x00 l0800_0C71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C71:
	Mem39[ptrArg02:byte] = (byte) (word16) fn0800_97CC(ds, (int16) Mem11[ptrArg02:byte], out dx)
	ptrArg02 = SEQ(wArg04_53, wArg02_49 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C91:
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C6C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C93(word16 si, word16 di, selector ds, word32 dwArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_0C93_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C93:
	word16 bx_29
	word16 dx_162 = fn0800_3509(si, di, fp - 0x0068, ss, dwArg02, out bx_29)
	word16 si_39 = 0x2714
	word16 di_402 = fp - 0x0068
	word16 ax_45 = 0x0000
	word16 cx_48 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB9:
	ax_45 = DPB(ax_45, 0x00, 0) (alias)
	ax_45 = DPB(ax_45, 0x00, 0) (alias)
	branch cx_48 == 0x0000 l0800_0CBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB9_1:
	di_402 = di_402 + 0x0001
	cx_48 = cx_48 - 0x0001
	branch Mem41[ss:di_402:byte] == 0x00 l0800_0CB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBB:
	word16 cx_130 = ~cx_48
	word16 di_61 = di_402 - cx_130
	bool Z_73 = SLICE(cond(di_61), bool, 2)
	di_68 = di_61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBF:
	word16 di_68
	branch cx_130 == 0x0000 l0800_0CC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBF_2:
	Z_73 = SLICE(cond(Mem41[ds:si_403:byte] - Mem41[ss:di_404:byte]), bool, 2) (alias)
	si_39 = si_403 + 0x0001
	di_68 = di_404 + 0x0001
	cx_130 = cx_130 - 0x0001
	si_403 = si_39
	di_404 = di_68
	branch Mem41[ds:si_403:byte] != Mem41[ss:di_404:byte] l0800_0CBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC1:
	branch Z_73 l0800_0CC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC3:
	word16 ax_81 = 0x0000 - (di_61 <u 0x0000)
	ax_45 = ax_81 - 0xFFFF - (ax_81 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC8:
	branch ax_45 == 0x0000 l0800_0D0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CCC:
	fn0800_B2EF(cx_130, dx_162, bx_29, ds, SEQ(ds, 0x088F), out si_400, out di_401)
	word16 di_160 = fp - 0x0068
	dx_162 = ds
	word16 cx_172 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF5:
	branch cx_172 == 0x0000 l0800_0CF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF5_1:
	di_160 = di_160 + 0x0001
	cx_172 = cx_172 - 0x0001
	branch Mem168[ss:di_160:byte] == 0x00 l0800_0CF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF7:
	word16 cx_183 = ~cx_172
	word16 cx_186 = cx_183 >>u 0x0001
	word16 si_188 = di_160 - cx_183
	word16 di_194 = 0x2714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D06:
	branch cx_186 == 0x0000 l0800_0D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D08:
	cx_130 = cx_186 * 0x0002 + (cx_183 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0A:
	branch cx_130 == 0x0000 l0800_0D0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0D:
	word16 ax_239 = fn0800_B2EF(cx_130, dx_162, bx_29, ds, SEQ(ds, 0x089E), out si_398, out di_399)
	dxOut = dx_162
	return ax_239
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C93_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0A_1:
	Mem260[ds:di_194:byte] = Mem212[ss:si_188:byte]
	si_188 = si_188 + 0x0001
	di_194 = di_194 + 0x0001
	cx_130 = cx_130 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D06_2:
	Mem270[ds:di_194:word16] = Mem266[ss:si_188:word16]
	si_188 = si_188 + 0x0002
	di_194 = di_194 + 0x0002
	cx_186 = cx_186 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0D24(selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax bx cx di ds dx es si
// Trashed: SCZDO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_0D24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D24:
	selector ds_24
	fn0800_0DA9(ds, SEQ(Mem14[ds:0x29DD:word16], Mem17[ds:0x29DB:word16]), SEQ(ds, 0x4477), out dx_211, out ds_24)
	selector ds_47
	fn0800_0DA9(ds_24, SEQ(Mem37[ds_24:0x29D9:word16], Mem40[ds_24:0x29D7:word16]), SEQ(ds_24, 0x4412), out dx_212, out ds_47)
	selector ds_70
	word16 dx_71
	word16 cx_69 = fn0800_0DA9(ds_47, SEQ(Mem60[ds_47:0x29D5:word16], Mem63[ds_47:0x29D3:word16]), SEQ(ds_47, 0x43AD), out dx_71, out ds_70)
	fn0800_B2EF(cx_69, dx_71, wArg02 << 0x0002, ds_70, SEQ(ds_70, 0x08A2), out si_213, out di_214)
	selector es_103 = SLICE(ptrArg04, selector, 16)
	word16 bx_104 = (word16) ptrArg04
	branch Mem92[ptrArg04:byte] == 0x00 l0800_0D92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D83:
	fn0800_B2EF(cx_69, dx_71, bx_104, ds_70, SEQ(ds_70, 0x08A6), out si_215, out di_216)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D92:
	word16 di_139
	word16 si_140
	fn0800_B2EF(cx_69, dx_71, bx_104, ds_70, SEQ(ds_70, 0x0827), out si_140, out di_139)
	word16 dx_152
	word16 ax_151 = fn0800_8B5A(cx_69, dx_71, bx_104, si_140, ds_70, 0x0001, out dx_152)
	cxOut = cx_69
	dxOut = dx_152
	bxOut = bx_104
	siOut = si_140
	diOut = di_139
	esOut = es_103
	dsOut = ds_70
	return ax_151
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0D24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0DA9(selector ds, word32 dwArg02, word32 dwArg06, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_0DA9_entry:
	word16 wArg02 = SLICE(dwArg02, word16, 0)
	word16 wArg04 = SLICE(dwArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DA9:
	branch (wArg02 | wArg04) == 0x0000 l0800_0DCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DB4:
	dx = fn0800_8F7F(fn0800_A614(ds, dwArg02, out cx, out dx_89, out ds), ds, dwArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DCC:
	dxOut = dx
	dsOut = ds
	return cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DA9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0DCE(word16 cx, word16 dx, word16 bx, selector ds, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax di dx si Top
// Preserved: sp
fn0800_0DCE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DCE:
	word16 di_20
	word16 si_21
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x07E8), out si_21, out di_20)
	fn0800_8B5A(cx, dx, bx, si_21, ds, 0x0000, out dx_52)
	diOut = di_20
	return si_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DCE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0DE8(word16 cx, word16 dx, word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds dx
// Trashed: SCZDOP ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_0DE8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DE8:
	word16 bx_18 = Mem17[ds:0x2A25:word16]
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08AC), out si_1003, out di_1004)
	branch Mem32[ds:0x2E4F:word16] == 0x0000 l0800_0E2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E1B:
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08BA), out si_1005, out di_1006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E2A:
	branch Mem65[ds:0x2A1F:word16] == 0x0000 l0800_0E3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E31:
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08CF), out si_1013, out di_1014)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E3C:
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08DC), out si_1007, out di_1008)
	selector ds_117
	word16 dx_118
	fn0800_37BE(fn0800_3678(ds, SEQ(ds, 0x427E), out dx_118, out si_1009, out ds_117), dx_118, ds_117, SEQ(ds_117, 0x4477), out di_1010)
	word32 si_di_995 = <invalid>
	selector ds_163
	word16 cx_161 = fn0800_4234(si_di_995, ds_117, SEQ(ds_117, 0x4477), SEQ(ds_117, 0x08EC), out si_1011, out di_1012, out ds_163)
	Mem172[ds_163:0x29DD:word16] = dx_118
	Mem173[ds_163:0x29DB:word16] = 0x4477
	word32 si_di_1000 = <invalid>
	word32 si_di_996 = si_di_1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10F4:
	word16 di_183 = SLICE(si_di_996, word16, 0)
	word16 si_182 = SLICE(si_di_996, word16, 16)
	selector ds_192
	branch fn0800_2DE2(cx_161, dx_118, si_182, di_183, ds_163, SEQ(ds_163, 0x4541), out ch_1015, out dx_1016, out ds_192) == 0x0000 l0800_1106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1106:
	selector ds_215
	fn0800_A614(ds_192, SEQ(Mem181[ds_192:0x29DD:word16], Mem206[ds_192:0x29DB:word16]), out cx_1017, out dx_1018, out ds_215)
	word16 dx_228 = fn0800_8F7F(0x4477, ds_215, SEQ(ds_215, 0x4477))
	dsOut = ds_215
	return dx_228
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DE8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1103:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E7C:
	word32 si_di_1001 = <invalid>
	word16 si_255 = SLICE(si_di_1001, word16, 16)
	word16 di_251 = SLICE(si_di_1001, word16, 0)
	branch fn0800_388C(si_di_996, fn0800_3764(si_182, di_183, ds_192), ds_192, out cx_161, out dx_118, out ds_163) != 0x0000 l0800_0E89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E89:
	word16 si_327
	word16 dx_274
	word16 ax_271 = fn0800_0C93(si_255, di_251, ds_163, SEQ(ds_163, 0x4541), out dx_274)
	fn0800_4194(ds_163, SEQ(Mem270[ds_163:0x29E5:word16], Mem286[ds_163:0x29E3:word16]))
	Mem298[ds_163:0x2A09:word16] = dx_274
	Mem299[ds_163:0x2A07:word16] = ax_271
	Mem300[ds_163:0x2A05:word16] = dx_274
	Mem301[ds_163:0x2A03:word16] = ax_271
	word16 sp_297 = fp - 0x0002
	branch Mem301[ds_163:0x2A09:word16] >u 0x0000 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EB9:
	branch Mem301[ds_163:0x2A09:word16] != 0x0000 l0800_0EC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EBB:
	branch Mem301[ds_163:0x2A07:word16] >u 0x0012 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EC2:
	branch Mem301[ds_163:0x2A15:word16] != 0x0000 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ECF:
	word16 dx_325
	word16 ax_319 = fn0800_3992(0x0000, di_251, ds_163, out dx_325, out si_327, out di_251, out ds_163)
	word16 ax_332 = ax_319
	branch ax_319 == 0x0000 l0800_0EDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EDC:
	word16 bx_337 = Mem301[ds_163:0x2A23:word16]
	branch bx_337 <=u 0x0005 l0800_0EE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EE8:
	switch (bx_337 << 0x0001) { l0800_0FF4 l0800_0EEF l0800_1002 l0800_0FFB l0800_0FCC l0800_0FED }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FED:
	ax_332 = fn0800_67BF(ds_163, out dx_325, out bp, out di_251, out ds_163)
	sp_297 = <invalid>
	si_327 = ax_332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FCC:
	selector ds_369
	branch fn0800_3F0A(ds_163, SEQ(Mem301[ds_163:0x29E5:word16], Mem361[ds_163:0x29E3:word16]), out dx_1025, out ds_369) != 0x4D5A l0800_0FE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FE6:
	ax_332 = fn0800_669C(ds_369, out dx_325, out bp, out di_251, out ds_163)
	sp_297 = <invalid>
	si_327 = ax_332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FDF:
	ax_332 = fn0800_5E64(ds_369, out dx_325, out bp, out di_251, out ds_163)
	sp_297 = <invalid>
	si_327 = ax_332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FFB:
	ax_332 = fn0800_73AC(ds_163, out dx_325, out bp, out di_251, out ds_163)
	si_327 = ax_332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1002:
	ax_332 = fn0800_741D(ds_163, out dx_325)
	si_327 = ax_332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EEF:
	branch Mem301[ds_163:0x2A09:word16] <u 0x0000 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EF6:
	branch Mem301[ds_163:0x2A09:word16] != 0x0000 l0800_0EFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EF8:
	branch Mem301[ds_163:0x2A07:word16] <u 0x0012 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EFF:
	ax_332 = fn0800_8CAA(ax_319, 0x08, fn0800_3F58(ds_163, SEQ(Mem301[ds_163:0x29E5:word16], Mem446[ds_163:0x29E3:word16]), out di_251, out ds_163), out dx_325)
	sp_297 = <invalid>
	branch dx_325 != 0x0052 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F17:
	branch ax_332 != 0x4E43 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F1C:
	si_327 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F1F:
	branch si_327 == 0x0000 l0800_0F26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F26:
	word16 sp_488 = sp_297 - 2
	Mem490[ss:sp_488:word16] = Mem485[ds_163:0x2A09:word16]
	Mem493[ss:sp_488 - 2:word16] = Mem490[ds_163:0x2A07:word16]
	Mem496[ss:sp_488 - 4:word16] = Mem493[ds_163:0x2A09:word16]
	Mem499[ss:sp_488 - 6:word16] = Mem496[ds_163:0x2A07:word16]
	fn0800_75EA(ds_163, Mem499[ss:sp_488 - 6:word16], Mem499[ss:sp_488 - 4:word16], Mem499[ss:sp_488 - 2:word16], Mem499[ss:sp_488:word16], out bp, out si_327, out di_251, out ds_163)
	word16 sp_509 = <invalid>
	sp_297 = sp_509 + 0x0008
	ax_332 = Mem499[ds_163:0x2A05:word16]
	dx_325 = Mem499[ds_163:0x2A03:word16]
	branch ax_332 >=u Mem499[ds_163:0x2A09:word16] l0800_0F4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F4C:
	branch ax_332 != Mem499[ds_163:0x2A09:word16] l0800_0F57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F4E:
	branch dx_325 >=u Mem499[ds_163:0x2A07:word16] l0800_0F57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F57:
	branch Mem499[ds_163:0x2A15:word16] != 0x0000 l0800_0F61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F61:
	Mem530[ss:sp_509 + 0x0006:word16] = Mem499[ds_163:0x29E5:word16]
	Mem533[ss:sp_509 + 0x0004:word16] = Mem530[ds_163:0x29E3:word16]
	fn0800_BA67(ds_163, Mem533[ss:sp_509 + 0x0004:segptr32])
	Mem546[ss:sp_509 + 0x0006:word16] = Mem533[ds_163:0x29E1:word16]
	Mem549[ss:sp_509 + 0x0004:word16] = Mem546[ds_163:0x29DF:word16]
	fn0800_BA67(ds_163, Mem549[ss:sp_509 + 0x0004:segptr32])
	Mem562[ss:sp_509 + 0x0006:word16] = Mem549[ds_163:0x29E1:word16]
	Mem565[ss:sp_509 + 0x0004:word16] = Mem562[ds_163:0x29DF:word16]
	Mem569[ss:sp_509 + 0x0002:word16] = 0x524E
	Mem571[ss:sp_509:word16] = 0x4300
	selector ds_576
	fn0800_409C(ds_163, Mem571[ss:sp_509:word16], Mem571[ss:sp_509 + 2:word16], Mem571[ss:sp_509 + 4:word32], out dx_1026, out di_1027, out ds_576)
	Mem587[ss:sp_509 + 0x0006:word16] = Mem571[ds_576:0x29E1:word16]
	Mem590[ss:sp_509 + 0x0004:word16] = Mem587[ds_576:0x29DF:word16]
	Mem593[ss:sp_509 + 0x0002:word16] = Mem590[ds_576:0x2A09:word16]
	Mem596[ss:sp_509:word16] = Mem593[ds_576:0x2A07:word16]
	selector ds_601
	fn0800_409C(ds_576, Mem596[ss:sp_509:word16], Mem596[ss:sp_509 + 2:word16], Mem596[ss:sp_509 + 4:word32], out dx_1028, out di_1029, out ds_601)
	Mem612[ss:sp_509 + 0x0006:word16] = Mem596[ds_601:0x2A09:word16]
	Mem615[ss:sp_509 + 0x0004:word16] = Mem612[ds_601:0x2A07:word16]
	Mem618[ss:sp_509 + 0x0002:word16] = Mem615[ds_601:0x29E1:word16]
	Mem621[ss:sp_509:word16] = Mem618[ds_601:0x29DF:word16]
	Mem624[ss:sp_509 - 2:word16] = Mem621[ds_601:0x29E5:word16]
	Mem627[ss:sp_509 - 4:word16] = Mem624[ds_601:0x29E3:word16]
	word16 sp_637 = <invalid>
	ax_332 = fn0800_3B0A(Mem627[ss:sp_509 + 4:word16], Mem627[ss:sp_509 + 6:word16], out dx_325, out bp, out si_1030, out di_251, out ds_163)
	sp_297 = sp_637 + 0x000C
	si_327 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F5E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F54:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F49:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F23:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FF4:
	ax_332 = fn0800_6AD4(bp, si_327, ds_163, out dx_325, out bp, out di_251, out ds_163)
	si_327 = ax_332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EE5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1007:
	word16 sp_667 = sp_297 - 2
	Mem669[ss:sp_667:word16] = Mem664[ds_163:0x29E1:word16]
	Mem672[ss:sp_667 - 2:word16] = Mem669[ds_163:0x29DF:word16]
	fn0800_4194(ds_163, Mem672[ss:sp_667 - 2:word32])
	Mem684[ds_163:0x2A05:word16] = dx_325
	Mem688[ds_163:0x2A03:word16] = ax_332
	sp_297 = sp_667 + 0x0002
	word16 ax_689 = Mem688[ds_163:0x2A05:word16]
	word16 dx_690 = Mem688[ds_163:0x2A03:word16]
	branch ax_689 <u Mem688[ds_163:0x2A09:word16] l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1029:
	branch ax_689 != Mem688[ds_163:0x2A09:word16] l0800_1031
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_102B:
	branch dx_690 <u Mem688[ds_163:0x2A07:word16] l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1031:
	branch Mem688[ds_163:0x2A15:word16] != 0x0000 l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1038:
	word16 dx_701 = Mem688[ds_163:0x2A07:word16]
	Mem702[ds_163:0x2A05:word16] = Mem688[ds_163:0x2A09:word16]
	Mem703[ds_163:0x2A03:word16] = dx_701
	si_327 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1049:
	branch si_327 != 0x0004 l0800_105C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_104E:
	word16 dx_714 = Mem712[ds_163:0x2A07:word16]
	Mem715[ds_163:0x2A05:word16] = Mem712[ds_163:0x2A09:word16]
	Mem716[ds_163:0x2A03:word16] = dx_714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ED6:
	si_327 = 0x000E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EC9:
	si_327 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_105C:
	branch Mem720[ds_163:0x427E:byte] == 0x00 l0800_10B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1063:
	branch si_327 == 0x0003 l0800_106D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1068:
	branch si_327 != 0x0004 l0800_10B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_106D:
	word16 dx_731 = Mem720[ds_163:0x2A07:word16]
	Mem732[ds_163:0x2A05:word16] = Mem720[ds_163:0x2A09:word16]
	Mem733[ds_163:0x2A03:word16] = dx_731
	word16 sp_739 = sp_297 - 2
	Mem744[ss:sp_739:word16] = Mem733[ds_163:0x29E5:word16]
	Mem747[ss:sp_739 - 2:word16] = Mem744[ds_163:0x29E3:word16]
	fn0800_BA67(ds_163, Mem747[ss:sp_739 - 2:segptr32])
	Mem760[ss:sp_739:word16] = Mem747[ds_163:0x29E1:word16]
	Mem763[ss:sp_739 - 2:word16] = Mem760[ds_163:0x29DF:word16]
	fn0800_BA67(ds_163, Mem763[ss:sp_739 - 2:segptr32])
	Mem776[ss:sp_739:word16] = Mem763[ds_163:0x2A09:word16]
	Mem779[ss:sp_739 - 2:word16] = Mem776[ds_163:0x2A07:word16]
	Mem782[ss:sp_739 - 4:word16] = Mem779[ds_163:0x29E1:word16]
	Mem785[ss:sp_739 - 6:word16] = Mem782[ds_163:0x29DF:word16]
	Mem788[ss:sp_739 - 8:word16] = Mem785[ds_163:0x29E5:word16]
	Mem791[ss:sp_739 - 10:word16] = Mem788[ds_163:0x29E3:word16]
	fn0800_3B0A(Mem791[ss:sp_739 - 2:word16], Mem791[ss:sp_739:word16], out dx_1023, out bp, out si_1024, out di_251, out ds_163)
	word16 sp_801 = <invalid>
	sp_297 = sp_801 + 0x000C
	si_327 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10B7:
	word16 sp_814 = sp_297 - 2
	Mem816[ss:sp_814:word16] = Mem811[ds_163:0x29E5:word16]
	Mem819[ss:sp_814 - 2:word16] = Mem816[ds_163:0x29E3:word16]
	selector ds_825
	fn0800_A614(ds_163, Mem819[ss:sp_814 - 2:segptr32], out cx_1019, out dx_1020, out ds_825)
	Mem834[ss:sp_814:word16] = Mem819[ds_825:0x29E1:word16]
	Mem837[ss:sp_814 - 2:word16] = Mem834[ds_825:0x29DF:word16]
	fn0800_A614(ds_825, Mem837[ss:sp_814 - 2:segptr32], out cx_1021, out dx_1022, out ds_163)
	branch si_327 <= 0x0002 l0800_10E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E5:
	si_327 = fn0800_37DF(si_327, di_251, ds_163, out ds_163)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10D8:
	Mem873[ss:sp_814:word16] = ds_163
	Mem876[ss:sp_814 - 2:word16] = 0x44DC
	fn0800_8F7F(0x44DC, ds_163, Mem876[ss:sp_814 - 2:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E8:
	word16 sp_886 = sp_297 - 2
	Mem889[ss:sp_886:word16] = ds_163
	Mem892[ss:sp_886 - 2:word16] = 0x4541
	Mem895[ss:sp_886 - 4:word16] = si_327
	word16 di_900
	cx_161 = fn0800_0ABC(di_251, ds_163, Mem895[ss:sp_886 - 4:word16], Mem895[ss:sp_886 - 2:word32], out dx_118, out di_900)
	si_di_996 = SEQ(si_327, di_900) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E86:
	si_di_996 = si_di_1001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_112D(word16 cx, word16 dx, word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds dx
// Trashed: SCZDOP bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_112D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_112D:
	word16 bx_18 = Mem17[ds:0x2A25:word16]
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08F0), out si_603, out di_604)
	branch Mem32[ds:0x2E4F:word16] == 0x0000 l0800_116F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1160:
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x08FE), out si_607, out di_608)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_116F:
	word32 si_di_595
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, SEQ(ds, 0x0913), out si_605, out di_606)
	word32 si_di_600 = <invalid>
	word16 di_76 = SLICE(si_di_600, word16, 0)
	branch Mem71[ds:0x2A25:word16] == 0x0001 l0800_1184
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1184:
	word16 si_97
	cx = fn0800_3678(ds, SEQ(ds, 0x427E), out dx, out si_97, out ds)
	si_di_595 = SEQ(si_97, di_76) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1181:
	si_di_595 = si_di_600 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12C2:
	word16 di_113 = SLICE(si_di_595, word16, 0)
	word16 si_112 = SLICE(si_di_595, word16, 16)
	word16 dx_119
	selector ds_122
	branch fn0800_2DE2(cx, dx, si_112, di_113, ds, SEQ(ds, 0x4541), out ch_609, out dx_119, out ds_122) == 0x0000 l0800_12D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D4:
	dsOut = ds_122
	return dx_119
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_112D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1192:
	word32 si_di_601 = <invalid>
	word16 si_154 = SLICE(si_di_601, word16, 16)
	word16 di_150 = SLICE(si_di_601, word16, 0)
	branch fn0800_388C(si_di_595, fn0800_3764(si_112, di_113, ds_122), ds_122, out cx, out dx, out ds) != 0x0000 l0800_119F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_119F:
	word16 dx_173
	word16 ax_170 = fn0800_0C93(si_154, di_150, ds, SEQ(ds, 0x4541), out dx_173)
	fn0800_4194(ds, SEQ(Mem169[ds:0x29E5:word16], Mem185[ds:0x29E3:word16]))
	Mem197[ds:0x2A05:word16] = dx_173
	Mem198[ds:0x2A03:word16] = ax_170
	word16 sp_196 = fp - 0x0002
	word16 dx_199 = dx_173
	branch dx_173 >u 0x0000 l0800_11CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11C3:
	branch Test(ULT,false) l0800_11CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11C5:
	branch ax_170 >=u 0x0012 l0800_11CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11CF:
	word16 bx_208 = Mem198[ds:0x2A23:word16]
	branch bx_208 >u 0x0005 l0800_1243
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11D8:
	switch (bx_208 << 0x0001) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1229:
	ax_170 = fn0800_4BB1(ax_170, dx_173, ds, out dx_199, out bp, out di_150, out ds)
	si_154 = ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1208:
	selector ds_241
	word16 dx_242
	word16 ax_237 = fn0800_3F0A(ds, SEQ(Mem198[ds:0x29E5:word16], Mem233[ds:0x29E3:word16]), out dx_242, out ds_241)
	sp_196 = fp - 0x0002
	branch ax_237 != 0x4D5A l0800_1222
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1222:
	ax_170 = fn0800_4B97(ax_237, dx_242, ds_241, out dx_199, out bp, out di_150, out ds)
	si_154 = ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_121B:
	ax_170 = fn0800_46FE(ds_241, out dx_199, out bp, out di_150, out ds)
	sp_196 = <invalid>
	si_154 = ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1237:
	ax_170 = fn0800_518F(ax_170, dx_173, ds, out dx_199, out bp, out di_150, out ds)
	si_154 = ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_123E:
	ax_170 = fn0800_51A9(ds, out dx_199, out bp, out di_150, out ds)
	sp_196 = <invalid>
	si_154 = ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11DF:
	ax_170 = fn0800_8CAA(ax_170, 0x08, fn0800_3F58(ds, SEQ(Mem198[ds:0x29E5:word16], Mem311[ds:0x29E3:word16]), out di_150, out ds), out dx_199)
	sp_196 = <invalid>
	branch dx_199 != 0x0052 l0800_1203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11F7:
	branch ax_170 != 0x4E43 l0800_1203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1203:
	si_154 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11FC:
	ax_170 = fn0800_5374(ds, out dx_199, out bp, out di_150, out ds)
	sp_196 = <invalid>
	si_154 = ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1230:
	ax_170 = fn0800_4C55(ax_170, bp, ds, out dx_199, out bp, out di_150, out ds)
	si_154 = ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11CA:
	si_154 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1243:
	word16 sp_384 = sp_196 - 2
	Mem388[ss:sp_384:word16] = Mem377[ds:0x29E1:word16]
	Mem391[ss:sp_384 - 2:word16] = Mem388[ds:0x29DF:word16]
	fn0800_4194(ds, Mem391[ss:sp_384 - 2:word32])
	Mem404[ds:0x2A09:word16] = dx_199
	Mem408[ds:0x2A07:word16] = ax_170
	Mem411[ss:sp_384:word16] = Mem408[ds:0x29E5:word16]
	Mem414[ss:sp_384 - 2:word16] = Mem411[ds:0x29E3:word16]
	fn0800_4194(ds, Mem414[ss:sp_384 - 2:word32])
	Mem423[ds:0x2A05:word16] = dx_199
	Mem424[ds:0x2A03:word16] = ax_170
	branch si_154 == 0x0000 l0800_127F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1271:
	word16 dx_432 = Mem424[ds:0x2A03:word16]
	Mem433[ds:0x2A09:word16] = Mem424[ds:0x2A05:word16]
	Mem434[ds:0x2A07:word16] = dx_432
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_127F:
	word16 si_492
	Mem441[ss:sp_384:word16] = Mem436[ds:0x29E5:word16]
	Mem444[ss:sp_384 - 2:word16] = Mem441[ds:0x29E3:word16]
	selector ds_450
	fn0800_A614(ds, Mem444[ss:sp_384 - 2:segptr32], out cx_610, out dx_611, out ds_450)
	Mem459[ss:sp_384:word16] = Mem444[ds_450:0x29E1:word16]
	Mem462[ss:sp_384 - 2:word16] = Mem459[ds_450:0x29DF:word16]
	fn0800_A614(ds_450, Mem462[ss:sp_384 - 2:segptr32], out cx_612, out dx_613, out ds)
	branch Mem462[ds:0x2A25:word16] == 0x0002 l0800_12A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12A2:
	branch si_154 == 0x0000 l0800_12B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12B3:
	si_492 = fn0800_37DF(si_154, di_150, ds, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12A6:
	Mem503[ss:sp_384:word16] = ds
	Mem506[ss:sp_384 - 2:word16] = 0x44DC
	fn0800_8F7F(0x44DC, ds, Mem506[ss:sp_384 - 2:segptr32])
	si_492 = si_154
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12B6:
	word16 sp_516 = sp_196 - 2
	Mem519[ss:sp_516:word16] = ds
	Mem522[ss:sp_516 - 2:word16] = 0x4541
	Mem526[ss:sp_516 - 4:word16] = si_492
	word16 di_532
	cx = fn0800_0ABC(di_150, ds, Mem526[ss:sp_516 - 4:word16], Mem526[ss:sp_516 - 2:word32], out dx, out di_532)
	si_di_595 = SEQ(si_492, di_532) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_119C:
	si_di_595 = si_di_601 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_12E2(word16 cx, word16 dx, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_12E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E2:
	word16 bx_22 = Mem21[ds:0x2A25:word16]
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, SEQ(ds, 0x0916), out si_1976, out di_1977)
	branch Mem36[ds:0x2E4F:word16] == 0x0000 l0800_1321
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1312:
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, SEQ(ds, 0x0925), out si_1981, out di_1982)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1321:
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, SEQ(ds, 0x093A), out si_1978, out di_1979)
	word32 si_di_1968 = <invalid>
	word16 si_107
	word16 di_103
	word16 dx_105
	selector ds_104
	word16 ax_100 = fn0800_AA7E(si_di_1968, ds, SEQ(ds, 0x4348), SEQ(ds, 0x093D), out cx_1980, out dx_105, out si_107, out di_103, out ds_104)
	Mem113[ds_104:0x29D1:word16] = dx_105
	Mem114[ds_104:0x29CF:word16] = ax_100
	word16 ax_115 = Mem114[ds_104:0x2A25:word16]
	branch ax_115 == 0x0003 l0800_1353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1353:
	branch (Mem114[ds_104:0x29CF:word16] | Mem114[ds_104:0x29D1:word16]) == 0x0000 l0800_135F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_135F:
	fn0800_0D24(ds_104, 0x0007, SEQ(ds_104, 0x4348), out cx_1984, out dx_1985, out bx_1986, out si_1987, out di_1988, out es_1989, out ds_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_135C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_134B:
	branch ax_115 == 0x0004 l0800_1371
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1371:
	branch (Mem114[ds_104:0x29CF:word16] | Mem114[ds_104:0x29D1:word16]) == 0x0000 l0800_13C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_137A:
	branch fn0800_3E27(ds_104, SEQ(Mem114[ds_104:0x29D1:word16], Mem155[ds_104:0x29CF:word16]), out cx_1990, out dx_105, out di_103, out ds_104) != 0x4D5A l0800_13BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13BA:
	Mem173[ds_104:0x29D1:word16] = 0x0000
	Mem174[ds_104:0x29CF:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_138D:
	fn0800_ACB3(ds_104, SEQ(Mem184[ds_104:0x29D1:word16], Mem187[ds_104:0x29CF:word16]), 0x00000000, 0x0002, out cx_1991, out dx_1992, out bx_1993)
	word16 ax_208 = fn0800_AD2F(ds_104, SEQ(Mem190[ds_104:0x29D1:word16], Mem204[ds_104:0x29CF:word16]), out dx_105)
	Mem219[ds_104:0x29ED:word16] = dx_105
	Mem220[ds_104:0x29EB:word16] = ax_208
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C6:
	branch (Mem222[ds_104:0x29CF:word16] | Mem222[ds_104:0x29D1:word16]) != 0x0000 l0800_13F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13CF:
	fn0800_4234(SEQ(si_107, di_103), ds_104, SEQ(ds_104, 0x4348), SEQ(ds_104, 0x0941), out si_2005, out di_2006, out ds_104)
	Mem256[ds_104:0x29D1:word16] = dx_105
	Mem257[ds_104:0x29CF:word16] = 0x4348
	Mem258[ds_104:0x29ED:word16] = 0x0000
	Mem259[ds_104:0x29EB:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13F2:
	fn0800_2CCF(ds_104, SEQ(ss, fp - 0x0068), 0x0004, 0x0000, out cl_1997, out dx_1998)
	fn0800_2CCF(ds_104, SEQ(ss, fp - 0x0068), 0x0004, 0x0000, out cl_1999, out dx_2000)
	selector ds_351
	fn0800_4152(ds_104, SEQ(ss, fp - 0x0070), 0x000C, 0x0000, SEQ(Mem327[ds_104:0x29D1:word16], Mem330[ds_104:0x29CF:word16]), out si_2001, out di_2002, out ds_351)
	fn0800_409C(ds_351, Mem369[ds_351:0x29EB:word16], Mem366[ds_351:0x29ED:word16], SEQ(Mem346[ds_351:0x29D1:word16], Mem363[ds_351:0x29CF:word16]), out dx_2003, out di_2004, out ds_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1350:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1478:
	word16 sp_403 = <invalid>
	word16 dx_400
	selector ds_399
	word16 bp_1777
	word16 di_1782
	word16 cx_1785 = fn0800_1CF6(ds_104, 0x0000, out dx_400, out bp_1777, out si_1983, out di_1782, out ds_399)
	word16 sp_408 = sp_403 + 0x0002
	word16 si_409 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1527:
	word16 sp_413 = sp_408 - 2
	Mem416[ss:sp_413:word16] = ds_399
	Mem419[ss:sp_413 - 2:word16] = 0x4541
	sp_408 = sp_413 + 0x0002
	branch fn0800_2DE2(cx_1785, dx_400, si_409, di_1782, ds_399, Mem419[ss:sp_413 - 2:segptr32], out ch_1994, out dx_1995, out ds_399) == 0x0000 l0800_1539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1536:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1486:
	Mem443[ss:sp_413:word16] = ds_399
	Mem446[ss:sp_413 - 2:word16] = 0x4541
	Mem448[ss:sp_413 - 4:word16] = ss
	Mem452[ss:sp_413 - 6:word16] = bp_1777 - 0x006E
	fn0800_3509(si_409, di_1782, Mem452[ss:sp_413 - 6:word16], Mem452[ss:sp_413 - 4:selector], Mem452[ss:sp_413 - 2:word32], out bx_1996)
	Mem466[ss:sp_413:word16] = ds_399
	Mem469[ss:sp_413 - 2:word16] = 0x4541
	Mem471[ss:sp_413 - 4:word16] = ss
	Mem474[ss:sp_413 - 6:word16] = bp_1777 - 0x0084
	fn0800_35A3(si_409, di_1782, Mem474[ss:sp_413 - 6:word16], Mem474[ss:sp_413 - 4:selector], Mem474[ss:sp_413 - 2:word32])
	Mem488[ss:sp_413:word16] = ss
	Mem491[ss:sp_413 - 2:word16] = bp_1777 - 0x006E
	word16 dx_495
	word16 ax_492 = fn0800_283D(ds_399, Mem491[ss:sp_413 - 2:segptr32], out dx_495)
	Mem502[ss:bp_1777 - 0x0002:word16] = dx_495
	Mem503[ss:bp_1777 - 0x0004:word16] = ax_492
	branch (ax_492 | dx_495) != 0x0000 l0800_14CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14BC:
	Mem509[ss:sp_413:word16] = ss
	Mem512[ss:sp_413 - 2:word16] = bp_1777 - 0x006E
	word16 dx_518
	word16 ax_513 = fn0800_1F5C(ds_399, Mem512[ss:sp_413 - 2:segptr32], out dx_518, out di_1782, out ds_399)
	Mem527[ss:bp_1777 - 0x0002:word16] = dx_518
	Mem528[ss:bp_1777 - 0x0004:word16] = ax_513
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14CD:
	word16 cx_1784
	word16 sp_534 = sp_408 - 2
	Mem535[ss:sp_534:word16] = Mem531[ss:bp_1777 - 0x0002:word16]
	Mem538[ss:sp_534 - 2:word16] = Mem535[ss:bp_1777 - 0x0004:word16]
	Mem540[ss:sp_534 - 4:word16] = ss
	Mem543[ss:sp_534 - 6:word16] = bp_1777 - 0x0084
	word16 dx_547
	word16 ax_544 = fn0800_2931(Mem543[ss:sp_534 - 6:segptr32], Mem543[ss:sp_534 - 2:segptr32], out dx_547)
	Mem554[ss:bp_1777 - 0x0006:word16] = dx_547
	Mem555[ss:bp_1777 - 0x0008:word16] = ax_544
	branch (ax_544 | dx_547) != 0x0000 l0800_14FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14FD:
	Mem562[ss:sp_534:word16] = Mem555[ss:bp_1777 - 0x0006:word16]
	Mem565[ss:sp_534 - 2:word16] = Mem562[ss:bp_1777 - 0x0008:word16]
	word16 sp_576 = <invalid>
	cx_1784 = (word16) fn0800_23EC(ds_399, Mem565[ss:sp_534 - 2:segptr32], out bp_1777, out si_2007, out di_1782, out ds_399)
	sp_408 = sp_576 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14E9:
	Mem587[ss:sp_534:word16] = Mem555[ss:bp_1777 - 0x0002:word16]
	Mem590[ss:sp_534 - 2:word16] = Mem587[ss:bp_1777 - 0x0004:word16]
	Mem592[ss:sp_534 - 4:word16] = ss
	Mem595[ss:sp_534 - 6:word16] = bp_1777 - 0x0084
	cx_1784 = (word16) fn0800_2085(ds_399, Mem595[ss:sp_534 - 6:segptr32], Mem595[ss:sp_534 - 2:segptr32])
	sp_408 = sp_534 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1509:
	word16 dx_573
	word16 ax_567
	ptr32 es_bx_611 = Mem610[ds_399:0x2E51:segptr32]
	dx_400 = DPB(DPB(dx_573, Mem610[es_bx_611 + 0x0005:byte], 0), 0x00, 8) (alias)
	si_409 = 0x0001
	cx_1785 = DPB(cx_1784, 0x08, 0) (alias)
	branch (DPB(DPB(ax_567, Mem610[es_bx_611 + 0x0004:byte], 0), 0x00, 8) << 0x08) + dx_400 >=u 0xFF8C l0800_1539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1539:
	branch si_409 != 0x0000 l0800_1551
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1551:
	selector ds_641
	fn0800_1E5E(ds_399, out ds_641)
	word16 sp_653 = sp_408 - 2
	Mem654[ss:sp_653:word16] = 0x0001
	selector ds_660
	word16 bp_1340
	word16 cx_658 = fn0800_1CF6(ds_641, Mem654[ss:sp_653:word16], out dx_2008, out bp_1340, out si_2009, out di_2010, out ds_660)
	word16 sp_664 = <invalid>
	Mem672[ss:sp_664:word16] = 0x0001
	Mem677[ss:sp_664 - 2:word16] = 0x0000
	fn0800_2DBF(ds_660, Mem677[ss:sp_664 - 2:word16], Mem677[ss:sp_664:word16])
	word16 dx_1663 = Mem677[ds_660:0x29CF:word16]
	Mem683[ds_660:0x29E1:word16] = Mem677[ds_660:0x29D1:word16]
	Mem684[ds_660:0x29DF:word16] = dx_1663
	Mem686[ss:sp_664:word16] = ds_660
	Mem689[ss:sp_664 - 2:word16] = 0x0945
	Mem691[ss:sp_664 - 4:word16] = ds_660
	Mem694[ss:sp_664 - 6:word16] = 0x4477
	fn0800_37BE(cx_658, dx_1663, ds_660, Mem694[ss:sp_664 - 6:word32], out di_2011)
	Mem708[ss:sp_664:word16] = ds_660
	Mem711[ss:sp_664 - 2:word16] = 0x0941
	Mem713[ss:sp_664 - 4:word16] = ds_660
	Mem716[ss:sp_664 - 6:word16] = 0x4477
	word32 si_di_1969 = <invalid>
	selector ds_1618
	word16 cx_1672 = fn0800_4234(si_di_1969, ds_660, Mem716[ss:sp_664 - 6:word32], Mem716[ss:sp_664 - 2:word32], out si_2012, out di_2013, out ds_1618)
	Mem730[ds_1618:0x29DD:word16] = dx_1663
	Mem731[ds_1618:0x29DB:word16] = 0x4477
	word32 si_di_1973 = <invalid>
	word16 sp_1650 = sp_664 + 0x0002
	word32 si_di_1970 = si_di_1973
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1897:
	word16 sp_733 = sp_1650 - 2
	Mem736[ss:sp_733:word16] = ds_1618
	Mem739[ss:sp_733 - 2:word16] = 0x4541
	word16 sp_1681 = sp_733 + 0x0002
	word16 dx_747
	branch fn0800_2DE2(cx_1672, dx_1663, SLICE(si_di_1970, word16, 16), SLICE(si_di_1970, word16, 0), ds_1618, Mem739[ss:sp_733 - 2:segptr32], out ch_2015, out dx_747, out ds_1618) == 0x0000 l0800_18A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15A3:
	Mem763[ss:sp_733:word16] = ds_1618
	Mem766[ss:sp_733 - 2:word16] = 0x093D
	Mem768[ss:sp_733 - 4:word16] = ds_1618
	Mem771[ss:sp_733 - 6:word16] = 0x4541
	word16 di_775
	word16 si_778
	selector ds_1299
	fn0800_4234(si_di_1970, ds_1618, Mem771[ss:sp_733 - 6:word32], Mem771[ss:sp_733 - 2:word32], out si_778, out di_775, out ds_1299)
	Mem785[ds_1299:0x29E5:word16] = dx_747
	Mem786[ds_1299:0x29E3:word16] = 0x4541
	Mem788[ss:sp_733:word16] = ds_1299
	Mem791[ss:sp_733 - 2:word16] = 0x4541
	Mem793[ss:sp_733 - 4:word16] = ss
	Mem797[ss:sp_733 - 6:word16] = bp_1340 - 0x006E
	fn0800_3509(si_778, di_775, Mem797[ss:sp_733 - 6:word16], Mem797[ss:sp_733 - 4:selector], Mem797[ss:sp_733 - 2:word32], out bx_2019)
	Mem811[ss:sp_733:word16] = ds_1299
	Mem814[ss:sp_733 - 2:word16] = 0x4541
	Mem816[ss:sp_733 - 4:word16] = ss
	Mem819[ss:sp_733 - 6:word16] = bp_1340 - 0x0084
	fn0800_35A3(si_778, di_775, Mem819[ss:sp_733 - 6:word16], Mem819[ss:sp_733 - 4:selector], Mem819[ss:sp_733 - 2:word32])
	Mem833[ss:sp_733:word16] = ds_1299
	Mem836[ss:sp_733 - 2:word16] = 0x4541
	fn0800_0C93(si_778, di_775, ds_1299, Mem836[ss:sp_733 - 2:word32], out dx_2020)
	Mem851[ss:sp_733:word16] = ss
	Mem854[ss:sp_733 - 2:word16] = bp_1340 - 0x006E
	word16 dx_858
	word16 ax_855 = fn0800_283D(ds_1299, Mem854[ss:sp_733 - 2:segptr32], out dx_858)
	Mem867[ss:sp_733:word16] = dx_858
	Mem869[ss:sp_733 - 2:word16] = ax_855
	Mem871[ss:sp_733 - 4:word16] = ss
	Mem874[ss:sp_733 - 6:word16] = bp_1340 - 0x0084
	word16 dx_878
	word16 ax_875 = fn0800_2931(Mem874[ss:sp_733 - 6:segptr32], Mem874[ss:sp_733 - 2:segptr32], out dx_878)
	Mem886[ss:bp_1340 - 0x0006:word16] = dx_878
	Mem887[ss:bp_1340 - 0x0008:word16] = ax_875
	Mem890[ss:sp_733:word16] = Mem887[ds_1299:0x29D1:word16]
	Mem893[ss:sp_733 - 2:word16] = Mem890[ds_1299:0x29CF:word16]
	fn0800_4194(ds_1299, Mem893[ss:sp_733 - 2:word32])
	Mem907[ds_1299:0x29E9:word16] = dx_878 - (ax_875 <u 0x0004)
	Mem908[ds_1299:0x29E7:word16] = ax_875 - 0x0004
	int32 dx_ax_910 = (int32) Mem908[ds_1299:0x29E9:word16]
	word16 ax_914 = fn0800_8C8A((word16) dx_ax_910, 0x08, SLICE(dx_ax_910, word16, 16), out cl_2021, out dx_2022)
	ptr32 es_di_923 = Mem908[ss:bp_1340 - 0x0008:segptr32]
	word16 sp_918 = <invalid>
	Mem925[ss:sp_918 - 2:word16] = ax_914
	selector es_1798 = SLICE(es_di_923, selector, 16)
	word16 di_1799 = (word16) es_di_923
	word16 cx_929 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1632:
	branch cx_929 == 0x0000 l0800_1634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1632_1:
	di_1799 = di_1799 + 0x0001
	cx_929 = cx_929 - 0x0001
	branch Mem925[es_1798:di_1799:byte] == 0x00 l0800_1632
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1634:
	word16 cx_940 = ~cx_929
	word16 di_2045 = di_1799 - cx_940
	bool Z_953 = SLICE(cond(di_2045), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163A:
	branch cx_940 == 0x0000 l0800_163C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163A_2:
	Z_953 = SLICE(cond(0x00 - Mem925[es_1798:di_2045:byte]), bool, 2) (alias)
	di_2045 = di_2045 + 0x0001
	cx_940 = cx_940 - 0x0001
	branch Mem925[es_1798:di_2045:byte] == 0x00 l0800_163A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163C:
	branch Z_953 l0800_1645
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163E:
	di_2045 = 0x0001
	es_1798 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1645:
	Mem984[es_1798:di_2045:byte] = (byte) Mem925[ss:sp_918 - 2:word16]
	ptr32 es_di_997 = Mem984[ss:bp_1340 - 0x0008:segptr32]
	Mem1000[ss:sp_918 - 2:word16] = (word16) (int32) Mem984[ds_1299:0x29E9:word16]
	selector es_1036 = SLICE(es_di_997, selector, 16)
	word16 di_1008 = (word16) es_di_997
	word16 cx_1004 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165C:
	branch cx_1004 == 0x0000 l0800_165E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165C_1:
	di_1008 = di_1008 + 0x0001
	cx_1004 = cx_1004 - 0x0001
	branch Mem1000[es_1036:di_1008:byte] == 0x00 l0800_165C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165E:
	word16 cx_1015 = ~cx_1004
	word16 di_1018 = di_1008 - cx_1015
	bool Z_1028 = SLICE(cond(di_1018), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1664:
	branch cx_1015 == 0x0000 l0800_1666
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1664_2:
	Z_1028 = SLICE(cond(0x00 - Mem1000[es_1036:di_1018:byte]), bool, 2) (alias)
	di_1018 = di_1018 + 0x0001
	cx_1015 = cx_1015 - 0x0001
	branch Mem1000[es_1036:di_1018:byte] == 0x00 l0800_1664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1666:
	branch Z_1028 l0800_166F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1668:
	di_1018 = 0x0001
	es_1036 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_166F:
	Mem1060[es_1036:di_1018 + 0x0001:byte] = (byte) Mem1000[ss:sp_918 - 2:word16]
	word16 dx_1072
	word16 ax_1069 = fn0800_8C8A(Mem1060[ds_1299:0x29E7:word16], 0x08, Mem1060[ds_1299:0x29E9:word16], out cl_2023, out dx_1072)
	ptr32 es_di_1083 = Mem1060[ss:bp_1340 - 0x0008:segptr32]
	word16 sp_1073 = <invalid>
	Mem1085[ss:sp_1073 - 2:word16] = ax_1069
	selector es_1121 = SLICE(es_di_1083, selector, 16)
	word16 di_1093 = (word16) es_di_1083
	word16 cx_1089 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_168E:
	branch cx_1089 == 0x0000 l0800_1690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_168E_1:
	di_1093 = di_1093 + 0x0001
	cx_1089 = cx_1089 - 0x0001
	branch Mem1085[es_1121:di_1093:byte] == 0x00 l0800_168E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1690:
	word16 cx_1100 = ~cx_1089
	word16 di_1103 = di_1093 - cx_1100
	bool Z_1113 = SLICE(cond(di_1103), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1696:
	branch cx_1100 == 0x0000 l0800_1698
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1696_2:
	Z_1113 = SLICE(cond(0x00 - Mem1085[es_1121:di_1103:byte]), bool, 2) (alias)
	di_1103 = di_1103 + 0x0001
	cx_1100 = cx_1100 - 0x0001
	branch Mem1085[es_1121:di_1103:byte] == 0x00 l0800_1696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1698:
	branch Z_1113 l0800_16A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_169A:
	di_1103 = 0x0001
	es_1121 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16A1:
	Mem1144[es_1121:di_1103 + 0x0002:byte] = (byte) Mem1085[ss:sp_1073 - 2:word16]
	ptr32 es_di_1150 = Mem1144[ss:bp_1340 - 0x0008:segptr32]
	selector es_1186 = SLICE(es_di_1150, selector, 16)
	word16 di_1158 = (word16) es_di_1150
	word16 cx_1154 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B3:
	branch cx_1154 == 0x0000 l0800_16B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B3_1:
	di_1158 = di_1158 + 0x0001
	cx_1154 = cx_1154 - 0x0001
	branch Mem1144[es_1186:di_1158:byte] == 0x00 l0800_16B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B5:
	word16 cx_1165 = ~cx_1154
	word16 di_1168 = di_1158 - cx_1165
	bool Z_1178 = SLICE(cond(di_1168), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BB:
	branch cx_1165 == 0x0000 l0800_16BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BB_2:
	Z_1178 = SLICE(cond(0x00 - Mem1144[es_1186:di_1168:byte]), bool, 2) (alias)
	di_1168 = di_1168 + 0x0001
	cx_1165 = cx_1165 - 0x0001
	branch Mem1144[es_1186:di_1168:byte] == 0x00 l0800_16BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BD:
	branch Z_1178 l0800_16C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BF:
	di_1168 = 0x0001
	es_1186 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16C6:
	byte dl_1205 = Mem1144[ds_1299:0x29E7:byte]
	Mem1207[es_1186:di_1168 + 0x0003:byte] = dl_1205
	Mem1212[ds_1299:0x2A05:word16] = 0x0000
	Mem1213[ds_1299:0x2A03:word16] = 0x0000
	Mem1227[ss:sp_1073 - 2:word16] = Mem1213[ds_1299:0x29E5:word16]
	Mem1230[ss:sp_1073 - 4:word16] = Mem1227[ds_1299:0x29E3:word16]
	fn0800_4194(ds_1299, Mem1230[ss:sp_1073 - 4:word32])
	Mem1250[ds_1299:0x2A09:word16] = DPB(dx_1072, dl_1205, 0)
	Mem1251[ds_1299:0x2A07:word16] = 0x0000
	Mem1256[ss:sp_1073 - 2:word16] = 0x0000
	Mem1259[ss:sp_1073 - 4:word16] = Mem1256[ds_1299:0x29E9:word16]
	Mem1262[ss:sp_1073 - 6:word16] = Mem1259[ds_1299:0x29E7:word16]
	Mem1265[ss:sp_1073 - 8:word16] = Mem1262[ds_1299:0x29E1:word16]
	Mem1268[ss:sp_1073 - 10:word16] = Mem1265[ds_1299:0x29DF:word16]
	word16 di_1208 = 0x0001
	word16 si_1214 = 0x0000
	word16 ax_1269 = fn0800_ACB3(ds_1299, Mem1268[ss:sp_1073 - 10:segptr32], Mem1268[ss:sp_1073 - 6:ui32], Mem1268[ss:sp_1073 - 2:word16], out cx_2024, out dx_2025, out bx_2026)
	word16 sp_1278 = sp_1073
	branch Mem1268[ds_1299:0x2A09:word16] >=u 0x0000 l0800_171B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_171B:
	branch Mem1268[ds_1299:0x2A09:word16] >u 0x0000 l0800_1724
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_171D:
	branch Mem1268[ds_1299:0x2A07:word16] <=u 0x0012 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1724:
	branch Mem1268[ds_1299:0x2A21:word16] == 0x0000 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_172B:
	Mem1292[ss:sp_1073 - 2:word16] = Mem1268[ds_1299:0x29E5:word16]
	Mem1295[ss:sp_1073 - 4:word16] = Mem1292[ds_1299:0x29E3:word16]
	word16 dx_1313
	word16 ax_1310 = fn0800_8CAA(ax_1269, 0x08, fn0800_3F58(ds_1299, Mem1295[ss:sp_1073 - 4:word32], out di_1208, out ds_1299), out dx_1313)
	sp_1278 = <invalid>
	branch dx_1313 != 0x0052 l0800_1748
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1743:
	branch ax_1310 == 0x4E43 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1748:
	word16 ax_1361
	Mem1329[ss:sp_1278 - 2:word16] = Mem1295[ds_1299:0x2A09:word16]
	Mem1332[ss:sp_1278 - 4:word16] = Mem1329[ds_1299:0x2A07:word16]
	Mem1335[ss:sp_1278 - 6:word16] = Mem1332[ds_1299:0x2A09:word16]
	Mem1338[ss:sp_1278 - 8:word16] = Mem1335[ds_1299:0x2A07:word16]
	fn0800_75EA(ds_1299, Mem1338[ss:sp_1278 - 8:word16], Mem1338[ss:sp_1278 - 6:word16], Mem1338[ss:sp_1278 - 4:word16], Mem1338[ss:sp_1278 - 2:word16], out bp_1340, out si_1214, out di_2030, out ds_1299)
	word16 sp_1348 = <invalid>
	sp_1278 = sp_1348 + 0x0008
	word16 ax_1354 = Mem1338[ds_1299:0x2A05:word16]
	word16 dx_1355 = Mem1338[ds_1299:0x2A03:word16]
	branch ax_1354 <u Mem1338[ds_1299:0x2A09:word16] l0800_1778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_176B:
	branch ax_1354 != Mem1338[ds_1299:0x2A09:word16] l0800_1773
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_176D:
	branch dx_1355 <u Mem1338[ds_1299:0x2A07:word16] l0800_1778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1778:
	ax_1361 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1773:
	ax_1361 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_177A:
	di_1208 = ax_1361
	branch ax_1361 == 0x0000 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1780:
	Mem1379[ss:sp_1348 + 0x0006:word16] = 0x0001
	word16 dx_1386 = -Mem1379[ds_1299:0x2A03:word16]
	Mem1391[ss:sp_1348 + 0x0004:word16] = -Mem1379[ds_1299:0x2A05:word16] - (dx_1386 == 0x0000)
	Mem1393[ss:sp_1348 + 0x0002:word16] = dx_1386
	Mem1396[ss:sp_1348:word16] = Mem1393[ds_1299:0x29E1:word16]
	Mem1399[ss:sp_1348 - 2:word16] = Mem1396[ds_1299:0x29DF:word16]
	fn0800_ACB3(ds_1299, Mem1399[ss:sp_1348 - 2:segptr32], Mem1399[ss:sp_1348 + 2:ui32], Mem1399[ss:sp_1348 + 6:word16], out cx_2033, out dx_2034, out bx_2035)
	sp_1278 = sp_1348 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1718:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A2:
	branch di_1208 != 0x0000 l0800_17A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A9:
	word16 ax_1422 = Mem1418[ds_1299:0x2A09:word16]
	word16 dx_1423 = Mem1418[ds_1299:0x2A07:word16]
	Mem1424[ds_1299:0x2A05:word16] = ax_1422
	Mem1425[ds_1299:0x2A03:word16] = dx_1423
	word16 sp_1428 = sp_1278 - 2
	Mem1430[ss:sp_1428:word16] = Mem1425[ds_1299:0x29E5:word16]
	Mem1433[ss:sp_1428 - 2:word16] = Mem1430[ds_1299:0x29E3:word16]
	fn0800_BA67(ds_1299, Mem1433[ss:sp_1428 - 2:segptr32])
	word16 sp_1442 = sp_1428 + 0x0002
	branch Mem1433[ds_1299:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17CC:
	branch Mem1433[ds_1299:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17CE:
	branch Mem1433[ds_1299:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17D5:
	Mem1454[ss:sp_1428:word16] = Mem1433[ds_1299:0x29E5:word16]
	Mem1457[ss:sp_1428 - 2:word16] = Mem1454[ds_1299:0x29E3:word16]
	word16 dx_1475
	word16 ax_1472 = fn0800_8CAA(ax_1422, 0x08, fn0800_3F58(ds_1299, Mem1457[ss:sp_1428 - 2:word32], out di_2040, out ds_1299), out dx_1475)
	sp_1442 = <invalid>
	branch dx_1475 != 0x0052 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17ED:
	branch ax_1472 == 0x4E43 l0800_181E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17F2:
	word16 sp_1489 = sp_1442 - 2
	Mem1491[ss:sp_1489:word16] = Mem1486[ds_1299:0x29D1:word16]
	Mem1494[ss:sp_1489 - 2:word16] = Mem1491[ds_1299:0x29CF:word16]
	Mem1498[ss:sp_1489 - 4:word16] = 0x524E
	Mem1500[ss:sp_1489 - 6:word16] = 0x4300
	selector ds_1505
	fn0800_409C(ds_1299, Mem1500[ss:sp_1489 - 6:word16], Mem1500[ss:sp_1489 - 4:word16], Mem1500[ss:sp_1489 - 2:word32], out dx_2036, out di_2037, out ds_1505)
	Mem1516[ss:sp_1489:word16] = Mem1500[ds_1505:0x29D1:word16]
	Mem1519[ss:sp_1489 - 2:word16] = Mem1516[ds_1505:0x29CF:word16]
	Mem1522[ss:sp_1489 - 4:word16] = Mem1519[ds_1505:0x2A09:word16]
	Mem1525[ss:sp_1489 - 6:word16] = Mem1522[ds_1505:0x2A07:word16]
	fn0800_409C(ds_1505, Mem1525[ss:sp_1489 - 6:word16], Mem1525[ss:sp_1489 - 4:word16], Mem1525[ss:sp_1489 - 2:word32], out dx_2038, out di_2039, out ds_1299)
	sp_1442 = sp_1489 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_181E:
	word16 sp_1543 = sp_1442 - 2
	Mem1545[ss:sp_1543:word16] = Mem1540[ds_1299:0x2A09:word16]
	Mem1548[ss:sp_1543 - 2:word16] = Mem1545[ds_1299:0x2A07:word16]
	Mem1551[ss:sp_1543 - 4:word16] = Mem1548[ds_1299:0x29D1:word16]
	Mem1554[ss:sp_1543 - 6:word16] = Mem1551[ds_1299:0x29CF:word16]
	Mem1557[ss:sp_1543 - 8:word16] = Mem1554[ds_1299:0x29E5:word16]
	Mem1560[ss:sp_1543 - 10:word16] = Mem1557[ds_1299:0x29E3:word16]
	fn0800_3B0A(Mem1560[ss:sp_1543 - 2:word16], Mem1560[ss:sp_1543:word16], out dx_2041, out bp_1340, out si_2042, out di_2043, out ds_1299)
	word16 sp_1570 = <invalid>
	sp_1278 = sp_1570 + 0x000C
	si_1214 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_183F:
	word16 sp_1582 = sp_1278 - 2
	Mem1584[ss:sp_1582:word16] = Mem1579[ds_1299:0x29D1:word16]
	Mem1587[ss:sp_1582 - 2:word16] = Mem1584[ds_1299:0x29CF:word16]
	Mem1590[ss:sp_1582 - 4:word16] = Mem1587[ds_1299:0x29ED:word16]
	Mem1593[ss:sp_1582 - 6:word16] = Mem1590[ds_1299:0x29EB:word16]
	word16 di_1597
	selector ds_1598
	fn0800_409C(ds_1299, Mem1593[ss:sp_1582 - 6:word16], Mem1593[ss:sp_1582 - 4:word16], Mem1593[ss:sp_1582 - 2:word32], out dx_2027, out di_1597, out ds_1598)
	Mem1609[ss:sp_1582:word16] = Mem1593[ds_1598:0x29E5:word16]
	Mem1612[ss:sp_1582 - 2:word16] = Mem1609[ds_1598:0x29E3:word16]
	fn0800_A614(ds_1598, Mem1612[ss:sp_1582 - 2:segptr32], out cx_2028, out dx_2029, out ds_1618)
	Mem1626[ss:sp_1582:word16] = ds_1618
	Mem1629[ss:sp_1582 - 2:word16] = 0x4541
	Mem1637[ss:sp_1582 - 4:word16] = si_1214
	word16 di_1641
	word16 dx_1642
	word16 cx_1640 = fn0800_0ABC(di_1597, ds_1618, Mem1637[ss:sp_1582 - 4:word16], Mem1637[ss:sp_1582 - 2:word32], out dx_1642, out di_1641)
	ptr32 es_bx_1651 = Mem1637[ds_1618:0x2E51:segptr32]
	dx_1663 = DPB(DPB(dx_1642, Mem1637[es_bx_1651 + 0x0005:byte], 0), 0x00, 8) (alias)
	sp_1650 = sp_1582 + 0x0002
	word16 bx_1653 = (word16) es_bx_1651
	cx_1672 = DPB(cx_1640, 0x08, 0) (alias)
	si_di_1970 = SEQ(si_1214, di_1641) (alias)
	branch (DPB(DPB(ax_1638, Mem1637[es_bx_1651 + 0x0004:byte], 0), 0x00, 8) << 0x08) + dx_1663 <u 0xFF8C l0800_1897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188A:
	Mem1668[ss:sp_1582:word16] = ds_1618
	Mem1671[ss:sp_1582 - 2:word16] = 0x0952
	fn0800_B2EF(cx_1672, dx_1663, bx_1653, ds_1618, Mem1671[ss:sp_1582 - 2:word32], out si_2031, out di_2032)
	sp_1681 = sp_1582 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18A9:
	word16 sp_1687 = sp_1681 - 2
	Mem1689[ss:sp_1687:word16] = Mem1684[ds_1618:0x29DD:word16]
	Mem1692[ss:sp_1687 - 2:word16] = Mem1689[ds_1618:0x29DB:word16]
	selector ds_1698
	fn0800_A614(ds_1618, Mem1692[ss:sp_1687 - 2:segptr32], out cx_2016, out dx_2017, out ds_1698)
	Mem1706[ss:sp_1687:word16] = ds_1698
	Mem1709[ss:sp_1687 - 2:word16] = 0x4477
	fn0800_8F7F(0x4477, ds_1698, Mem1709[ss:sp_1687 - 2:segptr32])
	selector ds_1722
	word16 bp_1726 = fn0800_1E5E(ds_1698, out ds_1722)
	Mem1733[ss:sp_1687:word16] = Mem1709[ds_1722:0x29D1:word16]
	Mem1736[ss:sp_1687 - 2:word16] = Mem1733[ds_1722:0x29CF:word16]
	word16 dx_1741
	selector ds_1742
	fn0800_A614(ds_1722, Mem1736[ss:sp_1687 - 2:segptr32], out cx_2018, out dx_1741, out ds_1742)
	bpOut = Mem1736[ss:bp_1726:word16]
	dsOut = ds_1742
	return dx_1741
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_153D:
	word16 sp_1757 = sp_408 - 2
	Mem1758[ss:sp_1757:word16] = Mem1755[ds_399:0x29D1:word16]
	Mem1761[ss:sp_1757 - 2:word16] = Mem1758[ds_399:0x29CF:word16]
	word16 dx_1766
	selector ds_1767
	fn0800_A614(ds_399, Mem1761[ss:sp_1757 - 2:segptr32], out cx_2014, out dx_1766, out ds_1767)
	bpOut = Mem1761[ss:bp_1777:word16]
	dsOut = ds_1767
	return dx_1766
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_12E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_18D9(word16 cx, word16 dx, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_18D9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18D9:
	fn0800_B2EF(cx, dx, Mem18[ds:0x2A25:word16] << 0x0002, ds, SEQ(ds, 0x096C), out si_432, out di_433)
	word32 si_di_429 = <invalid>
	word16 dx_62
	selector ds_104
	word16 ax_57 = fn0800_AA7E(si_di_429, ds, SEQ(ds, 0x4348), SEQ(ds, 0x097D), out cx_434, out dx_62, out si_435, out di_436, out ds_104)
	Mem70[ds_104:0x29D1:word16] = dx_62
	Mem71[ds_104:0x29CF:word16] = ax_57
	branch (ax_57 | dx_62) != 0x0000 l0800_192A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_191B:
	fn0800_0D24(ds_104, 0x0007, SEQ(ds_104, 0x4348), out cx_437, out dx_438, out bx_439, out si_440, out di_441, out es_442, out ds_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_192A:
	word16 bp_106
	word16 si_113
	word16 di_109
	selector ds_110
	word16 dx_111
	word16 cx_108 = fn0800_1CF6(ds_104, 0x0001, out dx_111, out bp_106, out si_113, out di_109, out ds_110)
	word16 sp_114 = <invalid>
	Mem124[ss:sp_114:word16] = 0x0000
	Mem126[ss:sp_114 - 2:word16] = 0x0000
	fn0800_2DBF(ds_110, Mem126[ss:sp_114 - 2:word16], Mem126[ss:sp_114:word16])
	word16 sp_128 = sp_114 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19BC:
	word16 sp_131 = sp_128 - 2
	Mem133[ss:sp_131:word16] = ss
	Mem137[ss:sp_131 - 2:word16] = bp_106 - 0x006E
	Mem139[ss:sp_131 - 4:word16] = ss
	Mem142[ss:sp_131 - 6:word16] = bp_106 - 0x0008
	Mem144[ss:sp_131 - 8:word16] = ss
	Mem147[ss:sp_131 - 10:word16] = bp_106 - 0x0004
	selector ds_159
	branch fn0800_29C5(cx_108, dx_111, si_113, di_109, ds_110, Mem147[ss:sp_131 - 10:segptr32], Mem147[ss:sp_131 - 6:segptr32], Mem147[ss:sp_131 - 2:segptr32], out ds_159) == 0x0000 l0800_19D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D8:
	selector ds_175
	word16 bp_179 = fn0800_1E5E(ds_159, out ds_175)
	Mem186[ss:sp_131:word16] = Mem147[ds_175:0x29D1:word16]
	Mem189[ss:sp_131 - 2:word16] = Mem186[ds_175:0x29CF:word16]
	word16 dx_194
	selector ds_195
	fn0800_A614(ds_175, Mem189[ss:sp_131 - 2:segptr32], out cx_443, out dx_194, out ds_195)
	bpOut = Mem189[ss:bp_179:word16]
	dsOut = ds_195
	return dx_194
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_18D9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1940:
	Mem207[ss:sp_131:word16] = ss
	Mem210[ss:sp_131 - 2:word16] = bp_106 - 0x006E
	fn0800_0C93(si_113, di_109, ds_159, Mem210[ss:sp_131 - 2:word32], out dx_444)
	Mem226[ss:sp_131:word16] = Mem210[ss:bp_106 - 0x0006:word16]
	Mem229[ss:sp_131 - 2:word16] = Mem226[ss:bp_106 - 0x0008:word16]
	fn0800_23EC(ds_159, Mem229[ss:sp_131 - 2:segptr32], out bp_106, out si_113, out di_445, out ds_110)
	word16 sp_239 = <invalid>
	Mem250[ss:sp_239 + 0x0002:word16] = Mem229[ss:bp_106 - 0x0006:word16]
	Mem253[ss:sp_239:word16] = Mem250[ss:bp_106 - 0x0008:word16]
	fn0800_22FE(ds_110, Mem253[ss:sp_239:segptr32])
	ptr32 es_di_265 = Mem253[ss:bp_106 - 0x0004:segptr32]
	selector es_303 = SLICE(es_di_265, selector, 16)
	word16 di_267 = (word16) es_di_265 + 0x0002
	word16 cx_271 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196E:
	branch cx_271 == 0x0000 l0800_1970
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196E_1:
	di_267 = di_267 + 0x0001
	cx_271 = cx_271 - 0x0001
	branch Mem253[es_303:di_267:byte] == 0x00 l0800_196E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1970:
	word16 cx_282 = ~cx_271
	word16 di_285 = di_267 - cx_282
	bool Z_295 = SLICE(cond(di_285), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1976:
	branch cx_282 == 0x0000 l0800_1978
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1976_2:
	Z_295 = SLICE(cond(0x00 - Mem253[es_303:di_285:byte]), bool, 2) (alias)
	di_285 = di_285 + 0x0001
	cx_282 = cx_282 - 0x0001
	branch Mem253[es_303:di_285:byte] == 0x00 l0800_1976
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1978:
	branch Z_295 l0800_1981
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_197A:
	di_285 = 0x0001
	es_303 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1981:
	word16 di_306 = di_285 - 0x0001
	branch Mem253[es_303:di_306 + 0x0001:byte] != 0x00 l0800_19AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_198D:
	word16 dx_321 = Mem253[ds_110:0x2E51:word16]
	branch Mem253[ds_110:0x2E53:word16] != Mem253[ss:bp_106 - 0x0002:word16] l0800_19A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_199C:
	branch dx_321 + 0x0008 == Mem253[ss:bp_106 - 0x0004:word16] l0800_19AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19A1:
	Mem348[ss:sp_239 + 0x0002:word16] = Mem253[ss:bp_106 - 0x0002:word16]
	Mem351[ss:sp_239:word16] = Mem348[ss:bp_106 - 0x0004:word16]
	fn0800_2201(ds_110, Mem351[ss:sp_239:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19AD:
	Mem368[ss:sp_239 + 0x0002:word16] = ss
	Mem372[ss:sp_239:word16] = bp_106 - 0x006E
	Mem375[ss:sp_239 - 0x0002:word16] = 0x000D
	cx_108 = fn0800_0ABC(di_306, ds_110, Mem375[ss:sp_239 - 0x0002:word16], Mem375[ss:sp_239:word32], out dx_111, out di_109)
	sp_128 = sp_239 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_19EE(word16 cx, word16 dx, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: bp ds dx sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_19EE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19EE:
	fn0800_B2EF(cx, dx, Mem21[ds:0x2A25:word16] << 0x0002, ds, SEQ(ds, 0x0986), out si_1238, out di_1239)
	word32 si_di_1232 = <invalid>
	word16 dx_65
	selector ds_102
	word16 ax_60 = fn0800_AA7E(si_di_1232, ds, SEQ(ds, 0x4348), SEQ(ds, 0x0997), out cx_1240, out dx_65, out si_1241, out di_1242, out ds_102)
	Mem73[ds_102:0x29D1:word16] = dx_65
	Mem74[ds_102:0x29CF:word16] = ax_60
	branch (ax_60 | dx_65) != 0x0000 l0800_1A40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A31:
	fn0800_0D24(ds_102, 0x0007, SEQ(ds_102, 0x4348), out cx_1243, out dx_1244, out bx_1245, out si_1246, out di_1247, out es_1248, out ds_102)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A40:
	branch Mem103[ds_102:0x2A27:word16] != Mem103[ds_102:0x269A:word16] l0800_1A7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A49:
	ptr32 es_bx_115 = Mem112[ds_102:0x269C:segptr32]
	Mem119[es_bx_115 + 0x0006:word16] = ss
	Mem120[es_bx_115 + 0x0004:word16] = fp - 0x000E
	Mem121[ds_102:0x2A27:word16] = 0x0001
	Mem122[ds_102:0x269A:word16] = 0x0002
	Mem123[ds_102:0x2A1B:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A7D:
	fn0800_2DBF(ds_102, 0x0001, 0x0000)
	word16 sp_151 = <invalid>
	word16 bp_1064
	word16 si_1095
	word16 di_1128
	selector ds_1089
	word16 dx_1129
	word16 cx_1127 = fn0800_1CF6(ds_102, 0x0001, out dx_1129, out bp_1064, out si_1095, out di_1128, out ds_1089)
	word16 sp_1137 = sp_151 + 0x0002
	branch Mem141[ds_1089:0x2A25:word16] == 0x0007 l0800_1A9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A9E:
	Mem160[ss:sp_151:word16] = ds_1089
	Mem163[ss:sp_151 - 2:word16] = 0x099B
	Mem165[ss:sp_151 - 4:word16] = ds_1089
	Mem168[ss:sp_151 - 6:word16] = 0x44DC
	si_1095 = fn0800_37BE(cx_1127, dx_1129, ds_1089, Mem168[ss:sp_151 - 6:word32], out di_1128)
	sp_1137 = sp_151 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A9B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CB4:
	word16 sp_182 = sp_1137 - 2
	Mem184[ss:sp_182:word16] = ss
	Mem188[ss:sp_182 - 2:word16] = bp_1064 - 0x0072
	Mem190[ss:sp_182 - 4:word16] = ss
	Mem193[ss:sp_182 - 6:word16] = bp_1064 - 0x0008
	Mem195[ss:sp_182 - 8:word16] = ss
	Mem198[ss:sp_182 - 10:word16] = bp_1064 - 0x0004
	selector ds_210
	branch fn0800_29C5(cx_1127, dx_1129, si_1095, di_1128, ds_1089, Mem198[ss:sp_182 - 10:segptr32], Mem198[ss:sp_182 - 6:segptr32], Mem198[ss:sp_182 - 2:segptr32], out ds_210) == 0x0000 l0800_1CD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CD0:
	Mem224[ss:sp_182:word16] = Mem198[ds_210:0x29D1:word16]
	Mem227[ss:sp_182 - 2:word16] = Mem224[ds_210:0x29CF:word16]
	selector ds_233
	word16 dx_1220
	fn0800_A614(ds_210, Mem227[ss:sp_182 - 2:segptr32], out cx_1249, out dx_1220, out ds_233)
	branch Mem227[ds_233:0x2A25:word16] != 0x0007 l0800_1CF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CE5:
	Mem242[ss:sp_182:word16] = ds_233
	Mem245[ss:sp_182 - 2:word16] = 0x44DC
	dx_1220 = fn0800_8F7F(0x44DC, ds_233, Mem245[ss:sp_182 - 2:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CF0:
	bpOut = Mem256[ss:bp_1064:word16]
	dsOut = ds_233
	return dx_1220
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_19EE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CCD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AB1:
	Mem265[ss:sp_182:word16] = ss
	Mem268[ss:sp_182 - 2:word16] = bp_1064 - 0x0072
	fn0800_0C93(si_1095, di_1128, ds_210, Mem268[ss:sp_182 - 2:word32], out dx_1250)
	Mem284[ss:sp_182:word16] = Mem268[ss:bp_1064 - 0x0006:word16]
	Mem287[ss:sp_182 - 2:word16] = Mem284[ss:bp_1064 - 0x0008:word16]
	selector ds_1005
	word16 si_293 = fn0800_24FE(ds_210, Mem287[ss:sp_182 - 2:segptr32], out ds_1005)
	Mem305[ss:sp_182:word16] = 0x0000
	ptr32 es_di_306 = Mem305[ss:bp_1064 - 0x0008:segptr32]
	selector es_1140 = SLICE(es_di_306, selector, 16)
	word16 di_1141 = (word16) es_di_306
	word16 cx_307 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD1:
	branch cx_307 == 0x0000 l0800_1AD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD1_1:
	di_1141 = di_1141 + 0x0001
	cx_307 = cx_307 - 0x0001
	branch Mem305[es_1140:di_1141:byte] == 0x00 l0800_1AD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD3:
	word16 cx_318 = ~cx_307
	word16 di_1262 = di_1141 - cx_318
	bool Z_331 = SLICE(cond(di_1262), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD9:
	branch cx_318 == 0x0000 l0800_1ADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD9_2:
	Z_331 = SLICE(cond(0x00 - Mem305[es_1140:di_1262:byte]), bool, 2) (alias)
	di_1262 = di_1262 + 0x0001
	cx_318 = cx_318 - 0x0001
	branch Mem305[es_1140:di_1262:byte] == 0x00 l0800_1AD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADB:
	branch Z_331 l0800_1AE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADD:
	di_1262 = 0x0001
	es_1140 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE4:
	ptr32 es_di_363 = Mem305[ss:bp_1064 - 0x0008:segptr32]
	Mem370[ss:sp_182 - 2:word16] = (int16) Mem305[es_1140:di_1262:byte] << 0x08
	selector es_1146 = SLICE(es_di_363, selector, 16)
	word16 di_1147 = (word16) es_di_363
	word16 cx_374 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFB:
	branch cx_374 == 0x0000 l0800_1AFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFB_1:
	di_1147 = di_1147 + 0x0001
	cx_374 = cx_374 - 0x0001
	branch Mem370[es_1146:di_1147:byte] == 0x00 l0800_1AFB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFD:
	word16 cx_385 = ~cx_374
	word16 di_1264 = di_1147 - cx_385
	bool Z_398 = SLICE(cond(di_1264), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B03:
	branch cx_385 == 0x0000 l0800_1B05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B03_2:
	Z_398 = SLICE(cond(0x00 - Mem370[es_1146:di_1264:byte]), bool, 2) (alias)
	di_1264 = di_1264 + 0x0001
	cx_385 = cx_385 - 0x0001
	branch Mem370[es_1146:di_1264:byte] == 0x00 l0800_1B03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B05:
	branch Z_398 l0800_1B0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B07:
	di_1264 = 0x0001
	es_1146 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B0E:
	ptr32 es_di_441 = Mem370[ss:bp_1064 - 0x0008:segptr32]
	Mem443[ss:sp_182 - 2:word16] = Mem370[ss:sp_182 - 2:word16] + DPB(DPB(es_1146, Mem370[es_1146:di_1264 + 0x0001:byte], 0), 0x00, 8)
	Mem445[ss:sp_182 - 4:word16] = 0x0000
	selector es_1152 = SLICE(es_di_441, selector, 16)
	word16 di_1153 = (word16) es_di_441
	word16 cx_446 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B26:
	branch cx_446 == 0x0000 l0800_1B28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B26_1:
	di_1153 = di_1153 + 0x0001
	cx_446 = cx_446 - 0x0001
	branch Mem445[es_1152:di_1153:byte] == 0x00 l0800_1B26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B28:
	word16 cx_457 = ~cx_446
	word16 di_1266 = di_1153 - cx_457
	bool Z_470 = SLICE(cond(di_1266), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2E:
	branch cx_457 == 0x0000 l0800_1B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2E_2:
	Z_470 = SLICE(cond(0x00 - Mem445[es_1152:di_1266:byte]), bool, 2) (alias)
	di_1266 = di_1266 + 0x0001
	cx_457 = cx_457 - 0x0001
	branch Mem445[es_1152:di_1266:byte] == 0x00 l0800_1B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B30:
	branch Z_470 l0800_1B39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B32:
	di_1266 = 0x0001
	es_1152 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B39:
	ptr32 es_di_502 = Mem445[ss:bp_1064 - 0x0008:segptr32]
	Mem509[ss:sp_182 - 6:word16] = (int16) Mem445[es_1152:di_1266 + 0x0002:byte] << 0x08
	selector es_1158 = SLICE(es_di_502, selector, 16)
	word16 di_1159 = (word16) es_di_502
	word16 cx_513 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B50:
	branch cx_513 == 0x0000 l0800_1B52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B50_1:
	di_1159 = di_1159 + 0x0001
	cx_513 = cx_513 - 0x0001
	branch Mem509[es_1158:di_1159:byte] == 0x00 l0800_1B50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B52:
	word16 cx_524 = ~cx_513
	word16 di_1268 = di_1159 - cx_524
	bool Z_537 = SLICE(cond(di_1268), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B58:
	branch cx_524 == 0x0000 l0800_1B5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B58_2:
	Z_537 = SLICE(cond(0x00 - Mem509[es_1158:di_1268:byte]), bool, 2) (alias)
	di_1268 = di_1268 + 0x0001
	cx_524 = cx_524 - 0x0001
	branch Mem509[es_1158:di_1268:byte] == 0x00 l0800_1B58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B5A:
	branch Z_537 l0800_1B63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B5C:
	di_1268 = 0x0001
	es_1158 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B63:
	word32 si_di_1233
	word16 di_548 = di_1268 - 0x0001
	word16 ax_574 = Mem509[ss:sp_182 - 4:word16] + (Mem509[ss:sp_182 - 6:word16] + DPB(DPB(es_1158, Mem509[es_1158:di_548 + 0x0004:byte], 0), 0x00, 8))
	Mem582[ss:sp_182 - 2:word16] = Mem509[ss:sp_182 - 2:word16] + (ax_574 <u 0x0000)
	Mem584[ss:sp_182 - 4:word16] = ax_574
	Mem607[ss:sp_182 - 6:word16] = Mem584[ds_1005:0x29D1:word16]
	Mem610[ss:sp_182 - 8:word16] = Mem607[ds_1005:0x29CF:word16]
	word16 dx_1056
	fn0800_ACB3(ds_1005, Mem610[ss:sp_182 - 8:segptr32], Mem610[ss:sp_182 - 4:ui32], Mem610[ss:sp_182:word16], out cx_1251, out dx_1056, out bx_1252)
	branch Mem610[ds_1005:0x2A25:word16] != 0x0007 l0800_1B92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B92:
	Mem624[ss:sp_182:word16] = ds_1005
	selector es_625 = Mem624[ss:sp_182:selector]
	Mem629[ss:sp_182:word16] = es_625
	Mem631[ss:sp_182 - 2:word16] = 0x44DC
	word16 di_1269 = 0x427E
	word16 cx_636 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA1:
	branch cx_636 == 0x0000 l0800_1BA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA1_1:
	di_1269 = di_1269 + 0x0001
	cx_636 = cx_636 - 0x0001
	branch Mem631[es_625:di_1269:byte] == 0x00 l0800_1BA1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA3:
	word16 di_1001 = Mem631[ss:sp_182 - 2:word16]
	selector es_662 = Mem631[ss:sp_182:selector]
	Mem667[ss:sp_182:word16] = ds_1005
	word16 cx_647 = ~cx_636
	word16 cx_1002 = cx_647 >>u 0x0001
	word16 si_1000 = di_1269 - cx_647
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB2:
	branch cx_1002 == 0x0000 l0800_1BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB4:
	word16 cx_671 = cx_1002 * 0x0002 + (cx_647 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB6:
	branch cx_671 == 0x0000 l0800_1BB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB8:
	selector ds_677 = Mem676[ss:sp_182:selector]
	branch Mem676[ds_677:0x2A25:word16] != 0x0008 l0800_1C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC0:
	branch Mem676[ds_677:0x427E:byte] == 0x00 l0800_1BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC7:
	branch Mem676[ss:bp_1064 - 0x0072:byte] != 0x5C l0800_1BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BFC:
	Mem689[ss:sp_182:word16] = ss
	Mem693[ss:sp_182 - 2:word16] = bp_1064 - 0x0072
	Mem696[ss:sp_182 - 4:word16] = ds_677
	selector es_697 = Mem696[ss:sp_182 - 4:selector]
	word16 di_1270 = 0x44DC
	word16 cx_703 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0B:
	branch cx_703 == 0x0000 l0800_1C0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0B_1:
	di_1270 = di_1270 + 0x0001
	cx_703 = cx_703 - 0x0001
	branch Mem696[es_697:di_1270:byte] == 0x00 l0800_1C0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0D:
	word16 cx_714 = ~cx_703
	word16 di_1271 = di_1270 - cx_714
	bool Z_727 = SLICE(cond(di_1271), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C13:
	branch cx_714 == 0x0000 l0800_1C15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C13_2:
	Z_727 = SLICE(cond(0x00 - Mem696[es_697:di_1271:byte]), bool, 2) (alias)
	di_1271 = di_1271 + 0x0001
	cx_714 = cx_714 - 0x0001
	branch Mem696[es_697:di_1271:byte] == 0x00 l0800_1C13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C15:
	branch Z_727 l0800_1C1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C17:
	di_1271 = 0x0001
	es_697 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C1E:
	Mem754[ss:sp_182 - 4:word16] = es_697
	word16 di_738 = di_1271 - 0x0001
	Mem756[ss:sp_182 - 6:word16] = di_738
	fn0800_3509(si_1000, di_738, Mem756[ss:sp_182 - 6:word16], Mem756[ss:sp_182 - 4:selector], Mem756[ss:sp_182 - 2:word32], out bx_1260)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BCD:
	Mem777[ss:sp_182:word16] = ss
	Mem780[ss:sp_182 - 2:word16] = bp_1064 - 0x0071
	Mem782[ss:sp_182 - 4:word16] = ds_677
	selector es_783 = Mem782[ss:sp_182 - 4:selector]
	word16 di_1272 = 0x44DC
	word16 cx_789 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDC:
	branch cx_789 == 0x0000 l0800_1BDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDC_1:
	di_1272 = di_1272 + 0x0001
	cx_789 = cx_789 - 0x0001
	branch Mem782[es_783:di_1272:byte] == 0x00 l0800_1BDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDE:
	word16 cx_800 = ~cx_789
	word16 di_1273 = di_1272 - cx_800
	bool Z_813 = SLICE(cond(di_1273), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE4:
	branch cx_800 == 0x0000 l0800_1BE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE4_2:
	Z_813 = SLICE(cond(0x00 - Mem782[es_783:di_1273:byte]), bool, 2) (alias)
	di_1273 = di_1273 + 0x0001
	cx_800 = cx_800 - 0x0001
	branch Mem782[es_783:di_1273:byte] == 0x00 l0800_1BE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE6:
	branch Z_813 l0800_1BEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE8:
	di_1273 = 0x0001
	es_783 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BEF:
	Mem840[ss:sp_182 - 4:word16] = es_783
	word16 di_824 = di_1273 - 0x0001
	Mem842[ss:sp_182 - 6:word16] = di_824
	fn0800_3509(si_1000, di_824, Mem842[ss:sp_182 - 6:word16], Mem842[ss:sp_182 - 4:selector], Mem842[ss:sp_182 - 2:word32], out bx_1259)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C29:
	word16 sp_861 = sp_1137 - 2
	Mem874[ss:sp_861:word16] = ds_677
	Mem877[ss:sp_861 - 2:word16] = 0x44DC
	word16 si_884
	fn0800_3678(ds_677, Mem877[ss:sp_861 - 2:segptr32], out dx_1258, out si_884, out ds_1005)
	Mem891[ss:sp_861:word16] = ss
	Mem905[ss:sp_861 - 2:word16] = bp_1064 - 0x0072
	Mem907[ss:sp_861 - 4:word16] = ds_1005
	selector es_908 = Mem907[ss:sp_861 - 4:selector]
	word16 di_1274 = 0x44DC
	word16 cx_914 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C43:
	branch cx_914 == 0x0000 l0800_1C45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C43_1:
	di_1274 = di_1274 + 0x0001
	cx_914 = cx_914 - 0x0001
	branch Mem907[es_908:di_1274:byte] == 0x00 l0800_1C43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C45:
	word16 cx_925 = ~cx_914
	word16 di_1275 = di_1274 - cx_925
	bool Z_938 = SLICE(cond(di_1275), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4B:
	branch cx_925 == 0x0000 l0800_1C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4B_2:
	Z_938 = SLICE(cond(0x00 - Mem907[es_908:di_1275:byte]), bool, 2) (alias)
	di_1275 = di_1275 + 0x0001
	cx_925 = cx_925 - 0x0001
	branch Mem907[es_908:di_1275:byte] == 0x00 l0800_1C4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4D:
	branch Z_938 l0800_1C56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4F:
	di_1275 = 0x0001
	es_908 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C56:
	Mem965[ss:sp_861 - 4:word16] = es_908
	word16 di_949 = di_1275 - 0x0001
	Mem967[ss:sp_861 - 6:word16] = di_949
	dx_1056 = fn0800_35A3(si_884, di_949, Mem967[ss:sp_861 - 6:word16], Mem967[ss:sp_861 - 4:selector], Mem967[ss:sp_861 - 2:word32])
	si_di_1233 = SEQ(si_884, di_949) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB6_1:
	Mem989[es_662:di_1001:byte] = Mem676[es_625:si_1000:byte]
	si_1000 = si_1000 + 0x0001
	di_1001 = di_1001 + 0x0001
	cx_671 = cx_671 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB2_2:
	Mem999[es_662:di_1001:word16] = Mem995[es_625:si_1000:word16]
	si_1000 = si_1000 + 0x0002
	di_1001 = di_1001 + 0x0002
	cx_1002 = cx_1002 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B8F:
	si_di_1233 = SEQ(si_293, di_548) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C61:
	word16 sp_1004 = sp_1137 - 2
	Mem1012[ss:sp_1004:word16] = ds_1005
	Mem1015[ss:sp_1004 - 2:word16] = 0x09A8
	Mem1017[ss:sp_1004 - 4:word16] = ds_1005
	Mem1020[ss:sp_1004 - 6:word16] = 0x44DC
	selector ds_1047
	fn0800_4234(si_di_1233, ds_1005, Mem1020[ss:sp_1004 - 6:word32], Mem1020[ss:sp_1004 - 2:word32], out si_1253, out di_1254, out ds_1047)
	Mem1057[ds_1047:0x29E1:word16] = dx_1056
	Mem1058[ds_1047:0x29DF:word16] = 0x44DC
	word16 dx_1060 = Mem1058[ds_1047:0x29CF:word16]
	Mem1061[ds_1047:0x29E5:word16] = Mem1058[ds_1047:0x29D1:word16]
	Mem1062[ds_1047:0x29E3:word16] = dx_1060
	word16 di_1067
	selector ds_1068
	word16 ax_1063 = fn0800_5374(ds_1047, out dx_1255, out bp_1064, out di_1067, out ds_1068)
	word16 sp_1072 = <invalid>
	Mem1080[ss:sp_1072 - 2:word16] = Mem1062[ds_1068:0x29E1:word16]
	Mem1083[ss:sp_1072 - 4:word16] = Mem1080[ds_1068:0x29DF:word16]
	fn0800_A614(ds_1068, Mem1083[ss:sp_1072 - 4:segptr32], out cx_1256, out dx_1257, out ds_1089)
	si_1095 = ax_1063
	branch ax_1063 == 0x0000 l0800_1CA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C9D:
	Mem1100[ss:sp_1072 - 2:word16] = ds_1089
	Mem1103[ss:sp_1072 - 4:word16] = 0x44DC
	fn0800_8F7F(0x44DC, ds_1089, Mem1103[ss:sp_1072 - 4:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA8:
	Mem1115[ss:sp_1072 - 2:word16] = ss
	Mem1119[ss:sp_1072 - 4:word16] = bp_1064 - 0x0072
	Mem1122[ss:sp_1072 - 6:word16] = ax_1063
	cx_1127 = fn0800_0ABC(di_1067, ds_1089, Mem1122[ss:sp_1072 - 6:word16], Mem1122[ss:sp_1072 - 4:word32], out dx_1129, out di_1128)
	sp_1137 = sp_1072
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1CF6(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: bp cx di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_1CF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CF6:
	Mem18[ds:0x45A8:word16] = 0x0000
	Mem19[ds:0x45A6:word16] = 0x0000
	Mem20[ds:0x29ED:word16] = 0x0000
	Mem21[ds:0x29EB:word16] = 0x0000
	word16 ax_37 = fn0800_ACB3(ds, SEQ(Mem30[ds:0x29D1:word16], Mem33[ds:0x29CF:word16]), 0xFFFFFFFC, 0x0002, out cx_497, out dx_498, out bx_499)
	selector ds_102
	word16 dx_58 = fn0800_3E5D(ds, SEQ(Mem36[ds:0x29D1:word16], Mem50[ds:0x29CF:word16]), out di_500, out ds_102)
	Mem66[ds_102:0x29ED:word16] = dx_58
	Mem67[ds_102:0x29EB:word16] = ax_37
	fn0800_4194(ds_102, SEQ(Mem67[ds_102:0x29D1:word16], Mem70[ds_102:0x29CF:word16]))
	branch dx_58 >u Mem73[ds_102:0x29ED:word16] l0800_1D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D52:
	branch dx_58 <u Mem73[ds_102:0x29ED:word16] l0800_1D5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D54:
	branch ax_37 >=u Mem73[ds_102:0x29EB:word16] l0800_1D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D5A:
	fn0800_0D24(ds_102, 0x000B, SEQ(ds_102, 0x4348), out cx_505, out dx_506, out bx_507, out si_508, out di_509, out es_510, out ds_102)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D69:
	word16 ax_133 = fn0800_ACB3(ds_102, SEQ(Mem126[ds_102:0x29D1:word16], Mem129[ds_102:0x29CF:word16]), SEQ(Mem119[ds_102:0x29ED:word16], Mem123[ds_102:0x29EB:word16]), 0x0000, out cx_501, out dx_502, out bx_503)
	selector ds_153
	branch fn0800_3E5D(ds_102, SEQ(Mem132[ds_102:0x29D1:word16], Mem146[ds_102:0x29CF:word16]), out di_504, out ds_153) != 0x524E l0800_1D9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D96:
	branch ax_133 == 0x4341 l0800_1DAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D9B:
	fn0800_0D24(ds_153, 0x000B, SEQ(ds_153, 0x4348), out cx_511, out dx_512, out bx_513, out si_514, out di_515, out es_516, out ds_153)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DAA:
	word16 bp_249
	word16 si_256
	selector ds_253
	word16 sp_262
	selector ds_205
	fn0800_3E27(ds_153, SEQ(Mem192[ds_153:0x29D1:word16], Mem197[ds_153:0x29CF:word16]), out cx_517, out dx_518, out di_519, out ds_205)
	fn0800_3E27(ds_205, SEQ(Mem200[ds_205:0x29D1:word16], Mem217[ds_205:0x29CF:word16]), out cx_520, out dx_521, out di_522, out ds_523)
	branch wArg02 == 0x0000 l0800_1DE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DE4:
	word16 sp_257 = <invalid>
	word16 dx_254
	word16 ax_248 = fn0800_4311(out dx_254, out bp_249, out si_256, out di_524, out ds_253)
	Mem264[ds_253:0x2E53:word16] = dx_254
	Mem265[ds_253:0x2E51:word16] = ax_248
	sp_262 = sp_257 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DD1:
	word16 sp_282 = <invalid>
	word16 dx_279
	word16 ax_273 = fn0800_4311(out dx_279, out bp_249, out si_256, out di_525, out ds_253)
	Mem289[ds_253:0x2E53:word16] = dx_279
	Mem290[ds_253:0x2E51:word16] = ax_273
	sp_262 = sp_282 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DF8:
	word16 sp_295 = sp_262 - 2
	Mem297[ss:sp_295:word16] = 0x0000
	Mem301[ss:sp_295 - 2:word16] = Mem297[ds_253:0x29ED:word16]
	Mem304[ss:sp_295 - 4:word16] = Mem301[ds_253:0x29EB:word16]
	Mem307[ss:sp_295 - 6:word16] = Mem304[ds_253:0x29D1:word16]
	Mem310[ss:sp_295 - 8:word16] = Mem307[ds_253:0x29CF:word16]
	fn0800_ACB3(ds_253, Mem310[ss:sp_295 - 8:segptr32], Mem310[ss:sp_295 - 4:ui32], Mem310[ss:sp_295:word16], out cx_526, out dx_527, out bx_528)
	Mem323[ss:sp_295:word16] = Mem310[ds_253:0x29D1:word16]
	Mem326[ss:sp_295 - 2:word16] = Mem323[ds_253:0x29CF:word16]
	Mem331[ss:sp_295 - 4:word16] = 0x0000
	Mem334[ss:sp_295 - 6:word16] = si_256
	Mem337[ss:sp_295 - 8:word16] = Mem334[ds_253:0x2E53:word16]
	Mem340[ss:sp_295 - 10:word16] = Mem337[ds_253:0x2E51:word16]
	word16 si_348
	word16 di_344
	selector ds_345
	word16 cx_343 = (word16) fn0800_4110(ds_253, Mem340[ss:sp_295 - 10:word32], Mem340[ss:sp_295 - 6:word16], Mem340[ss:sp_295 - 4:word16], Mem340[ss:sp_295 - 2:word32], out si_348, out di_344, out ds_345)
	Mem356[ss:sp_295:word16] = 0x0000
	Mem360[ss:sp_295 - 2:word16] = si_348 - 0x0008
	word16 ax_361 = Mem360[ds_345:0x2E51:word16]
	Mem366[ss:sp_295 - 4:word16] = Mem360[ds_345:0x2E53:word16]
	Mem368[ss:sp_295 - 6:word16] = ax_361 + 0x0008
	word16 cx_392 = DPB(cx_343, cl_371, 0)
	byte cl_371
	word16 dx_372
	branch fn0800_2CCF(ds_345, Mem368[ss:sp_295 - 6:segptr32], Mem368[ss:sp_295 - 2:word16], Mem368[ss:sp_295:word16], out cl_371, out dx_372) == Mem368[ss:bp_249 - 0x0002:word16] l0800_1E59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E4A:
	Mem383[ss:sp_295:word16] = ds_345
	Mem386[ss:sp_295 - 2:word16] = 0x4348
	Mem389[ss:sp_295 - 4:word16] = 0x000D
	fn0800_0D24(ds_345, Mem389[ss:sp_295 - 4:word16], Mem389[ss:sp_295 - 2:segptr32], out cx_392, out dx_372, out bx_529, out si_530, out di_344, out es_531, out ds_345)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E59:
	word16 si_408 = Mem407[ss:sp_262:word16]
	word16 bp_411 = Mem407[ss:bp_249:word16]
	dxOut = dx_372
	bpOut = bp_411
	siOut = si_408
	diOut = di_344
	dsOut = ds_345
	return cx_392
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1CF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1E5E(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: bp ds
// Trashed: SCZO ax bp bx cx di ds dx es Top
// Preserved: D si sp
fn0800_1E5E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E5E:
	ptr32 es_bx_9 = Mem7[ds:0x2E51:segptr32]
	word16 ax_24 = (DPB(DPB(ax, Mem7[es_bx_9 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem7[es_bx_9 + 0x0005:byte], 0), 0x00, 8)
	word16 ax_41 = fn0800_2CCF(ds, SEQ(Mem32[ds:0x2E53:word16], Mem32[ds:0x2E51:word16] + 0x0008), ax_24 - 0x0008, 0x0000, out cl_335, out dx_336)
	ptr32 es_bx_54 = Mem40[ds:0x2E51:segptr32]
	Mem58[es_bx_54 + 0x0006:byte] = (byte) (ax_41 >>u 0x08)
	Mem60[es_bx_54 + 0x0007:byte] = (byte) ax_41
	word16 dx_65 = Mem63[ds:0x29EB:word16]
	fn0800_ACB3(ds, SEQ(Mem74[ds:0x29D1:word16], Mem77[ds:0x29CF:word16]), SEQ(Mem63[ds:0x29ED:word16] + (dx_65 <u 0x0004), dx_65 + 0x0004), 0x0000, out cx_337, out dx_338, out bx_339)
	word16 si_144 = ax_24
	word16 cx_100
	word16 di_101
	selector ds_102
	word16 ax_98 = fn0800_3E27(ds, SEQ(Mem80[ds:0x29D1:word16], Mem94[ds:0x29CF:word16]), out cx_100, out dx_340, out di_101, out ds_102)
	branch ax_24 <=u ax_98 l0800_1EF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1EF7:
	branch ax_24 >=u ax_98 l0800_1F19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1EFB:
	fn0800_3C99(ax_24, di_101, ds_102, SEQ(Mem129[ds_102:0x29D1:word16], Mem132[ds_102:0x29CF:word16]), Mem126[ds_102:0x29EB:word16], Mem123[ds_102:0x29ED:word16], out bp, out si_144, out ds_102)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ED7:
	bp = fn0800_3BC3(cx_100, 0x0000, ds_102, SEQ(Mem168[ds_102:0x29D1:word16], Mem171[ds_102:0x29CF:word16]), SEQ(Mem162[ds_102:0x29ED:word16], Mem165[ds_102:0x29EB:word16]), out si_144, out ds_102)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F19:
	fn0800_ACB3(ds_102, SEQ(Mem205[ds_102:0x29D1:word16], Mem208[ds_102:0x29CF:word16]), SEQ(Mem198[ds_102:0x29ED:word16], Mem202[ds_102:0x29EB:word16]), 0x0000, out cx_341, out dx_342, out bx_343)
	selector ds_246
	fn0800_4152(ds_102, SEQ(Mem235[ds_102:0x2E53:word16], Mem238[ds_102:0x2E51:word16]), si_144, 0x0000, SEQ(Mem211[ds_102:0x29D1:word16], Mem224[ds_102:0x29CF:word16]), out si_344, out di_345, out ds_246)
	selector ds_265
	fn0800_4346(ds_246, Mem241[ds_246:0x2E53:word16], out cx_346, out dx_347, out bx_348, out ds_265)
	dsOut = ds_265
	return bp
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1E5E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1F5C(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_1F5C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F5C:
	selector es_362 = SLICE(ptrArg02, selector, 16)
	word16 di_24 = (word16) ptrArg02
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6C:
	branch cx_20 == 0x0000 l0800_1F6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6C_1:
	di_24 = di_24 + 0x0001
	cx_20 = cx_20 - 0x0001
	branch Mem15[es_362:di_24:byte] == 0x00 l0800_1F6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6E:
	word16 cx_31 = ~cx_20
	word16 di_34 = di_24 - cx_31
	bool Z_44 = SLICE(cond(di_34), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F75:
	branch cx_31 == 0x0000 l0800_1F77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F75_2:
	Z_44 = SLICE(cond(0x3A - Mem15[es_362:di_34:byte]), bool, 2) (alias)
	di_34 = di_34 + 0x0001
	cx_31 = cx_31 - 0x0001
	branch Mem15[es_362:di_34:byte] == 0x3A l0800_1F75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F77:
	branch Z_44 l0800_1F80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F79:
	di_34 = 0x0001
	es_362 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F80:
	word16 ax_117 = es_362
	branch (di_34 - 0x0001 | es_362) == 0x0000 l0800_1FAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F87:
	selector es_111 = SLICE(ptrArg02, selector, 16)
	word16 di_369 = (word16) ptrArg02
	word16 cx_79 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F8F:
	branch cx_79 == 0x0000 l0800_1F91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F8F_1:
	di_369 = di_369 + 0x0001
	cx_79 = cx_79 - 0x0001
	branch Mem15[es_111:di_369:byte] == 0x00 l0800_1F8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F91:
	word16 cx_102 = ~cx_79
	word16 di_101 = di_369 - cx_102
	bool Z_103 = SLICE(cond(di_101), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F98:
	branch cx_102 == 0x0000 l0800_1F9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F98_2:
	Z_103 = SLICE(cond(0x3A - Mem15[es_111:di_101:byte]), bool, 2) (alias)
	di_101 = di_101 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem15[es_111:di_101:byte] == 0x3A l0800_1F98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F9A:
	branch Z_103 l0800_1FA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F9C:
	di_101 = 0x0001
	es_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FA3:
	ax_117 = es_111
	ptrArg02 = SEQ(es_111, di_101) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FAD:
	ptr32 es_bx_145 = Mem144[ds:0x2E51:segptr32]
	word16 ax_171 = (DPB(DPB(ax_117, Mem144[es_bx_145 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem144[es_bx_145 + 0x0005:byte], 0), 0x00, 8)
	word16 wArg04_411 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_414 = SLICE(ptrArg02, word16, 0)
	word16 ax_175 = Mem174[ds:0x2E53:word16]
	word16 dx_177 = Mem174[ds:0x2E51:word16] + ax_171
	selector es_374 = SLICE(ptrArg02, selector, 16)
	word16 di_188 = (word16) ptrArg02
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FDE:
	branch cx_184 == 0x0000 l0800_1FE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FDE_1:
	di_188 = di_483 + 0x0001
	cx_184 = cx_184 - 0x0001
	di_483 = di_188
	branch Mem179[es_374:di_483:byte] == 0x00 l0800_1FDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FE0:
	word16 cx_195 = ~cx_184
	word16 ax_207 = dx_177 - Mem202[ds:0x2E51:word16]
	word16 ax_211 = ax_207 + (cx_195 + 0x0003)
	segptr32 ptrLoc06_407 = SEQ(ax_175, dx_177)
	Mem230[ptrLoc06_407:byte] = (byte) fn0800_8C8A(ax_211, 0x08, 0x0000 - (ax_207 <u 0x0000) + (ax_211 <u 0x0000), out cl_477, out dx_478)
	Mem239[ptrLoc06_407 + 0x0001:byte] = (byte) (dx_177 - Mem230[ds:0x2E51:word16]) + SLICE(cx_195 + 0x0003, byte, 0)
	word16 sp_221 = <invalid>
	Mem243[ss:sp_221 - 2:word16] = SLICE(ptrLoc06_407, selector, 16)
	Mem246[ss:sp_221 - 4:word16] = dx_177 + 0x0002
	word16 bx_229 = (word16) ptrLoc06_407
	word16 di_247 = wArg02_414
	word16 cx_251 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202C:
	branch cx_251 == 0x0000 l0800_202E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202C_2:
	di_247 = di_247 + 0x0001
	cx_251 = cx_251 - 0x0001
	branch Mem246[wArg04_411:di_247:byte] == 0x00 l0800_202C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202E:
	word16 di_273 = Mem246[ss:sp_221 - 4:word16]
	selector es_277 = Mem246[ss:sp_221 - 2:selector]
	Mem282[ss:sp_221 - 2:word16] = ds
	word16 cx_262 = ~cx_251
	word16 cx_265 = cx_262 >>u 0x0001
	word16 si_267 = di_247 - cx_262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203D:
	branch cx_265 == 0x0000 l0800_203F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203F:
	word16 cx_286 = cx_265 * 0x0002 + (cx_262 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2041:
	byte bLoc08_418 = SLICE(ax_171, byte, 0)
	byte bLoc0A_419 = SLICE(cx_195 + 0x0003, byte, 0)
	branch cx_286 == 0x0000 l0800_2043
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2043:
	selector ds_292 = Mem291[ss:sp_221 - 2:selector]
	Mem298[ax_175:bx_229 + (cx_195 + 0x0003) - 0x0001:byte] = 0x00
	ptr32 es_bx_303 = Mem298[ds_292:0x2E51:segptr32]
	Mem307[es_bx_303 + 0x0004:byte] = (byte) (ax_171 + (cx_195 + 0x0003) >>u 0x08)
	Mem310[es_bx_303 + 0x0005:byte] = bLoc08_418 + bLoc0A_419
	Mem315[ss:sp_221 - 2:word16] = 0x0000
	Mem317[ss:sp_221 - 4:word16] = 0x0000
	Mem319[ss:sp_221 - 6:word16] = 0x0000
	Mem322[ss:sp_221 - 8:word16] = cx_195 + 0x0003
	fn0800_2688(ds_292, Mem322[ss:sp_221 - 8:ui32], Mem322[ss:sp_221 - 4:word16], Mem322[ss:sp_221 - 2:word16])
	word16 di_336 = Mem322[ss:sp_221:word16]
	dxOut = ax_175
	diOut = di_336
	dsOut = ds_292
	return dx_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1F5C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2041_1:
	Mem347[es_277:di_273:byte] = Mem291[wArg04_411:si_267:byte]
	si_267 = si_267 + 0x0001
	di_273 = di_273 + 0x0001
	cx_286 = cx_286 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203D_3:
	Mem357[es_277:di_273:word16] = Mem353[wArg04_411:si_267:word16]
	si_267 = si_267 + 0x0002
	di_273 = di_273 + 0x0002
	cx_265 = cx_265 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_2085(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_2085_entry:
	selector psegArg04_556 = SLICE(ptrArg02, selector, 16)
	word16 wArg02_560 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2085:
	ptr32 es_bx_17 = Mem15[ds:0x2E51:segptr32]
	word16 ax_32 = (DPB(DPB(ax, Mem15[es_bx_17 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem15[es_bx_17 + 0x0005:byte], 0), 0x00, 8)
	word16 dx_36 = Mem33[ds:0x2E51:word16] + ax_32
	selector es_497 = SLICE(ptrArg02, selector, 16)
	word16 di_47 = (word16) ptrArg02
	word16 cx_43 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20BE:
	branch cx_43 == 0x0000 l0800_20C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20BE_1:
	di_47 = di_791 + 0x0001
	cx_43 = cx_43 - 0x0001
	di_791 = di_47
	branch Mem38[es_497:di_791:byte] == 0x00 l0800_20BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20C0:
	word16 bx_80 = Mem61[ds:0x2E51:word16] + (((int16) Mem61[ptrArg06:byte] << 0x08) + DPB(DPB(dx_36, Mem61[ptrArg06 + 0x0001:byte], 0), 0x00, 8))
	word16 cx_54 = ~cx_43
	word16 dx_78 = Mem61[ds:0x2E53:word16]
	fn0800_B0F3(SEQ(Mem98[ds:0x2E53:word16], bx_80 - 0x0001 + (cx_54 + 0x0004)), SEQ(Mem93[ds:0x2E53:word16], bx_80 - 0x0001), dx_36 - (bx_80 - 0x0001))
	segptr32 ptrLoc06_552 = SEQ(dx_78, bx_80 - 0x0001)
	selector es_120 = SLICE(ptrLoc06_552, selector, 16)
	word16 di_124 = (word16) ptrLoc06_552
	word16 di_126 = wArg02_560
	word16 cx_130 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_211F:
	branch cx_130 == 0x0000 l0800_2121
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_211F_2:
	di_126 = di_126 + 0x0001
	cx_130 = cx_130 - 0x0001
	branch Mem125[psegArg04_556:di_126:byte] == 0x00 l0800_211F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2121:
	word16 cx_141 = ~cx_130
	word16 cx_144 = cx_141 >>u 0x0001
	word16 si_146 = di_126 - cx_141
	word16 di_152 = di_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2130:
	branch cx_144 == 0x0000 l0800_2132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2132:
	word16 cx_165 = cx_144 * 0x0002 + (cx_141 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2134:
	byte bLoc0E_626 = SLICE(cx_54 + 0x0004, byte, 0)
	byte bLoc0C_625 = SLICE(ax_32, byte, 0)
	branch cx_165 == 0x0000 l0800_2136
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2136:
	selector es_210 = SLICE(ptrLoc06_552, selector, 16)
	word16 di_182 = (word16) ptrLoc06_552
	word16 cx_178 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_213F:
	branch cx_178 == 0x0000 l0800_2141
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_213F_1:
	di_182 = di_182 + 0x0001
	cx_178 = cx_178 - 0x0001
	branch Mem170[es_210:di_182:byte] == 0x00 l0800_213F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2141:
	word16 cx_189 = ~cx_178
	word16 di_192 = di_182 - cx_189
	bool Z_202 = SLICE(cond(di_192), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2147:
	branch cx_189 == 0x0000 l0800_2149
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2147_2:
	Z_202 = SLICE(cond(0x00 - Mem170[es_210:di_192:byte]), bool, 2) (alias)
	di_192 = di_192 + 0x0001
	cx_189 = cx_189 - 0x0001
	branch Mem170[es_210:di_192:byte] == 0x00 l0800_2147
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2149:
	branch Z_202 l0800_2152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_214B:
	di_192 = 0x0001
	es_210 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2152:
	Mem218[es_210:di_192:byte] = 0x00
	selector es_265 = SLICE(ptrLoc06_552, selector, 16)
	word16 di_237 = (word16) ptrLoc06_552
	word16 cx_233 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2164:
	branch cx_233 == 0x0000 l0800_2166
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2164_1:
	di_237 = di_237 + 0x0001
	cx_233 = cx_233 - 0x0001
	branch Mem218[es_265:di_237:byte] == 0x00 l0800_2164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2166:
	word16 cx_244 = ~cx_233
	word16 di_247 = di_237 - cx_244
	bool Z_257 = SLICE(cond(di_247), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216C:
	branch cx_244 == 0x0000 l0800_216E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216C_2:
	Z_257 = SLICE(cond(0x00 - Mem218[es_265:di_247:byte]), bool, 2) (alias)
	di_247 = di_247 + 0x0001
	cx_244 = cx_244 - 0x0001
	branch Mem218[es_265:di_247:byte] == 0x00 l0800_216C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216E:
	branch Z_257 l0800_2177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2170:
	di_247 = 0x0001
	es_265 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2177:
	Mem273[es_265:di_247 + 0x0001:byte] = 0x00
	selector es_320 = SLICE(ptrLoc06_552, selector, 16)
	word16 di_292 = (word16) ptrLoc06_552
	word16 cx_288 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2189:
	branch cx_288 == 0x0000 l0800_218B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2189_1:
	di_292 = di_292 + 0x0001
	cx_288 = cx_288 - 0x0001
	branch Mem273[es_320:di_292:byte] == 0x00 l0800_2189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_218B:
	word16 cx_299 = ~cx_288
	word16 di_302 = di_292 - cx_299
	bool Z_312 = SLICE(cond(di_302), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2191:
	branch cx_299 == 0x0000 l0800_2193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2191_2:
	Z_312 = SLICE(cond(0x00 - Mem273[es_320:di_302:byte]), bool, 2) (alias)
	di_302 = di_302 + 0x0001
	cx_299 = cx_299 - 0x0001
	branch Mem273[es_320:di_302:byte] == 0x00 l0800_2191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2193:
	branch Z_312 l0800_219C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2195:
	di_302 = 0x0001
	es_320 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_219C:
	Mem328[es_320:di_302 + 0x0002:byte] = 0x00
	selector es_375 = SLICE(ptrLoc06_552, selector, 16)
	word16 di_347 = (word16) ptrLoc06_552
	word16 cx_343 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21AE:
	branch cx_343 == 0x0000 l0800_21B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21AE_1:
	di_347 = di_347 + 0x0001
	cx_343 = cx_343 - 0x0001
	branch Mem328[es_375:di_347:byte] == 0x00 l0800_21AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B0:
	word16 cx_354 = ~cx_343
	word16 di_357 = di_347 - cx_354
	bool Z_367 = SLICE(cond(di_357), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B6:
	branch cx_354 == 0x0000 l0800_21B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B6_2:
	Z_367 = SLICE(cond(0x00 - Mem328[es_375:di_357:byte]), bool, 2) (alias)
	di_357 = di_357 + 0x0001
	cx_354 = cx_354 - 0x0001
	branch Mem328[es_375:di_357:byte] == 0x00 l0800_21B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B8:
	branch Z_367 l0800_21C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21BA:
	di_357 = 0x0001
	es_375 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21C1:
	Mem383[es_375:di_357 + 0x0003:byte] = 0x00
	ptr32 es_bx_418 = Mem383[ds:0x2E51:segptr32]
	Mem422[es_bx_418 + 0x0004:byte] = (byte) (ax_32 + (cx_54 + 0x0004) >>u 0x08)
	Mem425[es_bx_418 + 0x0005:byte] = bLoc0C_625 + bLoc0E_626
	return (byte) DPB(cx_354, fn0800_2688(ds, (uint32) (uint16) (cx_54 + 0x0004), 0x0000, 0x0000), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2085_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2134_1:
	Mem482[es_120:di_152:byte] = Mem170[psegArg04_556:si_146:byte]
	si_146 = si_146 + 0x0001
	di_152 = di_152 + 0x0001
	cx_165 = cx_165 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2130_3:
	Mem492[es_120:di_152:word16] = Mem488[psegArg04_556:si_146:word16]
	si_146 = si_146 + 0x0002
	di_152 = di_152 + 0x0002
	cx_144 = cx_144 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_2201(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_2201_entry:
	word16 wArg02_237 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_241 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2201:
	ptr32 es_bx_14 = Mem12[ds:0x2E51:segptr32]
	word16 ax_29 = (DPB(DPB(ax, Mem12[es_bx_14 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem12[es_bx_14 + 0x0005:byte], 0), 0x00, 8)
	word16 dx_33 = Mem30[ds:0x2E51:word16] + ax_29
	word16 dx_50 = Mem35[ds:0x2E51:word16] + (((int16) Mem35[ptrArg02:byte] << 0x08) + DPB(DPB(dx_33, Mem35[ptrArg02 + 0x0001:byte], 0), 0x00, 8)) - wArg02_237
	word16 ax_56 = wArg02_237 + dx_50
	fn0800_B0F3(ptrArg02, SEQ(wArg04_241, ax_56), dx_33 - ax_56)
	ptr32 es_bx_93 = Mem77[ds:0x2E51:segptr32]
	Mem97[es_bx_93 + 0x0004:byte] = (byte) (ax_29 - dx_50 >>u 0x08)
	Mem100[es_bx_93 + 0x0005:byte] = SLICE(ax_29 - dx_50, byte, 0)
	word16 ax_109 = -dx_50
	fn0800_2688(ds, SEQ(-0x0000 - (ax_109 == 0x0000), ax_109), 0x0000, 0x0000)
	word16 dx_128 = Mem116[ds:0x45AE:word16]
	branch Mem116[ds:0x45B0:word16] != wArg04_241 l0800_22EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22B7:
	branch dx_128 != wArg02_237 l0800_22EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22EA:
	branch Mem116[ds:0x45AE:word16] <=u wArg02_237 l0800_22F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22F2:
	Mem142[ds:0x45AA:word16] = Mem116[ds:0x45AA:word16] - dx_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22F9:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22BC:
	selector es_191 = SLICE(ptrArg02, selector, 16)
	word16 di_155 = (word16) ptrArg02 + 0x0002
	word16 cx_159 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C7:
	branch cx_159 == 0x0000 l0800_22C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C7_1:
	di_155 = di_155 + 0x0001
	cx_159 = cx_159 - 0x0001
	branch Mem116[es_191:di_155:byte] == 0x00 l0800_22C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C9:
	word16 cx_170 = ~cx_159
	word16 di_173 = di_155 - cx_170
	bool Z_183 = SLICE(cond(di_173), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22CF:
	branch cx_170 == 0x0000 l0800_22D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22CF_2:
	Z_183 = SLICE(cond(0x00 - Mem116[es_191:di_173:byte]), bool, 2) (alias)
	di_173 = di_173 + 0x0001
	cx_170 = cx_170 - 0x0001
	branch Mem116[es_191:di_173:byte] == 0x00 l0800_22CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22D1:
	branch Z_183 l0800_22DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22D3:
	di_173 = 0x0001
	es_191 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22DA:
	Mem205[ds:0x45AC:word16] = es_191
	Mem206[ds:0x45AA:word16] = di_173
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2201_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_22FE(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_22FE_entry:
	word16 wArg02_229 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_243 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22FE:
	ptr32 es_bx_14 = Mem12[ds:0x2E51:segptr32]
	word16 ax_29 = (DPB(DPB(ax, Mem12[es_bx_14 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem12[es_bx_14 + 0x0005:byte], 0), 0x00, 8)
	byte bLoc08_255 = SLICE(ax_29, byte, 0)
	word16 dx_33 = Mem30[ds:0x2E51:word16] + ax_29
	selector es_213 = SLICE(ptrArg02, selector, 16)
	word16 di_214 = (word16) ptrArg02
	word16 cx_40 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2336:
	branch cx_40 == 0x0000 l0800_2338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2336_1:
	di_214 = di_214 + 0x0001
	cx_40 = cx_40 - 0x0001
	branch Mem35[es_213:di_214:byte] == 0x00 l0800_2336
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2338:
	word16 cx_51 = ~cx_40
	word16 di_316 = di_214 - cx_51
	bool Z_64 = SLICE(cond(di_316), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_233E:
	branch cx_51 == 0x0000 l0800_2340
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_233E_2:
	Z_64 = SLICE(cond(0x00 - Mem35[es_213:di_316:byte]), bool, 2) (alias)
	di_316 = di_316 + 0x0001
	cx_51 = cx_51 - 0x0001
	branch Mem35[es_213:di_316:byte] == 0x00 l0800_233E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2340:
	branch Z_64 l0800_2349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2342:
	di_316 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2349:
	word16 di_93 = di_316 + 0x0004 - wArg02_229
	word16 ax_99 = wArg02_229 + di_93
	fn0800_B0F3(ptrArg02, SEQ(wArg04_243, ax_99), dx_33 - ax_99)
	ptr32 es_bx_146 = Mem125[ds:0x2E51:segptr32]
	Mem150[es_bx_146 + 0x0004:byte] = (byte) (ax_29 - di_93 >>u 0x08)
	Mem153[es_bx_146 + 0x0005:byte] = bLoc08_255 - SLICE(di_93, byte, 0)
	word16 ax_162 = -di_93
	fn0800_2688(ds, SEQ(-0x0000 - (ax_162 == 0x0000), ax_162), 0x0000, 0x0000)
	Mem183[ds:0x45AC:word16] = wArg04_243
	word16 dx_182 = wArg02_229 + di_93
	Mem184[ds:0x45AA:word16] = dx_182
	branch (dx_182 | wArg04_243) == 0x0000 l0800_23D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23D8:
	branch Mem184[ds:0x45AA:word16] <=u wArg02_229 l0800_23E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23E0:
	Mem194[ds:0x45AA:word16] = Mem184[ds:0x45AA:word16] - di_93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23E7:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23C6:
	Mem206[ds:0x45AC:word16] = wArg04_243
	Mem207[ds:0x45AA:word16] = wArg02_229
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_22FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_23EC(selector ds, segptr32 ptrArg02, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: bp cx di ds si sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_23EC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23EC:
	selector ds_24
	word16 si_26 = fn0800_24FE(ds, ptrArg02, out ds_24)
	selector es_433 = SLICE(ptrArg02, selector, 16)
	word16 di_434 = (word16) ptrArg02
	word16 cx_40 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240D:
	branch cx_40 == 0x0000 l0800_240F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240D_1:
	di_434 = di_434 + 0x0001
	cx_40 = cx_40 - 0x0001
	branch Mem35[es_433:di_434:byte] == 0x00 l0800_240D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240F:
	word16 cx_51 = ~cx_40
	word16 di_54 = di_434 - cx_51
	bool Z_64 = SLICE(cond(di_54), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2415:
	branch cx_51 == 0x0000 l0800_2417
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2415_2:
	Z_64 = SLICE(cond(0x00 - Mem35[es_433:di_54:byte]), bool, 2) (alias)
	di_54 = di_54 + 0x0001
	cx_51 = cx_51 - 0x0001
	branch Mem35[es_433:di_54:byte] == 0x00 l0800_2415
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2417:
	branch Z_64 l0800_2420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2419:
	di_54 = 0x0001
	es_433 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2420:
	word16 ax_83 = (int16) Mem35[es_433:di_54:byte]
	selector es_139 = SLICE(ptrArg02, selector, 16)
	word16 di_111 = (word16) ptrArg02
	word16 cx_107 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2437:
	branch cx_107 == 0x0000 l0800_2439
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2437_1:
	di_111 = di_111 + 0x0001
	cx_107 = cx_107 - 0x0001
	branch Mem103[es_139:di_111:byte] == 0x00 l0800_2437
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2439:
	word16 cx_118 = ~cx_107
	word16 di_121 = di_111 - cx_118
	bool Z_131 = SLICE(cond(di_121), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_243F:
	branch cx_118 == 0x0000 l0800_2441
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_243F_2:
	Z_131 = SLICE(cond(0x00 - Mem103[es_139:di_121:byte]), bool, 2) (alias)
	di_121 = di_121 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch Mem103[es_139:di_121:byte] == 0x00 l0800_243F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2441:
	branch Z_131 l0800_244A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2443:
	di_121 = 0x0001
	es_139 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_244A:
	word16 dx_165 = (ax_83 << 0x08) + DPB(DPB(es_139, Mem103[es_139:di_121 + 0x0001:byte], 0), 0x00, 8)
	selector es_211 = SLICE(ptrArg02, selector, 16)
	word16 di_183 = (word16) ptrArg02
	word16 cx_179 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2462:
	branch cx_179 == 0x0000 l0800_2464
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2462_1:
	di_183 = di_183 + 0x0001
	cx_179 = cx_179 - 0x0001
	branch Mem178[es_211:di_183:byte] == 0x00 l0800_2462
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2464:
	word16 cx_190 = ~cx_179
	word16 di_193 = di_183 - cx_190
	bool Z_203 = SLICE(cond(di_193), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246A:
	branch cx_190 == 0x0000 l0800_246C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246A_2:
	Z_203 = SLICE(cond(0x00 - Mem178[es_211:di_193:byte]), bool, 2) (alias)
	di_193 = di_193 + 0x0001
	cx_190 = cx_190 - 0x0001
	branch Mem178[es_211:di_193:byte] == 0x00 l0800_246A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246C:
	branch Z_203 l0800_2475
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246E:
	di_193 = 0x0001
	es_211 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2475:
	word16 ax_222 = (int16) Mem178[es_211:di_193 + 0x0002:byte]
	selector es_278 = SLICE(ptrArg02, selector, 16)
	word16 di_250 = (word16) ptrArg02
	word16 cx_246 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248C:
	branch cx_246 == 0x0000 l0800_248E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248C_1:
	di_250 = di_250 + 0x0001
	cx_246 = cx_246 - 0x0001
	branch Mem242[es_278:di_250:byte] == 0x00 l0800_248C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248E:
	word16 cx_257 = ~cx_246
	word16 di_260 = di_250 - cx_257
	bool Z_270 = SLICE(cond(di_260), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2494:
	branch cx_257 == 0x0000 l0800_2496
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2494_2:
	Z_270 = SLICE(cond(0x00 - Mem242[es_278:di_260:byte]), bool, 2) (alias)
	di_260 = di_260 + 0x0001
	cx_257 = cx_257 - 0x0001
	branch Mem242[es_278:di_260:byte] == 0x00 l0800_2494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2496:
	branch Z_270 l0800_249F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2498:
	di_260 = 0x0001
	es_278 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_249F:
	word16 di_281 = di_260 - 0x0001
	word16 dx_304 = (ax_222 << 0x08) + DPB(DPB(es_278, Mem242[es_278:di_281 + 0x0004:byte], 0), 0x00, 8)
	ui32 ax_dx_457 = SEQ(dx_165 + (dx_304 <u 0x0000), dx_304) - SEQ(Mem325[ds_24:0x45A8:word16], Mem325[ds_24:0x45A6:word16])
	word16 bp_384
	selector ds_388
	word16 si_391
	word16 cx_386 = (word16) fn0800_3C99(si_26, di_281, ds_24, SEQ(Mem356[ds_24:0x29D1:word16], Mem359[ds_24:0x29CF:word16]), (word16) ax_dx_457, SLICE(ax_dx_457, word16, 16), out bp_384, out si_391, out ds_388)
	word16 sp_392 = <invalid>
	Mem402[ss:sp_392 + 0x000A:word16] = Mem362[ss:bp_384 - 0x0002:word16]
	Mem405[ss:sp_392 + 0x0008:word16] = Mem402[ss:bp_384 - 0x0004:word16]
	word16 dx_409 = -Mem405[ss:bp_384 - 0x0008:word16]
	Mem414[ss:sp_392 + 0x0006:word16] = -Mem405[ss:bp_384 - 0x0006:word16] - (dx_409 == 0x0000)
	Mem416[ss:sp_392 + 0x0004:word16] = dx_409
	fn0800_2688(ds_388, Mem416[ss:sp_392 + 0x0004:ui32], Mem416[ss:sp_392 + 0x0008:word16], Mem416[ss:sp_392 + 0x000A:word16])
	word16 di_428 = Mem416[ss:sp_392 + 0x000C:word16]
	bpOut = Mem416[ss:bp_384:word16]
	siOut = si_391
	diOut = di_428
	dsOut = ds_388
	return fn0800_2688(ds_388, Mem416[ss:sp_392 + 0x0004:ui32], Mem416[ss:sp_392 + 0x0008:word16], Mem416[ss:sp_392 + 0x000A:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_23EC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_24FE(selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_24FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_24FE:
	selector es_49 = SLICE(ptrArg02, selector, 16)
	word16 di_21 = (word16) ptrArg02
	word16 cx_17 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250D:
	branch cx_17 == 0x0000 l0800_250F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250D_1:
	di_21 = di_21 + 0x0001
	cx_17 = cx_17 - 0x0001
	branch Mem12[es_49:di_21:byte] == 0x00 l0800_250D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250F:
	word16 cx_28 = ~cx_17
	word16 di_31 = di_21 - cx_28
	bool Z_41 = SLICE(cond(di_31), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2515:
	branch cx_28 == 0x0000 l0800_2517
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2515_2:
	Z_41 = SLICE(cond(0x00 - Mem12[es_49:di_31:byte]), bool, 2) (alias)
	di_31 = di_31 + 0x0001
	cx_28 = cx_28 - 0x0001
	branch Mem12[es_49:di_31:byte] == 0x00 l0800_2515
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2517:
	branch Z_41 l0800_2520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2519:
	di_31 = 0x0001
	es_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2520:
	word16 ax_60 = (int16) Mem12[es_49:di_31:byte]
	selector es_116 = SLICE(ptrArg02, selector, 16)
	word16 di_516 = (word16) ptrArg02
	word16 cx_84 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2537:
	branch cx_84 == 0x0000 l0800_2539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2537_1:
	di_516 = di_516 + 0x0001
	cx_84 = cx_84 - 0x0001
	branch Mem80[es_116:di_516:byte] == 0x00 l0800_2537
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2539:
	word16 cx_100 = ~cx_84
	word16 di_103 = di_516 - cx_100
	bool Z_108 = SLICE(cond(di_103), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_253F:
	branch cx_100 == 0x0000 l0800_2541
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_253F_2:
	Z_108 = SLICE(cond(0x00 - Mem80[es_116:di_103:byte]), bool, 2) (alias)
	di_103 = di_103 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch Mem80[es_116:di_103:byte] == 0x00 l0800_253F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2541:
	branch Z_108 l0800_254A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2543:
	di_103 = 0x0001
	es_116 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_254A:
	word16 dx_142 = (ax_60 << 0x08) + DPB(DPB(es_116, Mem80[es_116:di_103 + 0x0001:byte], 0), 0x00, 8)
	selector es_188 = SLICE(ptrArg02, selector, 16)
	word16 di_160 = (word16) ptrArg02
	word16 cx_156 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2562:
	branch cx_156 == 0x0000 l0800_2564
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2562_1:
	di_160 = di_160 + 0x0001
	cx_156 = cx_156 - 0x0001
	branch Mem155[es_188:di_160:byte] == 0x00 l0800_2562
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2564:
	word16 cx_167 = ~cx_156
	word16 di_170 = di_160 - cx_167
	bool Z_180 = SLICE(cond(di_170), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256A:
	branch cx_167 == 0x0000 l0800_256C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256A_2:
	Z_180 = SLICE(cond(0x00 - Mem155[es_188:di_170:byte]), bool, 2) (alias)
	di_170 = di_170 + 0x0001
	cx_167 = cx_167 - 0x0001
	branch Mem155[es_188:di_170:byte] == 0x00 l0800_256A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256C:
	branch Z_180 l0800_2575
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256E:
	di_170 = 0x0001
	es_188 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2575:
	word16 ax_199 = (int16) Mem155[es_188:di_170 + 0x0002:byte]
	selector es_255 = SLICE(ptrArg02, selector, 16)
	word16 di_227 = (word16) ptrArg02
	word16 cx_223 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258C:
	branch cx_223 == 0x0000 l0800_258E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258C_1:
	di_227 = di_227 + 0x0001
	cx_223 = cx_223 - 0x0001
	branch Mem219[es_255:di_227:byte] == 0x00 l0800_258C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258E:
	word16 cx_234 = ~cx_223
	word16 di_237 = di_227 - cx_234
	bool Z_247 = SLICE(cond(di_237), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2594:
	branch cx_234 == 0x0000 l0800_2596
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2594_2:
	Z_247 = SLICE(cond(0x00 - Mem219[es_255:di_237:byte]), bool, 2) (alias)
	di_237 = di_237 + 0x0001
	cx_234 = cx_234 - 0x0001
	branch Mem219[es_255:di_237:byte] == 0x00 l0800_2594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2596:
	branch Z_247 l0800_259F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2598:
	di_237 = 0x0001
	es_255 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_259F:
	word16 dx_281 = (ax_199 << 0x08) + DPB(DPB(es_255, Mem219[es_255:di_237 + 0x0003:byte], 0), 0x00, 8)
	word16 ax_339 = fn0800_ACB3(ds, SEQ(Mem332[ds:0x29D1:word16], Mem335[ds:0x29CF:word16]), SEQ(dx_142 + (dx_281 <u 0x0000), dx_281) - SEQ(Mem219[ds:0x45A8:word16], Mem219[ds:0x45A6:word16]), 0x0000, out cx_717, out dx_718, out bx_719)
	word16 dx_374
	selector ds_359
	word16 ax_371 = fn0800_8C8A(ax_339, 0x08, fn0800_3E5D(ds, SEQ(Mem338[ds:0x29D1:word16], Mem352[ds:0x29CF:word16]), out di_720, out ds_359), out cl_721, out dx_374)
	word16 sp_375 = <invalid>
	branch dx_374 != 0x0052 l0800_25FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_25F7:
	branch ax_371 == 0x4E43 l0800_260B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_25FC:
	Mem388[ss:sp_375 - 2:word16] = ds_359
	Mem391[ss:sp_375 - 4:word16] = 0x4348
	Mem394[ss:sp_375 - 6:word16] = 0x000C
	fn0800_0D24(ds_359, Mem394[ss:sp_375 - 6:word16], Mem394[ss:sp_375 - 4:segptr32], out cx_722, out dx_723, out bx_724, out si, out di_725, out es_726, out ds_359)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_260B:
	selector ds_431
	branch (ax_339 & 0x00FF) == 0x0000 l0800_2655
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2655:
	Mem424[ss:sp_375 - 2:word16] = Mem413[ds_359:0x29D1:word16]
	Mem427[ss:sp_375 - 4:word16] = Mem424[ds_359:0x29CF:word16]
	word16 dx_432 = fn0800_3E5D(ds_359, Mem427[ss:sp_375 - 4:word32], out di_727, out ds_431)
	Mem439[ds_431:0x2A05:word16] = dx_432
	Mem440[ds_431:0x2A03:word16] = ax_339 & 0x00FF
	Mem441[ds_431:0x2A09:word16] = dx_432
	Mem442[ds_431:0x2A07:word16] = ax_339 & 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2616:
	Mem452[ss:sp_375 - 2:word16] = Mem413[ds_359:0x29D1:word16]
	Mem455[ss:sp_375 - 4:word16] = Mem452[ds_359:0x29CF:word16]
	selector ds_459
	Mem468[ds_459:0x2A09:word16] = fn0800_3E5D(ds_359, Mem455[ss:sp_375 - 4:word32], out di_728, out ds_459)
	Mem469[ds_459:0x2A07:word16] = ax_339 & 0x00FF
	Mem472[ss:sp_375 - 2:word16] = Mem469[ds_459:0x29D1:word16]
	Mem475[ss:sp_375 - 4:word16] = Mem472[ds_459:0x29CF:word16]
	Mem487[ds_431:0x2A05:word16] = fn0800_3E5D(ds_459, Mem475[ss:sp_375 - 4:word32], out di_729, out ds_431)
	Mem488[ds_431:0x2A03:word16] = ax_339 & 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_267D:
	dsOut = ds_431
	return si
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_24FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_2688(selector ds, ui32 dwArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: cl
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp sp
fn0800_2688_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2688:
	ptr32 es_bx_11 = Mem7[ds:0x2E51:segptr32]
	word16 sp_110 = fp - 0x0012
	byte cl_108 = 0x08
	word16 dx_27 = Mem7[ds:0x2E53:word16]
	word16 bx_28 = (word16) es_bx_11 + ((DPB(DPB(ax, Mem7[es_bx_11 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem7[es_bx_11 + 0x0005:byte], 0), 0x00, 8))
	segptr32 ptrLoc06_422 = SEQ(Mem30[ds:0x2E53:word16], Mem30[ds:0x2E51:word16] + 0x0008)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27B3:
	word16 wLoc06_275 = SLICE(ptrLoc06_422, word16, 0)
	word16 wLoc04_274 = SLICE(ptrLoc06_422, word16, 16)
	branch wLoc04_274 == dx_27 l0800_27C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C1:
	branch wLoc06_275 == bx_28 l0800_27C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C9:
	branch (wArg06 | wArg08) != 0x0000 l0800_27DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27D1:
	Mem55[ds:0x45A6:word16] = v22_54
	ui32 v23_v22_262 = SEQ(Mem55[ds:0x45A8:word16], Mem39[ds:0x45A6:word16]) + dwArg02
	Mem59[ds:0x45A8:word16] = SLICE(v23_v22_262, word16, 16)
	word16 v22_54 = (word16) v23_v22_262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27DF:
	return cl_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2688_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27BE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26C3:
	word16 dx_149 = wLoc06_275
	segptr32 ptrLoc06_289 = SEQ(wLoc04_274, wLoc06_275 + 0x0002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26D3:
	ptrLoc06_289 = SEQ(wLoc04_352, wLoc06_290 + 0x0001) (alias)
	word16 wLoc06_290 = SLICE(ptrLoc06_436, word16, 0)
	word16 wLoc04_352 = SLICE(ptrLoc06_436, word16, 16)
	ptrLoc06_436 = ptrLoc06_289
	branch Mem82[ptrLoc06_436:byte] != 0x00 l0800_26D3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_277D:
	word16 wLoc06_293 = SLICE(ptrLoc06_289, word16, 0)
	word16 wLoc04_328 = SLICE(ptrLoc06_289, word16, 16)
	branch Mem89[ptrLoc06_289:byte] == 0x00 l0800_2789
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2789:
	word16 ax_100 = wLoc06_293 + 0x0001 - Mem96[ds:0x2E51:word16]
	Mem119[ptrLoc06_422:byte] = (byte) fn0800_8C8A(ax_100, 0x08, 0x0000 - (ax_100 <u 0x0000), out cl_108, out dx_432)
	Mem128[ptrLoc06_422 + 0x0001:byte] = (byte) (wLoc06_293 + 0x0001 - Mem119[ds:0x2E51:word16])
	sp_110 = <invalid>
	ptrLoc06_422 = SEQ(wLoc04_328, wLoc06_293 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2786:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26E2:
	ptrLoc06_289 = SEQ(SLICE(ptrLoc06_437, word16, 16), SLICE(ptrLoc06_437, word16, 0) + 0x0001) (alias)
	word16 wLoc06_326 = SLICE(ptrLoc06_289, word16, 0)
	word16 wLoc04_355 = SLICE(ptrLoc06_289, word16, 16)
	ptrLoc06_437 = ptrLoc06_289
	branch Mem134[ptrLoc06_437:byte] != 0x00 l0800_26E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26EE:
	word16 sp_156 = sp_110 - 2
	Mem157[ss:sp_156:word16] = ((int16) Mem134[ptrLoc06_289:byte] << 0x08) + DPB(DPB(dx_149, Mem134[ptrLoc06_289 + 0x0001:byte], 0), 0x00, 8)
	word16 ax_166 = ((int16) Mem157[ptrLoc06_289 + 0x0002:byte] << 0x08) + DPB(DPB((word16) ptrLoc06_289, Mem157[ptrLoc06_289 + 0x0003:byte], 0), 0x00, 8)
	dx_149 = ax_166
	sp_110 = sp_156 + 2
	word16 ax_172 = Mem157[ss:sp_156:word16] + (ax_166 <u 0x0000)
	byte bLoc12_323 = SLICE(ax_166, byte, 0)
	branch ax_172 < wArg08 l0800_2779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2727:
	branch ax_172 != wArg08 l0800_272E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2729:
	branch ax_166 <u wArg06 l0800_2779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_272E:
	int32 dx_ax_191 = (int32) SLICE(SEQ(ax_172, ax_166) + dwArg02, word16, 16)
	Mem208[ptrLoc06_289:byte] = (byte) fn0800_8C8A((word16) dx_ax_191, 0x08, SLICE(dx_ax_191, word16, 16), out cl_433, out dx_434)
	Mem217[ptrLoc06_289 + 0x0001:byte] = (byte) (int32) SLICE(SEQ(ax_172, ax_166) + dwArg02, word16, 16)
	int32 dx_ax_268 = SEQ(ax_172, ax_166) + dwArg02
	Mem239[ptrLoc06_289 + 0x0002:byte] = (byte) fn0800_8C8A((word16) dx_ax_268, 0x08, SLICE(dx_ax_268, word16, 16), out cl_435, out dx_149)
	Mem243[ptrLoc06_289 + 0x0003:byte] = bLoc12_323 + SLICE(dwArg02, byte, 0)
	sp_110 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2779:
	ptrLoc06_289 = SEQ(wLoc04_355, wLoc06_326 + 0x0004) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_283D(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_283D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_283D:
	selector es_320 = SLICE(ptrArg02, selector, 16)
	word16 di_24 = (word16) ptrArg02
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284D:
	branch cx_20 == 0x0000 l0800_284F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284D_1:
	di_24 = di_24 + 0x0001
	cx_20 = cx_20 - 0x0001
	branch Mem15[es_320:di_24:byte] == 0x00 l0800_284D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284F:
	word16 cx_31 = ~cx_20
	word16 di_34 = di_24 - cx_31
	bool Z_44 = SLICE(cond(di_34), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2856:
	branch cx_31 == 0x0000 l0800_2858
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2856_2:
	Z_44 = SLICE(cond(0x3A - Mem15[es_320:di_34:byte]), bool, 2) (alias)
	di_34 = di_34 + 0x0001
	cx_31 = cx_31 - 0x0001
	branch Mem15[es_320:di_34:byte] == 0x3A l0800_2856
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2858:
	branch Z_44 l0800_2861
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_285A:
	di_34 = 0x0001
	es_320 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2861:
	word16 ax_117 = es_320
	branch (di_34 - 0x0001 | es_320) == 0x0000 l0800_288E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2868:
	selector es_111 = SLICE(ptrArg02, selector, 16)
	word16 di_327 = (word16) ptrArg02
	word16 cx_79 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2870:
	branch cx_79 == 0x0000 l0800_2872
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2870_1:
	di_327 = di_327 + 0x0001
	cx_79 = cx_79 - 0x0001
	branch Mem15[es_111:di_327:byte] == 0x00 l0800_2870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2872:
	word16 cx_102 = ~cx_79
	word16 di_101 = di_327 - cx_102
	bool Z_103 = SLICE(cond(di_101), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2879:
	branch cx_102 == 0x0000 l0800_287B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2879_2:
	Z_103 = SLICE(cond(0x3A - Mem15[es_111:di_101:byte]), bool, 2) (alias)
	di_101 = di_101 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem15[es_111:di_101:byte] == 0x3A l0800_2879
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_287B:
	branch Z_103 l0800_2884
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_287D:
	di_101 = 0x0001
	es_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2884:
	ax_117 = es_111
	ptrArg02 = SEQ(es_111, di_101) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_288E:
	ptr32 es_bx_145 = Mem144[ds:0x2E51:segptr32]
	word16 dx_172 = Mem144[ds:0x2E53:word16]
	word16 bx_173 = (word16) es_bx_145 + ((DPB(DPB(ax_117, Mem144[es_bx_145 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem144[es_bx_145 + 0x0005:byte], 0), 0x00, 8))
	segptr32 ptrLoc0A_521 = SEQ(Mem177[ds:0x2E53:word16], Mem177[ds:0x2E51:word16] + 0x0008)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2917:
	word16 wLoc0A_367 = SLICE(ptrLoc0A_521, word16, 0)
	word16 wLoc08_366 = SLICE(ptrLoc0A_521, word16, 16)
	branch wLoc08_366 != dx_172 l0800_28C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2922:
	branch wLoc0A_367 != bx_173 l0800_28C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28C2:
	word16 si_197 = wLoc0A_367 + 0x0002
	selector es_343 = SLICE(ptrArg02, selector, 16)
	word16 di_213 = (word16) ptrArg02
	word16 ax_206 = 0x0000
	word16 cx_209 = 0xFFFF
	word16 wLoc08_388 = SLICE(ptrLoc0A_521, word16, 16)
	word16 wLoc0A_389 = SLICE(ptrLoc0A_521, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D4:
	ax_206 = DPB(ax_206, 0x00, 0) (alias)
	ax_206 = DPB(ax_206, 0x00, 0) (alias)
	branch cx_209 == 0x0000 l0800_28D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D4_1:
	di_213 = di_213 + 0x0001
	cx_209 = cx_209 - 0x0001
	branch Mem203[es_343:di_213:byte] == 0x00 l0800_28D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D6:
	word16 cx_220 = ~cx_209
	word16 di_222 = di_213 - cx_220
	bool Z_234 = SLICE(cond(di_222), bool, 2)
	di_229 = di_222
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DA:
	word16 di_229
	branch cx_220 == 0x0000 l0800_28DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DA_2:
	Z_234 = SLICE(cond(Mem203[wLoc08_366:si_530:byte] - Mem203[es_343:di_531:byte]), bool, 2) (alias)
	si_197 = si_530 + 0x0001
	di_229 = di_531 + 0x0001
	cx_220 = cx_220 - 0x0001
	si_530 = si_197
	di_531 = di_229
	branch Mem203[wLoc08_366:si_530:byte] != Mem203[es_343:di_531:byte] l0800_28DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DC:
	branch Z_234 l0800_28E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DE:
	word16 ax_242 = 0x0000 - (di_222 <u 0x0000)
	ax_206 = ax_242 - 0xFFFF - (ax_242 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28E3:
	branch ax_206 != 0x0000 l0800_28F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28F4:
	ptrLoc0A_521 = SEQ(Mem203[ds:0x2E53:word16], Mem203[ds:0x2E51:word16] + (((int16) Mem203[ptrLoc0A_521:byte] << 0x08) + DPB(DPB(wLoc0A_367, Mem203[ptrLoc0A_521 + 0x0001:byte], 0), 0x00, 8))) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28E8:
	dxOut = wLoc08_388
	return wLoc0A_389
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2927:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_283D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2931(segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_2931_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2931:
	selector es_236 = SLICE(ptrArg06, selector, 16)
	word16 di_17 = (word16) ptrArg06 + 0x0002
	word16 cx_21 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2941:
	branch cx_21 == 0x0000 l0800_2943
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2941_1:
	di_17 = di_17 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch Mem14[es_236:di_17:byte] == 0x00 l0800_2941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2943:
	word16 cx_32 = ~cx_21
	word16 di_35 = di_17 - cx_32
	bool Z_45 = SLICE(cond(di_35), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2949:
	branch cx_32 == 0x0000 l0800_294B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2949_2:
	Z_45 = SLICE(cond(0x00 - Mem14[es_236:di_35:byte]), bool, 2) (alias)
	di_35 = di_35 + 0x0001
	cx_32 = cx_32 - 0x0001
	branch Mem14[es_236:di_35:byte] == 0x00 l0800_2949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_294B:
	branch Z_45 l0800_2954
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_294D:
	di_35 = 0x0001
	es_236 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2954:
	segptr32 ptrArg06_282 = SEQ(es_236, di_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29B4:
	word16 wArg06_283 = SLICE(ptrArg06_282, word16, 0)
	word16 wArg08_285 = SLICE(ptrArg06_282, word16, 16)
	branch Mem76[ptrArg06_282:byte] != 0x00 l0800_2960
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2960:
	word16 si_109 = wArg06_283
	selector es_262 = SLICE(ptrArg02, selector, 16)
	word16 di_104 = (word16) ptrArg02
	word16 ax_128 = 0x0000
	word16 cx_100 = 0xFFFF
	word16 wArg08_300 = SLICE(ptrArg06_282, word16, 16)
	word16 wArg06_301 = SLICE(ptrArg06_282, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_296F:
	ax_128 = DPB(ax_128, 0x00, 0) (alias)
	ax_128 = DPB(ax_128, 0x00, 0) (alias)
	branch cx_100 == 0x0000 l0800_2971
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_296F_1:
	di_104 = di_104 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch Mem86[es_262:di_104:byte] == 0x00 l0800_296F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2971:
	word16 cx_103 = ~cx_100
	word16 di_105 = di_104 - cx_103
	bool Z_117 = SLICE(cond(di_105), bool, 2)
	di_112 = di_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2975:
	word16 di_112
	branch cx_103 == 0x0000 l0800_2977
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2975_2:
	Z_117 = SLICE(cond(Mem86[wArg08_285:si_422:byte] - Mem86[es_262:di_423:byte]), bool, 2) (alias)
	si_109 = si_422 + 0x0001
	di_112 = di_423 + 0x0001
	cx_103 = cx_103 - 0x0001
	si_422 = si_109
	di_423 = di_112
	branch Mem86[wArg08_285:si_422:byte] != Mem86[es_262:di_423:byte] l0800_2975
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2977:
	branch Z_117 l0800_297E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2979:
	word16 ax_125 = 0x0000 - (di_105 <u 0x0000)
	ax_128 = ax_125 - 0xFFFF - (ax_125 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_297E:
	branch ax_128 != 0x0000 l0800_298D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_298D:
	selector es_196 = SLICE(ptrArg06_282, selector, 16)
	word16 di_168 = (word16) ptrArg06_282
	word16 cx_164 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2995:
	branch cx_164 == 0x0000 l0800_2997
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2995_1:
	di_168 = di_168 + 0x0001
	cx_164 = cx_164 - 0x0001
	branch Mem86[es_196:di_168:byte] == 0x00 l0800_2995
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2997:
	word16 cx_175 = ~cx_164
	word16 di_178 = di_168 - cx_175
	bool Z_188 = SLICE(cond(di_178), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299D:
	branch cx_175 == 0x0000 l0800_299F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299D_2:
	Z_188 = SLICE(cond(0x00 - Mem86[es_196:di_178:byte]), bool, 2) (alias)
	di_178 = di_178 + 0x0001
	cx_175 = cx_175 - 0x0001
	branch Mem86[es_196:di_178:byte] == 0x00 l0800_299D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299F:
	branch Z_188 l0800_29A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29A1:
	di_178 = 0x0001
	es_196 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29A8:
	ptrArg06_282 = SEQ(es_196, di_178 + 0x0004) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2983:
	dxOut = wArg08_300
	return wArg06_301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29BD:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2931_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_29C5(word16 cx, word16 dx, word16 si, word16 di, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut: ax ds
// Trashed: SCZDOP ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_29C5_entry:
	word16 wArg0C = SLICE(ptrArg0A, word16, 16)
	word16 wArg0A = SLICE(ptrArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29C5:
	branch (Mem15[ds:0x45AE:word16] | Mem15[ds:0x45B0:word16]) != 0x0000 l0800_2A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29D6:
	branch (Mem15[ds:0x45AA:word16] | Mem15[ds:0x45AC:word16]) != 0x0000 l0800_2A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29DF:
	cx = <invalid>
	branch fn0800_2DE2(cx, dx, si, di, ds, SEQ(ds, 0x4541), out ch_1519, out dx_1520, out ds) != 0x0000 l0800_29F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29F6:
	word16 dx_53 = Mem31[ds:0x2E51:word16]
	Mem56[ds:0x45B0:word16] = Mem31[ds:0x2E53:word16]
	Mem57[ds:0x45AE:word16] = dx_53 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A07:
	fn0800_3509(si, di, fp - 0x006C, ss, SEQ(ds, 0x4541), out bx_1518)
	word16 dx_98 = fn0800_35A3(si, di, fp - 0x007A, ss, SEQ(ds, 0x4541))
	ptr32 es_bx_107 = Mem95[ds:0x2E51:segptr32]
	word16 cx_170 = DPB(cx, 0x08, 0)
	word16 dx_121 = Mem95[ds:0x2E53:word16]
	word16 bx_122 = (word16) es_bx_107 + ((DPB(DPB(ax_96, Mem95[es_bx_107 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_98, Mem95[es_bx_107 + 0x0005:byte], 0), 0x00, 8))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C53:
	word16 wArg02_994 = SLICE(ptrArg02, word16, 0)
	word16 wArg06_990 = SLICE(ptrArg06, word16, 0)
	word16 dx_129 = Mem127[ds:0x45AE:word16]
	branch Mem127[ds:0x45B0:word16] == dx_121 l0800_2C62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C62:
	branch dx_129 == bx_122 l0800_2C6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C6A:
	Mem140[ds:0x45AC:word16] = 0x0000
	Mem141[ds:0x45AA:word16] = 0x0000
	Mem142[ds:0x45B0:word16] = 0x0000
	Mem143[ds:0x45AE:word16] = 0x0000
	word16 ax_166 = fn0800_29C5(cx_170, 0x0000, si, di, ds, wArg02_994, wArg06_990, wArg0A, out ds_1521)
	dsOut = ds
	return ax_166
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C67:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C5F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A4C:
	branch (Mem127[ds:0x45AA:word16] | Mem127[ds:0x45AC:word16]) != 0x0000 l0800_2A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A58:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B54:
	branch Mem192[Mem192[ds:0x45AA:segptr32]:byte] == 0x00 l0800_2B61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B61:
	ptr32 es_bx_198 = Mem192[ds:0x45AE:segptr32]
	word16 bx_213 = Mem192[ds:0x2E51:word16] + (((int16) Mem192[es_bx_198:byte] << 0x08) + DPB(DPB(dx_129, Mem192[es_bx_198 + 0x0001:byte], 0), 0x00, 8))
	Mem215[ds:0x45B0:word16] = Mem192[ds:0x2E53:word16]
	Mem216[ds:0x45AE:word16] = bx_213
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B5E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A5B:
	dx_129 = DPB(dx_129, dl_233, 0) (alias)
	branch fn0800_4357(SEQ(Mem224[ds:0x45AC:word16], Mem227[ds:0x45AA:word16]), SEQ(ss, fp - 0x007A)) != 0x0000 l0800_2A75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A75:
	word16 dx_246 = Mem230[ds:0x45AE:word16]
	Mem249[ptrArg02 + 0x0002:word16] = Mem230[ds:0x45B0:word16]
	Mem250[ptrArg02:word16] = dx_246
	word16 dx_253 = Mem250[ds:0x45AA:word16]
	Mem256[ptrArg06 + 0x0002:word16] = Mem250[ds:0x45AC:word16]
	Mem257[ptrArg06:word16] = dx_253
	ptr32 es_di_258 = Mem257[ds:0x45AE:segptr32]
	selector es_262 = SLICE(es_di_258, selector, 16)
	word16 di_1522 = (word16) es_di_258 + 0x0002
	word16 cx_281 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB3:
	branch cx_281 == 0x0000 l0800_2AB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB3_1:
	di_1522 = di_1522 + 0x0001
	cx_281 = cx_281 - 0x0001
	branch Mem277[es_262:di_1522:byte] == 0x00 l0800_2AB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB5:
	word16 cx_292 = ~cx_281
	word16 cx_295 = cx_292 >>u 0x0001
	word16 si_297 = di_1522 - cx_292
	word16 di_303 = wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC4:
	branch cx_295 == 0x0000 l0800_2AC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC6:
	word16 cx_316 = cx_295 * 0x0002 + (cx_292 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC8:
	branch cx_316 == 0x0000 l0800_2ACA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ACA:
	selector es_327 = SLICE(ptrArg0A, selector, 16)
	word16 di_331 = (word16) ptrArg0A
	selector es_329 = Mem328[ds:0x45AC:selector]
	word16 di_1523 = Mem332[ds:0x45AA:word16]
	word16 cx_337 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADD:
	branch cx_337 == 0x0000 l0800_2ADF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADD_1:
	di_1523 = di_1523 + 0x0001
	cx_337 = cx_337 - 0x0001
	branch Mem332[es_329:di_1523:byte] == 0x00 l0800_2ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADF:
	word16 cx_348 = ~cx_337
	word16 si_351 = di_1523 - cx_348
	word16 di_1524 = di_331
	word16 cx_369 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF3:
	branch cx_369 == 0x0000 l0800_2AF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF3_2:
	di_1524 = di_1524 + 0x0001
	cx_369 = cx_369 - 0x0001
	branch Mem368[es_327:di_1524:byte] == 0x00 l0800_2AF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF5:
	word16 di_383 = di_1524 - 0x0001
	word16 cx_390 = cx_348
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF7:
	branch cx_390 == 0x0000 l0800_2AF9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF9:
	ptr32 es_di_396 = Mem395[ds:0x45AA:segptr32]
	selector es_429 = SLICE(es_di_396, selector, 16)
	word16 di_1525 = (word16) es_di_396
	word16 cx_397 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B02:
	branch cx_397 == 0x0000 l0800_2B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B02_1:
	di_1525 = di_1525 + 0x0001
	cx_397 = cx_397 - 0x0001
	branch Mem395[es_429:di_1525:byte] == 0x00 l0800_2B02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B04:
	word16 cx_408 = ~cx_397
	word16 di_1526 = di_1525 - cx_408
	bool Z_421 = SLICE(cond(di_1526), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0A:
	branch cx_408 == 0x0000 l0800_2B0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0A_2:
	Z_421 = SLICE(cond(0x00 - Mem395[es_429:di_1526:byte]), bool, 2) (alias)
	di_1526 = di_1526 + 0x0001
	cx_408 = cx_408 - 0x0001
	branch Mem395[es_429:di_1526:byte] == 0x00 l0800_2B0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0C:
	branch Z_421 l0800_2B15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0E:
	di_1526 = 0x0001
	es_429 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B15:
	Mem443[ds:0x45AC:word16] = es_429
	Mem444[ds:0x45AA:word16] = di_1526 + 0x0004
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF7_3:
	Mem475[es_327:di_383:byte] = Mem395[es_329:si_351:byte]
	si_351 = si_351 + 0x0001
	di_383 = di_383 + 0x0001
	cx_390 = cx_390 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC8_1:
	Mem484[wArg0C:di_303:byte] = Mem321[es_262:si_297:byte]
	si_297 = si_297 + 0x0001
	di_303 = di_303 + 0x0001
	cx_316 = cx_316 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC4_2:
	Mem494[wArg0C:di_303:word16] = Mem490[es_262:si_297:word16]
	si_297 = si_297 + 0x0002
	di_303 = di_303 + 0x0002
	cx_295 = cx_295 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A72:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B2B:
	ptr32 es_di_498 = Mem230[ds:0x45AA:segptr32]
	selector es_534 = SLICE(es_di_498, selector, 16)
	word16 di_1527 = (word16) es_di_498
	word16 cx_502 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B34:
	branch cx_502 == 0x0000 l0800_2B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B34_1:
	di_1527 = di_1527 + 0x0001
	cx_502 = cx_502 - 0x0001
	branch Mem230[es_534:di_1527:byte] == 0x00 l0800_2B34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B36:
	word16 cx_513 = ~cx_502
	word16 di_1528 = di_1527 - cx_513
	bool Z_526 = SLICE(cond(di_1528), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3C:
	branch cx_513 == 0x0000 l0800_2B3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3C_2:
	Z_526 = SLICE(cond(0x00 - Mem230[es_534:di_1528:byte]), bool, 2) (alias)
	di_1528 = di_1528 + 0x0001
	cx_513 = cx_513 - 0x0001
	branch Mem230[es_534:di_1528:byte] == 0x00 l0800_2B3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3E:
	branch Z_526 l0800_2B47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B40:
	di_1528 = 0x0001
	es_534 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B47:
	Mem548[ds:0x45AC:word16] = es_534
	Mem549[ds:0x45AA:word16] = di_1528 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A55:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C12:
	word16 dx_553 = Mem551[ds:0x45AE:word16]
	branch Mem551[ds:0x45B0:word16] == dx_121 l0800_2C21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C21:
	branch dx_553 == bx_122 l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C26:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C1E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B8A:
	branch Mem551[ds:0x2A1B:word16] == 0x0000 l0800_2BBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B91:
	word16 di_572 = fp - 0x006C
	word16 cx_576 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9B:
	branch cx_576 == 0x0000 l0800_2B9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9B_1:
	di_572 = di_1529 + 0x0001
	cx_576 = cx_576 - 0x0001
	di_1529 = di_572
	branch Mem568[ss:di_1529:byte] == 0x00 l0800_2B9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9D:
	branch fn0800_BFE6(SEQ(Mem601[ds:0x45B0:word16], Mem601[ds:0x45AE:word16] + 0x0002), SEQ(ss, fp - 0x006C), ~cx_576 - 0x0001) == 0x0000 l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BBB:
	branch Mem628[ds:0x2A1B:word16] != 0x0000 l0800_2BEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BC2:
	si = Mem628[ds:0x45AE:word16] + 0x0002
	selector ds_637 = Mem636[ds:0x45B0:selector]
	word16 di_1530 = fp - 0x006C
	word16 ax_644 = 0x0000
	word16 cx_647 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BD8:
	ax_644 = DPB(ax_644, 0x00, 0) (alias)
	ax_644 = DPB(ax_644, 0x00, 0) (alias)
	branch cx_647 == 0x0000 l0800_2BDA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BD8_2:
	di_1530 = di_1530 + 0x0001
	cx_647 = cx_647 - 0x0001
	branch Mem639[ss:di_1530:byte] == 0x00 l0800_2BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDA:
	word16 cx_658 = ~cx_647
	word16 di_660 = di_1530 - cx_658
	bool Z_672 = SLICE(cond(di_660), bool, 2)
	di_667 = di_660
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDE:
	word16 di_667
	branch cx_658 == 0x0000 l0800_2BE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDE_3:
	Z_672 = SLICE(cond(Mem639[ds_637:si:byte] - Mem639[ss:di_1532:byte]), bool, 2) (alias)
	si = si + 0x0001
	di_667 = di_1532 + 0x0001
	cx_658 = cx_658 - 0x0001
	di_1532 = di_667
	branch Mem639[ds_637:si:byte] != Mem639[ss:di_1532:byte] l0800_2BDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE0:
	branch Z_672 l0800_2BE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE2:
	word16 ax_680 = 0x0000 - (di_660 <u 0x0000)
	ax_644 = ax_680 - 0xFFFF - (ax_680 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE7:
	branch ax_644 == 0x0000 l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C29:
	ptr32 es_di_712 = Mem711[ds:0x45AE:segptr32]
	selector es_750 = SLICE(es_di_712, selector, 16)
	word16 di_1533 = (word16) es_di_712 + 0x0002
	word16 cx_718 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C35:
	branch cx_718 == 0x0000 l0800_2C37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C35_1:
	di_1533 = di_1533 + 0x0001
	cx_718 = cx_718 - 0x0001
	branch Mem711[es_750:di_1533:byte] == 0x00 l0800_2C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C37:
	cx_170 = ~cx_718
	word16 di_1534 = di_1533 - cx_170
	bool Z_742 = SLICE(cond(di_1534), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3D:
	branch cx_170 == 0x0000 l0800_2C3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3D_2:
	Z_742 = SLICE(cond(0x00 - Mem711[es_750:di_1534:byte]), bool, 2) (alias)
	di_1534 = di_1534 + 0x0001
	cx_170 = cx_170 - 0x0001
	branch Mem711[es_750:di_1534:byte] == 0x00 l0800_2C3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3F:
	branch Z_742 l0800_2C48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C41:
	di_1534 = 0x0001
	es_750 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C48:
	word16 di_753 = di_1534 - 0x0001
	Mem764[ds:0x45AC:word16] = es_750
	Mem765[ds:0x45AA:word16] = di_753 + 0x0001
	di = di_753 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BEC:
	ptr32 es_bx_768 = Mem767[ds:0x45AE:segptr32]
	word16 bx_790 = Mem767[ds:0x2E51:word16] + (((int16) Mem767[es_bx_768:byte] << 0x08) + DPB(DPB(dx_553, Mem767[es_bx_768 + 0x0001:byte], 0), 0x00, 8))
	Mem792[ds:0x45B0:word16] = Mem767[ds:0x2E53:word16]
	Mem793[ds:0x45AE:word16] = bx_790
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29EE:
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_29C5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2C9A(selector ds, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: si sp
fn0800_2C9A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C9A:
	word16 cx_12 = 0x0000
	word16 si_11 = 0x2A29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CA0:
	word16 dx_13 = cx_12
	word16 bx_14 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CBD:
	branch bx_14 != 0x0000 l0800_2CA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CA7:
	word16 ax_25
	branch (dx_13 & 0x0001) == 0x0000 l0800_2CB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CB6:
	ax_25 = dx_13 >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CAD:
	ax_25 = dx_13 >>u 0x0001 ^ 0xA001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CBA:
	dx_13 = ax_25
	bx_14 = bx_14 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CC1:
	Mem43[ds:si_11:word16] = dx_13
	si_11 = si_11 + 0x0002
	cx_12 = cx_12 + 0x0001
	branch cx_12 <u 0x0100 l0800_2CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CCD:
	dxOut = dx_13
	bxOut = bx_14
	return cx_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2C9A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax cl dx
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp si sp
fn0800_2CCF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CCF:
	word16 si_12 = wArg06
	word16 ax_39 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CFD:
	byte bArg08_56 = SLICE(ax_39, byte, 0)
	word16 wArg02_60 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_65 = SLICE(ptrArg02, word16, 16)
	si_12 = si_12 - 0x0001
	branch si_12 != 0x0000 l0800_2CD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CD8:
	cl = 0x08
	dx = ax_39 >>u 0x08
	ax_39 = Mem22[ds:((DPB(DPB(si_12, bArg08_56 ^ Mem22[ptrArg02:byte], 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ ax_39 >>u 0x08
	ptrArg02 = SEQ(wArg04_65, wArg02_60 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D04:
	clOut = cl
	dxOut = dx
	return ax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2CCF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2D0A(ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_2D0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D0A:
	word16 bp_22
	word16 dx_27
	word16 di_118
	selector ds_113
	word16 ax_21 = fn0800_4311(out dx_27, out bp_22, out si_241, out di_118, out ds_113)
	Mem37[ss:bp_22 - 0x0002:word16] = dx_27
	Mem38[ss:bp_22 - 0x0004:word16] = ax_21
	word16 sp_30 = <invalid>
	Mem41[ss:sp_30 + 0x0002:word16] = Mem38[ss:bp_22 + 0x0006:word16]
	Mem44[ss:sp_30:word16] = Mem41[ss:bp_22 + 0x0004:word16]
	word16 dx_48
	word16 ax_45 = fn0800_AD2F(ds_113, Mem44[ss:sp_30:segptr32], out dx_48)
	Mem55[ss:bp_22 - 0x000A:word16] = dx_48
	Mem56[ss:bp_22 - 0x000C:word16] = ax_45
	word16 si_150 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D8F:
	branch (Mem62[ss:bp_22 + 0x0008:word16] | Mem62[ss:bp_22 + 0x000A:word16]) != 0x0000 l0800_2D3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D3A:
	word16 ax_77
	word16 dx_76
	branch Mem62[ss:bp_22 + 0x000A:word16] <u 0x0000 l0800_2D4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D40:
	branch Mem62[ss:bp_22 + 0x000A:word16] >u 0x0000 l0800_2D48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D42:
	branch Mem62[ss:bp_22 + 0x0008:word16] <=u 0xFFF0 l0800_2D4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D4F:
	dx_76 = Mem62[ss:bp_22 + 0x000A:word16]
	ax_77 = Mem62[ss:bp_22 + 0x0008:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D48:
	dx_76 = 0x0000
	ax_77 = 0xFFF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D55:
	Mem87[ss:bp_22 - 0x0006:word16] = dx_76
	Mem89[ss:bp_22 - 0x0008:word16] = ax_77
	Mem96[ss:sp_30 + 0x0002:word16] = Mem89[ss:bp_22 + 0x0006:word16]
	Mem99[ss:sp_30:word16] = Mem96[ss:bp_22 + 0x0004:word16]
	Mem102[ss:sp_30 - 0x0002:word16] = Mem99[ss:bp_22 - 0x0006:word16]
	Mem104[ss:sp_30 - 0x0004:word16] = ax_77
	Mem107[ss:sp_30 - 0x0006:word16] = Mem104[ss:bp_22 - 0x0002:word16]
	Mem110[ss:sp_30 - 0x0008:word16] = Mem107[ss:bp_22 - 0x0004:word16]
	word16 si_122
	fn0800_4110(ds_113, Mem110[ss:sp_30 - 0x0008:word32], Mem110[ss:sp_30 - 0x0004:word16], Mem110[ss:sp_30 - 0x0002:word16], Mem110[ss:sp_30:word32], out si_122, out di_118, out ds_113)
	Mem130[ss:sp_30 + 0x0002:word16] = si_122
	Mem133[ss:sp_30:word16] = Mem130[ss:bp_22 - 0x0008:word16]
	Mem136[ss:sp_30 - 0x0002:word16] = Mem133[ss:bp_22 - 0x0002:word16]
	Mem139[ss:sp_30 - 0x0004:word16] = Mem136[ss:bp_22 - 0x0004:word16]
	si_150 = fn0800_2CCF(ds_113, Mem139[ss:sp_30 - 0x0004:segptr32], Mem139[ss:sp_30:word16], Mem139[ss:sp_30 + 0x0002:word16], out cl_247, out dx_248)
	word16 ax_151 = Mem139[ss:bp_22 - 0x0006:word16]
	word16 dx_152 = Mem139[ss:bp_22 - 0x0008:word16]
	Mem154[ss:bp_22 + 0x0008:word16] = v29_153
	Mem139[ss:bp_22 + 0x0008:ui32] = SEQ(Mem154[ss:bp_22 + 0x000A:word16], Mem139[ss:bp_22 + 0x0008:word16])
	ui32 v30_v29_213 = Mem139[ss:bp_22 + 0x0008:ui32] - SEQ(ax_151, dx_152)
	Mem158[ss:bp_22 + 0x000A:word16] = SLICE(v30_v29_213, word16, 16)
	word16 v29_153 = (word16) v30_v29_213
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D97:
	Mem164[ss:sp_30 + 0x0002:word16] = 0x0000
	Mem167[ss:sp_30:word16] = Mem164[ss:bp_22 - 0x000A:word16]
	Mem170[ss:sp_30 - 0x0002:word16] = Mem167[ss:bp_22 - 0x000C:word16]
	Mem173[ss:sp_30 - 0x0004:word16] = Mem170[ss:bp_22 + 0x0006:word16]
	Mem176[ss:sp_30 - 0x0006:word16] = Mem173[ss:bp_22 + 0x0004:word16]
	fn0800_ACB3(ds_113, Mem176[ss:sp_30 - 0x0006:segptr32], Mem176[ss:sp_30 - 0x0002:ui32], Mem176[ss:sp_30 + 0x0002:word16], out cx_242, out dx_243, out bx_244)
	Mem190[ss:sp_30 + 0x0002:word16] = Mem176[ss:bp_22 - 0x0002:word16]
	Mem193[ss:sp_30:word16] = Mem190[ss:bp_22 - 0x0004:word16]
	selector ds_197
	word16 dx_198
	fn0800_4346(ds_113, Mem193[ss:sp_30 + 0x0002:word16], out cx_245, out dx_198, out bx_246, out ds_197)
	word16 bp_210 = Mem193[ss:bp_22:word16]
	dxOut = dx_198
	bpOut = bp_210
	diOut = di_118
	dsOut = ds_197
	return si_150
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2D0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: ax Top
// Preserved: bp sp
fn0800_2DBF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DBF:
	Mem10[ds:0x4656:word16] = 0xFFFF
	Mem11[ds:0x4654:word16] = 0x0000
	Mem13[ds:0x4652:word16] = Mem11[ds:0x2A27:word16]
	Mem15[ds:0x4650:word16] = wArg02
	Mem17[ds:0x464E:word16] = wArg04
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2DBF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2DE2(word16 cx, word16 dx, word16 si, word16 di, selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx ds dx
// Trashed: SCZDOP ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_2DE2_entry:
	word16 wArg04_1522 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_1524 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DE2:
	branch Mem15[ds:0x4654:word16] != 0x0000 l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DF1:
	branch Mem15[ds:0x4652:word16] != Mem15[ds:0x4656:word16] l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DFA:
	branch Mem15[ds:0x464E:word16] == 0x0000 l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E01:
	si = fn0800_3479(ds, SEQ(ss, fp - 0x0012), 0x0000, out cx, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E11:
	branch Mem49[ds:0x4654:word16] != 0x0000 l0800_2E1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E1B:
	Mem52[ds:0x4617:word16] = 0x0000
	word16 dx_72
	branch (fn0800_A77D(ds, SEQ(ds, 0x45B2), 0x0065, SEQ(Mem52[ds:0x461D:word16], Mem57[ds:0x461B:word16]), out dx_72) | dx_72) != 0x0000 l0800_2E3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E3F:
	selector es_123 = ds
	word16 di_104 = 0x45B2
	word16 cx_101 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E49:
	branch cx_101 == 0x0000 l0800_2E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E49_1:
	di_104 = di_104 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch Mem84[ds:di_104:byte] == 0x00 l0800_2E49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E4B:
	word16 cx_102 = ~cx_101
	word16 di_105 = di_104 - cx_102
	bool Z_115 = SLICE(cond(di_105), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E52:
	branch cx_102 == 0x0000 l0800_2E54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E52_2:
	Z_115 = SLICE(cond(0x0D - Mem84[ds:di_105:byte]), bool, 2) (alias)
	di_105 = di_105 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem84[ds:di_105:byte] == 0x0D l0800_2E52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E54:
	branch Z_115 l0800_2E5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E56:
	di_105 = 0x0001
	es_123 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E5D:
	word16 di_130 = di_105 - 0x0001 | es_123
	branch di_130 == 0x0000 l0800_2E8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E64:
	selector es_151 = ds
	word16 di_153 = 0x45B2
	word16 cx_157 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E6E:
	branch cx_157 == 0x0000 l0800_2E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E6E_1:
	di_153 = di_153 + 0x0001
	cx_157 = cx_157 - 0x0001
	branch Mem150[ds:di_153:byte] == 0x00 l0800_2E6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E70:
	cx_102 = ~cx_157
	word16 di_171 = di_153 - cx_102
	bool Z_181 = SLICE(cond(di_171), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E77:
	branch cx_102 == 0x0000 l0800_2E79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E77_2:
	Z_181 = SLICE(cond(0x0D - Mem150[ds:di_171:byte]), bool, 2) (alias)
	di_171 = di_171 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem150[ds:di_171:byte] == 0x0D l0800_2E77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E79:
	branch Z_181 l0800_2E82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E7B:
	di_171 = 0x0001
	es_151 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E82:
	di_130 = di_171 - 0x0001
	Mem198[es_151:di_130:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E8B:
	branch (int16) Mem205[ds:0x45B2:byte] != 0x0000 l0800_2EA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EA5:
	di = 0x45B2
	word16 cx_234 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EAF:
	branch cx_234 == 0x0000 l0800_2EB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EAF_1:
	di = di + 0x0001
	cx_234 = cx_234 - 0x0001
	branch Mem227[ds:di:byte] == 0x00 l0800_2EAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EB1:
	Mem250[ds:0x4619:word16] = ~cx_234 - 0x0001
	word16 dx_262 = fn0800_0C6C(ds, SEQ(ds, 0x45B2))
	branch Mem259[ds:0x464E:word16] != 0x0000 l0800_2EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EFE:
	si = fn0800_33CD(ds, SEQ(ss, fp - 0x0012), 0x0000, SEQ(ds, 0x45B2), out cx, out dx)
	Mem314[ds:0x4654:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ECA:
	selector es_317 = SLICE(ptrArg02, selector, 16)
	word16 di_324 = (word16) ptrArg02
	word16 di_2152 = 0x45B2
	word16 cx_330 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ED9:
	branch cx_330 == 0x0000 l0800_2EDB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ED9_2:
	di_2152 = di_2152 + 0x0001
	cx_330 = cx_330 - 0x0001
	branch Mem325[ds:di_2152:byte] == 0x00 l0800_2ED9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EDB:
	word16 cx_341 = ~cx_330
	word16 cx_344 = cx_341 >>u 0x0001
	word16 si_346 = di_2152 - cx_341
	word16 di_352 = di_324
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEA:
	branch cx_344 == 0x0000 l0800_2EEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEC:
	word16 cx_365 = cx_344 * 0x0002 + (cx_341 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEE:
	branch cx_365 == 0x0000 l0800_2EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EF0:
	Mem374[ds:0x4617:word16] = Mem370[ds:0x4617:word16] + 0x0001
	chOut = <invalid>
	dxOut = dx_262
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEE_1:
	Mem389[es_317:di_352:byte] = Mem370[ds:si_346:byte]
	si_346 = si_346 + 0x0001
	di_352 = di_352 + 0x0001
	cx_365 = cx_365 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEA_3:
	Mem399[es_317:di_352:word16] = Mem395[ds:si_346:word16]
	si_346 = si_346 + 0x0002
	di_352 = di_352 + 0x0002
	cx_344 = cx_344 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E93:
	word16 dx_435
	word16 ax_423 = fn0800_2DE2(cx_102, dx_72, si, di_130, ds, wArg02_1524, out ch_2143, out dx_435, out ds_2144)
	chOut = <invalid>
	dxOut = dx_435
	dsOut = ds
	return ax_423
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E3C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F1B:
	word16 cx_486
	word16 dx_487
	selector ds_488
	fn0800_A614(ds, SEQ(Mem68[ds:0x461D:word16], Mem479[ds:0x461B:word16]), out cx_486, out dx_487, out ds_488)
	Mem495[ds_488:0x4654:word16] = 0x0000
	Mem496[ds_488:0x461D:word16] = 0x0000
	Mem497[ds_488:0x461B:word16] = 0x0000
	Mem499[ds_488:0x4652:word16] = Mem497[ds_488:0x4652:word16] + 0x0001
	word16 dx_510
	word16 ax_509 = fn0800_2DE2(cx_486, dx_487, si, di, ds_488, wArg02_1524, out ch_2136, out dx_510, out ds_2137)
	chOut = <invalid>
	dxOut = dx_510
	dsOut = ds_488
	return ax_509
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F51:
	word16 ax_525 = Mem524[ds:0x4652:word16]
	branch ax_525 != Mem524[ds:0x4656:word16] l0800_2F5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F5D:
	branch ax_525 != Mem524[ds:0x269A:word16] l0800_2F6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F6B:
	ptr32 es_bx_533 = Mem524[ds:0x269C:segptr32]
	selector es_537 = SLICE(es_bx_533, selector, 16)
	word16 bx_535 = (word16) es_bx_533 + (Mem524[ds:0x4652:word16] << 0x0002)
	fn0800_BF9E(SEQ(ds, 0x45B2), SEQ(Mem524[es_537:bx_535 + 0x0002:word16], Mem542[es_537:bx_535:word16]))
	di = 0x45B2
	word16 cx_569 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F94:
	branch cx_569 == 0x0000 l0800_2F96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F94_1:
	di = di + 0x0001
	cx_569 = cx_569 - 0x0001
	branch Mem562[ds:di:byte] == 0x00 l0800_2F94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F96:
	Mem585[ds:0x4619:word16] = ~cx_569 - 0x0001
	word16 dx_597 = fn0800_0C6C(ds, SEQ(ds, 0x45B2))
	word16 ax_604 = Mem594[ds:0x4652:word16]
	Mem605[ds:0x4656:word16] = ax_604
	Mem606[ds:0x4617:word16] = 0x0000
	branch Mem606[Mem606[ds:(word16) Mem606[ds:0x269C:segptr32] + (ax_604 << 0x0002):segptr32]:byte] != 0x40 l0800_3007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3007:
	word16 dx_628 = fn0800_335C(si, di, ds, SEQ(ds, 0x45B2))
	branch Mem621[ds:0x464E:word16] != 0x0000 l0800_3051
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3051:
	si = fn0800_33CD(ds, SEQ(ss, fp - 0x0012), 0x0000, SEQ(ds, 0x45B2), out cx, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3019:
	selector es_675 = SLICE(ptrArg02, selector, 16)
	word16 di_682 = (word16) ptrArg02
	word16 di_2154 = 0x45B2
	word16 cx_688 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3028:
	branch cx_688 == 0x0000 l0800_302A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3028_1:
	di_2154 = di_2154 + 0x0001
	cx_688 = cx_688 - 0x0001
	branch Mem683[ds:di_2154:byte] == 0x00 l0800_3028
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_302A:
	word16 cx_699 = ~cx_688
	word16 cx_702 = cx_699 >>u 0x0001
	word16 si_704 = di_2154 - cx_699
	word16 di_710 = di_682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3039:
	branch cx_702 == 0x0000 l0800_303B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303B:
	word16 cx_723 = cx_702 * 0x0002 + (cx_699 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303D:
	branch cx_723 == 0x0000 l0800_303F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303F:
	Mem732[ds:0x4617:word16] = Mem728[ds:0x4617:word16] + 0x0001
	Mem734[ds:0x4652:word16] = Mem732[ds:0x4652:word16] + 0x0001
	chOut = <invalid>
	dxOut = dx_628
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303D_1:
	Mem749[es_675:di_710:byte] = Mem728[ds:si_704:byte]
	si_704 = si_704 + 0x0001
	di_710 = di_710 + 0x0001
	cx_723 = cx_723 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3039_2:
	Mem759[es_675:di_710:word16] = Mem755[ds:si_704:word16]
	si_704 = si_704 + 0x0002
	di_710 = di_710 + 0x0002
	cx_702 = cx_702 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2FC7:
	ptr32 es_bx_771 = Mem767[ds:0x269C:segptr32]
	selector es_775 = SLICE(es_bx_771, selector, 16)
	word16 bx_773 = (word16) es_bx_771 + (Mem767[ds:0x4652:word16] << 0x0002)
	word16 ax_776 = Mem767[es_775:bx_773:word16]
	word16 di_787
	selector ds_788
	word16 si_790
	word16 cx_786 = fn0800_4234(SEQ(si, di), ds, SEQ(Mem767[es_775:bx_773 + 0x0002:word16], ax_776 + 0x0001), SEQ(ds, 0x0A13), out si_790, out di_787, out ds_788)
	Mem797[ds_788:0x461D:word16] = dx_597
	Mem798[ds_788:0x461B:word16] = ax_776 + 0x0001
	Mem799[ds_788:0x4654:word16] = 0x0001
	word16 dx_808
	word16 ax_807 = fn0800_2DE2(cx_786, dx_597, si_790, di_787, ds_788, wArg02_1524, out ch_2145, out dx_808, out ds_2146)
	chOut = <invalid>
	dxOut = dx_808
	dsOut = ds_788
	return ax_807
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F63:
	chOut = <invalid>
	dxOut = dx
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F5A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3066:
	word16 si_1040 = si
	branch si != 0x0000 l0800_306D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_306D:
	branch Mem841[ds:0x2A1B:word16] == 0x0000 l0800_309E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3074:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_309A:
	branch si_1040 != 0x0000 l0800_3076
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3076:
	branch fn0800_31B4(si_1040, di, ds, SEQ(ds, 0x45B2), out cx, out dx) == 0x0000 l0800_309E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3085:
	si_1040 = fn0800_33CD(ds, SEQ(ss, fp - 0x0012), 0x0000, SEQ(ds, 0x45B2), out cx, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_309E:
	branch si_1040 == 0x0000 l0800_30F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30A2:
	word16 bx_913 = Mem911[ds:0x4619:word16]
	Mem914[ds:bx_913 + 0x45B2:byte] = 0x00
	branch Mem914[ds:0x4617:word16] != 0x0000 l0800_30C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30B2:
	branch Mem914[ds:0x4650:word16] == 0x0000 l0800_30C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30B9:
	fn0800_B2EF(cx, dx, bx_913, ds, SEQ(ds, 0x0A17), out si_1040, out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30C9:
	branch (Mem956[ds:0x461B:word16] | Mem956[ds:0x461D:word16]) == 0x0000 l0800_30DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30DA:
	Mem963[ds:0x4652:word16] = Mem956[ds:0x4652:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30D2:
	Mem965[ds:0x4654:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30DE:
	word16 dx_995
	word16 ax_992 = fn0800_2DE2(cx, dx, si_1040, di, ds, wArg02_1524, out ch_2139, out dx_995, out ds_2140)
	chOut = <invalid>
	dxOut = dx_995
	dsOut = ds
	return ax_992
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_306A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30F0:
	fn0800_3509(si_1040, di, wArg02_1524, wArg04_1522, SEQ(ds, 0x45B2), out bx_2138)
	word16 di_1065 = fp - 0x0012
	word16 cx_1077 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311B:
	branch cx_1077 == 0x0000 l0800_311D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311B_1:
	di_1065 = di_1065 + 0x0001
	cx_1077 = cx_1077 - 0x0001
	branch Mem1073[ss:di_1065:byte] == 0x00 l0800_311B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311D:
	word16 cx_1088 = ~cx_1077
	word16 si_1091 = di_1065 - cx_1088
	word16 di_1097 = wArg02_1524
	word16 cx_1111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3132:
	branch cx_1111 == 0x0000 l0800_3134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3132_2:
	di_1097 = di_1097 + 0x0001
	cx_1111 = cx_1111 - 0x0001
	branch Mem1110[wArg04_1522:di_1097:byte] == 0x00 l0800_3132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3134:
	word16 di_1125 = di_1097 - 0x0001
	word16 cx_1132 = cx_1088
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3136:
	branch cx_1132 == 0x0000 l0800_3138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3138:
	word16 dx_1148 = fn0800_0C6C(ds, ptrArg02)
	word16 si_1155 = wArg02_1524
	word16 di_1161 = 0x4348
	word16 ax_1165 = 0x0000
	word16 cx_1168 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315A:
	ax_1165 = DPB(ax_1165, 0x00, 0) (alias)
	ax_1165 = DPB(ax_1165, 0x00, 0) (alias)
	branch cx_1168 == 0x0000 l0800_315C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315A_1:
	di_1161 = di_1161 + 0x0001
	cx_1168 = cx_1168 - 0x0001
	branch Mem1163[ds:di_1161:byte] == 0x00 l0800_315A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315C:
	word16 cx_1179 = ~cx_1168
	word16 di_1181 = di_1161 - cx_1179
	bool Z_1193 = SLICE(cond(di_1181), bool, 2)
	di_1188 = di_1181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3160:
	word16 di_1188
	branch cx_1179 == 0x0000 l0800_3162
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3160_2:
	Z_1193 = SLICE(cond(Mem1163[wArg04_1522:si_1155:byte] - Mem1163[ds:di_1188:byte]), bool, 2) (alias)
	si_1155 = si_1155 + 0x0001
	di_1188 = di_1188 + 0x0001
	cx_1179 = cx_1179 - 0x0001
	branch Mem1163[wArg04_1522:si_1155:byte] != Mem1163[ds:di_1188:byte] l0800_3160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3162:
	branch Z_1193 l0800_3169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3164:
	word16 ax_1201 = 0x0000 - (di_1181 <u 0x0000)
	ax_1165 = ax_1201 - 0xFFFF - (ax_1201 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3169:
	branch ax_1165 == 0x0000 l0800_3195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_316E:
	si_1155 = wArg02_1524
	word16 di_1242 = 0x4477
	word16 ax_1246 = 0x0000
	word16 cx_1249 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3181:
	ax_1246 = DPB(ax_1246, 0x00, 0) (alias)
	ax_1246 = DPB(ax_1246, 0x00, 0) (alias)
	branch cx_1249 == 0x0000 l0800_3183
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3181_1:
	di_1242 = di_1242 + 0x0001
	cx_1249 = cx_1249 - 0x0001
	branch Mem1244[ds:di_1242:byte] == 0x00 l0800_3181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3183:
	cx_1179 = ~cx_1249
	word16 di_1262 = di_1242 - cx_1179
	bool Z_1274 = SLICE(cond(di_1262), bool, 2)
	di_1188 = di_1262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3187:
	branch cx_1179 == 0x0000 l0800_3189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3187_2:
	Z_1274 = SLICE(cond(Mem1244[wArg04_1522:si_1155:byte] - Mem1244[ds:di_1188:byte]), bool, 2) (alias)
	si_1155 = si_1155 + 0x0001
	di_1188 = di_1188 + 0x0001
	cx_1179 = cx_1179 - 0x0001
	branch Mem1244[wArg04_1522:si_1155:byte] != Mem1244[ds:di_1188:byte] l0800_3187
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3189:
	branch Z_1274 l0800_3190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_318B:
	word16 ax_1282 = 0x0000 - (di_1262 <u 0x0000)
	ax_1246 = ax_1282 - 0xFFFF - (ax_1282 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3190:
	branch ax_1246 != 0x0000 l0800_31A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31A7:
	Mem1313[ds:0x4617:word16] = Mem1244[ds:0x4617:word16] + 0x0001
	chOut = <invalid>
	dxOut = dx_1148
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3195:
	word16 dx_1362
	word16 ax_1350 = fn0800_2DE2(cx_1179, dx_1148, si_1155, di_1188, ds, wArg02_1524, out ch_2141, out dx_1362, out ds_2142)
	chOut = <invalid>
	dxOut = dx_1362
	dsOut = ds
	return ax_1350
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2DE2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3136_3:
	Mem1413[wArg04_1522:di_1125:byte] = Mem1137[ss:si_1091:byte]
	si_1091 = si_1091 + 0x0001
	di_1125 = di_1125 + 0x0001
	cx_1132 = cx_1132 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_31B4(word16 si, word16 di, selector ds, word32 dwArg02, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_31B4_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31B4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31BD:
	fn0800_3509(si, di, fp - 0x0084, ss, dwArg02, out bx_467)
	fn0800_35A3(si, di, fp - 0x0010, ss, dwArg02)
	word16 cx_87
	word16 dx_88
	branch fn0800_32CD(ds, SEQ(ss, fp - 0x001E), fp - 0x0084, ss, Mem56[ds:(Mem56[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16], out cx_87, out dx_88) != 0x0000 l0800_323E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_323E:
	branch Mem84[ds:0x09AC:word16] != 0x0000 l0800_3253
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3253:
	word16 di_107 = fp - 0x0084
	word16 cx_111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_325E:
	branch cx_111 == 0x0000 l0800_3260
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_325E_1:
	di_107 = di_107 + 0x0001
	cx_111 = cx_111 - 0x0001
	branch Mem104[ss:di_107:byte] == 0x00 l0800_325E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3260:
	Mem133[ss:~cx_111 - 0x0002 + (fp - 0x0084):byte] = 0x00
	fn0800_3509(si, di_107, wArg02, wArg04, SEQ(ss, fp - 0x0084), out bx_466)
	word16 di_172 = fp - 0x0010
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3298:
	branch cx_184 == 0x0000 l0800_329A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3298_2:
	di_172 = di_172 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem180[ss:di_172:byte] == 0x00 l0800_3298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_329A:
	word16 cx_195 = ~cx_184
	si = di_172 - cx_195
	word16 di_204 = wArg02
	word16 cx_218 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32AE:
	branch cx_218 == 0x0000 l0800_32B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32AE_3:
	di_204 = di_204 + 0x0001
	cx_218 = cx_218 - 0x0001
	branch Mem217[wArg04:di_204:byte] == 0x00 l0800_32AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B0:
	di = di_204 - 0x0001
	word16 cx_239 = cx_195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B2:
	branch cx_239 == 0x0000 l0800_32B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B4:
	Mem246[ds:0x09AC:word16] = Mem244[ds:0x09AC:word16] - 0x0001
	word16 bx_247 = Mem246[ds:0x09AC:word16]
	Mem251[ds:(bx_247 << 0x0001) + 0x09AE:word16] = Mem246[ds:(bx_247 << 0x0001) + 0x09AE:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B2_4:
	Mem258[wArg04:di:byte] = Mem244[ss:si:byte]
	si = si + 0x0001
	di = di + 0x0001
	cx_239 = cx_239 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3245:
	Mem262[ds:0x09AE:word16] = 0x0000
	cxOut = <invalid>
	dxOut = <invalid>
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31FF:
	fn0800_BEA2(cx_87, dx_88, ds, dwArg02, SEQ(ds, 0x0A27), out di_465)
	Mem315[ds:0x09AC:word16] = Mem302[ds:0x09AC:word16] + 0x0001
	Mem319[ds:(Mem315[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16] = 0x0000
	cxOut = <invalid>
	dxOut = <invalid>
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_31B4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_32CD(selector ds, word32 dwArg02, word16 wArg06, selector psegArg08, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_32CD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32CD:
	word16 di_26 = wArg06
	word16 cx_30 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E7:
	branch cx_30 == 0x0000 l0800_32E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E7_1:
	di_26 = di_26 + 0x0001
	cx_30 = cx_30 - 0x0001
	branch Mem25[psegArg08:di_26:byte] == 0x00 l0800_32E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E9:
	word16 cx_41 = ~cx_30
	word16 cx_213 = cx_41 >>u 0x0001
	word16 si_196 = di_26 - cx_41
	word16 di_199 = fp - 0x0068
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32F8:
	branch cx_213 == 0x0000 l0800_32FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FA:
	word16 cx_203 = cx_213 * 0x0002 + (cx_41 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FC:
	branch cx_203 == 0x0000 l0800_32FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FE:
	word16 di_371 = fp - 0x0068
	word16 si_186 = 0x0A32
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330C:
	branch cx_81 == 0x0000 l0800_330E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330C_1:
	di_371 = di_371 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem75[ss:di_371:byte] == 0x00 l0800_330C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330E:
	word16 di_190 = di_371 - 0x0001
	word16 cx_194 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3312:
	branch cx_194 == 0x0000 l0800_3314
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3314:
	word16 dx_120
	word16 cx_119
	branch fn0800_33CD(ds, dwArg02, 0x0010, SEQ(ss, fp - 0x0068), out cx_119, out dx_120) == 0x0000 l0800_334D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_334D:
	branch wArg0A != 0x0000 l0800_3336
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3336:
	branch fn0800_3479(ds, dwArg02, 0x0010, out cx_119, out dx_120) != 0x0000 l0800_3353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_334A:
	wArg0A = wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3353:
	cxOut = cx_119
	dxOut = dx_120
	return wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_332D:
	cxOut = cx_119
	dxOut = dx_120
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_32CD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3312_2:
	Mem191[ss:di_190:byte] = Mem187[ds:si_186:byte]
	si_186 = si_186 + 0x0001
	di_190 = di_190 + 0x0001
	cx_194 = cx_194 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FC_1:
	Mem200[ss:di_199:byte] = Mem71[psegArg08:si_196:byte]
	si_196 = si_196 + 0x0001
	di_199 = di_199 + 0x0001
	cx_203 = cx_203 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32F8_2:
	Mem210[ss:di_199:word16] = Mem206[psegArg08:si_196:word16]
	si_196 = si_196 + 0x0002
	di_199 = di_199 + 0x0002
	cx_213 = cx_213 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_335C(word16 si, word16 di, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_335C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_335C:
	word16 dx_306
	branch fn0800_33CD(ds, SEQ(ss, fp - 0x0010), 0x0010, ptrArg02, out cx_34, out dx_306) != 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_337D:
	dx_306 = fn0800_35A3(si, di, fp - 0x001E, ss, ptrArg02)
	word16 si_100 = fp - 0x0010
	word16 di_350 = fp - 0x001E
	word16 ax_119 = 0x0000
	word16 cx_83 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A0:
	ax_119 = DPB(ax_119, 0x00, 0) (alias)
	ax_119 = DPB(ax_119, 0x00, 0) (alias)
	branch cx_83 == 0x0000 l0800_33A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A0_1:
	di_350 = di_350 + 0x0001
	cx_83 = cx_83 - 0x0001
	branch Mem76[ss:di_350:byte] == 0x00 l0800_33A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A2:
	word16 cx_107 = ~cx_83
	word16 di_96 = di_350 - cx_107
	bool Z_108 = SLICE(cond(di_96), bool, 2)
	di_103 = di_96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A6:
	word16 di_103
	branch cx_107 == 0x0000 l0800_33A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A6_2:
	Z_108 = SLICE(cond(Mem76[ss:si_351:byte] - Mem76[ss:di_352:byte]), bool, 2) (alias)
	si_100 = si_351 + 0x0001
	di_103 = di_352 + 0x0001
	cx_107 = cx_107 - 0x0001
	si_351 = si_100
	di_352 = di_103
	branch Mem76[ss:si_351:byte] != Mem76[ss:di_352:byte] l0800_33A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A8:
	branch Z_108 l0800_33AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33AA:
	word16 ax_116 = 0x0000 - (di_96 <u 0x0000)
	ax_119 = ax_116 - 0xFFFF - (ax_116 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33AF:
	branch ax_119 != 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33B4:
	selector es_202 = SLICE(ptrArg02, selector, 16)
	word16 di_160 = (word16) ptrArg02
	word16 si_152 = 0x0A36
	word16 cx_153 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33BF:
	branch cx_153 == 0x0000 l0800_33C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33BF_1:
	di_160 = di_160 + 0x0001
	cx_153 = cx_153 - 0x0001
	branch Mem76[es_202:di_160:byte] == 0x00 l0800_33BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C1:
	word16 di_167 = di_160 - 0x0001
	word16 cx_169 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C5:
	branch cx_169 == 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C7:
	return dx_306
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_335C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C5_2:
	Mem190[es_202:di_167:byte] = Mem176[ds:si_152:byte]
	si_152 = si_152 + 0x0001
	di_167 = di_167 + 0x0001
	cx_169 = cx_169 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_33CD(selector ds, segptr32 ptrArg02, word16 wArg06, word32 dwArg08, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_33CD_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33CD:
	word16 cx_32
	word16 dx_33
	branch fn0800_A817(0x4623, ds, dwArg08, SEQ(ds, 0x4623), wArg06, out cx_32, out dx_33) == 0x0000 l0800_33F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33F1:
	word16 di_50 = 0x0A3B
	word16 si_51 = 0x4641
	word16 cx_52 = 0x0002
	word16 ax_53 = 0x0000
	bool Z_66 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33FE:
	branch cx_52 == 0x0000 l0800_3400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33FE_1:
	Z_66 = SLICE(cond(Mem47[ds:si_475:byte] - Mem47[ds:di_476:byte]), bool, 2) (alias)
	si_51 = si_475 + 0x0001
	di_50 = di_476 + 0x0001
	cx_52 = cx_52 - 0x0001
	si_475 = si_51
	di_476 = di_50
	branch Mem47[ds:si_475:byte] != Mem47[ds:di_476:byte] l0800_33FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3400:
	branch Z_66 l0800_3407
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3402:
	ax_53 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3407:
	branch ax_53 == 0x0000 l0800_3431
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_340B:
	word16 di_108 = 0x0A3D
	word16 si_105 = 0x4641
	word16 cx_103 = 0x0003
	word16 ax_100 = 0x0000
	bool Z_113 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3418:
	branch cx_103 == 0x0000 l0800_341A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3418_1:
	Z_113 = SLICE(cond(Mem94[ds:si_477:byte] - Mem94[ds:di_478:byte]), bool, 2) (alias)
	si_105 = si_477 + 0x0001
	di_108 = di_478 + 0x0001
	cx_103 = cx_103 - 0x0001
	si_477 = si_105
	di_478 = di_108
	branch Mem94[ds:si_477:byte] != Mem94[ds:di_478:byte] l0800_3418
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_341A:
	branch Z_113 l0800_3421
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_341C:
	ax_100 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3421:
	branch ax_100 == 0x0000 l0800_3431
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3425:
	branch ((int16) Mem94[ds:0x4638:byte] & wArg06) == wArg06 l0800_3444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3444:
	branch (wArg02 | wArg04) == 0x0000 l0800_3473
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_344C:
	selector es_160 = SLICE(ptrArg02, selector, 16)
	word16 di_167 = (word16) ptrArg02
	word16 di_169 = 0x4641
	word16 cx_173 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345B:
	branch cx_173 == 0x0000 l0800_345D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345B_1:
	di_169 = di_169 + 0x0001
	cx_173 = cx_173 - 0x0001
	branch Mem168[ds:di_169:byte] == 0x00 l0800_345B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345D:
	word16 cx_184 = ~cx_173
	word16 cx_187 = cx_184 >>u 0x0001
	word16 si_189 = di_169 - cx_184
	word16 di_195 = di_167
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346C:
	branch cx_187 == 0x0000 l0800_346E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346E:
	cx_103 = cx_187 * 0x0002 + (cx_184 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3470:
	branch cx_103 == 0x0000 l0800_3472
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3472:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3473:
	cxOut = cx_103
	dxOut = dx_33
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3470_1:
	Mem233[es_160:di_195:byte] = Mem213[ds:si_189:byte]
	si_189 = si_189 + 0x0001
	di_195 = di_195 + 0x0001
	cx_103 = cx_103 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346C_2:
	Mem243[es_160:di_195:word16] = Mem239[ds:si_189:word16]
	si_189 = si_189 + 0x0002
	di_195 = di_195 + 0x0002
	cx_187 = cx_187 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3431:
	word16 cx_265
	word16 dx_266
	word16 ax_263 = fn0800_3479(ds, ptrArg02, wArg06, out cx_265, out dx_266)
	cxOut = cx_265
	dxOut = dx_266
	return ax_263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33EA:
	cxOut = cx_32
	dxOut = dx_33
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_33CD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3479(selector ds, segptr32 ptrArg02, word16 wArg06, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_3479_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3479:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_347E:
	word16 cx_25
	branch fn0800_A84A(0x4623, ds, SEQ(ds, 0x4623), out cx_25, out dx_26) == 0x0000 l0800_3494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3494:
	word16 di_43 = 0x0A3B
	word16 si_44 = 0x4641
	word16 cx_45 = 0x0002
	word16 ax_46 = 0x0000
	bool Z_59 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A1:
	branch cx_45 == 0x0000 l0800_34A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A1_1:
	Z_59 = SLICE(cond(Mem40[ds:si_420:byte] - Mem40[ds:di_421:byte]), bool, 2) (alias)
	si_44 = si_420 + 0x0001
	di_43 = di_421 + 0x0001
	cx_45 = cx_45 - 0x0001
	si_420 = si_44
	di_421 = di_43
	branch Mem40[ds:si_420:byte] != Mem40[ds:di_421:byte] l0800_34A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A3:
	branch Z_59 l0800_34AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A5:
	ax_46 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34AA:
	branch ax_46 == 0x0000 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34AE:
	word16 di_101 = 0x0A3D
	word16 si_103 = 0x4641
	word16 cx_105 = 0x0003
	word16 ax_116 = 0x0000
	bool Z_106 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BB:
	branch cx_105 == 0x0000 l0800_34BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BB_1:
	Z_106 = SLICE(cond(Mem87[ds:si_422:byte] - Mem87[ds:di_423:byte]), bool, 2) (alias)
	si_103 = si_422 + 0x0001
	di_101 = di_423 + 0x0001
	cx_105 = cx_105 - 0x0001
	si_422 = si_103
	di_423 = di_101
	branch Mem87[ds:si_422:byte] != Mem87[ds:di_423:byte] l0800_34BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BD:
	branch Z_106 l0800_34C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BF:
	ax_116 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34C4:
	branch ax_116 == 0x0000 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34C8:
	branch ((int16) Mem87[ds:0x4638:byte] & wArg06) != wArg06 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34D4:
	branch (wArg02 | wArg04) == 0x0000 l0800_3503
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34DC:
	selector es_154 = SLICE(ptrArg02, selector, 16)
	word16 di_161 = (word16) ptrArg02
	word16 di_163 = 0x4641
	word16 cx_167 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34EB:
	branch cx_167 == 0x0000 l0800_34ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34EB_1:
	di_163 = di_163 + 0x0001
	cx_167 = cx_167 - 0x0001
	branch Mem162[ds:di_163:byte] == 0x00 l0800_34EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34ED:
	word16 cx_178 = ~cx_167
	word16 cx_181 = cx_178 >>u 0x0001
	word16 si_183 = di_163 - cx_178
	word16 di_189 = di_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FC:
	branch cx_181 == 0x0000 l0800_34FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FE:
	cx_105 = cx_181 * 0x0002 + (cx_178 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3500:
	branch cx_105 == 0x0000 l0800_3502
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3502:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3503:
	cxOut = cx_105
	dxOut = <invalid>
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3500_1:
	Mem227[es_154:di_189:byte] = Mem207[ds:si_183:byte]
	si_183 = si_183 + 0x0001
	di_189 = di_189 + 0x0001
	cx_105 = cx_105 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FC_2:
	Mem237[es_154:di_189:word16] = Mem233[ds:si_183:word16]
	si_183 = si_183 + 0x0002
	di_189 = di_189 + 0x0002
	cx_181 = cx_181 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_348D:
	cxOut = cx_25
	dxOut = <invalid>
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3479_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3509(word16 si, word16 di, word16 wArg02, selector psegArg04, word32 dwArg06, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: bx dx
// Trashed: SCZDO ax bx dx es Top
// Preserved: bp di ds si sp
fn0800_3509_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3509:
	word16 bx_44 = fn0800_BE3B(si, di, dwArg06, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x005A), SEQ(ss, fp - 0x0010), SEQ(ss, fp - 0x0016))
	word16 di_397 = fp - 0x0006
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354B:
	branch cx_81 == 0x0000 l0800_354D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354B_1:
	di_397 = di_397 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem77[ss:di_397:byte] == 0x00 l0800_354B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354D:
	word16 cx_92 = ~cx_81
	word16 cx_115 = cx_92 >>u 0x0001
	word16 si_229 = di_397 - cx_92
	word16 di_103 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355C:
	branch cx_115 == 0x0000 l0800_355E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355E:
	word16 cx_117 = cx_115 * 0x0002 + (cx_92 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3560:
	branch cx_117 == 0x0000 l0800_3562
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3562:
	word16 di_138 = fp - 0x005A
	word16 cx_150 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357D:
	branch cx_150 == 0x0000 l0800_357F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357D_1:
	di_138 = di_138 + 0x0001
	cx_150 = cx_150 - 0x0001
	branch Mem146[ss:di_138:byte] == 0x00 l0800_357D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357F:
	word16 cx_161 = ~cx_150
	word16 si_164 = di_138 - cx_161
	word16 di_170 = wArg02
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3594:
	branch cx_184 == 0x0000 l0800_3596
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3594_2:
	di_170 = di_170 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem183[psegArg04:di_170:byte] == 0x00 l0800_3594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3596:
	word16 di_198 = di_170 - 0x0001
	word16 cx_205 = cx_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3598:
	branch cx_205 == 0x0000 l0800_359A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_359A:
	bxOut = bx_44
	return psegArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3509_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3598_3:
	Mem224[psegArg04:di_198:byte] = Mem210[ss:si_164:byte]
	si_164 = si_164 + 0x0001
	di_198 = di_198 + 0x0001
	cx_205 = cx_205 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3560_1:
	Mem233[psegArg04:di_103:byte] = Mem122[ss:si_229:byte]
	si_229 = si_229 + 0x0001
	di_103 = di_103 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355C_2:
	Mem243[psegArg04:di_103:word16] = Mem239[ss:si_229:word16]
	si_229 = si_229 + 0x0002
	di_103 = di_103 + 0x0002
	cx_115 = cx_115 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_35A3(word16 si, word16 di, word16 wArg02, selector psegArg04, word32 dwArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: dx
// Trashed: SCZDO ax bx dx es Top
// Preserved: bp di ds si sp
fn0800_35A3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35A3:
	fn0800_BE3B(si, di, dwArg06, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x005A), SEQ(ss, fp - 0x0010), SEQ(ss, fp - 0x0016))
	word16 di_396 = fp - 0x0010
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E5:
	branch cx_81 == 0x0000 l0800_35E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E5_1:
	di_396 = di_396 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem77[ss:di_396:byte] == 0x00 l0800_35E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E7:
	word16 cx_92 = ~cx_81
	word16 cx_115 = cx_92 >>u 0x0001
	word16 si_229 = di_396 - cx_92
	word16 di_103 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F6:
	branch cx_115 == 0x0000 l0800_35F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F8:
	word16 cx_117 = cx_115 * 0x0002 + (cx_92 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FA:
	branch cx_117 == 0x0000 l0800_35FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FC:
	word16 di_138 = fp - 0x0016
	word16 cx_150 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3617:
	branch cx_150 == 0x0000 l0800_3619
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3617_1:
	di_138 = di_138 + 0x0001
	cx_150 = cx_150 - 0x0001
	branch Mem146[ss:di_138:byte] == 0x00 l0800_3617
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3619:
	word16 cx_161 = ~cx_150
	word16 si_164 = di_138 - cx_161
	word16 di_170 = wArg02
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_362E:
	branch cx_184 == 0x0000 l0800_3630
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_362E_2:
	di_170 = di_170 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem183[psegArg04:di_170:byte] == 0x00 l0800_362E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3630:
	word16 di_198 = di_170 - 0x0001
	word16 cx_205 = cx_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3632:
	branch cx_205 == 0x0000 l0800_3634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3634:
	return psegArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_35A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3632_3:
	Mem224[psegArg04:di_198:byte] = Mem210[ss:si_164:byte]
	si_164 = si_164 + 0x0001
	di_198 = di_198 + 0x0001
	cx_205 = cx_205 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FA_1:
	Mem233[psegArg04:di_103:byte] = Mem122[ss:si_229:byte]
	si_229 = si_229 + 0x0001
	di_103 = di_103 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F6_2:
	Mem243[psegArg04:di_103:word16] = Mem239[ss:si_229:word16]
	si_229 = si_229 + 0x0002
	di_103 = di_103 + 0x0002
	cx_115 = cx_115 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_363D(selector ds, segptr32 ptrArg02, word32 dwArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_363D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_363D:
	branch fn0800_A817(fp - 0x002E, ds, dwArg06, SEQ(ss, fp - 0x002E), 0x0000, out cx_29, out dx_30) == 0x0000 l0800_3662
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3662:
	Mem47[ptrArg02:word16] = wLoc18
	Mem49[ptrArg02 + 0x0002:word16] = wLoc16
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_365B:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_363D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3678(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: cx ds dx si
// Trashed: SCZO ax bx cx ds dx es si Top
// Preserved: DP bp di sp
fn0800_3678_entry:
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3678:
	selector es_273 = SLICE(ptrArg02, selector, 16)
	word16 di_25 = (word16) ptrArg02
	word16 cx_21 = 0xFFFF
	segptr32 ptrLoc06_328 = ptrArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3693:
	branch cx_21 == 0x0000 l0800_3695
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3693_1:
	di_25 = di_25 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch Mem16[es_273:di_25:byte] == 0x00 l0800_3693
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3695:
	word16 cx_32 = ~cx_21
	word16 di_35 = di_25 - cx_32
	bool Z_45 = SLICE(cond(di_35), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369C:
	branch cx_32 == 0x0000 l0800_369E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369C_2:
	Z_45 = SLICE(cond(0x5C - Mem16[es_273:di_35:byte]), bool, 2) (alias)
	di_35 = di_35 + 0x0001
	cx_32 = cx_32 - 0x0001
	branch Mem16[es_273:di_35:byte] == 0x5C l0800_369C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369E:
	branch Z_45 l0800_36A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36A0:
	di_35 = 0x0001
	es_273 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36A7:
	word16 di_56 = di_35 - 0x0001
	branch (di_56 | es_273) == 0x0000 l0800_3732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36B6:
	segptr32 ptrLoc0A_321 = SEQ(es_273, di_56)
	word16 wLoc08_323 = SLICE(ptrLoc0A_321, word16, 16)
	word16 wLoc0A_325 = SLICE(ptrLoc0A_321, word16, 0)
	branch es_273 != wArg04 l0800_36C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36C1:
	branch di_56 == wArg02 l0800_36D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36C6:
	branch Mem71[ptrLoc0A_321 - 0x0001:byte] != 0x3A l0800_3732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36D0:
	ptrLoc06_328 = SEQ(wLoc08_323, wLoc0A_325 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3732:
	selector es_139 = SLICE(ptrLoc06_328, selector, 16)
	word16 di_111 = (word16) ptrLoc06_328
	word16 cx_107 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373A:
	branch cx_107 == 0x0000 l0800_373C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373A_1:
	di_111 = di_111 + 0x0001
	cx_107 = cx_107 - 0x0001
	branch Mem102[es_139:di_111:byte] == 0x00 l0800_373A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373C:
	word16 cx_118 = ~cx_107
	word16 di_121 = di_111 - cx_118
	bool Z_131 = SLICE(cond(di_121), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3743:
	branch cx_118 == 0x0000 l0800_3745
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3743_2:
	Z_131 = SLICE(cond(0x5C - Mem102[es_139:di_121:byte]), bool, 2) (alias)
	di_121 = di_121 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch Mem102[es_139:di_121:byte] == 0x5C l0800_3743
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3745:
	branch Z_131 l0800_374E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3747:
	di_121 = 0x0001
	es_139 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_374E:
	word16 di_142 = di_121 - 0x0001
	segptr32 ptrLoc0A_331 = SEQ(es_139, di_142)
	word16 dx_159 = di_142 | es_139
	word16 wLoc08_359 = SLICE(ptrLoc0A_331, word16, 16)
	word16 wLoc0A_360 = SLICE(ptrLoc0A_331, word16, 0)
	branch dx_159 != 0x0000 l0800_36DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36DF:
	Mem166[ptrLoc0A_331:byte] = 0x00
	word16 ax_195 = fn0800_33CD(ds, 0x00000000, 0x0010, ptrArg02, out cx_487, out dx_488)
	branch ax_195 == 0x0000 l0800_371E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36FE:
	branch fn0800_8E52(ax_195, ds) == 0x0000 l0800_371E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_370E:
	fn0800_0D24(ds, 0x000E, ptrArg02, out cx_489, out dx_490, out bx_491, out si, out di_492, out es_493, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_371E:
	Mem258[ptrLoc0A_331:byte] = 0x5C
	ptrLoc06_328 = SEQ(wLoc08_359, wLoc0A_360 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_375D:
	dxOut = dx_159
	siOut = si
	dsOut = ds
	return cx_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3678_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3764(word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D di ds si sp
fn0800_3764_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3764:
	branch Mem10[ds:0x427E:byte] == 0x00 l0800_3796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3796:
	dx = fn0800_3509(si, di, 0x44DC, ds, SEQ(ds, 0x4541), out bx_25)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_376D:
	word16 di_253 = 0x427E
	word16 cx_49 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377C:
	branch cx_49 == 0x0000 l0800_377E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377C_1:
	di_253 = di_253 + 0x0001
	cx_49 = cx_49 - 0x0001
	branch Mem44[ds:di_253:byte] == 0x00 l0800_377C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377E:
	word16 cx_60 = ~cx_49
	word16 cx_153 = cx_60 >>u 0x0001
	word16 si_136 = di_253 - cx_60
	word16 di_139 = 0x44DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378D:
	branch cx_153 == 0x0000 l0800_378F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378F:
	word16 cx_143 = cx_153 * 0x0002 + (cx_60 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3791:
	branch cx_143 == 0x0000 l0800_3793
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3793:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37A6:
	word16 di_108 = 0x44DC
	word16 si_100 = 0x0A40
	word16 cx_101 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B3:
	branch cx_101 == 0x0000 l0800_37B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B3_1:
	di_108 = di_108 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch Mem96[ds:di_108:byte] == 0x00 l0800_37B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B5:
	word16 di_115 = di_108 - 0x0001
	word16 cx_117 = 0x000D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B9:
	branch cx_117 == 0x0000 l0800_37BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37BB:
	return dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3764_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B9_2:
	Mem131[ds:di_115:byte] = Mem121[ds:si_100:byte]
	si_100 = si_100 + 0x0001
	di_115 = di_115 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3791_1:
	Mem140[ds:di_139:byte] = Mem89[ds:si_136:byte]
	si_136 = si_136 + 0x0001
	di_139 = di_139 + 0x0001
	cx_143 = cx_143 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378D_2:
	Mem150[ds:di_139:word16] = Mem146[ds:si_136:word16]
	si_136 = si_136 + 0x0002
	di_139 = di_139 + 0x0002
	cx_153 = cx_153 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_37BE(word16 cx, word16 dx, selector ds, word32 dwArg02, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: di si
// Trashed: SCZDO ax bx di es si Top
// Preserved: bp sp
fn0800_37BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37BE:
	word16 di_36
	word16 si_38 = fn0800_BEA2(cx, dx, ds, dwArg02, SEQ(ds, 0x0A2B), out di_36)
	diOut = di_36
	return si_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_37BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_37DF(word16 si, word16 di, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ds si
// Trashed: SCZDO ax bx cx ds dx es si Top
// Preserved: bp di sp
fn0800_37DF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37DF:
	fn0800_3509(si, di, fp - 0x006C, ss, SEQ(ds, 0x44DC), out bx_355)
	selector es_44 = ss
	word16 di_365 = fp - 0x006C
	word16 cx_50 = 0xFFFF
	word32 dwLoc72_285 = SEQ(ds, 0x4541)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3805:
	branch cx_50 == 0x0000 l0800_3807
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3805_1:
	di_365 = di_365 + 0x0001
	cx_50 = cx_50 - 0x0001
	branch Mem43[ss:di_365:byte] == 0x00 l0800_3805
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3807:
	word16 cx_61 = ~cx_50
	word16 di_366 = di_365 - cx_61
	bool Z_74 = SLICE(cond(di_366), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380D:
	branch cx_61 == 0x0000 l0800_380F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380D_2:
	Z_74 = SLICE(cond(0x00 - Mem43[ss:di_366:byte]), bool, 2) (alias)
	di_366 = di_366 + 0x0001
	cx_61 = cx_61 - 0x0001
	branch Mem43[ss:di_366:byte] == 0x00 l0800_380D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380F:
	branch Z_74 l0800_3818
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3811:
	di_366 = 0x0001
	es_44 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3818:
	word16 di_85 = di_366 - 0x0001
	fn0800_35A3(si, di_85, di_85, es_44, dwLoc72_285)
	selector ds_146
	word16 si_149
	fn0800_AA7E(SEQ(si, di_85), ds, SEQ(ss, fp - 0x006C), SEQ(ds, 0x0A4D), out cx_144, out dx_356, out si_149, out di_357, out ds_146)
	word32 dx_ax_353 = <invalid>
	branch (SLICE(dx_ax_353, word16, 0) | SLICE(dx_ax_353, word16, 16)) == 0x0000 l0800_3863
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_383D:
	fn0800_A614(ds_146, dx_ax_353, out cx_358, out dx_359, out ds_146)
	fn0800_A4F6(ds_146, SEQ(ss, fp - 0x006C), 0x0180)
	fn0800_8F7F(fp - 0x006C, ds_146, SEQ(ss, fp - 0x006C))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3863:
	branch fn0800_BA4A(ds_146, SEQ(ds_146, 0x44DC), SEQ(ss, fp - 0x006C), out dx_224) != 0xFFFF l0800_3887
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3878:
	fn0800_0D24(ds_146, 0x000A, SEQ(ds_146, 0x44DC), out cx_360, out dx_361, out bx_362, out si_149, out di_363, out es_364, out ds_146)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3887:
	dsOut = ds_146
	return si_149
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_37DF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_388C(word32 si_di, word16 dx, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] dx:[0..15] Sequence si:di:[0..31] ss:[0..15]
// LiveOut: ax cx ds dx
// Trashed: SCZDOP ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_388C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_388C:
	selector ds_28
	fn0800_4234(si_di, ds, SEQ(ds, 0x4541), SEQ(ds, 0x0A13), out si_322, out di_323, out ds_28)
	Mem38[ds_28:0x29E5:word16] = dx
	Mem39[ds_28:0x29E3:word16] = 0x4541
	word32 si_di_318 = <invalid>
	selector ds_54
	fn0800_4234(si_di_318, ds_28, SEQ(ds_28, 0x44DC), SEQ(ds_28, 0x0A50), out si_56, out di_53, out ds_54)
	Mem63[ds_54:0x29E1:word16] = dx
	Mem64[ds_54:0x29DF:word16] = 0x44DC
	word16 dx_78
	word16 cx_77 = fn0800_363D(ds_54, SEQ(ss, fp - 0x0006), SEQ(ds_54, 0x44DC), out dx_78)
	branch Mem74[ds_54:0x0A12:byte] != 0x00 l0800_38EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_38EF:
	word16 dx_102
	word16 cx_101 = fn0800_363D(ds_54, SEQ(ss, fp - 0x000A), SEQ(ds_54, 0x4541), out dx_102)
	branch fn0800_395B(SEQ(ss, fp - 0x000A), SEQ(ds_54, 0x461F)) < 0x0000 l0800_3927
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3913:
	branch fn0800_395B(SEQ(ss, fp - 0x000A), SEQ(ss, fp - 0x0006)) <= 0x0000 l0800_392E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_392E:
	selector ds_166
	fn0800_A614(ds_54, SEQ(Mem143[ds_54:0x29E5:word16], Mem157[ds_54:0x29E3:word16]), out cx_324, out dx_325, out ds_166)
	word16 cx_182
	selector ds_184
	fn0800_A614(ds_166, SEQ(Mem160[ds_166:0x29E1:word16], Mem175[ds_166:0x29DF:word16]), out cx_182, out dx_326, out ds_184)
	word16 dx_197 = fn0800_8F7F(0x44DC, ds_184, SEQ(ds_184, 0x44DC))
	cxOut = cx_182
	dxOut = dx_197
	dsOut = ds_184
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3927:
	cxOut = cx_101
	dxOut = dx_102
	dsOut = ds_54
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_38D7:
	Mem217[ds_54:0x4621:word16] = wLoc04
	Mem219[ds_54:0x461F:word16] = wLoc06
	Mem220[ds_54:0x0A12:byte] = 0x01
	cxOut = cx_77
	dxOut = dx_78
	dsOut = ds_54
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_388C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx es Top
// Preserved: bp sp
fn0800_395B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_395B:
	word16 ax_13 = Mem7[ptrArg02 + 0x0002:word16]
	branch ax_13 != Mem14[ptrArg06 + 0x0002:word16] l0800_3984
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3984:
	return ax_13 - Mem14[ptrArg06 + 0x0002:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3974:
	return Mem14[ptrArg02:word16] - Mem14[ptrArg06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_395B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3992(word16 si, word16 di, selector ds, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax di ds dx si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: DP bp sp
fn0800_3992_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3992:
	branch Mem12[ds:0x427E:byte] == 0x00 l0800_39AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39A0:
	branch Mem12[ds:0x2A23:word16] != 0x0001 l0800_39AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39A7:
	branch Mem12[ds:0x2A17:word16] != 0x0000 l0800_39B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39B5:
	fn0800_3509(si, di, fp - 0x0074, ss, SEQ(ds, 0x44DC), out bx_634)
	selector es_49 = ss
	word16 di_51 = fp - 0x0074
	word16 cx_55 = 0xFFFF
	word32 dwLoc7A_511 = SEQ(ds, 0x4541)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D4:
	branch cx_55 == 0x0000 l0800_39D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D4_1:
	di_51 = di_51 + 0x0001
	cx_55 = cx_55 - 0x0001
	branch Mem48[ss:di_51:byte] == 0x00 l0800_39D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D6:
	word16 cx_66 = ~cx_55
	word16 di_649 = di_51 - cx_66
	bool Z_79 = SLICE(cond(di_649), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DC:
	branch cx_66 == 0x0000 l0800_39DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DC_2:
	Z_79 = SLICE(cond(0x00 - Mem48[ss:di_649:byte]), bool, 2) (alias)
	di_649 = di_649 + 0x0001
	cx_66 = cx_66 - 0x0001
	branch Mem48[ss:di_649:byte] == 0x00 l0800_39DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DE:
	branch Z_79 l0800_39E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39E0:
	di_649 = 0x0001
	es_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39E7:
	word16 di_90 = di_649 - 0x0001
	fn0800_35A3(si, di_90, di_90, es_49, dwLoc7A_511)
	selector ds_151
	word16 si_154
	fn0800_AA7E(SEQ(si, di_90), ds, SEQ(ss, fp - 0x0074), SEQ(ds, 0x0A4D), out cx_635, out dx_636, out si_154, out di_637, out ds_151)
	word32 dx_ax_629 = <invalid>
	word16 dx_152 = SLICE(dx_ax_629, word16, 16)
	word16 ax_147 = SLICE(dx_ax_629, word16, 0)
	word16 ax_162 = ax_147 | dx_152
	branch ax_162 != 0x0000 l0800_3A13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A13:
	fn0800_4194(ds_151, dx_ax_629)
	branch dx_152 >u 0x0000 l0800_3A3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A23:
	branch dx_152 != 0x0000 l0800_3A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A25:
	branch ax_162 >u 0x0012 l0800_3A3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A3D:
	selector ds_201
	word16 dx_215
	word16 ax_212 = fn0800_8CAA(ax_162, 0x08, fn0800_3E5D(ds_151, dx_ax_629, out di_638, out ds_201), out dx_215)
	word16 sp_216 = <invalid>
	branch dx_215 != 0x0052 l0800_3A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A53:
	branch ax_212 == 0x4E43 l0800_3A6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A6B:
	Mem227[ss:sp_216 - 2:word16] = dx_152
	Mem230[ss:sp_216 - 4:word16] = ax_147
	selector ds_234
	branch fn0800_3E5D(ds_201, Mem230[ss:sp_216 - 4:word32], out di_641, out ds_234) != Mem230[ds_234:0x2A09:word16] l0800_3A83
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A7D:
	branch ax_212 == Mem230[ds_234:0x2A07:word16] l0800_3A96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A96:
	Mem247[ss:sp_216 - 2:word16] = ss
	Mem250[ss:sp_216 - 4:word16] = fp - 0x0074
	Mem252[ss:sp_216 - 6:word16] = ss
	Mem255[ss:sp_216 - 8:word16] = fp - 0x000E
	fn0800_363D(ds_234, Mem255[ss:sp_216 - 8:segptr32], Mem255[ss:sp_216 - 4:word32], out dx_643)
	Mem270[ss:sp_216 - 2:word16] = ds_234
	Mem273[ss:sp_216 - 4:word16] = 0x4541
	Mem275[ss:sp_216 - 6:word16] = ss
	Mem278[ss:sp_216 - 8:word16] = fp - 0x000A
	fn0800_363D(ds_234, Mem278[ss:sp_216 - 8:segptr32], Mem278[ss:sp_216 - 4:word32], out dx_644)
	Mem293[ss:sp_216 - 2:word16] = ss
	Mem296[ss:sp_216 - 4:word16] = fp - 0x000A
	Mem298[ss:sp_216 - 6:word16] = ss
	Mem301[ss:sp_216 - 8:word16] = fp - 0x000E
	word16 ax_302 = fn0800_395B(Mem301[ss:sp_216 - 8:segptr32], Mem301[ss:sp_216 - 4:segptr32])
	branch ax_302 >= 0x0000 l0800_3ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ADD:
	Mem316[ss:sp_216 - 2:word16] = dx_152
	Mem319[ss:sp_216 - 4:word16] = ax_147
	selector ds_323
	Mem336[ds_323:0x2A05:word16] = fn0800_3E5D(ds_234, Mem319[ss:sp_216 - 4:word32], out di_645, out ds_323) + (ax_302 <u 0x0012)
	Mem337[ds_323:0x2A03:word16] = ax_302 + 0x0012
	Mem340[ss:sp_216 - 2:word16] = dx_152
	Mem343[ss:sp_216 - 4:word16] = ax_147
	word16 dx_348
	selector ds_349
	fn0800_A614(ds_323, Mem343[ss:sp_216 - 4:segptr32], out cx_646, out dx_348, out ds_349)
	word16 di_357 = Mem343[ss:sp_216:word16]
	dxOut = dx_348
	siOut = si_154
	diOut = di_357
	dsOut = ds_349
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ACA:
	Mem363[ss:sp_216 - 2:word16] = dx_152
	Mem366[ss:sp_216 - 4:word16] = ax_147
	word16 dx_371
	selector ds_372
	fn0800_A614(ds_234, Mem366[ss:sp_216 - 4:segptr32], out cx_647, out dx_371, out ds_372)
	word16 di_381 = Mem366[ss:sp_216:word16]
	dxOut = dx_371
	siOut = si_154
	diOut = di_381
	dsOut = ds_372
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A83:
	Mem391[ss:sp_216 - 2:word16] = dx_152
	Mem394[ss:sp_216 - 4:word16] = ax_147
	word16 dx_400
	selector ds_401
	fn0800_A614(ds_234, Mem394[ss:sp_216 - 4:segptr32], out cx_642, out dx_400, out ds_401)
	word16 di_410 = Mem394[ss:sp_216:word16]
	dxOut = dx_400
	siOut = si_154
	diOut = di_410
	dsOut = ds_401
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A58:
	Mem420[ss:sp_216 - 2:word16] = dx_152
	Mem423[ss:sp_216 - 4:word16] = ax_147
	word16 dx_429
	selector ds_430
	fn0800_A614(ds_201, Mem423[ss:sp_216 - 4:segptr32], out cx_640, out dx_429, out ds_430)
	word16 di_439 = Mem423[ss:sp_216:word16]
	dxOut = dx_429
	siOut = si_154
	diOut = di_439
	dsOut = ds_430
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A2A:
	word16 dx_458
	selector ds_459
	fn0800_A614(ds_151, dx_ax_629, out cx_639, out dx_458, out ds_459)
	dxOut = dx_458
	siOut = si_154
	diOut = di
	dsOut = ds_459
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A0C:
	dxOut = dx_152
	siOut = si_154
	diOut = di
	dsOut = ds_151
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39AE:
	dxOut = dx
	siOut = si
	diOut = di
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3992_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3B0A(word16 wArg0A, word16 wArg0C, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3B0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B0A:
	word16 bp_190 = fp - 2
	word16 ax_11 = wArg0A | wArg0C
	branch ax_11 != 0x0000 l0800_3B1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B1B:
	branch wArg0C < 0x0000 l0800_3B31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B21:
	branch wArg0C > 0x0000 l0800_3B2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B23:
	branch wArg0A <=u 0xFDE8 l0800_3B31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B31:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B2A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B37:
	word16 dx_51
	selector ds_116
	word16 ax_45 = fn0800_4311(out dx_51, out bp_190, out si, out di, out ds_116)
	Mem61[ss:bp_190 - 0x0002:word16] = dx_51
	Mem62[ss:bp_190 - 0x0004:word16] = ax_45
	word16 sp_54 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BAB:
	branch (Mem65[ss:bp_190 + 0x000C:word16] | Mem65[ss:bp_190 + 0x000E:word16]) != 0x0000 l0800_3B4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B4F:
	word16 ax_80
	word16 dx_79
	branch Mem65[ss:bp_190 + 0x000E:word16] < 0x0000 l0800_3B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B55:
	branch Mem65[ss:bp_190 + 0x000E:word16] > 0x0000 l0800_3B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B57:
	branch Mem65[ss:bp_190 + 0x000C:word16] <=u 0xFDE8 l0800_3B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B65:
	dx_79 = Mem65[ss:bp_190 + 0x000E:word16]
	ax_80 = Mem65[ss:bp_190 + 0x000C:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B5E:
	dx_79 = 0x0000
	ax_80 = 0xFDE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B6B:
	Mem90[ss:bp_190 - 0x0006:word16] = dx_79
	Mem92[ss:bp_190 - 0x0008:word16] = ax_80
	Mem99[ss:sp_54 + 0x0002:word16] = Mem92[ss:bp_190 + 0x0006:word16]
	Mem102[ss:sp_54:word16] = Mem99[ss:bp_190 + 0x0004:word16]
	Mem105[ss:sp_54 - 0x0002:word16] = Mem102[ss:bp_190 - 0x0006:word16]
	Mem107[ss:sp_54 - 0x0004:word16] = ax_80
	Mem110[ss:sp_54 - 0x0006:word16] = Mem107[ss:bp_190 - 0x0002:word16]
	Mem113[ss:sp_54 - 0x0008:word16] = Mem110[ss:bp_190 - 0x0004:word16]
	selector ds_122
	fn0800_4110(ds_116, Mem113[ss:sp_54 - 0x0008:word32], Mem113[ss:sp_54 - 0x0004:word16], Mem113[ss:sp_54 - 0x0002:word16], Mem113[ss:sp_54:word32], out si_267, out di_268, out ds_122)
	Mem134[ss:sp_54 + 0x0002:word16] = Mem113[ss:bp_190 + 0x000A:word16]
	Mem137[ss:sp_54:word16] = Mem134[ss:bp_190 + 0x0008:word16]
	Mem140[ss:sp_54 - 0x0002:word16] = Mem137[ss:bp_190 - 0x0006:word16]
	Mem143[ss:sp_54 - 0x0004:word16] = Mem140[ss:bp_190 - 0x0008:word16]
	Mem146[ss:sp_54 - 0x0006:word16] = Mem143[ss:bp_190 - 0x0002:word16]
	Mem149[ss:sp_54 - 0x0008:word16] = Mem146[ss:bp_190 - 0x0004:word16]
	fn0800_4152(ds_122, Mem149[ss:sp_54 - 0x0008:word32], Mem149[ss:sp_54 - 0x0004:word16], Mem149[ss:sp_54 - 0x0002:word16], Mem149[ss:sp_54:word32], out si, out di, out ds_116)
	word16 ax_163 = Mem149[ss:bp_190 - 0x0006:word16]
	word16 dx_164 = Mem149[ss:bp_190 - 0x0008:word16]
	Mem166[ss:bp_190 + 0x000C:word16] = v27_165
	Mem149[ss:bp_190 + 0x000C:ui32] = SEQ(Mem166[ss:bp_190 + 0x000E:word16], Mem149[ss:bp_190 + 0x000C:word16])
	ui32 v28_v27_197 = Mem149[ss:bp_190 + 0x000C:ui32] - SEQ(ax_163, dx_164)
	Mem170[ss:bp_190 + 0x000E:word16] = SLICE(v28_v27_197, word16, 16)
	word16 v27_165 = (word16) v28_v27_197
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BB3:
	Mem174[ss:sp_54 + 0x0002:word16] = Mem65[ss:bp_190 - 0x0002:word16]
	Mem177[ss:sp_54:word16] = Mem174[ss:bp_190 - 0x0004:word16]
	ax_11 = fn0800_4346(ds_116, Mem177[ss:sp_54 + 0x0002:word16], out cx_265, out dx, out bx_266, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BBF:
	word16 bp_194 = Mem193[ss:bp_190:word16]
	dxOut = dx
	bpOut = bp_194
	siOut = si
	diOut = di
	dsOut = ds
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3B0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3BC3(word16 cx, word16 dx, selector ds, word32 dwArg02, word32 dwArg06, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: bp ds si
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3BC3_entry:
	word16 wArg06 = SLICE(dwArg06, word16, 0)
	word16 wArg08 = SLICE(dwArg06, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BC3:
	fn0800_37BE(cx, dx, ds, SEQ(ds, 0x43AD), out di_302)
	word32 si_di_297 = <invalid>
	selector ds_50
	fn0800_4234(si_di_297, ds, SEQ(ds, 0x43AD), SEQ(ds, 0x0A61), out si_303, out di_304, out ds_50)
	Mem59[ds_50:0x29D5:word16] = dx
	Mem60[ds_50:0x29D3:word16] = 0x43AD
	fn0800_4194(ds_50, dwArg02)
	fn0800_ACB3(ds_50, dwArg02, dwArg06, 0x0000, out cx_305, out dx_306, out bx_307)
	word16 ax_75 = 0x43AD - wArg06
	word16 bp_128
	selector ds_132
	fn0800_3B0A(ax_75, dx - wArg08 - (ax_75 <u 0x0000), out dx_308, out bp_128, out si_309, out di_310, out ds_132)
	word16 sp_136 = <invalid>
	Mem145[ss:sp_136 + 0x000A:word16] = Mem126[ds_132:0x29D5:word16]
	Mem148[ss:sp_136 + 0x0008:word16] = Mem145[ds_132:0x29D3:word16]
	fn0800_BA67(ds_132, Mem148[ss:sp_136 + 0x0008:segptr32])
	Mem160[ss:sp_136 + 0x000A:word16] = 0x0000
	ui32 ax_dx_257 = SEQ(Mem160[ss:bp_128 + 0x000A:word16], Mem160[ss:bp_128 + 0x0008:word16])
	Mem160[ss:bp_128 + 0x000C:ui32] = SEQ(Mem160[ss:bp_128 + 0x000E:word16], Mem160[ss:bp_128 + 0x000C:word16])
	ui32 ax_dx_258 = ax_dx_257 + Mem160[ss:bp_128 + 0x000C:ui32]
	Mem169[ss:sp_136 + 0x0008:word16] = SLICE(ax_dx_258, word16, 16)
	Mem171[ss:sp_136 + 0x0006:word16] = (word16) ax_dx_258
	Mem174[ss:sp_136 + 0x0004:word16] = Mem171[ss:bp_128 + 0x0006:word16]
	Mem177[ss:sp_136 + 0x0002:word16] = Mem174[ss:bp_128 + 0x0004:word16]
	fn0800_ACB3(ds_132, Mem177[ss:sp_136 + 0x0002:segptr32], Mem177[ss:sp_136 + 0x0006:ui32], Mem177[ss:sp_136 + 0x000A:word16], out cx_311, out dx_312, out bx_313)
	Mem191[ss:sp_136 + 0x000A:word16] = Mem177[ss:bp_128 - 0x0002:word16]
	Mem194[ss:sp_136 + 0x0008:word16] = Mem191[ss:bp_128 - 0x0004:word16]
	Mem197[ss:sp_136 + 0x0006:word16] = Mem194[ss:bp_128 + 0x0006:word16]
	Mem200[ss:sp_136 + 0x0004:word16] = Mem197[ss:bp_128 + 0x0004:word16]
	Mem203[ss:sp_136 + 0x0002:word16] = Mem200[ds_132:0x29D5:word16]
	Mem206[ss:sp_136:word16] = Mem203[ds_132:0x29D3:word16]
	word16 bp_208
	selector ds_212
	word16 si_215
	fn0800_3B0A(Mem206[ss:sp_136 + 8:word16], Mem206[ss:sp_136 + 10:word16], out dx_314, out bp_208, out si_215, out di_315, out ds_212)
	word16 sp_216 = <invalid>
	Mem225[ss:sp_216 + 0x000A:word16] = Mem206[ds_212:0x29D5:word16]
	Mem228[ss:sp_216 + 0x0008:word16] = Mem225[ds_212:0x29D3:word16]
	selector ds_234
	fn0800_A614(ds_212, Mem228[ss:sp_216 + 0x0008:segptr32], out cx_316, out dx_317, out ds_234)
	Mem242[ss:sp_216 + 0x000A:word16] = ds_234
	Mem245[ss:sp_216 + 0x0008:word16] = 0x43AD
	fn0800_8F7F(0x43AD, ds_234, Mem245[ss:sp_216 + 0x0008:segptr32])
	word16 bp_255 = Mem245[ss:bp_208:word16]
	siOut = si_215
	dsOut = ds_234
	return bp_255
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3BC3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_3C99(word16 si, word16 di, selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp cx ds si sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3C99_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3C99:
	fn0800_3509(si, di, fp - 0x006C, ss, SEQ(ds, 0x4348), out bx_491)
	word16 di_43 = fp - 0x006C
	word16 cx_45 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CBE:
	branch cx_45 == 0x0000 l0800_3CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CBE_1:
	di_43 = di_43 + 0x0001
	cx_45 = cx_45 - 0x0001
	branch Mem40[ss:di_43:byte] == 0x00 l0800_3CBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC0:
	word16 cx_397 = 0x000D
	word32 si_di_478 = SEQ(0x0A54, di_43 - 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC4:
	word16 di_78 = SLICE(si_di_478, word16, 0)
	word16 si_77 = SLICE(si_di_478, word16, 16)
	branch cx_397 == 0x0000 l0800_3CC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC6:
	selector ds_83
	fn0800_4234(si_di_478, ds, SEQ(ss, fp - 0x006C), SEQ(ds, 0x0A61), out si_492, out di_493, out ds_83)
	fn0800_ACB3(ds_83, dwArg02, 0x00000000, 0x0000, out cx_494, out dx_495, out bx_496)
	word16 bp_139
	selector ds_143
	fn0800_3B0A(wArg06, wArg08, out dx_497, out bp_139, out si_498, out di_499, out ds_143)
	word16 sp_147 = <invalid>
	Mem155[ss:sp_147 + 0x000A:word16] = 0x0000
	ui32 ax_dx_413 = SEQ(Mem155[ss:bp_139 + 0x000A:word16], Mem155[ss:bp_139 + 0x0008:word16])
	Mem155[ss:bp_139 + 0x000C:ui32] = SEQ(Mem155[ss:bp_139 + 0x000E:word16], Mem155[ss:bp_139 + 0x000C:word16])
	ui32 ax_dx_414 = ax_dx_413 + Mem155[ss:bp_139 + 0x000C:ui32]
	Mem164[ss:sp_147 + 0x0008:word16] = SLICE(ax_dx_414, word16, 16)
	Mem166[ss:sp_147 + 0x0006:word16] = (word16) ax_dx_414
	Mem169[ss:sp_147 + 0x0004:word16] = Mem166[ss:bp_139 + 0x0006:word16]
	Mem172[ss:sp_147 + 0x0002:word16] = Mem169[ss:bp_139 + 0x0004:word16]
	fn0800_ACB3(ds_143, Mem172[ss:sp_147 + 0x0002:segptr32], Mem172[ss:sp_147 + 0x0006:ui32], Mem172[ss:sp_147 + 0x000A:word16], out cx_500, out dx_501, out bx_502)
	Mem186[ss:sp_147 + 0x000A:word16] = Mem172[ss:bp_139 + 0x0006:word16]
	Mem189[ss:sp_147 + 0x0008:word16] = Mem186[ss:bp_139 + 0x0004:word16]
	fn0800_4194(ds_143, Mem189[ss:sp_147 + 0x0008:word32])
	ui32 bx_cx_415 = SEQ(Mem189[ss:bp_139 + 0x000A:word16], Mem189[ss:bp_139 + 0x0008:word16])
	Mem189[ss:bp_139 + 0x000C:ui32] = SEQ(Mem189[ss:bp_139 + 0x000E:word16], Mem189[ss:bp_139 + 0x000C:word16])
	ui32 dx_ax_482 = <invalid>
	ui32 dx_ax_419 = dx_ax_482 - (bx_cx_415 + Mem189[ss:bp_139 + 0x000C:ui32])
	Mem209[ss:bp_139 + 0x000E:word16] = SLICE(dx_ax_419, word16, 16)
	word16 ax_204 = (word16) dx_ax_419
	Mem210[ss:bp_139 + 0x000C:word16] = ax_204
	Mem213[ss:sp_147 + 0x000A:word16] = Mem210[ss:bp_139 + 0x000E:word16]
	Mem215[ss:sp_147 + 0x0008:word16] = ax_204
	Mem218[ss:sp_147 + 0x0006:word16] = Mem215[ss:bp_139 - 0x0002:word16]
	Mem221[ss:sp_147 + 0x0004:word16] = Mem218[ss:bp_139 - 0x0004:word16]
	Mem224[ss:sp_147 + 0x0002:word16] = Mem221[ss:bp_139 + 0x0006:word16]
	Mem227[ss:sp_147:word16] = Mem224[ss:bp_139 + 0x0004:word16]
	word16 bp_229
	selector ds_233
	fn0800_3B0A(Mem227[ss:sp_147 + 8:word16], Mem227[ss:sp_147 + 10:word16], out dx_503, out bp_229, out si_504, out di_505, out ds_233)
	word16 sp_237 = <invalid>
	Mem246[ss:sp_237 + 0x000A:word16] = Mem227[ss:bp_229 - 0x0002:word16]
	Mem249[ss:sp_237 + 0x0008:word16] = Mem246[ss:bp_229 - 0x0004:word16]
	selector ds_255
	fn0800_A614(ds_233, Mem249[ss:sp_237 + 0x0008:segptr32], out cx_506, out dx_507, out ds_255)
	Mem264[ss:sp_237 + 0x000A:word16] = Mem249[ds_255:0x29D1:word16]
	Mem267[ss:sp_237 + 0x0008:word16] = Mem264[ds_255:0x29CF:word16]
	selector ds_273
	fn0800_A614(ds_255, Mem267[ss:sp_237 + 0x0008:segptr32], out cx_508, out dx_509, out ds_273)
	Mem282[ss:sp_237 + 0x000A:word16] = 0x0180
	Mem284[ss:sp_237 + 0x0008:word16] = ds_273
	Mem287[ss:sp_237 + 0x0006:word16] = 0x4348
	fn0800_A4F6(ds_273, Mem287[ss:sp_237 + 0x0006:word32], Mem287[ss:sp_237 + 0x000A:word16])
	Mem298[ss:sp_237 + 0x000A:word16] = ds_273
	Mem301[ss:sp_237 + 0x0008:word16] = 0x4348
	fn0800_8F7F(0x4348, ds_273, Mem301[ss:sp_237 + 0x0008:segptr32])
	Mem311[ss:sp_237 + 0x000A:word16] = ds_273
	Mem314[ss:sp_237 + 0x0008:word16] = 0x4348
	Mem316[ss:sp_237 + 0x0006:word16] = ss
	Mem319[ss:sp_237 + 0x0004:word16] = bp_229 - 0x006A
	word32 si_di_486 = <invalid>
	word32 si_di_483 = si_di_486
	word16 dx_321
	branch fn0800_BA4A(ds_273, Mem319[ss:sp_237 + 0x0004:segptr32], Mem319[ss:sp_237 + 0x0008:segptr32], out dx_321) != 0xFFFF l0800_3DB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DA3:
	Mem331[ss:sp_237 + 0x000A:word16] = ss
	Mem334[ss:sp_237 + 0x0008:word16] = bp_229 - 0x006A
	Mem337[ss:sp_237 + 0x0006:word16] = 0x000A
	fn0800_0D24(ds_273, Mem337[ss:sp_237 + 0x0006:word16], Mem337[ss:sp_237 + 0x0008:segptr32], out cx_512, out dx_321, out bx_513, out si_514, out di_515, out es_516, out ds_273)
	word32 si_di_487 = <invalid>
	si_di_483 = si_di_487 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DB2:
	Mem357[ss:sp_237 + 0x000A:word16] = ds_273
	Mem360[ss:sp_237 + 0x0008:word16] = 0x0A65
	Mem362[ss:sp_237 + 0x0006:word16] = ds_273
	Mem365[ss:sp_237 + 0x0004:word16] = 0x4348
	selector ds_372
	word16 cx_370 = fn0800_4234(si_di_483, ds_273, Mem365[ss:sp_237 + 0x0004:word32], Mem365[ss:sp_237 + 0x0008:word32], out si_510, out di_511, out ds_372)
	Mem382[ds_372:0x29D1:word16] = dx_321
	Mem383[ds_372:0x29CF:word16] = 0x4348
	word16 si_386 = Mem383[ss:sp_237 + 0x000E:word16]
	bpOut = Mem383[ss:bp_229:word16]
	siOut = si_386
	dsOut = ds_372
	return (byte) cx_370
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3C99_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC4_2:
	Mem394[ss:di_78:byte] = Mem391[ds:si_77:byte]
	cx_397 = cx_397 - 0x0001
	si_di_478 = SEQ(si_77 + 0x0001, di_78 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3DCF(selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_3DCF_entry:
	word16 wArg04_105 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_107 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DCF:
	word16 ax_125
	word16 v10_17 = Mem13[ptrArg02:word16] - 0x0001
	Mem18[ptrArg02:word16] = v10_17
	branch v10_17 < 0x0000 l0800_3DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DF3:
	ax_125 = fn0800_AEC2(ds, ptrArg02, out ch_162, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DDE:
	word16 ax_39 = Mem18[ptrArg02 + 0x000E:word16]
	word16 si_40 = Mem18[ptrArg02 + 0x000C:word16]
	Mem42[ptrArg02 + 0x000C:word16] = Mem18[ptrArg02 + 0x000C:word16] + 0x0001
	ax_125 = DPB(DPB(ax_39, Mem42[ax_39:si_40:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DFF:
	byte bLoc04_120 = SLICE(ax_125, byte, 0)
	branch ax_125 != 0xFFFF l0800_3E1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E07:
	fn0800_4271(ds, wArg02_107, wArg04_105)
	word32 dx_ax_157 = <invalid>
	ax_125 = fn0800_0D24(ds, 0x0008, dx_ax_157, out cx_80, out dx, out bx_163, out si_164, out di, out es_165, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E1F:
	chOut = <invalid>
	dxOut = dx
	diOut = di
	dsOut = ds
	return DPB(ax_125, bLoc04_120, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3DCF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E27(selector ds, word32 dwArg02, ptr16 & cxOut, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3E27_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E27:
	word16 cx_42 = <invalid>
	selector ds_24
	word16 dx_43
	word16 di_45
	selector ds_46
	word16 ax_58 = (DPB(fn0800_3DCF(ds, dwArg02, out ch_84, out dx_85, out di_86, out ds_24), 0x00, 8) << 0x08) + DPB(fn0800_3DCF(ds_24, dwArg02, out ch_87, out dx_43, out di_45, out ds_46), 0x00, 8)
	cxOut = DPB(cx_42, 0x08, 0)
	dxOut = dx_43
	diOut = di_45
	dsOut = ds_46
	return ax_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E27_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E5D(selector ds, word32 dwArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: di ds dx
// Trashed: SCZO bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3E5D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E5D:
	selector ds_22
	word16 di_42
	selector ds_43
	word16 dx_58 = fn0800_3E27(ds, dwArg02, out cx_83, out dx_84, out di_85, out ds_22) + (fn0800_3E27(ds_22, dwArg02, out cx_86, out dx_87, out di_42, out ds_43) <u 0x0000)
	diOut = di_42
	dsOut = ds_43
	return dx_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E5D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E9A(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_3E9A_entry:
	word16 wArg04_131 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_133 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E9A:
	word16 ax_28
	word16 v10_17 = Mem13[ptrArg02:word16] - 0x0001
	Mem18[ptrArg02:word16] = v10_17
	branch v10_17 < 0x0000 l0800_3EBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EBE:
	ax_28 = fn0800_AEC2(ds, ptrArg02, out ch_177, out dx_178)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EA9:
	word16 ax_39 = Mem18[ptrArg02 + 0x000E:word16]
	word16 si_40 = Mem18[ptrArg02 + 0x000C:word16]
	Mem42[ptrArg02 + 0x000C:word16] = Mem18[ptrArg02 + 0x000C:word16] + 0x0001
	ax_28 = DPB(DPB(ax_39, Mem42[ax_39:si_40:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ECA:
	byte bLoc04_155 = SLICE(ax_28, byte, 0)
	branch ax_28 != 0xFFFF l0800_3EEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ED2:
	fn0800_4271(ds, wArg02_133, wArg04_131)
	word32 dx_ax_173 = <invalid>
	fn0800_0D24(ds, 0x0008, dx_ax_173, out cx_181, out dx_182, out bx_183, out si_184, out di, out es_185, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EEA:
	word16 dx_115
	word16 ax_160 = DPB(fn0800_ACB3(ds, ptrArg02, 0xFFFFFFFF, 0x0001, out cx_179, out dx_115, out bx_180), bLoc04_155, 0)
	dxOut = dx_115
	diOut = di
	dsOut = ds
	return ax_160
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E9A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3F0A(selector ds, word32 dwArg02, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3F0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3F0A:
	selector ds_24
	word16 ax_32 = DPB(fn0800_3DCF(ds, dwArg02, out ch_115, out dx_116, out di_117, out ds_24), 0x00, 8)
	selector ds_46
	word16 ax_54 = DPB(fn0800_3DCF(ds_24, dwArg02, out ch_118, out dx_119, out di_120, out ds_46), 0x00, 8)
	word16 dx_74
	fn0800_ACB3(ds_46, dwArg02, 0xFFFFFFFE, 0x0001, out cx_73, out dx_74, out bx_121)
	dxOut = dx_74
	dsOut = ds_46
	return (ax_32 << 0x08) + ax_54
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3F0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3F58(selector ds, word32 dwArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: di ds dx
// Trashed: SCZO bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3F58_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3F58:
	selector ds_22
	word16 ax_18 = fn0800_3E27(ds, dwArg02, out cx_116, out dx_117, out di_118, out ds_22)
	word16 di_42
	selector ds_43
	word16 ax_39 = fn0800_3E27(ds_22, dwArg02, out cx_119, out dx_120, out di_42, out ds_43)
	fn0800_ACB3(ds_43, dwArg02, 0xFFFFFFFC, 0x0001, out cx_121, out dx_122, out bx_123)
	diOut = di_42
	dsOut = ds_43
	return ax_18 + (ax_39 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3F58_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3FAD(selector ds, word32 dwArg02, ptr16 & chOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3FAD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3FAD:
	selector ds_24
	word16 di_45
	selector ds_46
	word16 ax_57 = (DPB(fn0800_3DCF(ds_24, dwArg02, out ch_85, out dx_86, out di_45, out ds_46), 0x00, 8) << 0x08) + DPB(fn0800_3DCF(ds, dwArg02, out ch_82, out dx_83, out di_84, out ds_24), 0x00, 8)
	chOut = <invalid>
	diOut = di_45
	dsOut = ds_46
	return ax_57
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3FAD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_401E(selector ds, byte bArg02, word32 dwArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_401E_entry:
	byte bArg02_71 = SLICE(wArg02, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_401E:
	selector ds_28
	word16 bx_46
	word16 cx_47
	word16 dx_48
	word16 di_50
	selector ds_51
	word16 ax_45 = fn0800_4047(ds_28, SLICE(DPB(fn0800_4047(ds, SLICE(wArg02 >>u 0x08, byte, 0), dwArg04, out cx_85, out dx_86, out bx_87, out di_88, out ds_28), bArg02_71, 0), byte, 0), dwArg04, out cx_47, out dx_48, out bx_46, out di_50, out ds_51)
	cxOut = cx_47
	dxOut = dx_48
	bxOut = bx_46
	diOut = di_50
	dsOut = ds_51
	return ax_45
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_401E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4047(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_4047_entry:
	word16 wArg06_109 = SLICE(ptrArg04, word16, 16)
	word16 wArg04_111 = SLICE(ptrArg04, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4047:
	word16 dx_144
	word16 ax_128
	word16 v10_16 = Mem11[ptrArg04:word16] + 0x0001
	Mem17[ptrArg04:word16] = v10_16
	word16 cx_28 = DPB(cx, bArg02, 0)
	word16 cx_134 = DPB(cx, bArg02, 0)
	word16 bx_129 = (word16) ptrArg04
	branch v10_16 >= 0x0000 l0800_406F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_406F:
	ax_128 = fn0800_B30A(ds, SLICE(cx_28, byte, 0), ptrArg04, out cx_134, out dx_144, out bx_129)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4056:
	word16 ax_42 = Mem17[ptrArg04 + 0x000E:word16]
	word16 si_43 = Mem17[ptrArg04 + 0x000C:word16]
	Mem45[ptrArg04 + 0x000C:word16] = Mem17[ptrArg04 + 0x000C:word16] + 0x0001
	Mem49[ax_42:si_43:byte] = bArg02
	dx_144 = DPB(dx, bArg02, 0) (alias)
	ax_128 = DPB(DPB(ax_42, bArg02, 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_407C:
	branch ax_128 != 0xFFFF l0800_4099
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4081:
	fn0800_4271(ds, wArg04_111, wArg06_109)
	word32 dx_ax_160 = <invalid>
	ax_128 = fn0800_0D24(ds, 0x0009, dx_ax_160, out cx_134, out dx_144, out bx_129, out si_166, out di, out es_167, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4099:
	cxOut = cx_134
	dxOut = dx_144
	bxOut = bx_129
	diOut = di
	dsOut = ds
	return ax_128
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4047_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_409C(selector ds, word16 wArg02, word16 wArg04, word32 dwArg06, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_409C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_409C:
	selector ds_23
	fn0800_401E(ds, wArg04, dwArg06, out cx_77, out dx_78, out bx_79, out di_80, out ds_23)
	word16 di_44
	selector ds_45
	word16 dx_46
	word16 ax_41 = fn0800_401E(ds_23, wArg02, dwArg06, out cx_81, out dx_46, out bx_82, out di_44, out ds_45)
	dxOut = dx_46
	diOut = di_44
	dsOut = ds_45
	return ax_41
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_409C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_40BF(selector ds, byte bArg02, word32 dwArg04, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_40BF_entry:
	byte bArg02 = SLICE(wArg02, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_40BF:
	selector ds_30
	fn0800_4047(ds, SLICE(DPB(ax, bArg02 & 0xFF, 0), byte, 0), dwArg04, out cx_92, out dx_93, out bx_94, out di_95, out ds_30)
	word16 dx_55
	word16 di_57
	selector ds_58
	word16 ax_52 = fn0800_4047(ds_30, SLICE(DPB(wArg02 >>u 0x08, (byte) (wArg02 >>u 0x08) & 0xFF, 0), byte, 0), dwArg04, out cx_96, out dx_55, out bx_97, out di_57, out ds_58)
	dxOut = dx_55
	diOut = di_57
	dsOut = ds_58
	return ax_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_40BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_4110(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: cx di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4110_entry:
	word16 wArg0C = SLICE(dwArg0A, word16, 16)
	word16 wArg0A = SLICE(dwArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4110:
	word16 di_124
	word16 si_134
	word16 ax_28 = fn0800_ABA3(ds, dwArg02, 0x0001, wArg06, dwArg0A, out ch_145, out si_134, out di_124)
	word16 cx_121 = <invalid>
	branch wArg08 != 0x0000 l0800_4138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4133:
	branch ax_28 == wArg06 l0800_4150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4138:
	fn0800_4271(ds, wArg0A, wArg0C)
	word32 dx_ax_141 = <invalid>
	fn0800_0D24(ds, 0x0008, dx_ax_141, out cx_121, out dx_76, out bx_72, out si_134, out di_124, out es_77, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4150:
	siOut = si_134
	diOut = di_124
	dsOut = ds
	return (byte) cx_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4110_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_4152(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4152_entry:
	word16 wArg0C = SLICE(dwArg0A, word16, 16)
	word16 wArg0A = SLICE(dwArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4152:
	word16 di_124
	word16 si_134
	word16 ax_116 = fn0800_AD85(ds, dwArg02, 0x0001, wArg06, dwArg0A, out si_134, out di_124)
	branch wArg08 != 0x0000 l0800_417A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4175:
	branch ax_116 == wArg06 l0800_4192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_417A:
	fn0800_4271(ds, wArg0A, wArg0C)
	word32 dx_ax_141 = <invalid>
	ax_116 = fn0800_0D24(ds, 0x0009, dx_ax_141, out cx_73, out dx_76, out bx_72, out si_134, out di_124, out es_77, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4192:
	siOut = si_134
	diOut = di_124
	dsOut = ds
	return (byte) ax_116
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4152_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4194(selector ds, word32 dwArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO bx cx es Top
// Preserved: bp sp
fn0800_4194_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4194:
	fn0800_AD2F(ds, dwArg02, out dx_141)
	fn0800_ACB3(ds, dwArg02, 0x00000000, 0x0002, out cx_142, out dx_143, out bx_144)
	fn0800_AD2F(ds, dwArg02, out dx_66)
	word32 dx_ax_140 = <invalid>
	fn0800_ACB3(ds, dwArg02, dx_ax_140, 0x0000, out cx_145, out dx_146, out bx_147)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4194_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4234(word32 si_di, selector ds, word32 dwArg02, word32 dwArg06, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence si:di:[0..31] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: cx di ds si
// Trashed: SCZO bx cx di ds es si Top
// Preserved: D bp sp
fn0800_4234_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4234:
	word16 dx_32
	word16 cx_101
	word16 di_104
	selector ds_105
	word16 si_113
	branch (fn0800_AA7E(si_di, ds, dwArg02, dwArg06, out cx_101, out dx_32, out si_113, out di_104, out ds_105) | dx_32) != 0x0000 l0800_4267
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4257:
	fn0800_0D24(ds_105, 0x0007, dwArg02, out cx_101, out dx_123, out bx_124, out si_113, out di_104, out es_125, out ds_105)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4267:
	siOut = si_113
	diOut = di_104
	dsOut = ds_105
	return cx_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4234_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4271(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_4271_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4271:
	branch wArg04 != Mem7[ds:0x29E5:word16] l0800_428D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4280:
	branch wArg02 != Mem7[ds:0x29E3:word16] l0800_428D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_428D:
	branch wArg04 != Mem7[ds:0x29E1:word16] l0800_42A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4299:
	branch wArg02 != Mem7[ds:0x29DF:word16] l0800_42A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42A6:
	branch wArg04 != Mem7[ds:0x29D1:word16] l0800_42BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42B2:
	branch wArg02 != Mem7[ds:0x29CF:word16] l0800_42BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42BF:
	branch wArg04 != Mem7[ds:0x29DD:word16] l0800_42D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42CB:
	branch wArg02 != Mem7[ds:0x29DB:word16] l0800_42D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42D8:
	branch wArg04 != Mem7[ds:0x29D9:word16] l0800_42F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42E4:
	branch wArg02 != Mem7[ds:0x29D7:word16] l0800_42F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42F1:
	branch wArg04 != Mem7[ds:0x29D5:word16] l0800_430A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42FD:
	branch wArg02 != Mem7[ds:0x29D3:word16] l0800_430A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_430A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4303:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42EA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42D1:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42B8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_429F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4286:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4271_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4311(ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_4311_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4311:
	word16 bp_18
	word16 dx_23
	word16 di_21
	selector ds_22
	word16 si_25
	word16 ax_17 = fn0800_9F89(out dx_23, out bp_18, out si_25, out di_21, out ds_22)
	Mem31[ss:bp_18 - 0x0002:word16] = dx_23
	Mem32[ss:bp_18 - 0x0004:word16] = ax_17
	branch (ax_17 | dx_23) != 0x0000 l0800_433C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_432D:
	fn0800_0D24(ds_22, 0x0006, SEQ(ds_22, 0x0A6C), out cx_101, out dx_102, out bx_103, out si_25, out di_21, out es_104, out ds_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_433C:
	word16 ax_64 = Mem62[ss:bp_18 - 0x0004:word16]
	word16 bp_66 = Mem62[ss:bp_18:word16]
	dxOut = Mem62[ss:bp_18 - 0x0002:word16]
	bpOut = bp_66
	siOut = si_25
	diOut = di_21
	dsOut = ds_22
	return ax_64
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4311_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4346(selector ds, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_4346_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4346:
	selector ds_16
	word16 dx_17
	word16 bx_19
	word16 cx_21
	word16 ax_18 = fn0800_9E75(ds, wArg04, out cx_21, out dx_17, out bx_19, out ds_16)
	cxOut = cx_21
	dxOut = dx_17
	bxOut = bx_19
	dsOut = ds_16
	return ax_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4346_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4357(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx dl es Top
// Preserved: bp sp
fn0800_4357_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4357:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B9:
	word16 wArg02_104 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_128 = SLICE(ptrArg02, word16, 16)
	word16 wArg06_109 = SLICE(ptrArg06, word16, 0)
	word16 wArg08_120 = SLICE(ptrArg06, word16, 16)
	branch Mem11[ptrArg06:byte] != 0x00 l0800_435C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_435C:
	byte al_20 = Mem11[ptrArg06:byte]
	word16 ax_22 = (int16) al_20
	branch ax_22 == 0x002A l0800_4379
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4379:
	word16 wArg02_101 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_124 = SLICE(ptrArg02, word16, 16)
	branch Mem27[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4382:
	branch Mem27[ptrArg02:byte] != 0x00 l0800_4376
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4376:
	ptrArg02_125 = SEQ(wArg04_124, wArg02_101 + 0x0001) (alias)
	ptrArg02 = ptrArg02_125
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4388:
	ptrArg02 = ptrArg02_125
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_436A:
	branch ax_22 == 0x002E l0800_439E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_439E:
	branch Mem11[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_436F:
	branch ax_22 == 0x003F l0800_438A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_438A:
	branch Mem11[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4393:
	branch Mem11[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4399:
	ptrArg02 = SEQ(wArg04_128, wArg02_104 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4374:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43A7:
	branch al_20 == Mem11[ptrArg02:byte] l0800_43B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B3:
	ptrArg02 = SEQ(wArg04_128, wArg02_104 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B6:
	ptrArg06 = SEQ(wArg08_120, wArg06_109 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43AF:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43C2:
	word16 ax_133
	branch Mem11[ptrArg02:byte] != 0x00 l0800_43D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D0:
	ax_133 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43CB:
	ax_133 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D2:
	return ax_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4357_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx es Top
// Preserved: bp si sp
fn0800_43D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D4:
	word16 cx_12 = wArg06
	word16 si_18 = wArg02 + (word16) (wArg06 *s 0x000C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_440F:
	si_18 = si_18 - 0x000C
	cx_12 = cx_12 - 0x0001
	branch cx_12 != 0x0000 l0800_43E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43E9:
	Mem33[psegArg04:si_18 + 0x0002:word16] = 0x0000
	Mem34[psegArg04:si_18:word16] = 0x0000
	Mem35[psegArg04:si_18 + 0x0004:word16] = 0xFFFF
	Mem36[psegArg04:si_18 + 0x0008:word16] = 0x0000
	Mem37[psegArg04:si_18 + 0x0006:word16] = 0x0000
	Mem38[psegArg04:si_18 + 0x000A:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4419:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_43D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_441C(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_441C_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_441C:
	word16 di_16 = 0x0000
	word16 cx_17 = 0x0000
	word16 si_23 = wArg02
	branch wArg06 <=u 0x0000 l0800_4452
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4439:
	selector psegArg04_254 = SLICE(ptrArg02, selector, 16)
	branch (Mem28[psegArg04_254:si_23:word16] | Mem28[psegArg04_254:si_23 + 0x0002:word16]) == 0x0000 l0800_4449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4445:
	di_16 = di_16 + 0x0001
	wLoc04 = cx_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4449:
	si_23 = si_23 + 0x000C
	cx_17 = cx_17 + 0x0001
	branch cx_17 <u wArg06 l0800_4439
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4452:
	branch di_16 != 0x0000 l0800_4459
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4459:
	branch di_16 == 0x0001 l0800_4461
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4461:
	selector es_69 = SLICE(ptrArg02, selector, 16)
	word16 bx_67 = (word16) (ptrArg02 + wLoc04 *s 0x000C)
	Mem71[es_69:bx_67 + 0x000A:word16] = Mem60[es_69:bx_67 + 0x000A:word16] + 0x0001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_445E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4525:
	word16 wArg02_282 = SLICE(ptrArg02, word16, 0)
	selector psegArg04_280 = SLICE(ptrArg02, selector, 16)
	word16 wArg02_290 = SLICE(ptrArg02, word16, 0)
	branch fn0800_463B(ds, wArg02_282, psegArg04_280, wArg06) == 0x0000 l0800_453B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_453B:
	fn0800_4550(wArg02_282, psegArg04_280, wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4538:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4478:
	word16 ax_133 = (word16) (Mem94[ds:0x4658:word16] *s 0x000C)
	selector es_138 = SLICE(ptrArg02, selector, 16)
	word16 bx_137 = (word16) ptrArg02 + ax_133
	word16 ax_148 = (word16) (Mem142[ds:0x465A:word16] *s 0x000C)
	word16 ax_139 = Mem94[es_138:bx_137 + 0x0002:word16]
	word16 dx_140 = Mem94[es_138:bx_137:word16]
	word16 bx_151 = wArg02_290 + ax_148
	Mem155[es_138:bx_151:word16] = v23_154
	ui32 v24_v23_248 = SEQ(Mem155[es_138:bx_151 + 0x0002:word16], Mem146[es_138:bx_151:word16]) + SEQ(ax_139, dx_140)
	Mem161[es_138:bx_151 + 0x0002:word16] = SLICE(v24_v23_248, word16, 16)
	word16 bx_163 = wArg02_290 + ax_133
	Mem164[es_138:bx_163 + 0x0002:word16] = 0x0000
	Mem165[es_138:bx_163:word16] = 0x0000
	word16 bx_167 = wArg02_290 + ax_148
	Mem170[es_138:bx_167 + 0x000A:word16] = Mem165[es_138:bx_167 + 0x000A:word16] + 0x0001
	word16 cx_134 = ax_133
	word16 dx_149 = ax_148
	word16 v23_154 = (word16) v24_v23_248
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44DD:
	selector psegArg04_292 = SLICE(ptrArg02, selector, 16)
	word16 wArg02_293 = SLICE(ptrArg02, word16, 0)
	selector es_180 = SLICE(ptrArg02, selector, 16)
	word16 bx_178 = (word16) ptrArg02 + dx_149
	branch Mem174[es_180:bx_178 + 0x0004:word16] != 0xFFFF l0800_44C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44C3:
	word16 ax_184 = Mem174[psegArg04_292:bx_178 + 0x0004:word16]
	Mem186[ds:0x465A:word16] = ax_184
	word16 ax_189 = (word16) (ax_184 *s 0x000C)
	word16 bx_192 = wArg02_293 + ax_189
	Mem195[psegArg04_292:bx_192 + 0x000A:word16] = Mem186[psegArg04_292:bx_192 + 0x000A:word16] + 0x0001
	dx_149 = ax_189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44EB:
	Mem198[es_180:bx_178 + 0x0004:word16] = Mem174[ds:0x4658:word16]
	word16 bx_201 = wArg02_293 + ax_133
	Mem204[es_180:bx_201 + 0x000A:word16] = Mem198[es_180:bx_201 + 0x000A:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4517:
	selector psegArg04_295 = SLICE(ptrArg02, selector, 16)
	word16 wArg02_296 = SLICE(ptrArg02, word16, 0)
	word16 bx_212 = (word16) ptrArg02 + cx_134
	branch Mem208[SLICE(ptrArg02, selector, 16):bx_212 + 0x0004:word16] != 0xFFFF l0800_44FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44FD:
	word16 ax_218 = Mem208[psegArg04_295:bx_212 + 0x0004:word16]
	Mem220[ds:0x4658:word16] = ax_218
	word16 ax_223 = (word16) (ax_218 *s 0x000C)
	word16 bx_226 = wArg02_296 + ax_223
	Mem229[psegArg04_295:bx_226 + 0x000A:word16] = Mem220[psegArg04_295:bx_226 + 0x000A:word16] + 0x0001
	cx_134 = ax_223
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4456:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_454A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_441C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4550(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_4550_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4550:
	word16 sp_114 = fp - 0x0010
	word16 wLoc04_128 = 0x0000
	word16 wLoc06_129 = 0x0000
	word16 wLoc0C_132 = 0x0001
	word32 dwLoc0A_213 = 0x80000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45D6:
	word16 wLoc0A_153 = SLICE(dwLoc0A_213, word16, 0)
	word16 wLoc08_150 = SLICE(dwLoc0A_213, word16, 16)
	branch wLoc0C_132 <=u 0x0010 l0800_4573
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4573:
	word16 di_27 = 0x0000
	word16 si_28 = wArg02
	branch wArg06 <=u 0x0000 l0800_45C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_457D:
	branch Mem33[psegArg04:si_28 + 0x000A:word16] != wLoc0C_132 l0800_45BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4589:
	word16 sp_41 = sp_114 - 2
	Mem42[ss:sp_41:word16] = wLoc0C_132
	Mem45[ss:sp_41 - 2:word16] = wLoc08_150
	Mem48[ss:sp_41 - 4:word16] = wLoc0A_153
	Mem51[ss:sp_41 - 6:word16] = wLoc04_128
	Mem54[ss:sp_41 - 8:word16] = wLoc06_129
	word16 dx_58
	word16 ax_55 = fn0800_8BC2(Mem54[ss:sp_41 - 8:word32], Mem54[ss:sp_41 - 4:word16], Mem54[ss:sp_41 - 2:word16], out cx_216, out dx_58, out bx_217)
	word16 sp_59 = <invalid>
	Mem66[ss:sp_59 + 0x0006:word16] = dx_58
	Mem68[ss:sp_59 + 0x0004:word16] = ax_55
	word16 dx_71
	word16 ax_69 = fn0800_45E2(Mem68[ss:sp_59 + 0x0004:word16], Mem68[ss:sp_59 + 0x0006:word16], Mem68[ss:sp_59 + 0x0008:word16], out dx_71)
	Mem78[psegArg04:si_28 + 0x0008:word16] = dx_71
	Mem79[psegArg04:si_28 + 0x0006:word16] = ax_69
	ui32 v21_v20_124 = SEQ(wLoc04_128, v20_82) + dwLoc0A_213
	word16 v20_82 = (word16) v21_v20_124
	sp_114 = sp_59 + 0x000A
	wLoc06_129 = v20_82
	wLoc04_128 = SLICE(v21_v20_124, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45BA:
	si_28 = si_28 + 0x000C
	di_27 = di_27 + 0x0001
	branch di_27 <u wArg06 l0800_457D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45C3:
	wLoc0C_132 = wLoc0C_132 + 0x0001
	dwLoc0A_213 = SEQ(wLoc08_150 >>u 0x0001, __rcr(wLoc0A_153, 0x01, SLICE(cond(wLoc08_150 >>u 0x0001), bool, 1))) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45DC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4550_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_45E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45E2:
	word16 bx_11 = wArg06
	word16 wLoc04_67 = 0x0000
	word16 wLoc06_68 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_462A:
	bx_11 = bx_11 - 0x0001
	branch bx_11 != 0x0000 l0800_45F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45F7:
	word16 ax_30 = __rcl(wLoc04_67, 0x01, SLICE(cond(wLoc06_68 << 0x0001), bool, 1))
	wLoc06_68 = wLoc06_68 << 0x0001
	branch (wArg02 & 0x0001) == 0x0000 l0800_461A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4612:
	wLoc06_68 = wLoc06_68 | 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_461A:
	wLoc04_67 = ax_30
	wArg04 = wArg04 >>u 0x0001
	wArg02 = __rcr(wArg02, 0x01, SLICE(cond(wArg04 >>u 0x0001), bool, 1))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4631:
	dxOut = wLoc04_67
	return wLoc06_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_45E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_463B(selector ds, word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp di es si sp
fn0800_463B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_463B:
	word16 wLoc0C_155 = 0xFFFF
	word16 wLoc0E_156 = 0xFFFF
	word16 wLoc08_157 = 0xFFFF
	word16 wLoc0A_158 = 0xFFFF
	word16 cx_23 = 0x0000
	word16 si_24 = wArg02
	branch wArg06 <=u 0x0000 l0800_46D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4661:
	word16 ax_32 = Mem29[psegArg04:si_24 + 0x0002:word16]
	word16 dx_33 = Mem29[psegArg04:si_24:word16]
	branch (dx_33 | ax_32) == 0x0000 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4675:
	branch ax_32 >u wLoc08_157 l0800_46AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4680:
	branch ax_32 <u wLoc08_157 l0800_4687
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4682:
	branch dx_33 >=u wLoc0A_158 l0800_46AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46AB:
	branch ax_32 >u wLoc0C_155 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46B6:
	branch ax_32 <u wLoc0C_155 l0800_46BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46B8:
	branch dx_33 >=u wLoc0E_156 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46BD:
	Mem70[ds:0x4658:word16] = cx_23
	wLoc0C_155 = ax_32
	wLoc0E_156 = dx_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4687:
	Mem80[ds:0x4658:word16] = Mem77[ds:0x465A:word16]
	Mem86[ds:0x465A:word16] = cx_23
	wLoc0C_155 = wLoc08_157
	wLoc0E_156 = wLoc0A_158
	wLoc08_157 = ax_32
	wLoc0A_158 = dx_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46CD:
	si_24 = si_24 + 0x000C
	cx_23 = cx_23 + 0x0001
	branch cx_23 <u wArg06 l0800_4661
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46D5:
	branch wLoc08_157 != 0xFFFF l0800_46E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46DB:
	branch wLoc0A_158 == 0xFFFF l0800_46ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46E1:
	branch wLoc0C_155 != 0xFFFF l0800_46F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46E7:
	branch wLoc0E_156 != 0xFFFF l0800_46F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46F5:
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46ED:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_463B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_46FE(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_46FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46FE:
	branch Mem15[ds:0x2A05:word16] >u 0x0000 l0800_471F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_470D:
	branch Mem15[ds:0x2A05:word16] <u 0x0000 l0800_4716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_470F:
	branch Mem15[ds:0x2A03:word16] >=u 0x002A l0800_471F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_471F:
	fn0800_ACB3(ds, SEQ(Mem33[ds:0x29E5:word16], Mem37[ds:0x29E3:word16]), 0x00000028, 0x0000, out cx_1571, out dx_1572, out bx_1573)
	selector ds_62
	word16 ax_58 = fn0800_3FAD(ds, SEQ(Mem40[ds:0x29E5:word16], Mem54[ds:0x29E3:word16]), out ch_1574, out di_1575, out ds_62)
	branch Mem57[ds_62:0x2A05:word16] >u 0x0000 l0800_4761
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4750:
	branch Mem57[ds_62:0x2A05:word16] <u 0x0000 l0800_4758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4752:
	branch ax_58 + 0x0024 <=u Mem57[ds_62:0x2A03:word16] l0800_4761
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4761:
	selector ds_120
	word16 dx_133
	word16 ax_130 = fn0800_8CAA(fn0800_ACB3(ds_62, SEQ(Mem92[ds_62:0x29E5:word16], Mem96[ds_62:0x29E3:word16]), (uint32) (uint16) (ax_58 + 0x0020), 0x0000, out cx_1576, out dx_1577, out bx_1578), 0x08, fn0800_3F58(ds_62, SEQ(Mem99[ds_62:0x29E5:word16], Mem113[ds_62:0x29E3:word16]), out di_1579, out ds_120), out dx_133)
	word16 sp_134 = <invalid>
	branch dx_133 != 0x0052 l0800_4798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4793:
	branch ax_130 == 0x4E43 l0800_47A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47A1:
	Mem145[ss:sp_134 - 2:word16] = Mem116[ds_120:0x29E5:word16]
	Mem148[ss:sp_134 - 4:word16] = Mem145[ds_120:0x29E3:word16]
	word16 dx_152
	word16 ax_149 = fn0800_AD2F(ds_120, Mem148[ss:sp_134 - 4:segptr32], out dx_152)
	Mem167[ss:sp_134 - 2:word16] = 0x0000
	Mem170[ss:sp_134 - 4:word16] = 0x0000
	Mem172[ss:sp_134 - 6:word16] = 0x0002
	Mem175[ss:sp_134 - 8:word16] = Mem172[ds_120:0x29E5:word16]
	Mem178[ss:sp_134 - 10:word16] = Mem175[ds_120:0x29E3:word16]
	fn0800_ACB3(ds_120, Mem178[ss:sp_134 - 10:segptr32], Mem178[ss:sp_134 - 6:ui32], Mem178[ss:sp_134 - 2:word16], out cx_1580, out dx_1581, out bx_1582)
	Mem192[ss:sp_134 - 2:word16] = Mem178[ds_120:0x29E5:word16]
	Mem195[ss:sp_134 - 4:word16] = Mem192[ds_120:0x29E3:word16]
	selector ds_200
	fn0800_3FAD(ds_120, Mem195[ss:sp_134 - 4:word32], out ch_1583, out di_1584, out ds_200)
	Mem212[ss:sp_134 - 2:word16] = Mem195[ds_200:0x29E5:word16]
	Mem215[ss:sp_134 - 4:word16] = Mem212[ds_200:0x29E3:word16]
	word16 di_219
	selector ds_220
	word16 ax_216 = fn0800_3FAD(ds_200, Mem215[ss:sp_134 - 4:word32], out ch_1585, out di_219, out ds_220)
	word16 wLoc0C_1432 = ax_216
	branch di_219 == 0x0000 l0800_47F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47F0:
	wLoc0C_1432 = ax_216 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47F3:
	fn0800_8C69(wLoc0C_1432, 0x09, 0x0000, out cl_1586, out dx_1587)
	word16 sp_248 = <invalid>
	Mem264[ss:sp_248 - 2:word16] = 0x0000
	Mem267[ss:sp_248 - 4:word16] = 0x0000
	Mem269[ss:sp_248 - 6:word16] = 0x0016
	Mem273[ss:sp_248 - 8:word16] = Mem269[ds_220:0x29E5:word16]
	Mem276[ss:sp_248 - 10:word16] = Mem273[ds_220:0x29E3:word16]
	fn0800_ACB3(ds_220, Mem276[ss:sp_248 - 10:segptr32], Mem276[ss:sp_248 - 6:ui32], Mem276[ss:sp_248 - 2:word16], out cx_1588, out dx_1589, out bx_1590)
	Mem290[ss:sp_248 - 2:word16] = Mem276[ds_220:0x29E5:word16]
	Mem293[ss:sp_248 - 4:word16] = Mem290[ds_220:0x29E3:word16]
	selector ds_298
	fn0800_3FAD(ds_220, Mem293[ss:sp_248 - 4:word32], out ch_1591, out di_1592, out ds_298)
	Mem309[ss:sp_248 - 2:word16] = Mem293[ds_298:0x29E5:word16]
	Mem312[ss:sp_248 - 4:word16] = Mem309[ds_298:0x29E3:word16]
	selector ds_317
	word16 ax_313 = fn0800_3FAD(ds_298, Mem312[ss:sp_248 - 4:word32], out ch_1593, out di_1594, out ds_317)
	Mem329[ss:sp_248 - 2:word16] = Mem326[ds_317:0x29E5:word16]
	Mem332[ss:sp_248 - 4:word16] = Mem329[ds_317:0x29E3:word16]
	selector ds_337
	word16 ax_333 = fn0800_3FAD(ds_317, Mem332[ss:sp_248 - 4:word32], out ch_1595, out di_1596, out ds_337)
	Mem349[ss:sp_248 - 2:word16] = Mem346[ds_337:0x29E5:word16]
	Mem352[ss:sp_248 - 4:word16] = Mem349[ds_337:0x29E3:word16]
	selector ds_357
	word16 ax_353 = fn0800_3FAD(ds_337, Mem352[ss:sp_248 - 4:word32], out ch_1597, out di_1598, out ds_357)
	Mem369[ss:sp_248 - 2:word16] = Mem366[ds_357:0x29E5:word16]
	Mem372[ss:sp_248 - 4:word16] = Mem369[ds_357:0x29E3:word16]
	selector ds_377
	word16 ax_373 = fn0800_3FAD(ds_357, Mem372[ss:sp_248 - 4:word32], out ch_1599, out di_1600, out ds_377)
	Mem389[ss:sp_248 - 2:word16] = Mem386[ds_377:0x29E5:word16]
	Mem392[ss:sp_248 - 4:word16] = Mem389[ds_377:0x29E3:word16]
	selector ds_397
	word16 ax_393 = fn0800_3FAD(ds_377, Mem392[ss:sp_248 - 4:word32], out ch_1601, out di_1602, out ds_397)
	Mem409[ss:sp_248 - 2:word16] = Mem406[ds_397:0x29E5:word16]
	Mem412[ss:sp_248 - 4:word16] = Mem409[ds_397:0x29E3:word16]
	selector ds_417
	word16 ax_413 = fn0800_3FAD(ds_397, Mem412[ss:sp_248 - 4:word32], out ch_1603, out di_1604, out ds_417)
	Mem429[ss:sp_248 - 2:word16] = Mem426[ds_417:0x29E5:word16]
	Mem432[ss:sp_248 - 4:word16] = Mem429[ds_417:0x29E3:word16]
	selector ds_437
	word16 ax_433 = fn0800_3FAD(ds_417, Mem432[ss:sp_248 - 4:word32], out ch_1605, out di_1606, out ds_437)
	Mem449[ss:sp_248 - 2:word16] = Mem446[ds_437:0x29E5:word16]
	Mem452[ss:sp_248 - 4:word16] = Mem449[ds_437:0x29E3:word16]
	selector ds_457
	word16 ax_453 = fn0800_3FAD(ds_437, Mem452[ss:sp_248 - 4:word32], out ch_1607, out di_1608, out ds_457)
	Mem469[ss:sp_248 - 2:word16] = Mem466[ds_457:0x29E1:word16]
	Mem472[ss:sp_248 - 4:word16] = Mem469[ds_457:0x29DF:word16]
	Mem475[ss:sp_248 - 6:word16] = 0x4D5A
	selector ds_480
	fn0800_401E(ds_457, Mem475[ss:sp_248 - 6:word16], Mem475[ss:sp_248 - 4:word32], out cx_1609, out dx_1610, out bx_1611, out di_1612, out ds_480)
	Mem490[ss:sp_248 - 2:word16] = Mem475[ds_480:0x29E1:word16]
	Mem493[ss:sp_248 - 4:word16] = Mem490[ds_480:0x29DF:word16]
	Mem498[ss:sp_248 - 6:word16] = 0x0000
	Mem500[ss:sp_248 - 8:word16] = 0x0000
	selector ds_505
	fn0800_409C(ds_480, Mem500[ss:sp_248 - 8:word16], Mem500[ss:sp_248 - 6:word16], Mem500[ss:sp_248 - 4:word32], out dx_1613, out di_1614, out ds_505)
	Mem515[ss:sp_248 - 2:word16] = Mem500[ds_505:0x29E1:word16]
	Mem518[ss:sp_248 - 4:word16] = Mem515[ds_505:0x29DF:word16]
	Mem523[ss:sp_248 - 6:word16] = 0x0000
	Mem525[ss:sp_248 - 8:word16] = 0x0000
	selector ds_530
	fn0800_409C(ds_505, Mem525[ss:sp_248 - 8:word16], Mem525[ss:sp_248 - 6:word16], Mem525[ss:sp_248 - 4:word32], out dx_1615, out di_1616, out ds_530)
	Mem541[ss:sp_248 - 2:word16] = Mem525[ds_530:0x29E1:word16]
	Mem544[ss:sp_248 - 4:word16] = Mem541[ds_530:0x29DF:word16]
	Mem547[ss:sp_248 - 6:word16] = ax_353
	selector ds_552
	fn0800_40BF(ds_530, Mem547[ss:sp_248 - 6:word16], Mem547[ss:sp_248 - 4:word32], out dx_1617, out di_1618, out ds_552)
	Mem563[ss:sp_248 - 2:word16] = Mem547[ds_552:0x29E1:word16]
	Mem566[ss:sp_248 - 4:word16] = Mem563[ds_552:0x29DF:word16]
	Mem569[ss:sp_248 - 6:word16] = ax_373
	selector ds_574
	fn0800_40BF(ds_552, Mem569[ss:sp_248 - 6:word16], Mem569[ss:sp_248 - 4:word32], out dx_1619, out di_1620, out ds_574)
	Mem585[ss:sp_248 - 2:word16] = Mem569[ds_574:0x29E1:word16]
	Mem588[ss:sp_248 - 4:word16] = Mem585[ds_574:0x29DF:word16]
	Mem591[ss:sp_248 - 6:word16] = ax_453
	selector ds_596
	fn0800_40BF(ds_574, Mem591[ss:sp_248 - 6:word16], Mem591[ss:sp_248 - 4:word32], out dx_1621, out di_1622, out ds_596)
	Mem607[ss:sp_248 - 2:word16] = Mem591[ds_596:0x29E1:word16]
	Mem610[ss:sp_248 - 4:word16] = Mem607[ds_596:0x29DF:word16]
	Mem613[ss:sp_248 - 6:word16] = ax_433
	selector ds_618
	fn0800_40BF(ds_596, Mem613[ss:sp_248 - 6:word16], Mem613[ss:sp_248 - 4:word32], out dx_1623, out di_1624, out ds_618)
	Mem628[ss:sp_248 - 2:word16] = Mem613[ds_618:0x29E1:word16]
	Mem631[ss:sp_248 - 4:word16] = Mem628[ds_618:0x29DF:word16]
	Mem636[ss:sp_248 - 6:word16] = 0x0000
	selector ds_641
	fn0800_401E(ds_618, Mem636[ss:sp_248 - 6:word16], Mem636[ss:sp_248 - 4:word32], out cx_1625, out dx_1626, out bx_1627, out di_1628, out ds_641)
	Mem652[ss:sp_248 - 2:word16] = Mem636[ds_641:0x29E1:word16]
	Mem655[ss:sp_248 - 4:word16] = Mem652[ds_641:0x29DF:word16]
	Mem658[ss:sp_248 - 6:word16] = ax_393
	selector ds_663
	fn0800_40BF(ds_641, Mem658[ss:sp_248 - 6:word16], Mem658[ss:sp_248 - 4:word32], out dx_1629, out di_1630, out ds_663)
	Mem674[ss:sp_248 - 2:word16] = Mem658[ds_663:0x29E1:word16]
	Mem677[ss:sp_248 - 4:word16] = Mem674[ds_663:0x29DF:word16]
	Mem680[ss:sp_248 - 6:word16] = ax_413
	selector ds_685
	fn0800_40BF(ds_663, Mem680[ss:sp_248 - 6:word16], Mem680[ss:sp_248 - 4:word32], out dx_1631, out di_1632, out ds_685)
	Mem696[ss:sp_248 - 2:word16] = Mem680[ds_685:0x29E1:word16]
	Mem699[ss:sp_248 - 4:word16] = Mem696[ds_685:0x29DF:word16]
	Mem702[ss:sp_248 - 6:word16] = 0x001E
	selector ds_707
	fn0800_40BF(ds_685, Mem702[ss:sp_248 - 6:word16], Mem702[ss:sp_248 - 4:word32], out dx_1633, out di_1634, out ds_707)
	Mem718[ss:sp_248 - 2:word16] = Mem702[ds_707:0x29E1:word16]
	Mem721[ss:sp_248 - 4:word16] = Mem718[ds_707:0x29DF:word16]
	Mem724[ss:sp_248 - 6:word16] = ax_333
	selector ds_729
	fn0800_40BF(ds_707, Mem724[ss:sp_248 - 6:word16], Mem724[ss:sp_248 - 4:word32], out dx_1635, out di_1636, out ds_729)
	Mem739[ss:sp_248 - 2:word16] = Mem724[ds_729:0x29E1:word16]
	Mem742[ss:sp_248 - 4:word16] = Mem739[ds_729:0x29DF:word16]
	Mem747[ss:sp_248 - 6:word16] = 0x0000
	selector ds_1013
	fn0800_401E(ds_729, Mem747[ss:sp_248 - 6:word16], Mem747[ss:sp_248 - 4:word32], out cx_1637, out dx_1638, out bx_1639, out di_1640, out ds_1013)
	Mem762[ss:sp_248 - 2:word16] = 0x0000
	Mem769[ss:sp_248 - 4:word16] = 0x0000
	Mem771[ss:sp_248 - 6:word16] = ax_313 + 0x0020
	Mem774[ss:sp_248 - 8:word16] = Mem771[ds_1013:0x29E5:word16]
	Mem777[ss:sp_248 - 10:word16] = Mem774[ds_1013:0x29E3:word16]
	fn0800_ACB3(ds_1013, Mem777[ss:sp_248 - 10:segptr32], Mem777[ss:sp_248 - 6:ui32], Mem777[ss:sp_248 - 2:word16], out cx_1641, out dx_1642, out bx_1643)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49B5:
	Mem796[ss:sp_248 - 2:word16] = Mem791[ds_1013:0x29E5:word16]
	Mem799[ss:sp_248 - 4:word16] = Mem796[ds_1013:0x29E3:word16]
	word16 ax_813 = DPB(fn0800_3DCF(ds_1013, Mem799[ss:sp_248 - 4:segptr32], out ch_1651, out dx_1652, out di_1653, out ds_1013), 0x00, 8)
	word16 di_815 = ax_813
	branch ax_813 == 0x0000 l0800_4A22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49CB:
	Mem821[ss:sp_248 - 2:word16] = Mem799[ds_1013:0x29E5:word16]
	Mem824[ss:sp_248 - 4:word16] = Mem821[ds_1013:0x29E3:word16]
	word16 ax_825 = fn0800_3FAD(ds_1013, Mem824[ss:sp_248 - 4:word32], out ch_1644, out di_815, out ds_1013)
	word16 si_839 = 0x0000
	word16 wLoc0C_1447 = di_815
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A15:
	wLoc0C_1447 = wLoc0C_1447 - 0x0001
	branch wLoc0C_1447 != 0x0000 l0800_49E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49E3:
	Mem857[ss:sp_248 - 2:word16] = Mem848[ds_1013:0x29E5:word16]
	Mem860[ss:sp_248 - 4:word16] = Mem857[ds_1013:0x29E3:word16]
	selector ds_867
	si_839 = si_839 + DPB(fn0800_3DCF(ds_1013, Mem860[ss:sp_248 - 4:segptr32], out ch_1645, out dx_1646, out di_1647, out ds_867), 0x00, 8)
	Mem880[ss:sp_248 - 2:word16] = Mem860[ds_867:0x29E1:word16]
	Mem883[ss:sp_248 - 4:word16] = Mem880[ds_867:0x29DF:word16]
	Mem885[ss:sp_248 - 6:word16] = si_839
	selector ds_890
	fn0800_40BF(ds_867, Mem885[ss:sp_248 - 6:word16], Mem885[ss:sp_248 - 4:word32], out dx_1648, out di_1649, out ds_890)
	Mem901[ss:sp_248 - 2:word16] = Mem885[ds_890:0x29E1:word16]
	Mem904[ss:sp_248 - 4:word16] = Mem901[ds_890:0x29DF:word16]
	Mem907[ss:sp_248 - 6:word16] = ax_825
	fn0800_40BF(ds_890, Mem907[ss:sp_248 - 6:word16], Mem907[ss:sp_248 - 4:word32], out dx_1650, out di_815, out ds_1013)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A1F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A22:
	branch di_815 != 0x0000 l0800_49B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A26:
	word16 di_1005
	Mem936[ss:sp_248 - 2:word16] = Mem931[ds_1013:0x29E1:word16]
	Mem939[ss:sp_248 - 4:word16] = Mem936[ds_1013:0x29DF:word16]
	word16 dx_943
	word16 ax_940 = fn0800_AD2F(ds_1013, Mem939[ss:sp_248 - 4:segptr32], out dx_943)
	branch dx_943 > 0x0000 l0800_4A56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A38:
	branch dx_943 < 0x0000 l0800_4A3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A3A:
	branch ax_940 >=u 0x0200 l0800_4A56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A56:
	Mem962[ss:sp_248 - 2:word16] = Mem939[ds_1013:0x29E1:word16]
	Mem965[ss:sp_248 - 4:word16] = Mem962[ds_1013:0x29DF:word16]
	di_1005 = 0x0010 - fn0800_AD2F(ds_1013, Mem965[ss:sp_248 - 4:segptr32], out dx_1654) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A3F:
	Mem988[ss:sp_248 - 2:word16] = Mem939[ds_1013:0x29E1:word16]
	Mem991[ss:sp_248 - 4:word16] = Mem988[ds_1013:0x29DF:word16]
	di_1005 = 0x0200 - fn0800_AD2F(ds_1013, Mem991[ss:sp_248 - 4:segptr32], out dx_1655)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A81:
	branch di_1005 != 0x0000 l0800_4A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A70:
	Mem1019[ss:sp_248 - 2:word16] = Mem1014[ds_1013:0x29E1:word16]
	Mem1022[ss:sp_248 - 4:word16] = Mem1019[ds_1013:0x29DF:word16]
	Mem1026[ss:sp_248 - 6:word16] = DPB(di_1005, 0x00, 0)
	fn0800_4047(ds_1013, Mem1026[ss:sp_248 - 6:byte], Mem1026[ss:sp_248 - 4:segptr32], out cx_1656, out dx_1657, out bx_1658, out di_1005, out ds_1013)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A88:
	Mem1042[ss:sp_248 - 2:word16] = Mem1014[ds_1013:0x29E1:word16]
	Mem1045[ss:sp_248 - 4:word16] = Mem1042[ds_1013:0x29DF:word16]
	word16 dx_1049
	fn0800_8C8A(fn0800_AD2F(ds_1013, Mem1045[ss:sp_248 - 4:segptr32], out dx_1049), 0x04, dx_1049, out cl_1659, out dx_1660)
	word16 sp_1062 = <invalid>
	Mem1076[ss:sp_1062 - 2:word16] = 0x0000
	Mem1079[ss:sp_1062 - 4:word16] = dx_152
	Mem1082[ss:sp_1062 - 6:word16] = ax_149
	Mem1085[ss:sp_1062 - 8:word16] = Mem1082[ds_1013:0x29E5:word16]
	Mem1088[ss:sp_1062 - 10:word16] = Mem1085[ds_1013:0x29E3:word16]
	fn0800_ACB3(ds_1013, Mem1088[ss:sp_1062 - 10:segptr32], Mem1088[ss:sp_1062 - 6:ui32], Mem1088[ss:sp_1062 - 2:word16], out cx_1661, out dx_1662, out bx_1663)
	word16 bp_1101
	selector ds_1105
	word16 ax_1100 = fn0800_5374(ds_1013, out dx_1664, out bp_1101, out di_1665, out ds_1105)
	word16 sp_1109 = <invalid>
	branch ax_1100 == 0x0000 l0800_4AC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4AC4:
	Mem1121[ss:sp_1109 - 2:word16] = Mem1088[ds_1105:0x29E1:word16]
	Mem1124[ss:sp_1109 - 4:word16] = Mem1121[ds_1105:0x29DF:word16]
	word16 dx_1128
	word16 ax_1125 = fn0800_AD2F(ds_1105, Mem1124[ss:sp_1109 - 4:segptr32], out dx_1128)
	Mem1135[ss:bp_1101 - 0x0006:word16] = dx_1128
	Mem1136[ss:bp_1101 - 0x0008:word16] = ax_1125
	Mem1141[ss:sp_1109 - 2:word16] = 0x0000
	Mem1144[ss:sp_1109 - 4:word16] = Mem1141[ss:bp_1101 - 0x0002:word16]
	Mem1147[ss:sp_1109 - 6:word16] = Mem1144[ss:bp_1101 - 0x0004:word16]
	Mem1150[ss:sp_1109 - 8:word16] = Mem1147[ds_1105:0x29E5:word16]
	Mem1153[ss:sp_1109 - 10:word16] = Mem1150[ds_1105:0x29E3:word16]
	fn0800_ACB3(ds_1105, Mem1153[ss:sp_1109 - 10:segptr32], Mem1153[ss:sp_1109 - 6:ui32], Mem1153[ss:sp_1109 - 2:word16], out cx_1666, out dx_1667, out bx_1668)
	Mem1167[ss:sp_1109 - 2:word16] = Mem1153[ds_1105:0x29E5:word16]
	Mem1170[ss:sp_1109 - 4:word16] = Mem1167[ds_1105:0x29E3:word16]
	fn0800_4194(ds_1105, Mem1170[ss:sp_1109 - 4:word32])
	ui32 dx_ax_1566 = <invalid>
	ui32 dx_ax_1406 = dx_ax_1566 - SEQ(Mem1170[ss:bp_1101 - 0x0002:word16], Mem1170[ss:bp_1101 - 0x0004:word16])
	Mem1185[ss:sp_1109 - 2:word16] = SLICE(dx_ax_1406, word16, 16)
	Mem1187[ss:sp_1109 - 4:word16] = (word16) dx_ax_1406
	Mem1190[ss:sp_1109 - 6:word16] = Mem1187[ds_1105:0x29E1:word16]
	Mem1193[ss:sp_1109 - 8:word16] = Mem1190[ds_1105:0x29DF:word16]
	Mem1196[ss:sp_1109 - 10:word16] = Mem1193[ds_1105:0x29E5:word16]
	Mem1199[ss:sp_1109 - 12:word16] = Mem1196[ds_1105:0x29E3:word16]
	word16 bp_1201
	selector ds_1205
	fn0800_3B0A(Mem1199[ss:sp_1109 - 4:word16], Mem1199[ss:sp_1109 - 2:word16], out dx_1669, out bp_1201, out si_1670, out di_1671, out ds_1205)
	word16 di_1215 = Mem1199[ss:bp_1201 - 0x0008:word16]
	Mem1231[ss:bp_1201 - 0x000A:word16] = fn0800_8CAA(Mem1199[ss:bp_1201 - 0x0008:word16], 0x09, Mem1199[ss:bp_1201 - 0x0006:word16], out dx_1672)
	word16 sp_1226 = <invalid>
	branch (di_1215 & 0x01FF) == 0x0000 l0800_4B37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B34:
	Mem1237[ss:bp_1201 - 0x000A:word16] = Mem1231[ss:bp_1201 - 0x000A:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B37:
	Mem1245[ss:sp_1226 - 2:word16] = 0x0000
	Mem1248[ss:sp_1226 - 4:word16] = 0x0000
	Mem1250[ss:sp_1226 - 6:word16] = 0x0002
	Mem1254[ss:sp_1226 - 8:word16] = Mem1250[ds_1205:0x29E1:word16]
	Mem1257[ss:sp_1226 - 10:word16] = Mem1254[ds_1205:0x29DF:word16]
	fn0800_ACB3(ds_1205, Mem1257[ss:sp_1226 - 10:segptr32], Mem1257[ss:sp_1226 - 6:ui32], Mem1257[ss:sp_1226 - 2:word16], out cx_1673, out dx_1674, out bx_1675)
	Mem1271[ss:sp_1226 - 2:word16] = Mem1257[ds_1205:0x29E1:word16]
	Mem1274[ss:sp_1226 - 4:word16] = Mem1271[ds_1205:0x29DF:word16]
	Mem1277[ss:sp_1226 - 6:word16] = di_1215 & 0x01FF
	selector ds_1282
	fn0800_40BF(ds_1205, Mem1277[ss:sp_1226 - 6:word16], Mem1277[ss:sp_1226 - 4:word32], out dx_1676, out di_1677, out ds_1282)
	Mem1293[ss:sp_1226 - 2:word16] = Mem1277[ds_1282:0x29E1:word16]
	Mem1296[ss:sp_1226 - 4:word16] = Mem1293[ds_1282:0x29DF:word16]
	Mem1300[ss:sp_1226 - 6:word16] = Mem1296[ss:bp_1201 - 0x000A:word16]
	selector ds_1305
	fn0800_40BF(ds_1282, Mem1300[ss:sp_1226 - 6:word16], Mem1300[ss:sp_1226 - 4:word32], out dx_1678, out di_1679, out ds_1305)
	Mem1316[ss:sp_1226 - 2:word16] = Mem1300[ds_1305:0x29E1:word16]
	Mem1319[ss:sp_1226 - 4:word16] = Mem1316[ds_1305:0x29DF:word16]
	Mem1322[ss:sp_1226 - 6:word16] = Mem1319[ss:bp_1201 - 0x000C:word16]
	selector ds_1327
	fn0800_40BF(ds_1305, Mem1322[ss:sp_1226 - 6:word16], Mem1322[ss:sp_1226 - 4:word32], out dx_1680, out di_1681, out ds_1327)
	Mem1338[ss:sp_1226 - 2:word16] = Mem1322[ds_1327:0x29E1:word16]
	Mem1341[ss:sp_1226 - 4:word16] = Mem1338[ds_1327:0x29DF:word16]
	Mem1344[ss:sp_1226 - 6:word16] = Mem1341[ss:bp_1201 - 0x000E:word16]
	selector ds_1349
	word16 dx_1350
	fn0800_40BF(ds_1327, Mem1344[ss:sp_1226 - 6:word16], Mem1344[ss:sp_1226 - 4:word32], out dx_1350, out di_1682, out ds_1349)
	word16 di_1360 = Mem1344[ss:sp_1226:word16]
	word16 bp_1364 = Mem1344[ss:bp_1201:word16]
	dxOut = dx_1350
	bpOut = bp_1364
	diOut = di_1360
	dsOut = ds_1349
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4ABE:
	word16 di_1366 = Mem1088[ss:sp_1109:word16]
	word16 bp_1370 = Mem1088[ss:bp_1101:word16]
	dxOut = ax_1100
	bpOut = bp_1370
	diOut = di_1366
	dsOut = ds_1105
	return ax_1100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4798:
	word16 di_1376 = Mem116[ss:sp_134:word16]
	dxOut = dx_133
	bpOut = bp
	diOut = di_1376
	dsOut = ds_120
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4758:
	dxOut = 0x0000
	bpOut = bp
	diOut = di
	dsOut = ds_62
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4716:
	dxOut = dx
	bpOut = bp
	diOut = di
	dsOut = ds
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_46FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4B97(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_4B97_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B97:
	word16 di_18
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, SEQ(Mem0[ds:0x29E5:word16], Mem9[ds:0x29E3:word16]), out dx_20, out di_18, out ds_19) != 0x0000 l0800_4BAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BAD:
	word16 bp_32
	word16 di_35
	selector ds_36
	word16 dx_37
	word16 ax_31 = fn0800_5374(ds_19, out dx_37, out bp_32, out di_35, out ds_36)
	dxOut = dx_37
	bpOut = bp_32
	diOut = di_35
	dsOut = ds_36
	return ax_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BA9:
	dxOut = dx_20
	bpOut = bp
	diOut = di_18
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4B97_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4BB1(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_4BB1_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BB1:
	word16 di_18
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, SEQ(Mem0[ds:0x29E5:word16], Mem9[ds:0x29E3:word16]), out dx_20, out di_18, out ds_19) != 0x0000 l0800_4BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BC7:
	fn0800_ACB3(ds_19, SEQ(Mem39[ds_19:0x29E5:word16], Mem42[ds_19:0x29E3:word16]), 0xFFFFFFEE, 0x0001, out cx_262, out dx_263, out bx_264)
	fn0800_401E(ds_19, 0x601A, SEQ(Mem45[ds_19:0x29E1:word16], Mem59[ds_19:0x29DF:word16]), out cx_265, out dx_266, out bx_267, out di_268, out ds_269)
	selector ds_103
	fn0800_3B0A(0x0010, 0x0000, out dx_270, out bp_271, out si_272, out di_273, out ds_103)
	word16 sp_107 = <invalid>
	Mem115[ss:sp_107 + 0x000A:word16] = Mem97[ds_103:0x29E1:word16]
	Mem118[ss:sp_107 + 0x0008:word16] = Mem115[ds_103:0x29DF:word16]
	Mem123[ss:sp_107 + 0x0006:word16] = 0x0000
	Mem125[ss:sp_107 + 0x0004:word16] = 0x0000
	selector ds_130
	fn0800_409C(ds_103, Mem125[ss:sp_107 + 0x0004:word16], Mem125[ss:sp_107 + 0x0006:word16], Mem125[ss:sp_107 + 0x0008:word32], out dx_274, out di_275, out ds_130)
	Mem140[ss:sp_107 + 0x000A:word16] = Mem125[ds_130:0x29E1:word16]
	Mem143[ss:sp_107 + 0x0008:word16] = Mem140[ds_130:0x29DF:word16]
	Mem148[ss:sp_107 + 0x0006:word16] = 0x0000
	Mem150[ss:sp_107 + 0x0004:word16] = 0x0000
	selector ds_155
	fn0800_409C(ds_130, Mem150[ss:sp_107 + 0x0004:word16], Mem150[ss:sp_107 + 0x0006:word16], Mem150[ss:sp_107 + 0x0008:word32], out dx_276, out di_277, out ds_155)
	Mem166[ss:sp_107 + 0x000A:word16] = Mem150[ds_155:0x29E1:word16]
	Mem169[ss:sp_107 + 0x0008:word16] = Mem166[ds_155:0x29DF:word16]
	Mem172[ss:sp_107 + 0x0006:word16] = Mem169[ds_155:0x29E5:word16]
	Mem175[ss:sp_107 + 0x0004:word16] = Mem172[ds_155:0x29E3:word16]
	selector ds_180
	Mem190[ss:sp_107 + 0x0006:word16] = fn0800_3E27(ds_155, Mem175[ss:sp_107 + 0x0004:word32], out cx_278, out dx_279, out di_280, out ds_180)
	selector ds_195
	fn0800_401E(ds_180, Mem190[ss:sp_107 + 0x0006:word16], Mem190[ss:sp_107 + 0x0008:word32], out cx_281, out dx_282, out bx_283, out di_284, out ds_195)
	word16 bp_205
	word16 di_208
	selector ds_209
	word16 dx_210
	word16 ax_204 = fn0800_5374(ds_195, out dx_210, out bp_205, out di_208, out ds_209)
	dxOut = dx_210
	bpOut = bp_205
	diOut = di_208
	dsOut = ds_209
	return ax_204
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BC3:
	dxOut = dx_20
	bpOut = bp
	diOut = di_18
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4BB1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4C55(word16 ax, word16 bp, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es Top
// Preserved: sp
fn0800_4C55_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C55:
	word16 di_20
	selector ds_21
	word16 dx_22 = fn0800_3E5D(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out di_20, out ds_21)
	branch dx_22 != 0x0000 l0800_4C72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C6D:
	branch ax == 0x03F3 l0800_4C79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C79:
	selector ds_106
	word16 ax_174 = fn0800_409C(ds_21, 0x03F3, 0x0000, SEQ(Mem17[ds_21:0x29E1:word16], Mem38[ds_21:0x29DF:word16]), out dx_906, out di_907, out ds_106)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C8E:
	selector ds_76
	word16 dx_77 = fn0800_3E5D(ds_106, SEQ(Mem64[ds_106:0x29E5:word16], Mem69[ds_106:0x29E3:word16]), out di_911, out ds_76)
	fn0800_409C(ds_76, ax_174, dx_77, SEQ(Mem90[ds_76:0x29E1:word16], Mem93[ds_76:0x29DF:word16]), out dx_912, out di_913, out ds_106)
	word16 wLoc08_698 = dx_77
	word16 wLoc0A_699 = ax_174
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CDA:
	word16 v21_120 = wLoc0A_699 - 0x0001
	wLoc0A_699 = v21_120
	wLoc08_698 = wLoc08_698 - (v21_120 <u 0x0000)
	word16 ax_126 = wLoc0A_699 | wLoc08_698
	branch ax_126 != 0x0000 l0800_4CBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CBC:
	selector ds_147
	fn0800_409C(ds_147, ax_126, fn0800_3E5D(ds_106, SEQ(Mem137[ds_106:0x29E5:word16], Mem140[ds_106:0x29E3:word16]), out di_908, out ds_147), SEQ(Mem125[ds_106:0x29E1:word16], Mem134[ds_106:0x29DF:word16]), out dx_909, out di_910, out ds_106)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CEC:
	ax_174 = ax_174 | dx_77
	branch ax_174 != 0x0000 l0800_4C8E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CF4:
	selector ds_193
	selector ds_214
	word16 ax_210 = fn0800_409C(ds_193, ax_174 - 0x0001, fn0800_3E5D(ds_106, SEQ(Mem183[ds_106:0x29E5:word16], Mem186[ds_106:0x29E3:word16]), out di_914, out ds_193) - (ax_174 <u 0x0001), SEQ(Mem125[ds_106:0x29E1:word16], Mem180[ds_106:0x29DF:word16]), out dx_915, out di_916, out ds_214)
	selector ds_232
	word16 dx_233 = fn0800_3E5D(ds_214, SEQ(Mem209[ds_214:0x29E5:word16], Mem225[ds_214:0x29E3:word16]), out di_917, out ds_232)
	selector ds_252
	word16 dx_253 = fn0800_3E5D(ds_232, SEQ(Mem242[ds_232:0x29E5:word16], Mem245[ds_232:0x29E3:word16]), out di_918, out ds_252)
	selector ds_287
	fn0800_409C(ds_252, ax_210, dx_233, SEQ(Mem270[ds_252:0x29E1:word16], Mem273[ds_252:0x29DF:word16]), out dx_919, out di_920, out ds_287)
	selector ds_316
	fn0800_409C(ds_287, ax_210 - 0x0001, dx_253 - (ax_210 <u 0x0001), SEQ(Mem282[ds_287:0x29E1:word16], Mem297[ds_287:0x29DF:word16]), out dx_921, out di_922, out ds_316)
	word16 dx_334
	word16 ax_331 = fn0800_AD2F(ds_316, SEQ(Mem311[ds_316:0x29E1:word16], Mem327[ds_316:0x29DF:word16]), out dx_334)
	Mem341[ds_316:0x4E8E:word16] = dx_334
	Mem342[ds_316:0x4E8C:word16] = ax_331
	fn0800_ACB3(ds_316, SEQ(Mem353[ds_316:0x29E5:word16], Mem356[ds_316:0x29E3:word16]), 0x00000004, 0x0001, out cx_923, out dx_924, out bx_925)
	ui32 ax_dx_685 = SEQ(dx_253, ax_210) - SEQ(dx_233, ax_210)
	word16 ax_267 = SLICE(ax_dx_685, word16, 16)
	word16 dx_264 = (word16) ax_dx_685
	word16 wLoc04_761 = ax_267
	word16 wLoc06_762 = dx_264
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DE4:
	word16 ax_379 = wLoc06_762 | wLoc04_761
	branch ax_379 != 0x0000 l0800_4DBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DBE:
	selector ds_400
	fn0800_409C(ds_400, ax_379, fn0800_3E5D(ds_316, SEQ(Mem390[ds_316:0x29E5:word16], Mem393[ds_316:0x29E3:word16]), out di_926, out ds_400), SEQ(Mem377[ds_316:0x29E1:word16], Mem387[ds_316:0x29DF:word16]), out dx_927, out di_928, out ds_316)
	word16 v56_425 = wLoc06_762 - 0x0001
	wLoc06_762 = v56_425
	wLoc04_761 = wLoc04_761 - (v56_425 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DEC:
	word16 v45_443 = Mem442[ds_316:0x29E5:word16]
	word16 v46_446 = Mem445[ds_316:0x29E3:word16]
	word16 ax_449 = fn0800_ACB3(ds_316, SEQ(v45_443, v46_446), 0x00000004, 0x0001, out cx_929, out dx_930, out bx_931)
	word16 v48_463 = Mem462[ds_316:0x29E3:word16]
	word16 di_468
	selector ds_469
	word16 dx_480 = fn0800_3E5D(ds_316, SEQ(Mem448[ds_316:0x29E5:word16], v48_463), out di_468, out ds_469) + (ax_449 <u 0x0001)
	word16 dx_493
	word16 ax_490 = fn0800_8C69(ax_449 + 0x0001, 0x02, dx_480, out cl_932, out dx_493)
	word16 sp_494 = <invalid>
	Mem500[ss:sp_494 - 2:word16] = dx_493
	Mem502[ss:sp_494 - 4:word16] = ax_490
	Mem505[ss:sp_494 - 6:word16] = Mem502[ds_469:0x29E5:word16]
	Mem508[ss:sp_494 - 8:word16] = Mem505[ds_469:0x29E3:word16]
	fn0800_ACB3(ds_469, Mem508[ss:sp_494 - 8:segptr32], Mem508[ss:sp_494 - 4:ui32], Mem508[ss:sp_494:word16], out cx_933, out dx_934, out bx_935)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4EDE:
	Mem522[ss:sp_494:word16] = Mem508[ds_469:0x29E5:word16]
	Mem525[ss:sp_494 - 2:word16] = Mem522[ds_469:0x29E3:word16]
	word16 dx_529
	word16 ax_526 = fn0800_AD2F(ds_469, Mem525[ss:sp_494 - 2:segptr32], out dx_529)
	Mem538[ss:sp_494:word16] = ax_526
	Mem540[ss:sp_494 - 2:word16] = dx_529
	Mem543[ss:sp_494 - 4:word16] = Mem540[ds_469:0x29E5:word16]
	Mem546[ss:sp_494 - 6:word16] = Mem543[ds_469:0x29E3:word16]
	fn0800_4194(ds_469, Mem546[ss:sp_494 - 6:word32])
	word16 bx_555 = Mem546[ss:sp_494 - 0x0002:word16]
	word16 dx_558 = Mem546[ss:sp_494:word16]
	branch bx_555 >=u dx_529 l0800_4F05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F05:
	branch bx_555 != dx_529 l0800_4F0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F07:
	branch dx_558 >=u ax_526 l0800_4F0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F0E:
	dxOut = dx_558
	bpOut = bp
	diOut = di_468
	dsOut = ds_469
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F0B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F02:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E41:
	Mem579[ss:sp_494:word16] = Mem546[ds_469:0x29E5:word16]
	Mem582[ss:sp_494 - 2:word16] = Mem579[ds_469:0x29E3:word16]
	selector ds_586
	word16 dx_587 = fn0800_3E5D(ds_469, Mem582[ss:sp_494 - 2:word32], out di_936, out ds_586)
	Mem601[ss:sp_494:word16] = Mem598[ds_586:0x29E1:word16]
	Mem604[ss:sp_494 - 2:word16] = Mem601[ds_586:0x29DF:word16]
	Mem607[ss:sp_494 - 4:word16] = dx_587
	Mem609[ss:sp_494 - 6:word16] = ax_526
	word16 di_613
	selector ds_614
	fn0800_409C(ds_586, Mem609[ss:sp_494 - 6:word16], Mem609[ss:sp_494 - 4:word16], Mem609[ss:sp_494 - 2:word32], out dx_937, out di_613, out ds_614)
	word16 cx_629 = 0x0004
	word16 bx_630 = 0x4F14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E7C:
	branch Mem628[0x0800:bx_630:word16] != ax_526 l0800_4E8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E84:
	word16 ax_638 = Mem628[0x0800:bx_630 + 0x0008:word16]
	branch ax_638 == (dx_587 & 0x3FFF) l0800_4E94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E94:
	word16 dx_645
	word16 ax_646
	call Mem628[0x0800:bx_630 + 0x0010:word16] (retsize: 2;)
		uses: ax:ax_638,bx:bx_631,cx:cx_647,dx:ax_526,sp:sp_494 + 0x0002,Stack +0000:bp,Stack +FFFFFFDE:v46_446,Stack +FFFFFFE0:v45_443,Stack +FFFFFFE2:0x0004,Stack +FFFFFFE4:v48_463,Stack +FFFFFFE6:0x0001,Stack +FFFFFFE8:ax_526,Stack +FFFFFFEA:dx_587 & 0x3FFF,Stack +FFFFFFEC:dx_264,Stack +FFFFFFEE:ax_267,Stack +FFFFFFF0:ax_210,Stack +FFFFFFF2:dx_253,Stack +FFFFFFF4:ax_210,Stack +FFFFFFF6:dx_233,Stack +FFFFFFF8:ax_526,Stack +FFFFFFFA:dx_587,Stack +FFFFFFFC:ax_449 + 0x0001,Stack +FFFFFFFE:dx_480,Top:0
		defs: ax:ax_646,dx:dx_645
	dxOut = dx_645
	bpOut = fp - 2
	diOut = di_613
	dsOut = ds_614
	return ax_646
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E8D:
	bx_630 = bx_630 + 0x0002
	cx_629 = cx_629 - 0x0001
	branch cx_629 != 0x0000 l0800_4E7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E92:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4ED7:
	dxOut = ax_526
	bpOut = bp
	diOut = di_613
	dsOut = ds_614
	return 0x0009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C72:
	dxOut = dx_22
	bpOut = bp
	diOut = di_20
	dsOut = ds_21
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4C55_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4F2C(word16 ax, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_4F2C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F2C:
	word16 dx_35
	selector ds_101
	word16 ax_32 = fn0800_8C69(ax, 0x02, fn0800_3E5D(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out di_769, out ds_101), out cl_770, out dx_35)
	word16 sp_36 = <invalid>
	Mem45[ss:sp_36 - 2:word16] = Mem42[ds_101:0x29E5:word16]
	Mem48[ss:sp_36 - 4:word16] = Mem45[ds_101:0x29E3:word16]
	word16 dx_52
	word16 ax_49 = fn0800_AD2F(ds_101, Mem48[ss:sp_36 - 4:segptr32], out dx_52)
	branch dx_35 <u 0x0000 l0800_4F95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F65:
	branch dx_35 >u 0x0000 l0800_4F6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F67:
	branch ax_32 <=u 0x0012 l0800_4F95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F6D:
	Mem72[ss:sp_36 - 2:word16] = Mem60[ds_101:0x29E5:word16]
	Mem75[ss:sp_36 - 4:word16] = Mem72[ds_101:0x29E3:word16]
	selector ds_79
	wLoc16 = fn0800_3E5D(ds_101, Mem75[ss:sp_36 - 4:word32], out di_772, out ds_79)
	Mem94[ss:sp_36 - 2:word16] = Mem91[ds_79:0x29E5:word16]
	Mem97[ss:sp_36 - 4:word16] = Mem94[ds_79:0x29E3:word16]
	wLoc18 = ax_49
	wLoc0E = fn0800_3E5D(ds_79, Mem97[ss:sp_36 - 4:word32], out di_773, out ds_101)
	wLoc10 = ax_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F95:
	Mem118[ss:sp_36 - 2:word16] = Mem113[ds_101:0x29E5:word16]
	Mem121[ss:sp_36 - 4:word16] = Mem118[ds_101:0x29E3:word16]
	selector ds_125
	word16 dx_139
	word16 ax_136 = fn0800_8CAA(ax_49, 0x08, fn0800_3F58(ds_101, Mem121[ss:sp_36 - 4:word32], out di_771, out ds_125), out dx_139)
	word16 sp_140 = <invalid>
	branch dx_139 != 0x0052 l0800_4FB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FAD:
	branch ax_136 != 0x4E43 l0800_4FB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FB5:
	Mem155[ss:sp_140 - 2:word16] = Mem121[ds_125:0x29E1:word16]
	Mem158[ss:sp_140 - 4:word16] = Mem155[ds_125:0x29DF:word16]
	word16 dx_167
	word16 ax_164 = fn0800_8CAA(ax_32, 0x02, dx_35, out dx_167)
	word16 sp_168 = <invalid>
	Mem174[ss:sp_168 - 2:word16] = dx_167
	Mem176[ss:sp_168 - 4:word16] = ax_164
	selector ds_181
	fn0800_409C(ds_125, Mem176[ss:sp_168 - 4:word16], Mem176[ss:sp_168 - 2:word16], Mem176[ss:sp_168:word32], out dx_774, out di_775, out ds_181)
	Mem193[ss:sp_168 + 0x0002:word16] = 0x0000
	Mem196[ss:sp_168:word16] = dx_52
	Mem199[ss:sp_168 - 2:word16] = ax_49
	Mem202[ss:sp_168 - 4:word16] = Mem199[ds_181:0x29E5:word16]
	Mem205[ss:sp_168 - 6:word16] = Mem202[ds_181:0x29E3:word16]
	fn0800_ACB3(ds_181, Mem205[ss:sp_168 - 6:segptr32], Mem205[ss:sp_168 - 2:ui32], Mem205[ss:sp_168 + 2:word16], out cx_776, out dx_777, out bx_778)
	Mem219[ss:sp_168 + 0x0002:word16] = dx_35
	Mem222[ss:sp_168:word16] = ax_32
	Mem225[ss:sp_168 - 2:word16] = Mem222[ds_181:0x29E1:word16]
	Mem228[ss:sp_168 - 4:word16] = Mem225[ds_181:0x29DF:word16]
	Mem231[ss:sp_168 - 6:word16] = Mem228[ds_181:0x29E5:word16]
	Mem234[ss:sp_168 - 8:word16] = Mem231[ds_181:0x29E3:word16]
	word16 sp_244 = <invalid>
	word16 bp_236
	selector ds_240
	word16 ax_235 = fn0800_3B0A(Mem234[ss:sp_168:word16], Mem234[ss:sp_168 + 2:word16], out dx_779, out bp_236, out si_243, out di_780, out ds_240)
	word16 sp_249 = sp_244 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50BC:
	word16 sp_255 = sp_249 - 2
	Mem257[ss:sp_255:word16] = Mem252[ds_240:0x29E5:word16]
	Mem260[ss:sp_255 - 2:word16] = Mem257[ds_240:0x29E3:word16]
	selector ds_264
	branch fn0800_3F58(ds_240, Mem260[ss:sp_255 - 2:word32], out di_796, out ds_264) != 0x0000 l0800_50D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50CE:
	branch ax_235 != 0x03EC l0800_50D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50D6:
	word16 v58_281 = Mem260[ds_264:0x4E8C:word16] + 0x0004
	Mem282[ds_264:0x4E8C:word16] = v58_281
	Mem286[ds_264:0x4E8E:word16] = Mem282[ds_264:0x4E8E:word16] + (v58_281 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50D3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5006:
	Mem298[ss:sp_255:word16] = 0x0001
	Mem304[ss:sp_255 - 2:word16] = 0x0000
	Mem306[ss:sp_255 - 4:word16] = 0x0004
	Mem309[ss:sp_255 - 6:word16] = Mem306[ds_264:0x29E5:word16]
	Mem312[ss:sp_255 - 8:word16] = Mem309[ds_264:0x29E3:word16]
	fn0800_ACB3(ds_264, Mem312[ss:sp_255 - 8:segptr32], Mem312[ss:sp_255 - 4:ui32], Mem312[ss:sp_255:word16], out cx_797, out dx_798, out bx_799)
	Mem325[ss:sp_255:word16] = Mem312[ds_264:0x29E1:word16]
	Mem328[ss:sp_255 - 2:word16] = Mem325[ds_264:0x29DF:word16]
	Mem334[ss:sp_255 - 4:word16] = 0x0000
	Mem336[ss:sp_255 - 6:word16] = 0x03EC
	ax_235 = fn0800_409C(ds_264, Mem336[ss:sp_255 - 6:word16], Mem336[ss:sp_255 - 4:word16], Mem336[ss:sp_255 - 2:word32], out dx_800, out di_801, out ds_240)
	sp_249 = sp_255 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5034:
	word16 sp_354 = sp_249 - 2
	Mem356[ss:sp_354:word16] = Mem351[ds_240:0x29E5:word16]
	Mem359[ss:sp_354 - 2:word16] = Mem356[ds_240:0x29E3:word16]
	selector ds_363
	Mem373[ss:bp_236 - 0x0004:word16] = fn0800_3E5D(ds_240, Mem359[ss:sp_354 - 2:word32], out di_809, out ds_363)
	Mem375[ss:bp_236 - 0x0006:word16] = ax_235
	Mem378[ss:sp_354:word16] = Mem375[ds_363:0x29E1:word16]
	Mem381[ss:sp_354 - 2:word16] = Mem378[ds_363:0x29DF:word16]
	Mem384[ss:sp_354 - 4:word16] = Mem381[ss:bp_236 - 0x0004:word16]
	Mem386[ss:sp_354 - 6:word16] = ax_235
	fn0800_409C(ds_363, Mem386[ss:sp_354 - 6:word16], Mem386[ss:sp_354 - 4:word16], Mem386[ss:sp_354 - 2:word32], out dx_810, out di_811, out ds_240)
	sp_249 = sp_354 + 0x0002
	word16 ax_400 = Mem386[ss:bp_236 - 0x0006:word16] | Mem386[ss:bp_236 - 0x0004:word16]
	branch ax_400 == 0x0000 l0800_50B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5062:
	Mem406[ss:sp_354:word16] = Mem386[ds_240:0x29E5:word16]
	Mem409[ss:sp_354 - 0x0002:word16] = Mem406[ds_240:0x29E3:word16]
	selector ds_413
	Mem426[ss:bp_236 - 0x0008:word16] = fn0800_3E5D(ds_240, Mem409[ss:sp_354 - 0x0002:word32], out di_802, out ds_413) - (ax_400 <u 0x0001)
	Mem427[ss:bp_236 - 0x000A:word16] = ax_400 - 0x0001
	Mem430[ss:sp_354:word16] = Mem427[ds_413:0x29E1:word16]
	Mem433[ss:sp_354 - 0x0002:word16] = Mem430[ds_413:0x29DF:word16]
	Mem436[ss:sp_354 - 0x0004:word16] = Mem433[ss:bp_236 - 0x0008:word16]
	Mem438[ss:sp_354 - 6:word16] = ax_400 - 0x0001
	selector ds_443
	fn0800_409C(ds_413, Mem438[ss:sp_354 - 6:word16], Mem438[ss:sp_354 - 4:word16], Mem438[ss:sp_354 - 2:word32], out dx_803, out di_804, out ds_443)
	word16 dx_458
	word16 ax_455 = fn0800_8C69(Mem438[ss:bp_236 - 0x0006:word16], 0x02, Mem438[ss:bp_236 - 0x0004:word16], out cl_805, out dx_458)
	word16 sp_459 = <invalid>
	Mem465[ss:sp_459 - 2:word16] = dx_458
	Mem467[ss:sp_459 - 4:word16] = ax_455
	Mem470[ss:sp_459 - 6:word16] = Mem467[ds_443:0x29E1:word16]
	Mem473[ss:sp_459 - 8:word16] = Mem470[ds_443:0x29DF:word16]
	Mem476[ss:sp_459 - 10:word16] = Mem473[ds_443:0x29E5:word16]
	Mem479[ss:sp_459 - 12:word16] = Mem476[ds_443:0x29E3:word16]
	fn0800_3B0A(Mem479[ss:sp_459 - 4:word16], Mem479[ss:sp_459 - 2:word16], out dx_806, out bp_236, out si_807, out di_808, out ds_240)
	word16 sp_489 = <invalid>
	sp_249 = sp_489 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50B1:
	ax_235 = Mem498[ss:bp_236 - 0x0006:word16] | Mem498[ss:bp_236 - 0x0004:word16]
	branch ax_235 == 0x0000 l0800_50BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FB2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50E6:
	Mem506[ss:sp_140 - 2:word16] = Mem121[ds_125:0x29E1:word16]
	Mem509[ss:sp_140 - 4:word16] = Mem506[ds_125:0x29DF:word16]
	word16 dx_516
	word16 ax_513 = fn0800_8CAA(wLoc18, 0x02, wLoc16, out dx_516)
	word16 sp_517 = <invalid>
	Mem523[ss:sp_517 - 2:word16] = dx_516
	Mem525[ss:sp_517 - 4:word16] = ax_513
	selector ds_530
	fn0800_409C(ds_125, Mem525[ss:sp_517 - 4:word16], Mem525[ss:sp_517 - 2:word16], Mem525[ss:sp_517:word32], out dx_781, out di_782, out ds_530)
	Mem541[ss:sp_517 + 0x0002:word16] = Mem525[ds_530:0x29E1:word16]
	Mem544[ss:sp_517:word16] = Mem541[ds_530:0x29DF:word16]
	word16 dx_548
	word16 ax_545 = fn0800_AD2F(ds_530, Mem544[ss:sp_517:segptr32], out dx_548)
	Mem561[ss:sp_517 + 0x0002:word16] = 0x0000
	Mem564[ss:sp_517:word16] = Mem561[ds_530:0x4E8E:word16]
	Mem567[ss:sp_517 - 2:word16] = Mem564[ds_530:0x4E8C:word16]
	Mem570[ss:sp_517 - 4:word16] = Mem567[ds_530:0x29E1:word16]
	Mem573[ss:sp_517 - 6:word16] = Mem570[ds_530:0x29DF:word16]
	fn0800_ACB3(ds_530, Mem573[ss:sp_517 - 6:segptr32], Mem573[ss:sp_517 - 2:ui32], Mem573[ss:sp_517 + 2:word16], out cx_783, out dx_784, out bx_785)
	Mem587[ss:sp_517 + 0x0002:word16] = Mem573[ds_530:0x29E1:word16]
	Mem590[ss:sp_517:word16] = Mem587[ds_530:0x29DF:word16]
	Mem593[ss:sp_517 - 2:word16] = wLoc0E
	Mem596[ss:sp_517 - 4:word16] = wLoc10
	selector ds_601
	fn0800_409C(ds_530, Mem596[ss:sp_517 - 4:word16], Mem596[ss:sp_517 - 2:word16], Mem596[ss:sp_517:word32], out dx_786, out di_787, out ds_601)
	word16 v48_609 = Mem596[ds_601:0x4E8C:word16] + 0x0004
	Mem610[ds_601:0x4E8C:word16] = v48_609
	Mem614[ds_601:0x4E8E:word16] = Mem610[ds_601:0x4E8E:word16] + (v48_609 <u 0x0000)
	Mem619[ss:sp_517 + 0x0002:word16] = 0x0000
	Mem622[ss:sp_517:word16] = dx_548
	Mem625[ss:sp_517 - 2:word16] = ax_545
	Mem628[ss:sp_517 - 4:word16] = Mem625[ds_601:0x29E1:word16]
	Mem631[ss:sp_517 - 6:word16] = Mem628[ds_601:0x29DF:word16]
	fn0800_ACB3(ds_601, Mem631[ss:sp_517 - 6:segptr32], Mem631[ss:sp_517 - 2:ui32], Mem631[ss:sp_517 + 2:word16], out cx_788, out dx_789, out bx_790)
	word16 bp_644
	selector ds_648
	Mem657[ss:bp_644 - 0x0002:word16] = fn0800_5374(ds_601, out dx_791, out bp_644, out di_792, out ds_648)
	word16 sp_652 = <invalid>
	Mem660[ss:sp_652 - 2:word16] = 0x0000
	ui32 ax_dx_696 = SEQ(Mem660[ss:bp_644 - 0x0018:word16], Mem660[ss:bp_644 - 0x001A:word16]) + SEQ(Mem660[ss:bp_644 - 0x0010:word16], Mem660[ss:bp_644 - 0x0012:word16])
	Mem669[ss:sp_652 - 4:word16] = SLICE(ax_dx_696, word16, 16)
	Mem671[ss:sp_652 - 6:word16] = (word16) ax_dx_696
	Mem674[ss:sp_652 - 8:word16] = Mem671[ds_648:0x29E5:word16]
	Mem677[ss:sp_652 - 10:word16] = Mem674[ds_648:0x29E3:word16]
	fn0800_ACB3(ds_648, Mem677[ss:sp_652 - 10:segptr32], Mem677[ss:sp_652 - 6:ui32], Mem677[ss:sp_652 - 2:word16], out cx_793, out dx_794, out bx_795)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4F2C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_518F(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_518F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_518F:
	word16 di_18
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, SEQ(Mem0[ds:0x29E5:word16], Mem9[ds:0x29E3:word16]), out dx_20, out di_18, out ds_19) != 0x0000 l0800_51A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A5:
	word16 bp_32
	word16 di_35
	selector ds_36
	word16 dx_37
	word16 ax_31 = fn0800_5374(ds_19, out dx_37, out bp_32, out di_35, out ds_36)
	dxOut = dx_37
	bpOut = bp_32
	diOut = di_35
	dsOut = ds_36
	return ax_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A1:
	dxOut = dx_20
	bpOut = bp
	diOut = di_18
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_518F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_51A9(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_51A9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A9:
	word16 bp_282 = fp - 2
	word16 sp_11 = fp - 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_533D:
	word16 sp_18 = sp_11 - 2
	Mem20[ss:sp_18:word16] = Mem15[ds:0x29E5:word16]
	Mem23[ss:sp_18 - 2:word16] = Mem20[ds:0x29E3:word16]
	word16 dx_27
	word16 ax_24 = fn0800_AD2F(ds, Mem23[ss:sp_18 - 2:segptr32], out dx_27)
	Mem36[ss:sp_18:word16] = ax_24
	Mem38[ss:sp_18 - 2:word16] = dx_27
	Mem41[ss:sp_18 - 4:word16] = Mem38[ds:0x29E5:word16]
	Mem44[ss:sp_18 - 6:word16] = Mem41[ds:0x29E3:word16]
	fn0800_4194(ds, Mem44[ss:sp_18 - 6:word32])
	word16 bx_53 = Mem44[ss:sp_18 - 0x0002:word16]
	word16 dx_56 = Mem44[ss:sp_18:word16]
	branch bx_53 >=u dx_27 l0800_5364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5364:
	branch bx_53 != dx_27 l0800_536D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5366:
	branch dx_56 >=u ax_24 l0800_536D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_536D:
	word16 bp_72 = Mem44[ss:bp_282:word16]
	dxOut = dx_56
	bpOut = bp_72
	diOut = di
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_536A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5361:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51B3:
	Mem80[ss:sp_18:word16] = Mem44[ds:0x29E5:word16]
	Mem83[ss:sp_18 - 2:word16] = Mem80[ds:0x29E3:word16]
	word16 dx_87
	word16 ax_84 = fn0800_3E9A(ds, Mem83[ss:sp_18 - 2:segptr32], out dx_87, out di, out ds)
	branch ax_84 == 0x0000 l0800_51D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51D5:
	Mem102[ss:sp_18:word16] = Mem83[ds:0x29E1:word16]
	Mem105[ss:sp_18 - 2:word16] = Mem102[ds:0x29DF:word16]
	Mem108[ss:sp_18 - 4:word16] = Mem105[ds:0x29E5:word16]
	Mem111[ss:sp_18 - 6:word16] = Mem108[ds:0x29E3:word16]
	selector ds_118
	Mem126[ss:sp_18 - 0x0004:word16] = fn0800_3DCF(ds, Mem111[ss:sp_18 - 6:segptr32], out ch_579, out dx_580, out di_581, out ds_118)
	fn0800_4047(ds_118, Mem126[ss:sp_18 - 0x0004:byte], Mem126[ss:sp_18 - 0x0002:segptr32], out cx_582, out dx_583, out bx_584, out di, out ds)
	sp_11 = sp_18 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51C5:
	branch ax_84 == 0x0001 l0800_51F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51F5:
	Mem144[ss:sp_18:word16] = Mem83[ds:0x29E1:word16]
	Mem147[ss:sp_18 - 2:word16] = Mem144[ds:0x29DF:word16]
	Mem150[ss:sp_18 - 4:word16] = Mem147[ds:0x29E5:word16]
	Mem153[ss:sp_18 - 6:word16] = Mem150[ds:0x29E3:word16]
	selector ds_157
	Mem167[ss:sp_18 - 0x0004:word16] = fn0800_3E5D(ds, Mem153[ss:sp_18 - 6:word32], out di_585, out ds_157)
	Mem169[ss:sp_18 - 0x0006:word16] = ax_84
	selector ds_174
	fn0800_409C(ds_157, Mem169[ss:sp_18 - 0x0006:word16], Mem169[ss:sp_18 - 0x0004:word16], Mem169[ss:sp_18 - 0x0002:word32], out dx_586, out di_587, out ds_174)
	Mem185[ss:sp_18:word16] = Mem169[ds_174:0x29E5:word16]
	Mem188[ss:sp_18 - 2:word16] = Mem185[ds_174:0x29E3:word16]
	selector ds_193
	word16 ax_189 = fn0800_3FAD(ds_174, Mem188[ss:sp_18 - 2:word32], out ch_588, out di_589, out ds_193)
	Mem203[ss:bp_282 - 0x0002:word16] = 0x0000
	Mem204[ss:bp_282 - 0x0004:word16] = ax_189
	Mem207[ss:sp_18:word16] = Mem204[ds_193:0x29E1:word16]
	Mem210[ss:sp_18 - 2:word16] = Mem207[ds_193:0x29DF:word16]
	Mem212[ss:sp_18 - 4:word16] = ax_189
	selector ds_217
	word16 ax_213 = fn0800_40BF(ds_193, Mem212[ss:sp_18 - 4:word16], Mem212[ss:sp_18 - 2:word32], out dx_590, out di_591, out ds_217)
	Mem228[ss:sp_18:word16] = Mem212[ds_217:0x29E5:word16]
	Mem231[ss:sp_18 - 2:word16] = Mem228[ds_217:0x29E3:word16]
	selector ds_235
	word16 dx_248
	word16 ax_245 = fn0800_8CAA(ax_213, 0x08, fn0800_3F58(ds_217, Mem231[ss:sp_18 - 2:word32], out di_592, out ds_235), out dx_248)
	word16 sp_249 = <invalid>
	branch dx_248 != 0x0052 l0800_52BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5250:
	branch ax_245 != 0x4E43 l0800_52BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52BA:
	Mem264[ss:sp_249 - 2:word16] = Mem231[ss:bp_282 - 0x0002:word16]
	Mem267[ss:sp_249 - 4:word16] = Mem264[ss:bp_282 - 0x0004:word16]
	Mem271[ss:sp_249 - 6:word16] = Mem267[ds_235:0x29E1:word16]
	Mem274[ss:sp_249 - 8:word16] = Mem271[ds_235:0x29DF:word16]
	Mem277[ss:sp_249 - 10:word16] = Mem274[ds_235:0x29E5:word16]
	Mem280[ss:sp_249 - 12:word16] = Mem277[ds_235:0x29E3:word16]
	fn0800_3B0A(Mem280[ss:sp_249 - 4:word16], Mem280[ss:sp_249 - 2:word16], out dx_602, out bp_282, out si_603, out di, out ds)
	word16 sp_290 = <invalid>
	sp_11 = sp_290 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5255:
	word16 di_301
	selector ds_302
	word16 dx_303
	word16 ax_297 = fn0800_5374(ds_235, out dx_303, out bp_282, out di_301, out ds_302)
	word16 sp_306 = <invalid>
	branch ax_297 == 0x0000 l0800_5263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5263:
	Mem318[ss:sp_306 - 2:word16] = 0x0001
	word16 dx_320 = Mem318[ds_302:0x2A07:word16]
	word16 dx_326 = -(dx_320 + 0x0002)
	Mem331[ss:sp_306 - 4:word16] = -(Mem318[ds_302:0x2A09:word16] + (dx_320 <u 0x0002)) - (dx_326 == 0x0000)
	Mem333[ss:sp_306 - 6:word16] = dx_326
	Mem336[ss:sp_306 - 8:word16] = Mem333[ds_302:0x29E1:word16]
	Mem339[ss:sp_306 - 10:word16] = Mem336[ds_302:0x29DF:word16]
	fn0800_ACB3(ds_302, Mem339[ss:sp_306 - 10:segptr32], Mem339[ss:sp_306 - 6:ui32], Mem339[ss:sp_306 - 2:word16], out cx_604, out dx_605, out bx_606)
	Mem353[ss:sp_306 - 2:word16] = Mem339[ds_302:0x29E1:word16]
	Mem356[ss:sp_306 - 4:word16] = Mem353[ds_302:0x29DF:word16]
	Mem359[ss:sp_306 - 6:word16] = Mem356[ds_302:0x2A07:word16]
	fn0800_40BF(ds_302, Mem359[ss:sp_306 - 6:word16], Mem359[ss:sp_306 - 4:word32], out dx_607, out di, out ds)
	Mem375[ss:sp_306 - 2:word16] = 0x0001
	Mem378[ss:sp_306 - 4:word16] = Mem375[ds:0x2A09:word16]
	Mem381[ss:sp_306 - 6:word16] = Mem378[ds:0x2A07:word16]
	Mem384[ss:sp_306 - 8:word16] = Mem381[ds:0x29E1:word16]
	Mem387[ss:sp_306 - 10:word16] = Mem384[ds:0x29DF:word16]
	fn0800_ACB3(ds, Mem387[ss:sp_306 - 10:segptr32], Mem387[ss:sp_306 - 6:ui32], Mem387[ss:sp_306 - 2:word16], out cx_608, out dx_609, out bx_610)
	sp_11 = sp_306
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_525E:
	word16 bp_401 = Mem231[ss:bp_282:word16]
	dxOut = dx_303
	bpOut = bp_401
	diOut = di_301
	dsOut = ds_302
	return ax_297
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_51A9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51CA:
	branch ax_84 != 0x0003 l0800_51D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51D2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5301:
	Mem407[ss:sp_18:word16] = Mem83[ds:0x29E5:word16]
	Mem410[ss:sp_18 - 2:word16] = Mem407[ds:0x29E3:word16]
	fn0800_4194(ds, Mem410[ss:sp_18 - 2:word32])
	Mem421[ss:sp_18:word16] = ax_84
	Mem423[ss:sp_18 - 2:word16] = dx_87
	Mem426[ss:sp_18 - 4:word16] = Mem423[ds:0x29E5:word16]
	Mem429[ss:sp_18 - 6:word16] = Mem426[ds:0x29E3:word16]
	fn0800_AD2F(ds, Mem429[ss:sp_18 - 6:segptr32], out dx_593)
	ui32 dx_ax_574 = <invalid>
	ui32 bx_cx_537 = SEQ(Mem429[ss:sp_18 - 0x0002:word16], Mem429[ss:sp_18:word16]) - dx_ax_574
	Mem450[ss:sp_18:word16] = SLICE(bx_cx_537, word16, 16)
	Mem452[ss:sp_18 - 2:word16] = (word16) bx_cx_537
	Mem455[ss:sp_18 - 4:word16] = Mem452[ds:0x29E1:word16]
	Mem458[ss:sp_18 - 6:word16] = Mem455[ds:0x29DF:word16]
	Mem461[ss:sp_18 - 8:word16] = Mem458[ds:0x29E5:word16]
	Mem464[ss:sp_18 - 10:word16] = Mem461[ds:0x29E3:word16]
	fn0800_3B0A(Mem464[ss:sp_18 - 2:word16], Mem464[ss:sp_18:word16], out dx_594, out bp_282, out si_595, out di, out ds)
	word16 sp_474 = <invalid>
	sp_11 = sp_474 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52D8:
	word16 si_481 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52FA:
	branch si_481 != 0x0003 l0800_52DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52DC:
	word16 sp_491 = sp_11 - 2
	Mem493[ss:sp_491:word16] = Mem488[ds:0x29E1:word16]
	Mem496[ss:sp_491 - 2:word16] = Mem493[ds:0x29DF:word16]
	Mem499[ss:sp_491 - 4:word16] = Mem496[ds:0x29E5:word16]
	Mem502[ss:sp_491 - 6:word16] = Mem499[ds:0x29E3:word16]
	selector ds_509
	Mem517[ss:sp_491 - 0x0004:word16] = fn0800_3DCF(ds, Mem502[ss:sp_491 - 6:segptr32], out ch_596, out dx_597, out di_598, out ds_509)
	fn0800_4047(ds_509, Mem517[ss:sp_491 - 0x0004:byte], Mem517[ss:sp_491 - 0x0002:segptr32], out cx_599, out dx_600, out bx_601, out di, out ds)
	si_481 = si_481 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5374(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_5374_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5374:
	word16 ax_21 = fn0800_AD2F(ds, SEQ(Mem13[ds:0x29E5:word16], Mem17[ds:0x29E3:word16]), out dx_632)
	selector ds_43
	fn0800_3E5D(ds, SEQ(Mem33[ds:0x29E5:word16], Mem36[ds:0x29E3:word16]), out di_633, out ds_43)
	Mem54[ds_43:0x2A21:word16] = ax_21 & 0x0003
	selector ds_64
	Mem72[ds_64:0x2A09:word16] = fn0800_3E5D(ds_43, SEQ(Mem54[ds_43:0x29E5:word16], Mem57[ds_43:0x29E3:word16]), out di_634, out ds_64)
	Mem73[ds_64:0x2A07:word16] = ax_21 & 0x0003
	branch Mem73[ds_64:0x2A21:word16] != 0x0000 l0800_53EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_53EF:
	selector ds_85
	Mem94[ds_85:0x2A05:word16] = fn0800_3E5D(ds_64, SEQ(Mem73[ds_64:0x29E5:word16], Mem78[ds_64:0x29E3:word16]), out di_635, out ds_85)
	Mem95[ds_85:0x2A03:word16] = ax_21 & 0x0003
	selector ds_106
	Mem115[ds_106:0x2E4B:word16] = fn0800_3E27(ds_85, SEQ(Mem95[ds_85:0x29E5:word16], Mem98[ds_85:0x29E3:word16]), out cx_636, out dx_637, out di_638, out ds_106)
	selector ds_126
	Mem135[ds_126:0x2E49:word16] = fn0800_3E27(ds_106, SEQ(Mem115[ds_106:0x29E5:word16], Mem118[ds_106:0x29E3:word16]), out cx_639, out dx_640, out di_641, out ds_126)
	fn0800_3E27(ds_126, SEQ(Mem135[ds_126:0x29E5:word16], Mem138[ds_126:0x29E3:word16]), out cx_642, out dx_643, out di_644, out ds_645)
	word16 sp_176 = <invalid>
	word16 bp_168
	word16 di_171
	selector ds_172
	word16 dx_173
	branch fn0800_2D0A(out dx_173, out bp_168, out di_171, out ds_172) == Mem166[ds_172:0x2E49:word16] l0800_5458
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5458:
	Mem187[ss:sp_176 + 0x0006:word16] = 0x0001
	Mem189[ss:sp_176 + 0x0004:word16] = 0x000F
	word16 bp_191
	selector ds_195
	word16 dx_196
	word16 ax_190 = fn0800_4311(out dx_196, out bp_191, out si_648, out di_649, out ds_195)
	Mem206[ss:bp_191 - 0x0006:word16] = dx_196
	Mem207[ss:bp_191 - 0x0008:word16] = ax_190
	Mem210[ds_195:0x2E73:word16] = dx_196 + 0x0001
	Mem211[ds_195:0x2E71:word16] = 0x0000
	word16 sp_199 = <invalid>
	Mem215[ss:sp_199 + 0x0002:word16] = 0x0001
	Mem217[ss:sp_199:word16] = 0x000F
	word16 bp_219
	selector ds_223
	word16 dx_224
	word16 ax_218 = fn0800_4311(out dx_224, out bp_219, out si_650, out di_651, out ds_223)
	Mem233[ss:bp_219 - 0x0002:word16] = dx_224
	Mem234[ss:bp_219 - 0x0004:word16] = ax_218
	Mem236[ds_223:0x2E5B:word16] = dx_224 + 0x0001
	Mem237[ds_223:0x2E59:word16] = 0x0000
	word16 dx_239 = Mem237[ds_223:0x2E71:word16]
	Mem241[ds_223:0x2E6F:word16] = Mem237[ds_223:0x2E73:word16]
	Mem242[ds_223:0x2E6D:word16] = dx_239 + 0xFFFD
	word16 dx_245 = Mem242[ds_223:0x2E59:word16] + Mem242[ds_223:0x2E31:word16]
	Mem246[ds_223:0x2E57:word16] = Mem242[ds_223:0x2E5B:word16]
	Mem247[ds_223:0x2E55:word16] = dx_245
	Mem248[ds_223:0x2E4D:word16] = 0x0000
	Mem252[ds_223:0x2E45:word16] = 0x0000
	Mem253[ds_223:0x29FD:word16] = 0x0000
	Mem254[ds_223:0x29FB:word16] = 0x0000
	Mem255[ds_223:0x2A01:word16] = 0x0000
	Mem256[ds_223:0x29FF:word16] = 0x0000
	Mem258[ss:bp_219 - 0x000E:word16] = Mem256[ds_223:0x2E4F:word16]
	word16 sp_227 = <invalid>
	Mem261[ss:sp_227 + 0x0002:word16] = 0x0001
	word16 si_269
	selector ds_266
	word16 di_265
	branch fn0800_5C1A(ds_223, Mem261[ss:sp_227 + 0x0002:word16], out si_269, out di_265, out ds_266) == 0x0000 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_54F3:
	branch Mem261[ds_266:0x2A25:word16] == 0x0002 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_54FA:
	branch Mem261[ds_266:0x2A25:word16] == 0x0007 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5501:
	si_269 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5504:
	word16 si_285 = si_269
	branch si_269 != 0x0000 l0800_555D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5508:
	Mem293[ss:sp_227 + 0x0002:word16] = 0x0001
	branch fn0800_5C1A(ds_266, Mem293[ss:sp_227 + 0x0002:word16], out si_285, out di_265, out ds_266) == 0x0000 l0800_5557
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5557:
	Mem312[ds_266:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5516:
	branch Mem293[ds_266:0x2A23:word16] == 0x0001 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_551D:
	Mem317[ss:sp_227 + 0x0002:word16] = 0x0010
	word16 ax_318 = fn0800_5C1A(ds_266, Mem317[ss:sp_227 + 0x0002:word16], out si_285, out di_265, out ds_266)
	branch Mem317[ds_266:0x2A25:word16] != 0x0002 l0800_553B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5530:
	branch Mem317[ds_266:0x2E4F:word16] != 0x0000 l0800_553B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5537:
	Mem336[ds_266:0x2E4F:word16] = ax_318
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_553B:
	branch Mem338[ds_266:0x2E4F:word16] == ax_318 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5541:
	branch Mem338[ds_266:0x2E4F:word16] == 0x0000 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5548:
	si_285 = 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_554B:
	branch Mem346[ds_266:0x2E4F:word16] != 0x0000 l0800_555D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5552:
	si_285 = 0x000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_555D:
	word16 si_353 = si_285
	branch si_285 != 0x0000 l0800_557C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5561:
	word16 ax_360 = Mem358[ds_266:0x2A21:word16]
	branch ax_360 == 0x0001 l0800_5570
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5570:
	si_353 = fn0800_55E8(ds_266, out di_265, out ds_266)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5569:
	branch ax_360 == 0x0002 l0800_5577
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5577:
	si_353 = fn0800_579B(ds_266, out di_265, out ds_266)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_556E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_557C:
	Mem403[ds_266:0x2E4F:word16] = Mem358[ss:bp_219 - 0x000E:word16]
	Mem410[ss:sp_227 + 0x0002:word16] = Mem403[ss:bp_219 - 0x0006:word16]
	Mem413[ss:sp_227:word16] = Mem410[ss:bp_219 - 0x0008:word16]
	selector ds_417
	fn0800_4346(ds_266, Mem413[ss:sp_227 + 0x0002:word16], out cx_652, out dx_653, out bx_654, out ds_417)
	Mem428[ss:sp_227 + 0x0002:word16] = Mem413[ss:bp_219 - 0x0002:word16]
	Mem431[ss:sp_227:word16] = Mem428[ss:bp_219 - 0x0004:word16]
	selector ds_435
	fn0800_4346(ds_417, Mem431[ss:sp_227 + 0x0002:word16], out cx_655, out dx_656, out bx_657, out ds_435)
	word16 v40_443 = Mem431[ds_435:0x2A03:word16] + 0x0012
	Mem444[ds_435:0x2A03:word16] = v40_443
	Mem448[ds_435:0x2A05:word16] = Mem444[ds_435:0x2A05:word16] + (v40_443 <u 0x0000)
	Mem451[ss:sp_227 + 0x0002:word16] = 0x0000
	ui32 ax_dx_553 = SEQ(Mem451[ss:bp_219 - 0x000A:word16], Mem451[ss:bp_219 - 0x000C:word16]) + SEQ(Mem451[ds_435:0x2A05:word16], Mem451[ds_435:0x2A03:word16])
	Mem460[ss:sp_227:word16] = SLICE(ax_dx_553, word16, 16)
	Mem462[ss:sp_227 - 0x0002:word16] = (word16) ax_dx_553
	Mem465[ss:sp_227 - 0x0004:word16] = Mem462[ds_435:0x29E5:word16]
	Mem468[ss:sp_227 - 0x0006:word16] = Mem465[ds_435:0x29E3:word16]
	word16 dx_472
	fn0800_ACB3(ds_435, Mem468[ss:sp_227 - 0x0006:segptr32], Mem468[ss:sp_227 - 0x0002:ui32], Mem468[ss:sp_227 + 0x0002:word16], out cx_658, out dx_472, out bx_659)
	branch si_353 == 0x0000 l0800_55D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55D0:
	branch Mem468[ds_435:0x2E4D:word16] == Mem468[ds_435:0x2E4B:word16] l0800_55E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55E1:
	word16 bp_492 = Mem468[ss:bp_219:word16]
	dxOut = dx_472
	bpOut = bp_492
	diOut = di_265
	dsOut = ds_435
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55D9:
	word16 bp_497 = Mem468[ss:bp_219:word16]
	dxOut = dx_472
	bpOut = bp_497
	diOut = di_265
	dsOut = ds_435
	return 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55C9:
	word16 bp_502 = Mem468[ss:bp_219:word16]
	dxOut = dx_472
	bpOut = bp_502
	diOut = di_265
	dsOut = ds_435
	return si_353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5450:
	word16 bp_507 = Mem166[ss:bp_168:word16]
	dxOut = dx_173
	bpOut = bp_507
	diOut = di_171
	dsOut = ds_172
	return 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_53BF:
	word16 bp_527
	word16 di_530
	selector ds_531
	fn0800_3B0A(ax_21 & 0x0003, Mem73[ds_64:0x2A09:word16], out dx_646, out bp_527, out si_647, out di_530, out ds_531)
	word16 dx_542 = Mem525[ds_531:0x2A07:word16]
	Mem543[ds_531:0x2A05:word16] = Mem525[ds_531:0x2A09:word16]
	Mem544[ds_531:0x2A03:word16] = dx_542
	word16 bp_550 = Mem544[ss:bp_527:word16]
	dxOut = dx_542
	bpOut = bp_550
	diOut = di_530
	dsOut = ds_531
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5374_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_55E8(selector ds, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax di ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_55E8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55E8:
	word16 sp_153 = fp - 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_574B:
	word16 ax_13 = Mem12[ds:0x2A01:word16]
	word16 dx_14 = Mem12[ds:0x29FF:word16]
	branch ax_13 >=u Mem12[ds:0x2A09:word16] l0800_575B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_575B:
	branch ax_13 != Mem12[ds:0x2A09:word16] l0800_5766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_575D:
	branch dx_14 >=u Mem12[ds:0x2A07:word16] l0800_5766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5766:
	word16 sp_25 = sp_153 - 2
	Mem28[ss:sp_25:word16] = Mem12[ds:0x29E1:word16]
	Mem31[ss:sp_25 - 2:word16] = Mem28[ds:0x29DF:word16]
	word16 ax_34 = Mem31[ds:0x2E55:word16] - Mem31[ds:0x2E59:word16]
	word16 ax_38 = ax_34 - Mem31[ds:0x2E31:word16]
	Mem43[ss:sp_25 - 4:word16] = 0x0000 - (ax_34 <u 0x0000) - (ax_38 <u 0x0000)
	Mem45[ss:sp_25 - 6:word16] = ax_38
	word16 ax_47 = Mem45[ds:0x2E59:word16] + Mem45[ds:0x2E31:word16]
	Mem51[ss:sp_25 - 8:word16] = Mem45[ds:0x2E5B:word16]
	Mem53[ss:sp_25 - 10:word16] = ax_47
	word16 di_57
	selector ds_58
	fn0800_4152(ds, Mem53[ss:sp_25 - 10:word32], Mem53[ss:sp_25 - 6:word16], Mem53[ss:sp_25 - 4:word16], Mem53[ss:sp_25 - 2:word32], out si_482, out di_57, out ds_58)
	diOut = di_57
	dsOut = ds_58
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_55E8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5763:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5758:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55F1:
	word16 sp_77 = sp_153 - 2
	Mem79[ss:sp_77:word16] = 0x0010
	Mem82[ss:sp_77 - 2:word16] = ds
	Mem85[ss:sp_77 - 4:word16] = 0x290F
	selector ds_88 = fn0800_5A24(ds, Mem85[ss:sp_77 - 4:word16], Mem85[ss:sp_77 - 2:word16], Mem85[ss:sp_77:word16])
	Mem100[ss:sp_77:word16] = 0x0010
	Mem102[ss:sp_77 - 2:word16] = ds_88
	Mem105[ss:sp_77 - 4:word16] = 0x284F
	selector ds_108 = fn0800_5A24(ds_88, Mem105[ss:sp_77 - 4:word16], Mem105[ss:sp_77 - 2:word16], Mem105[ss:sp_77:word16])
	Mem120[ss:sp_77:word16] = 0x0010
	Mem122[ss:sp_77 - 2:word16] = ds_108
	Mem125[ss:sp_77 - 4:word16] = 0x278F
	selector ds_128 = fn0800_5A24(ds_108, Mem125[ss:sp_77 - 4:word16], Mem125[ss:sp_77 - 2:word16], Mem125[ss:sp_77:word16])
	Mem140[ss:sp_77:word16] = 0x0010
	sp_153 = sp_77 + 0x0002
	word16 wLoc04_447 = 0x0000
	word16 wLoc06_448 = fn0800_5C39(ds_128, Mem140[ss:sp_77:word16], out si_480, out di_481, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5736:
	word16 v11_163 = wLoc06_448 - 0x0001
	word16 v12_167 = wLoc04_447 - (v11_163 <u 0x0000)
	wLoc06_448 = v11_163
	wLoc04_447 = v12_167
	branch (wLoc06_448 | wLoc04_447) == 0x0000 l0800_574B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5748:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5633:
	word16 sp_174 = sp_153 - 2
	Mem176[ss:sp_174:word16] = ds
	Mem179[ss:sp_174 - 2:word16] = 0x290F
	word16 ax_180 = fn0800_5A8D(ds, Mem179[ss:sp_174 - 2:word16], Mem179[ss:sp_174:selector], out ds)
	Mem191[ds:0x2E47:word16] = ax_180
	word16 v17_192 = Mem191[ds:0x29FF:word16] + ax_180
	Mem193[ds:0x29FF:word16] = v17_192
	Mem197[ds:0x2A01:word16] = Mem193[ds:0x2A01:word16] + (v17_192 <u 0x0000)
	sp_153 = sp_174 + 0x0002
	branch Mem197[ds:0x2E47:word16] != 0x0000 l0800_5654
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5654:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5664:
	word16 dx_184
	word16 ax_202 = Mem201[ds:0x2E47:word16]
	Mem204[ds:0x2E47:word16] = Mem201[ds:0x2E47:word16] - 0x0001
	word16 ax_205 = ax_202
	branch ax_202 != 0x0000 l0800_5656
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5656:
	selector ds_214
	word16 ax_210 = fn0800_5B15(ds, out si_483, out di_484, out ds_214)
	word16 sp_227 = sp_153 - 2
	Mem229[ss:sp_227:word16] = DPB(ax_210, (byte) ax_210 ^ Mem204[ds_214:0x2E4F:byte], 0)
	ds = fn0800_5D2F(ds_214, Mem229[ss:sp_227:byte])
	dx_184 = dx_233
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_566F:
	branch (Mem204[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_5684
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5684:
	Mem248[ds:0x2E4F:word16] = Mem204[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5677:
	ax_205 = Mem204[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem255[ds:0x2E4F:word16] = ax_205
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5688:
	ptr32 es_bx_258 = Mem257[ds:0x2E6D:segptr32]
	word16 sp_264 = sp_153 - 2
	Mem269[ss:sp_264:word16] = DPB(DPB(ax_205, Mem257[es_bx_258 + 0x0002:byte], 0), 0x00, 8)
	word16 dx_277 = DPB(DPB(dx_184, Mem269[es_bx_258 + 0x0001:byte], 0), 0x00, 8)
	word16 dx_284 = Mem269[ss:sp_264:word16] + (dx_277 << 0x08 <u 0x0000)
	word16 bx_291 = DPB(DPB((word16) es_bx_258, Mem269[es_bx_258:byte], 0), 0x00, 8)
	Mem288[ss:sp_264:word16] = dx_277 << 0x08
	Mem294[ss:sp_264 - 2:word16] = dx_284
	int32 dx_ax_440 = SEQ(Mem294[ss:sp_264 - 2:word16], Mem294[ss:sp_264:word16]) + (int32) bx_291
	word16 sp_314 = <invalid>
	word16 dx_313
	Mem320[ss:sp_314 - 2:word16] = fn0800_8C69((word16) dx_ax_440, Mem294[ds:0x2E45:byte], SLICE(dx_ax_440, word16, 16), out cl_485, out dx_313)
	word16 ax_323 = 0x0001 << Mem320[ds:0x2E45:byte]
	Mem326[ss:sp_314 - 4:word16] = dx_313
	int32 dx_ax_327 = (int32) (ax_323 - 0x0001)
	ui32 ax_dx_443 = SEQ(Mem326[ss:sp_314 - 4:word16], Mem326[ss:sp_314 - 2:word16]) + SEQ(Mem326[ds:0x29FD:word16] & SLICE(dx_ax_327, word16, 16), Mem326[ds:0x29FB:word16] & (word16) dx_ax_327)
	Mem343[ds:0x29FD:word16] = SLICE(ax_dx_443, word16, 16)
	Mem344[ds:0x29FB:word16] = (word16) ax_dx_443
	sp_153 = sp_314
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5651:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_56E6:
	branch (v11_163 | v12_167) == 0x0000 l0800_574B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_56EE:
	word16 sp_356 = sp_153 - 2
	Mem358[ss:sp_356:word16] = ds
	Mem361[ss:sp_356 - 2:word16] = 0x284F
	selector ds_365
	Mem376[ds_365:0x2E2B:word16] = fn0800_5A8D(ds, Mem361[ss:sp_356 - 2:word16], Mem361[ss:sp_356:selector], out ds_365) + 0x0001
	Mem378[ss:sp_356:word16] = ds_365
	Mem381[ss:sp_356 - 2:word16] = 0x278F
	word16 ax_382 = fn0800_5A8D(ds_365, Mem381[ss:sp_356 - 2:word16], Mem381[ss:sp_356:selector], out ds)
	Mem394[ds:0x2E29:word16] = ax_382 + 0x0002
	word16 v19_395 = Mem394[ds:0x29FF:word16] + (ax_382 + 0x0002)
	Mem396[ds:0x29FF:word16] = v19_395
	Mem400[ds:0x2A01:word16] = Mem396[ds:0x2A01:word16] + (v19_395 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_572B:
	word16 ax_404 = Mem403[ds:0x2E29:word16]
	Mem406[ds:0x2E29:word16] = Mem403[ds:0x2E29:word16] - 0x0001
	branch ax_404 != 0x0000 l0800_5719
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5719:
	ptr32 es_bx_411 = Mem406[ds:0x2E55:segptr32]
	word16 sp_418 = sp_153 - 2
	Mem421[ss:sp_418:word16] = DPB(ax_404, Mem406[SLICE(es_bx_411, selector, 16):(word16) es_bx_411 - Mem406[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(ds, Mem421[ss:sp_418:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_579B(selector ds, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax di ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_579B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_579B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58F2:
	word16 ax_6 = Mem5[ds:0x2A01:word16]
	word16 dx_7 = Mem5[ds:0x29FF:word16]
	branch ax_6 >=u Mem5[ds:0x2A09:word16] l0800_5902
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5902:
	branch ax_6 != Mem5[ds:0x2A09:word16] l0800_590D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5904:
	branch dx_7 >=u Mem5[ds:0x2A07:word16] l0800_590D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_590D:
	word16 ax_27 = Mem24[ds:0x2E55:word16] - Mem24[ds:0x2E59:word16]
	word16 ax_31 = ax_27 - Mem24[ds:0x2E31:word16]
	word16 di_50
	selector ds_51
	fn0800_4152(ds, SEQ(Mem38[ds:0x2E5B:word16], Mem38[ds:0x2E59:word16] + Mem38[ds:0x2E31:word16]), ax_31, 0x0000 - (ax_27 <u 0x0000) - (ax_31 <u 0x0000), SEQ(Mem5[ds:0x29E1:word16], Mem21[ds:0x29DF:word16]), out si_485, out di_50, out ds_51)
	diOut = di_50
	dsOut = ds_51
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_579B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_590A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57CF:
	selector ds_72
	branch fn0800_5CD9(ds, 0x0001, out ds_72) == 0x0000 l0800_579E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_579E:
	selector ds_88
	word16 ax_84 = fn0800_5B15(ds_72, out si_486, out di_487, out ds_88)
	ds = fn0800_5D2F(ds_88, SLICE(DPB(ax_84, (byte) ax_84 ^ Mem67[ds_88:0x2E4F:byte], 0), byte, 0))
	branch (Mem102[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_57C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57C1:
	Mem120[ds:0x2E4F:word16] = Mem102[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57B4:
	Mem127[ds:0x2E4F:word16] = Mem102[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57C5:
	word16 v16_130 = Mem129[ds:0x29FF:word16] + 0x0001
	Mem131[ds:0x29FF:word16] = v16_130
	Mem135[ds:0x2A01:word16] = Mem131[ds:0x2A01:word16] + (v16_130 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57DD:
	selector ds_143
	branch fn0800_5CD9(ds_72, 0x0001, out ds_143) == 0x0000 l0800_5866
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5866:
	selector ds_157 = fn0800_593F(ds_143)
	branch Mem139[ds_157:0x2E29:word16] != 0x0009 l0800_58B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58B7:
	ds = fn0800_5975(ds_157)
	word16 v28_180 = Mem139[ds:0x29FF:word16] + Mem139[ds:0x2E29:word16]
	Mem181[ds:0x29FF:word16] = v28_180
	Mem185[ds:0x2A01:word16] = Mem181[ds:0x2A01:word16] + (v28_180 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58DA:
	word16 ax_189 = Mem188[ds:0x2E29:word16]
	Mem191[ds:0x2E29:word16] = Mem188[ds:0x2E29:word16] - 0x0001
	branch ax_189 != 0x0000 l0800_58C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58C8:
	ptr32 es_bx_196 = Mem191[ds:0x2E55:segptr32]
	ds = fn0800_5D2F(ds, SLICE(DPB(ax_189, Mem191[SLICE(es_bx_196, selector, 16):(word16) es_bx_196 - Mem191[ds:0x2E2B:word16]:byte], 0), byte, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5870:
	ds = fn0800_5A0F(ds_157)
	word16 v22_232 = Mem139[ds:0x29FF:word16] + Mem139[ds:0x2E47:word16]
	Mem233[ds:0x29FF:word16] = v22_232
	Mem237[ds:0x2A01:word16] = Mem233[ds:0x2A01:word16] + (v22_232 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_588F:
	word16 ax_241 = Mem240[ds:0x2E47:word16]
	Mem243[ds:0x2E47:word16] = Mem240[ds:0x2E47:word16] - 0x0001
	branch ax_241 != 0x0000 l0800_5881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5881:
	selector ds_253
	word16 ax_249 = fn0800_5B15(ds, out si_492, out di_493, out ds_253)
	ds = fn0800_5D2F(ds_253, SLICE(DPB(ax_249, (byte) ax_249 ^ Mem243[ds_253:0x2E4F:byte], 0), byte, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_589A:
	branch (Mem243[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_58B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58B0:
	Mem287[ds:0x2E4F:word16] = Mem243[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58A2:
	Mem294[ds:0x2E4F:word16] = Mem243[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57EB:
	selector ds_384
	selector ds_301
	branch fn0800_5CD9(ds_143, 0x0001, out ds_301) != 0x0000 l0800_580A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_580A:
	selector ds_335
	selector ds_319
	branch fn0800_5CD9(ds_301, 0x0001, out ds_319) != 0x0000 l0800_5820
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5820:
	Mem346[ds_335:0x2E29:word16] = DPB(fn0800_5B15(ds_319, out si_490, out di_491, out ds_335), 0x00, 8) + 0x0008
	ds_319 = ds_335
	branch Mem346[ds_335:0x2E29:word16] != 0x0008 l0800_5835
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5832:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58E8:
	fn0800_5CD9(ds_335, 0x0001, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5818:
	Mem364[ds_319:0x2E29:word16] = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5835:
	ds = fn0800_5975(ds_319)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57F9:
	Mem379[ds_301:0x2E29:word16] = 0x0002
	Mem396[ds_384:0x2E2B:word16] = DPB(fn0800_5B15(ds_301, out si_488, out di_489, out ds_384), 0x00, 8) + 0x0001
	ds = ds_384
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5838:
	word16 v13_401 = Mem398[ds:0x29FF:word16] + Mem398[ds:0x2E29:word16]
	Mem402[ds:0x29FF:word16] = v13_401
	Mem406[ds:0x2A01:word16] = Mem402[ds:0x2A01:word16] + (v13_401 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5858:
	word16 ax_410 = Mem409[ds:0x2E29:word16]
	Mem412[ds:0x2E29:word16] = Mem409[ds:0x2E29:word16] - 0x0001
	branch ax_410 != 0x0000 l0800_5846
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5846:
	ptr32 es_bx_417 = Mem412[ds:0x2E55:segptr32]
	ds = fn0800_5D2F(ds, SLICE(DPB(ax_410, Mem412[SLICE(es_bx_417, selector, 16):(word16) es_bx_417 - Mem412[ds:0x2E2B:word16]:byte], 0), byte, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5863:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_593F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_593F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_593F:
	selector ds_12
	Mem22[ds_12:0x2E29:word16] = fn0800_5CD9(ds, 0x0001, out ds_12) + 0x0004
	selector ds_29
	branch fn0800_5CD9(ds_12, 0x0001, out ds_29) == 0x0000 l0800_5974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_595D:
	Mem60[ds_29:0x2E29:word16] = (Mem43[ds_29:0x2E29:word16] - 0x0001 << 0x0001) + fn0800_5CD9(ds_29, 0x0001, out ds_29)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5974:
	return ds_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_593F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5975(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_5975_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5975:
	Mem5[ds:0x2E2B:word16] = 0x0000
	selector ds_105
	branch fn0800_5CD9(ds, 0x0001, out ds_105) == 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5989:
	selector ds_31
	Mem40[ds_31:0x2E2B:word16] = fn0800_5CD9(ds_105, 0x0001, out ds_31)
	branch fn0800_5CD9(ds_31, 0x0001, out ds_105) == 0x0000 l0800_59E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59E3:
	branch Mem43[ds_105:0x2E2B:word16] != 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59EA:
	Mem77[ds_105:0x2E2B:word16] = fn0800_5CD9(ds_105, 0x0001, out ds_105) + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59A4:
	selector ds_84
	Mem98[ds_84:0x2E2B:word16] = (Mem80[ds_84:0x2E2B:word16] << 0x0001) + fn0800_5CD9(ds_105, 0x0001, out ds_84) | 0x0004
	branch fn0800_5CD9(ds_84, 0x0001, out ds_105) != 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59CB:
	Mem135[ds_105:0x2E2B:word16] = (Mem119[ds_105:0x2E2B:word16] << 0x0001) + fn0800_5CD9(ds_105, 0x0001, out ds_105)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59FA:
	selector ds_142
	Mem160[ds_142:0x2E2B:word16] = (Mem151[ds_142:0x2E2B:word16] << 0x08) + DPB(fn0800_5B15(ds_105, out si_175, out di_176, out ds_142), 0x00, 8) + 0x0001
	return ds_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5975_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5A0F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_5A0F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A0F:
	selector ds_12
	Mem24[ds_12:0x2E47:word16] = (fn0800_5CD9(ds, 0x0004, out ds_12) << 0x0002) + 0x000C
	return ds_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A0F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5A24(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5A24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	selector ds_172
	word16 ax_38 = fn0800_5C39(ds, 0x0005, out si_188, out di_189, out ds_172)
	word16 wArg06_140 = ax_38
	branch ax_38 == 0x0000 l0800_5A89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A49:
	branch ax_38 <=u 0x0010 l0800_5A54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A4F:
	wArg06_140 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A54:
	branch wArg06_140 <=u 0x0000 l0800_5A7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A61:
	word16 si_74
	word16 di_78
	Mem88[wArg04:si_74:word16] = fn0800_5C39(ds_172, 0x0004, out si_74, out di_78, out ds_172)
	branch di_78 + 0x0001 <u wArg06_140 l0800_5A61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A7A:
	fn0800_4550(wArg02, wArg04, wArg06_140)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A89:
	return ds_172
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5A8D(selector ds, word16 wArg02, selector psegArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5A8D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A8D:
	word16 wLoc04_121 = 0x0000
	word16 di_18 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AA5:
	byte bLoc04_131 = SLICE(wLoc04_121, byte, 0)
	branch Mem21[psegArg04:di_18 + 0x000A:word16] == 0x0000 l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AAF:
	int32 dx_ax_30 = (int32) ((0x0001 << Mem21[psegArg04:di_18 + 0x000A:byte]) - 0x0001)
	word16 cx_35 = Mem21[ds:0x29FB:word16] & (word16) dx_ax_30
	branch (Mem21[ds:0x29FD:word16] & SLICE(dx_ax_30, word16, 16)) != Mem21[psegArg04:di_18 + 0x0008:word16] l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5ACC:
	branch cx_35 != Mem21[psegArg04:di_18 + 0x0006:word16] l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A9F:
	di_18 = di_18 + 0x000C
	wLoc04_121 = wLoc04_121 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AD2:
	selector ds_69
	fn0800_5C39(ds, Mem21[psegArg04:wArg02 + (word16) (wLoc04_121 *s 0x000C) + 0x000A:word16], out si_165, out di_166, out ds_69)
	branch wLoc04_121 >=u 0x0002 l0800_5AF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AF8:
	selector ds_89
	word16 ax_100 = fn0800_5C39(ds_69, wLoc04_121 - 0x0001, out si_167, out di_168, out ds_89) | 0x0001 << bLoc04_131 - 0x01
	dsOut = ds_89
	return ax_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AEF:
	dsOut = ds_69
	return wLoc04_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A8D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5B15(selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5B15_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B15:
	word16 ax_11 = Mem7[ds:0x2E73:word16]
	word16 dx_12 = Mem7[ds:0x2E71:word16]
	branch ax_11 == Mem7[ds:0x2E6F:word16] l0800_5B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B2E:
	branch dx_12 + 0xFFFD == Mem7[ds:0x2E6D:word16] l0800_5B37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B37:
	ui32 dx_ax_325
	fn0800_4194(ds, SEQ(Mem7[ds:0x29E5:word16], Mem20[ds:0x29E3:word16]))
	fn0800_AD2F(ds, SEQ(Mem36[ds:0x29E5:word16], Mem39[ds:0x29E3:word16]), out dx_331)
	ui32 dx_ax_324 = <invalid>
	ui32 bx_cx_231 = SEQ(dx_12 + 0xFFFD, ax_11) - dx_ax_324
	word16 cx_57 = (word16) bx_cx_231
	word16 bx_60 = SLICE(bx_cx_231, word16, 16)
	branch bx_60 <u 0x0000 l0800_5B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B67:
	branch bx_60 >u 0x0000 l0800_5B6F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B69:
	branch cx_57 <=u 0xFFFD l0800_5B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B76:
	dx_ax_325 = bx_cx_231 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B6F:
	dx_ax_325 = 0x0000FFFD (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B7C:
	word16 v23_88 = Mem84[ds:0x29E5:word16]
	word16 v24_94 = Mem93[ds:0x29E3:word16]
	word16 ax_102 = Mem101[ds:0x2E73:word16]
	word16 dx_103 = Mem101[ds:0x2E71:word16]
	Mem104[ds:0x2E6F:word16] = ax_102
	Mem105[ds:0x2E6D:word16] = dx_103
	word16 ax_83 = SLICE(dx_ax_325, word16, 0)
	selector ds_114
	fn0800_4110(ds, SEQ(ax_102, dx_103), ax_83, SLICE(dx_ax_325, word16, 16), SEQ(v23_88, v24_94), out si_332, out di_333, out ds_114)
	ui32 v27_v26_233 = SEQ(bx_60, v26_125) - dx_ax_325
	word16 v26_125 = (word16) v27_v26_233
	word16 v27_130 = SLICE(v27_v26_233, word16, 16)
	word16 wLoc06_257 = v26_125
	word16 wLoc04_260 = v27_130
	branch Test(ULT,false) l0800_5BCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BBA:
	branch v27_130 >u 0x0000 l0800_5BC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BBC:
	branch v26_125 <=u 0x0002 l0800_5BCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BC1:
	wLoc04_260 = 0x0000
	wLoc06_257 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BCB:
	fn0800_4110(ds_114, SEQ(Mem162[ds_114:0x2E73:word16], Mem162[ds_114:0x2E71:word16] + ax_83), wLoc06_257, wLoc04_260, SEQ(Mem146[ds_114:0x29E5:word16], Mem152[ds_114:0x29E3:word16]), out si, out di, out ds)
	word16 dx_190 = -wLoc06_257
	ax_11 = fn0800_ACB3(ds, SEQ(Mem197[ds:0x29E5:word16], Mem200[ds:0x29E3:word16]), SEQ(-wLoc04_260 - (dx_190 == 0x0000), dx_190), 0x0001, out cx_334, out dx_335, out bx_336)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B34:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B2B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C0B:
	ptr32 es_bx_217 = Mem216[ds:0x2E6D:segptr32]
	Mem219[ds:0x2E6D:word16] = Mem216[ds:0x2E6D:word16] + 0x0001
	word16 ax_289 = DPB(ax_11, Mem219[es_bx_217:byte], 0)
	siOut = si
	diOut = di
	dsOut = ds
	return ax_289
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5B15_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5C1A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5C1A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C1A:
	branch Mem7[ds:0x2A21:word16] != 0x0002 l0800_5C30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C30:
	word16 si_16
	word16 di_20
	selector ds_21
	word16 ax_15 = fn0800_5C39(ds, wArg02, out si_16, out di_20, out ds_21)
	siOut = si_16
	diOut = di_20
	dsOut = ds_21
	return ax_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C27:
	selector ds_36
	word16 ax_33 = fn0800_5CD9(ds, wArg02, out ds_36)
	siOut = si
	diOut = di
	dsOut = ds_36
	return ax_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5C1A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5C39(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5C39_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C39:
	word16 sp_13 = fp - 0x000C
	word16 si_153 = wArg02
	word16 di_127 = 0x0000
	word16 wLoc08_163 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CCA:
	word16 si_152 = si_153
	branch si_153 == 0x0000 l0800_5CD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CD1:
	word16 di_31 = Mem30[ss:sp_13:word16]
	siOut = Mem30[ss:sp_13 + 2:word16]
	diOut = di_31
	dsOut = ds
	return di_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5C39_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CCE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C4D:
	branch Mem30[ds:0x2E45:word16] != 0x0000 l0800_5CA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C54:
	selector ds_45
	word16 ax_54 = DPB(fn0800_5B15(ds, out si_196, out di_197, out ds_45), 0x00, 8)
	word16 ax_56 = fn0800_5B15(ds_45, out si_152, out di_127, out ds)
	word16 dx_86
	word16 ax_83 = fn0800_8C69(DPB(DPB(DPB(ax_56, 0x00, 8), Mem70[Mem70[ds:0x2E6D:segptr32] + 0x0001:byte], 0), 0x00, 8), 0x18, 0x0000, out cl_198, out dx_86)
	word16 ax_107 = ax_83 + (DPB(ax_56, 0x00, 8) << 0x08)
	ptr32 es_bx_92 = Mem70[ds:0x2E6D:segptr32]
	word16 ax_111 = ax_107 + ax_54
	Mem116[ds:0x29FD:word16] = dx_86 + DPB(DPB((word16) es_bx_92, Mem70[es_bx_92:byte], 0), 0x00, 8) + (ax_83 <u 0x0000) + (ax_107 <u 0x0000) + (ax_111 <u 0x0000)
	Mem117[ds:0x29FB:word16] = ax_111
	Mem118[ds:0x2E45:word16] = 0x0010
	sp_13 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CA2:
	branch (Mem120[ds:0x29FB:word16] & 0x0001) == 0x0000 l0800_5CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CAD:
	di_127 = di_127 | wLoc08_163
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CB0:
	word16 ax_135 = Mem120[ds:0x29FD:word16]
	word16 dx_141 = __rcr(Mem120[ds:0x29FB:word16], 0x01, SLICE(cond(ax_135 >>u 0x0001), bool, 1))
	Mem142[ds:0x29FD:word16] = ax_135 >>u 0x0001
	Mem143[ds:0x29FB:word16] = dx_141
	Mem150[ds:0x2E45:word16] = Mem147[ds:0x2E45:word16] - 0x0001
	wLoc08_163 = wLoc08_163 << 0x0001
	si_153 = si_152 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5CD9(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5CD9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CD9:
	word16 di_15 = wArg02
	word16 si_16 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D25:
	word16 di_20 = di_15
	branch di_15 != 0x0000 l0800_5CE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CE5:
	branch Mem25[ds:0x2E45:word16] != 0x0000 l0800_5D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CEC:
	word16 ax_43 = DPB(fn0800_5B15(ds, out si_16, out di_20, out ds), 0x00, 8)
	Mem42[ds:0x29FD:word16] = 0x0000
	Mem44[ds:0x29FB:word16] = ax_43
	Mem45[ds:0x2E45:word16] = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D00:
	si_16 = si_16 << 0x0001
	branch (Mem50[ds:0x29FB:word16] & 0x0080) == 0x0000 l0800_5D0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D0D:
	si_16 = si_16 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D0E:
	word16 dx_62 = Mem50[ds:0x29FB:word16]
	Mem69[ds:0x29FD:word16] = __rcl(Mem50[ds:0x29FD:word16], 0x01, SLICE(cond(dx_62 << 0x0001), bool, 1))
	Mem70[ds:0x29FB:word16] = dx_62 << 0x0001
	Mem72[ds:0x2E45:word16] = Mem70[ds:0x2E45:word16] - 0x0001
	di_15 = di_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D29:
	dsOut = ds
	return si_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5CD9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5D2F(selector ds, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_5D2F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D2F:
	word16 ax_10 = Mem7[ds:0x2E5B:word16]
	word16 dx_11 = Mem7[ds:0x2E59:word16]
	branch ax_10 != Mem7[ds:0x2E57:word16] l0800_5D9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D40:
	branch dx_11 - 0x0001 != Mem7[ds:0x2E55:word16] l0800_5D9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D46:
	word16 dx_25 = 0xFFFF - Mem22[ds:0x2E31:word16]
	fn0800_4152(ds, SEQ(Mem32[ds:0x2E5B:word16], Mem32[ds:0x2E59:word16] + Mem32[ds:0x2E31:word16]), dx_25, 0x0000 - (dx_25 <u 0x0000), SEQ(Mem7[ds:0x29E1:word16], Mem19[ds:0x29DF:word16]), out si_151, out di_152, out ds)
	fn0800_B0F3(SEQ(Mem64[ds:0x2E5B:word16], Mem67[ds:0x2E59:word16]), SEQ(Mem56[ds:0x2E57:word16], Mem56[ds:0x2E55:word16] - Mem56[ds:0x2E31:word16]), Mem40[ds:0x2E31:word16])
	ax_10 = Mem70[ds:0x2E5B:word16]
	word16 dx_84 = Mem70[ds:0x2E59:word16] + Mem70[ds:0x2E31:word16]
	Mem86[ds:0x2E57:word16] = ax_10
	Mem87[ds:0x2E55:word16] = dx_84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D9E:
	Mem96[Mem89[ds:0x2E55:segptr32]:byte] = bArg02
	Mem98[ds:0x2E55:word16] = Mem96[ds:0x2E55:word16] + 0x0001
	Mem115[ds:0x2E4D:word16] = Mem98[ds:((DPB(DPB(ax_10, Mem98[ds:0x2E4D:byte] ^ bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem98[ds:0x2E4D:word16] >>u 0x08
	return ds
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5D2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5DCE(word16 ax, word16 dx, selector ds, word32 dwArg02, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_5DCE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DCE:
	word16 ax_55
	fn0800_4194(ds, dwArg02)
	word16 dx_130 = dx
	branch Test(ULT,false) l0800_5DEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE2:
	branch dx != 0x0000 l0800_5DE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE4:
	branch ax <u 0x0400 l0800_5DEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DEE:
	fn0800_4194(ds, dwArg02)
	ax_55 = ax & 0xFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE9:
	ax_55 = 0x0400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DFD:
	word16 si_139 = ax_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E5B:
	branch si_139 != 0x0000 l0800_5E01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E01:
	branch fn0800_3E27(ds, dwArg02, out cx_79, out dx_130, out di, out ds) != 0x524E l0800_5E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E12:
	branch (fn0800_3E27(ds, dwArg02, out cx_292, out dx_293, out di, out ds) & 0xFF00) != 0x4300 l0800_5E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E40:
	fn0800_ACB3(ds, dwArg02, 0xFFFFFFFE, 0x0001, out cx_294, out dx_130, out bx_295)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E58:
	si_139 = si_139 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E26:
	fn0800_ACB3(ds, dwArg02, 0xFFFFFFFC, 0x0001, out cx_296, out dx_130, out bx_297)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E5F:
	dxOut = dx_130
	diOut = di
	dsOut = ds
	return si_139
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5DCE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5E64(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_5E64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E64:
	word16 bp_1046 = fp - 2
	word16 sp_127 = fp - 0x003E
	word16 di_21 = 0x2202
	word16 si_22 = 0x4271
	word16 cx_2153 = 0x0004
	word16 dx_118 = 0x0003
	branch true l0800_5E80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E7E:
	cx_2153 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E80:
	word16 ax_28 = 0x0000
	bool Z_41 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E82:
	branch cx_2153 == 0x0000 l0800_5E84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E82_1:
	Z_41 = SLICE(cond(Mem18[ds:si_2592:byte] - Mem18[ds:di_2593:byte]), bool, 2) (alias)
	si_22 = si_2592 + 0x0001
	di_21 = di_2593 + 0x0001
	cx_2153 = cx_2153 - 0x0001
	si_2592 = si_22
	di_2593 = di_21
	branch Mem18[ds:si_2592:byte] != Mem18[ds:di_2593:byte] l0800_5E82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E84:
	branch Z_41 l0800_5E8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E86:
	ax_28 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E8B:
	word16 ax_112 = ax_28
	branch ax_28 == 0x0000 l0800_5EC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E8F:
	word16 di_2129 = 0x4271
	word16 si_2134 = 0x2202
	word16 cx_77 = 0x0004
	word16 dx_2161 = 0xFFFF
	branch true l0800_5EA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA1:
	cx_77 = 0x0003
	dx_2161 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA5:
	word16 cx_86 = cx_77 >>u 0x0001
	cx_2152 = cx_86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA7:
	word16 cx_2152
	branch cx_2152 == 0x0000 l0800_5EA9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA9:
	word16 cx_2142 = cx_2152 * 0x0002 + (cx_86 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAB:
	branch cx_2142 == 0x0000 l0800_5EAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAD:
	word16 cx_2132 = dx_2161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB1:
	branch cx_2132 == 0x0000 l0800_5EB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB3:
	word16 sp_121 = <invalid>
	dx_118 = fn0800_09A3(out bp_1046, out ds)
	sp_127 = sp_121 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EC3:
	word16 ax_149 = (DPB(DPB(ax_112, Mem130[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_118, Mem130[ds:0x2E76:byte], 0), 0x00, 8)
	branch Mem130[ds:0x2A09:word16] >u 0x0000 l0800_5EED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EDC:
	branch Mem130[ds:0x2A09:word16] != 0x0000 l0800_5EE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EDE:
	branch ax_149 <u Mem130[ds:0x2A07:word16] l0800_5EED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EED:
	branch Mem130[ds:0x2A0D:word16] <u 0x0000 l0800_5F0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EF4:
	branch Mem130[ds:0x2A0D:word16] >u 0x0000 l0800_5EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EF6:
	branch Mem130[ds:0x2A0B:word16] <=u 0x7FF0 l0800_5F0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EFE:
	Mem164[ds:0x2A0D:word16] = 0x0000
	Mem165[ds:0x2A0B:word16] = 0x7FF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F0A:
	word16 sp_173 = sp_127 - 2
	Mem178[ss:sp_173:word16] = 0x0000
	Mem181[ss:sp_173 - 2:word16] = 0x0000
	Mem183[ss:sp_173 - 4:word16] = 0x0002
	Mem187[ss:sp_173 - 6:word16] = Mem183[ds:0x29E5:word16]
	Mem190[ss:sp_173 - 8:word16] = Mem187[ds:0x29E3:word16]
	fn0800_ACB3(ds, Mem190[ss:sp_173 - 8:segptr32], Mem190[ss:sp_173 - 4:ui32], Mem190[ss:sp_173:word16], out cx_2455, out dx_2456, out bx_2457)
	Mem204[ss:sp_173:word16] = Mem190[ds:0x29E5:word16]
	Mem207[ss:sp_173 - 2:word16] = Mem204[ds:0x29E3:word16]
	selector ds_212
	Mem229[ss:bp_1046 - 0x0022:word16] = fn0800_3FAD(ds, Mem207[ss:sp_173 - 2:word32], out ch_2458, out di_2459, out ds_212)
	Mem232[ss:sp_173:word16] = Mem229[ds_212:0x29E5:word16]
	Mem235[ss:sp_173 - 2:word16] = Mem232[ds_212:0x29E3:word16]
	selector ds_240
	word16 ax_236 = fn0800_3FAD(ds_212, Mem235[ss:sp_173 - 2:word32], out ch_2460, out di_2461, out ds_240)
	word16 di_248 = ax_236
	branch Mem235[ss:bp_1046 - 0x0022:word16] == 0x0000 l0800_5F48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F47:
	di_248 = ax_236 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F48:
	word16 dx_262
	word16 ax_271 = fn0800_8C69(di_248, 0x09, 0x0000, out cl_2462, out dx_262) + Mem235[ss:bp_1046 - 0x0022:word16]
	Mem275[ss:bp_1046 - 0x0002:word16] = dx_262 + (ax_271 <u 0x0000)
	Mem276[ss:bp_1046 - 0x0004:word16] = ax_271
	word16 sp_263 = <invalid>
	word16 ax_277 = Mem276[ss:bp_1046 - 0x0002:word16]
	word16 dx_278 = Mem276[ss:bp_1046 - 0x0004:word16]
	branch ax_277 <u Mem276[ds_240:0x2A09:word16] l0800_5F7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F69:
	branch ax_277 >u Mem276[ds_240:0x2A09:word16] l0800_5F71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F6B:
	branch dx_278 <=u Mem276[ds_240:0x2A07:word16] l0800_5F7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F71:
	word16 dx_288 = Mem276[ds_240:0x2A07:word16]
	Mem291[ss:bp_1046 - 0x0002:word16] = Mem276[ds_240:0x2A09:word16]
	Mem292[ss:bp_1046 - 0x0004:word16] = dx_288
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F7E:
	Mem300[ss:sp_263 - 2:word16] = Mem294[ds_240:0x29E5:word16]
	Mem303[ss:sp_263 - 4:word16] = Mem300[ds_240:0x29E3:word16]
	selector ds_308
	Mem318[ss:bp_1046 - 0x0024:word16] = fn0800_3FAD(ds_240, Mem303[ss:sp_263 - 4:word32], out ch_2463, out di_2464, out ds_308)
	Mem321[ss:sp_263 - 2:word16] = Mem318[ds_308:0x29E5:word16]
	Mem324[ss:sp_263 - 4:word16] = Mem321[ds_308:0x29E3:word16]
	selector ds_329
	Mem338[ss:bp_1046 - 0x0026:word16] = fn0800_3FAD(ds_308, Mem324[ss:sp_263 - 4:word32], out ch_2465, out di_2466, out ds_329)
	Mem341[ss:sp_263 - 2:word16] = Mem338[ds_329:0x29E5:word16]
	Mem344[ss:sp_263 - 4:word16] = Mem341[ds_329:0x29E3:word16]
	selector ds_349
	Mem358[ss:bp_1046 - 0x0028:word16] = fn0800_3FAD(ds_329, Mem344[ss:sp_263 - 4:word32], out ch_2467, out di_2468, out ds_349)
	Mem361[ss:sp_263 - 2:word16] = Mem358[ds_349:0x29E5:word16]
	Mem364[ss:sp_263 - 4:word16] = Mem361[ds_349:0x29E3:word16]
	selector ds_369
	Mem378[ss:bp_1046 - 0x002A:word16] = fn0800_3FAD(ds_349, Mem364[ss:sp_263 - 4:word32], out ch_2469, out di_2470, out ds_369)
	Mem381[ss:sp_263 - 2:word16] = Mem378[ds_369:0x29E5:word16]
	Mem384[ss:sp_263 - 4:word16] = Mem381[ds_369:0x29E3:word16]
	selector ds_389
	Mem398[ss:bp_1046 - 0x002C:word16] = fn0800_3FAD(ds_369, Mem384[ss:sp_263 - 4:word32], out ch_2471, out di_2472, out ds_389)
	Mem401[ss:sp_263 - 2:word16] = Mem398[ds_389:0x29E5:word16]
	Mem404[ss:sp_263 - 4:word16] = Mem401[ds_389:0x29E3:word16]
	selector ds_409
	Mem418[ss:bp_1046 - 0x002E:word16] = fn0800_3FAD(ds_389, Mem404[ss:sp_263 - 4:word32], out ch_2473, out di_2474, out ds_409)
	Mem421[ss:sp_263 - 2:word16] = Mem418[ds_409:0x29E5:word16]
	Mem424[ss:sp_263 - 4:word16] = Mem421[ds_409:0x29E3:word16]
	selector ds_429
	fn0800_3FAD(ds_409, Mem424[ss:sp_263 - 4:word32], out ch_2475, out di_2476, out ds_429)
	Mem440[ss:sp_263 - 2:word16] = Mem424[ds_429:0x29E5:word16]
	Mem443[ss:sp_263 - 4:word16] = Mem440[ds_429:0x29E3:word16]
	selector ds_448
	Mem457[ss:bp_1046 - 0x0030:word16] = fn0800_3FAD(ds_429, Mem443[ss:sp_263 - 4:word32], out ch_2477, out di_2478, out ds_448)
	Mem460[ss:sp_263 - 2:word16] = Mem457[ds_448:0x29E5:word16]
	Mem463[ss:sp_263 - 4:word16] = Mem460[ds_448:0x29E3:word16]
	selector ds_468
	Mem477[ss:bp_1046 - 0x0032:word16] = fn0800_3FAD(ds_448, Mem463[ss:sp_263 - 4:word32], out ch_2479, out di_2480, out ds_468)
	Mem480[ss:sp_263 - 2:word16] = Mem477[ds_468:0x29E5:word16]
	Mem483[ss:sp_263 - 4:word16] = Mem480[ds_468:0x29E3:word16]
	selector ds_488
	Mem497[ss:bp_1046 - 0x0034:word16] = fn0800_3FAD(ds_468, Mem483[ss:sp_263 - 4:word32], out ch_2481, out di_2482, out ds_488)
	Mem500[ss:sp_263 - 2:word16] = Mem497[ds_488:0x29E5:word16]
	Mem503[ss:sp_263 - 4:word16] = Mem500[ds_488:0x29E3:word16]
	selector ds_508
	word16 ax_504 = fn0800_3FAD(ds_488, Mem503[ss:sp_263 - 4:word32], out ch_2483, out di_2484, out ds_508)
	Mem518[ss:sp_263 - 2:word16] = Mem503[ds_508:0x29E1:word16]
	Mem521[ss:sp_263 - 4:word16] = Mem518[ds_508:0x29DF:word16]
	word16 ax_532 = (DPB(DPB(ax_504, Mem521[ds_508:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_509, Mem521[ds_508:0x2E76:byte], 0), 0x00, 8)
	Mem537[ss:sp_263 - 6:word16] = 0x0000
	Mem539[ss:sp_263 - 8:word16] = ax_532
	Mem541[ss:sp_263 - 10:word16] = ds_508
	Mem544[ss:sp_263 - 12:word16] = 0x2E77
	selector ds_549
	word16 ax_1009 = (word16) fn0800_4152(ds_508, Mem544[ss:sp_263 - 12:word32], Mem544[ss:sp_263 - 8:word16], Mem544[ss:sp_263 - 6:word16], Mem544[ss:sp_263 - 4:word32], out si_2485, out di_2486, out ds_549)
	word16 sp_1000 = sp_263
	branch Mem544[ss:bp_1046 - 0x0024:word16] != 0x0000 l0800_6064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6064:
	Mem565[ss:sp_263 - 2:word16] = 0x0000
	Mem567[ss:sp_263 - 4:word16] = 0xFFFF
	word16 dx_574
	word16 di_572
	selector ds_573
	word16 ax_568 = fn0800_4311(out dx_574, out bp_1046, out si_2487, out di_572, out ds_573)
	Mem583[ss:bp_1046 - 0x000A:word16] = dx_574
	Mem584[ss:bp_1046 - 0x000C:word16] = ax_568
	word16 sp_577 = <invalid>
	Mem589[ss:sp_577 + 0x0002:word16] = 0x0000
	Mem591[ss:sp_577:word16] = 0x0000
	Mem594[ss:sp_577 - 2:word16] = Mem591[ss:bp_1046 - 0x0034:word16]
	Mem597[ss:sp_577 - 4:word16] = Mem594[ds_573:0x29E5:word16]
	Mem600[ss:sp_577 - 6:word16] = Mem597[ds_573:0x29E3:word16]
	word16 bx_602
	word16 cx_603
	fn0800_ACB3(ds_573, Mem600[ss:sp_577 - 6:segptr32], Mem600[ss:sp_577 - 2:ui32], Mem600[ss:sp_577 + 2:word16], out cx_603, out dx_2488, out bx_602)
	Mem615[ss:bp_1046 - 0x0036:word16] = Mem600[ss:bp_1046 - 0x000C:word16]
	word16 sp_610 = sp_577 + 0x0004
	word16 si_611 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_60D6:
	branch si_611 != Mem619[ss:bp_1046 - 0x0024:word16] l0800_6096
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6096:
	word16 sp_625 = sp_610 - 2
	Mem626[ss:sp_625:word16] = Mem619[ds_573:0x29E5:word16]
	Mem629[ss:sp_625 - 2:word16] = Mem626[ds_573:0x29E3:word16]
	selector ds_634
	Mem643[ss:bp_1046 - 0x0022:word16] = fn0800_3FAD(ds_573, Mem629[ss:sp_625 - 2:word32], out ch_2493, out di_2494, out ds_634)
	Mem646[ss:sp_625:word16] = Mem643[ds_634:0x29E5:word16]
	Mem649[ss:sp_625 - 2:word16] = Mem646[ds_634:0x29E3:word16]
	word16 ax_650 = fn0800_3FAD(ds_634, Mem649[ss:sp_625 - 2:word32], out ch_2495, out di_2496, out ds_573)
	byte cl_669
	word16 dx_670
	word16 ax_676 = fn0800_8C69(ax_650, 0x04, 0x0000, out cl_669, out dx_670) + Mem649[ss:bp_1046 - 0x0022:word16]
	selector es_680 = Mem649[ss:bp_1046 - 0x000A:selector]
	bx_602 = Mem649[ss:bp_1046 - 0x0036:word16]
	Mem682[es_680:bx_602 + 0x0002:word16] = dx_670 + (ax_676 <u 0x0000)
	Mem683[es_680:bx_602:word16] = ax_676
	Mem685[ss:bp_1046 - 0x0036:word16] = Mem683[ss:bp_1046 - 0x0036:word16] + 0x0004
	word16 cx_652 = <invalid>
	di_572 = ax_650
	sp_610 = <invalid>
	cx_603 = DPB(cx_652, cl_669, 0) (alias)
	si_611 = si_611 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_60DB:
	word16 sp_690 = sp_610 - 2
	Mem691[ss:sp_690:word16] = 0x667B
	Mem694[ss:sp_690 - 2:word16] = 0x0004
	Mem697[ss:sp_690 - 4:word16] = Mem694[ss:bp_1046 - 0x0024:word16]
	Mem700[ss:sp_690 - 6:word16] = Mem697[ss:bp_1046 - 0x000A:word16]
	Mem703[ss:sp_690 - 8:word16] = Mem700[ss:bp_1046 - 0x000C:word16]
	fn0800_B95E(cx_603, bx_602, si_611, di_572, ds_573, Mem703[ss:sp_690 - 8:word16], Mem703[ss:sp_690 - 6:word16], Mem703[ss:sp_690 - 4:word16], Mem703[ss:sp_690 - 2:word16], Mem703[ss:sp_690:word16])
	word16 di_722 = Mem703[ss:bp_1046 - 0x000C:word16]
	Mem729[ss:bp_1046 - 0x0038:word16] = -false
	word16 sp_720 = sp_690 + 0x0002
	word16 si_2168 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_620C:
	branch si_2168 == Mem733[ss:bp_1046 - 0x0024:word16] l0800_6214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6214:
	word16 sp_738 = sp_720 - 2
	Mem739[ss:sp_738:word16] = Mem733[ss:bp_1046 - 0x000A:word16]
	Mem742[ss:sp_738 - 2:word16] = Mem739[ss:bp_1046 - 0x000C:word16]
	ax_1009 = fn0800_4346(ds_573, Mem742[ss:sp_738:word16], out cx_2525, out dx_2526, out bx_2527, out ds_549)
	sp_1000 = sp_738 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6211:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6104:
	selector es_756 = Mem733[ss:bp_1046 - 0x000A:selector]
	word16 ax_758 = Mem733[es_756:di_722 + 0x0002:word16]
	word16 dx_759 = Mem733[es_756:di_722:word16]
	Mem760[ss:bp_1046 - 0x0012:word16] = ax_758
	Mem761[ss:bp_1046 - 0x0014:word16] = dx_759
	Mem766[ss:bp_1046 - 0x000E:word16] = ax_758 & 0x000F
	Mem767[ss:bp_1046 - 0x0010:word16] = dx_759 & 0xFFF0
	word16 sp_769 = sp_720 - 2
	Mem770[ss:sp_769:word16] = Mem767[ds_573:0x29E1:word16]
	Mem773[ss:sp_769 - 2:word16] = Mem770[ds_573:0x29DF:word16]
	Mem777[ss:sp_769 - 4:word16] = DPB(ax_758 & 0x000F, 0x00, 0)
	selector ds_784
	fn0800_4047(ds_573, Mem777[ss:sp_769 - 4:byte], Mem777[ss:sp_769 - 2:segptr32], out cx_2528, out dx_2529, out bx_2530, out di_2531, out ds_784)
	Mem793[ss:sp_769:word16] = Mem777[ds_784:0x29E1:word16]
	Mem796[ss:sp_769 - 2:word16] = Mem793[ds_784:0x29DF:word16]
	word16 sp_804 = <invalid>
	Mem810[ss:sp_804 - 2:word16] = fn0800_8CAA(Mem796[ss:bp_1046 - 0x0010:word16], 0x04, Mem796[ss:bp_1046 - 0x000E:word16], out dx_2532)
	word16 di_814
	selector ds_815
	fn0800_40BF(ds_784, Mem810[ss:sp_804 - 2:word16], Mem810[ss:sp_804:word32], out dx_2533, out di_814, out ds_815)
	Mem824[ss:bp_1046 - 0x0022:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6150:
	selector es_828 = Mem827[ss:bp_1046 - 0x000A:selector]
	ui32 ax_dx_2184 = SEQ(Mem827[es_828:di_814 + 0x0002:word16], Mem827[es_828:di_814:word16]) - SEQ(Mem827[ss:bp_1046 - 0x000E:word16], Mem827[ss:bp_1046 - 0x0010:word16])
	Mem836[ss:bp_1046 - 0x0016:word16] = SLICE(ax_dx_2184, word16, 16)
	Mem837[ss:bp_1046 - 0x0018:word16] = (word16) ax_dx_2184
	Mem839[ss:bp_1046 - 0x0010:word16] = v101_838
	ui32 v102_v101_2186 = SEQ(Mem839[ss:bp_1046 - 0x000E:word16], Mem837[ss:bp_1046 - 0x0010:word16]) + ax_dx_2184
	Mem843[ss:bp_1046 - 0x000E:word16] = SLICE(v102_v101_2186, word16, 16)
	word16 v101_838 = (word16) v102_v101_2186
	branch Mem843[ss:bp_1046 - 0x0016:word16] >u 0x0000 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6172:
	branch Mem843[ss:bp_1046 - 0x0016:word16] != 0x0000 l0800_617B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6174:
	branch Mem843[ss:bp_1046 - 0x0018:word16] >u 0x00FF l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_617B:
	ui32 ax_dx_2182 = SEQ(Mem843[ss:bp_1046 - 0x000E:word16], Mem843[ss:bp_1046 - 0x0010:word16]) - SEQ(Mem843[ss:bp_1046 - 0x0012:word16], Mem843[ss:bp_1046 - 0x0014:word16])
	word16 dx_854 = (word16) ax_dx_2182
	word16 ax_857 = SLICE(ax_dx_2182, word16, 16)
	branch ax_857 >u 0x0000 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_618B:
	branch Test(ULT,false) l0800_6192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_618D:
	branch dx_854 >=u 0xFFF0 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6192:
	branch Mem843[ss:bp_1046 - 0x0022:word16] == 0x00FF l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6199:
	Mem878[ss:sp_804 + 0x0002:word16] = Mem843[ds_815:0x29E1:word16]
	Mem881[ss:sp_804:word16] = Mem878[ds_815:0x29DF:word16]
	Mem886[ss:sp_804 - 0x0002:word16] = DPB(ax_857, Mem881[ss:bp_1046 - 0x0018:byte], 0)
	word16 di_892
	fn0800_4047(ds_815, Mem886[ss:sp_804 - 0x0002:byte], Mem886[ss:sp_804:segptr32], out cx_2553, out dx_2554, out bx_2555, out di_892, out ds_815)
	Mem900[ss:bp_1046 - 0x0022:word16] = Mem886[ss:bp_1046 - 0x0022:word16] + 0x0001
	di_814 = di_892 + 0x0004
	si_2168 = si_2168 + 0x0001
	branch si_2168 != Mem900[ss:bp_1046 - 0x0024:word16] l0800_6150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_61B9:
	Mem913[ss:sp_804 + 0x0002:word16] = 0x0001
	word16 ax_918 = -(Mem913[ss:bp_1046 - 0x0022:word16] + 0x0003)
	Mem923[ss:sp_804:word16] = Mem913[ss:bp_1046 - 0x0038:word16] - (ax_918 == 0x0000)
	Mem925[ss:sp_804 - 0x0002:word16] = ax_918
	Mem929[ss:sp_804 - 0x0004:word16] = Mem925[ds_815:0x29E1:word16]
	Mem932[ss:sp_804 - 0x0006:word16] = Mem929[ds_815:0x29DF:word16]
	word16 ax_933 = fn0800_ACB3(ds_815, Mem932[ss:sp_804 - 0x0006:segptr32], Mem932[ss:sp_804 - 0x0002:ui32], Mem932[ss:sp_804 + 0x0002:word16], out cx_2544, out dx_2545, out bx_2546)
	Mem946[ss:sp_804 + 0x0002:word16] = Mem932[ds_815:0x29E1:word16]
	Mem949[ss:sp_804:word16] = Mem946[ds_815:0x29DF:word16]
	Mem953[ss:sp_804 - 0x0002:word16] = DPB(ax_933, Mem949[ss:bp_1046 - 0x0022:byte], 0)
	fn0800_4047(ds_815, Mem953[ss:sp_804 - 0x0002:byte], Mem953[ss:sp_804:segptr32], out cx_2547, out dx_2548, out bx_2549, out di_722, out ds_573)
	Mem968[ss:sp_804 + 0x0002:word16] = 0x0001
	word16 ax_969 = Mem968[ss:bp_1046 - 0x0022:word16]
	Mem977[ss:sp_804:word16] = SLICE(cond(ax_969 + 0x0002), bool, 1)
	Mem979[ss:sp_804 - 0x0002:word16] = ax_969 + 0x0002
	Mem982[ss:sp_804 - 0x0004:word16] = Mem979[ds_573:0x29E1:word16]
	Mem985[ss:sp_804 - 0x0006:word16] = Mem982[ds_573:0x29DF:word16]
	fn0800_ACB3(ds_573, Mem985[ss:sp_804 - 0x0006:segptr32], Mem985[ss:sp_804 - 0x0002:ui32], Mem985[ss:sp_804 + 0x0002:word16], out cx_2550, out dx_2551, out bx_2552)
	sp_720 = sp_804 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6061:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6220:
	word16 sp_1001 = sp_1000 - 2
	Mem1003[ss:sp_1001:word16] = Mem998[ds_549:0x29E1:word16]
	Mem1006[ss:sp_1001 - 2:word16] = Mem1003[ds_549:0x29DF:word16]
	Mem1011[ss:sp_1001 - 4:word16] = DPB(ax_1009, 0x00, 0)
	selector ds_1018
	fn0800_4047(ds_549, Mem1011[ss:sp_1001 - 4:byte], Mem1011[ss:sp_1001 - 2:segptr32], out cx_2489, out dx_2490, out bx_2491, out di_2492, out ds_1018)
	Mem1027[ss:sp_1001:word16] = Mem1011[ds_1018:0x29E1:word16]
	Mem1030[ss:sp_1001 - 2:word16] = Mem1027[ds_1018:0x29DF:word16]
	word16 dx_1034
	word16 ax_1031 = fn0800_AD2F(ds_1018, Mem1030[ss:sp_1001 - 2:segptr32], out dx_1034)
	Mem1047[ss:bp_1046 - 0x001A:word16] = dx_1034 + 0xFF + (ax_1031 <u 0xFFE0)
	Mem1048[ss:bp_1046 - 0x001C:word16] = ax_1031 + 0xFFE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6266:
	word16 ax_1052 = Mem1051[ss:bp_1046 - 0x001C:word16]
	branch (ax_1052 & 0x000F) != 0x0000 l0800_624D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_624D:
	word16 sp_1061 = sp_1000 - 2
	Mem1062[ss:sp_1061:word16] = Mem1051[ds_1018:0x29E1:word16]
	Mem1065[ss:sp_1061 - 2:word16] = Mem1062[ds_1018:0x29DF:word16]
	Mem1069[ss:sp_1061 - 4:word16] = DPB(ax_1052 & 0x000F, 0x00, 0)
	fn0800_4047(ds_1018, Mem1069[ss:sp_1061 - 4:byte], Mem1069[ss:sp_1061 - 2:segptr32], out cx_2497, out dx_2498, out bx_2499, out di_2500, out ds_1018)
	word16 v163_1082 = Mem1069[ss:bp_1046 - 0x001C:word16] + 0x0001
	Mem1083[ss:bp_1046 - 0x001C:word16] = v163_1082
	Mem1087[ss:bp_1046 - 0x001A:word16] = Mem1083[ss:bp_1046 - 0x001A:word16] + (v163_1082 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6271:
	word16 v64_1092 = Mem1051[ss:bp_1046 - 0x0004:word16] - (Mem1051[ss:bp_1046 - 0x0026:word16] << 0x04)
	Mem1093[ss:bp_1046 - 0x0004:word16] = v64_1092
	Mem1097[ss:bp_1046 - 0x0002:word16] = Mem1093[ss:bp_1046 - 0x0002:word16] - (v64_1092 <u 0x0000)
	word16 sp_1099 = sp_1000 - 2
	Mem1100[ss:sp_1099:word16] = 0x0000
	word16 ax_1101 = Mem1100[ss:bp_1046 - 0x0026:word16]
	Mem1107[ss:sp_1099 - 2:word16] = 0x0000
	Mem1109[ss:sp_1099 - 4:word16] = ax_1101 << 0x04
	Mem1112[ss:sp_1099 - 6:word16] = Mem1109[ds_1018:0x29E5:word16]
	Mem1115[ss:sp_1099 - 8:word16] = Mem1112[ds_1018:0x29E3:word16]
	fn0800_ACB3(ds_1018, Mem1115[ss:sp_1099 - 8:segptr32], Mem1115[ss:sp_1099 - 4:ui32], Mem1115[ss:sp_1099:word16], out cx_2501, out dx_2502, out bx_2503)
	Mem1129[ss:sp_1099:word16] = Mem1115[ss:bp_1046 - 0x0002:word16]
	Mem1132[ss:sp_1099 - 2:word16] = Mem1129[ss:bp_1046 - 0x0004:word16]
	Mem1135[ss:sp_1099 - 4:word16] = Mem1132[ss:bp_1046 - 0x0002:word16]
	Mem1138[ss:sp_1099 - 6:word16] = Mem1135[ss:bp_1046 - 0x0004:word16]
	word16 bp_1140
	selector ds_1144
	fn0800_75EA(ds_1018, Mem1138[ss:sp_1099 - 6:word16], Mem1138[ss:sp_1099 - 4:word16], Mem1138[ss:sp_1099 - 2:word16], Mem1138[ss:sp_1099:word16], out bp_1140, out si_2504, out di_2505, out ds_1144)
	word16 sp_1148 = <invalid>
	Mem1158[ss:sp_1148 + 0x0006:word16] = 0x0000
	Mem1161[ss:sp_1148 + 0x0004:word16] = 0x0000
	Mem1163[ss:sp_1148 + 0x0002:word16] = 0x0020
	Mem1166[ss:sp_1148:word16] = Mem1163[ds_1144:0x29E1:word16]
	Mem1169[ss:sp_1148 - 2:word16] = Mem1166[ds_1144:0x29DF:word16]
	fn0800_ACB3(ds_1144, Mem1169[ss:sp_1148 - 2:segptr32], Mem1169[ss:sp_1148 + 2:ui32], Mem1169[ss:sp_1148 + 6:word16], out cx_2506, out dx_2507, out bx_2508)
	Mem1183[ss:sp_1148 + 0x0006:word16] = Mem1169[ds_1144:0x29E1:word16]
	Mem1186[ss:sp_1148 + 0x0004:word16] = Mem1183[ds_1144:0x29DF:word16]
	Mem1189[ss:sp_1148 + 0x0002:word16] = Mem1186[ss:bp_1140 - 0x0030:word16]
	selector ds_1194
	fn0800_40BF(ds_1144, Mem1189[ss:sp_1148 + 0x0002:word16], Mem1189[ss:sp_1148 + 0x0004:word32], out dx_2509, out di_2510, out ds_1194)
	Mem1205[ss:sp_1148 + 0x0006:word16] = Mem1189[ds_1194:0x29E1:word16]
	Mem1208[ss:sp_1148 + 0x0004:word16] = Mem1205[ds_1194:0x29DF:word16]
	Mem1211[ss:sp_1148 + 0x0002:word16] = Mem1208[ss:bp_1140 - 0x0032:word16]
	selector ds_1216
	fn0800_40BF(ds_1194, Mem1211[ss:sp_1148 + 0x0002:word16], Mem1211[ss:sp_1148 + 0x0004:word32], out dx_2511, out di_2512, out ds_1216)
	Mem1227[ss:sp_1148 + 0x0006:word16] = Mem1211[ds_1216:0x29E1:word16]
	Mem1230[ss:sp_1148 + 0x0004:word16] = Mem1227[ds_1216:0x29DF:word16]
	Mem1233[ss:sp_1148 + 0x0002:word16] = Mem1230[ss:bp_1140 - 0x002E:word16]
	selector ds_1238
	fn0800_40BF(ds_1216, Mem1233[ss:sp_1148 + 0x0002:word16], Mem1233[ss:sp_1148 + 0x0004:word32], out dx_2513, out di_2514, out ds_1238)
	Mem1249[ss:sp_1148 + 0x0006:word16] = Mem1233[ds_1238:0x29E1:word16]
	Mem1252[ss:sp_1148 + 0x0004:word16] = Mem1249[ds_1238:0x29DF:word16]
	Mem1255[ss:sp_1148 + 0x0002:word16] = Mem1252[ss:bp_1140 - 0x002C:word16]
	selector ds_1260
	fn0800_40BF(ds_1238, Mem1255[ss:sp_1148 + 0x0002:word16], Mem1255[ss:sp_1148 + 0x0004:word32], out dx_2515, out di_2516, out ds_1260)
	Mem1271[ss:sp_1148 + 0x0006:word16] = Mem1255[ds_1260:0x29E1:word16]
	Mem1274[ss:sp_1148 + 0x0004:word16] = Mem1271[ds_1260:0x29DF:word16]
	Mem1277[ss:sp_1148 + 0x0002:word16] = Mem1274[ss:bp_1140 - 0x001C:word16]
	selector ds_1282
	fn0800_40BF(ds_1260, Mem1277[ss:sp_1148 + 0x0002:word16], Mem1277[ss:sp_1148 + 0x0004:word32], out dx_2517, out di_2518, out ds_1282)
	Mem1303[ss:bp_1140 - 0x0022:word16] = fn0800_8CAA(Mem1277[ds_1282:0x2A03:word16], 0x04, Mem1277[ds_1282:0x2A05:word16], out dx_2519)
	word16 sp_1298 = <invalid>
	branch (Mem1303[ds_1282:0x2A03:word16] & 0x000F) == 0x0000 l0800_6333
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6330:
	Mem1311[ss:bp_1140 - 0x0022:word16] = Mem1303[ss:bp_1140 - 0x0022:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6333:
	Mem1319[ss:sp_1298 - 2:word16] = Mem1314[ds_1282:0x29E1:word16]
	Mem1322[ss:sp_1298 - 4:word16] = Mem1319[ds_1282:0x29DF:word16]
	Mem1326[ss:sp_1298 - 6:word16] = Mem1322[ss:bp_1140 - 0x0022:word16]
	selector ds_1331
	fn0800_40BF(ds_1282, Mem1326[ss:sp_1298 - 6:word16], Mem1326[ss:sp_1298 - 4:word32], out dx_2520, out di_2521, out ds_1331)
	Mem1342[ss:sp_1298 - 2:word16] = Mem1326[ds_1331:0x29E1:word16]
	Mem1345[ss:sp_1298 - 4:word16] = Mem1342[ds_1331:0x29DF:word16]
	word16 sp_1353 = <invalid>
	Mem1362[ss:sp_1353 - 2:word16] = Mem1345[ss:bp_1140 - 0x0022:word16] + fn0800_8CAA(Mem1345[ss:bp_1140 - 0x001C:word16], 0x04, Mem1345[ss:bp_1140 - 0x001A:word16], out dx_2522)
	selector ds_1367
	fn0800_40BF(ds_1331, Mem1362[ss:sp_1353 - 2:word16], Mem1362[ss:sp_1353:word32], out dx_2523, out di_2524, out ds_1367)
	ui32 ax_dx_2178 = SEQ(Mem1362[ss:bp_1140 - 0x0002:word16], Mem1362[ss:bp_1140 - 0x0004:word16]) - SEQ(Mem1362[ds_1367:0x2A05:word16], Mem1362[ds_1367:0x2A03:word16]) + SEQ(Mem1362[ds_1367:0x4E8A:word16], Mem1362[ds_1367:0x4E88:word16])
	word16 dx_1381 = (word16) ax_dx_2178
	Mem1389[ss:bp_1140 - 0x0006:word16] = SLICE(ax_dx_2178, word16, 16) + (dx_1381 <u 0x0080)
	Mem1390[ss:bp_1140 - 0x0008:word16] = dx_1381 + 0x0080
	branch Mem1390[ds_1367:0x2A1D:word16] == 0x0000 l0800_6398
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6398:
	branch Mem1390[ds_1367:0x2A21:word16] != 0x0001 l0800_63A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_639F:
	word16 v153_1395 = Mem1390[ss:bp_1140 - 0x0008:word16] + 0x0180
	Mem1396[ss:bp_1140 - 0x0008:word16] = v153_1395
	Mem1400[ss:bp_1140 - 0x0006:word16] = Mem1396[ss:bp_1140 - 0x0006:word16] + (v153_1395 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_638D:
	word16 v95_1402 = Mem1390[ss:bp_1140 - 0x0008:word16] + 0x0200
	Mem1403[ss:bp_1140 - 0x0008:word16] = v95_1402
	Mem1407[ss:bp_1140 - 0x0006:word16] = Mem1403[ss:bp_1140 - 0x0006:word16] + (v95_1402 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_63A8:
	Mem1413[ss:sp_1353 + 0x0002:word16] = 0x0000
	word16 bx_1420 = Mem1413[ss:bp_1140 - 0x0004:word16] + (Mem1413[ss:bp_1140 - 0x0026:word16] << 0x04)
	Mem1426[ss:sp_1353:word16] = Mem1413[ss:bp_1140 - 0x0002:word16] + (bx_1420 <u 0x0000)
	Mem1428[ss:sp_1353 - 2:word16] = bx_1420
	Mem1432[ss:sp_1353 - 4:word16] = Mem1428[ds_1367:0x29E5:word16]
	Mem1435[ss:sp_1353 - 6:word16] = Mem1432[ds_1367:0x29E3:word16]
	fn0800_ACB3(ds_1367, Mem1435[ss:sp_1353 - 6:segptr32], Mem1435[ss:sp_1353 - 2:ui32], Mem1435[ss:sp_1353 + 2:word16], out cx_2534, out dx_2535, out bx_2536)
	Mem1448[ss:sp_1353 + 0x0002:word16] = 0x0002
	Mem1453[ss:sp_1353:word16] = 0x0000
	Mem1455[ss:sp_1353 - 2:word16] = 0x0000
	Mem1458[ss:sp_1353 - 4:word16] = Mem1455[ds_1367:0x29E1:word16]
	Mem1461[ss:sp_1353 - 6:word16] = Mem1458[ds_1367:0x29DF:word16]
	fn0800_ACB3(ds_1367, Mem1461[ss:sp_1353 - 6:segptr32], Mem1461[ss:sp_1353 - 2:ui32], Mem1461[ss:sp_1353 + 2:word16], out cx_2537, out dx_2538, out bx_2539)
	Mem1475[ss:sp_1353 + 0x0002:word16] = Mem1461[ds_1367:0x29E1:word16]
	Mem1478[ss:sp_1353:word16] = Mem1475[ds_1367:0x29DF:word16]
	word16 dx_1482
	word16 ax_1479 = fn0800_AD2F(ds_1367, Mem1478[ss:sp_1353:segptr32], out dx_1482)
	Mem1489[ss:bp_1140 - 0x001E:word16] = dx_1482
	Mem1490[ss:bp_1140 - 0x0020:word16] = ax_1479
	ui32 dx_bx_2180 = SEQ(Mem1490[ds_1367:0x2A09:word16], Mem1490[ds_1367:0x2A07:word16]) - SEQ(Mem1490[ss:bp_1140 - 0x0002:word16], Mem1490[ss:bp_1140 - 0x0004:word16])
	word16 bx_1500 = (word16) dx_bx_2180 - (Mem1490[ss:bp_1140 - 0x0026:word16] << 0x04)
	Mem1506[ss:sp_1353 + 0x0002:word16] = SLICE(dx_bx_2180, word16, 16) - (bx_1500 <u 0x0000)
	Mem1508[ss:sp_1353:word16] = bx_1500
	Mem1511[ss:sp_1353 - 2:word16] = Mem1508[ds_1367:0x29E1:word16]
	Mem1514[ss:sp_1353 - 4:word16] = Mem1511[ds_1367:0x29DF:word16]
	Mem1517[ss:sp_1353 - 6:word16] = Mem1514[ds_1367:0x29E5:word16]
	Mem1520[ss:sp_1353 - 8:word16] = Mem1517[ds_1367:0x29E3:word16]
	word16 bp_1522
	selector ds_1526
	fn0800_3B0A(Mem1520[ss:sp_1353:word16], Mem1520[ss:sp_1353 + 2:word16], out dx_2540, out bp_1522, out si_2541, out di_2542, out ds_1526)
	Mem1540[ss:bp_1522 - 0x0022:word16] = Mem1520[ss:bp_1522 - 0x0020:word16] & 0x01FF
	fn0800_8CAA(Mem1540[ss:bp_1522 - 0x0020:word16], 0x09, Mem1540[ss:bp_1522 - 0x001E:word16], out dx_2543)
	word16 sp_1548 = <invalid>
	branch Mem1540[ss:bp_1522 - 0x0022:word16] == 0x0000 l0800_6446
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6445:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6446:
	Mem1564[ss:sp_1548 - 2:word16] = 0x0000
	Mem1567[ss:sp_1548 - 4:word16] = 0x0000
	Mem1569[ss:sp_1548 - 6:word16] = 0x0002
	Mem1573[ss:sp_1548 - 8:word16] = Mem1569[ds_1526:0x29E1:word16]
	Mem1576[ss:sp_1548 - 10:word16] = Mem1573[ds_1526:0x29DF:word16]
	fn0800_ACB3(ds_1526, Mem1576[ss:sp_1548 - 10:segptr32], Mem1576[ss:sp_1548 - 6:ui32], Mem1576[ss:sp_1548 - 2:word16], out cx_2556, out dx_2557, out bx_2558)
	Mem1590[ss:sp_1548 - 2:word16] = Mem1576[ds_1526:0x29E1:word16]
	Mem1593[ss:sp_1548 - 4:word16] = Mem1590[ds_1526:0x29DF:word16]
	Mem1597[ss:sp_1548 - 6:word16] = Mem1593[ss:bp_1522 - 0x0022:word16]
	word16 di_1601
	selector ds_1602
	fn0800_40BF(ds_1526, Mem1597[ss:sp_1548 - 6:word16], Mem1597[ss:sp_1548 - 4:word32], out dx_2559, out di_1601, out ds_1602)
	Mem1613[ss:sp_1548 - 2:word16] = Mem1597[ds_1602:0x29E1:word16]
	Mem1616[ss:sp_1548 - 4:word16] = Mem1613[ds_1602:0x29DF:word16]
	Mem1618[ss:sp_1548 - 6:word16] = di_1601
	selector ds_1623
	fn0800_40BF(ds_1602, Mem1618[ss:sp_1548 - 6:word16], Mem1618[ss:sp_1548 - 4:word32], out dx_2560, out di_2561, out ds_1623)
	branch Mem1618[ds_1623:0x2A1D:word16] == 0x0000 l0800_64B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6483:
	Mem1637[ss:sp_1548 - 2:word16] = 0x0000
	Mem1640[ss:sp_1548 - 4:word16] = 0x0000
	Mem1642[ss:sp_1548 - 6:word16] = 0x002E
	Mem1645[ss:sp_1548 - 8:word16] = Mem1642[ds_1623:0x29E1:word16]
	Mem1648[ss:sp_1548 - 10:word16] = Mem1645[ds_1623:0x29DF:word16]
	fn0800_ACB3(ds_1623, Mem1648[ss:sp_1548 - 10:segptr32], Mem1648[ss:sp_1548 - 6:ui32], Mem1648[ss:sp_1548 - 2:word16], out cx_2576, out dx_2577, out bx_2578)
	Mem1662[ss:sp_1548 - 2:word16] = Mem1648[ds_1623:0x29E1:word16]
	Mem1665[ss:sp_1548 - 4:word16] = Mem1662[ds_1623:0x29DF:word16]
	Mem1668[ss:sp_1548 - 6:word16] = Mem1665[ss:bp_1522 - 0x0022:word16]
	word16 di_1672
	selector ds_1673
	fn0800_40BF(ds_1623, Mem1668[ss:sp_1548 - 6:word16], Mem1668[ss:sp_1548 - 4:word32], out dx_2579, out di_1672, out ds_1673)
	Mem1684[ss:sp_1548 - 2:word16] = Mem1668[ds_1673:0x29E1:word16]
	Mem1687[ss:sp_1548 - 4:word16] = Mem1684[ds_1673:0x29DF:word16]
	Mem1689[ss:sp_1548 - 6:word16] = di_1672
	fn0800_40BF(ds_1673, Mem1689[ss:sp_1548 - 6:word16], Mem1689[ss:sp_1548 - 4:word32], out dx_2580, out di_2581, out ds_1623)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_64B9:
	Mem1709[ss:sp_1548 - 2:word16] = 0x0000
	Mem1712[ss:sp_1548 - 4:word16] = 0x0000
	Mem1714[ss:sp_1548 - 6:word16] = 0x0018
	Mem1718[ss:sp_1548 - 8:word16] = Mem1714[ds_1623:0x29E1:word16]
	Mem1721[ss:sp_1548 - 10:word16] = Mem1718[ds_1623:0x29DF:word16]
	word16 dx_1725
	word16 ax_1722 = fn0800_ACB3(ds_1623, Mem1721[ss:sp_1548 - 10:segptr32], Mem1721[ss:sp_1548 - 6:ui32], Mem1721[ss:sp_1548 - 2:word16], out cx_2562, out dx_1725, out bx_2563)
	Mem1734[ss:sp_1548 - 2:word16] = Mem1721[ds_1623:0x29E1:word16]
	Mem1737[ss:sp_1548 - 4:word16] = Mem1734[ds_1623:0x29DF:word16]
	Mem1752[ss:sp_1548 - 6:word16] = (DPB(DPB(ax_1722, Mem1737[ds_1623:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_1725, Mem1737[ds_1623:0x2E76:byte], 0), 0x00, 8) - 0x0020
	selector ds_1757
	fn0800_40BF(ds_1623, Mem1752[ss:sp_1548 - 6:word16], Mem1752[ss:sp_1548 - 4:word32], out dx_2564, out di_2565, out ds_1757)
	Mem1769[ss:sp_1548 - 2:word16] = 0x0000
	Mem1772[ss:sp_1548 - 4:word16] = 0x0000
	Mem1774[ss:sp_1548 - 6:word16] = 0x001C
	Mem1777[ss:sp_1548 - 8:word16] = Mem1774[ds_1757:0x29E1:word16]
	Mem1780[ss:sp_1548 - 10:word16] = Mem1777[ds_1757:0x29DF:word16]
	fn0800_ACB3(ds_1757, Mem1780[ss:sp_1548 - 10:segptr32], Mem1780[ss:sp_1548 - 6:ui32], Mem1780[ss:sp_1548 - 2:word16], out cx_2566, out dx_2567, out bx_2568)
	Mem1794[ss:sp_1548 - 2:word16] = Mem1780[ds_1757:0x29E1:word16]
	Mem1797[ss:sp_1548 - 4:word16] = Mem1794[ds_1757:0x29DF:word16]
	Mem1801[ss:sp_1548 - 6:word16] = Mem1797[ss:bp_1522 - 0x0028:word16]
	selector ds_1806
	fn0800_40BF(ds_1757, Mem1801[ss:sp_1548 - 6:word16], Mem1801[ss:sp_1548 - 4:word32], out dx_2569, out di_2570, out ds_1806)
	Mem1817[ss:sp_1548 - 2:word16] = Mem1801[ds_1806:0x29E1:word16]
	Mem1820[ss:sp_1548 - 4:word16] = Mem1817[ds_1806:0x29DF:word16]
	Mem1823[ss:sp_1548 - 6:word16] = Mem1820[ss:bp_1522 - 0x002A:word16]
	selector ds_1828
	fn0800_40BF(ds_1806, Mem1823[ss:sp_1548 - 6:word16], Mem1823[ss:sp_1548 - 4:word32], out dx_2571, out di_2572, out ds_1828)
	Mem1840[ss:sp_1548 - 2:word16] = 0x0000
	Mem1843[ss:sp_1548 - 4:word16] = 0x0000
	Mem1845[ss:sp_1548 - 6:word16] = 0x000A
	Mem1848[ss:sp_1548 - 8:word16] = Mem1845[ds_1828:0x29E1:word16]
	Mem1851[ss:sp_1548 - 10:word16] = Mem1848[ds_1828:0x29DF:word16]
	fn0800_ACB3(ds_1828, Mem1851[ss:sp_1548 - 10:segptr32], Mem1851[ss:sp_1548 - 6:ui32], Mem1851[ss:sp_1548 - 2:word16], out cx_2573, out dx_2574, out bx_2575)
	word16 cx_1872 = Mem1851[ss:bp_1522 - 0x0020:word16]
	word16 bx_1867 = Mem1851[ss:bp_1522 - 0x0004:word16] + (Mem1851[ss:bp_1522 - 0x0028:word16] << 0x04)
	word16 cx_1877 = cx_1872 - 0x0020 + Mem1851[ss:bp_1522 - 0x0008:word16]
	word16 dx_1870 = Mem1851[ss:bp_1522 - 0x0002:word16] + (bx_1867 <u 0x0000)
	word16 ax_1880 = Mem1851[ss:bp_1522 - 0x001E:word16] - (cx_1872 <u 0x0020) + Mem1851[ss:bp_1522 - 0x0006:word16] + (cx_1877 <u 0x0000)
	branch dx_1870 <u ax_1880 l0800_659C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6568:
	branch dx_1870 >u ax_1880 l0800_656E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_656A:
	branch bx_1867 <=u cx_1877 l0800_659C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_656E:
	word16 cx_1899 = Mem1851[ss:bp_1522 - 0x0020:word16]
	word16 bx_1894 = Mem1851[ss:bp_1522 - 0x0004:word16] + (Mem1851[ss:bp_1522 - 0x0028:word16] << 0x04)
	word16 cx_1904 = cx_1899 - 0x0020 + Mem1851[ss:bp_1522 - 0x0008:word16]
	ui32 dx_bx_2190 = SEQ(Mem1851[ss:bp_1522 - 0x0002:word16] + (bx_1894 <u 0x0000), bx_1894) - SEQ(((Mem1851[ss:bp_1522 - 0x001E:word16] - (cx_1899 <u 0x0020)) + Mem1851[ss:bp_1522 - 0x0006:word16]) + (cx_1904 <u 0x0000), cx_1904)
	Mem1913[ss:bp_1522 - 0x0008:word16] = v151_1912
	ui32 v152_v151_2192 = SEQ(Mem1913[ss:bp_1522 - 0x0006:word16], Mem1851[ss:bp_1522 - 0x0008:word16]) + dx_bx_2190
	Mem1917[ss:bp_1522 - 0x0006:word16] = SLICE(v152_v151_2192, word16, 16)
	word16 v151_1912 = (word16) v152_v151_2192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_659C:
	0x00000010 = 0x00000010
	word16 v157_1929 = Mem1923[ss:bp_1522 - 0x0008:word16] + ((word16) (0x00000010 - SEQ(Mem1923[ss:bp_1522 - 0x0006:word16], Mem1923[ss:bp_1522 - 0x0008:word16])) & 0x000F)
	Mem1930[ss:bp_1522 - 0x0008:word16] = v157_1929
	Mem1934[ss:bp_1522 - 0x0006:word16] = Mem1930[ss:bp_1522 - 0x0006:word16] + (v157_1929 <u 0x0000)
	word16 ax_1939 = fn0800_8CAA(Mem1934[ss:bp_1522 - 0x0008:word16], 0x04, Mem1934[ss:bp_1522 - 0x0006:word16], out dx_2582)
	Mem1948[ss:bp_1522 - 0x0028:word16] = ax_1939
	word16 sp_1943 = <invalid>
	Mem1953[ss:sp_1943 - 2:word16] = Mem1948[ds_1828:0x29E1:word16]
	Mem1956[ss:sp_1943 - 4:word16] = Mem1953[ds_1828:0x29DF:word16]
	Mem1958[ss:sp_1943 - 6:word16] = ax_1939
	selector ds_1963
	fn0800_40BF(ds_1828, Mem1958[ss:sp_1943 - 6:word16], Mem1958[ss:sp_1943 - 4:word32], out dx_2583, out di_2584, out ds_1963)
	branch Mem1958[ss:bp_1522 - 0x002A:word16] >=u Mem1958[ss:bp_1522 - 0x0028:word16] l0800_65DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_65D6:
	Mem1975[ss:bp_1522 - 0x002A:word16] = Mem1958[ss:bp_1522 - 0x0028:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_65DC:
	Mem1982[ss:sp_1943 - 2:word16] = Mem1977[ds_1963:0x29E1:word16]
	Mem1985[ss:sp_1943 - 4:word16] = Mem1982[ds_1963:0x29DF:word16]
	Mem1989[ss:sp_1943 - 6:word16] = Mem1985[ss:bp_1522 - 0x002A:word16]
	selector ds_1994
	fn0800_40BF(ds_1963, Mem1989[ss:sp_1943 - 6:word16], Mem1989[ss:sp_1943 - 4:word32], out dx_2585, out di_2586, out ds_1994)
	ui32 dx_ax_2194 = SEQ(Mem1989[ss:bp_1522 - 0x0002:word16], Mem1989[ss:bp_1522 - 0x0004:word16]) + SEQ(Mem1989[ds_1994:0x4E8A:word16], Mem1989[ds_1994:0x4E88:word16])
	word16 ax_2004 = (word16) dx_ax_2194
	word16 ax_2014 = fn0800_8CAA(ax_2004 + 0x0020, 0x04, SLICE(dx_ax_2194, word16, 16) + (ax_2004 <u 0x0020), out dx_2587)
	Mem2023[ss:bp_1522 - 0x002C:word16] = ax_2014
	word16 sp_2018 = <invalid>
	Mem2026[ss:sp_2018 - 2:word16] = Mem2023[ds_1994:0x29E1:word16]
	Mem2029[ss:sp_2018 - 4:word16] = Mem2026[ds_1994:0x29DF:word16]
	Mem2031[ss:sp_2018 - 6:word16] = ax_2014
	selector ds_2036
	fn0800_40BF(ds_1994, Mem2031[ss:sp_2018 - 6:word16], Mem2031[ss:sp_2018 - 4:word32], out dx_2588, out di_2589, out ds_2036)
	Mem2046[ss:bp_1522 - 0x002E:word16] = Mem2031[ss:bp_1522 - 0x001C:word16] + 0x0080
	branch Mem2046[ds_2036:0x2A1D:word16] == 0x0000 l0800_662F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_662F:
	branch Mem2046[ds_2036:0x2A21:word16] != 0x0001 l0800_663B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6636:
	Mem2052[ss:bp_1522 - 0x002E:word16] = Mem2046[ss:bp_1522 - 0x002E:word16] + 0x0180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6628:
	Mem2055[ss:bp_1522 - 0x002E:word16] = Mem2046[ss:bp_1522 - 0x002E:word16] + 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_663B:
	Mem2063[ss:sp_2018 - 2:word16] = Mem2058[ds_2036:0x29E1:word16]
	Mem2066[ss:sp_2018 - 4:word16] = Mem2063[ds_2036:0x29DF:word16]
	Mem2070[ss:sp_2018 - 6:word16] = Mem2066[ss:bp_1522 - 0x002E:word16]
	selector ds_2075
	fn0800_40BF(ds_2036, Mem2070[ss:sp_2018 - 6:word16], Mem2070[ss:sp_2018 - 4:word32], out dx_2590, out di_2591, out ds_2075)
	ui32 dx_bx_2196 = SEQ(Mem2070[ds_2075:0x2A09:word16], Mem2070[ds_2075:0x2A07:word16]) - SEQ(Mem2070[ss:bp_1522 - 0x0002:word16], Mem2070[ss:bp_1522 - 0x0004:word16])
	word16 bx_2092 = (word16) dx_bx_2196 - (Mem2070[ss:bp_1522 - 0x0026:word16] << 0x04)
	word16 dx_2095 = SLICE(dx_bx_2196, word16, 16) - (bx_2092 <u 0x0000)
	branch (bx_2092 | dx_2095) == 0x0000 l0800_6673
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6673:
	word16 di_2103 = Mem2070[ss:sp_2018:word16]
	word16 bp_2107 = Mem2070[ss:bp_1522:word16]
	dxOut = dx_2095
	bpOut = bp_2107
	diOut = di_2103
	dsOut = ds_2075
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_666A:
	word16 di_2110 = Mem2070[ss:sp_2018:word16]
	word16 bp_2114 = Mem2070[ss:bp_1522:word16]
	dxOut = dx_2095
	bpOut = bp_2114
	diOut = di_2110
	dsOut = ds_2075
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EE4:
	word16 di_2120 = Mem130[ss:sp_127:word16]
	word16 bp_2125 = Mem130[ss:bp_1046:word16]
	dxOut = 0x0000
	bpOut = bp_2125
	diOut = di_2120
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5E64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB1_1:
	Mem2130[ds:di_2129:byte] = 0x00
	di_2129 = di_2129 + 0x0001
	cx_2132 = cx_2132 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAB_1:
	Mem2139[ds:di_2129:byte] = Mem2135[ds:si_2134:byte]
	si_2134 = si_2134 + 0x0001
	di_2129 = di_2129 + 0x0001
	cx_2142 = cx_2142 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA7_1:
	Mem2149[ds:di_2129:word16] = Mem2145[ds:si_2134:word16]
	si_2134 = si_2134 + 0x0002
	di_2129 = di_2129 + 0x0002
	cx_2152 = cx_2152 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_669C(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_669C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_669C:
	word16 bp_121 = fp - 2
	branch Mem15[ds:0x2A09:word16] <u 0x0000 l0800_66BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66AB:
	branch Mem15[ds:0x2A09:word16] >u 0x0000 l0800_66B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66AD:
	branch Mem15[ds:0x2A07:word16] <=u 0xFEFE l0800_66BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66BE:
	word16 sp_135 = fp - 0x000A
	word16 di_29 = 0x2206
	word16 si_30 = 0x4271
	word16 cx_31 = 0x0004
	word16 dx_126 = 0x0003
	branch true l0800_66D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D0:
	cx_31 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D2:
	word16 ax_36 = 0x0000
	bool Z_49 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D4:
	branch cx_31 == 0x0000 l0800_66D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D4_1:
	Z_49 = SLICE(cond(Mem26[ds:si_464:byte] - Mem26[ds:di_465:byte]), bool, 2) (alias)
	si_30 = si_464 + 0x0001
	di_29 = di_465 + 0x0001
	cx_31 = cx_31 - 0x0001
	si_464 = si_30
	di_465 = di_29
	branch Mem26[ds:si_464:byte] != Mem26[ds:di_465:byte] l0800_66D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D6:
	branch Z_49 l0800_66DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D8:
	ax_36 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66DD:
	word16 ax_120 = ax_36
	branch ax_36 == 0x0000 l0800_6715
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66E1:
	word16 di_301 = 0x4271
	word16 si_306 = 0x2206
	word16 cx_85 = 0x0004
	word16 dx_344 = 0xFFFF
	branch true l0800_66F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F3:
	cx_85 = 0x0003
	dx_344 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F7:
	word16 cx_94 = cx_85 >>u 0x0001
	cx_324 = cx_94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F9:
	word16 cx_324
	branch cx_324 == 0x0000 l0800_66FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FB:
	word16 cx_100 = cx_324 * 0x0002 + (cx_94 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FD:
	branch cx_100 == 0x0000 l0800_66FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FF:
	word16 cx_102 = dx_344
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6703:
	branch cx_102 == 0x0000 l0800_6705
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6705:
	word16 sp_129 = <invalid>
	dx_126 = fn0800_09A3(out bp_121, out ds)
	sp_135 = sp_129 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6715:
	word16 sp_143 = sp_135 - 2
	Mem145[ss:sp_143:word16] = Mem138[ds:0x29E1:word16]
	Mem148[ss:sp_143 - 2:word16] = Mem145[ds:0x29DF:word16]
	word16 ax_165 = (DPB(DPB(ax_120, Mem148[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_126, Mem148[ds:0x2E76:byte], 0), 0x00, 8)
	Mem170[ss:sp_143 - 4:word16] = 0x0000
	Mem172[ss:sp_143 - 6:word16] = ax_165
	Mem174[ss:sp_143 - 8:word16] = ds
	Mem177[ss:sp_143 - 10:word16] = 0x2E77
	selector ds_182
	word16 bx_204 = Mem177[ds_182:0x2A07:word16] + ((DPB(DPB((word16) fn0800_4152(ds, Mem177[ss:sp_143 - 10:word32], Mem177[ss:sp_143 - 6:word16], Mem177[ss:sp_143 - 4:word16], Mem177[ss:sp_143 - 2:word32], out si_460, out di_461, out ds_182), Mem177[ds_182:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_183, Mem177[ds_182:0x2E76:byte], 0), 0x00, 8))
	word16 dx_211 = Mem177[ds_182:0x2A09:word16] + (bx_204 <u 0x0000) + (bx_204 <u 0x0040)
	Mem218[ss:bp_121 - 0x0002:word16] = dx_211
	Mem219[ss:bp_121 - 0x0004:word16] = bx_204 + 0x0040
	branch Mem219[ds_182:0x2A1D:word16] == 0x0000 l0800_6779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6779:
	branch Mem219[ds_182:0x2A21:word16] != 0x0001 l0800_6789
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6780:
	word16 v28_224 = Mem219[ss:bp_121 - 0x0004:word16] + 0x0180
	Mem225[ss:bp_121 - 0x0004:word16] = v28_224
	Mem229[ss:bp_121 - 0x0002:word16] = Mem225[ss:bp_121 - 0x0002:word16] + (v28_224 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_676E:
	word16 v25_231 = Mem219[ss:bp_121 - 0x0004:word16] + 0x0200
	Mem232[ss:bp_121 - 0x0004:word16] = v25_231
	Mem236[ss:bp_121 - 0x0002:word16] = Mem232[ss:bp_121 - 0x0002:word16] + (v25_231 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6789:
	branch Mem240[ss:bp_121 - 0x0002:word16] <u 0x0000 l0800_67A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_678F:
	branch Mem240[ss:bp_121 - 0x0002:word16] >u 0x0000 l0800_6798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6791:
	branch Mem240[ss:bp_121 - 0x0004:word16] <=u 0xFEFE l0800_67A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67A1:
	Mem254[ss:sp_143:word16] = Mem240[ds_182:0x2A09:word16]
	Mem257[ss:sp_143 - 2:word16] = Mem254[ds_182:0x2A07:word16]
	Mem260[ss:sp_143 - 4:word16] = Mem257[ds_182:0x2A09:word16]
	Mem263[ss:sp_143 - 6:word16] = Mem260[ds_182:0x2A07:word16]
	word16 bp_265
	selector ds_269
	word16 dx_270 = fn0800_75EA(ds_182, Mem263[ss:sp_143 - 6:word16], Mem263[ss:sp_143 - 4:word16], Mem263[ss:sp_143 - 2:word16], Mem263[ss:sp_143:word16], out bp_265, out si_462, out di_463, out ds_269)
	word16 sp_273 = <invalid>
	word16 di_282 = Mem263[ss:sp_273 + 0x0008:word16]
	word16 bp_286 = Mem263[ss:bp_265:word16]
	dxOut = dx_270
	bpOut = bp_286
	diOut = di_282
	dsOut = ds_269
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6798:
	word16 di_292 = Mem240[ss:sp_143 + 0x0002:word16]
	word16 bp_297 = Mem240[ss:bp_121:word16]
	dxOut = dx_211
	bpOut = bp_297
	diOut = di_292
	dsOut = ds_182
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6703_1:
	Mem302[ds:di_301:byte] = 0x00
	di_301 = di_301 + 0x0001
	cx_102 = cx_102 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FD_1:
	Mem311[ds:di_301:byte] = Mem307[ds:si_306:byte]
	si_306 = si_306 + 0x0001
	di_301 = di_301 + 0x0001
	cx_100 = cx_100 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F9_1:
	Mem321[ds:di_301:word16] = Mem317[ds:si_306:word16]
	si_306 = si_306 + 0x0002
	di_301 = di_301 + 0x0002
	cx_324 = cx_324 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66B5:
	dxOut = dx
	bpOut = bp
	diOut = di
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_669C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_67BF(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_67BF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67BF:
	word16 ax_23 = (DPB(DPB(ax, Mem7[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem7[ds:0x2E76:byte], 0), 0x00, 8)
	branch Mem24[ds:0x2A09:word16] >u 0x0000 l0800_67F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E1:
	branch Mem24[ds:0x2A09:word16] != 0x0000 l0800_67E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E3:
	branch ax_23 <u Mem24[ds:0x2A07:word16] l0800_67F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67F0:
	selector ds_269
	word16 bp_265
	word16 sp_278
	selector ds_59
	fn0800_4152(ds, SEQ(ds, 0x2E77), ax_23, 0x0000, SEQ(Mem24[ds:0x29E1:word16], Mem37[ds:0x29DF:word16]), out si_968, out di_969, out ds_59)
	fn0800_ACB3(ds_59, SEQ(Mem77[ds_59:0x29E1:word16], Mem80[ds_59:0x29DF:word16]), 0xFFFFFFEE, 0x0001, out cx_970, out dx_971, out bx_972)
	selector ds_105
	branch fn0800_3F0A(ds_59, SEQ(Mem83[ds_59:0x29E5:word16], Mem97[ds_59:0x29E3:word16]), out dx_973, out ds_105) == 0x601A l0800_6839
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6839:
	fn0800_ACB3(ds_105, SEQ(Mem125[ds_105:0x29E5:word16], Mem128[ds_105:0x29E3:word16]), 0x00000002, 0x0001, out cx_974, out dx_975, out bx_976)
	selector ds_167
	fn0800_3B0A(0x0010, 0x0000, out dx_977, out bp_978, out si_979, out di_980, out ds_167)
	word16 sp_171 = <invalid>
	Mem181[ss:sp_171 + 0x000A:word16] = 0x0000
	Mem184[ss:sp_171 + 0x0008:word16] = 0x0000
	Mem186[ss:sp_171 + 0x0006:word16] = 0x001A
	Mem189[ss:sp_171 + 0x0004:word16] = Mem186[ds_167:0x29E5:word16]
	Mem192[ss:sp_171 + 0x0002:word16] = Mem189[ds_167:0x29E3:word16]
	fn0800_ACB3(ds_167, Mem192[ss:sp_171 + 0x0002:segptr32], Mem192[ss:sp_171 + 0x0006:ui32], Mem192[ss:sp_171 + 0x000A:word16], out cx_981, out dx_982, out bx_983)
	Mem206[ss:sp_171 + 0x000A:word16] = Mem192[ds_167:0x29E1:word16]
	Mem209[ss:sp_171 + 0x0008:word16] = Mem206[ds_167:0x29DF:word16]
	Mem212[ss:sp_171 + 0x0006:word16] = Mem209[ds_167:0x29E5:word16]
	Mem215[ss:sp_171 + 0x0004:word16] = Mem212[ds_167:0x29E3:word16]
	selector ds_220
	Mem230[ss:sp_171 + 0x0006:word16] = fn0800_3E27(ds_167, Mem215[ss:sp_171 + 0x0004:word32], out cx_984, out dx_985, out di_986, out ds_220)
	selector ds_235
	fn0800_401E(ds_220, Mem230[ss:sp_171 + 0x0006:word16], Mem230[ss:sp_171 + 0x0008:word32], out cx_987, out dx_988, out bx_989, out di_990, out ds_235)
	word16 dx_244 = Mem230[ds_235:0x2A07:word16]
	Mem250[ss:sp_171 + 0x000A:word16] = Mem230[ds_235:0x2A09:word16] - (dx_244 <u 0x001C)
	Mem252[ss:sp_171 + 0x0008:word16] = dx_244 - 0x001C
	word16 dx_254 = Mem252[ds_235:0x2A07:word16]
	Mem261[ss:sp_171 + 0x0006:word16] = Mem252[ds_235:0x2A09:word16] - (dx_254 <u 0x001C)
	Mem263[ss:sp_171 + 0x0004:word16] = dx_254 - 0x001C
	fn0800_75EA(ds_235, Mem263[ss:sp_171 + 0x0004:word16], Mem263[ss:sp_171 + 0x0006:word16], Mem263[ss:sp_171 + 0x0008:word16], Mem263[ss:sp_171 + 0x000A:word16], out bp_265, out si_272, out di_991, out ds_269)
	word16 dx_280 = Mem263[ds_269:0x2A07:word16]
	word16 dx_285 = dx_280 - 0x001C - Mem263[ds_269:0x2A03:word16]
	ui32 ax_dx_808 = SEQ(Mem263[ds_269:0x2A09:word16] - (dx_280 <u 0x001C) - Mem263[ds_269:0x2A05:word16] - (dx_285 <u 0x0000), dx_285) + SEQ(Mem263[ds_269:0x4E8A:word16], Mem263[ds_269:0x4E88:word16])
	word16 dx_289 = (word16) ax_dx_808
	Mem298[ss:bp_265 - 0x0006:word16] = SLICE(ax_dx_808, word16, 16) + (dx_289 <u 0x000E)
	Mem299[ss:bp_265 - 0x0008:word16] = dx_289 + 0x000E
	word16 sp_273 = <invalid>
	sp_278 = sp_273 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6836:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_68F1:
	selector ds_316
	fn0800_409C(ds_105, Mem308[ds_105:0x2A07:word16], Mem305[ds_105:0x2A09:word16], SEQ(Mem100[ds_105:0x29E1:word16], Mem302[ds_105:0x29DF:word16]), out dx_992, out di_993, out ds_316)
	fn0800_ACB3(ds_316, SEQ(Mem334[ds_316:0x29E1:word16], Mem337[ds_316:0x29DF:word16]), 0x0000000E, 0x0001, out cx_994, out dx_995, out bx_996)
	fn0800_75EA(ds_316, Mem360[ds_316:0x2A07:word16], Mem357[ds_316:0x2A09:word16], Mem354[ds_316:0x2A07:word16], Mem340[ds_316:0x2A09:word16], out bp_265, out si_372, out di_997, out ds_269)
	ui32 ax_dx_812 = SEQ(Mem363[ds_269:0x2A09:word16], Mem363[ds_269:0x2A07:word16]) - SEQ(Mem363[ds_269:0x2A05:word16], Mem363[ds_269:0x2A03:word16]) + SEQ(Mem363[ds_269:0x4E8A:word16], Mem363[ds_269:0x4E88:word16])
	word16 dx_385 = (word16) ax_dx_812
	Mem394[ss:bp_265 - 0x0006:word16] = SLICE(ax_dx_812, word16, 16) + (dx_385 <u 0x000E)
	Mem395[ss:bp_265 - 0x0008:word16] = dx_385 + 0x000E
	word16 sp_373 = <invalid>
	sp_278 = sp_373 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6959:
	word16 sp_400 = sp_278 - 2
	Mem402[ss:sp_400:word16] = Mem397[ds_269:0x29E1:word16]
	Mem405[ss:sp_400 - 2:word16] = Mem402[ds_269:0x29DF:word16]
	word16 ax_406 = fn0800_AD2F(ds_269, Mem405[ss:sp_400 - 2:segptr32], out dx_998)
	branch (ax_406 & 0x0001) == 0x0000 l0800_6988
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_696F:
	Mem423[ss:sp_400:word16] = Mem405[ds_269:0x29E1:word16]
	Mem426[ss:sp_400 - 2:word16] = Mem423[ds_269:0x29DF:word16]
	Mem430[ss:sp_400 - 4:word16] = DPB(ax_406 & 0x0001, 0x90, 0)
	fn0800_4047(ds_269, Mem430[ss:sp_400 - 4:byte], Mem430[ss:sp_400 - 2:segptr32], out cx_1013, out dx_1014, out bx_1015, out di_1016, out ds_269)
	word16 v50_444 = Mem430[ss:bp_265 - 0x0008:word16] + 0x0001
	Mem445[ss:bp_265 - 0x0008:word16] = v50_444
	Mem449[ss:bp_265 - 0x0006:word16] = Mem445[ss:bp_265 - 0x0006:word16] + (v50_444 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6988:
	word16 sp_455 = sp_278 - 2
	Mem457[ss:sp_455:word16] = Mem452[ds_269:0x29E1:word16]
	Mem460[ss:sp_455 - 2:word16] = Mem457[ds_269:0x29DF:word16]
	Mem465[ss:sp_455 - 4:word16] = 0x0000
	Mem467[ss:sp_455 - 6:word16] = 0x0000
	selector ds_472
	fn0800_409C(ds_269, Mem467[ss:sp_455 - 6:word16], Mem467[ss:sp_455 - 4:word16], Mem467[ss:sp_455 - 2:word32], out dx_999, out di_1000, out ds_472)
	Mem483[ss:sp_455:word16] = Mem467[ds_472:0x29E1:word16]
	Mem486[ss:sp_455 - 2:word16] = Mem483[ds_472:0x29DF:word16]
	word16 dx_490
	word16 ax_487 = fn0800_AD2F(ds_472, Mem486[ss:sp_455 - 2:segptr32], out dx_490)
	Mem501[ds_472:0x2A05:word16] = dx_490 + 0xFF + (ax_487 <u 0xFFE0)
	Mem502[ds_472:0x2A03:word16] = ax_487 + 0xFFE0
	Mem507[ss:sp_455:word16] = 0x0000
	Mem510[ss:sp_455 - 2:word16] = 0x0000
	Mem512[ss:sp_455 - 4:word16] = 0x0002
	Mem515[ss:sp_455 - 6:word16] = Mem512[ds_472:0x29E1:word16]
	Mem518[ss:sp_455 - 8:word16] = Mem515[ds_472:0x29DF:word16]
	word16 ax_519 = fn0800_ACB3(ds_472, Mem518[ss:sp_455 - 8:segptr32], Mem518[ss:sp_455 - 4:ui32], Mem518[ss:sp_455:word16], out cx_1001, out dx_1002, out bx_1003)
	Mem532[ss:sp_455:word16] = Mem518[ds_472:0x29E1:word16]
	Mem535[ss:sp_455 - 2:word16] = Mem532[ds_472:0x29DF:word16]
	selector ds_539
	word16 dx_540 = fn0800_3F58(ds_472, Mem535[ss:sp_455 - 2:word32], out di_1004, out ds_539)
	Mem549[ss:bp_265 - 0x0008:word16] = v60_548
	ui32 v61_v60_814 = SEQ(Mem549[ss:bp_265 - 0x0006:word16], Mem535[ss:bp_265 - 0x0008:word16]) - SEQ(dx_540, ax_519)
	Mem553[ss:bp_265 - 0x0006:word16] = SLICE(v61_v60_814, word16, 16)
	Mem557[ss:sp_455:word16] = Mem553[ds_539:0x29E1:word16]
	Mem560[ss:sp_455 - 2:word16] = Mem557[ds_539:0x29DF:word16]
	Mem563[ss:sp_455 - 4:word16] = Mem560[ds_539:0x2A05:word16]
	Mem566[ss:sp_455 - 6:word16] = Mem563[ds_539:0x2A03:word16]
	selector ds_571
	fn0800_409C(ds_539, Mem566[ss:sp_455 - 6:word16], Mem566[ss:sp_455 - 4:word16], Mem566[ss:sp_455 - 2:word32], out dx_1005, out di_1006, out ds_571)
	Mem583[ss:sp_455:word16] = 0x0000
	Mem585[ss:sp_455 - 2:word16] = 0x0000
	Mem587[ss:sp_455 - 4:word16] = 0x0000
	Mem590[ss:sp_455 - 6:word16] = Mem587[ds_571:0x29E5:word16]
	Mem593[ss:sp_455 - 8:word16] = Mem590[ds_571:0x29E3:word16]
	fn0800_ACB3(ds_571, Mem593[ss:sp_455 - 8:segptr32], Mem593[ss:sp_455 - 4:ui32], Mem593[ss:sp_455:word16], out cx_1007, out dx_1008, out bx_1009)
	Mem607[ss:sp_455:word16] = Mem593[ds_571:0x29E5:word16]
	Mem610[ss:sp_455 - 2:word16] = Mem607[ds_571:0x29E3:word16]
	word16 v60_548 = (word16) v61_v60_814
	selector ds_615
	word16 ax_611 = fn0800_3E27(ds_571, Mem610[ss:sp_455 - 2:word32], out cx_1010, out dx_1011, out di_1012, out ds_615)
	branch ax_611 == 0x601A l0800_6A1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A1E:
	Mem627[ss:sp_455:word16] = Mem610[ds_615:0x29E5:word16]
	Mem630[ss:sp_455 - 2:word16] = Mem627[ds_615:0x29E3:word16]
	selector ds_634
	word16 dx_635 = fn0800_3E5D(ds_615, Mem630[ss:sp_455 - 2:word32], out di_1017, out ds_634)
	Mem644[ss:sp_455:word16] = ax_611
	Mem646[ss:sp_455 - 2:word16] = dx_635
	Mem649[ss:sp_455 - 4:word16] = Mem646[ds_634:0x29E5:word16]
	Mem652[ss:sp_455 - 6:word16] = Mem649[ds_634:0x29E3:word16]
	selector ds_656
	ui32 bx_cx_817 = SEQ(Mem652[ss:sp_455 - 0x0002:word16], Mem652[ss:sp_455:word16]) + SEQ(fn0800_3E5D(ds_634, Mem652[ss:sp_455 - 6:word32], out di_1018, out ds_656), ax_611)
	Mem673[ss:bp_265 - 0x0002:word16] = SLICE(bx_cx_817, word16, 16)
	Mem674[ss:bp_265 - 0x0004:word16] = (word16) bx_cx_817
	Mem677[ss:sp_455:word16] = Mem674[ds_656:0x29E5:word16]
	Mem680[ss:sp_455 - 2:word16] = Mem677[ds_656:0x29E3:word16]
	Mem692[ss:bp_265 - 0x000A:word16] = fn0800_3E5D(ds_656, Mem680[ss:sp_455 - 2:word32], out di_1019, out ds_615)
	Mem693[ss:bp_265 - 0x000C:word16] = ax_611
	ui32 ax_dx_819 = SEQ(Mem693[ss:bp_265 - 0x0002:word16], Mem693[ss:bp_265 - 0x0004:word16]) + SEQ(Mem693[ss:bp_265 - 0x000A:word16], Mem693[ss:bp_265 - 0x000C:word16])
	ui32 bx_cx_821 = SEQ(Mem693[ds_615:0x2A05:word16], Mem693[ds_615:0x2A03:word16]) + SEQ(Mem693[ss:bp_265 - 0x0006:word16], Mem693[ss:bp_265 - 0x0008:word16])
	word16 dx_696 = (word16) ax_dx_819
	word16 ax_699 = SLICE(ax_dx_819, word16, 16)
	word16 cx_702 = (word16) bx_cx_821
	word16 bx_705 = SLICE(bx_cx_821, word16, 16)
	branch ax_699 <u bx_705 l0800_6AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A7A:
	branch ax_699 >u bx_705 l0800_6A80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A7C:
	branch dx_696 <=u cx_702 l0800_6AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A80:
	ui32 ax_dx_828 = SEQ(Mem693[ss:bp_265 - 0x0002:word16], Mem693[ss:bp_265 - 0x0004:word16]) + SEQ(Mem693[ss:bp_265 - 0x000A:word16], Mem693[ss:bp_265 - 0x000C:word16]) - (SEQ(Mem693[ds_615:0x2A05:word16], Mem693[ds_615:0x2A03:word16]) + SEQ(Mem693[ss:bp_265 - 0x0006:word16], Mem693[ss:bp_265 - 0x0008:word16]))
	Mem732[ss:bp_265 - 0x0008:word16] = v79_731
	ui32 v80_v79_830 = SEQ(Mem732[ss:bp_265 - 0x0006:word16], Mem693[ss:bp_265 - 0x0008:word16]) + ax_dx_828
	Mem736[ss:bp_265 - 0x0006:word16] = SLICE(v80_v79_830, word16, 16)
	word16 v79_731 = (word16) v80_v79_830
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A1B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AA4:
	word16 sp_743 = sp_278 - 2
	Mem745[ss:sp_743:word16] = 0x0000
	Mem748[ss:sp_743 - 2:word16] = 0x0000
	Mem750[ss:sp_743 - 4:word16] = 0x000A
	Mem754[ss:sp_743 - 6:word16] = Mem750[ds_615:0x29E1:word16]
	Mem757[ss:sp_743 - 8:word16] = Mem754[ds_615:0x29DF:word16]
	fn0800_ACB3(ds_615, Mem757[ss:sp_743 - 8:segptr32], Mem757[ss:sp_743 - 4:ui32], Mem757[ss:sp_743:word16], out cx_1020, out dx_1021, out bx_1022)
	Mem771[ss:sp_743:word16] = Mem757[ds_615:0x29E1:word16]
	Mem774[ss:sp_743 - 2:word16] = Mem771[ds_615:0x29DF:word16]
	Mem778[ss:sp_743 - 4:word16] = Mem774[ss:bp_265 - 0x0006:word16]
	Mem781[ss:sp_743 - 6:word16] = Mem778[ss:bp_265 - 0x0008:word16]
	word16 di_785
	selector ds_786
	word16 dx_787
	fn0800_409C(ds_615, Mem781[ss:sp_743 - 6:word16], Mem781[ss:sp_743 - 4:word16], Mem781[ss:sp_743 - 2:word32], out dx_787, out di_785, out ds_786)
	word16 bp_798 = Mem781[ss:bp_265:word16]
	dxOut = dx_787
	bpOut = bp_798
	diOut = di_785
	dsOut = ds_786
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E9:
	dxOut = 0x0000
	bpOut = bp
	diOut = di
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_67BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_6AD4(word16 bp, word16 si, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_6AD4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AD4:
	word16 ax_26 = (DPB(DPB(ax, Mem12[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem12[ds:0x2E76:byte], 0), 0x00, 8)
	branch Mem12[ds:0x2A09:word16] >u 0x0000 l0800_6B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AF4:
	branch Mem12[ds:0x2A09:word16] != 0x0000 l0800_6AFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AF6:
	branch ax_26 <u Mem12[ds:0x2A07:word16] l0800_6B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B04:
	word16 di_45
	selector ds_46
	word16 dx_47 = fn0800_3E5D(ds, SEQ(Mem12[ds:0x29E5:word16], Mem39[ds:0x29E3:word16]), out di_45, out ds_46)
	branch dx_47 != 0x0000 l0800_6B1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B16:
	branch ax_26 == 0x03F3 l0800_6B23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B23:
	selector ds_131
	word16 ax_112 = fn0800_409C(ds_46, 0x03F3, 0x0000, SEQ(Mem42[ds_46:0x29E1:word16], Mem63[ds_46:0x29DF:word16]), out dx_917, out di_918, out ds_131)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B38:
	selector ds_101
	word16 dx_102 = fn0800_3E5D(ds_131, SEQ(Mem89[ds_131:0x29E5:word16], Mem94[ds_131:0x29E3:word16]), out di_922, out ds_101)
	fn0800_409C(ds_101, ax_112, dx_102, SEQ(Mem115[ds_101:0x29E1:word16], Mem118[ds_101:0x29DF:word16]), out dx_923, out di_924, out ds_131)
	word16 wLoc08_673 = dx_102
	word16 wLoc0A_674 = ax_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B84:
	word16 v27_145 = wLoc0A_674 - 0x0001
	wLoc0A_674 = v27_145
	wLoc08_673 = wLoc08_673 - (v27_145 <u 0x0000)
	word16 ax_151 = wLoc0A_674 | wLoc08_673
	branch ax_151 != 0x0000 l0800_6B66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B66:
	selector ds_172
	fn0800_409C(ds_172, ax_151, fn0800_3E5D(ds_131, SEQ(Mem162[ds_131:0x29E5:word16], Mem165[ds_131:0x29E3:word16]), out di_919, out ds_172), SEQ(Mem150[ds_131:0x29E1:word16], Mem159[ds_131:0x29DF:word16]), out dx_920, out di_921, out ds_131)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B96:
	ax_112 = ax_112 | dx_102
	branch ax_112 != 0x0000 l0800_6B38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B9E:
	selector ds_218
	selector ds_239
	word16 ax_235 = fn0800_409C(ds_218, ax_112 + 0x0001, fn0800_3E5D(ds_131, SEQ(Mem208[ds_131:0x29E5:word16], Mem211[ds_131:0x29E3:word16]), out di_925, out ds_218) + (ax_112 <u 0x0001), SEQ(Mem150[ds_131:0x29E1:word16], Mem205[ds_131:0x29DF:word16]), out dx_926, out di_927, out ds_239)
	selector ds_257
	word16 dx_258 = fn0800_3E5D(ds_239, SEQ(Mem234[ds_239:0x29E5:word16], Mem250[ds_239:0x29E3:word16]), out di_928, out ds_257)
	selector ds_277
	word16 dx_278 = fn0800_3E5D(ds_257, SEQ(Mem267[ds_257:0x29E5:word16], Mem270[ds_257:0x29E3:word16]), out di_929, out ds_277)
	selector ds_316
	fn0800_409C(ds_277, ax_235, dx_258, SEQ(Mem299[ds_277:0x29E1:word16], Mem302[ds_277:0x29DF:word16]), out dx_930, out di_931, out ds_316)
	selector ds_345
	word16 dx_346
	selector ds_387
	fn0800_409C(ds_345, (DPB(DPB(fn0800_409C(ds_316, ax_235 + 0x0001, dx_278 + (ax_235 <u 0x0001), SEQ(Mem311[ds_316:0x29E1:word16], Mem326[ds_316:0x29DF:word16]), out dx_346, out di_932, out ds_345), Mem340[ds_345:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_346, Mem340[ds_345:0x2E76:byte], 0), 0x00, 8) - 0x000C >>u 0x0002, 0x0000, SEQ(Mem368[ds_345:0x29E1:word16], Mem371[ds_345:0x29DF:word16]), out dx_933, out di_934, out ds_387)
	word16 dx_405
	word16 ax_402 = fn0800_AD2F(ds_387, SEQ(Mem382[ds_387:0x29E1:word16], Mem398[ds_387:0x29DF:word16]), out dx_405)
	Mem413[ds_387:0x4E8E:word16] = dx_405
	Mem414[ds_387:0x4E8C:word16] = ax_402
	ui32 ax_dx_659 = SEQ(dx_278, ax_235) - SEQ(dx_258, ax_235)
	word16 dx_289 = (word16) ax_dx_659
	word16 ax_296 = SLICE(ax_dx_659, word16, 16) + (dx_289 <u 0x0001)
	word16 dx_416 = dx_289 + 0x0001
	word16 wLoc04_736 = ax_296
	word16 wLoc06_737 = dx_289 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CAF:
	word16 ax_423 = wLoc06_737 | wLoc04_736
	branch ax_423 != 0x0000 l0800_6C89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6C89:
	selector ds_444
	fn0800_409C(ds_444, ax_423, fn0800_3E5D(ds_387, SEQ(Mem434[ds_387:0x29E5:word16], Mem437[ds_387:0x29E3:word16]), out di_935, out ds_444), SEQ(Mem421[ds_387:0x29E1:word16], Mem431[ds_387:0x29DF:word16]), out dx_416, out di_936, out ds_387)
	word16 v58_469 = wLoc06_737 - 0x0001
	wLoc06_737 = v58_469
	wLoc04_736 = wLoc04_736 - (v58_469 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CB7:
	word16 ax_493 = (DPB(DPB(ax_423, Mem481[ds_387:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_416, Mem481[ds_387:0x2E76:byte], 0), 0x00, 8)
	word16 di_509
	selector ds_510
	fn0800_4152(ds_387, SEQ(ds_387, 0x2E77), ax_493, 0x0000, SEQ(Mem421[ds_387:0x29E1:word16], Mem478[ds_387:0x29DF:word16]), out si_937, out di_509, out ds_510)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6E93:
	word16 dx_531
	word16 ax_528 = fn0800_AD2F(ds_510, SEQ(Mem505[ds_510:0x29E5:word16], Mem524[ds_510:0x29E3:word16]), out dx_531)
	branch dx_531 >=u Mem527[ds_510:0x2A09:word16] l0800_6EAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EAA:
	branch dx_531 != Mem527[ds_510:0x2A09:word16] l0800_6EB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EAC:
	branch ax_528 >=u Mem527[ds_510:0x2A07:word16] l0800_6EB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EB5:
	dxOut = dx_531
	bpOut = bp
	diOut = di_509
	dsOut = ds_510
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EB2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EA7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CE4:
	word16 v62_556 = Mem527[ds_510:0x29E5:word16]
	word16 v63_561 = Mem560[ds_510:0x29E3:word16]
	word16 di_566
	selector ds_567
	word16 dx_568 = fn0800_3E5D(ds_510, SEQ(v62_556, v63_561), out di_566, out ds_567)
	word16 cx_586 = 0x0007
	word16 bx_587 = 0x6EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D0D:
	branch Mem585[0x0800:bx_587:word16] != ax_528 l0800_6D1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D15:
	word16 ax_595 = Mem585[0x0800:bx_587 + 0x000E:word16]
	branch ax_595 == (dx_568 & 0x3FFF) l0800_6D26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D26:
	word16 ax_601
	word16 dx_606
	call Mem585[0x0800:bx_587 + 0x001C:word16] (retsize: 2;)
		uses: ax:ax_595,bx:bx_588,cx:cx_603,dx:ax_528,sp:fp - 0x001C,Stack +0000:v62_556,Stack +0002:si,Stack +0004:ax_528,Stack +0006:dx_568 & 0x3FFF,Stack +0008:dx_289 + 0x0001,Stack +000A:ax_296,Stack +000C:ax_235,Stack +000E:dx_278,Stack +0010:ax_235,Stack +0012:dx_258,Stack +0014:ax_528,Stack +0016:dx_568,Stack +0018:wLoc06_738,Stack +001A:wLoc04_739,Stack +001C:bp,Stack +FFFFFFF6:0x2E77,Stack +FFFFFFF8:ds_427,Stack +FFFFFFFA:ax_493,Stack +FFFFFFFC:0x0000,Stack +FFFFFFFE:v63_561,Top:0
		defs: ax:ax_601,dx:dx_606
	dxOut = dx_606
	bpOut = fp - 2
	diOut = di_566
	dsOut = ds_567
	return ax_601
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D1E:
	bx_587 = bx_587 + 0x0002
	cx_586 = cx_586 - 0x0001
	branch cx_586 != 0x0000 l0800_6D0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D23:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6E8B:
	dxOut = ax_528
	bpOut = bp
	diOut = di_566
	dsOut = ds_567
	return 0x0009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B1B:
	dxOut = dx_47
	bpOut = bp
	diOut = di_45
	dsOut = ds_46
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AFC:
	dxOut = 0x0000
	bpOut = bp
	diOut = di
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6AD4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6EE6(word16 cx, word16 dx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_6EE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EE6:
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x2223), out si_53, out di_54)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6EE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6EFF(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_6EFF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EFF:
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x2231), out si_20, out di_19)
	branch wArg02 <=u 0x0009 l0800_6F1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F13:
	fn0800_B2EF(cx, dx, bx, ds, SEQ(ds, 0x223E), out si_75, out di_76)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F1E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6EFF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6F20(word16 ax, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_6F20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F20:
	word16 dx_35
	selector ds_101
	word16 ax_32 = fn0800_8C69(ax, 0x02, fn0800_3E5D(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out di_1318, out ds_101), out cl_1319, out dx_35)
	word16 sp_36 = <invalid>
	Mem45[ss:sp_36 - 2:word16] = Mem42[ds_101:0x29E5:word16]
	Mem48[ss:sp_36 - 4:word16] = Mem45[ds_101:0x29E3:word16]
	fn0800_AD2F(ds_101, Mem48[ss:sp_36 - 4:segptr32], out dx_1320)
	Mem64[ss:sp_36 - 2:word16] = 0x0001
	Mem67[ss:sp_36 - 4:word16] = dx_35
	Mem70[ss:sp_36 - 6:word16] = ax_32
	Mem73[ss:sp_36 - 8:word16] = Mem70[ds_101:0x29E5:word16]
	Mem76[ss:sp_36 - 10:word16] = Mem73[ds_101:0x29E3:word16]
	ui32 dx_ax_1317 = <invalid>
	word16 bp_500 = fp - 2
	word16 dx_52 = SLICE(dx_ax_1317, word16, 16)
	word16 ax_49 = SLICE(dx_ax_1317, word16, 0)
	word16 ax_113 = fn0800_ACB3(ds_101, Mem76[ss:sp_36 - 10:segptr32], Mem76[ss:sp_36 - 6:ui32], Mem76[ss:sp_36 - 2:word16], out cx_1321, out dx_1322, out bx_1323)
	word16 sp_1194 = sp_36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FCC:
	word16 sp_92 = sp_1194 - 2
	Mem94[ss:sp_92:word16] = Mem89[ds_101:0x29E5:word16]
	Mem97[ss:sp_92 - 2:word16] = Mem94[ds_101:0x29E3:word16]
	branch fn0800_3F58(ds_101, Mem97[ss:sp_92 - 2:word32], out di_1324, out ds_101) != 0x0000 l0800_6FE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FDE:
	branch ax_113 == 0x03EC l0800_6F6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F6D:
	Mem118[ss:sp_92:word16] = 0x0001
	Mem124[ss:sp_92 - 2:word16] = 0x0000
	Mem126[ss:sp_92 - 4:word16] = 0x0004
	Mem129[ss:sp_92 - 6:word16] = Mem126[ds_101:0x29E5:word16]
	Mem132[ss:sp_92 - 8:word16] = Mem129[ds_101:0x29E3:word16]
	ax_113 = fn0800_ACB3(ds_101, Mem132[ss:sp_92 - 8:segptr32], Mem132[ss:sp_92 - 4:ui32], Mem132[ss:sp_92:word16], out cx_1328, out dx_1329, out bx_1330)
	sp_1194 = sp_92 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F86:
	word16 sp_148 = sp_1194 - 2
	Mem150[ss:sp_148:word16] = Mem145[ds_101:0x29E5:word16]
	Mem153[ss:sp_148 - 2:word16] = Mem150[ds_101:0x29E3:word16]
	word16 dx_171
	word16 ax_168 = fn0800_8C69(ax_113, 0x02, fn0800_3E5D(ds_101, Mem153[ss:sp_148 - 2:word32], out di_1392, out ds_101), out cl_1393, out dx_171)
	word16 sp_172 = <invalid>
	branch (ax_168 | dx_171) == 0x0000 l0800_6FC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FA4:
	Mem186[ss:sp_172 - 2:word16] = 0x0001
	Mem195[ss:sp_172 - 4:word16] = dx_171 + (ax_168 <u 0x0004)
	Mem197[ss:sp_172 - 6:word16] = ax_168 + 0x0004
	Mem200[ss:sp_172 - 8:word16] = Mem197[ds_101:0x29E5:word16]
	Mem203[ss:sp_172 - 10:word16] = Mem200[ds_101:0x29E3:word16]
	fn0800_ACB3(ds_101, Mem203[ss:sp_172 - 10:segptr32], Mem203[ss:sp_172 - 6:ui32], Mem203[ss:sp_172 - 2:word16], out cx_1379, out dx_1380, out bx_1381)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FC4:
	sp_1194 = sp_172
	ax_113 = ax_168 | dx_171
	branch ax_113 != 0x0000 l0800_6F86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FE3:
	Mem229[ss:sp_92:word16] = Mem97[ds_101:0x29E5:word16]
	Mem232[ss:sp_92 - 2:word16] = Mem229[ds_101:0x29E3:word16]
	fn0800_AD2F(ds_101, Mem232[ss:sp_92 - 2:segptr32], out dx_1325)
	ui32 dx_ax_1316 = <invalid>
	ui32 dx_ax_1198 = dx_ax_1316 - dx_ax_1317
	word16 dx_248 = SLICE(dx_ax_1198, word16, 16)
	Mem252[ds_101:0x2A05:word16] = dx_248
	word16 ax_245 = (word16) dx_ax_1198
	Mem253[ds_101:0x2A03:word16] = ax_245
	Mem256[ss:sp_92:word16] = Mem253[ds_101:0x29E1:word16]
	Mem259[ss:sp_92 - 2:word16] = Mem256[ds_101:0x29DF:word16]
	Mem262[ss:sp_92 - 4:word16] = wArg04
	Mem265[ss:sp_92 - 6:word16] = wArg02
	selector ds_270
	fn0800_409C(ds_101, Mem265[ss:sp_92 - 6:word16], Mem265[ss:sp_92 - 4:word16], Mem265[ss:sp_92 - 2:word32], out dx_1326, out di_1327, out ds_270)
	Mem281[ss:sp_92:word16] = Mem265[ds_270:0x29E1:word16]
	Mem284[ss:sp_92 - 2:word16] = Mem281[ds_270:0x29DF:word16]
	word16 dx_288
	word16 ax_285 = fn0800_AD2F(ds_270, Mem284[ss:sp_92 - 2:segptr32], out dx_288)
	word16 sp_294 = sp_92 + 0x0002
	branch dx_248 >=u 0x0000 l0800_7035
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7035:
	branch dx_248 >u 0x0000 l0800_7040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7037:
	branch ax_245 >u 0x0012 l0800_7040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7040:
	Mem308[ss:sp_92:word16] = 0x0000
	Mem312[ss:sp_92 - 2:word16] = Mem308[ds_270:0x4E8E:word16]
	Mem315[ss:sp_92 - 4:word16] = Mem312[ds_270:0x4E8C:word16]
	Mem318[ss:sp_92 - 6:word16] = Mem315[ds_270:0x29E1:word16]
	Mem321[ss:sp_92 - 8:word16] = Mem318[ds_270:0x29DF:word16]
	word16 ax_322 = fn0800_ACB3(ds_270, Mem321[ss:sp_92 - 8:segptr32], Mem321[ss:sp_92 - 4:ui32], Mem321[ss:sp_92:word16], out cx_1331, out dx_1332, out bx_1333)
	Mem335[ss:sp_92:word16] = Mem321[ds_270:0x29E1:word16]
	Mem338[ss:sp_92 - 2:word16] = Mem335[ds_270:0x29DF:word16]
	selector ds_342
	word16 dx_343 = fn0800_3E5D(ds_270, Mem338[ss:sp_92 - 2:word32], out di_1334, out ds_342)
	Mem357[ss:sp_92:word16] = 0x0000
	Mem360[ss:sp_92 - 2:word16] = dx_288
	Mem363[ss:sp_92 - 4:word16] = ax_285
	Mem366[ss:sp_92 - 6:word16] = Mem363[ds_342:0x29E1:word16]
	Mem369[ss:sp_92 - 8:word16] = Mem366[ds_342:0x29DF:word16]
	fn0800_ACB3(ds_342, Mem369[ss:sp_92 - 8:segptr32], Mem369[ss:sp_92 - 4:ui32], Mem369[ss:sp_92:word16], out cx_1335, out dx_1336, out bx_1337)
	Mem382[ss:sp_92:word16] = Mem369[ds_342:0x29E1:word16]
	Mem385[ss:sp_92 - 2:word16] = Mem382[ds_342:0x29DF:word16]
	Mem390[ss:sp_92 - 4:word16] = 0x0000
	Mem392[ss:sp_92 - 6:word16] = 0x0000
	selector ds_397
	fn0800_409C(ds_342, Mem392[ss:sp_92 - 6:word16], Mem392[ss:sp_92 - 4:word16], Mem392[ss:sp_92 - 2:word32], out dx_1338, out di_1339, out ds_397)
	Mem408[ss:sp_92:word16] = Mem392[ds_397:0x29E1:word16]
	Mem411[ss:sp_92 - 2:word16] = Mem408[ds_397:0x29DF:word16]
	Mem414[ss:sp_92 - 4:word16] = dx_35
	Mem417[ss:sp_92 - 6:word16] = ax_32
	selector ds_422
	fn0800_409C(ds_397, Mem417[ss:sp_92 - 6:word16], Mem417[ss:sp_92 - 4:word16], Mem417[ss:sp_92 - 2:word32], out dx_1340, out di_1341, out ds_422)
	Mem433[ss:sp_92:word16] = Mem417[ds_422:0x29E1:word16]
	Mem436[ss:sp_92 - 2:word16] = Mem433[ds_422:0x29DF:word16]
	Mem439[ss:sp_92 - 4:word16] = dx_343
	Mem442[ss:sp_92 - 6:word16] = ax_322
	selector ds_447
	fn0800_409C(ds_422, Mem442[ss:sp_92 - 6:word16], Mem442[ss:sp_92 - 4:word16], Mem442[ss:sp_92 - 2:word32], out dx_1342, out di_1343, out ds_447)
	Mem459[ss:sp_92:word16] = 0x0000
	Mem462[ss:sp_92 - 2:word16] = dx_52
	Mem465[ss:sp_92 - 4:word16] = ax_49
	Mem468[ss:sp_92 - 6:word16] = Mem465[ds_447:0x29E5:word16]
	Mem471[ss:sp_92 - 8:word16] = Mem468[ds_447:0x29E3:word16]
	fn0800_ACB3(ds_447, Mem471[ss:sp_92 - 8:segptr32], Mem471[ss:sp_92 - 4:ui32], Mem471[ss:sp_92:word16], out cx_1344, out dx_1345, out bx_1346)
	Mem490[ss:sp_92:word16] = dx_248 - (ax_245 <u 0x0008)
	Mem492[ss:sp_92 - 2:word16] = ax_245 - 0x0008
	Mem495[ss:sp_92 - 4:word16] = dx_248
	Mem498[ss:sp_92 - 6:word16] = ax_245
	fn0800_75EA(ds_447, Mem498[ss:sp_92 - 6:word16], Mem498[ss:sp_92 - 4:word16], Mem498[ss:sp_92 - 2:word16], Mem498[ss:sp_92:word16], out bp_500, out si_1347, out di_1348, out ds_270)
	word16 v58_514 = Mem498[ds_270:0x2A03:word16] + 0x0008
	Mem515[ds_270:0x2A03:word16] = v58_514
	Mem519[ds_270:0x2A05:word16] = Mem515[ds_270:0x2A05:word16] + (v58_514 <u 0x0000)
	word16 sp_508 = <invalid>
	sp_294 = sp_508 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_703D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7032:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_70F9:
	word16 ax_523 = Mem522[ds_270:0x2A05:word16]
	word16 dx_524 = Mem522[ds_270:0x2A03:word16]
	branch ax_523 >=u Mem522[ss:bp_500 - 0x0016:word16] l0800_7108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7108:
	branch ax_523 != Mem522[ss:bp_500 - 0x0016:word16] l0800_7112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_710A:
	branch dx_524 >=u Mem522[ss:bp_500 - 0x0018:word16] l0800_7112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7112:
	word16 sp_537 = sp_294 - 2
	Mem539[ss:sp_537:word16] = 0x0000
	Mem543[ss:sp_537 - 2:word16] = Mem539[ss:bp_500 - 0x0002:word16]
	Mem546[ss:sp_537 - 4:word16] = Mem543[ss:bp_500 - 0x0004:word16]
	Mem550[ss:sp_537 - 6:word16] = Mem546[ds_270:0x29E1:word16]
	Mem553[ss:sp_537 - 8:word16] = Mem550[ds_270:0x29DF:word16]
	fn0800_ACB3(ds_270, Mem553[ss:sp_537 - 8:segptr32], Mem553[ss:sp_537 - 4:ui32], Mem553[ss:sp_537:word16], out cx_1349, out dx_1350, out bx_1351)
	Mem566[ss:sp_537:word16] = 0x0000
	word16 dx_568 = Mem566[ss:bp_500 - 0x0014:word16]
	Mem575[ss:sp_537 - 2:word16] = Mem566[ss:bp_500 - 0x0012:word16] - (dx_568 <u 0x0004)
	Mem577[ss:sp_537 - 4:word16] = dx_568 - 0x0004
	Mem580[ss:sp_537 - 6:word16] = Mem577[ds_270:0x29E5:word16]
	Mem583[ss:sp_537 - 8:word16] = Mem580[ds_270:0x29E3:word16]
	fn0800_ACB3(ds_270, Mem583[ss:sp_537 - 8:segptr32], Mem583[ss:sp_537 - 4:ui32], Mem583[ss:sp_537:word16], out cx_1352, out dx_1353, out bx_1354)
	word16 dx_595 = Mem583[ss:bp_500 - 0x0010:word16]
	Mem602[ss:sp_537:word16] = Mem583[ss:bp_500 - 0x000E:word16] + (dx_595 <u 0x0004)
	Mem604[ss:sp_537 - 2:word16] = dx_595 + 0x0004
	Mem607[ss:sp_537 - 4:word16] = Mem604[ds_270:0x29E1:word16]
	Mem610[ss:sp_537 - 6:word16] = Mem607[ds_270:0x29DF:word16]
	Mem613[ss:sp_537 - 8:word16] = Mem610[ds_270:0x29E5:word16]
	Mem616[ss:sp_537 - 10:word16] = Mem613[ds_270:0x29E3:word16]
	selector ds_622
	word16 bp_618
	word16 ax_617 = fn0800_3B0A(Mem616[ss:sp_537 - 2:word16], Mem616[ss:sp_537:word16], out dx_1355, out bp_618, out si_625, out di_1356, out ds_622)
	word16 sp_626 = <invalid>
	Mem635[ss:sp_626 + 0x000A:word16] = Mem616[ds_622:0x29E5:word16]
	Mem638[ss:sp_626 + 0x0008:word16] = Mem635[ds_622:0x29E3:word16]
	selector ds_642
	branch fn0800_3F58(ds_622, Mem638[ss:sp_626 + 0x0008:word32], out di_641, out ds_642) == 0x0000 l0800_7181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7181:
	branch ax_617 == 0x03EC l0800_7189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7189:
	Mem658[ss:sp_626 + 0x000A:word16] = 0x0001
	Mem664[ss:sp_626 + 0x0008:word16] = 0x0000
	Mem666[ss:sp_626 + 0x0006:word16] = 0x0004
	Mem669[ss:sp_626 + 0x0004:word16] = Mem666[ds_642:0x29E5:word16]
	Mem672[ss:sp_626 + 0x0002:word16] = Mem669[ds_642:0x29E3:word16]
	fn0800_ACB3(ds_642, Mem672[ss:sp_626 + 0x0002:segptr32], Mem672[ss:sp_626 + 0x0006:ui32], Mem672[ss:sp_626 + 0x000A:word16], out cx_1374, out dx_1375, out bx_1376)
	Mem685[ss:sp_626 + 0x000A:word16] = Mem672[ds_642:0x29E1:word16]
	Mem688[ss:sp_626 + 0x0008:word16] = Mem685[ds_642:0x29DF:word16]
	Mem694[ss:sp_626 + 0x0006:word16] = 0x0000
	Mem696[ss:sp_626 + 0x0004:word16] = 0x03EC
	word16 ax_697 = fn0800_409C(ds_642, Mem696[ss:sp_626 + 0x0004:word16], Mem696[ss:sp_626 + 0x0006:word16], Mem696[ss:sp_626 + 0x0008:word32], out dx_1377, out di_1378, out ds_642)
	word16 sp_1195 = sp_626 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_71B7:
	word16 sp_714 = sp_1195 - 2
	Mem716[ss:sp_714:word16] = Mem711[ds_642:0x29E5:word16]
	Mem719[ss:sp_714 - 2:word16] = Mem716[ds_642:0x29E3:word16]
	selector ds_723
	Mem733[ss:bp_618 - 0x0002:word16] = fn0800_3E5D(ds_642, Mem719[ss:sp_714 - 2:word32], out di_1389, out ds_723)
	Mem735[ss:bp_618 - 0x0004:word16] = ax_697
	Mem738[ss:sp_714:word16] = Mem735[ds_723:0x29E1:word16]
	Mem741[ss:sp_714 - 2:word16] = Mem738[ds_723:0x29DF:word16]
	Mem744[ss:sp_714 - 4:word16] = Mem741[ss:bp_618 - 0x0002:word16]
	Mem746[ss:sp_714 - 6:word16] = ax_697
	fn0800_409C(ds_723, Mem746[ss:sp_714 - 6:word16], Mem746[ss:sp_714 - 4:word16], Mem746[ss:sp_714 - 2:word32], out dx_1390, out di_1391, out ds_642)
	sp_1195 = sp_714 + 0x0002
	word16 ax_760 = Mem746[ss:bp_618 - 0x0004:word16] | Mem746[ss:bp_618 - 0x0002:word16]
	branch ax_760 == 0x0000 l0800_7234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_71E5:
	Mem766[ss:sp_714:word16] = Mem746[ds_642:0x29E5:word16]
	Mem769[ss:sp_714 - 0x0002:word16] = Mem766[ds_642:0x29E3:word16]
	selector ds_773
	Mem786[ss:bp_618 - 0x0006:word16] = fn0800_3E5D(ds_642, Mem769[ss:sp_714 - 0x0002:word32], out di_1382, out ds_773) + (ax_760 <u 0x0001)
	Mem787[ss:bp_618 - 0x0008:word16] = ax_760 + 0x0001
	Mem790[ss:sp_714:word16] = Mem787[ds_773:0x29E1:word16]
	Mem793[ss:sp_714 - 0x0002:word16] = Mem790[ds_773:0x29DF:word16]
	Mem796[ss:sp_714 - 0x0004:word16] = Mem793[ss:bp_618 - 0x0006:word16]
	Mem798[ss:sp_714 - 6:word16] = ax_760 + 0x0001
	selector ds_803
	fn0800_409C(ds_773, Mem798[ss:sp_714 - 6:word16], Mem798[ss:sp_714 - 4:word16], Mem798[ss:sp_714 - 2:word32], out dx_1383, out di_1384, out ds_803)
	word16 dx_818
	word16 ax_815 = fn0800_8C69(Mem798[ss:bp_618 - 0x0004:word16], 0x02, Mem798[ss:bp_618 - 0x0002:word16], out cl_1385, out dx_818)
	word16 sp_819 = <invalid>
	Mem825[ss:sp_819 - 2:word16] = dx_818
	Mem827[ss:sp_819 - 4:word16] = ax_815
	Mem830[ss:sp_819 - 6:word16] = Mem827[ds_803:0x29E1:word16]
	Mem833[ss:sp_819 - 8:word16] = Mem830[ds_803:0x29DF:word16]
	Mem836[ss:sp_819 - 10:word16] = Mem833[ds_803:0x29E5:word16]
	Mem839[ss:sp_819 - 12:word16] = Mem836[ds_803:0x29E3:word16]
	fn0800_3B0A(Mem839[ss:sp_819 - 4:word16], Mem839[ss:sp_819 - 2:word16], out dx_1386, out bp_618, out si_1387, out di_1388, out ds_642)
	word16 sp_849 = <invalid>
	sp_1195 = sp_849 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7234:
	ax_697 = Mem858[ss:bp_618 - 0x0004:word16] | Mem858[ss:bp_618 - 0x0002:word16]
	branch ax_697 == 0x0000 l0800_723F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_723C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7186:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_717E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_723F:
	word16 v80_867 = Mem866[ds_642:0x4E8C:word16] + 0x0004
	Mem868[ds_642:0x4E8C:word16] = v80_867
	Mem872[ds_642:0x4E8E:word16] = Mem868[ds_642:0x4E8E:word16] + (v80_867 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_710F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7105:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_724D:
	ui32 ax_dx_1200 = SEQ(Mem522[ss:bp_500 - 0x0016:word16], Mem522[ss:bp_500 - 0x0018:word16]) + SEQ(Mem522[ds_270:0x4E8A:word16], Mem522[ds_270:0x4E88:word16])
	Mem889[ss:bp_500 - 0x0002:word16] = SLICE(ax_dx_1200, word16, 16)
	Mem890[ss:bp_500 - 0x0004:word16] = (word16) ax_dx_1200
	branch (Mem890[ds_270:0x2A03:word16] & 0x0003) == 0x0000 l0800_7274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_726C:
	word16 v60_897 = Mem890[ss:bp_500 - 0x0004:word16] + 0x0002
	Mem898[ss:bp_500 - 0x0004:word16] = v60_897
	Mem902[ss:bp_500 - 0x0002:word16] = Mem898[ss:bp_500 - 0x0002:word16] + (v60_897 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7274:
	word16 sp_920
	branch (Mem906[ss:bp_500 - 0x0004:word16] & 0x0003) == 0x0000 l0800_7298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7298:
	word16 dx_919
	word16 ax_916 = fn0800_8CAA(Mem906[ss:bp_500 - 0x0004:word16], 0x02, Mem906[ss:bp_500 - 0x0002:word16], out dx_919)
	Mem925[ss:bp_500 - 0x0002:word16] = dx_919
	Mem926[ss:bp_500 - 0x0004:word16] = ax_916
	sp_920 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_727F:
	word16 dx_933
	word16 ax_930 = fn0800_8CAA(Mem906[ss:bp_500 - 0x0004:word16], 0x02, Mem906[ss:bp_500 - 0x0002:word16], out dx_933)
	Mem944[ss:bp_500 - 0x0002:word16] = dx_933 + (ax_930 <u 0x0001)
	Mem945[ss:bp_500 - 0x0004:word16] = ax_930 + 0x0001
	sp_920 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72C6:
	word16 ax_948 = Mem947[ds_270:0x2A03:word16]
	branch (ax_948 & 0x0003) != 0x0000 l0800_72AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72AB:
	word16 sp_956 = sp_920 - 2
	Mem958[ss:sp_956:word16] = Mem947[ds_270:0x29E1:word16]
	Mem961[ss:sp_956 - 2:word16] = Mem958[ds_270:0x29DF:word16]
	Mem965[ss:sp_956 - 4:word16] = DPB(ax_948 & 0x0003, 0x00, 0)
	fn0800_4047(ds_270, Mem965[ss:sp_956 - 4:byte], Mem965[ss:sp_956 - 2:segptr32], out cx_1357, out dx_1358, out bx_1359, out di_1360, out ds_270)
	word16 v101_978 = Mem965[ds_270:0x2A03:word16] + 0x0001
	Mem979[ds_270:0x2A03:word16] = v101_978
	Mem983[ds_270:0x2A05:word16] = Mem979[ds_270:0x2A05:word16] + (v101_978 <u 0x0000)
	sp_920 = sp_956 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72D1:
	word16 sp_986 = sp_920 - 2
	Mem987[ss:sp_986:word16] = Mem947[ds_270:0x29E1:word16]
	Mem990[ss:sp_986 - 2:word16] = Mem987[ds_270:0x29DF:word16]
	word16 dx_994
	word16 ax_991 = fn0800_AD2F(ds_270, Mem990[ss:sp_986 - 2:segptr32], out dx_994)
	Mem1002[ss:bp_500 - 0x0006:word16] = dx_994
	Mem1003[ss:bp_500 - 0x0008:word16] = ax_991
	Mem1006[ss:sp_986:word16] = 0x0001
	word16 dx_1010 = -Mem1006[ds_270:0x2A03:word16]
	Mem1019[ss:sp_986 - 2:word16] = -Mem1006[ds_270:0x2A05:word16] - (dx_1010 == 0x0000) - (dx_1010 <u 0x0004)
	Mem1021[ss:sp_986 - 4:word16] = dx_1010 - 0x0004
	Mem1024[ss:sp_986 - 6:word16] = Mem1021[ds_270:0x29E1:word16]
	Mem1027[ss:sp_986 - 8:word16] = Mem1024[ds_270:0x29DF:word16]
	fn0800_ACB3(ds_270, Mem1027[ss:sp_986 - 8:segptr32], Mem1027[ss:sp_986 - 4:ui32], Mem1027[ss:sp_986:word16], out cx_1361, out dx_1362, out bx_1363)
	Mem1041[ss:sp_986:word16] = Mem1027[ds_270:0x29E1:word16]
	Mem1044[ss:sp_986 - 2:word16] = Mem1041[ds_270:0x29DF:word16]
	word16 dx_1051
	word16 ax_1048 = fn0800_8CAA(Mem1044[ds_270:0x2A03:word16], 0x02, Mem1044[ds_270:0x2A05:word16], out dx_1051)
	word16 sp_1052 = <invalid>
	Mem1058[ss:sp_1052 - 2:word16] = dx_1051
	Mem1060[ss:sp_1052 - 4:word16] = ax_1048
	selector ds_1065
	fn0800_409C(ds_270, Mem1060[ss:sp_1052 - 4:word16], Mem1060[ss:sp_1052 - 2:word16], Mem1060[ss:sp_1052:word32], out dx_1364, out di_1365, out ds_1065)
	word16 ax_1073 = Mem1060[ss:bp_500 - 0x000A:word16]
	word16 dx_1074 = Mem1060[ss:bp_500 - 0x000C:word16]
	Mem1076[ss:bp_500 - 0x001A:word16] = ax_1073 & 0x3FFF
	branch (ax_1073 & 0x3FFF) <u Mem1076[ss:bp_500 - 0x0002:word16] l0800_734D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_733A:
	branch (ax_1073 & 0x3FFF) >u Mem1076[ss:bp_500 - 0x0002:word16] l0800_7341
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_733C:
	branch dx_1074 <=u Mem1076[ss:bp_500 - 0x0004:word16] l0800_734D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7341:
	word16 ax_1085 = Mem1076[ss:bp_500 - 0x000C:word16]
	Mem1087[ss:bp_500 - 0x0002:word16] = Mem1076[ss:bp_500 - 0x001A:word16]
	Mem1088[ss:bp_500 - 0x0004:word16] = ax_1085
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_734D:
	word16 ax_1092 = Mem1091[ss:bp_500 - 0x000A:word16]
	Mem1095[ss:bp_500 - 0x0004:word16] = Mem1091[ss:bp_500 - 0x0004:word16]
	Mem1098[ss:bp_500 - 0x0002:word16] = Mem1095[ss:bp_500 - 0x0002:word16] | ax_1092 & 0xC000
	Mem1106[ss:sp_1052 + 0x0002:word16] = 0x0000
	Mem1111[ss:sp_1052:word16] = Mem1106[ds_1065:0x4E8E:word16]
	Mem1114[ss:sp_1052 - 2:word16] = Mem1111[ds_1065:0x4E8C:word16]
	Mem1117[ss:sp_1052 - 4:word16] = Mem1114[ds_1065:0x29E1:word16]
	Mem1120[ss:sp_1052 - 6:word16] = Mem1117[ds_1065:0x29DF:word16]
	fn0800_ACB3(ds_1065, Mem1120[ss:sp_1052 - 6:segptr32], Mem1120[ss:sp_1052 - 2:ui32], Mem1120[ss:sp_1052 + 2:word16], out cx_1366, out dx_1367, out bx_1368)
	Mem1134[ss:sp_1052 + 0x0002:word16] = Mem1120[ds_1065:0x29E1:word16]
	Mem1137[ss:sp_1052:word16] = Mem1134[ds_1065:0x29DF:word16]
	Mem1140[ss:sp_1052 - 2:word16] = Mem1137[ss:bp_500 - 0x0002:word16]
	Mem1143[ss:sp_1052 - 4:word16] = Mem1140[ss:bp_500 - 0x0004:word16]
	selector ds_1148
	fn0800_409C(ds_1065, Mem1143[ss:sp_1052 - 4:word16], Mem1143[ss:sp_1052 - 2:word16], Mem1143[ss:sp_1052:word32], out dx_1369, out di_1370, out ds_1148)
	Mem1160[ss:sp_1052 + 0x0002:word16] = 0x0000
	Mem1163[ss:sp_1052:word16] = Mem1160[ss:bp_500 - 0x0006:word16]
	Mem1166[ss:sp_1052 - 2:word16] = Mem1163[ss:bp_500 - 0x0008:word16]
	Mem1169[ss:sp_1052 - 4:word16] = Mem1166[ds_1148:0x29E1:word16]
	Mem1172[ss:sp_1052 - 6:word16] = Mem1169[ds_1148:0x29DF:word16]
	fn0800_ACB3(ds_1148, Mem1172[ss:sp_1052 - 6:segptr32], Mem1172[ss:sp_1052 - 2:ui32], Mem1172[ss:sp_1052 + 2:word16], out cx_1371, out dx_1372, out bx_1373)
	word16 v96_1183 = Mem1172[ds_1148:0x4E8C:word16] + 0x0004
	Mem1184[ds_1148:0x4E8C:word16] = v96_1183
	Mem1188[ds_1148:0x4E8E:word16] = Mem1184[ds_1148:0x4E8E:word16] + (v96_1183 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6F20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_73AC(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_73AC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_73AC:
	selector ds_42
	fn0800_4152(ds, SEQ(ds, 0x2E77), (DPB(DPB(ax, Mem12[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem12[ds:0x2E76:byte], 0), 0x00, 8), 0x0000, SEQ(Mem0[ds:0x29E1:word16], Mem9[ds:0x29DF:word16]), out si_164, out di_165, out ds_42)
	fn0800_ACB3(ds_42, SEQ(Mem60[ds_42:0x29E1:word16], Mem63[ds_42:0x29DF:word16]), 0xFFFFFFFC, 0x0001, out cx_166, out dx_167, out bx_168)
	selector ds_94
	fn0800_409C(ds_42, Mem86[ds_42:0x2A0F:word16], Mem83[ds_42:0x2A11:word16], SEQ(Mem66[ds_42:0x29E1:word16], Mem80[ds_42:0x29DF:word16]), out dx_169, out di_170, out ds_94)
	word16 bp_116
	word16 di_119
	selector ds_120
	dxOut = fn0800_75EA(ds_94, Mem111[ds_94:0x2A07:word16], Mem108[ds_94:0x2A09:word16], Mem105[ds_94:0x2A07:word16], Mem89[ds_94:0x2A09:word16], out bp_116, out si_171, out di_119, out ds_120)
	bpOut = bp_116
	diOut = di_119
	dsOut = ds_120
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_73AC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_741D(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es si Top
// Preserved: bp di ds sp
fn0800_741D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_741D:
	word16 bp_218 = fp - 2
	word16 sp_11 = fp - 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75C1:
	word16 sp_18 = sp_11 - 2
	Mem20[ss:sp_18:word16] = Mem15[ds:0x29E5:word16]
	Mem23[ss:sp_18 - 2:word16] = Mem20[ds:0x29E3:word16]
	word16 dx_27
	word16 ax_24 = fn0800_AD2F(ds, Mem23[ss:sp_18 - 2:segptr32], out dx_27)
	branch dx_27 >=u Mem23[ds:0x2A09:word16] l0800_75D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75D8:
	branch dx_27 != Mem23[ds:0x2A09:word16] l0800_75E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75DA:
	branch ax_24 >=u Mem23[ds:0x2A07:word16] l0800_75E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75E3:
	dxOut = dx_27
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_741D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75E0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75D5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7427:
	Mem57[ss:sp_18:word16] = Mem23[ds:0x29E5:word16]
	Mem60[ss:sp_18 - 2:word16] = Mem57[ds:0x29E3:word16]
	word16 ax_61 = fn0800_3E9A(ds, Mem60[ss:sp_18 - 2:segptr32], out dx_525, out di_526, out ds)
	branch ax_61 == 0x0000 l0800_7449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7449:
	Mem79[ss:sp_18:word16] = Mem60[ds:0x29E1:word16]
	Mem82[ss:sp_18 - 2:word16] = Mem79[ds:0x29DF:word16]
	Mem85[ss:sp_18 - 4:word16] = Mem82[ds:0x29E5:word16]
	Mem88[ss:sp_18 - 6:word16] = Mem85[ds:0x29E3:word16]
	selector ds_95
	Mem103[ss:sp_18 - 0x0004:word16] = fn0800_3DCF(ds, Mem88[ss:sp_18 - 6:segptr32], out ch_527, out dx_528, out di_529, out ds_95)
	fn0800_4047(ds_95, Mem103[ss:sp_18 - 0x0004:byte], Mem103[ss:sp_18 - 0x0002:segptr32], out cx_530, out dx_531, out bx_532, out di_533, out ds)
	sp_11 = sp_18 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7439:
	branch ax_61 == 0x0001 l0800_7469
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7469:
	Mem121[ss:sp_18:word16] = Mem60[ds:0x29E1:word16]
	Mem124[ss:sp_18 - 2:word16] = Mem121[ds:0x29DF:word16]
	Mem127[ss:sp_18 - 4:word16] = Mem124[ds:0x29E5:word16]
	Mem130[ss:sp_18 - 6:word16] = Mem127[ds:0x29E3:word16]
	selector ds_134
	Mem144[ss:sp_18 - 0x0004:word16] = fn0800_3E5D(ds, Mem130[ss:sp_18 - 6:word32], out di_534, out ds_134)
	Mem146[ss:sp_18 - 0x0006:word16] = ax_61
	selector ds_151
	fn0800_409C(ds_134, Mem146[ss:sp_18 - 0x0006:word16], Mem146[ss:sp_18 - 0x0004:word16], Mem146[ss:sp_18 - 0x0002:word32], out dx_535, out di_536, out ds_151)
	Mem162[ss:sp_18:word16] = Mem146[ds_151:0x29E5:word16]
	Mem165[ss:sp_18 - 2:word16] = Mem162[ds_151:0x29E3:word16]
	selector ds_170
	word16 ax_166 = fn0800_3FAD(ds_151, Mem165[ss:sp_18 - 2:word32], out ch_537, out di_538, out ds_170)
	Mem179[ss:bp_218 - 0x0002:word16] = 0x0000
	Mem180[ss:bp_218 - 0x0004:word16] = ax_166
	Mem183[ss:sp_18:word16] = Mem180[ds_170:0x29E1:word16]
	Mem186[ss:sp_18 - 2:word16] = Mem183[ds_170:0x29DF:word16]
	Mem191[ss:sp_18 - 4:word16] = 0x0000
	selector ds_196
	fn0800_401E(ds_170, Mem191[ss:sp_18 - 4:word16], Mem191[ss:sp_18 - 2:word32], out cx_539, out dx_540, out bx_541, out di_542, out ds_196)
	Mem207[ss:sp_18:word16] = Mem191[ss:bp_218 - 0x0002:word16]
	Mem210[ss:sp_18 - 2:word16] = Mem207[ss:bp_218 - 0x0004:word16]
	Mem213[ss:sp_18 - 4:word16] = Mem210[ss:bp_218 - 0x0002:word16]
	Mem216[ss:sp_18 - 6:word16] = Mem213[ss:bp_218 - 0x0004:word16]
	selector ds_222
	fn0800_75EA(ds_196, Mem216[ss:sp_18 - 6:word16], Mem216[ss:sp_18 - 4:word16], Mem216[ss:sp_18 - 2:word16], Mem216[ss:sp_18:word16], out bp_218, out si_543, out di_544, out ds_222)
	word16 sp_226 = <invalid>
	Mem234[ss:sp_226 + 0x0006:word16] = 0x0001
	word16 dx_236 = Mem234[ds_222:0x2A03:word16]
	word16 dx_242 = -(dx_236 + 0x0002)
	Mem247[ss:sp_226 + 0x0004:word16] = -(Mem234[ds_222:0x2A05:word16] + (dx_236 <u 0x0002)) - (dx_242 == 0x0000)
	Mem249[ss:sp_226 + 0x0002:word16] = dx_242
	Mem252[ss:sp_226:word16] = Mem249[ds_222:0x29E1:word16]
	Mem255[ss:sp_226 - 2:word16] = Mem252[ds_222:0x29DF:word16]
	fn0800_ACB3(ds_222, Mem255[ss:sp_226 - 2:segptr32], Mem255[ss:sp_226 + 2:ui32], Mem255[ss:sp_226 + 6:word16], out cx_545, out dx_546, out bx_547)
	Mem269[ss:sp_226 + 0x0006:word16] = Mem255[ds_222:0x29E1:word16]
	Mem272[ss:sp_226 + 0x0004:word16] = Mem269[ds_222:0x29DF:word16]
	Mem275[ss:sp_226 + 0x0002:word16] = Mem272[ds_222:0x2A03:word16]
	fn0800_40BF(ds_222, Mem275[ss:sp_226 + 0x0002:word16], Mem275[ss:sp_226 + 0x0004:word32], out dx_548, out di_549, out ds)
	word16 dx_289 = Mem275[ds:0x2A03:word16]
	branch Mem275[ds:0x2A05:word16] != Mem275[ss:bp_218 - 0x0002:word16] l0800_754A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7506:
	branch dx_289 != Mem275[ss:bp_218 - 0x0004:word16] l0800_754A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_754A:
	Mem298[ss:sp_226 + 0x0006:word16] = 0x0001
	Mem302[ss:sp_226 + 0x0004:word16] = Mem298[ds:0x2A05:word16]
	Mem305[ss:sp_226 + 0x0002:word16] = Mem302[ds:0x2A03:word16]
	Mem308[ss:sp_226:word16] = Mem305[ds:0x29E1:word16]
	Mem311[ss:sp_226 - 2:word16] = Mem308[ds:0x29DF:word16]
	fn0800_ACB3(ds, Mem311[ss:sp_226 - 2:segptr32], Mem311[ss:sp_226 + 2:ui32], Mem311[ss:sp_226 + 6:word16], out cx_561, out dx_562, out bx_563)
	sp_11 = sp_226 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_750B:
	Mem325[ss:sp_226 + 0x0006:word16] = 0x0001
	word16 dx_329 = -Mem325[ss:bp_218 - 0x0004:word16]
	Mem334[ss:sp_226 + 0x0004:word16] = -Mem325[ss:bp_218 - 0x0002:word16] - (dx_329 == 0x0000)
	Mem336[ss:sp_226 + 0x0002:word16] = dx_329
	Mem339[ss:sp_226:word16] = Mem336[ds:0x29E5:word16]
	Mem342[ss:sp_226 - 2:word16] = Mem339[ds:0x29E3:word16]
	fn0800_ACB3(ds, Mem342[ss:sp_226 - 2:segptr32], Mem342[ss:sp_226 + 2:ui32], Mem342[ss:sp_226 + 6:word16], out cx_564, out dx_565, out bx_566)
	Mem356[ss:sp_226 + 0x0006:word16] = Mem342[ss:bp_218 - 0x0002:word16]
	Mem359[ss:sp_226 + 0x0004:word16] = Mem356[ss:bp_218 - 0x0004:word16]
	Mem362[ss:sp_226 + 0x0002:word16] = Mem359[ds:0x29E1:word16]
	Mem365[ss:sp_226:word16] = Mem362[ds:0x29DF:word16]
	Mem368[ss:sp_226 - 2:word16] = Mem365[ds:0x29E5:word16]
	Mem371[ss:sp_226 - 4:word16] = Mem368[ds:0x29E3:word16]
	fn0800_3B0A(Mem371[ss:sp_226 + 4:word16], Mem371[ss:sp_226 + 6:word16], out dx_567, out bp_218, out si_568, out di_569, out ds)
	word16 sp_381 = <invalid>
	sp_11 = sp_381 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_743E:
	branch ax_61 != 0x0003 l0800_7446
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7446:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_758F:
	Mem392[ss:sp_18:word16] = Mem60[ds:0x29E5:word16]
	Mem395[ss:sp_18 - 2:word16] = Mem392[ds:0x29E3:word16]
	fn0800_AD2F(ds, Mem395[ss:sp_18 - 2:segptr32], out dx_550)
	ui32 dx_ax_523 = <invalid>
	ui32 bx_cx_502 = SEQ(Mem395[ds:0x2A09:word16], Mem395[ds:0x2A07:word16]) - dx_ax_523
	Mem414[ss:sp_18:word16] = SLICE(bx_cx_502, word16, 16)
	Mem416[ss:sp_18 - 2:word16] = (word16) bx_cx_502
	Mem419[ss:sp_18 - 4:word16] = Mem416[ds:0x29E1:word16]
	Mem422[ss:sp_18 - 6:word16] = Mem419[ds:0x29DF:word16]
	Mem425[ss:sp_18 - 8:word16] = Mem422[ds:0x29E5:word16]
	Mem428[ss:sp_18 - 10:word16] = Mem425[ds:0x29E3:word16]
	fn0800_3B0A(Mem428[ss:sp_18 - 2:word16], Mem428[ss:sp_18:word16], out dx_551, out bp_218, out si_552, out di_553, out ds)
	word16 sp_438 = <invalid>
	sp_11 = sp_438 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7443:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7566:
	word16 si_445 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7588:
	branch si_445 != 0x0003 l0800_756A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_756A:
	word16 sp_455 = sp_11 - 2
	Mem457[ss:sp_455:word16] = Mem452[ds:0x29E1:word16]
	Mem460[ss:sp_455 - 2:word16] = Mem457[ds:0x29DF:word16]
	Mem463[ss:sp_455 - 4:word16] = Mem460[ds:0x29E5:word16]
	Mem466[ss:sp_455 - 6:word16] = Mem463[ds:0x29E3:word16]
	selector ds_473
	Mem481[ss:sp_455 - 0x0004:word16] = fn0800_3DCF(ds, Mem466[ss:sp_455 - 6:segptr32], out ch_554, out dx_555, out di_556, out ds_473)
	fn0800_4047(ds_473, Mem481[ss:sp_455 - 0x0004:byte], Mem481[ss:sp_455 - 0x0002:segptr32], out cx_557, out dx_558, out bx_559, out di_560, out ds)
	si_445 = si_445 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_758D:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_75EA(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_75EA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75EA:
	Mem16[ds:0x4680:word16] = wArg04
	Mem17[ds:0x467E:word16] = wArg02
	Mem18[ds:0x2A05:word16] = wArg04
	Mem19[ds:0x2A03:word16] = wArg02
	Mem20[ds:0x4678:word16] = wArg04
	Mem21[ds:0x4676:word16] = wArg02
	Mem28[ds:0x4E86:word16] = wArg08 - (wArg06 <u 0x0012)
	Mem29[ds:0x4E84:word16] = wArg06 - 0x0012
	word16 bp_177 = fp - 2
	word16 sp_10 = fp - 0x001A
	word16 dx_24 = wArg06 - 0x0012
	branch Mem29[ds:0x4680:word16] >u 0x0000 l0800_7634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7626:
	branch Mem29[ds:0x4680:word16] == 0x0000 l0800_762B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_762B:
	branch wArg02 >u 0x0012 l0800_7634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7634:
	Mem36[ds:0x2E4B:word16] = 0x0000
	Mem37[ds:0x2E49:word16] = 0x0000
	Mem38[ds:0x465C:word16] = 0x0000
	Mem39[ds:0x4668:word16] = 0x0000
	Mem40[ds:0x4666:word16] = 0x0000
	Mem41[ds:0x2A05:word16] = 0x0000
	Mem42[ds:0x2A03:word16] = 0x0000
	Mem43[ds:0x2A01:word16] = 0x0000
	Mem44[ds:0x29FF:word16] = 0x0000
	Mem45[ds:0x467C:word16] = 0x0000
	Mem46[ds:0x467A:word16] = 0x0000
	Mem47[ds:0x4674:word16] = 0x0000
	Mem48[ds:0x4672:word16] = 0x0000
	Mem49[ds:0x2E43:word16] = 0x0000
	Mem50[ds:0x2E45:word16] = 0x0000
	Mem51[ds:0x4E82:word16] = 0x0000
	Mem52[ds:0x4E8A:word16] = 0x0000
	Mem53[ds:0x4E88:word16] = 0x0000
	Mem54[ds:0x29F9:word16] = 0x0000
	Mem55[ds:0x29F7:word16] = 0x0000
	word16 bp_65
	selector ds_69
	word16 dx_70
	word16 ax_64 = fn0800_4311(out dx_70, out bp_65, out si_1037, out di_1038, out ds_69)
	Mem80[ss:bp_65 - 0x0014:word16] = dx_70
	Mem81[ss:bp_65 - 0x0016:word16] = ax_64
	Mem84[ds_69:0x2E73:word16] = dx_70 + 0x0001
	Mem85[ds_69:0x2E71:word16] = 0x0000
	word16 sp_73 = <invalid>
	Mem89[ss:sp_73 + 0x0002:word16] = 0x0001
	Mem91[ss:sp_73:word16] = 0x0010
	word16 bp_93
	selector ds_97
	word16 dx_98
	word16 ax_92 = fn0800_4311(out dx_98, out bp_93, out si_1039, out di_1040, out ds_97)
	Mem108[ss:bp_93 - 0x0010:word16] = dx_98
	Mem109[ss:bp_93 - 0x0012:word16] = ax_92
	Mem112[ds_97:0x2E39:word16] = dx_98 + 0x0001
	Mem113[ds_97:0x2E37:word16] = 0x0000
	word16 sp_101 = <invalid>
	Mem117[ss:sp_101 + 0x0002:word16] = 0x0001
	Mem119[ss:sp_101:word16] = 0x0010
	word16 bp_121
	selector ds_125
	word16 dx_126
	word16 ax_120 = fn0800_4311(out dx_126, out bp_121, out si_1041, out di_1042, out ds_125)
	Mem136[ss:bp_121 - 0x000C:word16] = dx_126
	Mem137[ss:bp_121 - 0x000E:word16] = ax_120
	Mem140[ds_125:0x2E35:word16] = dx_126 + 0x0001
	Mem141[ds_125:0x2E33:word16] = 0x0000
	word16 sp_129 = <invalid>
	Mem145[ss:sp_129 + 0x0002:word16] = 0x0001
	Mem147[ss:sp_129:word16] = 0x0010
	word16 bp_149
	selector ds_153
	word16 dx_154
	word16 ax_148 = fn0800_4311(out dx_154, out bp_149, out si_1043, out di_1044, out ds_153)
	Mem164[ss:bp_149 - 0x0008:word16] = dx_154
	Mem165[ss:bp_149 - 0x000A:word16] = ax_148
	Mem168[ds_153:0x2E41:word16] = dx_154 + 0x0001
	Mem169[ds_153:0x2E3F:word16] = 0x0000
	word16 sp_157 = <invalid>
	Mem173[ss:sp_157 + 0x0002:word16] = 0x0001
	Mem175[ss:sp_157:word16] = 0x0010
	selector ds_181
	word16 dx_182
	word16 ax_176 = fn0800_4311(out dx_182, out bp_177, out si_1045, out di_1046, out ds_181)
	Mem192[ss:bp_177 - 0x0004:word16] = dx_182
	Mem193[ss:bp_177 - 0x0006:word16] = ax_176
	Mem196[ds_181:0x2E3D:word16] = dx_182 + 0x0001
	Mem197[ds_181:0x2E3B:word16] = 0x0000
	fn0800_87F8(ds_181)
	word16 sp_185 = <invalid>
	Mem208[ss:sp_185 + 0x0002:word16] = Mem197[ds_181:0x29E5:word16]
	Mem211[ss:sp_185:word16] = Mem208[ds_181:0x29E3:word16]
	word16 dx_215
	word16 ax_212 = fn0800_AD2F(ds_181, Mem211[ss:sp_185:segptr32], out dx_215)
	Mem223[ds_181:0x4664:word16] = dx_215
	Mem224[ds_181:0x4662:word16] = ax_212
	Mem227[ss:sp_185 + 0x0002:word16] = Mem224[ds_181:0x29E1:word16]
	Mem230[ss:sp_185:word16] = Mem227[ds_181:0x29DF:word16]
	word16 dx_234
	word16 ax_231 = fn0800_AD2F(ds_181, Mem230[ss:sp_185:segptr32], out dx_234)
	Mem241[ds_181:0x4660:word16] = dx_234
	Mem242[ds_181:0x465E:word16] = ax_231
	Mem245[ss:sp_185 + 0x0002:word16] = Mem242[ds_181:0x29E1:word16]
	Mem248[ss:sp_185:word16] = Mem245[ds_181:0x29DF:word16]
	int32 dx_ax_250 = (int32) Mem248[ds_181:0x2A21:word16]
	word16 ax_251 = (word16) dx_ax_250
	Mem259[ss:sp_185 - 2:word16] = SLICE(dx_ax_250, word16, 16) + 0x524E + (ax_251 <u 0x4300)
	Mem261[ss:sp_185 - 4:word16] = ax_251 + 0x4300
	selector ds_266
	fn0800_409C(ds_181, Mem261[ss:sp_185 - 4:word16], Mem261[ss:sp_185 - 2:word16], Mem261[ss:sp_185:word32], out dx_1047, out di_1048, out ds_266)
	Mem277[ss:sp_185 + 0x0002:word16] = Mem261[ds_266:0x29E1:word16]
	Mem280[ss:sp_185:word16] = Mem277[ds_266:0x29DF:word16]
	Mem283[ss:sp_185 - 2:word16] = Mem280[ds_266:0x4680:word16]
	Mem286[ss:sp_185 - 4:word16] = Mem283[ds_266:0x467E:word16]
	selector ds_291
	fn0800_409C(ds_266, Mem286[ss:sp_185 - 4:word16], Mem286[ss:sp_185 - 2:word16], Mem286[ss:sp_185:word32], out dx_1049, out di_1050, out ds_291)
	Mem301[ss:sp_185 + 0x0002:word16] = Mem286[ds_291:0x29E1:word16]
	Mem304[ss:sp_185:word16] = Mem301[ds_291:0x29DF:word16]
	Mem309[ss:sp_185 - 2:word16] = 0x0000
	Mem311[ss:sp_185 - 4:word16] = 0x0000
	selector ds_316
	fn0800_409C(ds_291, Mem311[ss:sp_185 - 4:word16], Mem311[ss:sp_185 - 2:word16], Mem311[ss:sp_185:word32], out dx_1051, out di_1052, out ds_316)
	Mem326[ss:sp_185 + 0x0002:word16] = Mem311[ds_316:0x29E1:word16]
	Mem329[ss:sp_185:word16] = Mem326[ds_316:0x29DF:word16]
	Mem334[ss:sp_185 - 2:word16] = 0x0000
	selector ds_339
	fn0800_401E(ds_316, Mem334[ss:sp_185 - 2:word16], Mem334[ss:sp_185:word32], out cx_1053, out dx_1054, out bx_1055, out di_1056, out ds_339)
	Mem349[ss:sp_185 + 0x0002:word16] = Mem334[ds_339:0x29E1:word16]
	Mem352[ss:sp_185:word16] = Mem349[ds_339:0x29DF:word16]
	Mem357[ss:sp_185 - 2:word16] = 0x0000
	selector ds_362
	fn0800_401E(ds_339, Mem357[ss:sp_185 - 2:word16], Mem357[ss:sp_185:word32], out cx_1057, out dx_1058, out bx_1059, out di_1060, out ds_362)
	Mem372[ss:sp_185 + 0x0002:word16] = Mem357[ds_362:0x29E1:word16]
	Mem375[ss:sp_185:word16] = Mem372[ds_362:0x29DF:word16]
	Mem380[ss:sp_185 - 2:word16] = 0x0000
	word16 bx_382
	word16 cx_383
	word16 dx_386
	selector ds_385
	fn0800_401E(ds_362, Mem380[ss:sp_185 - 2:word16], Mem380[ss:sp_185:word32], out cx_383, out dx_386, out bx_382, out di_1061, out ds_385)
	Mem395[ss:sp_185 + 0x0002:word16] = ds_385
	Mem398[ss:sp_185:word16] = 0x2240
	fn0800_B2EF(cx_383, dx_386, bx_382, ds_385, Mem398[ss:sp_185:word32], out si_1062, out di_1063)
	Mem409[ss:bp_177 - 0x0002:word16] = Mem398[ds_385:0x2E4F:word16]
	Mem412[ss:sp_185 + 0x0002:word16] = 0x0001
	word16 ax_410 = 0x0001
	branch Mem412[ds_385:0x2A1F:word16] == 0x0000 l0800_7808
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7808:
	ax_410 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7806:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_780A:
	Mem422[ss:sp_185:word16] = ax_410
	fn0800_8465(ds_385, Mem422[ss:sp_185:word16], Mem422[ss:sp_185 + 2:word16])
	Mem434[ss:sp_185 + 0x0002:word16] = 0x0001
	word16 ax_432 = 0x0001
	branch Mem434[ds_385:0x2E4F:word16] == 0x0000 l0800_781E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_781E:
	ax_432 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_781C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7820:
	Mem444[ss:sp_185:word16] = ax_432
	fn0800_8465(ds_385, Mem444[ss:sp_185:word16], Mem444[ss:sp_185 + 2:word16])
	branch Mem444[ds_385:0x2A23:word16] == 0x0001 l0800_7843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_782E:
	branch Mem444[ds_385:0x2E4F:word16] == 0x0000 l0800_7843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7835:
	Mem460[ss:sp_185 + 0x0002:word16] = 0x0010
	Mem463[ss:sp_185:word16] = Mem460[ds_385:0x2E4F:word16]
	fn0800_8465(ds_385, Mem463[ss:sp_185:word16], Mem463[ss:sp_185 + 2:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7843:
	word16 ax_475 = Mem474[ds_385:0x2A21:word16]
	branch ax_475 == 0x0001 l0800_7852
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7852:
	ax_475 = (word16) fn0800_7A02(ds_385, out ds_385)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_784B:
	branch ax_475 == 0x0002 l0800_7857
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7857:
	ax_475 = (word16) fn0800_7C78(ds_385, out ds_385)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7850:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_785A:
	word16 si_503 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7870:
	branch Mem507[ds_385:0x4E82:word16] != 0x0000 l0800_785E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_785E:
	Mem520[ss:sp_185 + 0x0002:word16] = DPB(ax_475, Mem507[ds_385:si_503 + 0x0000:byte], 0)
	ax_475 = (word16) fn0800_8624(ds_385, Mem520[ss:sp_185 + 0x0002:byte], out di_1064, out ds_385)
	Mem535[ds_385:0x4E82:word16] = Mem520[ds_385:0x4E82:word16] - 0x0001
	si_503 = si_503 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7877:
	Mem543[ds_385:0x2E4F:word16] = Mem507[ss:bp_177 - 0x0002:word16]
	ui32 ax_dx_950 = SEQ(Mem543[ds_385:0x4680:word16], Mem543[ds_385:0x467E:word16]) - SEQ(Mem543[ds_385:0x2A05:word16], Mem543[ds_385:0x2A03:word16])
	word16 dx_546 = (word16) ax_dx_950
	word16 ax_549 = SLICE(ax_dx_950, word16, 16)
	branch ax_549 >u Mem543[ds_385:0x4E8A:word16] l0800_78B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7892:
	branch ax_549 <u Mem543[ds_385:0x4E8A:word16] l0800_789A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7894:
	branch dx_546 >=u Mem543[ds_385:0x4E88:word16] l0800_78B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78B3:
	Mem556[ds_385:0x4E8A:word16] = 0x0000
	Mem557[ds_385:0x4E88:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_789A:
	ui32 ax_dx_952 = SEQ(Mem543[ds_385:0x4680:word16], Mem543[ds_385:0x467E:word16]) - SEQ(Mem543[ds_385:0x2A05:word16], Mem543[ds_385:0x2A03:word16])
	Mem567[ds_385:0x4E88:word16] = v34_566
	ui32 v35_v34_954 = SEQ(Mem567[ds_385:0x4E8A:word16], Mem543[ds_385:0x4E88:word16]) - ax_dx_952
	Mem571[ds_385:0x4E8A:word16] = SLICE(v35_v34_954, word16, 16)
	word16 v34_566 = (word16) v35_v34_954
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78BF:
	branch Mem574[ds_385:0x2A21:word16] != 0x0002 l0800_78D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78C6:
	word16 v39_577 = Mem574[ds_385:0x4E88:word16] + 0x0002
	Mem578[ds_385:0x4E88:word16] = v39_577
	Mem582[ds_385:0x4E8A:word16] = Mem578[ds_385:0x4E8A:word16] + (v39_577 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78D0:
	Mem596[ss:sp_185 + 0x0002:word16] = Mem585[ds_385:0x29E1:word16]
	Mem599[ss:sp_185:word16] = Mem596[ds_385:0x29DF:word16]
	fn0800_AD2F(ds_385, Mem599[ss:sp_185:segptr32], out dx_1065)
	int32 dx_ax_1032 = <invalid>
	int32 dx_ax_956 = dx_ax_1032 - SEQ(Mem599[ds_385:0x4660:word16], Mem599[ds_385:0x465E:word16])
	Mem614[ds_385:0x2A05:word16] = SLICE(dx_ax_956, word16, 16)
	Mem615[ds_385:0x2A03:word16] = (word16) dx_ax_956
	Mem618[ss:sp_185 + 0x0002:word16] = 0x0000
	word16 dx_620 = Mem618[ds_385:0x465E:word16]
	Mem627[ss:sp_185:word16] = Mem618[ds_385:0x4660:word16] + (dx_620 <u 0x0008)
	Mem629[ss:sp_185 - 0x0002:word16] = dx_620 + 0x0008
	Mem632[ss:sp_185 - 0x0004:word16] = Mem629[ds_385:0x29E1:word16]
	Mem635[ss:sp_185 - 0x0006:word16] = Mem632[ds_385:0x29DF:word16]
	fn0800_ACB3(ds_385, Mem635[ss:sp_185 - 0x0006:segptr32], Mem635[ss:sp_185 - 0x0002:ui32], Mem635[ss:sp_185 + 0x0002:word16], out cx_1066, out dx_1067, out bx_1068)
	Mem648[ss:sp_185 + 0x0002:word16] = Mem635[ds_385:0x29E1:word16]
	Mem651[ss:sp_185:word16] = Mem648[ds_385:0x29DF:word16]
	word16 dx_653 = Mem651[ds_385:0x2A03:word16]
	Mem660[ss:sp_185 - 0x0002:word16] = Mem651[ds_385:0x2A05:word16] - (dx_653 <u 0x0012)
	Mem662[ss:sp_185 - 0x0004:word16] = dx_653 - 0x0012
	selector ds_667
	fn0800_409C(ds_385, Mem662[ss:sp_185 - 0x0004:word16], Mem662[ss:sp_185 - 0x0002:word16], Mem662[ss:sp_185:word32], out dx_1069, out di_1070, out ds_667)
	Mem678[ss:sp_185 + 0x0002:word16] = Mem662[ds_667:0x29E1:word16]
	Mem681[ss:sp_185:word16] = Mem678[ds_667:0x29DF:word16]
	Mem684[ss:sp_185 - 0x0002:word16] = Mem681[ds_667:0x2E4B:word16]
	selector ds_689
	fn0800_401E(ds_667, Mem684[ss:sp_185 - 0x0002:word16], Mem684[ss:sp_185:word32], out cx_1071, out dx_1072, out bx_1073, out di_1074, out ds_689)
	Mem700[ss:sp_185 + 0x0002:word16] = Mem684[ds_689:0x29E1:word16]
	Mem703[ss:sp_185:word16] = Mem700[ds_689:0x29DF:word16]
	Mem706[ss:sp_185 - 0x0002:word16] = Mem703[ds_689:0x2E49:word16]
	selector ds_711
	word16 ax_707 = fn0800_401E(ds_689, Mem706[ss:sp_185 - 0x0002:word16], Mem706[ss:sp_185:word32], out cx_1075, out dx_1076, out bx_1077, out di_1078, out ds_711)
	Mem722[ss:sp_185 + 0x0002:word16] = Mem706[ds_711:0x29E1:word16]
	Mem725[ss:sp_185:word16] = Mem722[ds_711:0x29DF:word16]
	Mem729[ss:sp_185 - 0x0002:word16] = DPB(ax_707, Mem725[ds_711:0x4E88:byte], 0)
	selector ds_736
	word16 ax_730 = fn0800_4047(ds_711, Mem729[ss:sp_185 - 0x0002:byte], Mem729[ss:sp_185:segptr32], out cx_1079, out dx_1080, out bx_1081, out di_1082, out ds_736)
	Mem745[ss:sp_185 + 0x0002:word16] = Mem729[ds_736:0x29E1:word16]
	Mem748[ss:sp_185:word16] = Mem745[ds_736:0x29DF:word16]
	Mem752[ss:sp_185 - 0x0002:word16] = DPB(ax_730, Mem748[ds_736:0x29F7:byte], 0)
	selector ds_759
	fn0800_4047(ds_736, Mem752[ss:sp_185 - 0x0002:byte], Mem752[ss:sp_185:segptr32], out cx_1083, out dx_1084, out bx_1085, out di_1086, out ds_759)
	Mem767[ss:sp_185 + 0x0002:word16] = 0x0000
	ui32 ax_dx_958 = SEQ(Mem767[ds_759:0x4660:word16], Mem767[ds_759:0x465E:word16]) + SEQ(Mem767[ds_759:0x2A05:word16], Mem767[ds_759:0x2A03:word16])
	Mem776[ss:sp_185:word16] = SLICE(ax_dx_958, word16, 16)
	Mem778[ss:sp_185 - 0x0002:word16] = (word16) ax_dx_958
	Mem781[ss:sp_185 - 0x0004:word16] = Mem778[ds_759:0x29E1:word16]
	Mem784[ss:sp_185 - 0x0006:word16] = Mem781[ds_759:0x29DF:word16]
	fn0800_ACB3(ds_759, Mem784[ss:sp_185 - 0x0006:segptr32], Mem784[ss:sp_185 - 0x0002:ui32], Mem784[ss:sp_185 + 0x0002:word16], out cx_1087, out dx_1088, out bx_1089)
	Mem797[ss:sp_185 + 0x0002:word16] = 0x0000
	ui32 ax_dx_960 = SEQ(Mem797[ds_759:0x4664:word16], Mem797[ds_759:0x4662:word16]) + SEQ(Mem797[ds_759:0x4680:word16], Mem797[ds_759:0x467E:word16])
	Mem806[ss:sp_185:word16] = SLICE(ax_dx_960, word16, 16)
	Mem808[ss:sp_185 - 0x0002:word16] = (word16) ax_dx_960
	Mem811[ss:sp_185 - 0x0004:word16] = Mem808[ds_759:0x29E5:word16]
	Mem814[ss:sp_185 - 0x0006:word16] = Mem811[ds_759:0x29E3:word16]
	fn0800_ACB3(ds_759, Mem814[ss:sp_185 - 0x0006:segptr32], Mem814[ss:sp_185 - 0x0002:ui32], Mem814[ss:sp_185 + 0x0002:word16], out cx_1090, out dx_1091, out bx_1092)
	Mem832[ss:sp_185 + 0x0002:word16] = Mem814[ss:bp_177 - 0x0014:word16]
	Mem835[ss:sp_185:word16] = Mem832[ss:bp_177 - 0x0016:word16]
	selector ds_839
	fn0800_4346(ds_759, Mem835[ss:sp_185 + 0x0002:word16], out cx_1093, out dx_1094, out bx_1095, out ds_839)
	Mem850[ss:sp_185 + 0x0002:word16] = Mem835[ss:bp_177 - 0x0010:word16]
	Mem853[ss:sp_185:word16] = Mem850[ss:bp_177 - 0x0012:word16]
	selector ds_857
	fn0800_4346(ds_839, Mem853[ss:sp_185 + 0x0002:word16], out cx_1096, out dx_1097, out bx_1098, out ds_857)
	Mem868[ss:sp_185 + 0x0002:word16] = Mem853[ss:bp_177 - 0x000C:word16]
	Mem871[ss:sp_185:word16] = Mem868[ss:bp_177 - 0x000E:word16]
	selector ds_875
	fn0800_4346(ds_857, Mem871[ss:sp_185 + 0x0002:word16], out cx_1099, out dx_1100, out bx_1101, out ds_875)
	Mem886[ss:sp_185 + 0x0002:word16] = Mem871[ss:bp_177 - 0x0008:word16]
	Mem889[ss:sp_185:word16] = Mem886[ss:bp_177 - 0x000A:word16]
	selector ds_893
	fn0800_4346(ds_875, Mem889[ss:sp_185 + 0x0002:word16], out cx_1102, out dx_1103, out bx_1104, out ds_893)
	Mem904[ss:sp_185 + 0x0002:word16] = Mem889[ss:bp_177 - 0x0004:word16]
	Mem907[ss:sp_185:word16] = Mem904[ss:bp_177 - 0x0006:word16]
	word16 bx_909
	word16 cx_910
	fn0800_4346(ds_893, Mem907[ss:sp_185 + 0x0002:word16], out cx_910, out dx_24, out bx_909, out ds)
	Mem921[ss:sp_185 + 0x0002:word16] = ds
	Mem924[ss:sp_185:word16] = 0x223C
	fn0800_B2EF(cx_910, dx_24, bx_909, ds, Mem924[ss:sp_185:word32], out si_1105, out di)
	sp_10 = sp_185 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7631:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7628:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_79FD:
	word16 si_938 = Mem937[ss:sp_10:word16]
	bpOut = Mem937[ss:bp_177:word16]
	siOut = si_938
	diOut = di
	dsOut = ds
	return dx_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_75EA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_7A02(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_7A02_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7A02:
	word32 dwLoc06_850 = SEQ(Mem13[ds:0x4664:word16], Mem13[ds:0x4662:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C1A:
	word16 ax_21 = Mem20[ds:0x467C:word16]
	word16 dx_22 = Mem20[ds:0x467A:word16]
	branch ax_21 >=u Mem20[ds:0x4680:word16] l0800_7C2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C2A:
	branch ax_21 != Mem20[ds:0x4680:word16] l0800_7C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C2C:
	branch dx_22 >=u Mem20[ds:0x467E:word16] l0800_7C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C35:
	Mem33[ds:0x2E43:word16] = Mem20[ds:0x2E43:word16] >>u 0x10 - Mem20[ds:0x2E45:byte]
	branch Mem33[ds:0x2E45:word16] != 0x0000 l0800_7C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C46:
	branch Mem33[ds:0x4E82:word16] == 0x0000 l0800_7C57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C4D:
	ax_21 = (word16) fn0800_8624(ds, SLICE(DPB(ax_21, Mem33[ds:0x2E43:byte], 0), byte, 0), out di_56, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C57:
	branch Mem66[ds:0x2E45:word16] >u 0x0008 l0800_7C65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C5E:
	branch Mem66[ds:0x4E82:word16] == 0x0000 l0800_7C73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C65:
	ax_21 = (word16) fn0800_8624(ds, SLICE(Mem66[ds:0x2E43:word16] >>u 0x08, byte, 0), out di_87, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C73:
	dsOut = ds
	return (byte) ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7A02_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C32:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C27:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7A19:
	fn0800_43D4(0x284F, ds, 0x0010)
	fn0800_43D4(0x278F, ds, 0x0010)
	fn0800_43D4(0x290F, ds, 0x0010)
	ds = fn0800_7FDC(ds)
	fn0800_ACB3(ds, SEQ(Mem189[ds:0x29E5:word16], Mem192[ds:0x29E3:word16]), dwLoc06_850, 0x0000, out cx_854, out dx_855, out bx_856)
	fn0800_441C(ds, SEQ(ds, 0x290F), 0x0010)
	fn0800_441C(ds, SEQ(ds, 0x284F), 0x0010)
	fn0800_441C(ds, SEQ(ds, 0x278F), 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x290F), 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x284F), 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x278F), 0x0010)
	fn0800_8489(ds, Mem320[ds:0x466A:word16], 0x0010)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BC0:
	word16 ax_333 = Mem332[ds:0x466A:word16]
	word16 dx_334 = Mem332[ds:0x466C:word16]
	word16 v18_335 = Mem332[ds:0x466A:word16] - 0x0001
	Mem336[ds:0x466A:word16] = v18_335
	Mem340[ds:0x466C:word16] = Mem336[ds:0x466C:word16] - (v18_335 <u 0x0000)
	word16 ax_341 = ax_333 | dx_334
	branch ax_341 == 0x0000 l0800_7BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BD8:
	branch Mem340[ds:0x2E45:word16] != 0x0000 l0800_7BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BDF:
	word16 si_347 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BF5:
	branch Mem351[ds:0x4E82:word16] != 0x0000 l0800_7BE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BE3:
	ax_341 = (word16) fn0800_8624(ds, SLICE(DPB(ax_341, Mem351[ds:si_347 + 0x0000:byte], 0), byte, 0), out di_859, out ds)
	Mem379[ds:0x4E82:word16] = Mem364[ds:0x4E82:word16] - 0x0001
	si_347 = si_347 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BFC:
	word16 v29_383 = Mem382[ds:0x29F7:word16] + 0x0001
	Mem384[ds:0x29F7:word16] = v29_383
	Mem388[ds:0x29F9:word16] = Mem384[ds:0x29F9:word16] + (v29_383 <u 0x0000)
	word16 dx_403
	dwLoc06_850 = SEQ(dx_403, fn0800_AD2F(ds, SEQ(Mem388[ds:0x29E5:word16], Mem396[ds:0x29E3:word16]), out dx_403)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BD5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7ACB:
	word16 ax_422 = fn0800_3E27(ds, SEQ(Mem340[ds:0x29DD:word16], Mem418[ds:0x29DB:word16]), out cx_857, out dx_858, out di_425, out ds)
	Mem434[ds:0x2E47:word16] = ax_422
	word16 v25_435 = Mem434[ds:0x467A:word16] + ax_422
	Mem436[ds:0x467A:word16] = v25_435
	Mem440[ds:0x467C:word16] = Mem436[ds:0x467C:word16] + (v25_435 <u 0x0000)
	fn0800_8407(ds, Mem446[ds:0x2E47:word16], SEQ(ds, 0x290F))
	branch Mem449[ds:0x2E47:word16] == 0x0000 l0800_7B56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7AFB:
	branch Mem449[ds:0x2E45:word16] == 0x0000 l0800_7B32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B32:
	word16 ax_466 = Mem465[ds:0x2E47:word16]
	Mem468[ds:0x2E47:word16] = Mem465[ds:0x2E47:word16] - 0x0001
	branch ax_466 != 0x0000 l0800_7B24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B24:
	selector ds_478
	word16 ax_474 = (word16) fn0800_8359(ds, out ds_478)
	fn0800_8624(ds_478, SLICE(DPB(ax_474, (byte) ax_474 ^ Mem468[ds_478:0x2E4F:byte], 0), byte, 0), out di_865, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B02:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B17:
	selector ds_520
	word16 ax_508 = Mem507[ds:0x2E47:word16]
	Mem510[ds:0x2E47:word16] = Mem507[ds:0x2E47:word16] - 0x0001
	branch ax_508 != 0x0000 l0800_7B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B04:
	Mem531[ds_520:Mem510[ds_520:0x4E82:word16] + 0x4682:byte] = (byte) (word16) fn0800_8359(ds, out ds_520) ^ Mem510[ds_520:0x2E4F:byte]
	Mem533[ds_520:0x4E82:word16] = Mem531[ds_520:0x4E82:word16] + 0x0001
	ds = ds_520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B22:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B3D:
	branch (Mem536[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B52:
	Mem541[ds:0x2E4F:word16] = Mem536[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B45:
	Mem548[ds:0x2E4F:word16] = Mem536[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B56:
	branch (Mem550[ds:0x466A:word16] | Mem550[ds:0x466C:word16]) == 0x0000 l0800_7BC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B5F:
	selector ds_571
	Mem580[ds_571:0x2E29:word16] = fn0800_3E27(ds, SEQ(Mem550[ds:0x29DD:word16], Mem563[ds:0x29DB:word16]), out cx_860, out dx_861, out di_862, out ds_571)
	selector ds_591
	Mem600[ds_591:0x2E2B:word16] = fn0800_3E27(ds_571, SEQ(Mem580[ds_571:0x29DD:word16], Mem583[ds_571:0x29DB:word16]), out cx_863, out dx_864, out di_590, out ds_591)
	fn0800_8407(ds_591, Mem605[ds_591:0x2E2B:word16], SEQ(ds_591, 0x284F))
	fn0800_8407(ds_591, Mem624[ds_591:0x2E29:word16], SEQ(ds_591, 0x278F))
	Mem639[ds_591:0x2E29:word16] = Mem627[ds_591:0x2E29:word16] + 0x0002
	word16 v40_641 = Mem639[ds_591:0x467A:word16] + Mem639[ds_591:0x2E29:word16]
	Mem642[ds_591:0x467A:word16] = v40_641
	Mem646[ds_591:0x467C:word16] = Mem642[ds_591:0x467C:word16] + (v40_641 <u 0x0000)
	ds = ds_591
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BB5:
	word16 ax_650 = Mem649[ds:0x2E29:word16]
	Mem652[ds:0x2E29:word16] = Mem649[ds:0x2E29:word16] - 0x0001
	branch ax_650 != 0x0000 l0800_7BB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BB2:
	fn0800_8359(ds, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_7C78(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_7C78_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C78:
	word32 dwLoc06_716 = SEQ(Mem13[ds:0x4664:word16], Mem13[ds:0x4662:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E6D:
	word16 ax_21 = Mem20[ds:0x467C:word16]
	word16 dx_22 = Mem20[ds:0x467A:word16]
	branch ax_21 >=u Mem20[ds:0x4680:word16] l0800_7E7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7D:
	branch ax_21 != Mem20[ds:0x4680:word16] l0800_7E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7F:
	branch dx_22 >=u Mem20[ds:0x467E:word16] l0800_7E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E88:
	Mem33[ds:0x2E43:word16] = Mem20[ds:0x2E43:word16] << 0x08 - Mem20[ds:0x2E45:byte]
	branch Mem33[ds:0x2E45:word16] != 0x0000 l0800_7EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E99:
	branch Mem33[ds:0x4E82:word16] == 0x0000 l0800_7EAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EA0:
	ax_21 = (word16) fn0800_8624(ds, SLICE(DPB(ax_21, Mem33[ds:0x2E43:byte], 0), byte, 0), out di_56, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EAA:
	dsOut = ds
	return (byte) ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7C78_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E85:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C8F:
	selector ds_120 = fn0800_7FDC(ds)
	fn0800_ACB3(ds_120, SEQ(Mem102[ds_120:0x29E5:word16], Mem105[ds_120:0x29E3:word16]), dwLoc06_716, 0x0000, out cx_720, out dx_721, out bx_722)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DCD:
	word16 ax_122 = Mem121[ds_120:0x466A:word16]
	word16 dx_123 = Mem121[ds_120:0x466C:word16]
	word16 v17_124 = Mem121[ds_120:0x466A:word16] - 0x0001
	Mem125[ds_120:0x466A:word16] = v17_124
	Mem129[ds_120:0x466C:word16] = Mem125[ds_120:0x466C:word16] - (v17_124 <u 0x0000)
	branch (ax_122 | dx_123) == 0x0000 l0800_7DE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DE5:
	fn0800_854B(ds_120, 0x000F, 0x0004)
	fn0800_8600(ds_120, SLICE(DPB(ax_142, 0x00, 0), byte, 0), out ds)
	word16 ax_166 = Mem153[ds:0x467C:word16]
	word16 dx_167 = Mem153[ds:0x467A:word16]
	branch ax_166 >u Mem153[ds:0x4680:word16] l0800_7E1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E09:
	branch ax_166 <u Mem153[ds:0x4680:word16] l0800_7E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E0B:
	branch dx_167 >=u Mem153[ds:0x467E:word16] l0800_7E1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E1E:
	fn0800_854B(ds, 0x0000, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E11:
	fn0800_854B(ds, 0x0001, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E2B:
	word16 ax_184
	branch Mem209[ds:0x2E45:word16] != 0x0000 l0800_7E4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E32:
	word16 si_212 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E48:
	branch Mem216[ds:0x4E82:word16] != 0x0000 l0800_7E36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E36:
	ax_184 = (word16) fn0800_8624(ds, SLICE(DPB(ax_184, Mem216[ds:si_212 + 0x0000:byte], 0), byte, 0), out di_732, out ds)
	Mem244[ds:0x4E82:word16] = Mem229[ds:0x4E82:word16] - 0x0001
	si_212 = si_212 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E4F:
	word16 v31_248 = Mem247[ds:0x29F7:word16] + 0x0001
	Mem249[ds:0x29F7:word16] = v31_248
	Mem253[ds:0x29F9:word16] = Mem249[ds:0x29F9:word16] + (v31_248 <u 0x0000)
	word16 dx_268
	dwLoc06_716 = SEQ(dx_268, fn0800_AD2F(ds, SEQ(Mem253[ds:0x29E5:word16], Mem261[ds:0x29E3:word16]), out dx_268)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DE2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CAC:
	word16 ax_290 = fn0800_3E27(ds_120, SEQ(Mem129[ds_120:0x29DD:word16], Mem286[ds_120:0x29DB:word16]), out cx_723, out dx_724, out di_725, out ds_120)
	Mem302[ds_120:0x2E47:word16] = ax_290
	word16 v25_303 = Mem302[ds_120:0x467A:word16] + ax_290
	Mem304[ds_120:0x467A:word16] = v25_303
	Mem308[ds_120:0x467C:word16] = Mem304[ds_120:0x467C:word16] + (v25_303 <u 0x0000)
	fn0800_7EAF(ds_120, ax_290)
	branch (Mem311[ds_120:0x466A:word16] | Mem311[ds_120:0x466C:word16]) != 0x0000 l0800_7CD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CD9:
	selector ds_332
	Mem341[ds_332:0x2E29:word16] = fn0800_3E27(ds_120, SEQ(Mem311[ds_120:0x29DD:word16], Mem324[ds_120:0x29DB:word16]), out cx_726, out dx_727, out di_728, out ds_332)
	selector ds_352
	word16 ax_348 = fn0800_3E27(ds_332, SEQ(Mem341[ds_332:0x29DD:word16], Mem344[ds_332:0x29DB:word16]), out cx_729, out dx_730, out di_731, out ds_352)
	Mem360[ds_352:0x2E2B:word16] = ax_348
	branch Mem360[ds_352:0x2E29:word16] != 0x0000 l0800_7D1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D1D:
	branch Mem360[ds_352:0x2E29:word16] >=u 0x0007 l0800_7D68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D68:
	fn0800_854B(ds_352, 0x000F, 0x0004)
	selector ds_388
	fn0800_8600(ds_352, SLICE(DPB(ax_371, Mem370[ds_352:0x2E29:byte] - 0x06, 0), byte, 0), out ds_388)
	word16 bx_396 = Mem383[ds_388:0x2E2B:word16]
	byte al_401 = Mem383[ds_388:(bx_396 >>u 0x08) + 0x21F2:byte]
	fn0800_854B(ds_388, DPB(DPB(DPB(DPB(ax_384, al_401, 0), 0x00, 8), Mem406[ds_388:(bx_396 >>u 0x08) + 0x21E2:byte], 0), 0x00, 8), DPB(DPB(ax_384, al_401, 0), 0x00, 8))
	fn0800_8600(ds_388, SLICE(DPB(ax_415, Mem414[ds_388:0x2E2B:byte] & 0xFF, 0), byte, 0), out ds_120)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D24:
	word16 bx_442 = Mem360[ds_352:0x2E29:word16]
	byte al_443 = Mem360[ds_352:bx_442 + 0x21DB:byte]
	fn0800_854B(ds_352, DPB(DPB(DPB(DPB(ax_348, al_443, 0), 0x00, 8), Mem448[ds_352:bx_442 + 0x21D4:byte], 0), 0x00, 8), DPB(DPB(ax_348, al_443, 0), 0x00, 8))
	word16 bx_464 = Mem456[ds_352:0x2E2B:word16]
	byte al_469 = Mem456[ds_352:(bx_464 >>u 0x08) + 0x21F2:byte]
	fn0800_854B(ds_352, DPB(DPB(DPB(DPB(ax_457, al_469, 0), 0x00, 8), Mem474[ds_352:(bx_464 >>u 0x08) + 0x21E2:byte], 0), 0x00, 8), DPB(DPB(ax_457, al_469, 0), 0x00, 8))
	fn0800_8600(ds_352, SLICE(DPB(ax_483, Mem482[ds_352:0x2E2B:byte] & 0xFF, 0), byte, 0), out ds_120)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D02:
	fn0800_854B(ds_352, 0x0006, 0x0003)
	fn0800_8600(ds_352, SLICE(DPB(ax_516, Mem515[ds_352:0x2E2B:byte], 0), byte, 0), out ds_120)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DAC:
	Mem544[ds_120:0x2E29:word16] = Mem542[ds_120:0x2E29:word16] + 0x0002
	word16 v36_546 = Mem544[ds_120:0x467A:word16] + Mem544[ds_120:0x2E29:word16]
	Mem547[ds_120:0x467A:word16] = v36_546
	Mem551[ds_120:0x467C:word16] = Mem547[ds_120:0x467C:word16] + (v36_546 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DC2:
	word16 ax_555 = Mem554[ds_120:0x2E29:word16]
	Mem557[ds_120:0x2E29:word16] = Mem554[ds_120:0x2E29:word16] - 0x0001
	branch ax_555 != 0x0000 l0800_7DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DBF:
	fn0800_8359(ds_120, out ds_120)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_7EAF(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO Top
// Preserved: ax bp bx cx di ds dx es si sp
fn0800_7EAF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EAF:
	word16 si_134 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD1:
	word16 si_133 = si_134
	branch si_134 == 0x0000 l0800_7FD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7EAF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EBA:
	branch si_134 >=u 0x000C l0800_7F32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F32:
	branch (si_133 & 0x0003) != 0x0000 l0800_7EFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EFD:
	fn0800_854B(ds, 0x0000, 0x0001)
	selector ds_59
	word16 ax_55 = (word16) fn0800_8359(ds, out ds_59)
	fn0800_8600(ds_59, SLICE(DPB(ax_55, (byte) ax_55 ^ Mem45[ds_59:0x2E4F:byte], 0), byte, 0), out ds)
	branch (Mem72[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F2D:
	Mem89[ds:0x2E4F:word16] = Mem72[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F20:
	Mem96[ds:0x2E4F:word16] = Mem72[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F31:
	si_133 = si_133 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F38:
	fn0800_854B(ds, 0x0017, 0x0005)
	branch si_133 <u 0x0048 l0800_7F8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F8F:
	fn0800_854B(ds, si_133 - 0x000C >>u 0x0002, 0x0004)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FB4:
	si_134 = si_133
	branch si_133 != 0x0000 l0800_7FA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FA5:
	selector ds_144
	word16 ax_140 = (word16) fn0800_8359(ds, out ds_144)
	fn0800_8600(ds_144, SLICE(DPB(ax_140, (byte) ax_140 ^ Mem152[ds_144:0x2E4F:byte], 0), byte, 0), out ds)
	si_133 = si_133 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FB8:
	branch (Mem152[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7FCD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FCD:
	Mem179[ds:0x2E4F:word16] = Mem152[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FC0:
	Mem186[ds:0x2E4F:word16] = Mem152[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F4B:
	fn0800_854B(ds, 0x000F, 0x0004)
	word16 di_200 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F6C:
	branch di_200 != 0x0048 l0800_7F5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F5D:
	selector ds_212
	word16 ax_208 = (word16) fn0800_8359(ds, out ds_212)
	di_200 = fn0800_8600(ds_212, SLICE(DPB(ax_208, (byte) ax_208 ^ Mem220[ds_212:0x2E4F:byte], 0), byte, 0), out ds) + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F71:
	branch (Mem220[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F86:
	Mem247[ds:0x2E4F:word16] = Mem220[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F79:
	Mem254[ds:0x2E4F:word16] = Mem220[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F8A:
	si_134 = si_133 - 0x0048
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EBF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF6:
	si_134 = si_133
	branch si_133 != 0x0000 l0800_7EC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EC1:
	fn0800_854B(ds, 0x0000, 0x0001)
	selector ds_287
	word16 ax_283 = (word16) fn0800_8359(ds, out ds_287)
	fn0800_8600(ds_287, SLICE(DPB(ax_283, (byte) ax_283 ^ Mem273[ds_287:0x2E4F:byte], 0), byte, 0), out ds)
	branch (Mem300[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7EF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF1:
	Mem317[ds:0x2E4F:word16] = Mem300[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EE4:
	Mem324[ds:0x2E4F:word16] = Mem300[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF5:
	si_133 = si_133 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EFA:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_7FDC(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_7FDC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FDC:
	Mem11[ds:0x466C:word16] = 0x0000
	Mem12[ds:0x466A:word16] = 0x0000
	Mem13[ds:0x2E47:word16] = 0x0000
	word16 dx_15 = Mem13[ds:0x2A0B:word16]
	Mem16[ds:0x4670:word16] = Mem13[ds:0x2A0D:word16]
	Mem17[ds:0x466E:word16] = dx_15
	fn0800_ACB3(ds, SEQ(Mem35[ds:0x29E5:word16], Mem38[ds:0x29E3:word16]), SEQ(Mem20[ds:0x4664:word16], Mem20[ds:0x4662:word16]) + SEQ(Mem20[ds:0x467C:word16], Mem20[ds:0x467A:word16]) + SEQ(Mem20[ds:0x4674:word16], Mem20[ds:0x4672:word16]), 0x0000, out cx_816, out dx_817, out bx_818)
	fn0800_ACB3(ds, SEQ(Mem60[ds:0x29DD:word16], Mem63[ds:0x29DB:word16]), 0x00000000, 0x0000, out cx_819, out dx_820, out bx_821)
	word16 sp_133 = fp - 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82A1:
	branch (Mem79[ds:0x4676:word16] | Mem79[ds:0x4678:word16]) == 0x0000 l0800_82AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82AD:
	branch (Mem79[ds:0x4672:word16] | Mem79[ds:0x4674:word16]) == 0x0000 l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82B6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82AA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8042:
	word16 dx_94 = 0xFFFF - Mem79[ds:0x2E31:word16]
	ui32 ax_dx_628 = SEQ(0x0000 - (dx_94 <u 0x0000), dx_94) - SEQ(Mem79[ds:0x4674:word16], Mem79[ds:0x4672:word16])
	word16 dx_98 = (word16) ax_dx_628
	word16 ax_101 = SLICE(ax_dx_628, word16, 16)
	word16 ax_108 = Mem107[ds:0x4678:word16]
	word16 dx_109 = Mem107[ds:0x4676:word16]
	word32 dwLoc06_812 = ax_dx_628
	branch ax_108 >u ax_101 l0800_807C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8068:
	branch ax_108 <u ax_101 l0800_806F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_806A:
	dwLoc06_812 = ax_dx_628 (alias)
	branch dx_109 >=u dx_98 l0800_807C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_806F:
	dwLoc06_812 = SEQ(Mem107[ds:0x4678:word16], Mem107[ds:0x4676:word16]) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_807C:
	word16 dx_127 = Mem124[ds:0x2E71:word16] + Mem124[ds:0x2E31:word16]
	Mem128[ds:0x2E6F:word16] = Mem124[ds:0x2E73:word16]
	Mem129[ds:0x2E6D:word16] = dx_127
	word16 sp_135 = sp_133 - 2
	Mem137[ss:sp_135:word16] = Mem129[ds:0x29E5:word16]
	Mem140[ss:sp_135 - 2:word16] = Mem137[ds:0x29E3:word16]
	Mem144[ss:sp_135 - 4:word16] = SLICE(dwLoc06_812, word16, 16)
	Mem147[ss:sp_135 - 6:word16] = SLICE(dwLoc06_812, word16, 0)
	word16 ax_149 = Mem147[ds:0x2E6D:word16] + Mem147[ds:0x4672:word16]
	Mem153[ss:sp_135 - 8:word16] = Mem147[ds:0x2E73:word16]
	Mem155[ss:sp_135 - 10:word16] = ax_149
	fn0800_4110(ds, Mem155[ss:sp_135 - 10:word32], Mem155[ss:sp_135 - 6:word16], Mem155[ss:sp_135 - 4:word16], Mem155[ss:sp_135 - 2:word32], out si_163, out di_822, out ds)
	Mem172[ds:0x4676:word16] = v27_171
	ui32 v28_v27_630 = SEQ(Mem172[ds:0x4678:word16], Mem155[ds:0x4676:word16]) - dwLoc06_812
	Mem176[ds:0x4678:word16] = SLICE(v28_v27_630, word16, 16)
	Mem178[ds:0x4672:word16] = v29_177
	ui32 v30_v29_632 = SEQ(Mem178[ds:0x4674:word16], Mem176[ds:0x4672:word16]) + dwLoc06_812
	Mem182[ds:0x4674:word16] = SLICE(v30_v29_632, word16, 16)
	word16 ax_183 = Mem182[ds:0x2E6F:word16]
	word16 dx_185 = Mem182[ds:0x2E6D:word16] + Mem182[ds:0x4672:word16]
	Mem186[ds:0x2E67:word16] = ax_183
	Mem187[ds:0x2E65:word16] = dx_185
	Mem188[ds:0x2E6B:word16] = ax_183
	Mem189[ds:0x2E69:word16] = dx_185
	word16 sp_168 = sp_135 + 0x0002
	word16 v27_171 = (word16) v28_v27_630
	word16 v29_177 = (word16) v30_v29_632
	word16 ax_190 = Mem189[ds:0x4670:word16]
	word16 dx_191 = Mem189[ds:0x466E:word16]
	branch ax_190 <=u Mem189[ds:0x4674:word16] l0800_80ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80ED:
	branch ax_190 <u Mem189[ds:0x4674:word16] l0800_80F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80EF:
	branch dx_191 <u Mem189[ds:0x4672:word16] l0800_80F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80F8:
	word16 dx_201 = Mem189[ds:0x2E6D:word16] + Mem189[ds:0x466E:word16]
	Mem203[ds:0x2E67:word16] = Mem189[ds:0x2E6F:word16]
	Mem204[ds:0x2E65:word16] = dx_201
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80F5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81E9:
	branch Mem206[ds:0x2E65:word16] - 0x0001 <=u Mem206[ds:0x2E6D:word16] l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81F3:
	branch Mem206[ds:0x466C:word16] >=u 0x0000 l0800_81FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FD:
	branch Mem206[ds:0x466C:word16] != 0x0000 l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FF:
	branch Mem206[ds:0x466A:word16] >=u 0xFFFE l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8206:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_810D:
	fn0800_8832(ds)
	branch Mem206[ds:0x2E29:word16] <u 0x0002 l0800_8193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8193:
	word16 sp_233 = sp_829 - 2
	Mem236[ss:sp_233:word16] = 0x0001
	fn0800_89A8(ds, Mem236[ss:sp_233:word16])
	Mem250[ds:0x2E47:word16] = Mem236[ds:0x2E47:word16] + 0x0001
	Mem252[ds:0x465C:word16] = Mem250[ds:0x465C:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8117:
	branch Mem206[ds:0x2E6D:word16] + Mem206[ds:0x2E29:word16] <=u Mem206[ds:0x2E65:word16] l0800_813F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8124:
	branch (Mem206[ds:0x466A:word16] | Mem206[ds:0x466C:word16]) == 0x0000 l0800_8130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8130:
	Mem270[ds:0x2E29:word16] = Mem206[ds:0x2E65:word16] - Mem206[ds:0x2E6D:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_813F:
	word16 sp_272 = sp_829 - 2
	Mem275[ss:sp_272:word16] = ds
	Mem278[ss:sp_272 - 2:word16] = 0x290F
	Mem281[ss:sp_272 - 4:word16] = Mem278[ds:0x2E47:word16]
	selector ds_286 = fn0800_831D(ds, Mem281[ss:sp_272 - 4:word16], Mem281[ss:sp_272 - 2:segptr32])
	Mem295[ss:sp_272:word16] = ds_286
	Mem298[ss:sp_272 - 2:word16] = 0x278F
	Mem303[ss:sp_272 - 4:word16] = Mem298[ds_286:0x2E29:word16] - 0x0002
	selector ds_308 = fn0800_831D(ds_286, Mem303[ss:sp_272 - 4:word16], Mem303[ss:sp_272 - 2:segptr32])
	Mem318[ss:sp_272:word16] = ds_308
	Mem321[ss:sp_272 - 2:word16] = 0x284F
	Mem326[ss:sp_272 - 4:word16] = Mem321[ds_308:0x2E2B:word16] - 0x0001
	ds = fn0800_831D(ds_308, Mem326[ss:sp_272 - 4:word16], Mem326[ss:sp_272 - 2:segptr32])
	Mem342[ss:sp_272:word16] = Mem326[ds:0x2E29:word16]
	fn0800_89A8(ds, Mem342[ss:sp_272:word16])
	word16 v40_354 = Mem342[ds:0x466A:word16] + 0x0001
	Mem355[ds:0x466A:word16] = v40_354
	Mem359[ds:0x466C:word16] = Mem355[ds:0x466C:word16] + (v40_354 <u 0x0000)
	Mem360[ds:0x2E47:word16] = 0x0000
	Mem363[ds:0x465C:word16] = Mem360[ds:0x465C:word16] + Mem360[ds:0x2E29:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81A5:
	sp_168 = sp_829
	sp_829 = sp_168
	branch Mem366[ds:0x465C:word16] <u 0x0400 l0800_81E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81AD:
	word16 v45_370 = Mem366[ds:0x4666:word16] + Mem366[ds:0x465C:word16]
	Mem371[ds:0x4666:word16] = v45_370
	Mem375[ds:0x4668:word16] = Mem371[ds:0x4668:word16] + (v45_370 <u 0x0000)
	word16 sp_378 = sp_829 - 2
	Mem380[ss:sp_378:word16] = Mem375[ds:0x4680:word16]
	Mem383[ss:sp_378 - 2:word16] = Mem380[ds:0x467E:word16]
	word16 dx_391
	word16 ax_390 = fn0800_8F18(0x0063, Mem383[ds:0x4668:word16], 0x0000, Mem383[ds:0x4666:word16], out ch_826, out dx_391)
	Mem398[ss:sp_378 - 4:word16] = dx_391
	Mem400[ss:sp_378 - 6:word16] = ax_390
	word16 bx_402
	word16 cx_403
	word16 dx_404
	word16 ax_401 = fn0800_8BC2(Mem400[ss:sp_378 - 6:word32], Mem400[ss:sp_378 - 2:word16], Mem400[ss:sp_378:word16], out cx_403, out dx_404, out bx_402)
	word16 sp_405 = <invalid>
	Mem412[ss:sp_405 + 0x0006:word16] = dx_404
	Mem414[ss:sp_405 + 0x0004:word16] = ax_401
	Mem416[ss:sp_405 + 0x0002:word16] = ds
	Mem419[ss:sp_405:word16] = 0x2244
	fn0800_B2EF(cx_403, dx_404, bx_402, ds, Mem419[ss:sp_405:word32], out si_827, out di_828)
	Mem430[ds:0x465C:word16] = 0x0000
	sp_168 = sp_405 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_812D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8209:
	word16 ax_435 = Mem206[ds:0x2E69:word16] - Mem206[ds:0x2E6D:word16]
	Mem439[ds:0x4674:word16] = 0x0000 - (ax_435 <u 0x0000)
	Mem440[ds:0x4672:word16] = ax_435
	word16 ax_443 = Mem440[ds:0x2E6D:word16] - Mem440[ds:0x2E71:word16]
	word16 ax_447 = ax_443 - Mem440[ds:0x2E31:word16]
	word16 ax_461 = Mem459[ds:0x2E71:word16] + ax_447
	word16 sp_472 = sp_829 - 2
	Mem473[ss:sp_472:word16] = Mem459[ds:0x2E6D:word16] - ax_461 + Mem459[ds:0x4672:word16]
	Mem476[ss:sp_472 - 2:word16] = Mem473[ds:0x2E73:word16]
	Mem478[ss:sp_472 - 4:word16] = ax_461
	Mem481[ss:sp_472 - 6:word16] = Mem478[ds:0x2E73:word16]
	Mem484[ss:sp_472 - 8:word16] = Mem481[ds:0x2E71:word16]
	fn0800_B0F3(Mem484[ss:sp_472 - 8:word32], Mem484[ss:sp_472 - 4:word32], Mem484[ss:sp_472:word16])
	word16 dx_450 = 0x0000 - (ax_443 <u 0x0000) - (ax_447 <u 0x0000)
	sp_133 = sp_472 + 0x0002
	branch Mem484[ds:0x2E65:word16] <u Mem484[ds:0x2E69:word16] l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8269:
	word16 dx_500 = Mem484[ds:0x2E65:word16]
	branch Mem484[ds:0x2E67:word16] != Mem484[ds:0x2E6B:word16] l0800_8285
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8276:
	branch dx_500 != Mem484[ds:0x2E69:word16] l0800_8285
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_827C:
	branch (Mem484[ds:0x4676:word16] | Mem484[ds:0x4678:word16]) == 0x0000 l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8285:
	branch Mem484[ds:0x466C:word16] != 0x0000 l0800_8293
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_828C:
	branch Mem484[ds:0x466A:word16] == 0xFFFE l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82B9:
	word16 dx_519 = Mem517[ds:0x2E65:word16]
	branch Mem517[ds:0x2E67:word16] != Mem517[ds:0x2E6B:word16] l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82C6:
	branch dx_519 != Mem517[ds:0x2E69:word16] l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82CC:
	branch (Mem517[ds:0x4676:word16] | Mem517[ds:0x4678:word16]) != 0x0000 l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82D5:
	branch Mem517[ds:0x466C:word16] != 0x0000 l0800_82E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82DC:
	branch Mem517[ds:0x466A:word16] == 0xFFFE l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82E3:
	Mem538[ds:0x2E47:word16] = Mem517[ds:0x2E47:word16] + Mem517[ds:0x4672:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82ED:
	word16 sp_543 = sp_133 - 2
	Mem549[ss:sp_543:word16] = ds
	Mem552[ss:sp_543 - 2:word16] = 0x290F
	Mem555[ss:sp_543 - 4:word16] = Mem552[ds:0x2E47:word16]
	selector ds_560 = fn0800_831D(ds, Mem555[ss:sp_543 - 4:word16], Mem555[ss:sp_543 - 2:segptr32])
	word16 v18_568 = Mem555[ds_560:0x466A:word16] + 0x0001
	Mem569[ds_560:0x466A:word16] = v18_568
	Mem573[ds_560:0x466C:word16] = Mem569[ds_560:0x466C:word16] + (v18_568 <u 0x0000)
	Mem578[ss:sp_543:word16] = 0x0000
	Mem580[ss:sp_543 - 2:word16] = 0x0000
	Mem582[ss:sp_543 - 4:word16] = 0x0000
	Mem585[ss:sp_543 - 6:word16] = Mem582[ds_560:0x29DD:word16]
	Mem588[ss:sp_543 - 8:word16] = Mem585[ds_560:0x29DB:word16]
	fn0800_ACB3(ds_560, Mem588[ss:sp_543 - 8:segptr32], Mem588[ss:sp_543 - 4:ui32], Mem588[ss:sp_543:word16], out cx_823, out dx_824, out bx_825)
	return ds_560
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7FDC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8293:
	Mem614[ds:0x466E:word16] = v36_613
	ui32 v37_v36_634 = SEQ(Mem614[ds:0x4670:word16], Mem484[ds:0x466E:word16]) - SEQ(dx_450, ax_447)
	Mem618[ds:0x4670:word16] = SLICE(v37_v36_634, word16, 16)
	word16 v36_613 = (word16) v37_v36_634
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_831D(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_831D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_831D:
	word16 ax_15
	branch wArg02 <=u 0x0001 l0800_8332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8332:
	ax_15 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8329:
	ax_15 = fn0800_0C08(wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8334:
	selector es_38 = SLICE(ptrArg04, selector, 16)
	word16 bx_37 = (word16) (ptrArg04 + ax_15 *s 0x000C)
	word16 v14_39 = Mem33[es_38:bx_37:word16] + 0x0001
	Mem40[es_38:bx_37:word16] = v14_39
	Mem44[es_38:bx_37 + 0x0002:word16] = Mem40[es_38:bx_37 + 0x0002:word16] + (v14_39 <u 0x0000)
	selector ds_62
	fn0800_401E(ds, wArg02, SEQ(Mem44[ds:0x29DD:word16], Mem51[ds:0x29DB:word16]), out cx_92, out dx_93, out bx_94, out di_95, out ds_62)
	return ds_62
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_831D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8359(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8359_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8359:
	selector ds_24
	word16 ax_18 = fn0800_3DCF(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out ch_69, out dx_70, out di_71, out ds_24)
	byte al_30 = (byte) ax_18
	word16 ax_44 = Mem31[ds_24:((DPB(DPB(ax_18, Mem31[ds_24:0x2E4B:byte] ^ al_30, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem31[ds_24:0x2E4B:word16] >>u 0x08
	Mem45[ds_24:0x2E4B:word16] = ax_44
	word16 v17_46 = Mem45[ds_24:0x29FF:word16] + 0x0001
	Mem47[ds_24:0x29FF:word16] = v17_46
	Mem51[ds_24:0x2A01:word16] = Mem47[ds_24:0x2A01:word16] + (v17_46 <u 0x0000)
	dsOut = ds_24
	return (byte) DPB(ax_44, al_30, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8359_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_83A1(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp di si sp
fn0800_83A1_entry:
	selector psegArg04_131 = SLICE(ptrArg02, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83A1:
	word16 di_17 = wArg06
	word16 si_18 = wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83C4:
	word16 wArg02_110 = SLICE(ptrArg02, word16, 0)
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_83B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83B0:
	branch Mem16[SLICE(ptrArg02, selector, 16):(word16) (ptrArg02 + si_18 *s 0x000C) + 0x000A:word16] != 0x0000 l0800_83CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83C3:
	di_17 = di_17 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83CB:
	fn0800_8489(ds, di_17, 0x0005)
	word16 si_60 = 0x0000
	word16 wLoc04_111 = wArg02_110 + 0x000A
	branch di_17 <=u 0x0000 l0800_8401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83E5:
	fn0800_8489(ds, Mem71[psegArg04_131:wLoc04_111:word16], 0x0004)
	wLoc04_111 = wLoc04_111 + 0x000C
	si_60 = si_60 + 0x0001
	branch si_60 <u di_17 l0800_83E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8401:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_83A1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8407(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_8407_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8407:
	word16 ax_19
	branch wArg02 <=u 0x0001 l0800_8420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8420:
	ax_19 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8417:
	ax_19 = fn0800_0C08(wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8422:
	selector es_44 = SLICE(ptrArg04, selector, 16)
	word16 bx_41 = (word16) (ptrArg04 + ax_19 *s 0x000C)
	fn0800_8489(ds, Mem48[es_44:bx_41 + 0x0006:word16], Mem35[es_44:bx_41 + 0x000A:word16])
	byte bLoc04_104 = SLICE(ax_19, byte, 0)
	branch ax_19 <=u 0x0001 l0800_845F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8445:
	fn0800_8489(ds, wArg02 - (0x0001 << bLoc04_104 - 0x01), ax_19 - 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_845F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8407_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_8465_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8465:
	branch Mem7[ds:0x2A21:word16] != 0x0002 l0800_847F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_847F:
	fn0800_8489(ds, wArg02, wArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8475:
	fn0800_854B(ds, wArg02, wArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8465_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8489(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: bp bx cx di ds dx es si sp
fn0800_8489_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8489:
	word16 di_111 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_853A:
	wArg04 = wArg04 - 0x0001
	branch wArg04 == 0x0000 l0800_8547
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8547:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8489_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8544:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8494:
	Mem35[ds:0x2E43:word16] = Mem21[ds:0x2E43:word16] >>u 0x0001
	branch (di_111 & 0x0001) == 0x0000 l0800_84A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_849E:
	Mem41[ds:0x2E43:word16] = Mem35[ds:0x2E43:word16] | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84A4:
	Mem49[ds:0x2E45:word16] = Mem47[ds:0x2E45:word16] + 0x0001
	di_111 = di_111 >>u 0x0001
	word16 ax_50 = Mem49[ds:0x2E45:word16]
	branch ax_50 == 0x0010 l0800_84B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84B5:
	selector ds_64
	fn0800_8624(ds, SLICE(DPB(ax_50, Mem49[ds:0x2E43:byte], 0), byte, 0), out di_249, out ds_64)
	word16 ax_103 = (word16) fn0800_8624(ds_64, SLICE(Mem58[ds_64:0x2E43:word16] >>u 0x08, byte, 0), out di_111, out ds)
	word16 si_89 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84E3:
	branch Mem93[ds:0x4E82:word16] != 0x0000 l0800_84D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84D1:
	ax_103 = (word16) fn0800_8624(ds, SLICE(DPB(ax_103, Mem93[ds:si_89 + 0x0000:byte], 0), byte, 0), out di_111, out ds)
	Mem121[ds:0x4E82:word16] = Mem106[ds:0x4E82:word16] - 0x0001
	si_89 = si_89 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84EA:
	word16 ax_123 = Mem93[ds:0x2A01:word16]
	word16 dx_124 = Mem93[ds:0x29FF:word16]
	branch ax_123 <u Mem93[ds:0x2A05:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84F7:
	branch ax_123 >u Mem93[ds:0x2A05:word16] l0800_84FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84F9:
	branch dx_124 <=u Mem93[ds:0x2A03:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84FF:
	ui32 ax_dx_177 = SEQ(Mem93[ds:0x2A01:word16], Mem93[ds:0x29FF:word16]) - SEQ(Mem93[ds:0x2A05:word16], Mem93[ds:0x2A03:word16])
	word16 dx_134 = (word16) ax_dx_177
	word16 ax_137 = SLICE(ax_dx_177, word16, 16)
	branch ax_137 <u Mem93[ds:0x4E8A:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8514:
	branch ax_137 >u Mem93[ds:0x4E8A:word16] l0800_851C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8516:
	branch dx_134 <=u Mem93[ds:0x4E88:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_851C:
	ui32 ax_dx_179 = SEQ(Mem93[ds:0x2A01:word16], Mem93[ds:0x29FF:word16]) - SEQ(Mem93[ds:0x2A05:word16], Mem93[ds:0x2A03:word16])
	Mem152[ds:0x4E8A:word16] = SLICE(ax_dx_179, word16, 16)
	Mem153[ds:0x4E88:word16] = (word16) ax_dx_179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8532:
	Mem158[ds:0x2E45:word16] = 0x0000
	Mem159[ds:0x2E43:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84B2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_854B(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax cx Top
// Preserved: bp bx di ds dx es si sp
fn0800_854B_entry:
	byte bArg04 = SLICE(wArg04, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_854B:
	word16 di_158 = 0x0001 << bArg04 - 0x01
	word16 wArg04_169 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85EF:
	wArg04_169 = wArg04_169 - 0x0001
	branch wArg04_169 == 0x0000 l0800_85FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85FC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_854B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85F9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_855D:
	Mem39[ds:0x2E43:word16] = Mem25[ds:0x2E43:word16] << 0x0001
	branch (wArg02 & di_158) == 0x0000 l0800_856A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8566:
	Mem45[ds:0x2E43:word16] = Mem39[ds:0x2E43:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_856A:
	Mem52[ds:0x2E45:word16] = Mem50[ds:0x2E45:word16] + 0x0001
	di_158 = di_158 >>u 0x0001
	word16 ax_53 = Mem52[ds:0x2E45:word16]
	branch ax_53 != 0x0008 l0800_85EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8578:
	word16 ax_62 = (word16) fn0800_8624(ds, SLICE(DPB(ax_53, Mem52[ds:0x2E43:byte], 0), byte, 0), out di_158, out ds)
	word16 si_74 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8598:
	branch Mem78[ds:0x4E82:word16] != 0x0000 l0800_8586
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8586:
	ax_62 = (word16) fn0800_8624(ds, SLICE(DPB(ax_62, Mem78[ds:si_74 + 0x0000:byte], 0), byte, 0), out di_158, out ds)
	Mem106[ds:0x4E82:word16] = Mem91[ds:0x4E82:word16] - 0x0001
	si_74 = si_74 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_859F:
	word16 ax_108 = Mem78[ds:0x2A01:word16]
	word16 dx_109 = Mem78[ds:0x29FF:word16]
	branch ax_108 <u Mem78[ds:0x2A05:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85AC:
	branch ax_108 >u Mem78[ds:0x2A05:word16] l0800_85B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85AE:
	branch dx_109 <=u Mem78[ds:0x2A03:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85B4:
	ui32 ax_dx_162 = SEQ(Mem78[ds:0x2A01:word16], Mem78[ds:0x29FF:word16]) - SEQ(Mem78[ds:0x2A05:word16], Mem78[ds:0x2A03:word16])
	word16 dx_119 = (word16) ax_dx_162
	word16 ax_122 = SLICE(ax_dx_162, word16, 16)
	branch ax_122 <u Mem78[ds:0x4E8A:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85C9:
	branch ax_122 >u Mem78[ds:0x4E8A:word16] l0800_85D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85CB:
	branch dx_119 <=u Mem78[ds:0x4E88:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85D1:
	ui32 ax_dx_164 = SEQ(Mem78[ds:0x2A01:word16], Mem78[ds:0x29FF:word16]) - SEQ(Mem78[ds:0x2A05:word16], Mem78[ds:0x2A03:word16])
	Mem137[ds:0x4E8A:word16] = SLICE(ax_dx_164, word16, 16)
	Mem138[ds:0x4E88:word16] = (word16) ax_dx_164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85E7:
	Mem143[ds:0x2E45:word16] = 0x0000
	Mem144[ds:0x2E43:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8600(selector ds, byte bArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8600:
	word16 dx_15 = DPB(dx, bArg02, 0)
	branch Mem7[ds:0x2E45:word16] == 0x0000 l0800_861B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_861B:
	word16 di_21
	selector ds_22
	fn0800_8624(ds, SLICE(dx_15, byte, 0), out di_21, out ds_22)
	dsOut = ds_22
	return di_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_860D:
	Mem33[ds:Mem7[ds:0x4E82:word16] + 0x4682:byte] = bArg02
	Mem35[ds:0x4E82:word16] = Mem33[ds:0x4E82:word16] + 0x0001
	dsOut = ds
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8624(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: ax di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8624_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8624:
	word16 ax_10 = Mem7[ds:0x2A05:word16]
	word16 dx_11 = Mem7[ds:0x2A03:word16]
	branch ax_10 >u Mem7[ds:0x4E86:word16] l0800_8678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8634:
	branch ax_10 <u Mem7[ds:0x4E86:word16] l0800_863C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8636:
	branch dx_11 >=u Mem7[ds:0x4E84:word16] l0800_8678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_863C:
	ax_10 = Mem32[ds:((DPB(DPB(fn0800_4047(ds, SLICE(DPB(ax_10, bArg02, 0), byte, 0), SEQ(Mem7[ds:0x29E1:word16], Mem23[ds:0x29DF:word16]), out cx_35, out dx_111, out bx_112, out di, out ds), Mem32[ds:0x2E49:byte] ^ bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem32[ds:0x2E49:word16] >>u 0x08
	Mem58[ds:0x2E49:word16] = ax_10
	word16 v18_59 = Mem58[ds:0x2A03:word16] + 0x0001
	Mem60[ds:0x2A03:word16] = v18_59
	Mem64[ds:0x2A05:word16] = Mem60[ds:0x2A05:word16] + (v18_59 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8678:
	diOut = di
	dsOut = ds
	return (byte) ax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8624_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: bp ds sp
// Trashed: SCZDO bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_867A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_867A:
	word16 si_28
	word16 bx_27 = (word16) fn0800_87EF(SEQ(psegArg06, wArg04 + 0x0004), out si_28)
	byte al_38 = Mem33[psegArg06:si_28 + 0x000A:byte] * 0x02 + true
	selector ds_20 = psegArg06
	word16 di_190 = wArg08
	selector es_22 = psegArg0A
	word16 si_102 = si_28 + 0x000B
	byte al_116 = al_38 * 0x02
	word16 ax_242 = DPB(ax_26, al_38 * 0x02, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8745:
	byte al_42 = al_116 * 0x02
	bool Z_57 = SLICE(cond(al_42), bool, 2)
	al_116 = al_42
	branch al_42 <u 0x00 l0800_8751
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8749:
	Mem51[es_22:di_190:byte] = Mem47[ds_20:si_102:byte]
	si_102 = si_102 + 0x0001
	di_190 = di_190 + 0x0001
	al_116 = al_42 * 0x02
	Z_57 = SLICE(cond(al_42 * 0x02), bool, 2) (alias)
	branch al_42 * 0x02 >=u 0x00 l0800_8744
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8751:
	branch Z_57 l0800_873C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_873C:
	si_102 = si_102 + 0x0001
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_42 <u 0x00)
	branch al_116 <u 0x00 l0800_8753
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8741:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8744:
	Mem77[es_22:di_190:byte] = Mem71[ds_20:si_102:byte]
	ax_242 = DPB(ax_242, al_116, 0) (alias)
	si_102 = si_102 + 0x0001
	di_190 = di_190 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8753:
	byte al_84 = al_116 * 0x02
	word16 cx_147 = 0x0002
	byte bh_172 = 0x00
	bx_461 = DPB(bx_27, 0x00, 8) (alias)
	word16 bx_461 = DPB(bx_27, 0x00, 8)
	word16 bx_665 = DPB(bx_27, 0x00, 8)
	bool C_92 = SLICE(cond(al_84), bool, 1)
	branch al_84 == 0x00 l0800_879B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_879B:
	al_84 = Mem62[ds_20:si_102:byte] * 0x02 + (al_84 <u 0x00)
	si_102 = si_102 + 0x0001
	C_92 = SLICE(cond(al_84), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_875C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_875F:
	branch C_92 l0800_86E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86E6:
	byte al_107 = al_84 * 0x02
	bool C_106 = SLICE(cond(al_107), bool, 1)
	branch al_107 == 0x00 l0800_86BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86BC:
	al_107 = Mem62[ds_20:si_102:byte] * 0x02 + (al_107 <u 0x00)
	si_102 = si_102 + 0x0001
	C_106 = SLICE(cond(al_107), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86EA:
	al_116 = al_107 * 0x02
	cx_147 = DPB(0x0002, C_106 + 0x04, 0) (alias)
	bool C_124 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_86C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86C2:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_124 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F0:
	branch C_124 l0800_8701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F2:
	byte al_130 = al_116 * 0x02
	al_116 = al_130
	branch al_130 == 0x00 l0800_86C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86C8:
	si_102 = si_102 + 0x0001
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_130 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F9:
	byte cl_155 = (byte) (cx_147 - 0x0001) * 0x02 + (al_130 <u 0x00)
	word16 ax_586 = DPB(ax_242, al_116, 0)
	cx_147 = DPB(cx_147 - 0x0001, cl_155, 0) (alias)
	branch cl_155 == 0x09 l0800_86A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A7:
	word16 cx_178 = DPB(cx_147, 0x04, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A9:
	byte al_160 = al_116 * 0x02
	bx_665 = DPB(bx_665, bh_172, 8) (alias)
	bx_665 = DPB(bx_665, bh_172, 8) (alias)
	ax_586 = DPB(ax_586, al_160, 0) (alias)
	al_116 = al_160
	branch al_160 == 0x00 l0800_86A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A1:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_160 <u 0x00)
	si_102 = si_102 + 0x0001
	ax_586 = DPB(ax_586, al_116, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86AD:
	bh_172 = bh_172 * 0x02 + (al_160 <u 0x00)
	word16 ax_585 = DPB(ax_586, al_116, 0)
	ax_604 = DPB(ax_585, al_116, 0) (alias)
	ax_242 = DPB(ax_585, al_116, 0) (alias)
	bx_27 = DPB(bx_665, bh_172, 8) (alias)
	cx_178 = cx_178 - 0x0001
	branch cx_178 != 0x0000 l0800_86A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B1:
	word16 cx_184 = DPB(cx_178, (bh_172 + 0x03) * 0x02, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B7:
	branch cx_184 == 0x0000 l0800_86B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B7_1:
	Mem191[es_22:di_190:word16] = Mem187[ds_20:si_102:word16]
	si_102 = si_102 + 0x0002
	di_190 = di_190 + 0x0002
	cx_184 = cx_184 - 0x0001
	ax_585 = ax_604
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8761:
	al_116 = al_84 * 0x02
	bool C_200 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_87A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87A0:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_200 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8765:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8768:
	branch C_200 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_876A:
	byte al_208 = al_116 * 0x02
	cx_147 = 0x0003
	word16 ax_237 = DPB(ax_242, al_208, 0)
	bool C_216 = SLICE(cond(al_208), bool, 1)
	branch al_208 == 0x00 l0800_87A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87A5:
	byte al_217 = Mem62[ds_20:si_102:byte] * 0x02 + (al_208 <u 0x00)
	si_102 = si_102 + 0x0001
	ax_237 = DPB(ax_242, al_217, 0) (alias)
	C_216 = SLICE(cond(al_217), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_876F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8772:
	al_116 = (byte) ax_237 (alias)
	al_116 = (byte) ax_237 (alias)
	branch C_216 l0800_8701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8774:
	byte cl_224 = Mem62[ds_20:si_102:byte]
	si_102 = si_102 + 0x0001
	word16 cx_316 = DPB(0x0003, cl_224, 0)
	branch cl_224 == 0x00 l0800_87B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87B4:
	word16 ax_285 = ds_20 + (si_102 >>u 0x04)
	byte al_289 = (byte) ax_237
	di_190 = (di_190 & 0x000F) + 0x8000
	es_22 = es_22 + (di_190 >>u 0x04) - 0x0800
	si_102 = si_102 & 0x000F
	bx_27 = si_102 >>u 0x04
	ds_20 = ax_285
	al_116 = al_289 * 0x02
	bool C_295 = SLICE(cond(al_289 * 0x02), bool, 1)
	branch al_289 * 0x02 != 0x00 l0800_87E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87DD:
	al_116 = Mem263[ax_285:si_102 & 0x000F:byte] * 0x02 + (al_289 * 0x02 <u 0x00)
	si_102 = (si_102 & 0x000F) + 0x0001
	C_295 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E3:
	ax_242 = DPB(ax_242, al_116, 0) (alias)
	branch C_295 l0800_87E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E8:
	dsOut = psegLoc0A
	return si
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_867A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_877B:
	cx_147 = cx_316 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8701:
	al_116 = al_116 * 0x02
	bool C_334 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_86CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86CE:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_334 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8705:
	branch C_334 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8707:
	byte al_340 = al_116 * 0x02
	bool C_348 = SLICE(cond(al_340), bool, 1)
	branch al_340 == 0x00 l0800_86D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86D4:
	al_340 = Mem62[ds_20:si_102:byte] * 0x02 + (al_340 <u 0x00)
	si_102 = si_102 + 0x0001
	C_348 = SLICE(cond(al_340), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_870E:
	al_116 = al_340 * 0x02
	bool C_372 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_86DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86DA:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_372 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8714:
	byte bh_394
	branch C_372 l0800_8784
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8784:
	byte al_387
	byte al_378 = al_116 * 0x02
	branch al_378 == 0x00 l0800_87AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87AA:
	si_102 = si_102 + 0x0001
	al_387 = Mem62[ds_20:si_102:byte] * 0x02 + (al_378 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8788:
	al_387 = al_378
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_878B:
	byte bh_393 = C_348 * 0x02 + (al_378 <u 0x00)
	al_116 = al_387 * 0x02
	bh_394 = bh_393 | 0x04
	bx_461 = DPB(bx_27, bh_393 | 0x04, 8) (alias)
	bool C_404 = SLICE(cond(al_116), bool, 1)
	branch al_116 == 0x00 l0800_87AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87AF:
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_116 <u 0x00)
	si_102 = si_102 + 0x0001
	C_404 = SLICE(cond(al_116), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8794:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8797:
	branch C_404 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8799:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8716:
	bx_461 = DPB(bx_27, C_348, 8) (alias)
	branch C_348 != false l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_871D:
	bh_394 = C_348 + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8722:
	byte al_417 = al_116 * 0x02
	al_116 = al_417
	branch al_417 == 0x00 l0800_86E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86E0:
	si_102 = si_102 + 0x0001
	al_116 = Mem62[ds_20:si_102:byte] * 0x02 + (al_417 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8726:
	bx_461 = DPB(bx_27, bh_394 * 0x02 + (al_417 <u 0x00), 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8728:
	bx_27 = DPB(bx_461, Mem62[ds_20:si_102:byte], 0) (alias)
	__cli()
	word16 ax_607 = DPB(ax_242, al_116, 0)
	ax_640 = DPB(ax_607, al_116, 0) (alias)
	ax_242 = DPB(ax_607, al_116, 0) (alias)
	word16 si_445 = si_102 + 0x0001
	word16 si_523 = di_190 - 0x0001 - bx_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8733:
	branch cx_147 == 0x0000 l0800_8736
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8736:
	__sti()
	si_102 = si_445
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8733_1:
	Mem534[es_22:di_190:byte] = Mem530[ds_20:si_523:byte]
	si_523 = si_523 + 0x0001
	di_190 = di_190 + 0x0001
	cx_147 = cx_147 - 0x0001
	ax_607 = ax_640
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_87EF(word32 ds_si, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ds:si:[0..31]
// LiveOut: bx si
// Trashed: ax bx si Top
// Preserved: sp
fn0800_87EF_entry:
	selector ds = SLICE(ds_si, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87EF:
	word16 si_8
	word16 bx_9 = (word16) fn0800_87F4(ds_si, out si_8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F2_thunk_fn0800_87F4:
	word16 si_12
	fn0800_87F4(SEQ(ds, si_8), out si_12)
	siOut = si_12
	return (byte) bx_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_87F4(word32 ds_si, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ds:si:[0..31]
// LiveOut: ax si
// Trashed: ax si Top
// Preserved: sp
fn0800_87F4_entry:
	word16 si = SLICE(ds_si, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F4:
	word16 ax_7 = Mem0[ds_si:word16]
	siOut = si + 0x0002
	return (byte) DPB(DPB(ax_7, SLICE(ax_7, byte, 8), 0), (byte) ax_7, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87F4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_87F8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx es Top
// Preserved: di sp
fn0800_87F8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F8:
	ptr32 es_di_10 = Mem7[ds:0x2E37:segptr32]
	selector es_80 = SLICE(es_di_10, selector, 16)
	word16 di_66 = (word16) es_di_10
	word16 ax_11 = Mem7[ds:0x2E31:word16]
	word16 cx_12 = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8804:
	branch cx_12 == 0x0000 l0800_8806
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8806:
	ptr32 es_di_16 = Mem15[ds:0x2E33:segptr32]
	selector es_78 = SLICE(es_di_16, selector, 16)
	word16 di_60 = (word16) es_di_16
	word16 ax_17 = Mem15[ds:0x2E31:word16]
	word16 cx_18 = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8810:
	branch cx_18 == 0x0000 l0800_8812
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8812:
	ptr32 es_di_22 = Mem21[ds:0x2E3B:segptr32]
	selector es_76 = SLICE(es_di_22, selector, 16)
	word16 di_54 = (word16) es_di_22
	word16 cx_23 = Mem21[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881C:
	branch cx_23 == 0x0000 l0800_881E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881E:
	ptr32 es_di_30 = Mem29[ds:0x2E3F:segptr32]
	selector es_70 = SLICE(es_di_30, selector, 16)
	word16 di_37 = (word16) es_di_30
	word16 ax_31 = 0x0000
	word16 cx_34 = Mem29[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8828:
	Mem38[es_70:di_37:word16] = ax_31
	di_37 = di_37 + 0x0002
	ax_31 = ax_31 + 0x0001
	cx_34 = cx_34 - 0x0001
	branch cx_34 != 0x0000 l0800_8828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_882C:
	Mem45[ds:0x2E2D:word16] = cx_34
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87F8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881C_1:
	Mem55[es_76:di_54:word16] = 0x0000
	di_54 = di_54 + 0x0002
	cx_23 = cx_23 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8810_1:
	Mem61[es_78:di_60:word16] = ax_17
	di_60 = di_60 + 0x0002
	cx_18 = cx_18 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8804_1:
	Mem67[es_80:di_66:word16] = ax_11
	di_66 = di_66 + 0x0002
	cx_12 = cx_12 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8832(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di si sp
fn0800_8832_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8832:
	fn0800_889A(ds)
	branch Mem10[ds:0x2E29:word16] <u 0x0002 l0800_8897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_883E:
	branch Mem10[ds:0x2E65:word16] - Mem10[ds:0x2E6D:word16] <u 0x0003 l0800_8897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_884D:
	word16 ax_30 = Mem10[ds:0x2E2D:word16]
	word16 si_28 = Mem10[ds:0x2E29:word16]
	word16 di_29 = Mem10[ds:0x2E2B:word16]
	word16 ax_33 = ax_30 + 0x0001
	branch ax_30 + 0x0001 != Mem32[ds:0x2E31:word16] l0800_8865
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8863:
	ax_33 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8865:
	Mem41[ds:0x2E2D:word16] = ax_33
	Mem43[ds:0x2E6D:word16] = Mem41[ds:0x2E6D:word16] + 0x0001
	fn0800_889A(ds)
	Mem56[ds:0x2E6D:word16] = Mem43[ds:0x2E6D:word16] - 0x0001
	Mem59[ds:0x2E2D:word16] = ax_30
	branch Mem59[ds:0x2E29:word16] <=u si_28 l0800_888F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_888F:
	Mem64[ds:0x2E29:word16] = si_28
	Mem66[ds:0x2E2B:word16] = di_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_887D:
	Mem67[ds:0x2E29:word16] = 0x0001
	Mem68[ds:0x2E2B:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8897:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8832_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_889A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di ds si sp
fn0800_889A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_889A:
	Mem13[ds:0x2E2B:word16] = 0x0000
	Mem14[ds:0x2E29:word16] = 0x0001
	ptr32 es_di_15 = Mem14[ds:0x2E6D:segptr32]
	word16 ax_18 = Mem14[es_di_15:word16]
	Mem19[ds:0x4E90:word16] = ax_18
	word16 di_17 = (word16) es_di_15
	word16 dx_22 = Mem19[ds:0x2E69:word16] - (di_17 + 0x0001)
	selector es_16 = SLICE(es_di_15, selector, 16)
	byte al_199 = (byte) ax_18
	word16 di_20 = di_17 + 0x0001
	bool Z_33 = SLICE(cond(dx_22), bool, 2)
	word16 cx_24 = dx_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BC:
	branch cx_24 == 0x0000 l0800_88BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BC_1:
	Z_33 = SLICE(cond(al_199 - Mem19[es_16:di_307:byte]), bool, 2) (alias)
	di_20 = di_307 + 0x0001
	cx_24 = cx_24 - 0x0001
	di_307 = di_20
	branch al_199 != Mem19[es_16:di_307:byte] l0800_88BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BE:
	branch Z_33 l0800_88C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88C0:
	cx_24 = cx_24 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88C1:
	Mem54[ds:0x4E94:word16] = Mem19[ds:0x2E69:word16] - (word16) Mem19[ds:0x2E6D:segptr32]
	word16 dx_44 = dx_22 - cx_24
	word16 ax_185 = Mem54[Mem54[ds:0x2E39:selector]:Mem54[ds:0x4E90:word16] << 0x0001:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88DC:
	branch ax_185 != Mem62[ds:0x2E31:word16] l0800_88E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88E5:
	word16 di_66 = ax_185 << 0x0001
	Mem69[ds:0x4E92:word16] = Mem62[Mem62[ds:0x2E41:selector]:di_66:word16]
	word16 bx_70 = Mem69[ds:0x2E2D:word16]
	branch bx_70 >u ax_185 l0800_8903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88FC:
	bx_70 = bx_70 + Mem69[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8903:
	ptr32 es_si_80 = Mem69[ds:0x2E6D:segptr32]
	word16 bx_110 = bx_70 - ax_185
	branch Mem69[ds:0x4E90:word16] != Mem69[SLICE(es_si_80, selector, 16):(word16) es_si_80 - bx_110:word16] l0800_897E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8914:
	word16 cx_100 = Mem69[Mem69[ds:0x2E3D:selector]:di_66:word16]
	branch cx_100 <=u bx_110 l0800_892D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_892D:
	branch cx_100 <=u dx_44 l0800_893A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8931:
	bx_110 = bx_110 - (cx_100 - dx_44)
	cx_100 = dx_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_893A:
	branch cx_100 != dx_44 l0800_8963
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_893E:
	ptr32 es_di_106 = Mem69[ds:0x2E6D:segptr32]
	word16 di_108 = (word16) es_di_106 + cx_100
	word16 ax_113 = Mem69[ds:0x4E94:word16] - cx_100
	selector es_215 = SLICE(es_di_106, selector, 16)
	word16 si_111 = di_108 - bx_110
	bool Z_135 = SLICE(cond(ax_113), bool, 2)
	word16 cx_115 = ax_113
	selector ds_124 = Mem123[ds:0x2E6F:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8957:
	branch cx_115 == 0x0000 l0800_8959
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8957_1:
	Z_135 = SLICE(cond(Mem123[ds_124:si_308:byte] - Mem123[es_215:di_309:byte]), bool, 2) (alias)
	si_111 = si_308 + 0x0001
	di_108 = di_309 + 0x0001
	cx_115 = cx_115 - 0x0001
	si_308 = si_111
	di_309 = di_108
	branch Mem123[ds_124:si_308:byte] != Mem123[es_215:di_309:byte] l0800_8957
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8959:
	branch Z_135 l0800_895C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_895B:
	cx_115 = cx_115 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_895C:
	cx_100 = dx_44 + (ax_113 - cx_115)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8922:
	bx_110 = 0x0001
	cx_100 = dx_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8963:
	branch cx_100 <=u Mem167[ds:0x2E2F:word16] l0800_896D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8969:
	cx_100 = Mem167[ds:0x2E2F:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_896D:
	branch cx_100 <u Mem167[ds:0x2E29:word16] l0800_897E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8973:
	Mem176[ds:0x2E29:word16] = cx_100
	Mem182[ds:0x2E2B:word16] = bx_110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_897E:
	ax_185 = Mem184[ds:0x4E92:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88E2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8984:
	branch Mem62[ds:0x2E29:word16] != 0x0002 l0800_89A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_898B:
	branch Mem62[ds:0x2E2B:word16] <=u 0x0100 l0800_89A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8996:
	Mem190[ds:0x2E29:word16] = 0x0001
	Mem191[ds:0x2E2B:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89A5:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_889A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_89A8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89A8:
	word16 dx_13 = Mem11[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89B1:
	word16 di_17 = Mem16[ds:0x2E2D:word16]
	selector es_19 = Mem16[ds:0x2E41:selector]
	word16 ax_20 = Mem16[es_19:di_17 << 0x0001:word16]
	Mem22[es_19:di_17 << 0x0001:word16] = dx_13
	branch Mem22[ds:0x2E2D:word16] == ax_20 l0800_89EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89C7:
	ptr32 es_di_25 = Mem22[ds:0x2E6D:segptr32]
	word16 di_29 = Mem22[SLICE(es_di_25, selector, 16):(word16) es_di_25 - dx_13:word16]
	Mem32[Mem22[ds:0x2E39:selector]:di_29 << 0x0001:word16] = ax_20
	branch ax_20 != dx_13 l0800_89EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89E0:
	Mem36[Mem32[ds:0x2E35:selector]:di_29 << 0x0001:word16] = dx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89EA:
	word16 di_42 = Mem38[Mem38[ds:0x2E6D:segptr32]:word16]
	word16 ax_44 = Mem38[ds:0x2E2D:word16]
	selector es_45 = Mem38[ds:0x2E39:selector]
	branch Mem38[es_45:di_42 << 0x0001:word16] != dx_13 l0800_8A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A08:
	Mem54[Mem38[ds:0x2E41:selector]:Mem38[Mem38[ds:0x2E35:selector]:di_42 << 0x0001:word16] << 0x0001:word16] = ax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89FF:
	Mem55[es_45:di_42 << 0x0001:word16] = ax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A18:
	Mem61[Mem57[ds:0x2E35:selector]:di_42 << 0x0001:word16] = ax_44
	ptr32 es_di_62 = Mem61[ds:0x2E6D:segptr32]
	word16 di_64 = (word16) es_di_62
	word16 bx_68 = Mem61[ds:0x2E69:word16] - (di_64 + 0x0001)
	selector es_63 = SLICE(es_di_62, selector, 16)
	byte al_65 = Mem61[es_di_62:byte]
	word16 di_66 = di_64 + 0x0001
	bool Z_79 = SLICE(cond(bx_68), bool, 2)
	word16 cx_70 = bx_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A2F:
	branch cx_70 == 0x0000 l0800_8A31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A2F_1:
	Z_79 = SLICE(cond(al_65 - Mem61[es_63:di_233:byte]), bool, 2) (alias)
	di_66 = di_233 + 0x0001
	cx_70 = cx_70 - 0x0001
	di_233 = di_66
	branch al_65 != Mem61[es_63:di_233:byte] l0800_8A2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A31:
	branch Z_79 l0800_8A34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A33:
	cx_70 = cx_70 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A34:
	word16 bx_131 = bx_68 - cx_70
	Mem100[Mem61[ds:0x2E3D:selector]:Mem61[ds:0x2E2D:word16] << 0x0001:word16] = bx_131
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A86:
	word16 ax_103 = Mem102[ds:0x2E2D:word16]
	word16 ax_104 = ax_103 + 0x0001
	branch ax_103 + 0x0001 != dx_13 l0800_8A90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A8E:
	ax_104 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A90:
	Mem113[ds:0x2E2D:word16] = ax_104
	Mem115[ds:0x2E6D:word16] = Mem113[ds:0x2E6D:word16] + 0x0001
	word16 v20_120 = wArg02 - 0x0001
	wArg02 = v20_120
	branch v20_120 == 0x0000 l0800_8AA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AA8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_89A8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A9C:
	bx_131 = bx_131 - 0x0001
	branch bx_131 >u 0x0001 l0800_8A46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A46:
	word16 di_135 = Mem121[ds:0x2E2D:word16]
	Mem138[Mem121[ds:0x2E3D:selector]:di_135 << 0x0001:word16] = bx_131
	selector es_139 = Mem138[ds:0x2E41:selector]
	word16 v22_141 = Mem138[es_139:di_135 << 0x0001:word16]
	Mem142[es_139:di_135 << 0x0001:word16] = Mem138[ds:0x2E2D:word16]
	branch Mem142[ds:0x2E2D:word16] == v22_141 l0800_8A86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A63:
	ptr32 es_di_146 = Mem142[ds:0x2E6D:segptr32]
	word16 di_151 = Mem142[SLICE(es_di_146, selector, 16):(word16) es_di_146 - dx_13:word16]
	Mem154[Mem142[ds:0x2E39:selector]:di_151 << 0x0001:word16] = v22_141
	branch v22_141 != dx_13 l0800_8A86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A7C:
	Mem158[Mem154[ds:0x2E35:selector]:di_151 << 0x0001:word16] = dx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AA5:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8ACF(word16 cx, selector ds, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp ds sp
fn0800_8ACF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8ACF:
	msdos_unknown_2143()
	word16 ax_22 = DPB(DPB(ax, 0x43, 8), 0x00, 0)
	branch Test(ULT,false) l0800_8AE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AE9:
	fn0800_8D64(ds, ax_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8ADF:
	Mem34[ptrArg06:word16] = cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AED:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8ACF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8B0D(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax dx Top
// Preserved: bp bx cx es si sp
fn0800_8B0D_entry:
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B0D:
	word16 sp_26 = fp - 4
	branch wArg06 != 0x0000 l0800_8B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B28:
	branch Mem18[ds:0x224E:word16] != 0x0000 l0800_8B1A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B1A:
	Mem22[ds:0x224E:word16] = Mem18[ds:0x224E:word16] - 0x0001
	word16 bx_23 = Mem22[ds:0x224E:word16]
	call SEQ(0x0800, Mem22[ds:(bx_23 << 0x0001) + 0x4E96:word16]) (retsize: 2;)
		uses: ax:ax_102,bx:bx_23 << 0x0001,cx:cx_31,dx:dx_104,sp:sp_26,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_34
		defs: ax:ax_103,cx:cx_32,dx:dx_105,sp:sp_27,Top:Top_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B2F:
	word16 bx_38
	word16 dx_39
	byte ah_49
	call SEQ(0x0800, Mem18[ds:0x2352:word16]) (retsize: 2;)
		uses: ah:fn0800_0150(out dx_39, out bx_38),ax:ax_110,bx:bx_38,cx:cx_31,dx:dx_39,sp:sp_26,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_34
		defs: ah:ah_49,bx:bx_47,cx:cx_46,Top:Top_48
	word16 ax_110 = DPB(ax, ah_49, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B36:
	word16 dx_55
	word16 ax_54 = fn0800_01B9(ds, out dx_55)
	fn0800_0163()
	word16 sp_66 = fp - 4
	branch wArg04 != 0x0000 l0800_8B55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B55:
	dxOut = dx_55
	return ax_54
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B0D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B42:
	branch wArg06 != 0x0000 l0800_8B4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B46:
	word16 sp_67
	word16 cx_70
	word16 bx_73
	int8 Top_75
	word16 ax_76
	word16 dx_77
	call SEQ(0x0800, Mem58[ds:0x2354:word16]) (retsize: 2;)
		uses: ax:ax_54,bx:bx_71,cx:cx_68,dx:dx_55,sp:fp - 4,Stack +0000:bp,Stack +0002:si,Stack +0004:bp,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg04,Stack +000C:wArg06,Stack +FFFFFFFE:si,Top:Top_74
		defs: ax:ax_76,bx:bx_73,cx:cx_70,dx:dx_77,sp:sp_67,Top:Top_75
	call SEQ(0x0800, Mem58[ds:0x2356:word16]) (retsize: 2;)
		uses: ax:ax_76,bx:bx_73,cx:cx_70,dx:dx_77,sp:sp_67,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_75
		defs: sp:sp_81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B4E:
	word16 sp_93 = sp_66 - 2
	Mem94[ss:sp_93:word16] = wArg02
	fn0800_0164(Mem94[ss:sp_93:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8B5A(word16 cx, word16 dx, word16 bx, word16 si, selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_8B5A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B5A:
	word16 dx_25
	word16 ax_24 = fn0800_8B0D(0x0000, cx, dx, bx, fp - 2, si, ds, wArg02, 0x0000, 0x0000, out dx_25)
	dxOut = dx_25
	return ax_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B5A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8B69(word16 cx, word16 dx, word16 bx, word16 si, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_8B69_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B69:
	fn0800_8B0D(0x0000, cx, dx, bx, fp - 2, si, ds, wArg02, 0x0000, 0x0001, out dx_39)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B69_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8B95(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah bx cx dx es Top
// Preserved: bp sp
fn0800_8B95_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B95:
	byte dh_10
	word16 cx_11
	word16 dx_19 = DPB(DPB(dx, dh_10, 8), msdos_get_system_date(out dh_10, out cx_11), 0)
	Mem16[ptrArg02:word16] = cx_11
	Mem20[ptrArg02 + 0x0002:word16] = dx_19
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B95_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8BA8(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah bx cx dx es Top
// Preserved: bp sp
fn0800_8BA8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BA8:
	byte ch_10
	byte dh_11
	byte dl_12
	Mem20[ptrArg02:word16] = DPB(DPB(cx, ch_10, 8), msdos_get_system_time(out ch_10, out dh_11, out dl_12), 0)
	Mem24[ptrArg02 + 0x0002:word16] = DPB(DPB(dx, dh_11, 8), dl_12, 0)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BA8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BBB(word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bx cx dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BBB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BBB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC0_thunk_fn0800_8BD8:
	word16 bx_17
	word16 cx_18
	word16 dx_19
	word16 ax_16 = fn0800_8BD8(0x0000, dwArg02, wArg06, wArg08, out cx_18, out dx_19, out bx_17)
	cxOut = cx_18
	dxOut = dx_19
	bxOut = bx_17
	return ax_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BBB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BC2(word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bx cx dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC8_thunk_fn0800_8BD8:
	word16 bx_15
	word16 cx_16
	word16 dx_17
	word16 ax_14 = fn0800_8BD8(0x0001, dwArg02, wArg06, wArg08, out cx_16, out dx_17, out bx_15)
	cxOut = cx_16
	dxOut = dx_17
	bxOut = bx_15
	return ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BCA(word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BCA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BCA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BD0_thunk_fn0800_8BD8:
	word16 dx_17
	word16 ax_14 = fn0800_8BD8(0x0002, dwArg02, wArg06, wArg08, out cx_29, out dx_17, out bx_30)
	dxOut = dx_17
	return ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BCA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BD8(word16 cx, word32 dwArg04, word16 wArg08, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Stack +0004:[0..31] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_8BD8_entry:
	word16 wArg04 = SLICE(dwArg04, word16, 0)
	word16 wArg06 = SLICE(dwArg04, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BD8:
	word16 dx_102
	word16 bx_146
	word16 di_16 = cx
	word16 ax_100 = wArg04
	word16 cx_134 = wArg0A
	branch wArg0A != 0x0000 l0800_8BF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BEF:
	branch wArg06 == 0x0000 l0800_8C5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BF3:
	branch wArg08 == 0x0000 l0800_8C5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C5C:
	bx_146 = wArg08
	word16 dx_38 = (uint16) (dwArg04 % wArg08)
	ax_100 = (uint16) (dwArg04 /u wArg08)
	branch (cx & 0x0002) == 0x0000 l0800_8C65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C64:
	ax_100 = dx_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C65:
	dx_102 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BF7:
	dx_102 = wArg06
	ui32 cx_bx_272 = SEQ(wArg0A, wArg08)
	branch (cx & 0x0001) != 0x0000 l0800_8C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BFD:
	dx_102 = wArg06
	branch wArg06 >= 0x0000 l0800_8C0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C01:
	ax_100 = -wArg04
	dx_102 = -wArg06 - (ax_100 == 0x0000)
	di_16 = cx | 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C0B:
	cx_bx_272 = SEQ(wArg0A, wArg08) (alias)
	branch wArg0A >= 0x0000 l0800_8C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C0F:
	word16 bx_76 = -wArg08
	di_16 = di_16 ^ 0x0004
	cx_bx_272 = SEQ(-wArg0A - (bx_76 == 0x0000), bx_76) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C19:
	word16 bx_194 = SLICE(cx_bx_272, word16, 0)
	word16 cx_83 = SLICE(cx_bx_272, word16, 16)
	cx_134 = 0x0020
	word16 di_111 = 0x0000
	word16 si_107 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C23:
	ax_100 = ax_100 << 0x0001
	dx_102 = __rcl(dx_102, 0x01, SLICE(cond(ax_100), bool, 1))
	si_107 = __rcl(si_107, 0x01, (dx_102 & 0x8000) != 0x0000)
	di_111 = __rcl(di_111, 0x01, (si_107 & 0x8000) != 0x0000)
	branch di_111 <u cx_83 l0800_8C3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C2F:
	branch di_111 >u cx_83 l0800_8C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C31:
	branch si_107 <u bx_194 l0800_8C3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C35:
	ui32 di_si_198 = SEQ(di_111, si_107) - cx_bx_272
	si_107 = (word16) di_si_198
	di_111 = SLICE(di_si_198, word16, 16)
	ax_100 = ax_100 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C3A:
	cx_134 = cx_134 - 0x0001
	branch cx_134 != 0x0000 l0800_8C23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C3C:
	bx_146 = di_16
	branch (di_16 & 0x0002) == 0x0000 l0800_8C49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C43:
	ax_100 = si_107
	dx_102 = di_111
	bx_146 = di_16 >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C49:
	branch (bx_146 & 0x0004) == 0x0000 l0800_8C56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C4F:
	ax_100 = -ax_100
	dx_102 = -dx_102 - (ax_100 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C56:
	cxOut = cx_134
	dxOut = dx_102
	bxOut = bx_146
	return ax_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BD8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8C69(word16 ax, byte cl, word16 dx, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax cl dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8C69_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C69:
	branch cl >=u 0x10 l0800_8C81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C81:
	clOut = cl - 0x10
	dxOut = ax << cl - 0x10
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C71:
	byte cl_28 = -cl
	clOut = cl_28 + 0x10
	dxOut = dx << cl | ax >>u cl_28 + 0x10
	return ax << cl
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8C69_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax cl dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8C8A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C8A:
	branch cl >=u 0x10 l0800_8CA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CA2:
	clOut = cl - 0x10
	int32 dx_ax_21 = (int32) dx
	dxOut = SLICE(dx_ax_21, word16, 16)
	return (word16) dx_ax_21 >> cl - 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C92:
	byte cl_28 = -cl
	clOut = cl_28 + 0x10
	dxOut = dx >> cl
	return ax >>u cl | dx << cl_28 + 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8C8A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8CAA(word16 ax, byte cl, word16 dx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8CAA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CAA:
	branch cl >=u 0x10 l0800_8CC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CC2:
	dxOut = 0x0000
	return dx >>u cl - 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CB2:
	dxOut = dx >>u cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8CAA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8CCB(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: ax cx dx sp
// Trashed: SCZO ax bx cx dx es sp Top
// Preserved:
fn0800_8CCB_entry:
	byte dh_31 = SLICE(dx, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CCB:
	byte cl_27 = (byte) cx
	branch cx >= 0x0000 l0800_8CDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CDE:
	word16 ax_20 = ax + bx
	byte al_36 = (byte) ax_20
	branch ax_20 >=u 0x0000 l0800_8CE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CE2:
	dx = dx + 0x1000
	dh_31 = SLICE(dx + 0x1000, byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CE6:
	chOut = <invalid>
	dxOut = DPB(dx, dh_31 + (cl_27 << 0x04), 8) + (ax_20 >>u 0x04)
	return DPB(ax_20 >>u 0x04, al_36, 0) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CD2:
	word16 bx_50 = ~bx
	byte cl_63 = (byte) (~cx + (bx_50 <u 0x0001))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D0D:
	word16 ax_57 = ax - (bx_50 + 0x0001)
	byte al_74 = (byte) ax_57
	branch ax_57 >=u 0x0000 l0800_8D15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D11:
	dx = dx - 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D15:
	chOut = <invalid>
	dxOut = dx - DPB(DPB(bx_50 + 0x0001, cl_63 << 0x04, 8), 0x00, 0) + (ax_57 >>u 0x04)
	return DPB(ax_57 >>u 0x04, al_74, 0) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8CCB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_8D2B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D2B:
	word16 si_17
	word16 si_13 = wArg02
	branch wArg02 < 0x0000 l0800_8D4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D4B:
	si_17 = -wArg02
	branch si_17 > 0x0023 l0800_8D3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D52:
	Mem21[ds:0x2516:word16] = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D36:
	branch wArg02 <= 0x0058 l0800_8D3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D3B:
	si_13 = 0x0057
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D3E:
	Mem28[ds:0x2516:word16] = si_13
	si_17 = (int16) Mem28[ds:si_13 + 0x2518:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D58:
	Mem34[ds:0x007F:word16] = si_17
	return 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D2B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8D64(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_8D64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D64:
	fn0800_8D2B(ds, wArg02)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8D76(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_8D76_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D76:
	word16 dx_11
	msdos_ioctl_get_device_info(wArg02, out dx_11)
	return dx_11 & 0x0080
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D76_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8D87(byte bArg02, byte bArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0C, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..7] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +000E:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx Top
// Preserved: bp di es si sp ss
fn0800_8D87_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D87:
	selector es_34 = SLICE(ptrArg08, selector, 16)
	word16 di_122 = (word16) ptrArg08
	byte bl_23 = (byte) wArg06
	branch wArg06 >u 0x0024 l0800_8DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D9B:
	branch bl_23 <u 0x02 l0800_8DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DA0:
	word16 ax_26 = wArg0C
	word16 cx_28 = wArg0E
	branch wArg0E >= 0x0000 l0800_8DBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DAA:
	branch bArg04 == 0x00 l0800_8DBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DB0:
	Mem36[ptrArg08:byte] = 0x2D
	ax_26 = -wArg0C
	di_122 = di_122 + 0x0001
	cx_28 = -wArg0E - (ax_26 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DBC:
	word16 si_105 = fp - 0x0024
	branch cx_28 == 0x0000 l0800_8DD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DC1:
	word32 dx_ax_52 = (uint32) (uint16) cx_28
	word32 dx_ax_60 = SEQ((uint16) (dx_ax_52 % wArg06), ax_26)
	Mem68[ss:si_105:byte] = (byte) (uint16) (dx_ax_60 % wArg06)
	word16 ax_56 = (uint16) (dx_ax_52 /u wArg06)
	cx_28 = ax_56
	ax_26 = (uint16) (dx_ax_60 /u wArg06)
	si_105 = si_105 + 0x0001
	branch ax_56 == 0x0000 l0800_8DD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DD9:
	branch ax_26 != 0x0000 l0800_8DD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DD1:
	word32 dx_ax_79 = (uint32) (uint16) ax_26
	Mem94[ss:si_105:byte] = (byte) (uint16) (dx_ax_79 % wArg06)
	ax_26 = (uint16) (dx_ax_79 /u wArg06)
	si_105 = si_105 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DDD:
	word16 cx_102 = 0x0024 - fp + si_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DE5:
	byte al_114
	si_105 = si_105 - 0x0001
	byte al_109 = Mem108[ss:si_105:byte]
	branch al_109 >=u 0x0A l0800_8DF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF1:
	al_114 = al_109 - 0x0A + bArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DED:
	al_114 = al_109 + 0x30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF4:
	Mem123[es_34:di_122:byte] = al_114
	di_122 = di_122 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch cx_102 != 0x0000 l0800_8DE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF7:
	Mem131[es_34:di_122:byte] = 0x00
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D87_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DCF:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8E09(word32 dwArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx Top
// Preserved: bp sp
fn0800_8E09_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E09:
	fn0800_8D87(0x61, 0x00, 0x000A, dwArg02, wArg06, 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E09_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8E29(selector ds, word16 wArg02, word32 dwArg04, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_8E29_entry:
	word16 wArg06 = SLICE(dwArg04, word16, 16)
	word16 wArg04 = SLICE(dwArg04, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E29:
	Mem13[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 ax_23 = DPB(DPB(ax, 0x42, 8), bArg08, 0)
	word16 dx_19 = wArg04
	branch msdos_set_file_position(wArg02, dwArg04, bArg08, SEQ(wArg04, ax_23)) l0800_8E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E4B:
	word32 dx_ax_34 = (word32) fn0800_8D2B(ds, ax_23)
	ax_23 = (word16) dx_ax_34 (alias)
	dx_19 = SLICE(dx_ax_34, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E49:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E50:
	cxOut = wArg06
	dxOut = dx_19
	bxOut = wArg02
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E29_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8E52(byte al, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15]
// LiveOut: ax
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_8E52_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E52:
	word16 ax_21
	__syscall(0x21)
	word16 ax_19 = DPB(ax, 0x39, 8)
	branch C l0800_8E64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E64:
	ax_21 = fn0800_8D2B(ds, ax_19)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E60:
	ax_21 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E68:
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E52_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8E6A(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp sp
fn0800_8E6A_entry:
	word16 wArg08 = SLICE(dwArg08, word16, 0)
	word16 wArg0A = SLICE(dwArg08, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E6A:
	word32 dwArg08_140 = dwArg08
	branch (wArg08 | wArg0A) != 0x0000 l0800_8E7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E75:
	dwArg08_140 = SEQ(ds, 0x4ED6) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E7D:
	word32 dx_ax_143
	branch (wArg04 | wArg06) != 0x0000 l0800_8E8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E8F:
	dx_ax_143 = SEQ(wArg06, wArg04) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E88:
	dx_ax_143 = SEQ(ds, 0x2572) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E95:
	fn0800_9CE6(dwArg08_140, dx_ax_143)
	word32 dx_ax_146 = <invalid>
	fn0800_8E09(dx_ax_146, wArg02)
	fn0800_BF5F(dwArg08_140, SEQ(ds, 0x2576))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E6A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZO ax cx dx Top
// Preserved: si sp
fn0800_8F18_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F18:
	word16 ax_14 = dx
	branch dx == 0x0000 l0800_8F21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F1F:
	ax_14 = (word16) (bx *u dx) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F21:
	branch cx == 0x0000 l0800_8F28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F23:
	ax_14 = (word16) (ax *u cx) + ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F28:
	chOut = <invalid>
	word32 dx_ax_42 = bx *u ax
	dxOut = SLICE(dx_ax_42, word16, 16) + ax_14
	return (word16) dx_ax_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F18_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8F2F(byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[8..15] ax:[8..15] bl:[0..15] bx:[8..15] cx:[0..15] dx:[0..15]
// LiveOut: CZ bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: sp
fn0800_8F2F_entry:
	word16 ax_13 = DPB(ax, al, 0)
	word16 bx_22 = DPB(bx, bl, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F2F:
	word16 dx_16 = dx + (ax_13 >>u 0x04)
	word16 cx_26 = cx + (bx_22 >>u 0x04)
	word16 bx_32 = DPB(bx_22 >>u 0x04, bl, 0) & 0x000F
	branch dx_16 != cx_26 l0800_8F4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F4D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F4F:
	cxOut = cx_26
	dxOut = dx_16
	bxOut = bx_32
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F50(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_8F50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F50:
	word16 ax_23
	word16 wLoc04_52
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0002) == 0x0000 l0800_8F66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F66:
	dx = (word16) ptrArg04 (alias)
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_23) l0800_8F79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F79:
	wLoc04_52 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F77:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F60:
	wLoc04_52 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7A:
	ax_23 = fn0800_8D2B(ds, wLoc04_52)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7D:
	chOut = <invalid>
	dxOut = dx
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F7F(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..31]
// LiveOut: dx
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_8F7F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7F:
	word16 dx_15 = (word16) ptrArg02
	word16 ax_21 = DPB(ax, 0x41, 8)
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), dx_15) l0800_8F91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F91:
	fn0800_8D2B(ds, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F8D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F95:
	return dx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F7F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8F97(word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, selector psegArg0C, ptr16 & dxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: cx di dx
// Trashed: SCZDO ax bp bx cx di dx es si Top
// Preserved: sp
l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1970, out di_6)
	dxOut = dx_671
	diOut = di_6
	return (byte) cx_903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1969, out di_19)
	dxOut = dx_671
	diOut = di_19
	return (byte) cx_903
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F97_entry:
	def fp
	def bp
	def ss
	def si
	def di
	def es
	def ds
	def cx
	def bx
	def dx
	def wArg0A
	def psegArg0C
	def wArg08
	def wArg06
	def wArg02
	def wLoc0C
	def bLoc03
	def wArg04
	def wLoc0A
	def wLoc12
	def wLoc14
	def wLoc0E
	def wLoc10
	Top_29 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F97:
	wLoc06_1250 = 0x0000
	wLoc08_1251 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FC6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FC8:
	wLoc10_1936 = PHI((wLoc10, l0800_8FC6), (wLoc10_1938, l0800_911C), (wLoc10_1936, l0800_92AB), (wLoc10_1936, l0800_9391), (wLoc10_1817, l0800_91F1), (wLoc10_1817, l0800_91FD))
	wLoc0E_1914 = PHI((wLoc0E, l0800_8FC6), (wLoc0E_1916, l0800_911C), (wLoc0E_1914, l0800_92AB), (wLoc0E_1914, l0800_9391), (wLoc0E_1816, l0800_91F1), (wLoc0E_1816, l0800_91FD))
	wLoc14_1896 = PHI((wLoc14, l0800_8FC6), (wLoc14_1898, l0800_911C), (wLoc14_1896, l0800_92AB), (wLoc14_1896, l0800_9391), (wLoc14_1896, l0800_91F1), (wLoc14_1896, l0800_91FD))
	wLoc12_1874 = PHI((wLoc12, l0800_8FC6), (wLoc12_1876, l0800_911C), (wLoc12_1874, l0800_92AB), (wLoc12_1874, l0800_9391), (wLoc12_1818, l0800_91F1), (wLoc12_1818, l0800_91FD))
	bLoc03_1699 = PHI((bLoc03, l0800_8FC6), (bLoc03_1701, l0800_911C), (bLoc03_1258, l0800_92AB), (bLoc03_1492, l0800_9391), (bLoc03_1258, l0800_91F1), (bLoc03_1258, l0800_91FD))
	wLoc0C_1689 = PHI((wLoc0C, l0800_8FC6), (wLoc0C_1309, l0800_911C), (wLoc0C_1309, l0800_92AB), (wLoc0C_1267, l0800_9391), (wLoc0C_1309, l0800_91F1), (wLoc0C_1309, l0800_91FD))
	wLoc06_1670 = PHI((wLoc06_1250, l0800_8FC6), (wLoc06_1671, l0800_911C), (wLoc06_1673, l0800_92AB), (wLoc06_1674, l0800_9391), (wLoc06_1316, l0800_91F1), (wLoc06_1670, l0800_91FD))
	wLoc08_1592 = PHI((wLoc08_1251, l0800_8FC6), (wLoc08_1374, l0800_911C), (wLoc08_1599, l0800_92AB), (wLoc08_1600, l0800_9391), (wLoc08_1374, l0800_91F1), (wLoc08_1374, l0800_91FD))
	wArg0A_1253 = PHI((wArg0A, l0800_8FC6), (wArg0A_1257, l0800_911C), (wArg0A_1257, l0800_92AB), (wArg0A_1265, l0800_9391), (wArg0A_1257, l0800_91F1), (wArg0A_1257, l0800_91FD))
	Top_1239 = PHI((Top_29, l0800_8FC6), (Top_1240, l0800_911C), (Top_1243, l0800_92AB), (Top_1244, l0800_9391), (Top_598, l0800_91F1), (Top_565, l0800_91FD))
	dx_1230 = PHI((dx, l0800_8FC6), (dx_1232, l0800_911C), (dx_1234, l0800_92AB), (dx_1235, l0800_9391), (dx_671, l0800_91F1), (dx_671, l0800_91FD))
	bx_1220 = PHI((bx, l0800_8FC6), (bx_1222, l0800_911C), (bx_1225, l0800_92AB), (bx_1226, l0800_9391), (bx_116, l0800_91F1), (bx_116, l0800_91FD))
	cx_1210 = PHI((cx, l0800_8FC6), (cx_1212, l0800_911C), (cx_1215, l0800_92AB), (cx_1216, l0800_9391), (cx_903, l0800_91F1), (cx_903, l0800_91FD))
	di_1197 = PHI((di, l0800_8FC6), (di_1198, l0800_911C), (di_1200, l0800_92AB), (di_1201, l0800_9391), (di_567, l0800_91F1), (di_94, l0800_91FD))
	Mem51 = PHI((Mem47, l0800_8FC6), (Mem1080, l0800_911C), (Mem1081, l0800_92AB), (Mem1082, l0800_9391), (Mem596, l0800_91F1), (Mem535, l0800_91FD))
	si_52 = wArg0A_1253
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FCB:
	bLoc03_1403 = PHI((bLoc03_1402, l0800_9019), (bLoc03_1402, l0800_902B), (bLoc03_1699, l0800_8FC8))
	wLoc0C_1401 = PHI((wLoc0C_1400, l0800_9019), (wLoc0C_1400, l0800_902B), (wLoc0C_1689, l0800_8FC8))
	wArg0A_1397 = PHI((wArg0A_1396, l0800_9019), (wArg0A_1396, l0800_902B), (wArg0A_1253, l0800_8FC8))
	wLoc08_1374 = PHI((wLoc08_1454, l0800_9019), (wLoc08_1375, l0800_902B), (wLoc08_1592, l0800_8FC8))
	Top_912 = PHI((Top_1028, l0800_9019), (Top_914, l0800_902B), (Top_1239, l0800_8FC8))
	dx_909 = PHI((dx_1025, l0800_9019), (dx_910, l0800_902B), (dx_1230, l0800_8FC8))
	bx_906 = PHI((bx_1022, l0800_9019), (bx_907, l0800_902B), (bx_1220, l0800_8FC8))
	cx_903 = PHI((cx_1021, l0800_9019), (cx_918, l0800_902B), (cx_1210, l0800_8FC8))
	di_880 = PHI((di_926, l0800_9019), (di_926, l0800_902B), (di_1197, l0800_8FC8))
	si_58 = PHI((si_898, l0800_9019), (si_898, l0800_902B), (si_52, l0800_8FC8))
	Mem55 = PHI((Mem1033, l0800_9019), (Mem896, l0800_902B), (Mem51, l0800_8FC8))
	al_59 = Mem55[ds:si_58:byte]
	si_60 = si_58 + 0x0001
	al_61 = al_59
	branch al_59 == 0x00 l0800_9042
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9042:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9042_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1965, out di_68)
	dxOut = dx_909
	diOut = di_68
	return (byte) cx_903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FD4:
	branch al_59 == 0x25 l0800_9045
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9045:
	wLoc0C_1255 = 0xFFFF
	es_79 = psegArg0C
	bLoc03_1256 = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9051:
	wLoc0C_1309 = PHI((wLoc0C_1255, l0800_9045), (wLoc0C_1309, l0800_9078), (wLoc0C_1309, l0800_9092), (wLoc0C_1309, l0800_90AA), (wLoc0C_1309, l0800_90A4), (wLoc0C_1309, l0800_90BB), (wLoc0C_1309, l0800_909E), (wLoc0C_1309, l0800_9098), (wLoc0C_1370, l0800_907E), (wLoc0C_1371, l0800_9088))
	bLoc03_1258 = PHI((bLoc03_1256, l0800_9045), (bLoc03_1372, l0800_9078), (bLoc03_1308, l0800_9092), (bLoc03_1259, l0800_90AA), (bLoc03_1260, l0800_90A4), (bLoc03_1258, l0800_90BB), (bLoc03_1307, l0800_909E), (bLoc03_1306, l0800_9098), (bLoc03_1258, l0800_907E), (bLoc03_1258, l0800_9088))
	dx_671 = PHI((dx_909, l0800_9045), (dx_671, l0800_9078), (dx_671, l0800_9092), (dx_671, l0800_90AA), (dx_671, l0800_90A4), (dx_155, l0800_90BB), (dx_671, l0800_909E), (dx_671, l0800_9098), (dx_671, l0800_907E), (dx_1169, l0800_9088))
	bx_111 = PHI((bx_906, l0800_9045), (bx_116, l0800_9078), (bx_116, l0800_9092), (bx_116, l0800_90AA), (bx_116, l0800_90A4), (bx_116, l0800_90BB), (bx_116, l0800_909E), (bx_116, l0800_9098), (bx_116, l0800_907E), (bx_116, l0800_9088))
	di_91 = PHI((di_880, l0800_9045), (di_94, l0800_9078), (di_94, l0800_9092), (di_94, l0800_90AA), (di_94, l0800_90A4), (di_94, l0800_90BB), (di_94, l0800_909E), (di_94, l0800_9098), (di_836, l0800_907E), (di_836, l0800_9088))
	Mem83 = PHI((Mem80, l0800_9045), (Mem847, l0800_9078), (Mem505, l0800_9092), (Mem119, l0800_90AA), (Mem123, l0800_90A4), (Mem89, l0800_90BB), (Mem501, l0800_909E), (Mem497, l0800_9098), (Mem834, l0800_907E), (Mem844, l0800_9088))
	si_82 = PHI((si_60, l0800_9045), (si_85, l0800_9078), (si_85, l0800_9092), (si_85, l0800_90AA), (si_85, l0800_90A4), (si_85, l0800_90BB), (si_85, l0800_909E), (si_85, l0800_9098), (si_85, l0800_907E), (si_85, l0800_9088))
	si_85 = si_82 + 0x0001
	ax_86 = (int16) Mem83[ds:si_82:byte]
	wArg0A_1257 = si_85
	ax_92 = di_91
	di_94 = ax_86
	branch ax_86 < 0x0000 l0800_9075
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9075:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9075_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1967, out di_101)
	dxOut = dx_671
	diOut = di_101
	return (byte) cx_903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_905C:
	bx_113 = DPB(DPB(bx_111, Mem89[ds:ax_86 + 0x257C:byte], 0), 0x00, 8) (alias)
	branch bx_113 <=u 0x0015 l0800_906A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906A:
	bx_116 = bx_113 << 0x0001
	switch (bx_113 << 0x0001) { l0800_93BE l0800_93BE l0800_93BE l0800_9071 l0800_9078 l0800_907E l0800_926F l0800_90C2 l0800_90C2 l0800_90CC l0800_91A1 l0800_9092 l0800_909E l0800_9098 l0800_90BD l0800_920B l0800_92B1 l0800_90B0 l0800_90C7 l0800_9127 l0800_90A4 l0800_90AA }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90AA:
	bLoc03_1259 = bLoc03_1258 | 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90A4:
	bLoc03_1260 = bLoc03_1258 & 0xDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9127:
	ax_128 = fn0800_912A(SEQ(ss, fp - 2), di_91, cx_903, bx_113 << 0x0001, ds, out cx_131, out bx_130, out bp_129, out di_1962)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9127_thunk_fn0800_912A:
	fn0800_912A(SEQ(ss, bp_129), ax_128, cx_131, bx_130, ds, out cx_144, out bx_1971, out bp_1972, out di_145)
	dxOut = dx_671
	diOut = di_145
	return (byte) cx_144
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90C7:
	si_153 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90B0:
	ax_154 = wLoc08_1374
	dx_155 = 0x0000
	branch (bLoc03_1258 & 0x01) == 0x00 l0800_9110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90BB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92B1:
	di_170 = fp - 0x002C
	cx_171 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BD:
	di_465 = PHI((di_170, l0800_92B1), (di_467, l0800_92BD_1))
	Mem175 = PHI((Mem167, l0800_92B1), (Mem466, l0800_92BD_1))
	cx_172 = PHI((cx_171, l0800_92B1), (cx_468, l0800_92BD_1))
	branch cx_172 == 0x0000 l0800_92BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BF:
	al_180 = Mem175[ds:si_85:byte]
	v48_183 = bLoc03_1258 & 0xEF
	es_176 = bp
	ax_1096 = (word16) al_180 (alias)
	si_181 = si_85 + 0x0001
	bLoc03_1263 = v48_183
	branch al_180 != 0x5E l0800_92D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92CA:
	al_192 = Mem189[ds:si_85 + 0x0001:byte]
	bLoc03_1264 = v48_183 | 0x10
	ax_1097 = DPB(ax_1096, al_192, 0) (alias)
	si_193 = si_85 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92D0:
	bLoc03_1492 = PHI((bLoc03_1263, l0800_92BF), (bLoc03_1264, l0800_92CA))
	si_1119 = PHI((si_181, l0800_92BF), (si_193, l0800_92CA))
	Mem1114 = PHI((Mem184, l0800_92BF), (Mem189, l0800_92CA))
	ax_1095 = PHI((ax_1096, l0800_92BF), (ax_1097, l0800_92CA))
	al_1094 = PHI((al_180, l0800_92BF), (al_192, l0800_92CA))
	ax_1099 = DPB(DPB(ax_1095, 0x00, 8), al_1094, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92D2:
	dx_1144 = PHI((dx_671, l0800_92D0), (dx_1148, l0800_92EE), (dx_1149, l0800_92F2), (dx_1150, l0800_92F7))
	si_1118 = PHI((si_1119, l0800_92D0), (si_218, l0800_92EE), (si_218, l0800_92F2), (si_218, l0800_92F7))
	Mem209 = PHI((Mem1114, l0800_92D0), (Mem216, l0800_92EE), (Mem216, l0800_92F2), (Mem216, l0800_92F7))
	ax_197 = PHI((ax_1099, l0800_92D0), (ax_1111, l0800_92EE), (ax_1103, l0800_92F2), (ax_1104, l0800_92F7))
	al_195 = PHI((al_1094, l0800_92D0), (al_217, l0800_92EE), (al_217, l0800_92F2), (al_217, l0800_92F7))
	ax_198 = DPB(ax_197, al_195, 0) (alias)
	Mem211[ss:fp - 0x002C + (ax_198 >>u 0x03):byte] = Mem209[ss:fp - 0x002C + (ax_198 >>u 0x03):byte] | 0x80
	dl_196 = al_195
	dx_1151 = DPB(dx_1144, al_195, 0) (alias)
	di_201 = ax_198 >>u 0x03
	cx_1133 = 0x8007 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92E4:
	dx_1143 = PHI((dx_1151, l0800_92D2), (dx_1152, l0800_92FD), (dx_1154, l0800_9311))
	cx_1132 = PHI((cx_1133, l0800_92D2), (cx_1132, l0800_92FD), (cx_1135, l0800_9311))
	di_1127 = PHI((di_201, l0800_92D2), (di_1127, l0800_92FD), (di_451, l0800_9311))
	ax_1100 = PHI((ax_198, l0800_92D2), (ax_1105, l0800_92FD), (ax_1108, l0800_9311))
	dl_433 = PHI((dl_196, l0800_92D2), (dl_433, l0800_92FD), (dl_1164, l0800_9311))
	Mem216 = PHI((Mem211, l0800_92D2), (Mem216, l0800_92FD), (Mem456, l0800_9311))
	si_215 = PHI((si_1118, l0800_92D2), (si_440, l0800_92FD), (si_440, l0800_9311))
	al_217 = Mem216[ds:si_215:byte]
	ch_1168 = SLICE(cx_1132, byte, 8) (alias)
	dx_1148 = DPB(dx_1143, dl_433, 0) (alias)
	dx_1149 = DPB(dx_1143, dl_433, 0) (alias)
	dx_1150 = DPB(dx_1143, dl_433, 0) (alias)
	dx_1152 = DPB(dx_1143, dl_433, 0) (alias)
	dx_1155 = DPB(dx_1143, dl_433, 0) (alias)
	dx_1156 = DPB(dx_1143, dl_433, 0) (alias)
	ax_1103 = DPB(ax_1100, al_217, 0) (alias)
	ax_1104 = DPB(ax_1100, al_217, 0) (alias)
	ax_1110 = DPB(ax_1100, al_217, 0) (alias)
	ax_1111 = DPB(ax_1100, al_217, 0) (alias)
	si_218 = si_215 + 0x0001
	branch al_217 == 0x00 l0800_9313
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9313:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9313_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2), out bp_1978, out di_226)
	dxOut = dx_1155
	diOut = di_226
	return (byte) cx_1132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92EA:
	branch al_217 == 0x5D l0800_9316
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9316:
	v64_233 = wLoc0C_1309 & 0x7FFF
	wArg0A_1265 = si_218
	wLoc0C_1267 = v64_233
	si_236 = v64_233
	branch (bLoc03_1492 & 0x01) != 0x00 l0800_932A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9327:
	di_241 = fn0800_8FAB(SEQ(ss, fp - 2), ds, out es_242)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_932A:
	wLoc08_1269 = PHI((wLoc08_1374, l0800_9316), (wLoc08_1374, l0800_9327), (wLoc08_1270, l0800_9364), (wLoc08_1270, l0800_936A))
	Top_278 = PHI((Top_912, l0800_9316), (Top_912, l0800_9327), (Top_279, l0800_9364), (Top_279, l0800_936A))
	dx_276 = PHI((dx_1156, l0800_9316), (dx_1156, l0800_9327), (dx_277, l0800_9364), (dx_277, l0800_936A))
	bx_274 = PHI((bx_116, l0800_9316), (bx_116, l0800_9327), (bx_355, l0800_9364), (bx_355, l0800_936A))
	cx_272 = PHI((cx_1132, l0800_9316), (cx_1132, l0800_9327), (cx_398, l0800_9364), (cx_398, l0800_936A))
	ax_269 = PHI((ax_1110, l0800_9316), (ax_1110, l0800_9327), (ax_1129, l0800_9364), (ax_1130, l0800_936A))
	di_268 = PHI((di_1127, l0800_9316), (di_241, l0800_9327), (di_268, l0800_9364), (di_374, l0800_936A))
	es_259 = PHI((es_176, l0800_9316), (es_242, l0800_9327), (es_285, l0800_9364), (es_285, l0800_936A))
	Mem253 = PHI((Mem234, l0800_9316), (Mem234, l0800_9327), (Mem266, l0800_9364), (Mem373, l0800_936A))
	si_247 = PHI((si_236, l0800_9316), (si_236, l0800_9327), (si_352, l0800_9364), (si_352, l0800_936A))
	si_248 = si_247 - 0x0001
	branch si_248 < 0x0000 l0800_9385
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_932D:
	v68_254 = wLoc08_1269 + 0x0001
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_269,bx:bx_274,cx:cx_272,dx:dx_276,sp:fp - 6,Stack +0000:bp,Stack +0002:wArg06,Stack +0004:wArg02,Stack +0005:SLICE(wArg08, byte, 8),Stack +0006:es_259,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_218,Stack +000E:psegArg0C,Stack +0010:wArg08,Stack +0012:si_218,Stack +0014:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:es,Stack +FFFFFFD8:di,Stack +FFFFFFDA:si,Stack +FFFFFFF6:v64_233,Stack +FFFFFFFA:v68_254,Stack +FFFFFFFC:wLoc06_1670,Stack +FFFFFFFE:wLoc0A,Stack +FFFFFFFF:bLoc03_1492,Top:Top_278
		defs: ax:ax_270,dx:dx_277,Top:Top_279
	wLoc08_1270 = v68_254
	cx_283 = wArg08
	es_285 = es_259
	branch ax_270 < 0x0000 l0800_9394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9394:
	branch si_248 + 0x0001 >= v64_233 l0800_9398_thunk_fn0800_93A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9398_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1979, out di_297)
	dxOut = dx_277
	diOut = di_297
	return (byte) wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_939A:
	branch (bLoc03_1492 & 0x01) != 0x00 l0800_939E_thunk_fn0800_93A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_939E_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1980, out di_311)
	dxOut = dx_277
	diOut = di_311
	return (byte) wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A0:
	Mem320[es_259:di_268:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A3_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1981, out di_328)
	dxOut = dx_277
	diOut = di_328
	return (byte) wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9341:
	cx_398 = 0x8007 (alias)
	si_352 = si_248
	al_370 = (byte) ax_270 (alias)
	ax_1129 = ax_270 (alias)
	ax_1130 = ax_270 (alias)
	bx_355 = ax_270 >>u 0x03
	branch (Mem266[ss:fp - 0x002C + (ax_270 >>u 0x03):byte] & 0x80) == 0x00 l0800_935E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_935E:
	branch (bLoc03_1492 & 0x10) == 0x00 l0800_936D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9356:
	branch (bLoc03_1492 & 0x10) == 0x00 l0800_9364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9364:
	branch (bLoc03_1492 & 0x01) != 0x00 l0800_932A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_936A:
	Mem373[es_259:di_268:byte] = al_370
	di_374 = di_268 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_935C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_936D:
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_270,bx:ax_270 >>u 0x03,cx:0x8007,dx:dx_277,sp:fp - 8,Stack +0000:bp,Stack +0002:ax_270,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0007:SLICE(wArg08, byte, 8),Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_218,Stack +000E:psegArg0C,Stack +0010:wArg06,Stack +0012:wArg08,Stack +0014:si_218,Stack +0016:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD8:es,Stack +FFFFFFDA:di,Stack +FFFFFFDC:si,Stack +FFFFFFF6:v64_233,Stack +FFFFFFFA:v68_254,Stack +FFFFFFFC:wLoc06_1670,Stack +FFFFFFFE:v64_233,Stack +FFFFFFFF:bLoc03_1492,Top:Top_279
		defs: bx:bx_401,cx:cx_399,dx:dx_403,sp:sp_392,Top:Top_405
	es_408 = Mem391[ss:sp_392 + 0x0006:selector]
	branch si_248 + 0x0001 >= v64_233 l0800_938E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9385:
	Top_1245 = PHI((Top_278, l0800_932A), (Top_405, l0800_936D))
	dx_1236 = PHI((dx_276, l0800_932A), (dx_403, l0800_936D))
	bx_1227 = PHI((bx_274, l0800_932A), (bx_401, l0800_936D))
	cx_1217 = PHI((cx_272, l0800_932A), (cx_399, l0800_936D))
	es_426 = PHI((es_259, l0800_932A), (es_408, l0800_936D))
	Mem417 = PHI((Mem253, l0800_932A), (Mem411, l0800_936D))
	branch (bLoc03_1492 & 0x01) != 0x00 l0800_9391
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_938B:
	wLoc06_1305 = wLoc06_1670 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_938E:
	wLoc06_1675 = PHI((wLoc06_1670, l0800_936D), (wLoc06_1305, l0800_938B))
	Top_1246 = PHI((Top_405, l0800_936D), (Top_1245, l0800_938B))
	dx_1237 = PHI((dx_403, l0800_936D), (dx_1236, l0800_938B))
	bx_1228 = PHI((bx_401, l0800_936D), (bx_1227, l0800_938B))
	cx_1218 = PHI((cx_399, l0800_936D), (cx_1217, l0800_938B))
	es_425 = PHI((es_408, l0800_936D), (es_426, l0800_938B))
	Mem429[es_425:di_268:byte] = 0x00
	di_430 = di_268 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9391:
	wLoc06_1674 = PHI((wLoc06_1670, l0800_9385), (wLoc06_1675, l0800_938E))
	Top_1244 = PHI((Top_1245, l0800_9385), (Top_1246, l0800_938E))
	dx_1235 = PHI((dx_1236, l0800_9385), (dx_1237, l0800_938E))
	bx_1226 = PHI((bx_1227, l0800_9385), (bx_1228, l0800_938E))
	cx_1216 = PHI((cx_1217, l0800_9385), (cx_1218, l0800_938E))
	di_1201 = PHI((di_268, l0800_9385), (di_430, l0800_938E))
	Mem1082 = PHI((Mem417, l0800_9385), (Mem429, l0800_938E))
	wLoc08_1600 = wLoc08_1269
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92EE:
	branch al_217 != 0x2D l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92F2:
	branch dl_433 >u Mem216[bp:si_218:byte] l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92F7:
	branch Mem216[bp:si_218:byte] == 0x5D l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92FD:
	al_441 = Mem216[ds:si_218:byte] - dl_433
	si_440 = si_218 + 0x0001
	ax_1105 = DPB(ax_1100, al_441, 0) (alias)
	branch al_441 == 0x00 l0800_92E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9303:
	dl_444 = dl_433 + al_441
	dx_1154 = DPB(dx_1143, dl_444, 0) (alias)
	dl_1164 = dl_444 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9305:
	al_459 = PHI((al_441, l0800_9303), (al_460, l0800_9305))
	Mem454 = PHI((Mem216, l0800_9303), (Mem456, l0800_9305))
	di_450 = PHI((di_1127, l0800_9303), (di_451, l0800_9305))
	ch_446 = PHI((ch_1168, l0800_9303), (ch_448, l0800_9305))
	ch_448 = __rol(ch_446, 0x01)
	di_451 = di_450 + ((ch_446 & 0x80) != 0x00)
	Mem456[ss:fp - 0x002C + di_451:byte] = Mem454[ss:fp - 0x002C + di_451:byte] | ch_448
	al_460 = al_459 - 0x01
	cx_1135 = DPB(cx_1132, ch_448, 8) (alias)
	ax_1108 = DPB(ax_1100, al_460, 0) (alias)
	branch al_460 != 0x00 l0800_9305
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9311:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BD_1:
	Mem466[ss:di_465:word16] = 0x0000
	di_467 = di_465 + 0x0002
	cx_468 = cx_172 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920B:
	ax_470 = fn0800_920E(SEQ(ss, fp - 2), di_91, cx_903, bx_113 << 0x0001, ds, out cx_473, out bx_472, out bp_471, out di_1961)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920B_thunk_fn0800_920E:
	fn0800_920E(SEQ(ss, bp_471), ax_470, cx_473, bx_472, ds, out cx_486, out bx_1974, out bp_1975, out di_487)
	dxOut = dx_671
	diOut = di_487
	return (byte) cx_486
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90BD:
	si_495 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9098:
	bLoc03_1306 = bLoc03_1258 | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_909E:
	bLoc03_1307 = bLoc03_1258 | 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9092:
	bLoc03_1308 = bLoc03_1258 | 0x08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91A1:
	fn0800_A2D0(ds)
	wLoc0E_1816 = wArg06
	wLoc10_1817 = wArg04
	wLoc12_1818 = wArg02
	branch wLoc0A <= 0x0000 l0800_9203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9203:
	fn0800_A2D8(ds)
	branch wLoc0A < 0x0000 l0800_919E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_919E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_919E_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1985, out di_545)
	dxOut = dx_671
	diOut = di_545
	return (byte) cx_903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9208:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9208_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2), out bp_1984, out di_556)
	dxOut = dx_671
	diOut = di_556
	return (byte) cx_903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91CA:
	branch ((int16) bLoc03_1258 & 0x0001) != 0x0000 l0800_91FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91FD:
	Top_565 = fn0800_A2D8(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91D3:
	di_567 = fn0800_8FAB(SEQ(ss, fp - 2), ds, out es_1983)
	wLoc06_1316 = wLoc06_1670 + 0x0001
	branch (bLoc03_1258 & 0x04) == 0x00 l0800_91E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91E4:
	branch (bLoc03_1258 & 0x08) == 0x00 l0800_91EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91EF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91F1:
	Top_598 = fn0800_A2D4(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90CC:
	si_601 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90C2:
	si_604 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90CE:
	si_645 = PHI((si_153, l0800_90C7), (si_495, l0800_90BD), (si_604, l0800_90C2), (si_601, l0800_90CC))
	branch (ax_86 & 0x0020) != 0x0000 l0800_90DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90D4:
	branch ax_86 == 0x0058 l0800_90DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90D9:
	bLoc03_1319 = bLoc03_1258 | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90DD:
	bLoc03_1338 = PHI((bLoc03_1258, l0800_90CE), (bLoc03_1258, l0800_90D4), (bLoc03_1319, l0800_90D9))
	wLoc0E_1828 = wArg08
	wLoc10_1829 = wArg06
	wLoc12_1830 = wArg04
	wLoc14_1831 = wArg02
	ax_673 = fn0800_94B0(wLoc0C_1309 & 0x7FFF, cx_903, dx_671, bx_113 << 0x0001, fp - 2, si_645, ax_86, ds, wArg02, wArg04, wArg06, wArg08, si_645, wLoc0C_1309 & 0x7FFF, SEQ(ss, fp - 0x0008), SEQ(ss, fp - 0x000A), out cx_675, out dx_677, out bx_674, out di_676, out Top_680)
	branch wLoc0A <= 0x0000 l0800_911F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911F:
	branch wLoc0A < 0x0000 l0800_9124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9124:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9124_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1977, out di_692)
	dxOut = dx_677
	diOut = di_692
	return (byte) cx_675
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9121:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9121_thunk_fn0800_93BE:
	fn0800_93BE(SEQ(ss, fp - 2), out bp_1976, out di_703)
	dxOut = dx_677
	diOut = di_703
	return (byte) cx_675
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9107:
	branch (bLoc03_1338 & 0x01) != 0x00 l0800_911C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_910D:
	wLoc06_1342 = wLoc06_1670 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9110:
	wLoc10_1939 = PHI((wLoc10_1936, l0800_90B0), (wLoc10_1829, l0800_910D))
	wLoc0E_1917 = PHI((wLoc0E_1914, l0800_90B0), (wLoc0E_1828, l0800_910D))
	wLoc14_1899 = PHI((wLoc14_1896, l0800_90B0), (wLoc14_1831, l0800_910D))
	wLoc12_1877 = PHI((wLoc12_1874, l0800_90B0), (wLoc12_1830, l0800_910D))
	wLoc06_1672 = PHI((wLoc06_1670, l0800_90B0), (wLoc06_1342, l0800_910D))
	bLoc03_1343 = PHI((bLoc03_1258, l0800_90B0), (bLoc03_1338, l0800_910D))
	Top_1241 = PHI((Top_912, l0800_90B0), (Top_680, l0800_910D))
	bx_1223 = PHI((bx_116, l0800_90B0), (bx_674, l0800_910D))
	cx_1213 = PHI((cx_903, l0800_90B0), (cx_675, l0800_910D))
	dx_730 = PHI((dx_155, l0800_90B0), (dx_677, l0800_910D))
	ax_723 = PHI((ax_154, l0800_90B0), (ax_673, l0800_910D))
	fn0800_8FAB(SEQ(ss, fp - 2), ds, out es_1973)
	es_di_1958 = <invalid>
	Mem724[es_di_1958:word16] = ax_723
	di_717 = SLICE(es_di_1958, word16, 0) (alias)
	di_725 = di_717 + 0x0002
	branch (bLoc03_1343 & 0x04) == 0x00 l0800_911C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911A:
	Mem733[es_di_1958 + 0x0002:word16] = dx_730
	dx_732 = ax_723
	di_734 = di_717 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911C:
	wLoc10_1938 = PHI((wLoc10_1939, l0800_9110), (wLoc10_1939, l0800_911A), (wLoc10_1829, l0800_9107))
	wLoc0E_1916 = PHI((wLoc0E_1917, l0800_9110), (wLoc0E_1917, l0800_911A), (wLoc0E_1828, l0800_9107))
	wLoc14_1898 = PHI((wLoc14_1899, l0800_9110), (wLoc14_1899, l0800_911A), (wLoc14_1831, l0800_9107))
	wLoc12_1876 = PHI((wLoc12_1877, l0800_9110), (wLoc12_1877, l0800_911A), (wLoc12_1830, l0800_9107))
	bLoc03_1701 = PHI((bLoc03_1343, l0800_9110), (bLoc03_1343, l0800_911A), (bLoc03_1338, l0800_9107))
	wLoc06_1671 = PHI((wLoc06_1672, l0800_9110), (wLoc06_1672, l0800_911A), (wLoc06_1670, l0800_9107))
	Top_1240 = PHI((Top_1241, l0800_9110), (Top_1241, l0800_911A), (Top_680, l0800_9107))
	dx_1232 = PHI((dx_730, l0800_9110), (dx_732, l0800_911A), (dx_677, l0800_9107))
	bx_1222 = PHI((bx_1223, l0800_9110), (bx_1223, l0800_911A), (bx_674, l0800_9107))
	cx_1212 = PHI((cx_1213, l0800_9110), (cx_1213, l0800_911A), (cx_675, l0800_9107))
	di_1198 = PHI((di_725, l0800_9110), (di_734, l0800_911A), (di_676, l0800_9107))
	Mem1080 = PHI((Mem724, l0800_9110), (Mem733, l0800_911A), (Mem658, l0800_9107))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_926F:
	branch (bLoc03_1258 & 0x01) != 0x00 l0800_9278
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9275:
	di_739 = fn0800_8FAB(SEQ(ss, fp - 2), ds, out es_740)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9278:
	di_1178 = PHI((di_94, l0800_926F), (di_739, l0800_9275))
	es_1174 = PHI((es_79, l0800_926F), (es_740, l0800_9275))
	si_749 = wLoc0C_1309
	branch wLoc0C_1309 >= 0x0000 l0800_9282
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_927F:
	si_753 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9282:
	si_1176 = PHI((si_749, l0800_9278), (si_753, l0800_927F))
	branch wLoc0C_1309 == 0x0000 l0800_92A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9284:
	wLoc08_1345 = PHI((wLoc08_1374, l0800_9282), (wLoc08_1346, l0800_929F))
	Top_784 = PHI((Top_912, l0800_9282), (Top_785, l0800_929F))
	dx_782 = PHI((dx_671, l0800_9282), (dx_783, l0800_929F))
	bx_780 = PHI((bx_116, l0800_9282), (bx_781, l0800_929F))
	cx_778 = PHI((cx_903, l0800_9282), (cx_789, l0800_929F))
	ax_775 = PHI((ax_92, l0800_9282), (ax_1182, l0800_929F))
	di_774 = PHI((di_1178, l0800_9282), (di_1179, l0800_929F))
	si_773 = PHI((si_1176, l0800_9282), (si_815, l0800_929F))
	v65_759 = wLoc08_1345 + 0x0001
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_775,bx:bx_780,cx:cx_778,dx:dx_782,sp:fp - 6,Stack +0000:bp,Stack +0002:wArg06,Stack +0004:wArg02,Stack +0005:SLICE(wArg08, byte, 8),Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_85,Stack +000E:psegArg0C,Stack +0010:wArg08,Stack +0012:si_85,Stack +0014:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:es,Stack +FFFFFFD8:di,Stack +FFFFFFDA:si,Stack +FFFFFFF4:wLoc14_1896,Stack +FFFFFFF6:wLoc0C_1309,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v65_759,Stack +FFFFFFFC:wLoc06_1670,Stack +FFFFFFFE:wLoc0A,Stack +FFFFFFFF:bLoc03_1258,Top:Top_784
		defs: ax:ax_776,bx:bx_781,dx:dx_783,Top:Top_785
	wLoc08_1346 = v65_759
	cx_789 = wArg08
	al_811 = (byte) ax_776 (alias)
	branch ax_776 < 0x0000 l0800_92AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AE_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1982, out di_800)
	dxOut = dx_783
	diOut = di_800
	return (byte) wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9298:
	branch (bLoc03_1258 & 0x01) != 0x00 l0800_929F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_929E:
	Mem812[es_1174:di_774:byte] = al_811
	di_813 = di_774 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_929F:
	di_1179 = PHI((di_774, l0800_9298), (di_813, l0800_929E))
	Mem825 = PHI((Mem771, l0800_9298), (Mem812, l0800_929E))
	ax_1182 = ax_776
	si_815 = si_773 - 0x0001
	branch si_815 > 0x0000 l0800_9284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92A2:
	wLoc08_1599 = PHI((wLoc08_1374, l0800_9282), (wLoc08_1346, l0800_929F))
	Top_1243 = PHI((Top_912, l0800_9282), (Top_785, l0800_929F))
	dx_1234 = PHI((dx_671, l0800_9282), (dx_783, l0800_929F))
	bx_1225 = PHI((bx_116, l0800_9282), (bx_781, l0800_929F))
	cx_1215 = PHI((cx_903, l0800_9282), (cx_789, l0800_929F))
	di_1200 = PHI((di_1178, l0800_9282), (di_1179, l0800_929F))
	Mem823 = PHI((Mem89, l0800_9282), (Mem825, l0800_929F))
	branch (bLoc03_1258 & 0x01) != 0x00 l0800_92AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92A8:
	wLoc06_1369 = wLoc06_1670 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AB:
	wLoc06_1673 = PHI((wLoc06_1670, l0800_92A2), (wLoc06_1369, l0800_92A8))
	Mem1081 = PHI((Mem823, l0800_92A2), (Mem830, l0800_92A8))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_907E:
	wLoc0C_1370 = ax_86 - 0x0030
	di_836 = wLoc0C_1309
	branch wLoc0C_1309 < 0x0000 l0800_9051
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9088:
	dx_1169 = SLICE(wLoc0C_1309 *u 0x000A, word16, 16) (alias)
	wLoc0C_1371 = ax_86 - 0x0030 + (word16) (wLoc0C_1309 *u 0x000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9078:
	bLoc03_1372 = bLoc03_1258 | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9071:
	al_876 = (byte) ax_86 (alias)
	di_852 = di_91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1968, out di_856)
	dxOut = dx_671
	diOut = di_856
	return (byte) cx_903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9067:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9067_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1964, out di_867)
	dxOut = dx_671
	diOut = di_867
	return (byte) cx_903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FD8:
	bLoc03_1402 = PHI((bLoc03_1403, l0800_8FD4), (bLoc03_1258, l0800_9071))
	wLoc0C_1400 = PHI((wLoc0C_1401, l0800_8FD4), (wLoc0C_1309, l0800_9071))
	wArg0A_1396 = PHI((wArg0A_1397, l0800_8FD4), (wArg0A_1257, l0800_9071))
	dx_908 = PHI((dx_909, l0800_8FD4), (dx_671, l0800_9071))
	bx_905 = PHI((bx_906, l0800_8FD4), (bx_116, l0800_9071))
	si_898 = PHI((si_60, l0800_8FD4), (si_85, l0800_9071))
	di_879 = PHI((di_880, l0800_8FD4), (di_852, l0800_9071))
	al_875 = PHI((al_61, l0800_8FD4), (al_876, l0800_9071))
	v17_886 = wLoc08_1374 + 0x0001
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:di_879,bx:bx_905,cx:cx_903,dx:dx_908,sp:fp - 4,Stack +0000:bp,Stack +0002:wArg06,Stack +0003:SLICE(wArg06, byte, 8),Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1396,Stack +000E:psegArg0C,Stack +0010:wArg0A_1396,Stack +0012:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFD6:di,Stack +FFFFFFD8:si,Stack +FFFFFFF2:wLoc14_1896,Stack +FFFFFFF4:wLoc12_1874,Stack +FFFFFFF6:wLoc0C_1400,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v17_886,Stack +FFFFFFFC:wLoc06_1670,Stack +FFFFFFFE:v17_886,Stack +FFFFFFFF:bLoc03_1402,Top:Top_912
		defs: ax:ax_900,bx:bx_907,dx:dx_910,sp:sp_897,Top:Top_914
	ax_877 = (int16) al_875
	wLoc08_1375 = v17_886
	bLoc04_1851 = SLICE(wArg06, byte, 0) (alias)
	cx_918 = Mem896[ss:sp_897 + 2:word16]
	sp_919 = sp_897 + 4
	al_924 = (byte) ax_900 (alias)
	branch ax_900 < 0x0000 l0800_9016
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FEC:
	ax_925 = (int16) al_924
	di_926 = ax_877
	branch ax_877 < 0x0000 l0800_902B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FF1:
	branch Mem896[ds:ax_877 + 0x257C:byte] != 0x01 l0800_902B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_902B:
	branch ax_925 == ax_877 l0800_8FCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_902F:
	Mem942[ss:sp_897 + 2:word16] = wArg08
	Mem945[ss:sp_897:word16] = wArg06
	Mem947[ss:sp_897 - 2:word16] = ax_925
	wLoc04_1852 = SEQ(bLoc03_1402, bLoc04_1851) (alias)
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_925,bx:bx_907,cx:cx_918,dx:dx_910,sp:sp_897 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1396,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFEE:wLoc14_1896,Stack +FFFFFFF0:wLoc12_1874,Stack +FFFFFFF2:wLoc10_1936,Stack +FFFFFFF4:wLoc0E_1914,Stack +FFFFFFF6:wLoc0C_1400,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v17_886,Stack +FFFFFFFC:wLoc06_1670,Stack +FFFFFFFE:wLoc04_1852,Stack +FFFFFFFF:bLoc03_1402,Top:Top_914
		defs: cx:cx_954,dx:dx_958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_903F_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1966, out di_970)
	dxOut = dx_958
	diOut = di_970
	return (byte) cx_954
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FF8:
	wLoc08_1439 = PHI((wLoc08_1375, l0800_8FF1), (wLoc08_1455, l0800_9004))
	Top_1027 = PHI((Top_914, l0800_8FF1), (Top_1049, l0800_9004))
	dx_1024 = PHI((dx_910, l0800_8FF1), (dx_1048, l0800_9004))
	cx_1020 = PHI((cx_918, l0800_8FF1), (cx_1053, l0800_9004))
	sp_1000 = PHI((sp_919, l0800_8FF1), (sp_1054, l0800_9004))
	Mem990 = PHI((Mem896, l0800_8FF1), (Mem1043, l0800_9004))
	bx_980 = PHI((bx_907, l0800_8FF1), (bx_1047, l0800_9004))
	ax_978 = PHI((ax_925, l0800_8FF1), (ax_1055, l0800_9004))
	branch (byte) ax_978 < 0x00 l0800_9019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FFD:
	branch Mem990[ds:ax_978 + 0x257C:byte] != 0x01 l0800_9019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9019:
	sp_1001 = sp_1000 - 2
	Mem1002[ss:sp_1001:word16] = wArg08
	Mem1005[ss:sp_1001 - 2:word16] = wArg06
	Mem1008[ss:sp_1001 - 4:word16] = ax_978
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:bx_980,bx:ax_978,cx:cx_1020,dx:dx_1024,sp:sp_1001 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1396,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFEE:wLoc14_1896,Stack +FFFFFFF0:wLoc12_1874,Stack +FFFFFFF2:wLoc10_1936,Stack +FFFFFFF4:wLoc0E_1914,Stack +FFFFFFF6:wLoc0C_1400,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:wLoc08_1439,Stack +FFFFFFFC:wLoc06_1670,Stack +FFFFFFFE:wLoc04_1852,Stack +FFFFFFFF:bLoc03_1402,Top:Top_1027
		defs: bx:bx_1022,cx:cx_1021,dx:dx_1025,Top:Top_1028
	wLoc08_1454 = wLoc08_1439 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9004:
	v26_1035 = wLoc08_1439 + 0x0001
	sp_1039 = sp_1000 - 2
	Mem1040[ss:sp_1039:word16] = wArg08
	Mem1043[ss:sp_1039 - 2:word16] = wArg06
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:bx_980,bx:ax_978,cx:cx_1020,dx:dx_1024,sp:sp_1039 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1396,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFEE:wLoc14_1896,Stack +FFFFFFF0:wLoc12_1874,Stack +FFFFFFF2:wLoc10_1936,Stack +FFFFFFF4:wLoc0E_1914,Stack +FFFFFFF6:wLoc0C_1400,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v26_1035,Stack +FFFFFFFC:wLoc06_1670,Stack +FFFFFFFE:wLoc04_1852,Stack +FFFFFFFF:bLoc03_1402,Top:Top_1027
		defs: ax:ax_1045,bx:bx_1047,dx:dx_1048,sp:sp_1044,Top:Top_1049
	wLoc08_1455 = v26_1035
	cx_1053 = Mem1043[ss:sp_1044 + 2:word16]
	sp_1054 = sp_1044 + 4
	ax_1055 = ax_1045
	branch ax_1045 > 0x0000 l0800_8FF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9016:
	dx_1780 = PHI((dx_910, l0800_8FD8), (dx_1048, l0800_9004))
	cx_1743 = PHI((cx_918, l0800_8FD8), (cx_1053, l0800_9004))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9016_thunk_fn0800_93A6:
	fn0800_93A6(SEQ(ss, fp - 2), out bp_1963, out di_1063)
	dxOut = dx_1780
	diOut = di_1063
	return (byte) cx_1743
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F97_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8FAB(word32 ss_bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di es
// Trashed: SCZO di es Top
// Preserved: sp
fn0800_8FAB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FAB:
	ptr32 es_di_7 = Mem0[ss_bp + 0x0010:segptr32]
	word16 di_12 = (word16) es_di_7
	branch (Mem0[ss_bp - 0x0001:byte] & 0x20) == 0x00 l0800_8FBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FBC:
	word16 di_13 = Mem0[es_di_7:word16]
	Mem20[ss_bp + 0x0010:word16] = Mem16[ss_bp + 0x0010:word16] + 0x0002
	esOut = ds
	return di_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FB4:
	ptr32 es_di_22 = Mem0[ds:di_12:segptr32]
	Mem24[ss_bp + 0x0010:word16] = Mem0[ss_bp + 0x0010:word16] + 0x0004
	esOut = SLICE(es_di_22, selector, 16)
	return (word16) es_di_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8FAB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_912A(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_912A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_912A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_912A_thunk_fn0800_93C5:
	word16 bx_12
	word16 cx_13
	word16 bp_15
	word16 di_16
	word16 ax_11 = fn0800_93C5(ss_bp, ax, cx, bx, ds, out cx_13, out bx_12, out bp_15, out di_16)
	cxOut = cx_13
	bxOut = bx_12
	bpOut = bp_15
	diOut = di_16
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_912A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9145(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_9145_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9145:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9145_thunk_fn0800_93EF:
	fn0800_93EF(ss_bp, ax)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9145_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9169(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_9169_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9169:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9169_thunk_fn0800_93EF:
	fn0800_93EF(ss_bp, ax)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9169_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_920E(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_920E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920E_thunk_fn0800_93C5:
	word16 bx_12
	word16 cx_13
	word16 bp_15
	word16 di_16
	word16 ax_11 = fn0800_93C5(ss_bp, ax, cx, bx, ds, out cx_13, out bx_12, out bp_15, out di_16)
	cxOut = cx_13
	bxOut = bx_12
	bpOut = bp_15
	diOut = di_16
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_920E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93A6(word32 ss_bp, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: ax bp di
// Trashed: SCZO ax bp di es si Top
// Preserved: sp
fn0800_93A6_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A6:
	call SEQ(0x0800, Mem15[ss:bp + 0x0006:word16]) (retsize: 2;)
		uses: ax:0xFFFF,sp:fp - 6,Stack +0002:0xFFFF,Stack +0004:Mem9[ss_bp + 0x0008:word16],Stack +0006:Mem0[ss_bp + 0x000A:word16],Top:0
	Mem27[ss_bp - 0x0004:word16] = Mem15[ss_bp - 0x0004:word16] - (Mem15[ss_bp - 0x0004:word16] <u 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93BA_thunk_fn0800_93BE:
	word16 bp_31
	word16 di_32
	word16 ax_30 = fn0800_93BE(ss_bp, out bp_31, out di_32)
	bpOut = bp_31
	diOut = di_32
	return ax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93A6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93BE(word32 ss_bp, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: ax bp di
// Trashed: ax bp di es si sp Top
// Preserved:
fn0800_93BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93BE:
	word16 ax_9 = Mem0[ss_bp - 0x0004:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9453:
	bpOut = Mem0[ss_bp:word16]
	diOut = wArg02
	return ax_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93C5(word32 ss_bp, word16 ax, word16 cx, word16 bx, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_93C5_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 sp_11 = fp
	int8 Top_18 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93C5:
	Mem8[ss:bp - 0x0006:word16] = Mem6[ss:bp - 0x0006:word16] + 0x0001
	word16 sp_12 = sp_11 - 2
	Mem13[ss:sp_12:word16] = Mem8[ss:bp + 0x000A:word16]
	Mem16[ss:sp_12 - 2:word16] = Mem13[ss:bp + 0x0008:word16]
	word16 ax_23
	word16 bx_25
	call SEQ(0x0800, Mem16[ss:bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_22,bx:bx_24,cx:cx_20,sp:sp_12 - 2,Top:Top_18
		defs: ax:ax_23,bx:bx_25,Top:Top_19
	cx = wLoc04
	sp_11 = fp - 2
	byte al_49 = (byte) ax_23
	branch ax_23 <= 0x0000 l0800_93EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EA:
	branch ax_23 == 0x0000 l0800_93E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93ED_thunk_fn0800_93A6:
	word16 bp_40
	word16 di_41
	word16 ax_39 = fn0800_93A6(ss_bp, out bp_40, out di_41)
	cxOut = wLoc02
	bxOut = bx_25
	bpOut = bp_40
	diOut = di_41
	return ax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93D7:
	branch al_49 < 0x00 l0800_93E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93DB:
	ax = ax_23
	bx = bx_25
	branch Mem16[ds:ax_23 + 0x257C:byte] == 0x01 l0800_93C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93E4:
	word16 cx_74
	word16 ax_76
	word16 bx_78
	call wLoc02 + 0x0003 (retsize: 2;)
		uses: ax:ax_23,bx:bx_25,cx:wLoc02 + 0x0003,sp:fp,Stack +0000:wLoc02,Stack +FFFFFFFC:wLoc06,Stack +FFFFFFFE:wLoc04,Top:Top_19
		defs: ax:ax_76,bx:bx_78,cx:cx_74
	cxOut = cx_74
	bxOut = bx_78
	bpOut = bp
	diOut = di
	return ax_76
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93C5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_93EF(word32 ss_bp, word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_93EF_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 sp_16 = fp
	int8 Top_105 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EF:
	word16 dx_138 = 0x0000
	word16 cx_155 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93F4:
	word16 v8_10 = Mem9[ss:bp - 0x000A:word16] - 0x0001
	Mem11[ss:bp - 0x000A:word16] = v8_10
	byte cl_51 = (byte) cx_155
	branch v8_10 < 0x0000 l0800_9442
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9442:
	ax = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93F9:
	word16 sp_17 = sp_16 - 2
	Mem19[ss:sp_17:word16] = dx_138
	Mem22[ss:sp_17 - 2:word16] = cx_155
	Mem24[ss:bp - 0x0006:word16] = Mem22[ss:bp - 0x0006:word16] + 0x0001
	Mem28[ss:sp_17 - 4:word16] = Mem24[ss:bp + 0x000A:word16]
	Mem31[ss:sp_17 - 6:word16] = Mem28[ss:bp + 0x0008:word16]
	word16 sp_32
	word16 ax_36
	call SEQ(0x0800, Mem31[ss:bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_35,cx:cx_21,dx:dx_18,sp:sp_17 - 6,Top:Top_37
		defs: ax:ax_36,sp:sp_32,Top:Top_38
	word16 cx_44 = Mem31[ss:sp_32 + 4:word16]
	cl_51 = (byte) cx_44 (alias)
	dx_138 = Mem31[ss:sp_32 + 6:word16]
	sp_16 = sp_32 + 8
	ax = ax_36
	byte al_55 = (byte) ax_36
	ax = ax_36 (alias)
	ax = ax_36 (alias)
	branch ax_36 <= 0x0000 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_940F:
	word16 cx_152
	word16 cx_150
	word16 cx_148
	word16 cx_146
	word16 cx_143
	word16 cx_141
	cl_51 = cl_51 - 0x01
	word16 cx_140 = DPB(cx_44, cl_51 - 0x01, 0)
	word16 cx_142 = DPB(cx_141, cl_51 - 0x01, 0)
	word16 cx_139 = DPB(cx_143, cl_51 - 0x01, 0)
	word16 cx_147 = DPB(cx_146, cl_51 - 0x01, 0)
	word16 cx_145 = DPB(cx_148, cl_51 - 0x01, 0)
	word16 cx_151 = DPB(cx_150, cl_51 - 0x01, 0)
	cx_145 = DPB(cx_152, cl_51 - 0x01, 0) (alias)
	branch cl_51 < 0x01 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9413:
	byte ch_115 = al_55 - 0x30
	cx_141 = DPB(cx_140, al_55 - 0x30, 8) (alias)
	cx_143 = DPB(cx_142, al_55 - 0x30, 8) (alias)
	branch al_55 <u 0x30 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_941A:
	branch al_55 <u 0x3A l0800_9436
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_941F:
	byte ch_114 = al_55 - 0x41
	cx_146 = DPB(cx_139, al_55 - 0x41, 8) (alias)
	cx_148 = DPB(cx_147, al_55 - 0x41, 8) (alias)
	branch al_55 <u 0x41 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9424:
	branch al_55 <u 0x47 l0800_9433
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9429:
	ch_114 = al_55 - 0x61
	cx_150 = DPB(cx_145, al_55 - 0x61, 8) (alias)
	cx_152 = DPB(cx_151, al_55 - 0x61, 8) (alias)
	branch al_55 <u 0x61 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_942E:
	branch al_55 >=u 0x67 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9444:
	branch cl_51 == 0x04 l0800_944F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_944F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9450_thunk_fn0800_93A6:
	fn0800_93A6(ss_bp, out bp_195, out di_196)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9449:
	call wLoc02 + 0x0003 (retsize: 2;)
		uses: ax:ax_101,cx:wLoc02 + 0x0003,dx:dx_98,sp:fp,Stack +0000:wLoc02,Top:Top_105
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9433:
	ch_115 = ch_114 + 0x0A
	cx_139 = DPB(cx_145, ch_115, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9436:
	cx_155 = DPB(cx_139, ch_115, 8) (alias)
	dx_138 = DPB(dx_138 << 0x0004, (byte) (dx_138 << 0x0004) + ch_115, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn0800_9485(byte cl, byte bl, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..7] cl:[0..7]
// LiveOut: C bx
// Trashed: SCZO bx Top
// Preserved: sp
fn0800_9485_entry:
	byte bl_8 = (byte) bx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9485:
	bool C_40
	word16 bx_38
	byte bl_16 = bl_8 - 0x30
	branch bl_8 <u 0x30 l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_948B:
	branch bl_8 <=u 0x39 l0800_94A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9490:
	branch bl_8 >u 0x5A l0800_949A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_949A:
	bl_16 = bl_8 - 0x57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9495:
	bl_16 = bl_8 - 0x37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_949D:
	branch bl_16 <=u 0x09 l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94A2:
	word16 bx_59 = DPB(bx, bl_16, 0)
	branch bl_16 >=u cl l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94AD:
	bx_38 = bx
	C_40 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94A6:
	C_40 = false
	bx_38 = DPB(bx_59, 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94AF:
	bxOut = bx_38
	return C_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9485_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_94B0(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, segptr32 ptrArg0E, segptr32 ptrArg12, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: ax bx cx di dx Top
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp ds sp ss
fn0800_94B0_entry:
	int8 Top_131 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94B0:
	word16 sp_136 = fp - 0x000C
	byte bLoc03_614 = 0x00
	word16 wLoc06_615 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94C6:
	word16 wLoc08_653
	word16 ax_558
	word16 dx_447
	word16 v8_23 = wLoc06_615 + 0x0001
	word16 sp_28 = sp_136 - 2
	Mem29[ss:sp_28:word16] = wArg08
	Mem32[ss:sp_28 - 2:word16] = wArg06
	word16 sp_33
	word16 ax_39
	word16 bx_121
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_38,bx:bx_40,cx:cx_36,dx:dx_44,sp:sp_28 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v8_23,Stack +FFFFFFFF:0x00,Top:Top_46
		defs: ax:ax_39,bx:bx_41,dx:dx_45,sp:sp_33,Top:Top_47
	wLoc06_615 = v8_23
	cx = Mem32[ss:sp_33 + 2:word16]
	sp_136 = sp_33 + 4
	word16 ax_116 = ax_39
	byte al_57 = (byte) ax_39
	branch ax_39 < 0x0000 l0800_9549
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94D8:
	word16 ax_58 = (int16) al_57
	ax = bx_121
	bx = ax_58
	branch ((byte) ax_58 & 0x80) != 0x00 l0800_94E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94DF:
	branch (Mem32[ds:ax_58 + 0x2251:byte] & 0x01) != 0x00 l0800_94C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94E7:
	ax_116 = ax_58
	byte al_151 = (byte) ax_58
	ax_116 = ax_58 (alias)
	wArg0C = wArg0C - 0x0001
	branch wArg0C < 0x0001 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94ED:
	branch al_151 == 0x2B l0800_94F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F1:
	branch al_151 != 0x2D l0800_950F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F5:
	bLoc03_614 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F8:
	ax_116 = ax_58
	wArg0C = wArg0C - 0x0002
	branch wArg0C < 0x0002 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94FD:
	Mem104[ss:sp_33 + 2:word16] = wArg08
	Mem107[ss:sp_33:word16] = wArg06
	word16 sp_108
	word16 ax_119
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_58,bx:bx_41,cx:cx_51,dx:dx_45,sp:sp_33,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C - 0x0002,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v8_23 + 0x0001,Stack +FFFFFFFF:bLoc03_650,Top:Top_47
		defs: ax:ax_119,bx:bx_121,dx:dx_128,sp:sp_108,Top:Top_131
	wLoc06_615 = v8_23 + 0x0001
	cx = Mem107[ss:sp_108 + 2:word16]
	sp_136 = sp_108 + 4
	ax_116 = ax_119
	al_151 = (byte) ax_119 (alias)
	branch ax_119 < 0x0000 l0800_9549
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9549:
	wLoc08_653 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_950F:
	ax_174 = DPB(ax_116, al_151, 0) (alias)
	ax_116 = DPB(ax_116, al_151, 0) (alias)
	ax_116 = DPB(ax_116, al_151, 0) (alias)
	word16 ax_174 = DPB(ax_116, al_151, 0)
	word16 si_144 = 0x0000
	word16 di_146 = 0x0000
	cx = wArg0A
	byte cl_200 = (byte) wArg0A
	cx = wArg0A (alias)
	cx = wArg0A (alias)
	branch wArg0A == 0x0000 l0800_956E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_956E:
	wArg0A = 0x000A
	branch al_151 != 0x30 l0800_959E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9577:
	word16 v70_156 = wArg0C - 0x0001
	wArg0C = v70_156
	branch v70_156 < 0x0000 l0800_956B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_957C:
	word16 v71_160 = wLoc06_615 + 0x0001
	word16 sp_165 = sp_136 - 2
	Mem166[ss:sp_165:word16] = wArg08
	Mem169[ss:sp_165 - 2:word16] = wArg06
	word16 sp_170
	word16 ax_175
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_174,bx:bx_176,cx:wArg0A,dx:dx_180,sp:sp_165 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:0x000A,Stack +000E:v70_156,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v71_160,Stack +FFFFFFFF:bLoc03_670,Top:Top_182
		defs: ax:ax_175,bx:bx_177,dx:dx_181,sp:sp_170,Top:Top_183
	wLoc06_615 = v71_160
	byte al_190 = (byte) ax_175
	ax_174 = ax_175 (alias)
	cx = Mem169[ss:sp_170 + 2:word16]
	sp_136 = sp_170 + 4
	wArg0A = 0x0008
	branch al_190 == 0x78 l0800_9597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9593:
	branch al_190 != 0x58 l0800_95C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9597:
	ax_174 = ax_175
	wArg0A = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9518:
	branch wArg0A >u 0x0024 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_951D:
	branch cl_200 <u 0x02 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9522:
	branch al_151 != 0x30 l0800_959E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_959E:
	cx = wArg0A
	ax_116 = bx_218
	word16 bx_218
	branch fn0800_9485((byte) wArg0A, ax_174, out bx_218) l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9550:
	wLoc08_653 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9555:
	word16 sp_237 = sp_136 - 2
	Mem238[ss:sp_237:word16] = wArg08
	Mem241[ss:sp_237 - 2:word16] = wArg06
	Mem246[ss:sp_237 - 4:word16] = ax_116
	word16 sp_247
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_243,bx:bx_262,cx:cx_256,dx:dx_274,sp:sp_237 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_722,Stack +000E:wArg0C_718,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:wLoc08_713,Stack +FFFFFFFC:wLoc06_709,Stack +FFFFFFFF:bLoc03_705,Top:Top_279
		defs: cx:cx_260,sp:sp_247,Top:Top_283
	sp_136 = sp_247 + 0x0006
	wLoc06_615 = wLoc06_615 - 0x0001
	ax_558 = 0x0000 (alias)
	dx_447 = 0x0000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95A8:
	ax_174 = 0x0000
	si_144 = bx_218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9526:
	branch cl_200 != 0x10 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_952B:
	word16 v31_296 = wArg0C - 0x0001
	wArg0C = v31_296
	branch v31_296 < 0x0000 l0800_956B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_956B:
	cx = wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9530:
	word16 v32_300 = wLoc06_615 + 0x0001
	word16 sp_304 = sp_136 - 2
	Mem305[ss:sp_304:word16] = wArg08
	Mem308[ss:sp_304 - 2:word16] = wArg06
	word16 sp_309
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_212,bx:bx_176,cx:wArg0A,dx:dx_180,sp:sp_304 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:v31_296,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v32_300,Stack +FFFFFFFF:bLoc03_670,Top:Top_182
		defs: ax:ax_313,bx:bx_314,dx:dx_315,sp:sp_309,Top:Top_316
	wLoc06_615 = v32_300
	byte al_322 = (byte) ax_174
	cx = Mem308[ss:sp_309 + 2:word16]
	sp_136 = sp_309 + 4
	branch al_322 == 0x78 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9542:
	branch al_322 == 0x58 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_959C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9546:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95C8:
	cx = wArg0A
	word16 ax_343 = bx_337
	word16 bx_337
	branch fn0800_9485((byte) wArg0A, ax_174, out bx_337) l0800_95AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95AB:
	int32 dx_ax_349 = wArg0A *u si_144
	ui32 di_si_607 = SEQ(di_146, bx_337) + dx_ax_349
	ax_174 = (word16) dx_ax_349 (alias)
	dx = SLICE(dx_ax_349, word16, 16) (alias)
	si_144 = (word16) di_si_607
	di_146 = SLICE(di_si_607, word16, 16)
	branch di_146 != 0x0000 l0800_95E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95E5:
	word16 v54_362 = wArg0C - 0x0001
	wArg0C = v54_362
	branch v54_362 < 0x0000 l0800_9612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95EA:
	word16 sp_371 = sp_136 - 2
	Mem372[ss:sp_371:word16] = wArg08
	Mem375[ss:sp_371 - 2:word16] = wArg06
	word16 v55_366 = wLoc06_615 + 0x0001
	word16 sp_376
	word16 ax_382
	word16 bx_384
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_381,bx:bx_383,cx:cx_379,dx:dx_387,sp:sp_371 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_728,Stack +000E:v54_362,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v55_366,Stack +FFFFFFFF:bLoc03_670,Top:Top_389
		defs: ax:ax_382,bx:bx_384,dx:dx_388,sp:sp_376,Top:Top_390
	wLoc06_615 = v55_366
	sp_136 = sp_376 + 4
	ax_343 = bx_401
	bx_121 = bx_384
	word16 bx_401
	branch fn0800_9485((byte) wArg0A, ax_382, out bx_401) l0800_95D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95D4:
	int32 dx_ax_412 = wArg0A *u si_144
	int32 dx_ax_421 = wArg0A *u di_146
	ui32 ax_si_610 = SEQ((word16) dx_ax_421, bx_401) + dx_ax_412
	word16 ax_426 = SLICE(ax_si_610, word16, 16)
	byte dl_434 = SLICE(dx_ax_421, byte, 16) + SLICE(dx_ax_421, byte, 24) + (ax_426 <u 0x0000)
	cx = SLICE(dx_ax_412, word16, 16)
	si_144 = (word16) ax_si_610
	ax_174 = (word16) dx_ax_412
	di_146 = ax_426
	dx = DPB(SLICE(dx_ax_421, word16, 16), dl_434, 0) (alias)
	branch dl_434 != 0x00 l0800_9636
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9636:
	bool C_443 = SLICE(cond(bLoc03_614 + 0xFF), bool, 1)
	ax_558 = DPB(0xFFFF, C_443 + 0xFF, 8) (alias)
	dx_447 = SLICE(cond(C_443 + 0xFF), bool, 1) + 0x7FFF
	wLoc08_653 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95B5:
	word16 v44_456 = wArg0C - 0x0001
	wArg0C = v44_456
	branch v44_456 < 0x0000 l0800_9612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95BA:
	word16 v45_460 = wLoc06_615 + 0x0001
	word16 sp_468 = sp_136 - 2
	Mem469[ss:sp_468:word16] = wArg08
	Mem472[ss:sp_468 - 2:word16] = wArg06
	word16 sp_473
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_484,bx:bx_490,cx:cx_480,dx:dx_502,sp:sp_468 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_787,Stack +000E:v44_456,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v45_460,Stack +FFFFFFFF:bLoc03_670,Top:Top_506
		defs: ax:ax_489,bx:bx_493,dx:dx_505,sp:sp_473,Top:Top_510
	wLoc06_615 = v45_460
	sp_136 = sp_473 + 4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95D2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9602:
	word16 sp_521 = sp_136 - 2
	Mem522[ss:sp_521:word16] = wArg08
	Mem525[ss:sp_521 - 2:word16] = wArg06
	Mem528[ss:sp_521 - 4:word16] = ax_343
	word16 sp_529
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_527,bx:bx_535,cx:wArg0A_728,dx:dx_539,sp:sp_521 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_728,Stack +000E:wArg0C_803,Stack +0010:ptrArg0E,Stack +0014:ptrArg12,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:wLoc06_800,Stack +FFFFFFFF:bLoc03_670,Top:Top_542
		defs: cx:cx_533,sp:sp_529,Top:Top_543
	sp_136 = sp_529 + 0x0006
	wLoc06_615 = wLoc06_615 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9612:
	wLoc08_653 = 0x0001
	dx_447 = di_146
	ax_558 = si_144
	branch bLoc03_614 == 0x00 l0800_9622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_961B:
	ax_558 = -si_144
	dx_447 = -di_146 - (ax_558 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9622:
	Mem581[ptrArg0E:word16] = Mem575[ptrArg0E:word16] + wLoc06_615
	Mem587[ptrArg12:word16] = wLoc08_653
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_964C:
	word16 di_591 = Mem587[ss:sp_136:word16]
	cxOut = cx
	dxOut = dx_447
	bxOut = wLoc08_653
	diOut = di_591
	TopOut = Top_131
	return ax_558
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_94B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9652()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ah cx dx es Top
// Preserved: bp si sp
fn0800_9652_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9652:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9652_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9667()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ah cx dx es Top
// Preserved: bp si sp
fn0800_9667_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9667:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9667_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9764(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: cx
// Trashed: SCZDO bx cx es Top
// Preserved: bp sp
fn0800_9764_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9764:
	fn0800_8B95(SEQ(ss, fp - 0x0006))
	fn0800_8BA8(SEQ(ss, fp - 0x000A))
	word16 cx_52
	word16 dx_53
	word16 ax_50 = fn0800_C04F(ds, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x000A), out cx_52, out dx_53)
	branch (wArg02 | wArg04) == 0x0000 l0800_97AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_979C:
	Mem73[ptrArg02 + 0x0002:word16] = dx_53
	Mem74[ptrArg02:word16] = ax_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97AC:
	return cx_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9764_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_97B6(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_97B6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97B6:
	word16 dx_26
	word16 ax_23 = fn0800_8E29(ds, wArg02, 0x00000000, 0x01, out cx_48, out dx_26, out bx_49)
	dxOut = dx_26
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97B6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_97CC(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_97CC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97CC:
	word16 ax_29
	byte dl_12 = (byte) wArg02
	branch wArg02 != 0xFFFF l0800_97DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97DC:
	word16 ax_17 = DPB(DPB(ax, dl_12, 0), 0x00, 8)
	branch (Mem7[ds:ax_17 + 0x2251:byte] & 0x08) == 0x00 l0800_97F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F2:
	ax_29 = DPB(DPB(ax_17, dl_12, 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97E9:
	ax_29 = DPB(DPB(ax_17, dl_12, 0), 0x00, 8) + 0xFFE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97D7:
	ax_29 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F6:
	dxOut = wArg02
	return (byte) ax_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97CC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_97F8(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..31]
// LiveOut: dx
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_97F8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F8:
	word16 dx_15 = (word16) ptrArg02
	word16 ax_21 = DPB(ax, 0x41, 8)
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), dx_15) l0800_980A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_980A:
	fn0800_8D2B(ds, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9806:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_980E:
	return dx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97F8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9810(word32 es_di, byte dh, byte dl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dh:[0..7] dl:[0..7] Sequence es:di:[0..31]
// LiveOut: di sp
// Trashed: SCZO ax di sp Top
// Preserved:
fn0800_9810_entry:
	selector es = SLICE(es_di, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9810:
	word16 di_10 = fn0800_9817(es_di, dh)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9815_thunk_fn0800_9817:
	return fn0800_9817(SEQ(es, di_10), dl)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9810_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9817(word32 es_di, byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] Sequence es:di:[0..31]
// LiveOut: di
// Trashed: SCZO ax di Top
// Preserved: sp
fn0800_9817_entry:
	selector es = SLICE(es_di, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9817:
	word16 ax_5 = __aam(al)
	byte al_6 = (byte) ax_5
	word16 di_15 = fn0800_9820(es_di, SLICE(ax_5, byte, 8))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_981E_thunk_fn0800_9820:
	return fn0800_9820(SEQ(es, di_15), al_6)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9817_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9820(word32 es_di, byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] Sequence es:di:[0..31]
// LiveOut: di
// Trashed: SCZO al di Top
// Preserved: sp
fn0800_9820_entry:
	word16 di = SLICE(es_di, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9820:
	byte al_7 = al + 0xD0 + __daa(al + 0x90, &(al + 0x90))
	__daa(al_7, &al_7)
	Mem12[es_di:byte] = al_7
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9820_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9828(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax di si
// Trashed: SCZDO ax di si Top
// Preserved: bp bx cx dx es sp
fn0800_9828_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9828:
	byte bLoc16_1538 = 0x50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988C:
	word16 sp_1032 = fp - 0x009E
	word16 wLoc06_1328 = fp - 0x0098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9895:
	word16 di_1016 = wLoc06_1328
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9898:
	selector psegArg06_1809 = SLICE(ptrArg04, selector, 16)
	word16 si_1004 = (word16) ptrArg04
	selector es_1015 = SLICE(ptrArg04, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_989B:
	byte al_37 = Mem36[ds:si_1004:byte]
	si_1004 = si_1004 + 0x0001
	byte al_1086 = al_37
	branch al_37 == 0x00 l0800_98B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98B3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98A1:
	branch al_37 == 0x25 l0800_98B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98B6:
	al_1086 = Mem47[ds:si_1004:byte]
	word16 ax_1191 = DPB(ax, al_1086, 0)
	si_1004 = si_1004 + 0x0001
	branch al_1086 == 0x25 l0800_98A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98BF:
	wLoc06_1328 = di_1016
	word16 cx_1241 = 0x0000
	byte ch_1232 = 0x00
	word16 wLoc10_1333 = 0x0000
	word16 wLoc04_1334 = 0x0020
	byte bLoc0D_1335 = 0x00
	word16 wLoc0A_1336 = 0xFFFF
	word16 wLoc0C_1337 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98DD:
	word16 ax_1192 = DPB(ax_1191, 0x00, 8)
	byte bl_68 = (byte) ax_1192
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	cx = DPB(cx_1241, ch_1232, 8) (alias)
	byte dl_131 = (byte) ax_1192
	dx = ax_1192 (alias)
	dx_231 = ax_1192 (alias)
	word16 dx_231 = ax_1192
	dx_231 = ax_1192 (alias)
	bx = DPB(ax_1192, bl_68 - 0x20, 0) (alias)
	branch bl_68 >=u 0x80 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98EB:
	bx = DPB(ax_1192, Mem74[ds:bx + 0x2605:byte], 0) (alias)
	branch bx <=u 0x0017 l0800_98F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98F7:
	ptr32 es_di_2057
	ptr32 es_di_2060
	ptr32 es_di_2064
	byte bLoc08_1377
	word16 cx_172
	word16 di_495
	selector es_498
	word16 bx_446
	word16 bx_445
	word16 bx_444
	byte bh_334
	word16 dx_348
	word16 ax_354
	bx = bx << 0x0001
	switch (bx << 0x0001) { l0800_9917 l0800_9901 l0800_994C l0800_990C l0800_997A l0800_9987 l0800_99C5 l0800_99CC l0800_99D1 l0800_9935 l0800_99FA l0800_99D8 l0800_99DC l0800_99E0 l0800_9A55 l0800_9B02 l0800_9AA5 l0800_9AC5 l0800_9C46 l0800_9C82 l0800_9C82 l0800_9C82 l0800_9927 l0800_992D }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_992D:
	wLoc04_1334 = wLoc04_1334 | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9927:
	wLoc04_1334 = wLoc04_1334 & 0xFFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C46:
	word16 di_101
	selector es_108
	ptrArg04 = SEQ(psegArg06_1809, si_1004) (alias)
	branch (wLoc04_1334 & 0x0020) != 0x0000 l0800_9C5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C5E:
	ptr32 es_di_97 = Mem92[ds:wArg02:segptr32]
	es_108 = SLICE(es_di_97, selector, 16) (alias)
	di_101 = (word16) es_di_97 (alias)
	wArg02 = wArg02 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C53:
	di_101 = Mem92[ss:wArg02:word16]
	word16 sp_106 = sp_1032 - 2
	Mem107[ss:sp_106:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_108 = Mem107[ss:sp_106:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C65:
	word16 ax_116 = DPB(0x0050, 0x50 - bLoc16_1538, 0)
	Mem122[es_108:di_101:word16] = ax_116
	ax = ax_116
	branch (wLoc04_1334 & 0x0010) == 0x0000 l0800_9C7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C78:
	Mem129[es_108:di_101 + 0x0002:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C7F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AC5:
	ptr32 es_di_137
	bool Z_156
	ptrArg04 = SEQ(psegArg06_1809, si_1004) (alias)
	branch (wLoc04_1334 & 0x0020) != 0x0000 l0800_9AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AE2:
	es_di_137 = Mem132[ds:wArg02:segptr32]
	wArg02 = wArg02 + 0x0004
	Z_156 = SLICE(cond(SLICE(es_di_137, selector, 16) | (word16) es_di_137), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AD5:
	word16 di_146 = Mem132[ss:wArg02:word16]
	word16 sp_149 = sp_1032 - 2
	Mem150[ss:sp_149:word16] = ds
	wArg02 = wArg02 + 0x0002
	Z_156 = SLICE(cond(di_146), bool, 2) (alias)
	es_di_137 = SEQ(Mem150[ss:sp_149:selector], di_146) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AED:
	ptr32 es_di_2068 = es_di_137
	branch Z_156 l0800_9AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AEF:
	word16 sp_160 = sp_1032 - 2
	Mem163[ss:sp_160:word16] = ds
	es_di_2068 = SEQ(Mem163[ss:sp_160:selector], 0x25FE) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AF4:
	cx_172 = fn0800_9842(SLICE(es_di_2068, word16, 0), SLICE(es_di_2068, selector, 16))
	branch cx_172 <=u wLoc0C_1337 l0800_9AFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AFC:
	cx_172 = wLoc0C_1337
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AFF:
	es_di_2060 = es_di_2068 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA5:
	word16 sp_191 = sp_1032 - 2
	Mem192[ss:sp_191:word16] = ss
	wArg02 = wArg02 + 0x0002
	sp_1032 = sp_191 + 2
	cx_172 = 0x0001
	ptrArg04 = SEQ(psegArg06_1809, si_1004) (alias)
	es_di_2060 = SEQ(Mem192[ss:sp_191:selector], fp - 0x0047) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B02:
	word16 cx_206 = wLoc0C_1337
	ptrArg04 = SEQ(psegArg06_1809, si_1004) (alias)
	branch wLoc0C_1337 >= 0x0000 l0800_9B15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B12:
	cx_206 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B15:
	word16 ax_244
	word16 sp_212 = sp_1032 - 2
	Mem214[ss:sp_212:word16] = ss
	Mem217[ss:sp_212 - 2:word16] = wArg02
	Mem220[ss:sp_212 - 4:word16] = cx_206
	Mem222[ss:sp_212 - 6:word16] = ss
	Mem226[ss:sp_212 - 8:word16] = fp - 0x0047
	Mem232[ss:sp_212 - 10:word16] = ax_1192
	Mem236[ss:sp_212 - 12:word16] = wLoc04_1334 & 0x0001
	branch (wLoc04_1334 & 0x0100) == 0x0000 l0800_9B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B36:
	wArg02 = wArg02 + 0x0008
	ax_244 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B2D:
	ax_244 = 0x0008
	wArg02 = wArg02 + 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B3D:
	Mem253[ss:sp_212 - 14:word16] = ax_244
	fn0800_A2CC(ds)
	Mem258[ss:sp_212 - 16:word16] = ss
	sp_1032 = sp_212 - 14
	es_di_2064 = SEQ(Mem258[ss:sp_212 - 16:selector], fp - 0x0047) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A55:
	word16 sp_268 = sp_1032 - 2
	Mem269[ss:sp_268:word16] = Mem264[ss:wArg02:word16]
	word16 di_265 = fp - 0x0048
	wArg02 = wArg02 + 0x0002
	ptrArg04 = SEQ(psegArg06_1809, si_1004) (alias)
	branch (wLoc04_1334 & 0x0020) == 0x0000 l0800_9A80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A70:
	word16 dx_276 = Mem272[ss:wArg02 + 0x0002:word16]
	Mem282[ss:sp_268 - 2:word16] = ss
	selector es_283 = Mem282[ss:sp_268 - 2:selector]
	word16 di_289 = fn0800_9810(SEQ(es_283, fp - 0x0048), SLICE(dx_276, byte, 8), (byte) dx_276)
	Mem297[es_283:di_289:byte] = 0x3A
	word16 sp_290 = <invalid>
	wArg02 = wArg02 + 0x0004
	sp_268 = sp_290 + 0xFFFE
	di_265 = di_289 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A80:
	word16 sp_300 = sp_268 - 2
	Mem302[ss:sp_300:word16] = ss
	word16 dx_305 = Mem302[ss:sp_300 + 2:word16]
	selector es_303 = Mem302[ss:sp_300:selector]
	word16 di_312 = fn0800_9810(SEQ(es_303, di_265), SLICE(dx_305, byte, 8), (byte) dx_305)
	Mem319[ss:di_312:byte] = 0x00
	word16 sp_313 = <invalid>
	sp_1032 = sp_313 + 0xFFFE
	wLoc04_1334 = wLoc04_1334 & 0xFFFB
	word16 di_326 = di_312 - (fp - 0x0048)
	dx_231 = wLoc0C_1337
	branch wLoc0C_1337 > di_326 l0800_9AA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA0:
	dx_231 = di_326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA2:
	es_di_2064 = SEQ(es_303, fp - 0x0048) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99E0:
	bh_334 = 0x10
	bx_446 = DPB(DPB(bx << 0x0001, 0x10, 8), dl_131 + 0xE9, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99DC:
	bh_334 = 0x0A
	bx_445 = DPB(bx << 0x0001, 0x0A, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99D8:
	bh_334 = 0x08
	bx_446 = DPB(bx << 0x0001, 0x08, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99E6:
	bx_445 = DPB(bx_446, bh_334, 8) (alias)
	bLoc0D_1335 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99EA:
	bx_444 = DPB(bx_445, bh_334, 8) (alias)
	dx_348 = 0x0000
	bLoc08_1377 = 0x00
	ax_354 = Mem352[ss:wArg02:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99FA:
	int32 dx_ax_360 = (int32) Mem357[ss:wArg02:word16]
	bh_334 = 0x0A
	bx_444 = DPB(bx << 0x0001, 0x0A, 8) (alias)
	bLoc08_1377 = 0x01
	ax_354 = (word16) dx_ax_360 (alias)
	dx_348 = SLICE(dx_ax_360, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A0A:
	word16 di_362 = wArg02 + 0x0001
	bx = DPB(bx_444, bh_334, 8) (alias)
	word16 bx_461 = DPB(bx_444, bh_334, 8)
	word16 di_363 = di_362 + 0x0001
	ptrArg04 = SEQ(psegArg06_1809, si_1004) (alias)
	branch (wLoc04_1334 & 0x0010) == 0x0000 l0800_9A1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A16:
	dx_348 = Mem369[ss:di_362 + 0x0001:word16]
	di_363 = di_362 + 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A1B:
	wArg02 = di_363
	ax = ax_354
	branch ax_354 != 0x0000 l0800_9A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A25:
	dx = dx_348
	branch dx_348 != 0x0000 l0800_9A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A32:
	wLoc04_1334 = wLoc04_1334 | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A29:
	branch wLoc0C_1337 != 0x0000 l0800_9A36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A36:
	word16 sp_411 = sp_1032 - 2
	Mem415[ss:sp_411:word16] = dx_348
	Mem419[ss:sp_411 - 2:word16] = ax_354
	Mem421[ss:sp_411 - 4:word16] = ss
	Mem425[ss:sp_411 - 6:word16] = fp - 0x0047
	word16 ax_433 = (int16) bh_334
	Mem435[ss:sp_411 - 8:word16] = ax_433
	Mem440[ss:sp_411 - 10:word16] = DPB(ax_433, bLoc08_1377, 0)
	Mem462[ss:sp_411 - 12:word16] = bx_461
	fn0800_8D87(Mem462[ss:sp_411 - 12:byte], Mem462[ss:sp_411 - 10:byte], Mem462[ss:sp_411 - 8:word16], Mem462[ss:sp_411 - 6:segptr32], Mem462[ss:sp_411 - 2:word16], Mem462[ss:sp_411:word16])
	Mem474[ss:sp_411:word16] = ss
	selector es_475 = Mem474[ss:sp_411:selector]
	sp_1032 = sp_411 + 2
	dx_231 = wLoc0C_1337
	branch wLoc0C_1337 >= 0x0000 l0800_9A52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A52:
	es_di_2057 = SEQ(es_475, fp - 0x0047) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A4F:
	es_di_2064 = SEQ(es_475, fp - 0x0047) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B46:
	es_498 = SLICE(es_di_2064, selector, 16) (alias)
	di_495 = SLICE(es_di_2064, word16, 0) (alias)
	branch (wLoc04_1334 & 0x0008) == 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B4D:
	dx_231 = wLoc0A_1336
	es_di_2057 = es_di_2064 (alias)
	branch wLoc0A_1336 <= 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B54:
	es_498 = SLICE(es_di_2057, selector, 16) (alias)
	di_495 = SLICE(es_di_2057, word16, 0) (alias)
	word16 cx_502 = fn0800_9842(di_495, es_498)
	branch Mem507[es_di_2057:byte] != 0x2D l0800_9B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B5D:
	cx_502 = cx_502 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B5E:
	dx_231 = dx_231 - cx_502
	branch dx_231 <= 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B62:
	wLoc10_1333 = dx_231
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B65:
	branch Mem527[es_498:di_495:byte] == 0x2D l0800_9B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B6B:
	branch bLoc0D_1335 == 0x00 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B72:
	di_495 = di_495 - 0x0001
	Mem540[es_498:di_495:byte] = bLoc0D_1335
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B76:
	branch wLoc10_1333 <= 0x0000 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B7C:
	branch wLoc0C_1337 >= 0x0000 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B83:
	wLoc10_1333 = wLoc10_1333 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B86:
	cx_172 = fn0800_9842(di_495, es_498)
	es_di_2060 = SEQ(es_498, di_495) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B89:
	word16 di_564 = SLICE(es_di_2060, word16, 0)
	selector es_676 = SLICE(es_di_2060, selector, 16)
	word16 si_1215 = di_564
	word16 bx_577 = wLoc0A_1336
	ax = wLoc04_1334 & 0x0005
	branch ax != 0x0005 l0800_9BAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B9C:
	ax = DPB(ax, dl_131, 8) (alias)
	ax = DPB(ax, dl_131, 8) (alias)
	ax = DPB(ax, dl_131, 8) (alias)
	branch dl_131 != 0x6F l0800_9BB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BB1:
	branch dl_131 == 0x78 l0800_9BBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BB6:
	branch dl_131 != 0x58 l0800_9BCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BBB:
	word16 v40_598 = wLoc10_1333 - 0x0002
	wLoc04_1334 = wLoc04_1334 | 0x0040
	bx_577 = wLoc0A_1336 - 0x0002
	wLoc10_1333 = v40_598
	branch v40_598 >= 0x0000 l0800_9BCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BC7:
	wLoc10_1333 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BA4:
	branch wLoc10_1333 > 0x0000 l0800_9BAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BAA:
	wLoc10_1333 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BAF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BCC:
	cx = cx_172 + wLoc10_1333
	branch (wLoc04_1334 & 0x0002) != 0x0000 l0800_9BE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BDE:
	branch bx_577 > cx l0800_9BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BD8:
	ax = DPB(ax, 0x20, 0) (alias)
	di_1016 = fn0800_984F(SEQ(ss, fp - 2), 0x20, cx, dx_231, bx_577, di_1016, es_676)
	sp_1032 = sp_1032 + 0xFFFE
	bx_577 = bx_577 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BE2:
	branch (wLoc04_1334 & 0x0040) == 0x0000 l0800_9BF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BE9:
	ax = DPB(ax, dl_131, 0) (alias)
	di_1016 = fn0800_984F(SEQ(ss, fp - 2), dl_131, cx, dx_231, bx_577, fn0800_984F(SEQ(ss, fp - 2), 0x30, cx, dx_231, bx_577, di_1016, es_676), es_676)
	sp_1032 = sp_1032 + 0xFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BF4:
	dx = wLoc10_1333
	branch wLoc10_1333 <= 0x0000 l0800_9C22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BFB:
	byte al_726 = Mem615[es_di_2060:byte]
	word16 cx_716 = cx - wLoc10_1333
	bx_577 = bx_577 - wLoc10_1333
	ax = DPB(ax, al_726, 0) (alias)
	branch al_726 == 0x2D l0800_9C0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C06:
	branch al_726 == 0x20 l0800_9C0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C0A:
	branch al_726 != 0x2B l0800_9C15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C0E:
	byte al_759 = Mem615[ds:di_564:byte]
	ax = DPB(ax, al_759, 0) (alias)
	si_1215 = di_564 + 0x0001
	di_1016 = fn0800_984F(SEQ(ss, fp - 2), al_759, cx_716, wLoc10_1333, bx_577, di_1016, es_676)
	sp_1032 = sp_1032 + 0xFFFE
	cx_716 = cx_716 - 0x0001
	bx_577 = bx_577 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C15:
	word16 cx_785 = wLoc10_1333
	branch wLoc10_1333 == 0x0000 l0800_9C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C19:
	ax = DPB(ax, 0x30, 0) (alias)
	di_1016 = fn0800_984F(SEQ(ss, fp - 2), 0x30, cx_785, cx_716, bx_577, di_1016, es_676)
	sp_1032 = sp_1032 + 0xFFFE
	cx_785 = cx_785 - 0x0001
	branch cx_785 != 0x0000 l0800_9C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C20:
	dx = cx_785
	cx = cx_716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C22:
	branch cx == 0x0000 l0800_9C36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C24:
	bx_577 = bx_577 - cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C26:
	byte al_817 = Mem816[ds:si_1215:byte]
	Mem821[ss:di_1016:byte] = al_817
	byte v45_824 = bLoc16_1538 - 0x01
	ax = DPB(ax, al_817, 0) (alias)
	si_1215 = si_1215 + 0x0001
	di_1016 = di_1016 + 0x0001
	bLoc16_1538 = v45_824
	branch v45_824 > 0x00 l0800_9C34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C31:
	di_1016 = fn0800_9858(SEQ(ss, fp - 2), cx, dx, bx_577, di_1016, es_676)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C34:
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_9C26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C36:
	bx = bx_577
	branch bx_577 <= 0x0000 l0800_9C43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C3A:
	cx = bx_577
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C3C:
	ax = DPB(ax, 0x20, 0) (alias)
	di_1016 = fn0800_984F(SEQ(ss, fp - 2), 0x20, cx, dx, bx_577, di_1016, es_676)
	sp_1032 = sp_1032 + 0xFFFE
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_9C3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C43:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A2F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9935:
	branch ch_1232 >u 0x00 l0800_9987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_993A:
	branch (wLoc04_1334 & 0x0002) != 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9941:
	wLoc04_1334 = wLoc04_1334 | 0x0008
	ch_1232 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99CC:
	wLoc04_1334 = wLoc04_1334 | 0x0100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99D1:
	wLoc04_1334 = wLoc04_1334 & 0xFFEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99C5:
	wLoc04_1334 = wLoc04_1334 | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9931:
	ch_1232 = 0x05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9987:
	word16 ax_897 = (int16) ((byte) ax_1192 - 0x30)
	branch ch_1232 >u 0x02 l0800_99A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99A9:
	branch ch_1232 != 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99AE:
	wLoc0C_1337 = ax_897
	ax_1192 = wLoc0C_1337
	branch wLoc0C_1337 == 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99B5:
	ax_1192 = (wLoc0C_1337 << 0x0003) + (wLoc0C_1337 << 0x0001)
	wLoc0C_1337 = ax_897 + ax_1192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9990:
	ch_1232 = 0x02
	wLoc0A_1336 = ax_897
	ax_1192 = wLoc0A_1336
	branch wLoc0A_1336 < 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9999:
	ax_1192 = (wLoc0A_1336 << 0x0003) + (wLoc0A_1336 << 0x0001)
	wLoc0A_1336 = ax_897 + ax_1192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_997A:
	branch ch_1232 >=u 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_997F:
	ch_1232 = 0x04
	wLoc0C_1337 = wLoc0C_1337 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_990C:
	branch ch_1232 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9911:
	wLoc04_1334 = wLoc04_1334 | 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_994C:
	ax_1192 = Mem74[ss:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_1232 >=u 0x02 l0800_996D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_996D:
	branch ch_1232 != 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9949:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9972:
	wLoc0C_1337 = ax_1192
	ch_1232 = ch_1232 + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_995B:
	branch ax_1192 >= 0x0000 l0800_9965
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_995F:
	ax_1192 = -ax_1192
	wLoc04_1334 = wLoc04_1334 | 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9965:
	wLoc0A_1336 = ax_1192
	ch_1232 = 0x03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_996A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9901:
	branch ch_1232 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9906:
	wLoc04_1334 = wLoc04_1334 | 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9917:
	branch ch_1232 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98FE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_991C:
	branch bLoc0D_1335 == 0x2B l0800_9925
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9922:
	bLoc0D_1335 = dl_131
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9925:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98DB:
	cx_1241 = DPB(cx_1241, ch_1232, 8) (alias)
	ax_1191 = DPB(ax_1192, Mem999[ds:si_1004:byte], 0) (alias)
	si_1004 = si_1004 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98F4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C82:
	dx = ax_1192
	word16 si_1014 = si_1004
	es_1015 = psegArg06_1809
	byte al_1017 = 0x25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C8D:
	di_1016 = fn0800_984F(SEQ(ss, fp - 2), al_1017, cx, ax_1192, bx, di_1016, psegArg06_1809)
	byte al_1037 = Mem1011[ds:si_1014:byte]
	sp_1032 = sp_1032 + 0xFFFE
	si_1014 = si_1014 + 0x0001
	al_1017 = al_1037
	branch al_1037 != 0x00 l0800_9C8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C96:
	branch bLoc16_1538 >= 0x50 l0800_9C9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C9C:
	fn0800_9858(SEQ(ss, fp - 2), cx, dx, bx, di_1016, es_1015)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C9F:
	word16 ax_1074
	word16 sp_1070 = sp_1032 + 2
	branch 0x0000 == 0x0000 l0800_9CAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CAB:
	ax_1074 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CA6:
	ax_1074 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CAE:
	word16 di_1079 = Mem1045[ss:sp_1070:word16]
	siOut = Mem1045[ss:sp_1070 + 2:word16]
	diOut = di_1079
	return ax_1074
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9828_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98A5:
	Mem1089[ss:di_1016:byte] = al_1086
	byte v16_1092 = bLoc16_1538 - 0x01
	ax = DPB(ax, al_1086, 0) (alias)
	di_1016 = di_1016 + 0x0001
	bLoc16_1538 = v16_1092
	branch v16_1092 > 0x00 l0800_989B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98AE:
	di_1016 = fn0800_9858(SEQ(ss, fp - 2), cx, dx, bx, di_1016, es_1015)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9842(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15]
// LiveOut: cx
// Trashed: SCZO al cx Top
// Preserved: di sp
fn0800_9842_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9842:
	word16 cx_12 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9848:
	branch cx_12 == 0x0000 l0800_984A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9848_1:
	di = di_45 + 0x0001
	cx_12 = cx_12 - 0x0001
	di_45 = di
	branch Mem7[es:di_45:byte] == 0x00 l0800_9848
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_984A:
	return ~cx_12 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9842_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_984F(word32 ss_bp, byte al, word16 cx, word16 dx, word16 bx, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SZO di Top
// Preserved: C sp
fn0800_984F_entry:
	selector ss = SLICE(ss_bp, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_984F:
	Mem7[ss:di:byte] = al
	byte v8_10 = Mem7[ss_bp - 0x0014:byte] - 0x01
	Mem11[ss_bp - 0x0014:byte] = v8_10
	branch v8_10 != 0x00 l0800_988B_in_fn0800_984F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988B_in_fn0800_984F:
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9856_thunk_fn0800_9858:
	return fn0800_9858(ss_bp, cx, dx, bx, di + 0x0001, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_984F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9858(word32 ss_bp, word16 cx, word16 dx, word16 bx, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SCZO di Top
// Preserved: bx cx dx es sp
fn0800_9858_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9858:
	word16 di_20 = di - (bp - 0x0096)
	word16 ax_39
	call SEQ(0x0800, Mem34[ss:bp + 0x000E:word16]) (retsize: 2;)
		uses: ax:bp - 0x0096,bx:bx,cx:cx,dx:dx,sp:fp - 18,Stack +0002:Mem31[ss_bp + 0x000A:word16],Stack +0004:Mem28[ss_bp + 0x000C:word16],Stack +0006:di_20,Stack +0008:bp - 0x0096,Stack +000A:ss,Stack +000C:es,Stack +000E:dx,Stack +0010:cx,Stack +0012:bx,Top:0
		defs: ax:ax_39
	branch ax_39 != 0x0000 l0800_987B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9876:
	Mem46[ss_bp - 0x0016:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_987B:
	Mem49[ss_bp - 0x0014:word16] = 0x0050
	Mem52[ss_bp - 0x0012:word16] = Mem49[ss_bp - 0x0012:word16] + di_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988B:
	return bp - 0x0096
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9858_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9CE6(word32 dwArg02, word32 dwArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp si sp
fn0800_9CE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CE6:
	fn0800_B03B(dwArg02, dwArg06, fn0800_BFC7(dwArg06, out cx_87) + 0x0001)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9CE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9D41(word16 dx, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9D41_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D41:
	selector ds_35
	word16 wLoc02_67
	branch dx == Mem0[0x0800:0x9D35:word16] l0800_9D7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D48:
	selector ds_9 = Mem0[dx:0x0002:selector]
	branch Mem0[ds_9:0x0002:word16] == 0x0000 l0800_9D5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D5C:
	branch ds_9 == Mem0[0x0800:0x9D35:word16] l0800_9D7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D7A:
	dx = Mem0[0x0800:0x9D35:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D7F:
	Mem16[0x0800:0x9D35:word16] = 0x0000
	Mem17[0x0800:0x9D37:word16] = 0x0000
	Mem18[0x0800:0x9D39:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D65:
	Mem20[0x0800:0x9D37:word16] = Mem0[ds_9:0x0008:word16]
	fn0800_9E15(ds_9)
	wLoc02_67 = ds_9
	ds_35 = Mem28[0x0800:0x9D3B:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D55:
	Mem36[0x0800:0x9D37:word16] = ds_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D94:
	ds_35 = Mem37[0x0800:0x9D3B:selector]
	wLoc02_67 = dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D9D:
	word16 bx_57
	word16 cx_58
	word16 dx_59
	word16 ax_56 = fn0800_A1D6(ds_35, 0x0000, wLoc02_67, out cx_58, out dx_59, out bx_57)
	cxOut = cx_58
	dxOut = dx_59
	bxOut = bx_57
	return ax_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9D41_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9DA4(word16 dx, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx:[0..15]
// LiveOut: ax bx
// Trashed: SCZO ax bx ds es Top
// Preserved: DP cx dx sp
fn0800_9DA4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DA4:
	word16 bx_17
	selector es_9 = Mem8[dx:0x0002:selector]
	Mem10[dx:0x0002:word16] = 0x0000
	Mem11[dx:0x0008:word16] = es_9
	word16 wLoc02_67 = dx
	branch dx == Mem11[0x0800:0x9D35:word16] l0800_9DEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DBC:
	branch Mem11[es_9:0x0002:word16] != 0x0000 l0800_9DEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DEA:
	bx_17 = fn0800_9E3E(dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DC4:
	word16 ax_25 = Mem11[dx:0x0000:word16]
	Mem31[es_9:0x0000:word16] = Mem29[es_9:0x0000:word16] + ax_25
	bx_17 = dx
	wLoc02_67 = es_9
	word16 dx_33 = dx + ax_25
	branch Mem31[dx_33:0x0002:word16] != 0x0000 l0800_9DE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DE3:
	Mem37[dx_33:0x0002:word16] = es_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DDC:
	Mem38[dx_33:0x0008:word16] = es_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DED:
	word16 ax_48 = wLoc02_67 + Mem43[wLoc02_67:0x0000:word16]
	branch Mem43[ax_48:0x0002:word16] == 0x0000 l0800_9DFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DFF:
	Mem54[wLoc02_67:0x0000:word16] = Mem43[wLoc02_67:0x0000:word16] + Mem43[ax_48:0x0000:word16]
	Mem60[ax_48 + Mem54[ax_48:0x0000:word16]:0x0002:word16] = wLoc02_67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E11_thunk_fn0800_9E15:
	bxOut = fn0800_9E15(ax_48)
	return wLoc02_67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DFE:
	bxOut = bx_17
	return ax_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9DA4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E15(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx
// Trashed: SCZO bx es Top
// Preserved: ds sp
fn0800_9E15_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E15:
	branch ds == Mem0[ds:0x0006:word16] l0800_9E36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E36:
	Mem9[0x0800:0x9D39:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E1D:
	selector es_10 = Mem0[ds:0x0006:selector]
	selector ds_11 = Mem0[ds:0x0004:selector]
	Mem12[ds_11:0x0006:word16] = es_10
	Mem13[es_10:0x0004:word16] = ds_11
	Mem14[0x0800:0x9D39:word16] = ds_11
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E15_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E3E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx
// Trashed: SCZDOP bx es Top
// Preserved: sp ss
fn0800_9E3E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E3E:
	word16 ax_5 = Mem0[0x0800:0x9D39:word16]
	branch ax_5 == 0x0000 l0800_9E67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E67:
	Mem11[0x0800:0x9D39:word16] = ds
	Mem12[ds:0x0004:word16] = ds
	Mem13[ds:0x0006:word16] = ds
	return bx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E46:
	__cli()
	selector es_22 = Mem20[ax_5:0x0006:selector]
	Mem23[ax_5:0x0006:word16] = ds
	Mem24[ds:0x0004:word16] = ax_5
	Mem28[es_22:0x0004:word16] = ds
	Mem29[ds:0x0006:word16] = es_22
	return ss
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E3E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E75(selector ds, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_9E75_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E75:
	Mem16[0x0800:0x9D3B:word16] = ds
	word16 dx_18 = wArg04
	branch wArg04 == 0x0000 l0800_9E95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E86:
	branch wArg04 != Mem16[0x0800:0x9D37:word16] l0800_9E92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E92:
	ax = fn0800_9DA4(wArg04, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E8D:
	ax = fn0800_9D41(wArg04, out cx, out dx_18, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E95:
	selector ds_43 = Mem16[0x0800:0x9D3B:selector]
	cxOut = cx
	dxOut = dx_18
	bxOut = bx
	dsOut = ds_43
	return ax
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E75_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E9E(word16 ax, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9E9E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E9E:
	word16 ax_16 = fn0800_A215(Mem7[0x0800:0x9D3B:selector], 0x00000000, out dx_129)
	branch (ax_16 & 0x000F) == 0x0000 l0800_9EC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EB3:
	fn0800_A215(Mem15[0x0800:0x9D3B:selector], (uint32) (uint16) (0x0010 - (ax_16 & 0x000F)), out dx_130)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EC7:
	word16 dx_74
	branch fn0800_A215(Mem57[0x0800:0x9D3B:selector], SEQ((word16) SLICE(ax, byte, 8) >>u 0x04, ax << 0x04), out dx_74) == 0xFFFF l0800_9EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EFE:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EE6:
	Mem89[0x0800:0x9D35:word16] = dx_74
	Mem90[0x0800:0x9D37:word16] = dx_74
	Mem92[dx_74:0x0000:word16] = ax
	Mem93[dx_74:0x0002:word16] = dx_74
	dxOut = dx_74
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E9E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F02(word16 ax, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9F02_entry:
	byte ah_9 = SLICE(ax, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F02:
	selector ds_16 = Mem7[0x0800:0x9D3B:selector]
	word16 dx_24
	word16 ax_21 = fn0800_A215(ds_16, SEQ((word16) ah_9 >>u 0x04, ax << 0x04), out dx_24)
	branch ax_21 == 0xFFFF l0800_9F58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F20:
	branch (ax_21 & 0x000F) != 0x0000 l0800_9F3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F3D:
	branch fn0800_A215(ds_16, (uint32) (uint16) (-(ax_21 & 0x000F) + 0x0010), out dx_129) == 0xFFFF l0800_9F58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F58:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F55:
	dx_24 = dx_24 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F25:
	word16 cx_75 = Mem74[0x0800:0x9D37:word16]
	Mem77[0x0800:0x9D37:word16] = dx_24
	Mem80[dx_24:0x0000:word16] = ax
	Mem81[dx_24:0x0002:word16] = cx_75
	dxOut = dx_24
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F02_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx ds dx Top
// Preserved: sp
fn0800_9F5C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F5C:
	Mem10[ds:0x0000:word16] = Mem0[ds:0x0000:word16] - ax
	word16 dx_11 = dx + Mem10[ds:0x0000:word16]
	Mem13[dx_11:0x0000:word16] = ax
	Mem14[dx_11:0x0002:word16] = dx
	Mem19[dx_11 + Mem14[dx_11:0x0000:word16]:0x0002:word16] = dx_11
	dxOut = dx_11
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F5C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F7F(ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax bp di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_9F7F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F7F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F87_thunk_fn0800_9F92:
	word16 bp_14
	selector ds_16
	word16 dx_17
	word16 di_20
	word16 si_22
	word16 ax_13 = fn0800_9F92(out dx_17, out bp_14, out si_22, out di_20, out ds_16)
	dxOut = dx_17
	bpOut = bp_14
	siOut = si_22
	diOut = di_20
	dsOut = ds_16
	return ax_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F7F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F89(ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax bp di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_9F89_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F89:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F8F_thunk_fn0800_9F92:
	word16 bp_12
	selector ds_14
	word16 dx_15
	word16 di_18
	word16 si_20
	word16 ax_11 = fn0800_9F92(out dx_15, out bp_12, out si_20, out di_18, out ds_14)
	dxOut = dx_15
	bpOut = bp_12
	siOut = si_20
	diOut = di_18
	dsOut = ds_14
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F89_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F92(ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax bp di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
l0800_9F92:
	Mem11[ss:sp - 2:word16] = si
	Mem14[ss:sp - 4:word16] = di
	Mem16[0x0800:0x9D3B:word16] = ds
	branch (ax | dx) == 0x0000 l0800_9FFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	word16 bp_19
	word16 di_20
	selector ds_21
	word16 dx_22
	word16 si_23
	word16 ax_18 = fn0800_9F9F(ax, dx, out dx_22, out bp_19, out si_23, out di_20, out ds_21)
	dxOut = dx_22
	bpOut = bp_19
	siOut = si_23
	diOut = di_20
	dsOut = ds_21
	return ax_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	word16 bp_33
	word16 di_34
	selector ds_35
	word16 dx_36
	word16 si_37
	word16 ax_32 = fn0800_9F9F(ax, dx, out dx_36, out bp_33, out si_37, out di_34, out ds_35)
	dxOut = dx_36
	bpOut = bp_33
	siOut = si_37
	diOut = di_34
	dsOut = ds_35
	return ax_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F92_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F92:
	Mem57[0x0800:0x9D3B:word16] = ds
	branch (ax | dx) == 0x0000 l0800_9FFD_in_fn0800_9F92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FFD_in_fn0800_9F92:
	selector ds_59 = Mem57[0x0800:0x9D3B:selector]
	dxOut = dx
	bpOut = wArg00
	siOut = si
	diOut = di
	dsOut = ds_59
	return ax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	word16 bp_67
	word16 di_68
	selector ds_69
	word16 dx_70
	word16 si_71
	word16 ax_66 = fn0800_9F9F(ax, dx, out dx_70, out bp_67, out si_71, out di_68, out ds_69)
	dxOut = dx_70
	bpOut = bp_67
	siOut = si_71
	diOut = di_68
	dsOut = ds_69
	return ax_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F92_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F9F(word16 ax, word16 dx, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_9F9F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9F:
	word16 ax_121
	word16 dx_132
	word16 dx_9 = dx + (ax <u 0x0013)
	branch dx_9 <u 0x0000 l0800_9FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FA7:
	branch (dx_9 & 0xFFF0) != 0x0000 l0800_9FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FE8:
	ax_121 = 0x0000 (alias)
	dx_132 = 0x0000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FAD:
	word16 ax_20 = ax + 0x0013 >>u 0x04
	word16 ax_31 = DPB(ax_20, SLICE(ax_20, byte, 8) | (byte) (dx_9 << 0x04), 8)
	branch Mem0[0x0800:0x9D35:word16] == 0x0000 l0800_9FDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FDE:
	ax_121 = fn0800_9E9E(ax_31, out dx_132)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FBE:
	word16 dx_43 = Mem0[0x0800:0x9D39:word16]
	dx_132 = dx_43
	branch dx_43 == 0x0000 l0800_9FD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FC7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FC9:
	branch Mem0[dx_132:0x0000:word16] >=u ax_31 l0800_9FED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FED:
	branch Mem0[dx_132:0x0000:word16] >u ax_31 l0800_9FE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FE3:
	ax_121 = fn0800_9F5C(ax_31, dx_132, dx_132, out dx_132)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FEF:
	fn0800_9E15(dx_132)
	Mem71[dx_132:0x0002:word16] = Mem0[dx_132:0x0008:word16]
	ax_121 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FD1:
	dx_132 = Mem0[dx_132:0x0006:word16]
	branch dx_132 != dx_43 l0800_9FC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FD9:
	ax_121 = fn0800_9F02(ax_31, out dx_132)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FFD:
	selector ds_93 = Mem90[0x0800:0x9D3B:selector]
	dxOut = dx_132
	bpOut = wArg04
	siOut = wArg02
	diOut = wArg00
	dsOut = ds_93
	return ax_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F9F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A006(word16 bx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds es si Top
// Preserved: sp
fn0800_A006_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A006:
	word16 dx_20
	fn0800_9F89(out dx_20, out bp_199, out si_200, out di_201, out ds_202)
	branch dx_20 != 0x0000 l0800_A01F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A01F:
	word16 dx_41 = Mem40[bx:0x0000:word16]
	word16 di_123 = 0x0004
	word16 si_121 = 0x0004
	word16 cx_127 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A033:
	branch cx_127 == 0x0000 l0800_A035
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A035:
	word16 dx_50 = dx_41 - 0x0001
	branch dx_41 == 0x0001 l0800_A070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A039:
	selector es_108 = dx_20 + 0x0001
	selector ds_113 = bx + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A043:
	word16 di_116 = 0x0000
	word16 si_114 = 0x0000
	word16 cx_66 = dx_50
	branch dx_50 <=u 0x1000 l0800_A052
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A04F:
	cx_66 = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A052:
	word16 cx_120 = cx_66 << 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A058:
	branch cx_120 == 0x0000 l0800_A05A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A05A:
	dx_50 = dx_50 - 0x1000
	branch dx_50 <=u 0x0000 l0800_A070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A070:
	fn0800_9E75(Mem80[0x0800:0x9D3B:selector], bx, out cx_203, out dx_204, out bx_205, out ds_206)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A060:
	es_108 = es_108 + 0x1000
	ds_113 = ds_113 + 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A058_1:
	Mem117[es_108:di_116:word16] = Mem82[ds_113:si_114:word16]
	si_114 = si_114 + 0x0002
	di_116 = di_116 + 0x0002
	cx_120 = cx_120 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A033_1:
	Mem124[dx_20:di_123:word16] = Mem81[bx:si_121:word16]
	si_121 = si_121 + 0x0002
	di_123 = di_123 + 0x0002
	cx_127 = cx_127 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A01D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A006_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A080(word16 ax, word16 cx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_A080_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A080:
	branch bx == Mem0[0x0800:0x9D37:word16] l0800_A0CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0CB:
	Mem13[bx:0x0000:word16] = ax
	fn0800_A1D6(ds, 0x0000, bx + ax, out cx_110, out dx_111, out bx_112)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A087:
	word16 di_38 = bx + ax
	Mem43[di_38:0x0000:word16] = cx - ax
	Mem44[di_38:0x0002:word16] = bx
	Mem50[bx:0x0000:word16] = ax
	word16 dx_52 = bx + cx
	branch Mem50[dx_52:0x0002:word16] == 0x0000 l0800_A0B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0B8:
	Mem56[dx_52:0x0008:word16] = di_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0B1:
	Mem57[dx_52:0x0002:word16] = di_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0BD:
	fn0800_9E75(ds, di_38, out cx_113, out dx_114, out bx_115, out ds_116)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A080_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_A162_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A162:
	word16 dx_111
	word16 ax_56
	word16 cx_106 = DPB(cx, 0x06, 0)
	word16 si_18 = wArg04 + 0x0001 - Mem11[ds:0x007B:word16] + 0x003F >>u 0x06
	branch si_18 != Mem11[ds:0x2698:word16] l0800_A18D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A18D:
	word16 si_22 = si_18 << 0x06
	word16 dx_23 = Mem11[ds:0x0091:word16]
	word16 ax_25 = (si_18 << 0x06) + Mem11[ds:0x007B:word16]
	branch ax_25 <=u dx_23 l0800_A1A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A19F:
	si_22 = dx_23 - Mem11[ds:0x007B:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1A5:
	word16 ax_41 = fn0800_A401(ax_25, ds, Mem35[ds:0x007B:word16], si_22, out bx)
	cx_106 = si_22
	dx_111 = ax_41
	branch ax_41 != 0xFFFF l0800_A1C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1C1:
	Mem54[ds:0x0091:word16] = Mem39[ds:0x007B:word16] + ax_41
	Mem55[ds:0x008F:word16] = 0x0000
	ax_56 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1B6:
	Mem63[ds:0x2698:word16] = si_22 >>u 0x06
	cx_106 = DPB(si_22, 0x06, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A17B:
	Mem71[ds:0x008D:word16] = wArg04
	Mem72[ds:0x008B:word16] = wArg02
	dx_111 = wArg02
	ax_56 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1D1:
	cxOut = cx_106
	dxOut = dx_111
	bxOut = bx
	return ax_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A162_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_A1D6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1D6:
	word16 ax_59
	word16 bx_11 = Mem7[ds:0x0087:word16]
	word16 bx_17
	word16 cx_18
	word16 dx_19
	fn0800_8F2F((byte) wArg02, wArg02, Mem7[ds:0x0089:word16], wArg04, (byte) bx_11, bx_11, out cx_18, out dx_19, out bx_17)
	bool C_21 = <invalid>
	branch C_21 l0800_A20C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1EC:
	word16 bx_25 = Mem7[ds:0x008F:word16]
	fn0800_8F2F((byte) wArg02, wArg02, Mem7[ds:0x0091:word16], wArg04, (byte) bx_25, bx_25, out cx_18, out dx_19, out bx_17)
	bool Z_36 = <invalid>
	bool C_35 = <invalid>
	branch Z_36 | C_35 l0800_A20C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out cx_18, out dx_19, out bx_17) != 0x0000 l0800_A211
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A211:
	ax_59 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A20C:
	ax_59 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A213:
	cxOut = cx_18
	dxOut = dx_19
	bxOut = bx_17
	return ax_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A1D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A215(selector ds, ui32 dwArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_A215_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A215:
	word16 dx_110
	word16 ax_111
	word16 dx_19
	word16 ax_25 = fn0800_8C69(Mem7[ds:0x008D:word16], 0x04, 0x0000, out cl_18, out dx_19) + Mem7[ds:0x008B:word16]
	ui32 dx_ax_124 = SEQ(dx_19 + (ax_25 <u 0x0000), ax_25) + dwArg02
	word16 wArg04_130 = SLICE(dwArg02, word16, 16)
	word16 wArg02_132 = SLICE(dwArg02, word16, 0)
	word16 ax_29 = (word16) dx_ax_124
	word16 dx_32 = SLICE(dx_ax_124, word16, 16)
	branch dx_32 < 0x000F l0800_A246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A237:
	branch dx_32 > 0x000F l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A239:
	branch ax_29 <=u 0xFFFF l0800_A246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A246:
	word16 dx_48
	word16 ax_46 = fn0800_8CCB(Mem7[ds:0x008B:word16], wArg04_130, Mem7[ds:0x008D:word16], wArg02_132, out ch_174, out dx_48)
	word16 bx_59 = Mem57[ds:0x0087:word16]
	fn0800_8F2F((byte) ax_46, ax_46, Mem57[ds:0x0089:word16], dx_48, (byte) bx_59, bx_59, out cx_65, out dx_175, out bx_64)
	word16 sp_50 = <invalid>
	bool C_68 = <invalid>
	branch C_68 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A26C:
	word16 bx_72 = Mem57[ds:0x008F:word16]
	fn0800_8F2F((byte) ax_46, ax_46, Mem57[ds:0x0091:word16], dx_48, (byte) bx_72, bx_72, out cx_176, out dx_177, out bx_178)
	bool Z_83 = <invalid>
	bool C_82 = <invalid>
	branch Z_83 | C_82 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A27F:
	word16 ax_86 = Mem57[ds:0x008D:word16]
	word16 dx_87 = Mem57[ds:0x008B:word16]
	Mem92[ss:sp_50 - 2:word16] = dx_48
	Mem95[ss:sp_50 - 4:word16] = ax_46
	branch fn0800_A162(ds, Mem95[ss:sp_50 - 4:word16], Mem95[ss:sp_50 - 2:word16], out cx_179, out dx_180, out bx_181) == 0x0000 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A299:
	dx_110 = ax_86
	ax_111 = dx_87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A23E:
	dx_110 = 0xFFFF
	ax_111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A29F:
	dxOut = dx_110
	return ax_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A215_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A2A3(selector ds, word16 wArg04, word16 wArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_A2A3_entry:
	byte bArg04 = SLICE(wArg04, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2A3:
	msdos_unknown_2144()
	word16 dx_33 = (word16) ptrArg06
	word16 ax_23 = DPB(DPB(ax, 0x44, 8), bArg04, 0)
	branch C l0800_A2C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C6:
	ax_23 = fn0800_8D2B(ds, ax_23)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2BA:
	branch wArg04 != 0x0000 l0800_A2C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C0:
	ax_23 = dx_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2CA:
	cxOut = wArg0A
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A2CC(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_A2CC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2CC:
	call Mem0[ds:0x26F4:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2CC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A2D0(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_A2D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D0:
	call Mem0[ds:0x26F6:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn0800_A2D4(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: Top
// Trashed: Top
// Preserved: sp
fn0800_A2D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D4:
	int8 Top_7
	call Mem0[ds:0x26F8:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn0800_A2D8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: Top
// Trashed: Top
// Preserved: sp
fn0800_A2D8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D8:
	int8 Top_7
	call Mem0[ds:0x26FA:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A36D(word32 ds_si, word32 es_di, word16 ax, word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cx:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31]
// LiveOut:
// Trashed: SCZO ax cx si Top
// Preserved: bx di dx sp
fn0800_A36D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A36D:
	byte al_11 = (byte) ax
	branch ax == 0x0000 l0800_A378
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A371:
	Mem14[es_di:byte] = al_11
	branch al_11 != 0x00 l0800_A378
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A377:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A378:
	branch cx == 0x0000 l0800_A394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A37F:
	byte al_40 = Mem38[ds_si:byte]
	branch al_40 == 0x22 l0800_A394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A385:
	branch al_40 != 0x5C l0800_A392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A38B:
	branch Mem38[ds_si + 0x0001:byte] != 0x22 l0800_A392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A390:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A392:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A394:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A36D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx
// Trashed: C ax bx es Top
// Preserved: SZO bp sp
fn0800_A401_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A401:
	word16 ax_27
	word16 ax_18 = DPB(ax, 0x4A, 8)
	word16 bx_12
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_12) l0800_A415
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A415:
	fn0800_8D2B(ds, ax_18)
	ax_27 = bx_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A410:
	ax_27 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A41B:
	bxOut = bx_12
	return ax_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A401_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A471(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx Top
// Preserved: bp di es si sp ss
fn0800_A471_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A471:
	selector es_168 = SLICE(ptrArg02, selector, 16)
	word16 si_169 = (word16) ptrArg02
	word16 ax_118 = 0x0000
	word16 dx_121 = 0x0000
	word16 bx_172 = DPB(bx, 0x00, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A487:
	byte bl_31 = Mem19[es_168:si_169:byte]
	bx_172 = DPB(bx_172, bl_31, 0) (alias)
	word16 bx_115 = DPB(bx_172, bl_31, 0)
	bx_115 = DPB(bx_172, bl_31, 0) (alias)
	si_169 = si_169 + 0x0001
	branch (Mem19[ds:bx_172 + 0x2251:byte] & 0x01) != 0x00 l0800_A487
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A490:
	word16 bp_124 = 0x0000
	branch bl_31 == 0x2B l0800_A49E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A498:
	branch bl_31 != 0x2D l0800_A4A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A49D:
	bp_124 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A49E:
	bl_31 = Mem19[es_168:si_169:byte]
	bx_115 = DPB(bx_115, bl_31, 0) (alias)
	si_169 = si_169 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4A2:
	Mem157 = Mem19 (alias)
	branch bl_31 >u 0x39 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4A7:
	byte bl_56 = bl_31 - 0x30
	bx_115 = DPB(bx_115, bl_56, 0) (alias)
	branch bl_56 <u 0x00 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4AC:
	int32 dx_ax_66 = ax_118 *u 0x000A
	ui32 dl_ax_177 = SLICE(dx_ax_66, word24, 0) + SEQ(SLICE(dx_ax_66, byte, 24), bx_115)
	byte dl_80 = SLICE(dl_ax_177, byte, 16)
	ax_118 = (word16) dl_ax_177
	dx_121 = DPB(SLICE(dx_ax_66, word16, 16), dl_80, 0) (alias)
	branch dl_80 == 0x00 l0800_A49E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4B4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4C8:
	byte bl_86 = Mem157[es_168:si_169:byte]
	si_169 = si_169 + 0x0001
	branch bl_86 >u 0x39 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D1:
	bx_115 = DPB(bx_115, bl_86 - 0x30, 0) (alias)
	branch bl_86 >=u 0x30 l0800_A4B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4B6:
	int32 dx_ax_97 = ax_118 *u 0x000A
	int32 dx_ax_180 = SEQ((word16) (dx_121 *u 0x000A), (word16) dx_ax_97) + SEQ(SLICE(dx_ax_97, word16, 16), bx_115)
	ax_118 = (word16) dx_ax_180
	dx_121 = SLICE(dx_ax_180, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D6:
	branch bp_124 < 0x0001 l0800_A4E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D9:
	ax_118 = -ax_118
	dx_121 = -dx_121 - (ax_118 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4E0:
	dxOut = dx_121
	return ax_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A471_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A4F6(selector ds, word32 dwArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_A4F6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4F6:
	branch fn0800_A53C(ds, 0x00, out cx_22) != 0xFFFF l0800_A513
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A513:
	branch (wArg06 & 0x0080) != 0x0000 l0800_A520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A51D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A520:
	branch fn0800_A53C(ds, 0x01, out cx_116) == 0xFFFF l0800_A50F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A538:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A50F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A53A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A4F6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A53C(selector ds, byte bArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0006:[8..15]
// LiveOut: ax cx
// Trashed: ax cx dx Top
// Preserved: SCZO bp ds sp
fn0800_A53C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A53C:
	word16 ax_24
	msdos_unknown_2143()
	word16 cx_12 = wArg08
	word16 ax_22 = DPB(DPB(ax, 0x43, 8), bArg06, 0)
	branch C l0800_A553
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A553:
	ax_24 = fn0800_8D2B(ds, ax_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A550:
	ax_24 = wArg08
	cx_12 = ax_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A557:
	cxOut = cx_12
	return ax_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A53C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A559(word16 ax, selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_A559_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A559:
	word16 ax_20
	branch wArg02 <u Mem7[ds:0x24E8:word16] l0800_A56E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A56E:
	Mem16[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	ax_20 = fn0800_A57F(ax, ds, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A565:
	ax_20 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A57D:
	dxOut = wArg02
	return ax_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A559_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx Top
// Preserved: bp sp
fn0800_A57F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A57F:
	word16 ax_17
	word16 ax_14 = DPB(ax, 0x3E, 8)
	branch msdos_close_file(wArg02) l0800_A597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A597:
	ax_17 = fn0800_8D2B(ds, ax_14)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A58B:
	Mem24[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	ax_17 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A59B:
	return ax_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A57F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A59D(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_A59D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A59D:
	word16 wLoc08_109
	word16 ax_118
	branch wArg02 <u Mem7[ds:0x24E8:word16] l0800_A5B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5B2:
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_A5C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5C4:
	word16 ax_19 = 0x4400
	byte dl_23 = (byte) dx
	branch msdos_ioctl_get_device_info(wArg02, out dx) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5CE:
	branch (dl_23 & 0x80) != 0x00 l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5D3:
	ax_19 = 0x4201
	dx = 0x0000
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5DE:
	ax_19 = 0x4202
	dx = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5F3:
	ax_19 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A60C:
	wLoc08_109 = ax_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5FA:
	branch false l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5FF:
	branch false l0800_A606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A601:
	branch false l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A608:
	ax_118 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A606:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5BF:
	ax_118 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5AC:
	wLoc08_109 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A60D:
	ax_118 = fn0800_8D2B(ds, wLoc08_109)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A610:
	dxOut = dx
	return ax_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A59D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A614(selector ds, segptr32 ptrArg02, ptr16 & cxOut, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: D bp si sp
fn0800_A614_entry:
	word16 wArg02_177 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_178 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A614:
	word16 si_104 = 0xFFFF
	branch Mem11[ptrArg02 + 0x0012:word16] == wArg02_177 l0800_A62A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A62A:
	branch Mem11[ptrArg02 + 0x0006:word16] == 0x0000 l0800_A65F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A634:
	branch Mem11[ptrArg02:word16] >= 0x0000 l0800_A647
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A63A:
	cx = wArg04_178
	branch fn0800_A6B7(ds, ptrArg02, out dx, out bx_244) != 0x0000 l0800_A6B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A647:
	branch (Mem51[ptrArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_A65F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A652:
	word16 v17_58 = Mem51[ptrArg02 + 0x000A:word16]
	fn0800_9E75(ds, v17_58, out cx_245, out dx, out bx_246, out ds)
	cx = v17_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A65F:
	branch Mem82[ptrArg02 + 0x0004:byte] < 0x00 l0800_A675
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A669:
	word16 ax_89 = (int16) Mem82[ptrArg02 + 0x0004:byte]
	cx = ax_89
	si_104 = fn0800_A559(ax_89, ds, ax_89, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A675:
	Mem111[ptrArg02 + 0x0002:word16] = 0x0000
	Mem112[ptrArg02 + 0x0006:word16] = 0x0000
	Mem113[ptrArg02:word16] = 0x0000
	Mem114[ptrArg02 + 0x0004:byte] = 0xFF
	branch Mem114[ptrArg02 + 0x0010:word16] == 0x0000 l0800_A6B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A695:
	fn0800_8E6A(ds, Mem128[ptrArg02 + 0x0010:word16], 0x0000, 0x0000, 0x00000000)
	word32 dx_ax_240 = <invalid>
	dx = fn0800_97F8(SLICE(dx_ax_240, word16, 0), ds, dx_ax_240)
	Mem161[ptrArg02 + 0x0010:word16] = 0x0000
	cx = SLICE(dx_ax_240, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A627:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6B2:
	cxOut = cx
	dxOut = dx
	dsOut = ds
	return si_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A614_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A6B7(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax bx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_A6B7_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6B7:
	word16 bx_107
	word16 ax_103
	word16 wArg02_137 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_143 = SLICE(ptrArg02, word16, 16)
	branch (wArg02 | wArg04) != 0x0000 l0800_A6C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6C9:
	bx_107 = (word16) ptrArg02 (alias)
	branch Mem11[ptrArg02 + 0x0012:word16] == wArg02_137 l0800_A6DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6DB:
	bx_107 = (word16) ptrArg02 (alias)
	branch Mem11[ptrArg02:word16] < 0x0000 l0800_A732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A732:
	word16 ax_32 = Mem11[ptrArg02 + 0x0006:word16] + Mem11[ptrArg02:word16]
	Mem36[ptrArg02:word16] = Mem11[ptrArg02:word16] - (ax_32 + 0x0001)
	word16 ax_40 = Mem39[ptrArg02 + 0x000A:word16]
	word16 dx_41 = Mem39[ptrArg02 + 0x0008:word16]
	Mem42[ptrArg02 + 0x000E:word16] = ax_40
	Mem43[ptrArg02 + 0x000C:word16] = dx_41
	branch fn0800_C632(ds, (int16) Mem47[ptrArg02 + 0x0004:byte], SEQ(ax_40, dx_41), ax_32 + 0x0001, out dx, out bx_107) == ax_32 + 0x0001 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A765:
	bx_107 = (word16) ptrArg02 (alias)
	branch (Mem51[ptrArg02 + 0x0002:word16] & 0x0200) != 0x0000 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A770:
	Mem72[ptrArg02 + 0x0002:word16] = Mem51[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6E4:
	word16 wArg02_146 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_147 = SLICE(ptrArg02, word16, 16)
	branch (Mem11[ptrArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_A701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6EC:
	dx = wArg02_137 + 0x0005
	branch Mem11[ptrArg02 + 0x000E:word16] != wArg04_143 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6FB:
	branch Mem11[ptrArg02 + 0x000C:word16] != wArg02_137 + 0x0005 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A701:
	Mem91[ptrArg02:word16] = 0x0000
	bx_107 = (word16) ptrArg02 (alias)
	dx = wArg02_146 + 0x0005
	branch Mem91[ptrArg02 + 0x000E:word16] != wArg04_147 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A718:
	branch Mem91[ptrArg02 + 0x000C:word16] != wArg02_146 + 0x0005 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A71E:
	dx = Mem91[ptrArg02 + 0x0008:word16]
	Mem101[ptrArg02 + 0x000E:word16] = Mem91[ptrArg02 + 0x000A:word16]
	Mem102[ptrArg02 + 0x000C:word16] = dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6D5:
	ax_103 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6C3:
	dx = fn0800_A877(ds, out bx_107)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A778:
	ax_103 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A77A:
	dxOut = dx
	bxOut = bx_107
	return ax_103
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A6B7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A77D(selector ds, word32 dwArg02, word16 wArg06, segptr32 ptrArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_A77D_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A77D:
	word16 di_16 = wArg06
	word16 cx_134 = 0x0000
	segptr32 ptrLoc06_153 = dwArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A1:
	word16 wLoc06_154 = SLICE(ptrLoc06_153, word16, 0)
	word16 wLoc04_157 = SLICE(ptrLoc06_153, word16, 16)
	branch cx_134 == 0x000A l0800_A7D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A6:
	di_16 = di_16 - 0x0001
	branch di_16 <= 0x0000 l0800_A7D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A9:
	word16 ax_48
	word16 v17_36 = Mem32[ptrArg08:word16] - 0x0001
	Mem37[ptrArg08:word16] = v17_36
	branch v17_36 < 0x0000 l0800_A7C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7C6:
	ax_48 = fn0800_AEC2(ds, ptrArg08, out ch_224, out dx_225)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7B1:
	word16 ax_61 = Mem37[ptrArg08 + 0x000E:word16]
	word16 si_62 = Mem37[ptrArg08 + 0x000C:word16]
	Mem64[ptrArg08 + 0x000C:word16] = Mem37[ptrArg08 + 0x000C:word16] + 0x0001
	ax_48 = DPB(DPB(ax_61, Mem64[ax_61:si_62:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7D1:
	cx_134 = ax_48
	byte cl_79 = (byte) ax_48
	cx_134 = ax_48 (alias)
	branch ax_48 != 0xFFFF l0800_A798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A798:
	Mem82[ptrLoc06_153:byte] = cl_79
	ptrLoc06_153 = SEQ(wLoc04_157, wLoc06_154 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7D8:
	word16 ax_112
	word16 dx_111
	branch cx_134 != 0xFFFF l0800_A7F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7DD:
	branch wLoc04_157 != wArg04 l0800_A7F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7E8:
	branch wLoc06_154 != wArg02 l0800_A7F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7F3:
	Mem104[ptrLoc06_153:byte] = 0x00
	branch (Mem104[ptrArg08 + 0x0002:word16] & 0x0010) == 0x0000 l0800_A80B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A80B:
	dx_111 = wArg04
	ax_112 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A805:
	dx_111 = 0x0000
	ax_112 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7ED:
	dx_111 = 0x0000
	ax_112 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A811:
	dxOut = dx_111
	return ax_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A77D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A817(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_A817_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A817:
	word16 ax_53
	word32 es_bx_12 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg06, selector, 16), (word16) ptrArg06)
	word16 bx_17 = (word16) es_bx_12
	word16 cx_32 = msdos_find_first_file(wArg0A, SLICE(ptrArg02, selector, 16), (word16) ptrArg02) | SZDOP
	msdos_set_DTA(SLICE(es_bx_12, selector, 16), bx_17)
	word16 ax_35 = DPB(ax, 0x4E, 8)
	branch fp - 6 l0800_A844
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A844:
	ax_53 = fn0800_8D2B(ds, ax_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A840:
	ax_53 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A848:
	cxOut = cx_32
	dxOut = bx_17
	return ax_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A817_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A84A(byte al, selector ds, segptr32 ptrArg02, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_A84A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A84A:
	word16 ax_49
	word32 es_bx_12 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	word16 bx_17 = (word16) es_bx_12
	word16 cx_28 = msdos_find_next_file() | SZDOP
	msdos_set_DTA(SLICE(es_bx_12, selector, 16), bx_17)
	word16 ax_31 = DPB(ax, 0x4F, 8)
	branch fp - 6 l0800_A871
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A871:
	ax_49 = fn0800_8D2B(ds, ax_31)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A86D:
	ax_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A875:
	cxOut = cx_28
	dxOut = bx_17
	return ax_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A84A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A877(selector ds, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx dx
// Trashed: SCZO ax bx cx di es si Top
// Preserved: bp sp
fn0800_A877_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A877:
	word16 si_20 = Mem15[ds:0x24E8:word16]
	segptr32 ptrLoc06_86 = SEQ(ds, 0x2358)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8A8:
	word16 wLoc04_87 = SLICE(ptrLoc06_86, word16, 16)
	word16 wLoc06_91 = SLICE(ptrLoc06_86, word16, 0)
	si_20 = si_20 - 0x0001
	branch si_20 != 0x0000 l0800_A88F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A88F:
	bx = (word16) ptrLoc06_86 (alias)
	branch (Mem32[ptrLoc06_86 + 0x0002:word16] & 0x0003) == 0x0000 l0800_A8A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A89A:
	fn0800_A6B7(ds, bx, out dx_112, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8A4:
	ptrLoc06_86 = SEQ(wLoc04_87, wLoc06_91 + 0x0014) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8AF:
	bxOut = bx
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A877_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, ptr16 & clOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut: ax cl
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp di si sp
fn0800_A8B7_entry:
	word16 wArg0A_162 = SLICE(ptrArg0A, word16, 0)
	word16 wArg0C_165 = SLICE(ptrArg0A, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8B7:
	word16 ax_141
	word16 si_107
	word16 dx_32
	segptr32 ptrArg0A_166 = SEQ(wArg0C_165, wArg0A_162 + 0x0001)
	word16 di_134 = 0x0000
	byte cl_21 = Mem18[ptrArg0A:byte]
	word16 wArg0A_168 = SLICE(ptrArg0A_166, word16, 0)
	word16 wArg0C_170 = SLICE(ptrArg0A_166, word16, 16)
	branch cl_21 != 0x72 l0800_A8D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8D5:
	branch cl_21 != 0x77 l0800_A8DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8DF:
	branch cl_21 != 0x61 l0800_A8EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8EF:
	ax_141 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8E4:
	dx_32 = 0x0902
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8DA:
	dx_32 = 0x0302
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8E7:
	di_134 = 0x0080
	si_107 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8CD:
	dx_32 = 0x0001
	si_107 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8F3:
	cl_21 = Mem18[ptrArg0A_166:byte]
	segptr32 ptrArg0A_171 = SEQ(wArg0C_170, wArg0A_168 + 0x0001)
	branch cl_21 == 0x2B l0800_A914
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A901:
	branch Mem49[ptrArg0A_171:byte] != 0x2B l0800_A92B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A90A:
	branch cl_21 == 0x74 l0800_A914
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A90F:
	branch cl_21 != 0x62 l0800_A92B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A914:
	branch cl_21 != 0x2B l0800_A91F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A919:
	cl_21 = Mem49[ptrArg0A_171:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A91F:
	dx_32 = dx_32 & 0xFFFC | 0x0004
	di_134 = 0x0180
	si_107 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A92B:
	word16 dx_103
	branch cl_21 != 0x74 l0800_A936
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A936:
	branch cl_21 != 0x62 l0800_A941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A941:
	dx_103 = dx_32 | Mem49[ds:0x2512:word16] & 0xC000
	branch (dx_103 & 0x8000) == 0x0000 l0800_A953
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A93B:
	dx_103 = dx_32 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A950:
	si_107 = si_107 | 0x0040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A930:
	dx_103 = dx_32 | 0x4000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A953:
	Mem117[ds:0x2354:word16] = 0xC7B5
	Mem131[ptrArg06:word16] = dx_103
	Mem139[ptrArg02:word16] = di_134
	ax_141 = si_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A967:
	clOut = cl_21
	return ax_141
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A8B7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A96D(word32 si_di, selector ds, word16 wArg02, word32 dwArg04, word32 dwArg08, segptr32 ptrArg0C, ptr16 & cxOut, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence si:di:[0..31] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ax cx di ds dx si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_A96D_entry:
	word16 si = SLICE(si_di, word16, 16)
	word16 di = SLICE(si_di, word16, 0)
	word16 wArg0E_248 = SLICE(ptrArg0C, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A96D:
	word16 dx_174
	word16 ax_175
	byte cl_30
	word16 ax_28 = fn0800_A8B7(ds, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x0004), dwArg04, out cl_30)
	Mem41[ptrArg0C + 0x0002:word16] = ax_28
	word16 cx_159 = DPB(cx, cl_30, 0)
	branch ax_28 == 0x0000 l0800_A9B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A991:
	branch Mem41[ptrArg0C + 0x0004:byte] >= 0x00 l0800_A9CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A998:
	byte al_78 = (byte) (word16) fn0800_B140(si_di, ds, dwArg08, wLoc04 | wArg02, wLoc06, out cx_159, out si, out di)
	Mem81[ptrArg0C + 0x0004:byte] = al_78
	branch al_78 >= 0x00 l0800_A9CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9CD:
	branch fn0800_8D76((int16) Mem88[ptrArg0C + 0x0004:byte]) == 0x0000 l0800_A9E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9DE:
	Mem114[ptrArg0C + 0x0002:word16] = Mem96[ptrArg0C + 0x0002:word16] | 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9E7:
	word16 ax_129
	branch (Mem121[ptrArg0C + 0x0002:word16] & 0x0200) == 0x0000 l0800_A9FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9FB:
	ax_129 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9F6:
	ax_129 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9FD:
	word16 wArg0E_256 = SLICE(ptrArg0C, word16, 16)
	word16 wArg0C_257 = SLICE(ptrArg0C, word16, 0)
	branch fn0800_BA89(ds, ptrArg0C, 0x0000, 0x0000, ax_129, 0x0200, out cx_159, out ds) == 0x0000 l0800_AA1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA1F:
	Mem173[ptrArg0C + 0x0010:word16] = 0x0000
	dx_174 = wArg0E_256
	ax_175 = wArg0C_257
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA12:
	fn0800_A614(ds, ptrArg0C, out cx_317, out dx_318, out ds)
	cx_159 = wArg0E_248
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9B9:
	Mem202[ptrArg0C + 0x0004:byte] = 0xFF
	Mem203[ptrArg0C + 0x0002:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9C7:
	dx_174 = 0x0000
	ax_175 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA2E:
	cxOut = cx_159
	dxOut = dx_174
	siOut = si
	diOut = di
	dsOut = ds
	return ax_175
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A96D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_AA34(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp sp
fn0800_AA34_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA34:
	segptr32 ptrLoc06_61 = SEQ(ds, 0x2358)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA42:
	word16 wLoc06_62 = SLICE(ptrLoc06_61, word16, 0)
	word16 wLoc04_66 = SLICE(ptrLoc06_61, word16, 16)
	branch Mem16[ptrLoc06_61 + 0x0004:byte] < 0x00 l0800_AA64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA4C:
	ptrLoc06_61 = SEQ(wLoc04_66, wLoc06_62 + 0x0014) (alias)
	branch wLoc06_62 <u (word16) (Mem27[ds:0x24E8:word16] *s 0x0014) + 0x2358 l0800_AA42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA64:
	branch Mem40[ptrLoc06_61 + 0x0004:byte] < 0x00 l0800_AA74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA74:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA6E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA7A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AA34_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AA7E(word32 si_di, selector ds, word32 dwArg02, word32 dwArg06, ptr16 & cxOut, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence si:di:[0..31] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax cx di ds dx si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_AA7E_entry:
	word16 si = SLICE(si_di, word16, 16)
	word16 di = SLICE(si_di, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA7E:
	word16 dx_100
	word16 ax_52
	fn0800_AA34(ds)
	word32 dx_ax_113 = <invalid>
	branch (SLICE(dx_ax_113, word16, 0) | SLICE(dx_ax_113, word16, 16)) != 0x0000 l0800_AA97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA97:
	ax_52 = fn0800_A96D(si_di, ds, 0x0000, dwArg06, dwArg02, dx_ax_113, out cx, out dx_100, out si, out di, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA91:
	dx_100 = 0x0000
	ax_52 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAAF:
	cxOut = cx
	dxOut = dx_100
	siOut = si
	diOut = di
	dsOut = ds
	return ax_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AA7E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AAB3(word16 dx, selector ds, segptr32 ptrArg02, word16 wArg06, segptr32 ptrArg08, ptr16 & chOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_AAB3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAB3:
	segptr32 ptrArg08_234 = ptrArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB91:
	word16 wArg08_248 = SLICE(ptrArg08_234, word16, 0)
	word16 wArg0A_244 = SLICE(ptrArg08_234, word16, 16)
	branch wArg06 == 0x0000 l0800_AB9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB97:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AABB:
	word16 ax_31
	word16 v10_20 = wArg06 + 0x0001
	wArg06 = v10_20
	branch Mem21[ptrArg02 + 0x0006:word16] <=u v10_20 l0800_AACF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AACF:
	ax_31 = Mem21[ptrArg02 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AACA:
	ax_31 = v10_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAD6:
	word16 di_34 = ax_31
	branch (Mem21[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAE3:
	branch Mem21[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAEA:
	branch Mem21[ptrArg02 + 0x0006:word16] >=u v10_20 l0800_AB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAF3:
	branch Mem21[ptrArg02:word16] != 0x0000 l0800_AB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB50:
	word16 v18_54 = wArg06 - 0x0001
	word16 wArg08_235 = SLICE(ptrArg08_234, word16, 0)
	word16 wArg0A_289 = SLICE(ptrArg08_234, word16, 16)
	wArg06 = v18_54
	branch v18_54 == 0x0000 l0800_AB8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB5A:
	di_34 = di_34 - 0x0001
	branch di_34 == 0x0000 l0800_AB8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB5D:
	word16 ax_101
	word16 v19_68 = Mem55[ptrArg02:word16] - 0x0001
	Mem69[ptrArg02:word16] = v19_68
	branch v19_68 < 0x0000 l0800_AB7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB7A:
	ax_101 = fn0800_AEC2(ds, ptrArg02, out ch_340, out dx_341)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB65:
	word16 ax_93 = Mem69[ptrArg02 + 0x000E:word16]
	word16 si_94 = Mem69[ptrArg02 + 0x000C:word16]
	Mem96[ptrArg02 + 0x000C:word16] = Mem69[ptrArg02 + 0x000C:word16] + 0x0001
	ax_101 = DPB(DPB(ax_93, Mem96[ax_93:si_94:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB85:
	dx = ax_101
	byte dl_111 = (byte) ax_101
	dx = ax_101 (alias)
	branch ax_101 != 0xFFFF l0800_AB47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB47:
	Mem114[ptrArg08_234:byte] = dl_111
	ptrArg08_234 = SEQ(wArg0A_289, wArg08_235 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB8C:
	branch dx == 0xFFFF l0800_AB3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAF9:
	wArg06 = v10_20 - 0x0001
	word16 di_127 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB0E:
	branch Mem132[ptrArg02 + 0x0006:word16] <=u wArg06 l0800_AB00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB00:
	di_127 = di_127 + Mem132[ptrArg02 + 0x0006:word16]
	wArg06 = wArg06 - Mem132[ptrArg02 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB1A:
	word16 ax_166 = fn0800_8F50(ds, (int16) Mem158[ptrArg02 + 0x0004:byte], ptrArg08_234, di_127, out ch_342, out dx_343)
	dx = ax_166
	ptrArg08_234 = SEQ(wArg0A_244, wArg08_248 + ax_166) (alias)
	branch ax_166 == di_127 l0800_AB91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB36:
	wArg06 = wArg06 + (di_127 - ax_166)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB3D:
	Mem195[ptrArg02 + 0x0002:word16] = Mem189[ptrArg02 + 0x0002:word16] | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB9A:
	chOut = <invalid>
	return wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AAB3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_ABA3(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & chOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax cx di si
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_ABA3_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
	word16 wArg0C = SLICE(dwArg0A, word16, 16)
	word16 wArg0A = SLICE(dwArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABA3:
	word16 ax_113
	word16 sp_100 = fp - 0x000A
	branch wArg06 != 0x0000 l0800_ABB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABB6:
	word16 dx_28
	word16 ax_27 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out ch_264, out dx_28)
	branch dx_28 >u 0x0001 l0800_ABF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABCD:
	branch dx_28 <u 0x0001 l0800_ABD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABCF:
	branch Test(UGE,false) l0800_ABF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABF2:
	word16 si_46 = wArg08 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC0B:
	word16 dx_98
	si_46 = si_46 - 0x0001
	branch si_46 == 0x0000 l0800_AC26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC12:
	word16 sp_60 = sp_100 - 2
	Mem61[ss:sp_60:word16] = wArg04
	Mem64[ss:sp_60 - 2:word16] = wArg02
	Mem67[ss:sp_60 - 4:word16] = wArg06
	Mem70[ss:sp_60 - 6:word16] = wArg0C
	Mem73[ss:sp_60 - 8:word16] = wArg0A
	branch fn0800_AAB3(dx_28, ds, Mem73[ss:sp_60 - 8:segptr32], Mem73[ss:sp_60 - 4:word16], Mem73[ss:sp_60 - 2:segptr32], out ch_266) == 0x0000 l0800_ABF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABF8:
	sp_100 = <invalid>
	wArg04 = dx_98
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, out ch_267, out dx_98)
	dx_28 = dx_98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC26:
	ax_113 = wArg08 - si_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABD3:
	sp_100 = fp - 0x000A
	ax_113 = (uint16) ((uint32) (uint16) (ax_27 - fn0800_AAB3(dx_28, ds, dwArg0A, ax_27, dwArg02, out ch_265)) /u wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABB2:
	ax_113 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC2B:
	word16 di_167 = Mem166[ss:sp_100:word16]
	word16 si_169 = Mem166[ss:sp_100 + 2:word16]
	chOut = <invalid>
	siOut = si_169
	diOut = di_167
	return ax_113
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_ABA3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AC31(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_AC31_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC31:
	word16 cx_108
	word16 si_29
	branch Mem12[ptrArg02:word16] >= 0x0000 l0800_AC4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC4D:
	int32 dx_ax_22 = (int32) Mem12[ptrArg02:word16]
	word16 dx_24 = SLICE(dx_ax_22, word16, 16)
	word16 ax_26 = ((word16) dx_ax_22 ^ dx_24) - dx_24
	cx_108 = ax_26
	si_29 = ax_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC41:
	word16 cx_31 = Mem12[ptrArg02 + 0x0006:word16] + Mem12[ptrArg02:word16]
	cx_108 = cx_31 + 0x0001
	si_29 = cx_31 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC5C:
	branch (Mem12[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_ACAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC67:
	word16 dx_49 = Mem12[ptrArg02 + 0x000C:word16]
	word16 ax_48 = Mem12[ptrArg02 + 0x000E:word16]
	word16 wLoc06_114 = dx_49
	segptr32 ptrLoc06_115 = SEQ(ax_48, dx_49)
	branch Mem51[ptrArg02:word16] >= 0x0000 l0800_ACA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACA3:
	word16 wLoc06_116 = SLICE(ptrLoc06_159, word16, 0)
	word16 wLoc04_131 = SLICE(ptrLoc06_159, word16, 16)
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_AC96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC96:
	ptrLoc06_115 = SEQ(wLoc04_131, wLoc06_116 + 0x0001) (alias)
	ptrLoc06_159 = ptrLoc06_115
	branch Mem66[ptrLoc06_159:byte] != 0x0A l0800_ACA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACA2:
	si_29 = si_29 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC7E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC8D:
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_AC80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC80:
	word16 v18_84 = wLoc06_114 - 0x0001
	wLoc06_114 = v18_84
	branch Mem85[SEQ(ax_48, v18_84):byte] != 0x0A l0800_AC8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC8C:
	si_29 = si_29 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC94:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACAA:
	return si_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AC31_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_ACB3(selector ds, segptr32 ptrArg02, ui32 dwArg06, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_ACB3_entry:
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
	word16 wArg08 = SLICE(dwArg06, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACB3:
	word16 ax_112
	word16 cx_101 = wArg04
	word16 bx_100
	word16 dx_102
	branch fn0800_A6B7(ds, ptrArg02, out dx_102, out bx_100) == 0x0000 l0800_ACCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACCE:
	ui32 dwArg06_198 = dwArg06
	branch wArg0A != 0x0001 l0800_ACEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACD3:
	dwArg06_198 = dwArg06 (alias)
	branch Mem18[ptrArg02:word16] <= 0x0000 l0800_ACEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACDC:
	ui32 dwArg06_144 = SEQ(wArg08, v19_61)
	ui32 v21_v19_128 = dwArg06_144 - (int32) fn0800_AC31(ptrArg02)
	word16 v19_61 = (word16) v21_v19_128
	dwArg06_198 = SEQ(SLICE(v21_v19_128, word16, 16), SLICE(dwArg06_144, word16, 0)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACEA:
	Mem76[ptrArg02 + 0x0002:word16] = Mem71[ptrArg02 + 0x0002:word16] & 0xFE5F
	Mem79[ptrArg02:word16] = 0x0000
	word16 dx_81 = Mem79[ptrArg02 + 0x0008:word16]
	Mem82[ptrArg02 + 0x000E:word16] = Mem79[ptrArg02 + 0x000A:word16]
	Mem83[ptrArg02 + 0x000C:word16] = dx_81
	word16 ax_99 = fn0800_8E29(ds, (int16) Mem93[ptrArg02 + 0x0004:byte], dwArg06_198, SLICE(wArg0A, byte, 0), out cx_101, out dx_102, out bx_100)
	branch dx_102 != 0xFFFF l0800_AD2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD20:
	branch ax_99 != 0xFFFF l0800_AD2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2A:
	ax_112 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD25:
	ax_112 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACC9:
	ax_112 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2C:
	cxOut = cx_101
	dxOut = dx_102
	bxOut = bx_100
	return ax_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_ACB3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AD2F(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_AD2F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2F:
	word16 dx_22
	word16 ax_19 = fn0800_97B6(ds, (int16) Mem7[ptrArg02 + 0x0004:byte], out dx_22)
	word16 wLoc04_110 = dx_22
	word16 wLoc06_111 = ax_19
	branch dx_22 != 0xFFFF l0800_AD52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD4D:
	branch ax_19 == 0xFFFF l0800_AD7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD52:
	branch Mem30[ptrArg02:word16] >= 0x0000 l0800_AD6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD6B:
	ui32 v23_v22_104 = SEQ(dx_22, v22_62) - (int32) fn0800_AC31(ptrArg02)
	word16 v22_62 = (word16) v23_v22_104
	wLoc06_111 = v22_62
	wLoc04_110 = SLICE(v23_v22_104, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD5B:
	ui32 v19_v17_106 = SEQ(dx_22, v17_87) + (int32) fn0800_AC31(ptrArg02)
	word16 v17_87 = (word16) v19_v17_106
	wLoc06_111 = v17_87
	wLoc04_110 = SLICE(v19_v17_106, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD7B:
	dxOut = wLoc04_110
	return wLoc06_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AD2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AD85(selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, word32 dwArg0A, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..31]
// LiveOut: ax di si
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_AD85_entry:
	word16 wArg04 = SLICE(dwArg02, word16, 16)
	word16 wArg02 = SLICE(dwArg02, word16, 0)
	word16 wArg0C = SLICE(dwArg0A, word16, 16)
	word16 wArg0A = SLICE(dwArg0A, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD85:
	word16 ax_110
	word16 sp_13 = fp - 0x000A
	branch wArg06 == 0x0000 l0800_AE07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD94:
	word16 dx_28
	word16 ax_27 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out ch_271, out dx_28)
	branch dx_28 >u 0x0001 l0800_ADC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADAB:
	branch dx_28 <u 0x0001 l0800_ADB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADAD:
	branch Test(UGE,false) l0800_ADC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADC9:
	word16 si_103 = 0x0000
	branch wArg08 <=u 0x0000 l0800_AE07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADD0:
	word16 sp_53 = sp_13 - 2
	Mem54[ss:sp_53:word16] = wArg04
	Mem57[ss:sp_53 - 2:word16] = wArg02
	Mem60[ss:sp_53 - 4:word16] = wArg06
	Mem63[ss:sp_53 - 6:word16] = wArg0C
	Mem66[ss:sp_53 - 8:word16] = wArg0A
	word16 ax_68 = fn0800_B4BE(ds, Mem66[ss:sp_53 - 8:segptr32], Mem66[ss:sp_53 - 4:word16], Mem66[ss:sp_53 - 2:segptr32])
	sp_13 = sp_53 + 0x0002
	branch false l0800_ADEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADE6:
	branch ax_68 == wArg06 l0800_ADEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADEE:
	sp_13 = <invalid>
	wArg04 = dx_93
	word16 dx_93
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, out ch_272, out dx_93)
	si_103 = si_103 + 0x0001
	branch si_103 <u wArg08 l0800_ADD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE07:
	ax_110 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADEA:
	ax_110 = si_103
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADB1:
	sp_13 = fp - 0x000A
	ax_110 = (uint16) ((uint32) (uint16) fn0800_B4BE(ds, dwArg0A, ax_27, dwArg02) /u wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE0A:
	word16 di_159 = Mem157[ss:sp_13:word16]
	siOut = Mem157[ss:sp_13 + 2:word16]
	diOut = di_159
	return ax_110
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AD85_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_AE10(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_AE10_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE10:
	word16 si_14 = 0x0014
	segptr32 ptrLoc06_72 = SEQ(ds, 0x2358)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE40:
	word16 wLoc04_73 = SLICE(ptrLoc06_72, word16, 16)
	word16 wLoc06_78 = SLICE(ptrLoc06_72, word16, 0)
	si_14 = si_14 - 0x0001
	branch si_14 != 0x0000 l0800_AE24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE24:
	branch (Mem27[ptrLoc06_72 + 0x0002:word16] & 0x0300) != 0x0300 l0800_AE3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE33:
	fn0800_A6B7(ds, ptrLoc06_72, out dx_103, out bx_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE3C:
	ptrLoc06_72 = SEQ(wLoc04_73, wLoc06_78 + 0x0014) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE47:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AE10_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AE4C(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp sp
fn0800_AE4C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE4C:
	branch (Mem7[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AE5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE5A:
	fn0800_AE10(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE5D:
	word16 ax_111
	word16 v11_31 = Mem7[ptrArg02 + 0x0006:word16]
	word16 ax_35 = Mem34[ptrArg02 + 0x000A:word16]
	word16 dx_36 = Mem34[ptrArg02 + 0x0008:word16]
	Mem37[ptrArg02 + 0x000E:word16] = ax_35
	Mem38[ptrArg02 + 0x000C:word16] = dx_36
	word16 dx_51
	word16 ax_48 = fn0800_B97F(ds, (int16) Mem42[ptrArg02 + 0x0004:byte], SEQ(ax_35, dx_36), v11_31, out dx_51)
	Mem62[ptrArg02:word16] = ax_48
	branch ax_48 <= 0x0000 l0800_AE95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE95:
	branch Mem62[ptrArg02:word16] != 0x0000 l0800_AEAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEAE:
	Mem74[ptrArg02:word16] = 0x0000
	Mem76[ptrArg02 + 0x0002:word16] = Mem74[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE9E:
	Mem84[ptrArg02 + 0x0002:word16] = Mem62[ptrArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEBB:
	ax_111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE8C:
	Mem87[ptrArg02 + 0x0002:word16] = Mem62[ptrArg02 + 0x0002:word16] & 0xFFDF
	ax_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEBE:
	dxOut = dx_51
	return ax_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AE4C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_AEC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEC2:
	Mem13[ptrArg02:word16] = Mem7[ptrArg02:word16] + 0x0001
	word16 dx_24
	word16 ax_21 = fn0800_AED6(ds, ptrArg02, out dx_24)
	chOut = <invalid>
	dxOut = dx_24
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AEC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AED6(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_AED6_entry:
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AED6:
	word16 ax_190
	branch (wArg02 | wArg04) != 0x0000 l0800_AEE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEE8:
	word16 ax_246
	branch Mem11[ptrArg02:word16] <= 0x0000 l0800_AF0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF0B:
	branch Mem11[ptrArg02:word16] < 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF14:
	branch (Mem11[ptrArg02 + 0x0002:word16] & 0x0110) != 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF1C:
	branch (Mem11[ptrArg02 + 0x0002:word16] & 0x0001) == 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF24:
	Mem37[ptrArg02 + 0x0002:word16] = Mem11[ptrArg02 + 0x0002:word16] | 0x0080
	branch Mem37[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AF43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF43:
	branch (Mem43[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AF51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF4E:
	fn0800_AE10(ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF51:
	word16 ax_80 = fn0800_B97F(ds, (int16) Mem71[ptrArg02 + 0x0004:byte], SEQ(ds, 0x4EE4), 0x0001, out dx)
	branch ax_80 != 0x0000 l0800_AF9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF9E:
	branch Mem79[ds:0x4EE4:byte] != 0x0D l0800_AFB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFA5:
	branch (Mem79[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AF43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFB0:
	Mem110[ptrArg02 + 0x0002:word16] = Mem79[ptrArg02 + 0x0002:word16] & 0xFFDF
	ax_246 = DPB(ax_80, Mem110[ds:0x4EE4:byte], 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF6D:
	branch fn0800_A59D(ds, (int16) Mem79[ptrArg02 + 0x0004:byte], out dx) == 0x0001 l0800_AF8A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF8A:
	Mem142[ptrArg02 + 0x0002:word16] = Mem121[ptrArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF7F:
	Mem150[ptrArg02 + 0x0002:word16] = Mem145[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF34:
	branch fn0800_AE4C(ds, ptrArg02, out dx) == 0x0000 l0800_AEF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF3F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEF1:
	Mem181[ptrArg02:word16] = Mem176[ptrArg02:word16] - 0x0001
	word16 ax_182 = Mem181[ptrArg02 + 0x000E:word16]
	word16 si_183 = Mem181[ptrArg02 + 0x000C:word16]
	Mem185[ptrArg02 + 0x000C:word16] = Mem181[ptrArg02 + 0x000C:word16] + 0x0001
	ax_246 = DPB(ax_182, Mem185[ax_182:si_183:byte], 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFBB:
	ax_190 = DPB(ax_246, 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEE2:
	ax_190 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFBD:
	dxOut = dx
	return ax_190
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AED6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_AFCB(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_AFCB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFCB:
	selector es_17 = SLICE(ptrArg02, selector, 16)
	word16 di_19 = (word16) ptrArg02
	branch (es_17 | di_19) == 0x0000 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFDC:
	byte ah_25 = Mem15[ptrArg02:byte]
	word16 cx_26 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE5:
	branch cx_26 == 0x0000 l0800_AFE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE5_1:
	di_19 = di_256 + 0x0001
	cx_26 = cx_26 - 0x0001
	di_256 = di_19
	branch Mem15[es_17:di_256:byte] == 0x00 l0800_AFE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE7:
	word16 cx_38 = ~cx_26
	branch cx_38 == 0x0001 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFEC:
	ptr32 es_di_46 = Mem15[ds:0x26AA:segptr32]
	word16 di_151 = (word16) es_di_46
	selector es_47 = SLICE(es_di_46, selector, 16)
	word16 wLoc06_166 = di_151
	branch (es_47 | di_151) != 0x0000 l0800_B009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B009:
	ptr32 es_di_63 = Mem62[ds:di_151:segptr32]
	selector es_64 = SLICE(es_di_63, selector, 16)
	word16 di_66 = (word16) es_di_63
	word16 cx_79 = cx_38 - 0x0001
	branch (es_64 | di_66) == 0x0000 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B012:
	byte al_71 = Mem62[es_di_63:byte]
	branch al_71 == 0x00 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B019:
	branch ah_25 != al_71 l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B01D:
	bool Z_113 = SLICE(cond(Mem62[cx_38 - 0x0001 + es_di_63:byte] - 0x3D), bool, 2)
	branch Mem62[cx_38 - 0x0001 + es_di_63:byte] != 0x3D l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B025:
	selector ds_159 = SLICE(ptrArg02, selector, 16)
	word16 si_160 = (word16) ptrArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B029:
	branch cx_79 == 0x0000 l0800_B02B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B029_1:
	Z_113 = SLICE(cond(Mem86[ds_159:si_257:byte] - Mem86[es_64:di_258:byte]), bool, 2) (alias)
	si_160 = si_257 + 0x0001
	di_66 = di_258 + 0x0001
	cx_79 = cx_79 - 0x0001
	si_257 = si_160
	di_258 = di_66
	branch Mem86[ds_159:si_257:byte] != Mem86[es_64:di_258:byte] l0800_B029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B02B:
	branch Z_113 l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B002:
	word16 v23_120 = wLoc06_166 + 0x0004
	wLoc06_166 = v23_120
	di_151 = (word16) SEQ(es_47, v23_120) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B030:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFFC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B035:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AFCB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B03B(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_B03B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B03B:
	selector es_60 = SLICE(ptrArg02, selector, 16)
	word16 di_30 = (word16) ptrArg02
	selector ds_58 = SLICE(ptrArg06, selector, 16)
	word16 si_26 = (word16) ptrArg06
	word16 cx_20 = wArg0A >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B04E:
	branch cx_20 == 0x0000 l0800_B050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B050:
	branch wArg0A >>u 0x0001 >=u 0x0000 l0800_B053
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B052:
	Mem31[es_60:di_30:byte] = Mem27[ds_58:si_26:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B053:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B03B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B04E_1:
	Mem53[es_60:di_30:word16] = Mem27[ds_58:si_26:word16]
	si_26 = si_26 + 0x0002
	di_30 = di_30 + 0x0002
	cx_20 = cx_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx es Top
// Preserved: bp di sp
fn0800_B05F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B05F:
	word16 ax_59 = DPB(DPB(ax, bArg08, 0), bArg08, 8)
	word16 di_17 = (word16) ptrArg02
	selector es_21 = SLICE(ptrArg02, selector, 16)
	word16 cx_13 = wArg06
	ax_59 = DPB(ax_59, bArg08, 0) (alias)
	word16 ax_46 = DPB(ax_59, bArg08, 0)
	branch (di_17 & 0x0001) == 0x0000 l0800_B079
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B075:
	branch wArg06 == 0x0000 l0800_B080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B077:
	Mem22[ptrArg02:byte] = bArg08
	di_17 = di_17 + 0x0001
	cx_13 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B079:
	word16 cx_27 = cx_13 >>u 0x0001
	cx_29 = cx_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07B:
	word16 cx_29
	ax_46 = DPB(ax_46, bArg08, 0) (alias)
	branch cx_29 == 0x0000 l0800_B07D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07D:
	branch cx_27 >=u 0x0000 l0800_B080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07F:
	Mem34[es_21:di_17:byte] = bArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B080:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B05F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07B_1:
	Mem48[es_21:di_17:word16] = ax_46
	di_17 = di_17 + 0x0002
	cx_29 = cx_29 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B083(word32 dwArg02, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp sp
fn0800_B083_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B083:
	fn0800_B05F(dwArg02, wArg08, SLICE(DPB(ax, bArg06, 0), byte, 0))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B083_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B0A1(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_B0A1_entry:
	word16 wArg08 = SLICE(ptrArg06, word16, 16)
	word16 wArg06 = SLICE(ptrArg06, word16, 0)
	word16 wArg04 = SLICE(ptrArg02, word16, 16)
	word16 wArg02 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0A1:
	word16 ax_33
	fn0800_8F2F((byte) wArg02, wArg02, wArg08, wArg04, (byte) wArg06, wArg06, out cx_196, out dx_197, out bx_198)
	bool C_29 = <invalid>
	branch C_29 l0800_B0BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0BE:
	ax_33 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0B8:
	ax_33 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0C1:
	word16 si_49 = (word16) ptrArg02
	selector ds_63 = SLICE(ptrArg02, selector, 16)
	word16 di_52 = (word16) ptrArg06
	selector es_68 = SLICE(ptrArg06, selector, 16)
	word16 cx_43 = wArg0A
	branch ax_33 == 0x0000 l0800_B0D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0CE:
	si_49 = si_49 + wArg0A - 0x0001
	di_52 = di_52 + wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0D4:
	branch (di_52 & 0x0001) == 0x0000 l0800_B0DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DA:
	branch wArg0A == 0x0000 l0800_B0ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DC:
	Mem69[es_68:di_52:byte] = Mem17[ds_63:si_49:byte]
	si_49 = si_49 + 0x0001
	di_52 = di_52 + 0x0001
	cx_43 = wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DE:
	word16 si_117 = si_49 - ax_33
	word16 di_118 = di_52 - ax_33
	word16 cx_81 = cx_43 >>u 0x0001
	cx_119 = cx_81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E4:
	word16 cx_119
	branch cx_119 == 0x0000 l0800_B0E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E6:
	branch cx_81 >=u 0x0000 l0800_B0ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E8:
	Mem95[es_68:di_118 + ax_33:byte] = Mem92[ds_63:si_117 + ax_33:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0ED:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B0A1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E4_1:
	Mem116[es_68:di_118:word16] = Mem92[ds_63:si_117:word16]
	si_117 = si_117 + 0x0002
	di_118 = di_118 + 0x0002
	cx_119 = cx_119 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B0F3(word32 dwArg02, word32 dwArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp sp
fn0800_B0F3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0F3:
	fn0800_B0A1(dwArg06, dwArg02, wArg0A)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B0F3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B113(selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax cx
// Trashed: C ax cx dx Top
// Preserved: SZO bp ds sp
fn0800_B113_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B113:
	word16 ax_17
	branch msdos_create_truncate_file(wArg02, SLICE(ptrArg04, selector, 16), (word16) ptrArg04, out ax_17) l0800_B126
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B126:
	ax_17 = fn0800_8D2B(ds, ax_17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B124:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B12A:
	cxOut = wArg02
	return ax_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B113_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B12E(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_B12E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B12E:
	word16 ax_16
	msdos_write_file(wArg02, 0x0000, SEQ(ds, 0x0000), out ax_16)
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B12E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_B140(word32 si_di, selector ds, word32 dwArg02, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence si:di:[0..31] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax cx di si
// Trashed: SCZO ax bx cx di dx si Top
// Preserved: bp sp
fn0800_B140_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B140:
	word16 si_16 = wArg06
	word16 wLoc0A_426 = SLICE(si_di, word16, 0)
	word16 wLoc08_434 = SLICE(si_di, word16, 16)
	branch (wArg06 & 0xC000) != 0x0000 l0800_B15C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B154:
	si_16 = wArg06 | Mem15[ds:0x2512:word16] & 0xC000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B15C:
	word16 ax_324
	word16 di_114
	word16 cx_110
	word16 ax_42 = fn0800_A53C(ds, 0x00, out cx_110)
	word16 wLoc04_369 = ax_42
	branch (si_16 & 0x0100) == 0x0000 l0800_B1F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B174:
	word16 di_52 = wArg08 & Mem46[ds:0x2514:word16]
	branch (di_52 & 0x0180) != 0x0000 l0800_B186
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B17F:
	fn0800_8D2B(ds, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B186:
	word16 wLoc0C_372
	branch ax_42 != 0xFFFF l0800_B1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1AF:
	branch (si_16 & 0x0400) == 0x0000 l0800_B1F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1B5:
	wLoc0C_372 = 0x0050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B18C:
	branch Mem68[ds:0x2516:word16] == 0x0002 l0800_B19D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B19D:
	word16 ax_86
	branch (di_52 & 0x0080) == 0x0000 l0800_B1A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1A7:
	ax_86 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1A3:
	ax_86 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1AA:
	wLoc04_369 = ax_86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1BB:
	branch (si_16 & 0x00F0) == 0x0000 l0800_B1DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1DD:
	word16 ax_109 = fn0800_B113(ds, ax_86, dwArg02, out cx_110)
	di_114 = ax_109
	branch ax_109 >= 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1EF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1C1:
	word16 ax_130 = fn0800_B113(ds, 0x0000, dwArg02, out cx_110)
	di_114 = ax_130
	branch ax_130 >= 0x0000 l0800_B1D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1D6:
	fn0800_A57F(ax_130, ds, ax_130)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1F2:
	word16 ax_163 = fn0800_B2A0(ds, dwArg02, si_16, out cx_110)
	di_114 = ax_163
	branch ax_163 < 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B205:
	word16 ax_184 = fn0800_A2A3(ds, 0x0000, si_di, out cx_511)
	cx_110 = 0x0000
	branch (ax_184 & 0x0080) == 0x0000 l0800_B237
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B237:
	branch (si_16 & 0x0200) == 0x0000 l0800_B241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B23D:
	cx_110 = fn0800_B12E(ds, ax_163)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B216:
	si_16 = si_16 | 0x2000
	branch (si_16 & 0x8000) == 0x0000 l0800_B241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B220:
	fn0800_A2A3(ds, 0x0001, (uint32) (uint16) (ax_184 & 0x00FF | 0x0020), out cx_110)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B241:
	branch (wLoc04_369 & 0x0001) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B248:
	branch (si_16 & 0x0100) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B24E:
	branch (si_16 & 0x00F0) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B254:
	fn0800_A53C(ds, 0x01, out cx_110)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B265:
	branch di_114 < 0x0000 l0800_B298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B269:
	word16 ax_283
	branch (si_16 & 0x0300) == 0x0000 l0800_B274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B274:
	ax_283 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B26F:
	ax_283 = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B276:
	word16 ax_303
	word16 dx_291 = si_16 & 0xF8FF | ax_283
	branch (wLoc04_369 & 0x0001) == 0x0000 l0800_B28A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B28A:
	ax_303 = 0x0100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B286:
	ax_303 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B28D:
	Mem322[ds:(di_114 << 0x0001) + 0x24EA:word16] = dx_291 | ax_303
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1D3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B298:
	ax_324 = di_114
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B193:
	wLoc0C_372 = Mem68[ds:0x2516:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B197:
	ax_324 = fn0800_8D2B(ds, wLoc0C_372)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B29A:
	cxOut = cx_110
	siOut = wLoc08_434
	diOut = wLoc0A_426
	return (byte) ax_324
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B140_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_B2A0_entry:
	byte bArg06_69 = SLICE(wArg06, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2A0:
	byte al_10 = 0x01
	branch (wArg06 & 0x0002) != 0x0000 l0800_B2BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2B1:
	al_10 = 0x02
	branch (wArg06 & 0x0004) != 0x0000 l0800_B2BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2B9:
	al_10 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2BB:
	word16 ax_42
	word16 cx_85 = DPB(wArg06, bArg06_69 & 0xF0, 0)
	word16 ax_36
	branch msdos_open_file(ptrArg02, al_10 | bArg06_69 & 0xF0, out ax_36) l0800_B2E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2E7:
	ax_42 = fn0800_8D2B(ds, ax_36)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2CD:
	Mem55[ds:(ax_36 << 0x0001) + 0x24EA:word16] = wArg06 & 0xB8FF | 0x8000
	ax_42 = ax_36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2EB:
	cxOut = cx_85
	return ax_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B2A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B2EF(word16 cx, word16 dx, word16 bx, selector ds, word32 dwArg02, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax di si
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_B2EF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2EF:
	word16 di_31
	word16 si_32
	word16 ax_30 = fn0800_9828(cx, dx, bx, ds, fp + 0x0006, dwArg02, out si_32, out di_31)
	siOut = si_32
	diOut = di_31
	return ax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B2EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B30A(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_B30A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B30A:
	Mem13[ptrArg04:word16] = Mem7[ptrArg04:word16] - 0x0001
	word16 bx_26
	word16 cx_28
	word16 dx_29
	word16 ax_25 = fn0800_B324(ds, SLICE((int16) bArg02, byte, 0), ptrArg04, out cx_28, out dx_29, out bx_26)
	cxOut = cx_28
	dxOut = dx_29
	bxOut = bx_26
	return ax_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B30A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B324(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_B324_entry:
	word16 wArg04_307 = SLICE(ptrArg04, word16, 0)
	word16 wArg06_312 = SLICE(ptrArg04, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B324:
	word16 ax_127
	word16 ax_280
	Mem14[ds:0x4EE6:byte] = bArg02
	word16 bx_128 = (word16) ptrArg04
	branch Mem14[ptrArg04:word16] >= 0xFFFF l0800_B389
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B389:
	branch (Mem14[ptrArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_B39C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B394:
	branch (Mem14[ptrArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_B3A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3A6:
	word16 wArg06_330
	Mem33[ptrArg04 + 0x0002:word16] = Mem14[ptrArg04 + 0x0002:word16] | 0x0100
	branch Mem33[ptrArg04 + 0x0006:word16] == 0x0000 l0800_B421
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B421:
	selector es_38 = SLICE(ptrArg04, selector, 16)
	branch (Mem33[ds:((int16) Mem33[ptrArg04 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B44C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B435:
	fn0800_8E29(ds, (int16) Mem56[es_38:wArg04_307 + 0x0004:byte], 0x00000000, 0x02, out cx_439, out dx_440, out bx_441)
	wArg06_330 = SLICE(ptrArg04, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B44C:
	branch Mem73[ds:0x4EE6:byte] != 0x0A l0800_B478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B453:
	branch (Mem73[ptrArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B45E:
	ax_127 = fn0800_C779(ds, (int16) Mem92[ptrArg04 + 0x0004:byte], SEQ(ds, 0x26AE), 0x0001, out cx, out dx, out bx_442)
	branch ax_127 != 0x0001 l0800_B495
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B478:
	ax_127 = fn0800_C779(ds, (int16) Mem118[ptrArg04 + 0x0004:byte], SEQ(ds, 0x4EE6), 0x0001, out cx, out dx, out bx_128)
	branch ax_127 == 0x0001 l0800_B4A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B495:
	bx_128 = (word16) ptrArg04 (alias)
	branch (Mem140[ptrArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_B4A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3B6:
	branch Mem33[ptrArg04:word16] == 0x0000 l0800_B3C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3BC:
	cx = wArg06_312
	branch fn0800_A6B7(ds, ptrArg04, out dx, out bx_128) != 0x0000 l0800_B380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3C9:
	Mem179[ptrArg04:word16] = -Mem173[ptrArg04 + 0x0006:word16]
	ax_127 = Mem179[ptrArg04 + 0x000E:word16]
	word16 si_181 = Mem179[ptrArg04 + 0x000C:word16]
	Mem183[ptrArg04 + 0x000C:word16] = Mem179[ptrArg04 + 0x000C:word16] + 0x0001
	byte dl_185 = Mem183[ds:0x4EE6:byte]
	Mem187[ax_127:si_181:byte] = dl_185
	bx_128 = (word16) ptrArg04 (alias)
	dx = DPB(dx, dl_185, 0) (alias)
	branch (Mem187[ptrArg04 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B3F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3F8:
	branch Mem187[ds:0x4EE6:byte] == 0x0A l0800_B409
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3FF:
	branch Mem187[ds:0x4EE6:byte] == 0x0D l0800_B409
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B409:
	word16 ax_208 = fn0800_A6B7(ds, ptrArg04, out dx, out bx_128)
	cx = wArg06_330
	ax_127 = ax_208
	branch ax_208 != 0x0000 l0800_B41B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B41B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B418:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B406:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3F5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B39C:
	Mem232[ptrArg04 + 0x0002:word16] = Mem227[ptrArg04 + 0x0002:word16] | 0x0010
	bx_128 = (word16) ptrArg04 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B337:
	Mem236[ptrArg04:word16] = Mem14[ptrArg04:word16] + 0x0001
	ax_127 = Mem236[ptrArg04 + 0x000E:word16]
	word16 si_238 = Mem236[ptrArg04 + 0x000C:word16]
	Mem240[ptrArg04 + 0x000C:word16] = Mem236[ptrArg04 + 0x000C:word16] + 0x0001
	byte dl_241 = Mem240[ds:0x4EE6:byte]
	Mem243[ax_127:si_238:byte] = dl_241
	dx = DPB(dx, dl_241, 0) (alias)
	branch (Mem243[ptrArg04 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B35D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B35D:
	branch Mem243[ds:0x4EE6:byte] == 0x0A l0800_B36E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B364:
	branch Mem243[ds:0x4EE6:byte] == 0x0D l0800_B36E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B36E:
	word16 ax_263 = fn0800_A6B7(ds, ptrArg04, out dx, out bx_128)
	cx = wArg06_312
	ax_127 = ax_263
	branch ax_263 != 0x0000 l0800_B380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B380:
	ax_280 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B37D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B36B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B35A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A3:
	ax_280 = DPB(DPB(ax_127, Mem283[ds:0x4EE6:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A8:
	cxOut = cx
	dxOut = dx
	bxOut = bx_128
	return ax_280
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B324_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B4BE(selector ds, segptr32 ptrArg02, word16 wArg06, segptr32 ptrArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp di si sp
fn0800_B4BE_entry:
	word16 wArg02_447 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4BE:
	segptr32 ptrArg08_510
	word16 ax_411
	word16 di_16 = wArg06
	branch (Mem17[ptrArg02 + 0x0002:word16] & 0x0008) == 0x0000 l0800_B504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B504:
	branch (Mem17[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B512:
	branch Mem17[ptrArg02 + 0x0006:word16] != 0x0000 l0800_B51C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B51C:
	word16 wArg02_470
	branch Mem17[ptrArg02 + 0x0006:word16] >=u wArg06 l0800_B583
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B583:
	branch Mem17[ptrArg02:word16] + wArg06 < 0x0000 l0800_B5B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B58D:
	wArg02_470 = SLICE(ptrArg02, word16, 0) (alias)
	branch Mem17[ptrArg02:word16] != 0x0000 l0800_B59F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B59F:
	branch fn0800_A6B7(ds, ptrArg02, out dx_665, out bx_666) == 0x0000 l0800_B5B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5AE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B593:
	Mem70[ptrArg02:word16] = 0xFFFF - Mem17[ptrArg02 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5B1:
	fn0800_B03B(SEQ(Mem82[ptrArg02 + 0x000E:word16], Mem88[ptrArg02 + 0x000C:word16]), ptrArg08, wArg06)
	Mem107[ptrArg02:word16] = Mem91[ptrArg02:word16] + wArg06
	Mem109[ptrArg02 + 0x000C:word16] = Mem107[ptrArg02 + 0x000C:word16] + wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B522:
	branch Mem17[ptrArg02:word16] == 0x0000 l0800_B535
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B528:
	branch fn0800_A6B7(ds, ptrArg02, out dx_657, out bx_658) != 0x0000 l0800_B4F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B535:
	selector es_139 = SLICE(ptrArg02, selector, 16)
	branch (Mem137[ds:((int16) Mem137[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B560
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B549:
	fn0800_8E29(ds, (int16) Mem159[es_139:wArg02_470 + 0x0004:byte], 0x00000000, 0x02, out cx_662, out dx_663, out bx_664)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B560:
	branch fn0800_C779(ds, (int16) Mem187[ptrArg02 + 0x0004:byte], ptrArg08, wArg06, out cx_659, out dx_660, out bx_661) <u wArg06 l0800_B57D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B57D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B57A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B519:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5DB:
	selector es_208 = SLICE(ptrArg02, selector, 16)
	branch (Mem17[ds:((int16) Mem17[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5EF:
	fn0800_8E29(ds, (int16) Mem226[es_208:wArg02_447 + 0x0004:byte], 0x00000000, 0x02, out cx_654, out dx_655, out bx_656)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B606:
	branch fn0800_C779(ds, (int16) Mem253[ptrArg02 + 0x0004:byte], ptrArg08, wArg06, out cx_651, out dx_652, out bx_653) >=u wArg06 l0800_B69D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B620:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B50F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B625:
	ptrArg08_510 = ptrArg08 (alias)
	branch Mem17[ptrArg02 + 0x0006:word16] == 0x0000 l0800_B680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B680:
	branch fn0800_C632(ds, (int16) Mem285[ptrArg02 + 0x0004:byte], ptrArg08, wArg06, out dx_295, out bx_294) >=u wArg06 l0800_B69D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B69A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B62F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B677:
	word16 wArg08_511 = SLICE(ptrArg08_510, word16, 0)
	word16 wArg0A_569 = SLICE(ptrArg08_510, word16, 16)
	di_16 = di_16 - 0x0001
	branch di_16 != 0x0000 l0800_B631
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B631:
	word16 ax_340
	word16 v19_318 = Mem314[ptrArg02:word16] + 0x0001
	Mem319[ptrArg02:word16] = v19_318
	branch v19_318 >= 0x0000 l0800_B659
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B659:
	ax_340 = fn0800_B30A(ds, SLICE(DPB(di_16, Mem331[ptrArg08_510:byte], 0), byte, 0), ptrArg02, out cx_342, out dx_343, out bx_341)
	ptrArg08_510 = SEQ(wArg0A_569, wArg08_511 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B639:
	word16 ax_351 = Mem319[ptrArg02 + 0x000E:word16]
	word16 si_352 = Mem319[ptrArg02 + 0x000C:word16]
	Mem354[ptrArg02 + 0x000C:word16] = Mem319[ptrArg02 + 0x000C:word16] + 0x0001
	byte dl_361 = Mem357[ptrArg08_510:byte]
	Mem363[ax_351:si_352:byte] = dl_361
	ax_340 = DPB(DPB(ax_351, dl_361, 0), 0x00, 8) (alias)
	ptrArg08_510 = SEQ(wArg0A_569, wArg08_511 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B66F:
	branch ax_340 != 0xFFFF l0800_B677
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B674:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B67E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4D7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4FA:
	word16 wArg08_522 = SLICE(ptrArg08_667, word16, 0)
	word16 wArg0A_572 = SLICE(ptrArg08_667, word16, 16)
	di_16 = di_16 - 0x0001
	branch di_16 != 0x0000 l0800_B4D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4D9:
	ptrArg08_510 = SEQ(wArg0A_572, wArg08_522 + 0x0001) (alias)
	ptrArg08_667 = ptrArg08_510
	branch fn0800_B324(ds, SLICE((int16) Mem390[ptrArg08_667:byte], byte, 0), ptrArg02, out cx_402, out dx_403, out bx_400) != 0xFFFF l0800_B4FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4F5:
	ax_411 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B501:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B69D:
	ax_411 = wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6A0:
	return ax_411
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B4BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B6A8(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax cx
// Trashed: SCZDO ax cx es Top
// Preserved: bp di ds si sp
fn0800_B6A8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6A8:
	word16 ax_39
	word16 cx_19 = Mem17[ds:0x4EE8:word16]
	selector es_25 = SLICE(ptrArg02, selector, 16)
	word16 di_26 = (word16) ptrArg02
	selector ds_28 = SLICE(ptrArg06, selector, 16)
	word16 si_29 = (word16) ptrArg06
	word16 cx_22 = cx_19 >>u 0x0001
	branch cx_19 >>u 0x0001 >=u 0x0000 l0800_B6C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6BD:
	byte al_27 = Mem17[ptrArg02:byte]
	Mem31[ptrArg02:byte] = Mem17[ptrArg06:byte]
	Mem34[ptrArg06:byte] = al_27
	ax_39 = DPB(ax, al_27, 0) (alias)
	si_29 = si_29 + 0x0001
	di_26 = di_26 + 0x0001
	branch cx_19 >>u 0x0001 == 0x0000 l0800_B6CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6C6:
	ax_39 = Mem38[es_25:di_26:word16]
	Mem43[es_25:di_26:word16] = Mem38[ds_28:si_29:word16]
	si_29 = si_29 + 0x0002
	Mem46[ds_28:si_29 - 0x0002:word16] = ax_39
	di_26 = di_26 + 0x0002
	cx_22 = cx_22 - 0x0001
	branch cx_22 != 0x0000 l0800_B6C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6CF:
	cxOut = cx_22
	return ax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B6A8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B6D6(word16 cx, word16 bx, word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & bxOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: bx cx Top
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_B6D6_entry:
	int8 Top_116 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6D6:
	word16 sp_14 = fp - 0x001A
	word16 si_17 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6E1:
	word16 sp_598
	branch si_17 >u 0x0002 l0800_B726
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B726:
	word16 bx_31 = wArg04 + (word16) (Mem24[ds:0x4EE8:word16] *s (si_17 - 0x0001))
	word16 ax_39 = (word16) (Mem33[ds:0x4EE8:word16] *s (si_17 >>u 0x0001))
	word16 sp_46 = sp_14 - 2
	Mem47[ss:sp_46:word16] = wArg06
	Mem50[ss:sp_46 - 2:word16] = bx_31
	Mem53[ss:sp_46 - 4:word16] = wArg06
	word16 bx_40 = wArg04 + ax_39
	Mem55[ss:sp_46 - 6:word16] = bx_40
	word16 sp_56
	word16 ax_58
	word16 dx_59
	word16 bx_60
	int8 Top_62
	call SEQ(0x0800, Mem55[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_39,bx:bx_40,cx:cx_118,dx:wArg06,sp:sp_46 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_61
		defs: ax:ax_58,bx:bx_60,dx:dx_59,sp:sp_56,Top:Top_62
	word16 wLoc0A_686 = bx_31
	word16 ax_109 = ax_58
	branch ax_58 <= 0x0000 l0800_B775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B766:
	Mem70[ss:sp_56 + 0x0006:word16] = wArg06
	Mem73[ss:sp_56 + 0x0004:word16] = bx_40
	Mem76[ss:sp_56 + 0x0002:word16] = wArg06
	Mem79[ss:sp_56:word16] = bx_31
	ax_109 = fn0800_B6A8(ds, Mem79[ss:sp_56:segptr32], Mem79[ss:sp_56 + 4:segptr32], out cx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B775:
	word16 cx_144
	word16 sp_146
	word16 sp_160
	Mem95[ss:sp_56 + 0x0006:word16] = wArg06
	Mem98[ss:sp_56 + 0x0004:word16] = wArg04
	Mem101[ss:sp_56 + 0x0002:word16] = wArg06
	Mem104[ss:sp_56:word16] = bx_40
	word16 sp_106
	word16 ax_110
	word16 dx_112
	word16 cx_119
	call SEQ(0x0800, Mem104[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_109,bx:bx_60,cx:cx_117,dx:dx_59,sp:sp_56,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_62
		defs: ax:ax_110,bx:bx_114,cx:cx_119,dx:dx_112,sp:sp_106,Top:Top_116
	branch ax_110 <= 0x0000 l0800_B79A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B79A:
	Mem129[ss:sp_106 + 0x0006:word16] = wArg06
	Mem132[ss:sp_106 + 0x0004:word16] = bx_31
	Mem135[ss:sp_106 + 0x0002:word16] = wArg06
	Mem138[ss:sp_106:word16] = wArg04
	word16 sp_139
	word16 ax_140
	call SEQ(0x0800, Mem138[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_110,bx:bx_114,cx:cx_119,dx:dx_112,sp:sp_106,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_116
		defs: ax:ax_140,bx:bx_142,cx:cx_144,sp:sp_139,Top:Top_143
	sp_146 = sp_139 + 0x0008
	branch ax_140 <= 0x0000 l0800_B7C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7B1:
	Mem152[ss:sp_139 + 0x0006:word16] = wArg06
	Mem155[ss:sp_139 + 0x0004:word16] = wArg04
	Mem158[ss:sp_139 + 0x0002:word16] = wArg06
	Mem161[ss:sp_139:word16] = bx_31
	sp_160 = sp_139
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B78C:
	Mem164[ss:sp_106 + 0x0006:word16] = wArg06
	Mem167[ss:sp_106 + 0x0004:word16] = bx_40
	Mem170[ss:sp_106 + 0x0002:word16] = wArg06
	Mem173[ss:sp_106:word16] = wArg04
	sp_160 = sp_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7BD:
	fn0800_B6A8(ds, Mem177[ss:sp_160:segptr32], Mem177[ss:sp_160 + 4:segptr32], out cx_144)
	sp_146 = sp_160 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7C0:
	branch si_17 != 0x0003 l0800_B7D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7D4:
	word16 dx_198 = wArg04 + Mem194[ds:0x4EE8:word16]
	word16 ax_195 = wArg06
	wLoc0C = wArg06
	wLoc0E = dx_198
	wLoc06 = dx_198
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B813:
	word16 sp_209 = sp_146 - 2
	Mem210[ss:sp_209:word16] = wArg06
	Mem213[ss:sp_209 - 2:word16] = wArg04
	Mem216[ss:sp_209 - 4:word16] = wArg06
	Mem219[ss:sp_209 - 6:word16] = wLoc06
	word16 sp_221
	word16 ax_225
	call SEQ(0x0800, Mem219[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_224,bx:bx_228,cx:cx_232,dx:dx_226,sp:sp_209 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_724,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_722,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_716,Stack +FFFFFFFE:wArg06,Top:Top_230
		defs: ax:ax_225,bx:bx_229,cx:cx_233,dx:dx_227,sp:sp_221,Top:Top_231
	sp_146 = sp_221 + 0x0008
	branch ax_225 <= 0x0000 l0800_B7EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7EC:
	branch ax_225 != 0x0000 l0800_B805
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7F0:
	Mem247[ss:sp_221 + 0x0006:word16] = wArg06
	Mem250[ss:sp_221 + 0x0004:word16] = wLoc06
	Mem253[ss:sp_221 + 0x0002:word16] = wArg06
	Mem256[ss:sp_221:word16] = wLoc0E
	fn0800_B6A8(ds, Mem256[ss:sp_221:segptr32], Mem256[ss:sp_221 + 4:segptr32], out cx_144)
	wLoc0E = wLoc0E + Mem256[ds:0x4EE8:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B805:
	sp_146 = sp_221 + 0x0008
	ax_195 = wLoc06
	branch wLoc06 >=u wLoc0A_686 l0800_B883
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B80D:
	ax_195 = Mem272[ds:0x4EE8:word16]
	wLoc06 = wLoc06 + ax_195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B82C:
	branch wLoc06 >=u wLoc0A_686 l0800_B87B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B834:
	word16 sp_289 = sp_146 - 2
	Mem290[ss:sp_289:word16] = wArg06
	Mem293[ss:sp_289 - 2:word16] = wLoc0A_686
	Mem296[ss:sp_289 - 4:word16] = wArg06
	Mem299[ss:sp_289 - 6:word16] = wArg04
	word16 sp_301
	word16 ax_305
	call SEQ(0x0800, Mem299[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:wLoc06_716,bx:bx_308,cx:cx_312,dx:dx_306,sp:sp_289 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_724,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_730,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_716,Stack +FFFFFFFE:wArg06,Top:Top_310
		defs: ax:ax_305,bx:bx_309,cx:cx_313,dx:dx_307,sp:sp_301,Top:Top_311
	sp_146 = sp_301 + 0x0008
	branch ax_305 >= 0x0000 l0800_B855
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B855:
	Mem324[ss:sp_301 + 0x0006:word16] = wArg06
	Mem327[ss:sp_301 + 0x0004:word16] = wLoc06
	Mem330[ss:sp_301 + 0x0002:word16] = wArg06
	Mem333[ss:sp_301:word16] = wLoc0A_686
	fn0800_B6A8(ds, Mem333[ss:sp_301:segptr32], Mem333[ss:sp_301 + 4:segptr32], out cx_144)
	sp_146 = sp_301 + 0x0008
	branch ax_305 == 0x0000 l0800_B87B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B868:
	word16 ax_347 = Mem333[ds:0x4EE8:word16]
	wLoc06 = wLoc06 + ax_347
	wLoc0A_686 = wLoc0A_686 - ax_347
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B84D:
	word16 v59_354 = wLoc0A_686 - Mem299[ds:0x4EE8:word16]
	wLoc0A_686 = v59_354
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B873:
	branch wLoc06 <u v59_354 l0800_B834
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B87B:
	ax_195 = wLoc06
	branch wLoc06 <u wLoc0A_686 l0800_B813
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B883:
	word16 sp_373 = sp_146 - 2
	Mem374[ss:sp_373:word16] = wArg06
	Mem377[ss:sp_373 - 2:word16] = wArg04
	Mem380[ss:sp_373 - 4:word16] = wArg06
	Mem383[ss:sp_373 - 6:word16] = wLoc06
	word16 sp_386
	word16 ax_394
	call SEQ(0x0800, Mem383[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_393,bx:bx_399,cx:cx_407,dx:dx_395,sp:sp_373 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_775,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_771,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_755,Stack +FFFFFFFE:wArg06,Top:Top_403
		defs: ax:ax_394,sp:sp_386
	branch ax_394 > 0x0000 l0800_B8AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B89A:
	wLoc06 = wLoc06 + Mem383[ds:0x4EE8:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8AA:
	wLoc04 = wArg06
	wLoc14 = wArg06
	wLoc16 = wLoc06 - Mem427[ds:0x4EE8:word16]
	wLoc10 = wArg06
	wLoc12 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8E0:
	branch wLoc12 >=u wLoc0E l0800_B8F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8E8:
	branch wLoc16 >=u wLoc0E l0800_B8C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8C8:
	Mem451[ss:sp_386 + 0x0006:word16] = wArg06
	Mem454[ss:sp_386 + 0x0004:word16] = wLoc12
	Mem457[ss:sp_386 + 0x0002:word16] = wArg06
	Mem460[ss:sp_386:word16] = wLoc16
	fn0800_B6A8(ds, Mem460[ss:sp_386:segptr32], Mem460[ss:sp_386 + 0x0004:segptr32], out cx_943)
	word16 ax_471 = Mem460[ds:0x4EE8:word16]
	wLoc12 = wLoc12 + ax_471
	wLoc16 = wLoc16 - ax_471
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8F0:
	Mem481[ss:sp_386 + 0x0006:word16] = 0x0000
	Mem485[ss:sp_386 + 0x0004:word16] = Mem481[ds:0x4EE8:word16]
	word16 ax_489 = wLoc06 - wLoc0E
	Mem495[ss:sp_386 + 0x0002:word16] = 0x0000 - (ax_489 <u 0x0000)
	Mem497[ss:sp_386:word16] = ax_489
	word16 ax_498 = fn0800_8BBB(Mem497[ss:sp_386:word32], Mem497[ss:sp_386 + 0x0004:word16], Mem497[ss:sp_386 + 0x0006:word16], out cx_939, out dx_940, out bx_941)
	word16 sp_502 = <invalid>
	Mem510[ss:sp_502 - 2:word16] = 0x0000
	Mem513[ss:sp_502 - 4:word16] = Mem510[ds:0x4EE8:word16]
	word16 dx_523 = wArg04 + (word16) (Mem513[ds:0x4EE8:word16] *s si_17) - wLoc06
	Mem529[ss:sp_502 - 6:word16] = 0x0000 - (dx_523 <u 0x0000)
	Mem531[ss:sp_502 - 8:word16] = dx_523
	word16 bx_533
	word16 cx_534
	word16 ax_532 = fn0800_8BBB(Mem531[ss:sp_502 - 8:word32], Mem531[ss:sp_502 - 4:word16], Mem531[ss:sp_502 - 2:word16], out cx_534, out dx_942, out bx_533)
	word16 sp_536 = <invalid>
	si_17 = ax_532
	branch ax_532 >=u ax_498 l0800_B93D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B93D:
	Mem546[ss:sp_536 - 2:word16] = wArg06
	Mem549[ss:sp_536 - 4:word16] = wArg04
	Mem551[ss:sp_536 - 6:word16] = ax_498
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	cx = fn0800_B6D6(cx_534, bx_533, fp - 2, ax_532, ax_498, ds, stackArg2, wArg02, wArg04, out bx, out Top_116)
	sp_14 = sp_536
	wArg04 = wLoc06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B92E:
	Mem572[ss:sp_536 - 2:word16] = wArg06
	Mem575[ss:sp_536 - 4:word16] = wLoc06
	Mem577[ss:sp_536 - 6:word16] = ax_532
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	cx = fn0800_B6D6(cx_534, bx_533, fp - 2, ax_532, ax_498, ds, stackArg2, wArg02, wArg04, out bx, out Top_116)
	sp_14 = sp_536
	si_17 = ax_498
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7C5:
	word16 sp_589 = sp_146 - 2
	Mem590[ss:sp_589:word16] = wArg06
	Mem593[ss:sp_589 - 2:word16] = wArg04
	Mem596[ss:sp_589 - 4:word16] = wArg06
	Mem599[ss:sp_589 - 6:word16] = bx_40
	sp_598 = sp_589 - 6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6E6:
	branch si_17 == 0x0002 l0800_B6EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6EE:
	word16 dx_604 = wArg04 + Mem24[ds:0x4EE8:word16]
	word16 sp_608 = sp_14 - 2
	Mem609[ss:sp_608:word16] = wArg06
	Mem611[ss:sp_608 - 2:word16] = dx_604
	Mem614[ss:sp_608 - 4:word16] = wArg06
	Mem617[ss:sp_608 - 6:word16] = wArg04
	word16 sp_618
	word16 ax_619
	call SEQ(0x0800, Mem617[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:wArg06,bx:bx_621,cx:cx_118,dx:dx_604,sp:sp_608 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:dx_604,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_839,Stack +FFFFFFFE:wLoc04_837,Top:Top_61
		defs: ax:ax_619,bx:bx_623,cx:cx_625,sp:sp_618,Top:Top_624
	branch ax_619 > 0x0000 l0800_B714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B714:
	Mem633[ss:sp_618 + 0x0006:word16] = wArg06
	Mem636[ss:sp_618 + 0x0004:word16] = wArg04
	Mem639[ss:sp_618 + 0x0002:word16] = wArg06
	Mem642[ss:sp_618:word16] = dx_604
	sp_598 = sp_618
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B720:
	fn0800_B6A8(ds, Mem646[ss:sp_598:segptr32], Mem646[ss:sp_598 + 4:segptr32], out cx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B711:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6EB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B956:
	bxOut = bx
	TopOut = Top_116
	return cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B6D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B95E(word16 cx, word16 bx, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: D bp sp
fn0800_B95E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B95E:
	Mem11[ds:0x4EE8:word16] = wArg08
	branch wArg08 == 0x0000 l0800_B97D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B96B:
	Mem17[ds:0x4EEA:word16] = wArg0A
	fn0800_B6D6(cx, bx, fp - 2, si, di, ds, wArg06, wArg02, wArg04, out bx_78, out Top_79)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B97D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B95E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B97F(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_B97F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B97F:
	word16 ax_174
	branch wArg02 <u Mem15[ds:0x24E8:word16] l0800_B99A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B99A:
	branch wArg08 <u 0x0001 l0800_B9B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9A3:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_B9B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9B5:
	word16 ax_46 = fn0800_8F50(ds, wArg02, ptrArg04, wArg08, out ch_350, out dx)
	branch ax_46 <u 0x0001 l0800_B9DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9D0:
	branch (Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_B9E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9E2:
	word16 si_66 = (word16) ptrArg04
	word16 cx_117 = ax_46
	selector es_216 = SLICE(ptrArg04, selector, 16)
	word16 di_150 = si_66
	si_71 = si_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9ED:
	word16 si_71
	byte al_73 = Mem72[ds:si_71:byte]
	si_71 = si_71 + 0x0001
	branch al_73 == 0x1A l0800_BA21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA21:
	word16 cx_86 = -cx_117
	fn0800_8E29(ds, wArg02, SEQ(0x0000 - (cx_86 == 0x0000), cx_86), 0x01, out cx_100, out dx, out bx_351)
	Mem110[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem97[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9F3:
	branch al_73 == 0x0D l0800_B9FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FC:
	cx_117 = cx_117 - 0x0001
	branch cx_117 != 0x0000 l0800_B9ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FE:
	fn0800_8F50(ds, wArg02, SEQ(ss, fp - 0x0005), 0x0001, out ch_352, out dx)
	Mem151[es_216:di_150:byte] = bLoc05
	di_150 = di_150 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9F7:
	Mem153[es_216:di_150:byte] = al_73
	di_150 = di_150 + 0x0001
	cx_117 = cx_117 - 0x0001
	branch cx_117 != 0x0000 l0800_B9ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA19:
	branch di_150 != si_66 l0800_BA1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA1F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA41:
	ax_174 = di_150 - si_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA1D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9DD:
	ax_174 = ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9B0:
	ax_174 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B990:
	ax_174 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA44:
	dxOut = dx
	return ax_174
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B97F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BA4A(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax dx es Top
// Preserved: bp di ds sp
fn0800_BA4A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA4A:
	word16 ax_28
	word16 dx_19 = (word16) ptrArg02
	word16 ax_22
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_22) l0800_BA60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA60:
	ax_28 = fn0800_8D2B(ds, ax_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA5C:
	ax_28 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA64:
	dxOut = dx_19
	return ax_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA4A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BA67(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO bx cx dx es Top
// Preserved: bp sp
fn0800_BA67_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA67:
	branch fn0800_ACB3(ds, ptrArg02, 0x00000000, 0x0000, out cx_79, out dx_80, out bx_26) != 0x0000 l0800_BA87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA7F:
	Mem43[ptrArg02 + 0x0002:word16] = Mem23[ptrArg02 + 0x0002:word16] & 0xFFEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA87:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA67_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BA89(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & cxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax cx ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_BA89_entry:
	word16 wArg02_227 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA89:
	word16 ax_201
	word16 bp_153 = fp - 2
	word16 di_15 = wArg0A
	branch Mem14[ptrArg02 + 0x0012:word16] != wArg02_227 l0800_BAAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAA0:
	branch wArg0A > 0x0002 l0800_BAAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAA5:
	branch wArg0C <=u 0x7FFF l0800_BAB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAB1:
	branch Mem14[ds:0x26B2:word16] != 0x0000 l0800_BAC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAB8:
	branch wArg02_227 != 0x236C l0800_BAC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAC7:
	branch Mem14[ds:0x26B0:word16] != 0x0000 l0800_BADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BACE:
	branch wArg02_227 != 0x2358 l0800_BADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAD5:
	Mem40[ds:0x26B0:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BABF:
	Mem41[ds:0x26B2:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BADB:
	branch Mem44[ptrArg02:word16] == 0x0000 l0800_BAF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAE4:
	fn0800_ACB3(ds, ptrArg02, 0x00000000, 0x0001, out cx, out dx_341, out bx_342)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAF6:
	word16 wArg04_246 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_247 = SLICE(ptrArg02, word16, 0)
	branch (Mem81[ptrArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_BB0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB01:
	word16 v18_88 = Mem81[ptrArg02 + 0x000A:word16]
	fn0800_9E75(ds, v18_88, out cx_343, out dx_344, out bx_345, out ds)
	cx = v18_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB0E:
	Mem117[ptrArg02 + 0x0002:word16] = Mem112[ptrArg02 + 0x0002:word16] & 0xFFF3
	Mem119[ptrArg02 + 0x0006:word16] = 0x0000
	Mem123[ptrArg02 + 0x000A:word16] = wArg04_246
	Mem124[ptrArg02 + 0x0008:word16] = wArg02_247 + 0x0005
	Mem125[ptrArg02 + 0x000E:word16] = wArg04_246
	Mem126[ptrArg02 + 0x000C:word16] = wArg02_247 + 0x0005
	branch wArg0A == 0x0002 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB3A:
	word16 si_137 = wArg0C
	branch wArg0C <=u 0x0000 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB3E:
	Mem143[ds:0x2352:word16] = 0xC7F0
	branch (wArg06 | wArg08) != 0x0000 l0800_BB6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB4C:
	word16 dx_158
	word16 ax_152 = fn0800_9F7F(out dx_158, out bp_153, out si_137, out di_15, out ds)
	Mem167[ss:bp_153 + 0x000A:word16] = dx_158
	Mem168[ss:bp_153 + 0x0008:word16] = ax_152
	cx = wArg0C
	branch (ax_152 | dx_158) != 0x0000 l0800_BB5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB5E:
	ptr32 es_bx_173 = Mem168[ss:bp_153 + 0x0004:segptr32]
	Mem177[es_bx_173 + 0x0002:word16] = Mem168[es_bx_173 + 0x0002:word16] | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB6B:
	ptr32 es_bx_183 = Mem182[ss:bp_153 + 0x0004:segptr32]
	word16 ax_184 = Mem182[ss:bp_153 + 0x000A:word16]
	word16 dx_185 = Mem182[ss:bp_153 + 0x0008:word16]
	Mem188[es_bx_183 + 0x000E:word16] = ax_184
	Mem189[es_bx_183 + 0x000C:word16] = dx_185
	Mem190[es_bx_183 + 0x000A:word16] = ax_184
	Mem191[es_bx_183 + 0x0008:word16] = dx_185
	Mem193[es_bx_183 + 0x0006:word16] = si_137
	branch di_15 != 0x0001 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB8D:
	Mem198[es_bx_183 + 0x0002:word16] = Mem193[es_bx_183 + 0x0002:word16] | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB92:
	ax_201 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB5B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAAB:
	ax_201 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB94:
	cxOut = cx
	dsOut = ds
	return ax_201
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA89_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BB98(word16 wArg02, word32 dwArg04, segptr32 ptrArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_BB98_entry:
	word16 wArg08 = SLICE(ptrArg08, word16, 0)
	word16 wArg0A = SLICE(ptrArg08, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB98:
	branch (wArg08 | wArg0A) == 0x0000 l0800_BBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBA7:
	branch fn0800_BFC7(dwArg04, out cx_152) <u wArg02 l0800_BBD2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBD2:
	fn0800_BF9E(ptrArg08, dwArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBB6:
	fn0800_C01E(ptrArg08, dwArg04, wArg02)
	Mem90[ptrArg08 + wArg02:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBE4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BB98_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BBE9(word16 bp, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO ax bp bx cx es Top
// Preserved: sp
fn0800_BBE9_entry:
	word16 wArg02_62 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_67 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBE9:
	branch Mem7[ptrArg02 - 0x0001:byte] != 0x2E l0800_BBFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBF9:
	wArg02_62 = wArg02_62 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBFC:
	segptr32 ptrArg02_68 = SEQ(wArg04_67, wArg02_62 - 0x0001)
	word16 ax_28 = (int16) Mem22[ptrArg02_68:byte]
	word16 cx_30 = 0x0004
	word16 bx_31 = 0xBC39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC0F:
	word16 wArg04_73 = SLICE(ptrArg02_68, word16, 16)
	word16 ax_34 = Mem29[0x0800:bx_31:word16]
	branch ax_34 == ax_28 l0800_BC1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC1E:
	call Mem29[0x0800:bx_31 + 0x0008:word16] (retsize: 2;)
		uses: ax:ax_34,bx:bx_32,cx:cx_44,sp:fp - 0x0004,Stack +0002:ax_28,Stack +0004:bp,Stack +0008:ptrArg02_68,Stack +000A:wArg04_73,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC17:
	bx_31 = bx_31 + 0x0002
	cx_30 = cx_30 - 0x0001
	branch cx_30 != 0x0000 l0800_BC0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC1C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC31:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BBE9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BC49(word16 bp, word16 si, word16 di, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, segptr32 ptrArg0E, segptr32 ptrArg12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: bx
// Trashed: SCZDO ax bp bx cx di dx es si Top
// Preserved: sp
fn0800_BC49_entry:
	word16 wArg06 = SLICE(ptrArg06, word16, 0)
	word16 wArg08 = SLICE(ptrArg06, word16, 16)
	word16 wArg0A = SLICE(ptrArg0A, word16, 0)
	word16 wArg0C = SLICE(ptrArg0A, word16, 16)
	word16 wArg0E = SLICE(ptrArg0E, word16, 0)
	word16 wArg10 = SLICE(ptrArg0E, word16, 16)
	word16 wArg12 = SLICE(ptrArg12, word16, 0)
	word16 wArg14 = SLICE(ptrArg12, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC49:
	wArg06 = SLICE(ptrArg06, word16, 0) (alias)
	wArg08 = SLICE(ptrArg06, word16, 16) (alias)
	branch (wArg06 | wArg08) == 0x0000 l0800_BC62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC5B:
	Mem25[ptrArg06:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC62:
	wArg0A = SLICE(ptrArg0A, word16, 0) (alias)
	wArg0C = SLICE(ptrArg0A, word16, 16) (alias)
	branch (wArg0A | wArg0C) == 0x0000 l0800_BC71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC6A:
	Mem37[ptrArg0A:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC71:
	wArg0E = SLICE(ptrArg0E, word16, 0) (alias)
	wArg10 = SLICE(ptrArg0E, word16, 16) (alias)
	branch (wArg0E | wArg10) == 0x0000 l0800_BC80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC79:
	Mem49[ptrArg0E:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC80:
	wArg12 = SLICE(ptrArg12, word16, 0) (alias)
	wArg14 = SLICE(ptrArg12, word16, 16) (alias)
	branch (wArg12 | wArg14) == 0x0000 l0800_BC8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC88:
	Mem61[ptrArg12:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC8F:
	segptr32 ptrLoc06_243 = SEQ(ss, fp - 0x005A)
	word16 wLoc06_244 = SLICE(ptrLoc06_243, word16, 0)
	word16 wLoc04_251 = SLICE(ptrLoc06_243, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC9D:
	segptr32 ptrArg02_289
	word16 wArg02_235 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_237 = SLICE(ptrArg02, word16, 16)
	branch Mem69[ptrArg02:byte] == 0x20 l0800_BC9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC9A:
	ptrArg02_289 = SEQ(wArg04_237, wArg02_235 + 0x0001) (alias)
	ptrArg02 = ptrArg02_289
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCA6:
	word16 ax_88 = fn0800_BFC7(ptrArg02, out cx_379)
	word16 si_100 = ax_88
	branch ax_88 <= 0x0050 l0800_BCB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCB6:
	si_100 = 0x0050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCB9:
	Mem110[ptrLoc06_243:byte] = 0x00
	word16 v23_141 = wLoc06_244 + 0x0001 + si_100
	word16 dx_133 = fn0800_C01E(SEQ(wLoc04_251, wLoc06_244 + 0x0001), ptrArg02, si_100)
	Mem146[SEQ(wLoc04_251, v23_141):byte] = 0x00
	word16 wLoc06_256 = v23_141
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCE2:
	word16 v24_153 = wLoc06_256 - 0x0001
	wLoc06_256 = v24_153
	word16 ax_160 = (int16) Mem154[SEQ(wLoc04_251, v24_153):byte]
	word16 cx_162 = 0x0007
	word16 bx_163 = 0xBE1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCF5:
	word16 wArg04_278 = SLICE(ptrArg02_289, word16, 16)
	word16 ax_166 = Mem161[0x0800:bx_163:word16]
	branch ax_166 == ax_160 l0800_BD04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BD04:
	word16 bx_176
	call Mem161[0x0800:bx_163 + 0x000E:word16] (retsize: 2;)
		uses: ax:ax_166,bx:bx_164,cx:cx_178,dx:dx_133,sp:fp - 0x005E,Stack +0000:si_116,Stack +0002:di,Stack +0004:si,Stack +0058:ax_160,Stack +005A:v24_153,Stack +005C:wLoc04_251,Stack +005E:bp,Stack +0062:ptrArg02_289,Stack +0064:wArg04_278,Stack +0066:wArg06_317,Stack +0068:wArg08_325,Stack +006A:wArg0A_332,Stack +006C:wArg0C_339,Stack +006E:wArg0E_345,Stack +0070:wArg10_351,Stack +0072:wArg12_356,Stack +0074:wArg14_361,Stack +FFFFFFF8:wLoc06_244 + 0x0001,Stack +FFFFFFFA:wLoc04_251,Stack +FFFFFFFC:wArg02_235,Stack +FFFFFFFE:wArg04_237,Top:0
		defs: bx:bx_176
	return bx_176
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BC49_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCFD:
	bx_163 = bx_163 + 0x0002
	cx_162 = cx_162 - 0x0001
	branch cx_162 != 0x0000 l0800_BCF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BD02:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BE3B(word16 si, word16 di, word32 dwArg02, word32 dwArg06, word32 dwArg0A, word32 dwArg0E, word32 dwArg12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31] Stack +000E:[0..31] Stack +0012:[0..31]
// LiveOut: bx
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_BE3B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BE3B:
	return fn0800_BC49(fp - 2, si, di, dwArg02, dwArg06, dwArg0A, dwArg0E, dwArg12)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BE3B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BEA2(word16 cx, word16 dx, selector ds, segptr32 ptrArg02, word32 dwArg06, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: di si
// Trashed: SCZDO ax bx di es si Top
// Preserved: bp sp
fn0800_BEA2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BEA2:
	Mem12[ptrArg02:byte] = 0x00
	word16 di_34
	word16 si_35
	fn0800_9828(cx, dx, (word16) ptrArg02, ds, fp + 0x000A, dwArg06, out si_35, out di_34)
	diOut = di_34
	return si_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BEA2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_BF18(word16 cx, word16 dx, word16 bx, word16 si, word16 di, selector es, selector ds, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: cx di dx
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_BF18_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF18:
	word16 di_40
	word16 dx_46
	word16 cx_45 = (word16) fn0800_8F97(cx, dx, bx, fp - 2, si, di, es, ds, 0xBEE5, 0xBF0D, fp + 0x0002, ss, wArg06, wArg08, out dx_46, out di_40)
	dxOut = dx_46
	diOut = di_40
	return (byte) cx_45
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF18_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BF5F(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDO ax cx dx Top
// Preserved: bp di ds si sp
fn0800_BF5F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF5F:
	word16 di_20 = (word16) ptrArg02
	selector es_126 = SLICE(ptrArg02, selector, 16)
	word16 cx_25 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF70:
	branch cx_25 == 0x0000 l0800_BF72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF70_1:
	di_20 = di_20 + 0x0001
	cx_25 = cx_25 - 0x0001
	branch Mem18[es_126:di_20:byte] == 0x00 l0800_BF70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF72:
	word16 si_43 = di_20 - 0x0001
	selector es_128 = SLICE(ptrArg06, selector, 16)
	word16 di_129 = (word16) ptrArg06
	word16 cx_47 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7C:
	branch cx_47 == 0x0000 l0800_BF7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7C_2:
	di_129 = di_129 + 0x0001
	cx_47 = cx_47 - 0x0001
	branch Mem41[es_128:di_129:byte] == 0x00 l0800_BF7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7E:
	word16 cx_58 = ~cx_47
	word16 di_60 = di_129 - cx_58
	word16 di_124 = si_43
	word16 si_123 = di_60
	branch (di_60 & 0x0001) == 0x0000 l0800_BF8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF8D:
	Mem81[es_126:si_43:byte] = Mem67[es_128:di_60:byte]
	si_123 = di_60 + 0x0001
	di_124 = si_43 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF8F:
	word16 cx_87 = cx_58 >>u 0x0001
	cx_125 = cx_87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF91:
	word16 cx_125
	branch cx_125 == 0x0000 l0800_BF93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF93:
	branch cx_87 >=u 0x0000 l0800_BF96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF95:
	Mem97[es_126:di_124:byte] = Mem93[es_128:si_123:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF96:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF5F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF91_1:
	Mem122[es_126:di_124:word16] = Mem93[es_128:si_123:word16]
	si_123 = si_123 + 0x0002
	di_124 = di_124 + 0x0002
	cx_125 = cx_125 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BF9E(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_BF9E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF9E:
	word16 di_17 = (word16) ptrArg06
	selector es_73 = SLICE(ptrArg06, selector, 16)
	word16 si_18 = di_17
	word16 cx_22 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFAE:
	branch cx_22 == 0x0000 l0800_BFB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFAE_1:
	di_17 = di_124 + 0x0001
	cx_22 = cx_22 - 0x0001
	di_124 = di_17
	branch Mem14[es_73:di_124:byte] == 0x00 l0800_BFAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFB0:
	word16 cx_33 = ~cx_22
	selector es_76 = SLICE(ptrArg02, selector, 16)
	word16 di_68 = (word16) ptrArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBA:
	branch cx_33 == 0x0000 l0800_BFBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF9E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBA_2:
	Mem69[es_76:di_68:byte] = Mem52[es_73:si_18:byte]
	si_18 = si_18 + 0x0001
	di_68 = di_68 + 0x0001
	cx_33 = cx_33 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BFC7(segptr32 ptrArg02, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut: ax cx
// Trashed: SCZDO ax cx es Top
// Preserved: bp di sp
fn0800_BFC7_entry:
	word16 wArg04_64 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFC7:
	word16 di_16 = (word16) ptrArg02
	selector es_58 = SLICE(ptrArg02, selector, 16)
	word16 ax_13 = 0x0000
	branch wArg04_64 != 0x0000 l0800_BFD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFD5:
	branch di_16 == 0x0000 l0800_BFE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFD9:
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDD:
	ax_13 = DPB(ax_13, 0x00, 0) (alias)
	ax_13 = DPB(ax_13, 0x00, 0) (alias)
	branch cx_20 == 0x0000 l0800_BFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDD_1:
	di_16 = di_102 + 0x0001
	cx_20 = cx_20 - 0x0001
	di_102 = di_16
	branch Mem11[es_58:di_102:byte] == 0x00 l0800_BFDD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDF:
	cx = ax_13
	ax_13 = ~cx_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFE3:
	cxOut = cx
	return ax_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BFC7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BFE6(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_BFE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFE6:
	word16 di_19 = (word16) ptrArg06
	selector es_107 = SLICE(ptrArg06, selector, 16)
	word16 ax_134 = wArg0A
	word16 cx_22 = wArg0A
	branch wArg0A == 0x0000 l0800_C018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFA:
	word16 ax_74 = DPB(wArg0A, 0x00, 0)
	di_30 = di_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFE:
	word16 di_30
	ax_74 = DPB(ax_165, 0x00, 0) (alias)
	branch cx_22 == 0x0000 l0800_C000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFE_1:
	di_30 = di_162 + 0x0001
	cx_22 = cx_22 - 0x0001
	di_162 = di_30
	ax_165 = ax_74
	branch Mem14[es_107:di_162:byte] == 0x00 l0800_BFFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C000:
	word16 bx_39 = wArg0A - cx_22
	word16 cx_41 = bx_39
	word16 di_164 = di_19
	selector ds_108 = SLICE(ptrArg02, selector, 16)
	word16 si_109 = (word16) ptrArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C009:
	branch cx_41 == 0x0000 l0800_C00B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C009_2:
	si_109 = si_109 + 0x0001
	di_164 = di_164 + 0x0001
	cx_41 = cx_41 - 0x0001
	branch Mem14[ds_108:si_109:byte] != Mem14[es_107:di_164:byte] l0800_C009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C00B:
	ax_134 = DPB(DPB(ax_165, Mem14[ds_108:si_109 - 0x0001:byte], 0), 0x00, 8) - DPB(DPB(bx_39, Mem14[es_107:di_164 - 0x0001:byte], 0), 0x00, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C018:
	return ax_134
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BFE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C01E(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..15]
// LiveOut: dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_C01E_entry:
	word16 wArg04_117 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C01E:
	word16 di_17 = (word16) ptrArg06
	selector es_90 = SLICE(ptrArg06, selector, 16)
	word16 si_18 = di_17
	word16 cx_23 = wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C030:
	branch cx_23 == 0x0000 l0800_C032
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C030_1:
	di_17 = di_150 + 0x0001
	cx_23 = cx_23 - 0x0001
	di_150 = di_17
	branch Mem14[es_90:di_150:byte] == 0x00 l0800_C030
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C032:
	selector es_98 = SLICE(ptrArg02, selector, 16)
	word16 di_76 = (word16) ptrArg02
	word16 cx_55 = wArg0A - cx_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C03E:
	branch cx_55 == 0x0000 l0800_C040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C040:
	word16 cx_58 = cx_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C042:
	branch cx_58 == 0x0000 l0800_C044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C044:
	return wArg04_117
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C01E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C042_1:
	Mem77[es_98:di_76:byte] = 0x00
	di_76 = di_76 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C03E_2:
	Mem86[es_98:di_76:byte] = Mem82[es_90:si_18:byte]
	si_18 = si_18 + 0x0001
	di_76 = di_76 + 0x0001
	cx_55 = cx_55 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C04F(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_C04F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C04F:
	fn0800_C379(ds)
	word16 si_36 = Mem32[ptrArg02:word16]
	int32 dx_ax_42 = (int32) (si_36 + 0xF844 >> 0x0002)
	word16 ax_30 = Mem13[ds:0x26E4:word16] + 0x12CE + (Mem13[ds:0x26E2:word16] <u 0xA600)
	fn0800_8F18(0x1F80, SLICE(dx_ax_42, word16, 16), 0x0786, (word16) dx_ax_42, out ch_442, out dx_443)
	int32 dx_ax_436 = <invalid>
	int32 dx_ax_72 = (int32) (si_36 + 0xF844 & 0x0003)
	fn0800_8F18(0x3380, SLICE(dx_ax_72, word16, 16), 0x01E1, (word16) dx_ax_72, out ch_444, out dx_445)
	ui32 v17_v16_312 = SEQ(ax_30, v16_62) + dx_ax_436
	int32 dx_ax_437 = <invalid>
	ui32 v20_v19_314 = SEQ(SLICE(v17_v16_312, word16, 16), v19_92) + dx_ax_437
	word16 v20_96 = SLICE(v20_v19_314, word16, 16)
	word16 v16_62 = (word16) v17_v16_312
	word16 v19_92 = (word16) v20_v19_314
	word16 wLoc04_335 = v20_96
	branch (si_36 + 0xF844 & 0x0003) == 0x0000 l0800_C0B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0B0:
	0x00015180 = 0x005180
	ui32 v23_v22_315 = SEQ(v20_96, v22_101) + 0x00015180
	word16 v22_101 = (word16) v23_v22_315
	wLoc04_335 = SLICE(v23_v22_315, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0B9:
	word16 cx_108 = 0x0000
	word16 si_120 = (int16) Mem112[ptrArg02 + 0x0003:byte] - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0D0:
	branch si_120 > 0x0000 l0800_C0C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0C8:
	si_120 = si_120 - 0x0001
	cx_108 = cx_108 + (int16) Mem112[ds:si_120 + 0x26B4:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0D4:
	word16 ax_139 = (int16) Mem112[ptrArg02 + 0x0002:byte]
	word16 cx_141 = cx_108 + (ax_139 - 0x0001)
	branch Mem112[ptrArg02 + 0x0003:byte] <= 0x02 l0800_C0EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0E6:
	branch (Mem112[ptrArg02:word16] & 0x0003) != 0x0000 l0800_C0EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0ED:
	cx_141 = cx_141 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0EE:
	word16 ax_172 = (word16) (cx_141 *s 0x0018) + DPB(DPB(ax_139 - 0x0001, Mem112[ptrArg06 + 0x0001:byte], 0), 0x00, 8)
	word16 si_173 = ax_172
	branch Mem164[ds:0x26E6:word16] == 0x0000 l0800_C128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C10B:
	branch fn0800_C553(ds, Mem187[ptrArg02:word16] + 0xF84E, 0x0000, cx_141, SLICE(DPB(DPB(ax_172, Mem164[ptrArg06 + 0x0001:byte], 0), 0x00, 8), byte, 0)) == 0x0000 l0800_C128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C127:
	si_173 = ax_172 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C128:
	int32 dx_ax_213 = (int32) si_173
	fn0800_8F18(0x0E10, SLICE(dx_ax_213, word16, 16), 0x0000, (word16) dx_ax_213, out ch_446, out dx_447)
	int32 dx_ax_438 = <invalid>
	int32 dx_ax_251 = (int32) DPB(DPB(SLICE(dx_ax_438, word16, 0), Mem243[ptrArg06:byte], 0), 0x00, 8)
	fn0800_8F18(0x003C, SLICE(dx_ax_251, word16, 16), 0x0000, (word16) dx_ax_251, out ch_448, out dx_449)
	int32 dx_ax_439 = <invalid>
	ui32 v27_v26_317 = SEQ(wLoc04_335, v26_238) + dx_ax_438
	ui32 bx_cx_320 = dx_ax_439 + (int32) DPB(DPB((word16) ptrArg06, Mem257[ptrArg06 + 0x0003:byte], 0), 0x00, 8)
	ui32 v31_v30_322 = SEQ(SLICE(v27_v26_317, word16, 16), v30_297) + bx_cx_320
	cxOut = (word16) bx_cx_320
	dxOut = SLICE(v31_v30_322, word16, 16)
	word16 v30_297 = (word16) v31_v30_322
	word16 v26_238 = (word16) v27_v26_317
	return v30_297
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C04F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_C177(selector ds, word16 wArg04, segptr32 ptrArg06, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0004:[0..15] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp sp
fn0800_C177_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C177:
	fn0800_C379(ds)
	ui32 dwArg02_539 = SEQ(wArg04, v10_26)
	ax_25 = Mem7[ds:0x26E4:word16] + 0x12CE + (Mem7[ds:0x26E2:word16] <u 0xA600)
	Mem35[ptrArg0A + 0x0002:byte] = 0x00
	ui32 v11_v10_533 = dwArg02_539 - SEQ(ax_25, dx_21 + 0xA600)
	word16 wArg02_545 = SLICE(dwArg02_539, word16, 0)
	word16 v11_30 = SLICE(v11_v10_533, word16, 16)
	Mem63[ptrArg0A + 0x0003:byte] = (byte) fn0800_8BCA(SEQ(v11_30, wArg02_545), 0x003C, 0x0000, out dx_703)
	word16 sp_54 = <invalid>
	Mem69[ss:sp_54 - 2:word16] = 0x0000
	Mem71[ss:sp_54 - 4:word16] = 0x003C
	Mem74[ss:sp_54 - 6:word16] = v11_30
	Mem77[ss:sp_54 - 8:word16] = wArg02_545
	word16 dx_81
	word16 ax_78 = fn0800_8BBB(Mem77[ss:sp_54 - 8:word32], Mem77[ss:sp_54 - 4:word16], Mem77[ss:sp_54 - 2:word16], out cx_704, out dx_81, out bx_705)
	word16 sp_82 = <invalid>
	Mem94[ss:sp_82 - 2:word16] = 0x0000
	Mem96[ss:sp_82 - 4:word16] = 0x003C
	Mem99[ss:sp_82 - 6:word16] = dx_81
	Mem102[ss:sp_82 - 8:word16] = ax_78
	Mem116[ptrArg0A:byte] = (byte) fn0800_8BCA(Mem102[ss:sp_82 - 8:word32], Mem102[ss:sp_82 - 4:word16], Mem102[ss:sp_82 - 2:word16], out dx_706)
	word16 sp_107 = <invalid>
	Mem122[ss:sp_107 - 2:word16] = 0x0000
	Mem124[ss:sp_107 - 4:word16] = 0x003C
	Mem127[ss:sp_107 - 6:word16] = dx_81
	Mem130[ss:sp_107 - 8:word16] = ax_78
	word16 dx_134
	word16 ax_131 = fn0800_8BBB(Mem130[ss:sp_107 - 8:word32], Mem130[ss:sp_107 - 4:word16], Mem130[ss:sp_107 - 2:word16], out cx_707, out dx_134, out bx_708)
	word16 sp_135 = <invalid>
	Mem147[ss:sp_135 - 2:word16] = 0x0000
	Mem149[ss:sp_135 - 4:word16] = 0x88F8
	Mem152[ss:sp_135 - 6:word16] = dx_134
	Mem155[ss:sp_135 - 8:word16] = ax_131
	Mem171[ptrArg06:word16] = (fn0800_8BBB(Mem155[ss:sp_135 - 8:word32], Mem155[ss:sp_135 - 4:word16], Mem155[ss:sp_135 - 2:word16], out cx_709, out dx_710, out bx_711) << 0x0002) + 0x07BC
	word16 sp_160 = <invalid>
	Mem177[ss:sp_160 - 2:word16] = 0x0000
	Mem179[ss:sp_160 - 4:word16] = 0x88F8
	Mem182[ss:sp_160 - 6:word16] = dx_134
	Mem185[ss:sp_160 - 8:word16] = ax_131
	word16 dx_189
	word16 ax_186 = fn0800_8BCA(Mem185[ss:sp_160 - 8:word32], Mem185[ss:sp_160 - 4:word16], Mem185[ss:sp_160 - 2:word16], out dx_189)
	word16 v10_26 = (word16) v11_v10_533
	word16 sp_190 = <invalid>
	word16 wArg04_553 = dx_189
	word16 wArg02_554 = ax_186
	branch dx_189 < 0x0000 l0800_C26F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C22B:
	branch dx_189 != 0x0000 l0800_C234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C22D:
	branch ax_186 <u 0x2250 l0800_C26F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C234:
	Mem215[ptrArg06:word16] = Mem210[ptrArg06:word16] + 0x0001
	Mem222[ss:sp_190 - 2:word16] = 0x0000
	Mem224[ss:sp_190 - 4:word16] = 0x2238
	word16 v32_209 = dx_189 - (ax_186 <u 0x2250)
	Mem227[ss:sp_190 - 6:word16] = v32_209
	Mem230[ss:sp_190 - 8:word16] = ax_186 - 0x2250
	Mem244[ptrArg06:word16] = Mem230[ptrArg06:word16] + fn0800_8BBB(Mem230[ss:sp_190 - 8:word32], Mem230[ss:sp_190 - 4:word16], Mem230[ss:sp_190 - 2:word16], out cx_712, out dx_713, out bx_714)
	word16 sp_235 = <invalid>
	Mem250[ss:sp_235 - 2:word16] = 0x0000
	Mem252[ss:sp_235 - 4:word16] = 0x2238
	Mem255[ss:sp_235 - 6:word16] = v32_209
	Mem258[ss:sp_235 - 8:word16] = ax_186 - 0x2250
	sp_190 = <invalid>
	wArg04_553 = dx_262
	word16 dx_262
	wArg02_554 = fn0800_8BCA(Mem258[ss:sp_235 - 8:word32], Mem258[ss:sp_235 - 4:word16], Mem258[ss:sp_235 - 2:word16], out dx_262)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C26F:
	branch Mem272[ds:0x26E6:word16] == 0x0000 l0800_C2B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C276:
	word16 sp_280 = sp_190 - 2
	Mem282[ss:sp_280:word16] = 0x0000
	Mem284[ss:sp_280 - 2:word16] = 0x0018
	Mem288[ss:sp_280 - 4:word16] = wArg04_553
	Mem291[ss:sp_280 - 6:word16] = wArg02_554
	word16 sp_296 = <invalid>
	Mem302[ss:sp_296 - 2:word16] = fn0800_8BCA(Mem291[ss:sp_280 - 6:word32], Mem291[ss:sp_280 - 2:word16], Mem291[ss:sp_280:word16], out dx_718)
	Mem308[ss:sp_296 - 4:word16] = 0x0000
	Mem310[ss:sp_296 - 6:word16] = 0x0018
	Mem313[ss:sp_296 - 8:word16] = wArg04_553
	Mem316[ss:sp_296 - 10:word16] = wArg02_554
	word16 sp_321 = <invalid>
	Mem327[ss:sp_321 - 2:word16] = fn0800_8BBB(Mem316[ss:sp_296 - 10:word32], Mem316[ss:sp_296 - 6:word16], Mem316[ss:sp_296 - 4:word16], out cx_719, out dx_720, out bx_721)
	Mem330[ss:sp_321 - 4:word16] = 0x0000
	Mem338[ss:sp_321 - 6:word16] = Mem330[ptrArg06:word16] + 0xF84E
	sp_190 = sp_321 + 0x0002
	branch fn0800_C553(ds, Mem338[ss:sp_321 - 6:word16], Mem338[ss:sp_321 - 4:word16], Mem338[ss:sp_321 - 2:word16], Mem338[ss:sp_321:byte]) == 0x0000 l0800_C2B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2AC:
	word16 v43_352 = wArg02_554 + 0x0001
	wArg02_554 = v43_352
	wArg04_553 = wArg04_553 + (v43_352 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2B4:
	word16 sp_364 = sp_190 - 2
	Mem366[ss:sp_364:word16] = 0x0000
	Mem368[ss:sp_364 - 2:word16] = 0x0018
	Mem372[ss:sp_364 - 4:word16] = wArg04_553
	Mem375[ss:sp_364 - 6:word16] = wArg02_554
	Mem389[ptrArg0A + 0x0001:byte] = (byte) fn0800_8BCA(Mem375[ss:sp_364 - 6:word32], Mem375[ss:sp_364 - 2:word16], Mem375[ss:sp_364:word16], out dx_715)
	word16 sp_380 = <invalid>
	Mem395[ss:sp_380 - 2:word16] = 0x0000
	Mem397[ss:sp_380 - 4:word16] = 0x0018
	Mem400[ss:sp_380 - 6:word16] = wArg04_553
	Mem403[ss:sp_380 - 8:word16] = wArg02_554
	word16 dx_407
	word16 ax_404 = fn0800_8BBB(Mem403[ss:sp_380 - 8:word32], Mem403[ss:sp_380 - 4:word16], Mem403[ss:sp_380 - 2:word16], out cx_716, out dx_407, out bx_717)
	word16 v50_419 = dx_407 + (ax_404 <u 0x0001)
	word16 wArg02_574 = ax_404 + 0x0001
	word16 wArg04_575 = v50_419
	branch (Mem420[ptrArg06:word16] & 0x0003) != 0x0000 l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2F3:
	branch v50_419 < 0x0000 l0800_C30B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2F9:
	branch v50_419 > 0x0000 l0800_C301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2FB:
	branch ax_404 <=u 0xFFC5 l0800_C30B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C30B:
	branch v50_419 != 0x0000 l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C311:
	branch ax_404 != 0xFFC5 l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C317:
	Mem442[ptrArg06 + 0x0003:byte] = 0x02
	Mem443[ptrArg06 + 0x0002:byte] = 0x1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C301:
	wArg02_574 = ax_404
	wArg04_575 = v50_419 - (ax_404 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C326:
	Mem460[ptrArg06 + 0x0003:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C34D:
	int32 dx_ax_473 = (int32) (int16) Mem463[ds:(int16) Mem463[ptrArg06 + 0x0003:byte] + 0x26B4:byte]
	byte bArg02_597 = SLICE(wArg02_574, byte, 0)
	word16 wArg06_594 = SLICE(ptrArg06, word16, 0)
	word16 dx_474 = SLICE(dx_ax_473, word16, 16)
	word16 ax_478 = (word16) dx_ax_473
	branch dx_474 < wArg04_575 l0800_C330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C362:
	branch dx_474 != wArg04_575 l0800_C369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C364:
	branch ax_478 <u wArg02_574 l0800_C330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C330:
	ui32 dwArg02_592 = SEQ(wArg04_575, v56_495)
	ui32 v57_v56_535 = dwArg02_592 - (int32) ((int16) Mem463[ds:(int16) Mem463[ptrArg06 + 0x0003:byte] + 0x26B4:byte])
	selector es_485 = SLICE(ptrArg06, selector, 16)
	Mem505[es_485:wArg06_594 + 0x0003:byte] = Mem501[es_485:wArg06_594 + 0x0003:byte] + 0x01
	wArg02_574 = SLICE(dwArg02_592, word16, 0) (alias)
	word16 v56_495 = (word16) v57_v56_535
	wArg04_575 = SLICE(v57_v56_535, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C369:
	Mem514[ptrArg06 + 0x0003:byte] = Mem463[ptrArg06 + 0x0003:byte] + 0x01
	Mem517[ptrArg06 + 0x0002:byte] = bArg02_597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C377:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C177_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_C379(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_C379_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C379:
	fn0800_AFCB(ds, SEQ(ds, 0x26E8))
	word32 dx_ax_498 = <invalid>
	branch (SLICE(dx_ax_498, word16, 0) | SLICE(dx_ax_498, word16, 16)) != 0x0000 l0800_C397
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C397:
	word16 wLoc06_396 = SLICE(dx_ax_498, word16, 0)
	branch fn0800_BFC7(dx_ax_498, out cx_499) >=u 0x0004 l0800_C3AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3AA:
	selector es_61 = SLICE(dx_ax_498, selector, 16)
	branch ((int16) Mem45[ds:(int16) Mem45[dx_ax_498:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3BD:
	branch ((int16) Mem45[ds:(int16) Mem45[es_61:wLoc06_396 + 0x0001:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3D1:
	branch ((int16) Mem45[ds:(int16) Mem45[es_61:wLoc06_396 + 0x0002:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3E5:
	word16 wLoc06_400 = SLICE(dx_ax_498, word16, 0)
	word16 wLoc04_408 = SLICE(dx_ax_498, word16, 16)
	branch Mem45[es_61:wLoc06_396 + 0x0003:byte] == 0x2D l0800_C404
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3EF:
	branch Mem45[es_61:wLoc06_396 + 0x0003:byte] == 0x2B l0800_C404
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3F6:
	branch (Mem45[ds:(int16) Mem45[es_61:wLoc06_396 + 0x0003:byte] + 0x2251:byte] & 0x02) == 0x00 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C404:
	selector es_104 = SLICE(dx_ax_498, selector, 16)
	branch ((int16) Mem45[ds:(int16) Mem45[dx_ax_498 + 0x0003:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C418:
	branch ((int16) Mem45[ds:(int16) Mem45[es_104:wLoc06_400 + 0x0004:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C467:
	fn0800_B083(SEQ(Mem134[ds:0x26E0:word16], Mem138[ds:0x26DE:word16]), 0x0004)
	fn0800_C01E(SEQ(Mem162[ds:0x26DC:word16], Mem165[ds:0x26DA:word16]), dx_ax_498, 0x0003)
	Mem183[Mem168[ds:0x26DA:segptr32] + 0x0003:byte] = 0x00
	word16 dx_195
	word16 dx_218
	word16 ax_217 = fn0800_8F18(0x0E10, dx_195, 0x0000, fn0800_A471(ds, SEQ(wLoc04_408, wLoc06_400 + 0x0003), out dx_195), out ch_500, out dx_218)
	Mem224[ds:0x26E4:word16] = dx_218
	Mem225[ds:0x26E2:word16] = ax_217
	Mem226[ds:0x26E6:word16] = 0x0000
	word16 si_227 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C542:
	word16 wLoc06_422 = SLICE(dx_ax_498, word16, 0)
	word16 wLoc04_423 = SLICE(dx_ax_498, word16, 16)
	branch Mem226[dx_ax_498 + si_227:byte] == 0x00 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C54B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4CA:
	branch (Mem226[ds:(int16) Mem226[dx_ax_498 + si_227:byte] + 0x2251:byte] & 0x0C) == 0x00 l0800_C541
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C541:
	si_227 = si_227 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4DA:
	word16 wLoc06_428 = SLICE(dx_ax_498, word16, 0)
	word16 wLoc04_430 = SLICE(dx_ax_498, word16, 16)
	branch fn0800_BFC7(SEQ(wLoc04_423, wLoc06_422 + si_227), out cx_501) <u 0x0003 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4ED:
	selector es_273 = SLICE(dx_ax_498, selector, 16)
	branch ((int16) Mem257[ds:(int16) Mem257[es_273:(word16) dx_ax_498 + 0x0001 + si_227:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C501:
	branch ((int16) Mem257[ds:(int16) Mem257[es_273:wLoc06_428 + 0x0002 + si_227:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C515:
	fn0800_C01E(SEQ(Mem302[ds:0x26E0:word16], Mem305[ds:0x26DE:word16]), SEQ(wLoc04_430, wLoc06_428 + si_227), 0x0003)
	Mem324[Mem308[ds:0x26DE:segptr32] + 0x0003:byte] = 0x00
	Mem325[ds:0x26E6:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3A7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C394:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C42C:
	Mem327[ds:0x26E6:word16] = 0x0001
	Mem328[ds:0x26E4:word16] = 0x0000
	Mem329[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(SEQ(Mem336[ds:0x26DC:word16], Mem339[ds:0x26DA:word16]), SEQ(ds, 0x26EB))
	fn0800_BF9E(SEQ(Mem358[ds:0x26E0:word16], Mem361[ds:0x26DE:word16]), SEQ(ds, 0x26EF))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C54E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C379_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..7]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_C553_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C553:
	branch wArg04 != 0x0000 l0800_C589
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C589:
	branch wArg04 <u 0x0003 l0800_C59A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C58F:
	branch (wArg02 + 0x0046 & 0x0003) == 0x0000 l0800_C59D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C59A:
	wArg06 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C59D:
	wArg06 = wArg06 + Mem29[ds:(wArg04 - 0x0001 << 0x0001) + 0x26C0:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C55D:
	word16 si_167 = wArg06
	branch wArg06 <u 0x003B l0800_C572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C566:
	branch (wArg02 + 0x0046 & 0x0003) != 0x0000 l0800_C572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C571:
	si_167 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C572:
	wArg04 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C57C:
	branch Mem55[ds:(wArg04 << 0x0001) + 0x26C0:word16] <=u si_167 l0800_C579
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C579:
	wArg04 = wArg04 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C587:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5AA:
	word16 ax_140
	branch wArg04 <u 0x0004 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B0:
	branch wArg04 == 0x0004 l0800_C5BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B2:
	branch wArg04 >u 0x000A l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B8:
	branch wArg04 != 0x000A l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5BA:
	word16 cx_103
	branch wArg02 <= 0x0010 l0800_C5D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5C5:
	branch wArg04 != 0x0004 l0800_C5D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5D4:
	cx_103 = Mem67[ds:(wArg04 << 0x0001) + 0x26C0:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5CB:
	cx_103 = Mem67[ds:(wArg04 << 0x0001) + 0x26BE:word16] + 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5D8:
	branch ((byte) (wArg02 + 0x07B2) & 0x03) == 0x00 l0800_C5E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5E4:
	cx_103 = cx_103 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5E5:
	word16 cx_126 = cx_103 - (uint16) ((uint32) ((uint16) (((word16) (wArg02 *u 0x016D) + ((wArg02 + 0x0001 >> 0x0002) + cx_103)) + 0x0004)) % 0x0007)
	branch wArg04 != 0x0004 l0800_C61A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C61A:
	branch wArg06 <u cx_126 l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C61E:
	branch wArg06 != cx_126 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C620:
	branch bArg08 >u 0x01 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C60C:
	branch wArg06 >u cx_126 l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C610:
	branch wArg06 != cx_126 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C612:
	branch bArg08 <u 0x02 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C62B:
	ax_140 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C618:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C626:
	ax_140 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C62D:
	return ax_140
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C553_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C632(selector ds, word16 wArg02, word32 dwArg04, word16 wArg08, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax bx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_C632_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C632:
	word16 ax_123
	branch wArg02 <u Mem15[ds:0x24E8:word16] l0800_C64E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C64E:
	branch wArg08 >=u 0x0001 l0800_C65C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C65C:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_C677
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C668:
	fn0800_8E29(ds, wArg02, 0x00000000, 0x02, out cx_468, out dx_469, out bx_470)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C677:
	branch (Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_C696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C696:
	Mem62[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	bx = wArg02 << 0x0001
	word16 wLoc08_296 = wArg08
	segptr32 ptrLoc0E_309 = dwArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C727:
	segptr32 ptrLoc06_462 = SEQ(ss, fp - 0x0090)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C731:
	word16 si_175
	word16 ax_126
	word16 wLoc0E_310 = SLICE(ptrLoc0E_309, word16, 0)
	word16 wLoc0C_375 = SLICE(ptrLoc0E_309, word16, 16)
	word16 wLoc06_300 = SLICE(ptrLoc06_462, word16, 0)
	segptr32 ptrLoc06_314 = ptrLoc06_462
	word16 wLoc06_315 = SLICE(ptrLoc06_462, word16, 0)
	word16 wLoc04_318 = SLICE(ptrLoc06_462, word16, 16)
	branch wLoc08_296 == 0x0000 l0800_C73A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C73A:
	si_175 = wLoc06_300 - (fp - 0x0090)
	dx = 0x0000 - (si_175 <u 0x0000)
	branch si_175 <=u 0x0000 l0800_C770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C74E:
	word16 ax_108 = fn0800_C779(ds, wArg02, SEQ(ss, fp - 0x0090), si_175, out cx_110, out dx_472, out bx)
	dx = ax_108
	branch ax_108 == si_175 l0800_C770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C770:
	ax_123 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C762:
	branch ax_108 == 0xFFFF l0800_C71A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C767:
	ax_126 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C737:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6B4:
	word16 v20_127 = wLoc08_296 - 0x0001
	wLoc08_296 = v20_127
	byte al_134 = Mem131[ptrLoc0E_309:byte]
	ptrLoc0E_309 = SEQ(wLoc0C_375, wLoc0E_310 + 0x0001) (alias)
	branch al_134 != 0x0A l0800_C6D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6C7:
	Mem141[ptrLoc06_462:byte] = 0x0D
	ptrLoc06_314 = SEQ(wLoc04_318, wLoc06_315 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6D1:
	Mem152[ptrLoc06_314:byte] = al_134
	word16 wLoc06_321 = SLICE(ptrLoc06_314, word16, 0)
	word16 dx_158 = wLoc06_321 + 0x0001 - (fp - 0x0090)
	word16 bx_161 = 0x0000 - (dx_158 <u 0x0000)
	word16 wLoc04_377 = SLICE(ptrLoc06_314, word16, 16)
	bx = bx_161
	ptrLoc06_462 = SEQ(wLoc04_377, wLoc06_321 + 0x0001) (alias)
	branch bx_161 < 0x0000 l0800_C731
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6EF:
	branch bx_161 != 0x0000 l0800_C6F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6F1:
	ptrLoc06_462 = SEQ(wLoc04_377, wLoc06_321 + 0x0001) (alias)
	branch dx_158 <u 0x0080 l0800_C731
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6F7:
	si_175 = wLoc06_321 + 0x0001 - (fp - 0x0090)
	word16 ax_194 = fn0800_C779(ds, wArg02, SEQ(ss, fp - 0x0090), si_175, out cx_196, out dx_473, out bx)
	dx = ax_194
	branch ax_194 == si_175 l0800_C727
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C715:
	branch ax_194 != 0xFFFF l0800_C71F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C71F:
	ax_126 = wArg08 - v20_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C76A:
	ax_123 = ax_126 + dx - si_175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C71A:
	ax_123 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C76E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C683:
	ax_123 = fn0800_C779(ds, wArg02, dwArg04, wArg08, out cx_471, out dx, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C657:
	ax_123 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C644:
	ax_123 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C773:
	dxOut = dx
	bxOut = bx
	return ax_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C632_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C779(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_C779_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C779:
	word16 ax_37
	word16 wLoc04_62
	word16 bx_10 = wArg02 << 0x0001
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0001) == 0x0000 l0800_C78F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C78F:
	bx_10 = wArg02
	cx = wArg08
	dx = (word16) ptrArg04 (alias)
	word16 ax_23
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_23) l0800_C7AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7AF:
	wLoc04_62 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7A0:
	Mem34[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem30[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x1000
	bx_10 = wArg02 << 0x0001
	ax_37 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C789:
	wLoc04_62 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7B0:
	ax_37 = fn0800_8D2B(ds, wLoc04_62)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7B3:
	cxOut = cx
	dxOut = dx
	bxOut = bx_10
	return ax_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C779_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_0ADB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: sp
fn1483_0ADB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ADB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0ADB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_0ADC(word32 ds_bx, word32 es_di, word32 ss_bp, word16 ax, byte ch, byte cl, byte dh, byte dl, word16 si, byte FPUF, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg0A, word16 wArg018C, word16 wArg019D, selector psegArg01A2, byte bArg02BF, byte bArg0F9E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ch:[0..7] cs:[0..15] cx:[0..7] dh:[0..7] dx:[0..7] FPUF:[0..7] Sequence ds:bx:[0..31] Sequence es:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +000A:[0..15] Stack +018C:[0..15] Stack +019D:[0..15] Stack +01A2:[0..15] Stack +02BF:[0..7] Stack +0F9E:[0..7]
// LiveOut:
// Trashed: SCZDOP ax bp bx cx di ds dx es si ss Top
// Preserved: sp
fn1483_0ADC_entry:
	word16 cx_22 = DPB(cx, ch, 8)
	word16 dx_19 = DPB(dx, dh, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ADC:
	int8 Top_37 = fn1483_0D3F(ds_bx, es_di, ss_bp, ax, ch, cx_22, dh, dx_19, si, FPUF, wLoc02, wArg00, wArg02, wArg04, wArg0A, wArg018C, wArg019D, psegArg01A2, bArg02BF, bArg0F9E)
	word32 es_di_85 = <invalid>
	ST46[Top_37:real64] = Mem0[es_di_85 + 0xE086:real32] - ST[Top_37:real64]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0ADC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn1483_0C11(word32 ds_si, word32 es_di, byte al, word32 ecx, word16 bx, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bp:[0..15] cs:[0..15] cx:[0..31] ebx:[0..15] ecx:[16..31] Sequence ds:si:[0..31] Sequence es:di:[0..31] ss:[0..15]
// LiveOut: Top
// Trashed: SCZDO bp di ds dx eax ebx ecx es si ss Top
// Preserved: sp
l1483_0C11:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C11_entry:
	word16 si = SLICE(ds_si, word16, 0)
	word16 bx_43 = (word16) ebx
	selector es = SLICE(es_di, selector, 16)
	word16 di = SLICE(es_di, word16, 0)
	selector ds = SLICE(ds_si, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C11:
	branch al != Mem11[ss:si:byte] l1483_0C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C4D:
	word32 eax_28 = DPB(eax, al + 0x01, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C53_thunk_fn1483_0C55:
	return fn1483_0C55((word16) eax_28)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C1B:
	word32 ecx_61 = DPB(ecx, cx - 0x0001, 0)
	branch al - 0x8C - (al <u Mem11[ss:si:byte]) != 0x00 && cx != 0x0001 l1483_0C6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C6C:
	__daa(0x55, &0x55)
	word16 dx_69 = <invalid>
	word16 bx_66
	word16 di_67
	selector ds_68
	selector es_71
	word16 si_72
	ui32 dh_ax_154 = SEQ(SLICE(dx_69, byte, 8), fn1483_1BB8(ds_si, 0x55, 0x1955, ecx_61, 0x8000, bx_43, bp, di, es, out cx_199, out dh_200, out bx_66, out si_72, out di_67, out es_71, out ds_68)) + SEQ(Mem44[ds_68:si_72 + 0x147C:byte], Mem44[ds_68:bx_66 + 0x3303:word16])
	word16 di_79 = di_67 + Mem44[ds_68:bx_66:word16]
	word16 ax_80 = (word16) dh_ax_154
	word16 v23_99 = Mem44[ds_68:ax_80 + 0x020E + di_79:word16] + di_79
	Mem100[ds_68:ax_80 + 0x020E + di_79:word16] = v23_99
	word32 ecx_70 = <invalid>
	word32 ss_bp_198 = <invalid>
	word16 cx_102 = (word16) ecx_70
	selector ss_73 = SLICE(ss_bp_198, selector, 16)
	byte al_107 = (byte) (bx_66 - 0x0903 - (SLICE(dh_ax_154, byte, 16) <u 0x00))
	byte ch_125 = SLICE(cx_102 - 0x0001, byte, 8)
	word32 ecx_137 = DPB(ecx_70, cx_102 - 0x0001, 0)
	branch v23_99 != 0x0000 && cx_102 != 0x0001 l1483_0C85_thunk_fn1483_0CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C85_thunk_fn1483_0CA0:
	int8 Top_114
	fn1483_0CA0(SEQ(es_71, di_79), ss_bp_198, al_107, Mem100[ss_73:bx_43 + 2:word16], Mem100[ss_73:bx_43 + 4:word16], Mem100[ss_73:bx_43 + 6:word16], out Top_114)
	return Top_114
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C87:
	word16 ax_122 = Mem100[ds_68:ax_80:word16]
	Mem124[ss_73:bx_43:word16] = si_72
	Mem129[es_71:di_79:byte] = Mem124[ds_68:si_72:byte]
	word32 ecx_138 = DPB(ecx_137, ch_125 + (byte) ax_122, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C8F_thunk_fn1483_0C91:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	selector stackArg0 = <invalid>
	word16 stackArg2 = <invalid>
	word16 stackArg4 = <invalid>
	word16 stackArg6 = <invalid>
	int8 Top_145
	fn1483_0C91(SEQ(ds, bx), SEQ(ss, bp), ax_122 * 0x0002, (byte) ecx_138, (word16) ecx_138, si_72 + 0x0001, di_79 + 0x0001, stackArg0, stackArg2, stackArg4, stackArg6, out es_206, out Top_145)
	return Top_145
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C11_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C24:
	Mem147[es_di:word16] = 0x1955
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn1483_0C55(word16 ax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15]
// LiveOut: Top
// Trashed: SCZO ax di dx si sp Top
// Preserved: ax
l1483_0C55:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C55_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C55:
	branch Z l1483_0C55_thunk_fn1483_0C11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C55_thunk_fn1483_0C11:
	return fn1483_0C11(SEQ(ds, si), SEQ(es, di), (byte) ax, ecx, bx, bp)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C57:
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C55_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0C91(word32 ds_bx, word32 ss_bp, byte al, byte ch, byte cl, word16 si, word16 di, selector psegArg00, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ch:[0..7] cx:[0..7] di:[0..15] Sequence ds:bx:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es sp Top
// Preserved:
l1483_0C91:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C91_entry:
	byte al_12 = (byte) ax
	word16 cx_23 = DPB(cx, ch, 8)
	word16 bx = SLICE(ds_bx, word16, 0)
	selector ds = SLICE(ds_bx, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C91:
	byte al_14 = al_12 + ch
	word16 ax_19 = DPB(ax, al_14, 0)
	branch !OVERFLOW(al_14) l1483_0C96_thunk_fn1483_0C55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C96_thunk_fn1483_0C55:
	int8 Top_31 = fn1483_0C55(ax_19)
	esOut = <invalid>
	TopOut = Top_31
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C98:
	branch Mem0[ds_bx + si:word16] *s 0x0018 == 0x0000 && cx_23 != 0x0001 l1483_0CA9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9B_thunk_fn1483_0CA0:
	int8 Top_45
	word16 di_43 = fn1483_0CA0(SEQ(psegArg00, di), ss_bp, al_14, wArg02, wArg04, wArg06, out Top_45)
	esOut = <invalid>
	TopOut = Top_45
	return di_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9D:
	Mem51[ds:bx + 0x2203 + si:word16] = Mem0[ds:bx + 0x2203 + si:word16] + (cx_23 - 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9D_thunk_fn1483_0CA0:
	int8 Top_61
	word16 di_59 = fn1483_0CA0(SEQ(psegArg00, di), ss_bp, al_14, wArg02, wArg04, wArg06, out Top_61)
	esOut = <invalid>
	TopOut = Top_61
	return di_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C91_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CA0(word32 es_di, word32 ss_bp, byte al, word16 wArg00, word16 wArg02, word16 wArg04, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] Sequence es:di:[0..31] Sequence ss:bp:[0..31] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: di Top
// Trashed: SCZO ax bp bx cx di dx Top
// Preserved: sp
l1483_0CA0:
	Mem5[ss:sp - 2:word16] = es
	Mem11[ds:bx + di:word16] = Mem5[ds:bx + di:word16] + si
	call fn1483_FD4E (retsize: 2;)
		uses: ax:DPB(ax, ah + Mem11[ds:bx + si:byte], 8),bp:bp,bx:bx,cx:cx,di:di,ds:ds,dx:dx,es:es,si:si,sp:sp - 2,ss:ss,Top:Top
		defs: ax:ax_18,bx:bx_19,sp:sp_15,Top:Top_26
	ah_36 = SLICE(ax_18, byte, 8) (alias)
	bl_35 = (byte) bx_19 (alias)
	ax_38 = DPB(ax_18, ah_36, 8) (alias)
	es = SLICE(es_di, selector, 16)
	ss = SLICE(ss_bp, selector, 16)
	di = SLICE(es_di, word16, 0)
	ax_97 = DPB(ax_96, ah, 8) (alias)
	bp = SLICE(ss_bp, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CA9:
	dx_30 = Mem11[ds:si + 0x173E:word16] *s 0x0C62
	Mem33[ds:bx_19:byte] = Mem11[ds:bx_19:byte] + (byte) dx_30
	bl_37 = bl_35 + ah_36
	bx_40 = DPB(bx_19, bl_37, 0) (alias)
	Mem42[ds:bx_40 - 0x0056 + di:byte] = __rol(Mem33[ds:bx_40 - 0x0056 + di:byte], 0xE2)
	v46_43 = (Mem42[ss_bp + 0x007B:word16] & 0x0002) != 0x0000
	Mem44[ss_bp + 0x007B:word16] = __ror(Mem42[ss_bp + 0x007B:word16], 0x01)
	Mem47[ds:bx_40:byte] = Mem44[ds:bx_40:byte] + bl_37 + v46_43
	bx_54 = DPB(bx_19, bl_37 & Mem47[ds:bx_40:byte], 0) (alias)
	Mem51[es_di:byte] = (byte) (ax_38 - 0x32AC)
	Mem56[ds:bx_54:word16] = Mem51[ds:bx_54:word16] + bx_54
	v49_60 = Mem56[ds:di + 0x0015:word16]
	Mem61[ds:di + 0x0015:word16] = ax_38 - 0xBDCB
	call fn1483_4FE0 (retsize: 2;)
		uses: ax:v49_60,bp:bp - 0x0001,bx:bx_54,cx:di + 0x0001 - si,di:di + 0x0001,ds:ds,dx:dx_30,es:es,si:si,sp:sp_15,ss:ss,Top:Top_26
		defs: bx:bx_65,dx:dx_66,Top:Top_68
	Mem71[ds:0xF7E3:word16] = Mem61[ds:0xF7E3:word16] - dx_66
	Mem74[ds:bx_65 + (di + 0x0001):word16] = Mem71[ds:bx_65 + (di + 0x0001):word16] + (bp - 0x0001)
	__inw(0x8B)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CE5:
	TopOut = Top_68
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CA0_entry:
	ax_96 = DPB(ax, al, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CA0:
	call fn1483_FD4E (retsize: 2;)
		uses: ax:DPB(DPB(ax_97, al & Mem0[ds:0x3101:byte], 0), ah + Mem0[ds:bx + si:byte], 8),bp:bp,bx:bx,cx:cx,di:di,ds:ds,dx:dx,es:es,si:si,sp:fp,ss:ss,Stack +0002:wArg00,Stack +0004:wArg02,Stack +0006:wArg04,Top:0
		defs: ax:ax_100,bx:bx_101,sp:sp_95,Top:Top_104
	ah_115 = SLICE(ax_100, byte, 8) (alias)
	bl_114 = (byte) bx_101 (alias)
	ax_117 = DPB(ax_100, ah_115, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CA9_in_fn1483_0CA0:
	dx_108 = Mem0[ds:si + 0x173E:word16] *s 0x0C62
	Mem112[ds:bx_101:byte] = v22
	bl_116 = bl_114 + ah_115
	bx_119 = DPB(bx_101, bl_116, 0) (alias)
	Mem121[ds:bx_119 - 0x0056 + di:byte] = __rol(Mem112[ds:bx_119 - 0x0056 + di:byte], 0xE2)
	Mem123[ss_bp + 0x007B:word16] = __ror(Mem121[ss_bp + 0x007B:word16], 0x01)
	Mem128[ds:bx_119:byte] = v28
	bx_135 = DPB(bx_101, bl_116 & Mem128[ds:bx_119:byte], 0) (alias)
	Mem132[es_di:byte] = (byte) (ax_117 - 0x32AC)
	Mem138[ds:bx_135:word16] = v29
	Mem143[ds:di + 0x0015:word16] = ax_117 - 0xBDCB
	call fn1483_4FE0 (retsize: 2;)
		uses: ax:v30,bp:bp - 0x0001,bx:bx_135,cx:di + 0x0001 - si,di:di + 0x0001,ds:ds,dx:dx_108,es:es,si:si,sp:sp_95,ss:ss,Stack +0002:wArg00,Stack +0004:wArg02,Stack +0006:wArg04,Top:Top_104
		defs: bx:bx_148,Top:Top_151
	Mem155[ds:0xF7E3:word16] = v31
	Mem159[ds:bx_148 + (di + 0x0001):word16] = v32
	__inw(0x8B)
	TopOut = Top_151
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CA0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CED(word32 es_di, word32 ss_bp, word16 ax, word16 bx, word16 si, selector ds, selector psegArg02, word16 wArg04, word16 wArg06, word16 wArg0A, word16 wArg10, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] ds:[0..15] Sequence es:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +000A:[0..15] Stack +0010:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di ds dx es si sp ss Top
// Preserved:
l1483_0CED:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CED_entry:
	word16 di = SLICE(es_di, word16, 0)
	byte bl_17 = (byte) bx
	byte al_33 = (byte) ax
	selector es = SLICE(es_di, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CED:
	word16 si_8 = si + Mem0[ds:di:word16]
	word16 v8_10 = Mem0[ds:bx + 0xF7E2 + si_8:word16] + fp
	Mem11[ds:bx + 0xF7E2 + si_8:word16] = v8_10
	Mem15[es_di:word16] = ax
	bool C_26 = SLICE(cond(v8_10), bool, 1)
	word16 bx_24 = DPB(bx, bl_17 + 0x01, 0)
	branch bl_17 != 0x01 l1483_0CE5_in_fn1483_0CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CE5_in_fn1483_0CED:
	esOut = es
	TopOut = 0
	return di + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CF8:
	Mem27[ds:bx_24 + si_8:byte] = __rcr(Mem15[ds:bx_24 + si_8:byte], 0xAC, C_26)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CF9_thunk_fn1483_0CFC:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg6 = <invalid>
	selector es_41
	int8 Top_44
	word16 di_38 = fn1483_0CFC(SEQ(ds, bx_24), ss_bp, al_33, bl_17 + 0x01, psegArg02, wArg04, wArg06, stackArg6, wArg10, out es_41, out Top_44)
	esOut = es_41
	TopOut = Top_44
	return di_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CED_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CFA(word32 ds_bx, word32 ss_bp, byte al, byte ch, word16 si, selector psegArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg0E, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ch:[0..7] Sequence ds:bx:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +000E:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di ds dx es si ss Top
// Preserved: sp
l1483_0CFA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFA_entry:
	selector ds = SLICE(ds_bx, selector, 16)
	byte bl_17 = (byte) SLICE(ds_bx, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFA:
	Mem10[ds:si + 0xD832:byte] = Mem0[ds:si + 0xD832:byte] - ch - C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFA_thunk_fn1483_0CFC:
	selector es_26
	int8 Top_29
	word16 di_23 = fn1483_0CFC(ds_bx, ss_bp, al, bl_17, psegArg00, wArg02, wArg04, wArg06, wArg0E, out es_26, out Top_29)
	esOut = es_26
	TopOut = Top_29
	return di_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CFC(word32 ds_bx, word32 ss_bp, byte al, byte bl, selector psegArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg0E, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bl:[0..7] Sequence ds:bx:[0..31] Sequence ss:bp:[0..31] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +000E:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di ds dx es si ss Top
// Preserved: sp
l1483_0CFC:
	ax_14 = DPB(ax, Mem0[ds:bx + di:byte], 0) (alias)
	Mem9[ss_bp + si:word16] = 0xD1FF
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
	ch_15 = SLICE(cx, byte, 8) (alias)
	ch_63 = SLICE(cx, byte, 8) (alias)
	ds = SLICE(ds_bx, selector, 16)
	bx = SLICE(ds_bx, word16, 0)
	ss = SLICE(ss_bp, selector, 16)
	cx_16 = DPB(cx, ch_15, 8) (alias)
	cx_64 = DPB(cx, ch_63, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D04_thunk_fn1483_0C91:
	di_26 = fn1483_0C91(ds_bx, ss_bp, ax_14, ch_15, cx_16, si, di, Mem9[ss:sp:selector], Mem9[ss:sp + 2:word16], Mem9[ss:sp + 4:word16], Mem9[ss:sp + 6:word16], out es_22, out Top_24)
	esOut = es_22
	TopOut = Top_24
	return di_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D02_thunk_fn1483_0D06:
	di_38 = fn1483_0D06(ds_bx, dx, fs, Mem9[ss:sp:word16], Mem9[ss:sp + 4:word16], Mem9[ss:sp + 14:word16])
	esOut = es
	TopOut = Top
	return di_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFC:
	bx_55 = DPB(bx, bl ^ al, 0) (alias)
	ax_62 = DPB(ax, Mem0[ds:bx_55 + di:byte], 0) (alias)
	Mem58[ss_bp + si:word16] = 0xD1FF
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D04_thunk_fn1483_0C91:
	di_73 = fn1483_0C91(SEQ(ds, bx_55), ss_bp, ax_62, ch_63, cx_64, si, di, psegArg00, wArg02, wArg04, wArg06, out es_69, out Top_71)
	esOut = es_69
	TopOut = Top_71
	return di_73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D04_thunk_fn1483_0D06:
	di_83 = fn1483_0D06(SEQ(ds, bx_55), dx, fs, psegArg00, wArg04, wArg0E)
	esOut = es
	TopOut = 0
	return di_83
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0D06(word32 ds_bx, word16 dx, selector fs, word16 wArg00, word16 wArg04, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx:[0..15] fs:[0..15] Sequence ds:bx:[0..31] Stack +0000:[0..15] Stack +0004:[0..15] Stack +000E:[0..15]
// LiveOut: di
// Trashed: SCZO ax bp bx cx di dx si sp Top
// Preserved:
fn1483_0D06_entry:
	selector ds = SLICE(ds_bx, selector, 16)
	word16 bx = SLICE(ds_bx, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D06:
	Mem10[ds_bx + 0xE209:word16] = Mem0[ds_bx + 0xE209:word16] - dx - C
	branch bx == dx l1483_0D2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D11:
	msdos_display_string(SEQ(ds, 0x0D21))
	Mem42[fs:wArg04 + 0x0052 + wArg00:byte] = Mem10[fs:wArg04 + 0x0052 + wArg00:byte] & (byte) wArg0E
	di = wArg00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D2B:
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0D06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn1483_0D3F(word32 ds_bx, word32 es_di, word32 ss_bp, word16 ax, byte ch, byte cl, byte dh, byte dl, word16 si, byte FPUF, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg0C, word16 wArg018E, word16 wArg019F, selector psegArg01A4, byte bArg02C1, byte bArg0FA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ch:[0..7] cs:[0..15] cx:[0..7] dh:[0..7] dx:[0..7] FPUF:[0..7] Sequence ds:bx:[0..31] Sequence es:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +000C:[0..15] Stack +018E:[0..15] Stack +019F:[0..15] Stack +01A4:[0..15] Stack +02C1:[0..7] Stack +0FA0:[0..7]
// LiveOut: Top
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp ss Top
// Preserved:
fn1483_0D3F_entry:
	byte al_16 = (byte) ax
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
	selector ds = SLICE(ds_bx, selector, 16)
	word16 bx = SLICE(ds_bx, word16, 0)
	selector es = SLICE(es_di, selector, 16)
	word16 di = SLICE(es_di, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D3F:
	branch P l1483_0D40_thunk_fn1483_0CFA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D40_thunk_fn1483_0CFA:
	int8 Top_27
	fn1483_0CFA(ds_bx, ss_bp, al_16, ch, si, ax, wArg00, wArg02, wArg04, wArg0C, out es_24, out Top_27)
	return Top_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D42:
	ui16 ax_ch_507 = SEQ(DPB(ax, al_16 + ch, 0), ch) - SEQ(0xFC68, Mem7[ds:(bx_34 + 0x0002) + si:byte])
	byte ch_35 = (byte) ax_ch_507
	word16 ax_39 = SLICE(ax_ch_507, word16, 8)
	word16 bx_34 = DPB(bx, 0xB4, 0)
	word16 cx_110 = DPB(cx, ch_35, 8)
	byte ah_67 = SLICE(ax_39, byte, 8)
	word16 dx_94 = DPB(dx, dh ^ 0x17, 8)
	branch (dh ^ 0x17) < 0x00 l1483_0D50_thunk_fn1483_0CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D50_thunk_fn1483_0CED:
	int8 Top_54
	fn1483_0CED(es_di, ss_bp, ax_39, bx_34, si, ds, ax, wArg00, wArg02, wArg06, wArg0C, out es_60, out Top_54)
	return Top_54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D52:
	word16 ax_100 = DPB(ax_39, ah_67 + Mem41[ds:di:byte], 8)
	word16 v19_73 = Mem72[ds:bx_34 + 0x0043 + si:word16]
	Mem74[ds:bx_34 + 0x0043 + si:word16] = bp
	Mem77[ds:di:byte] = Mem74[ds:di:byte] << 0x68
	word16 v22_79 = -Mem77[ss:v19_73 - 0x0006:word16]
	Mem80[ss:v19_73 - 0x0006:word16] = v22_79
	word16 bp_190 = v19_73
	branch !OVERFLOW(v22_79) l1483_0D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D68_1:
	__syscall(0x04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D69:
	word32 ds_bx_729
	selector ds_414
	word16 di_406
	bool S_407
	word32 ds_bx_726
	Mem89[ds:si + 0x5C87:byte] = ch_35
	word16 sp_98
	word16 ax_101
	word16 cx_111
	word16 bx_113
	word16 dx_114
	int8 Top_121
	byte SCZDOP_124
	call fn1483_8A82 (retsize: 2;)
		uses: ax:ax_100,bp:v19_73,bx:bx_34,cs:cs,cx:cx_110,di:di,ds:ds,dx:dx_94,es:es,FPUF:FPUF,si:si,sp:fp + 0x0008,ss:ss,Stack +0000:wArg06,Stack +0002:es,Stack +0006:wArg0C,Stack +FFFFFFF2:0x0C58,Stack +FFFFFFF4:0x0F5F,Stack +FFFFFFF6:si,Stack +FFFFFFF8:ax,Stack +FFFFFFFA:wArg00,Stack +FFFFFFFC:wArg02,Stack +FFFFFFFE:wArg04,Top:0
		defs: ax:ax_101,bx:bx_113,cx:cx_111,dx:dx_114,SCZDOP:SCZDOP_124,sp:sp_98,Top:Top_121
	Mem127[ss:sp_98 - 2:word16] = ax_101
	Mem129[ss:sp_98 - 4:word16] = cx_111
	Mem131[ss:sp_98 - 6:word16] = dx_114
	Mem133[ss:sp_98 - 8:word16] = bx_113
	Mem135[ss:sp_98 - 10:word16] = sp_98
	Mem137[ss:sp_98 - 12:word16] = v19_73
	Mem139[ss:sp_98 - 14:word16] = si
	Mem141[ss:sp_98 - 16:word16] = di
	word16 bx_143 = bx_113 + Mem141[ds:(bx_113 - 0x0079) + di:word16] + SCZDOP_124
	byte dh_145 = SLICE(dx_114, byte, 8)
	Mem148[ss:v19_73 + 0xF512 + di:byte] = Mem141[ss:v19_73 + 0xF512 + di:byte] + dh_145 + (bx_143 <u 0x0000)
	Mem151[ds:bx_143 + 0x007D:byte] = Mem148[ds:bx_143 + 0x007D:byte] & (byte) ax_101
	byte ch_157 = SLICE(cx_111, byte, 8)
	word16 ax_164 = __aad(si)
	word16 ax_160 = DPB(ax_101 - 0x8747, (byte) (ax_101 - 0x8747) + ch_157 + (ax_101 <u 0x8747), 0)
	word16 v31_165 = Mem151[ds:ax_160 + 0x995D:word16]
	Mem166[ds:ax_160 + 0x995D:word16] = ax_160
	Mem170[ss:sp_98 - 18:word16] = sp_98 - 16
	bx_177 = bx_143 + Mem170[ds:bx_143 + v31_165:word16]
	byte al_171 = (byte) ax_164
	byte bh_388 = SLICE(bx_177, byte, 8)
	byte al_178 = al_171 + 0x2A + ch_157
	byte cl_193 = (byte) (cx_111 - 0x0001)
	byte ah_383 = SLICE(ax_164, byte, 8)
	word16 si_167 = v31_165
	word16 dx_487 = DPB(dx_114, dh_145 - SLICE(bx_143, byte, 8) - (al_171 <u 0x2A), 8)
	byte bl_183 = (byte) bx_177
	word16 bx_177 = DPB(bx_177, bh_388, 8)
	word16 ax_231 = DPB(ax_164, al_178, 0)
	al_171 = al_178 (alias)
	word16 sp_180 = sp_98 - 16
	word16 cx_223 = DPB(DPB(cx_111 - 0x0001, cl_193, 0), cl_193, 0)
	branch sp_98 - 18 && cx_111 != 0x0001 l1483_0D99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D99:
	byte v37_184 = Mem170[ds:bx_177 + v31_165:byte] - bl_183
	Mem185[ds:bx_177 + v31_165:byte] = v37_184
	byte CZ_188 = SLICE(cond(v37_184), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9B:
	word32 ds_bx_732 = SEQ(ds, bx_177)
	branch v37_184 < 0x00 l1483_0DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF7:
	word16 bx_207 = SLICE(ds_bx_732, word16, 0)
	sp_180 = fp + 420
	dl_241 = (byte) dx_487 (alias)
	word16 cx_224 = DPB(cx_223, cl_193, 0)
	word16 cx_225 = DPB(cx_223, cl_193, 0)
	branch CZ_188 l1483_0E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E14:
	Mem195[ss:bp_190 + di:byte] = Mem192[ss:bp_190 + di:byte] ^ cl_193
	S_407 = SLICE(cond(Mem195[ss:bp_190 + di:byte]), bool, 0) (alias)
	__inw(dx_487)
	ds_bx_729 = ds_bx_732 (alias)
	branch Mem195[ss:bp_190 + di:byte] != 0x00 l1483_0DA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E19:
	word16 cx_493
	ST203[Top_121:real64] = __rndint(ST202[Top_121:real64])
	si_167 = si_167 + 0x0001
	byte ah_220 = SLICE(fp + 0x8FAA, byte, 8) | Mem215[ss:(fp + 0x0D8F) + si_167:byte]
	ax_231 = DPB(fp + 0x8FAA, ah_220, 8) (alias)
	cl_193 = (byte) (cx_225 - 0x0001) (alias)
	byte ch_265 = SLICE(cx_225 - 0x0001, byte, 8)
	es = psegArg01A4
	bp_190 = fp + 0x018A
	byte bl_228 = (byte) (bx_207 + 0x0001)
	byte al_264 = (byte) ax_231
	cx_223 = DPB(cx_225 - 0x0001, cl_193, 0) (alias)
	word16 cx_270 = DPB(cx_493, ch_265, 8)
	branch ah_220 == 0x00 && cx_225 != 0x0001 l1483_0DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF3:
	Mem230[bx_207:bx_207 + 0x0001 + si_167:byte] = Mem215[bx_207:bx_207 + 0x0001 + si_167:byte] + bl_228
	CZ_188 = SLICE(cond(ax_231 - (fp + 0x018A)), bool, 2) (alias)
	ds_bx_732 = SEQ(bx_207, bx_207 + 0x0001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E35:
	word16 ax_344
	Mem234[bx_207:bx_207 + 0x0001 + si_167:word16] = Mem215[bx_207:bx_207 + 0x0001 + si_167:word16] + ax_231
	byte cl_258 = cl_193 - Mem256[bx_207:si_167 + 0x005F:byte]
	byte al_235 = Mem234[bx_207:si_167:byte]
	Mem260[bx_207:si_167 + 0x6347:byte] = Mem256[bx_207:si_167 + 0x6347:byte] ^ cl_258
	ui16 v57_v56_508 = SEQ(bArg02C1, v56_242) + SEQ(0xE8, dl_241)
	byte al_266 = al_264 | ch_265
	word16 si_236 = si_167 + 0x0001
	word16 di_238 = 0x0000
	byte v56_242 = (byte) v57_v56_508
	byte v57_249 = SLICE(v57_v56_508, byte, 8)
	cx_493 = DPB(cx_225 - 0x0001, cl_258, 0) (alias)
	word16 ax_276 = DPB(ax_231, al_266, 0)
	word16 ax_345 = DPB(ax_344, al_266, 0)
	branch al_266 == 0x00 l1483_0ED9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ED9:
	branch cx_270 == 0x0000 l1483_0EEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EEE:
	word16 si_275 = Mem274[bx_207:0x9004:word16]
	Mem280[bx_207:0x0300:word16] = Mem274[bx_207:0x0300:word16] + DPB(ax_276, al_266 | 0x20, 0)
	__cli()
	Mem283[bx_207:0x8602:word16] = Mem280[bx_207:0x8602:word16] + dx_487
	int8 Top_300
	call fn3024_8E10 (retsize: 4;)
		uses: ax:Mem283[bx_207:si_275:word16],bp:fp + 0x018A,bx:bx_207 + 0x0001,cs:cs,cx:cx_270,di:di_295,ds:bx_207,dx:dx_487,es:psegArg01A4,FPUF:FPUF,si:si_275 + 0x0002,sp:fp + 0x0002,ss:ss,Stack +0000:si,Stack +0002:ax,Stack +0004:wArg00,Stack +0006:wArg02,Stack +0008:wArg04,Stack +000A:wArg06,Stack +000C:es,Stack +000E:wArg0C,Stack +0010:wArg0C,Stack +0190:ss,Stack +01A0:al_235,Stack +01A1:0x0000,Stack +01A6:psegArg01A4,Stack +02C3:v57_249,Stack +0FA2:v56_242,Stack +FFFFFFFA:0x0C58,Stack +FFFFFFFC:0x0C58,Stack +FFFFFFFE:0x0F5F,Top:Top_121
		defs: Top:Top_300
	return Top_300
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EDB:
	word16 si_305 = si_236 + 0x0002
	word16 cx_326 = DPB(cx_270, 0x2A, 8)
	word16 ax_318 = DPB(__aad(Mem274[bx_207:si_236:word16] + dx_487), 0x00, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EE4:
	ax_318 = DPB(ax_735, Mem314[bx_207:si_305:byte], 0) (alias)
	di_238 = di_238 + ax_318
	Mem324[psegArg01A4:di_238:word16] = Mem314[psegArg01A4:di_238:word16] + dx_487
	si_305 = si_305 + 0x0001
	cx_326 = cx_326 - 0x0001
	ax_735 = ax_318
	branch cx_326 != 0x0000 l1483_0EE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EEC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ED6:
	al_266 = Mem324[bx_207:si_305:byte]
	ax_276 = DPB(ax_735, al_266, 0) (alias)
	si_236 = si_305 + 0x0001
	cx_270 = DPB(cx_326, al_266, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E5E:
	ax_344 = DPB(ax_276, FPUF, 8) (alias)
	branch (ch_265 | al_266) != 0x00 l1483_0E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E70:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E64:
	__outw(dx_487, ax_345 + 0xE80C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E72:
	return Top_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF9:
	ptr32 ds_bp_364 = Mem192[ss:bp_190 + di:segptr32]
	int8 Top_377
	call fn1483_E62A (retsize: 2;)
		uses: ax:ax_369,bp:(word16) ds_bp_364,bx:bx_207,cs:cs,cx:cx_224,di:di,ds:SLICE(ds_bp_364, selector, 16),dx:dx_487,es:es_366,FPUF:FPUF,si:si_217,sp:fp + 418,ss:ss,Stack +0000:ax,Stack +0002:wArg00,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:es,Stack +000E:wArg0C,Stack +0121:bArg02C1,Stack +0E00:bArg0FA0,Stack +FFFFFE58:0x0C58,Stack +FFFFFE5A:0x0F5F,Stack +FFFFFE5C:si,Stack +FFFFFE5E:ax,Stack +FFFFFE60:wArg00,Stack +FFFFFE62:wArg02,Stack +FFFFFE64:wArg04,Stack +FFFFFE66:wArg06,Stack +FFFFFE68:es,Stack +FFFFFE6C:wArg0C,Stack +FFFFFFEE:wArg018E,Stack +FFFFFFFA:0x0C58,Stack +FFFFFFFC:0x0F5F,Stack +FFFFFFFE:si,Stack +FFFFFFFF:wArg019F,Top:Top_121
		defs: Top:Top_377
	return Top_377
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D97:
	byte v36_385 = Mem170[ds:bx_177 + 0x0028 + di:byte] - ah_383 - (sp_98 - 18)
	Mem386[ds:bx_177 + 0x0028 + di:byte] = v36_385
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9A:
	Mem391[ds:v31_165 + 0x005A:byte] = Mem386[ds:v31_165 + 0x005A:byte] - bh_388 - (v36_385 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9D:
	byte al_395 = al_171 | 0x3F
	byte v39_400 = Mem399[ds:di + 0x002D:byte] - al_395
	Mem401[ds:di + 0x002D:byte] = v39_400
	Mem405[es_di:byte] = al_395
	S_407 = SLICE(cond(v39_400), bool, 0) (alias)
	di_406 = di + 0x0001
	ds_bx_726 = SEQ(ds, bx_177) (alias)
	branch v39_400 >= 0x00 l1483_0DB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DA7:
	Mem408[es_di + 0x0001:byte] = al_395
	di = di + 0x0002
	ds_bx_729 = SEQ(ds, bx_177) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DA8:
	word16 bx_431 = SLICE(ds_bx_729, word16, 0)
	ds_414 = SLICE(ds_bx_729, selector, 16) (alias)
	branch S_407 l1483_0DBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DBE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DAA:
	Mem426[ss:bp_190 + si_167:word16] = -Mem416[ss:bp_190 + si_167:word16]
	__cli()
	di_406 = di - 0x0001
	Mem434[ds_414:bx_431 + 0x0045 + di_406:word16] = Mem426[ss:sp_180:word16]
	word16 bp_438 = bp_190 + 0x0001
	Mem440[ds_414:bx_431 + 0xC079 + si_167:word16] = Mem434[ds_414:bx_431 + 0xC079 + si_167:word16] + bp_438
	sp_180 = sp_180 + 4
	bp_190 = bp_438 - 0x0001
	ds_bx_726 = ds_bx_729 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DB9:
	Mem453[ds_bx_726 + di_406:byte] = Mem446[ds_bx_726 + di_406:byte] >>u 0x01
	word16 bx_450 = SLICE(ds_bx_726, word16, 0)
	ds_414 = SLICE(ds_bx_726, selector, 16) (alias)
	Mem459[ds_414:bx_450 + 0x0002 + di_406:byte] = Mem453[ds_414:bx_450 + 0x0002 + di_406:byte] + cl_193
	sp_180 = sp_180 + 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DBF:
	Mem468[ss:sp_180 - 2:word16] = cs
	Mem474[ss:0x0B01:word16] = es
	Mem478[ds_414:0x8C00:byte] = Mem474[ds_414:0x8C00:byte] + cl_193
	Mem483[ss:bp_190 + 0x8CC3:word16] = __ror(Mem478[ss:bp_190 + 0x8CC3:word16], cl_193)
	return Top_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0D3F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_1104(word16 ax, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] di:[0..15] ds:[0..15] dx:[0..7] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1104_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1104_entry:
	word16 sp_2 = fp
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1104:
	word16 dx_31 = DPB(dx, 0x26, 8)
	byte al_12 = (byte) __aam((byte) (ax - 0x5D97)) - 0x75 - (ax <u 0x5D97)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_110D:
	Mem22[ss:bp + 0x450F:word16] = Mem18[ss:bp + 0x450F:word16] + si + (al_12 <u 0x00)
	word16 sp_27 = sp_2 - 2
	Mem29[ss:sp_27:word16] = es
	dx_31 = DPB(dx_31, 0x34, 8) (alias)
	Mem33[ss:bp + 0x005E + si:word16] = dx_31
	Mem38[ds:bx + 0x675E + di:word16] = Mem33[ds:bx + 0x675E + di:word16] - 0x007D
	Mem46[ss:sp_27 - 2:word16] = dx_31
	ST51[Top_3 + 1:real64] = ST50[Top_3 + 1:real64] * lg2(ST50[Top_3:real64] + 1.0)
	ptr32 es_bx_64 = Mem46[ds:0x9F59:segptr32]
	Top_3 = Top_3 + 1
	ST66[Top_3:real64] = scalbn(ST51[Top_3:real64], ST51[Top_3 + 1:real64])
	Mem69[ss:bp + 0x1EC4:word16] = Mem46[ss:bp + 0x1EC4:word16] + bp
	sp_2 = sp_27
	si = 0x9F59
	es = SLICE(es_bx_64, selector, 16) (alias)
	bx = (word16) es_bx_64 (alias)
	di = 0xBFC4
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn1483_1B91(word16 cx, byte bh, byte bl, word16 di, selector ds, selector psegArg00, ptr16 & ecxOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bh:[0..7] bx:[0..7] cx:[0..15] di:[0..15] ds:[0..15] Stack +0000:[0..15]
// LiveOut: SCZO ecx Top
// Trashed: SCZO ax bx di ds dx ecx Top
// Preserved: sp
fn1483_1B91_entry:
	word16 bx_17 = DPB(bx, bh, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B91:
	Mem21[ds:bx_17 + 0x10F8 + di:word16] = ~Mem0[ds:bx_17 + 0x10F8 + di:word16]
	word16 v18_35 = Mem30[psegArg00:bx_17 + 0x3201 + di:word16]
	Mem36[psegArg00:bx_17 + 0x3201 + di:word16] = di
	word16 ax_8 = DPB(ax, al - 0x28, 0)
	__inb(0x41)
	__sti()
	Mem47[psegArg00:0xFF1F:word16] = Mem36[psegArg00:0xFF1F:word16] + 0x0001
	ui16 ax_al_62 = SEQ(cx, (byte) (ax_8 ^ 0x2EF9)) - SEQ(0xA587, bh)
	word32 ecx_43 = DPB(ecx, DPB(ax_8 ^ 0x2EF9, (byte) ax_al_62, 0), 0)
	word16 ax_54 = DPB(SLICE(ax_al_62, word16, 8), __inb(fp) - 0xF8 & 0x0A, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB7_thunk_fn1483_1BB9:
	word32 ecx_57
	int8 Top_59
	fn1483_1BB9(ax_54, ecx_43, fp, bx_17, bp, si, v18_35, es, psegArg00, out ecx_57, out dx_75, out bx_76, out bp_77, out si_78, out di_79, out es_80, out ds_81, out Top_59)
	ecxOut = ecx_57
	TopOut = Top_59
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1B91_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_1BB8(word32 ds_si, byte al, byte ah, word32 ecx, word16 dx, word16 bx, word16 bp, word16 di, selector es, ptr16 & cxOut, ptr16 & dhOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ax:[8..15] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..31] di:[0..15] dx:[0..15] ecx:[16..31] es:[0..15] Sequence ds:si:[0..31] ss:[0..15]
// LiveOut: ax bx di ds dx ecx es si
// Trashed: SCZO ax bp bx di ds dx ecx es si ss Top
// Preserved: sp
fn1483_1BB8_entry:
	selector ds = SLICE(ds_si, selector, 16)
	word16 si = SLICE(ds_si, word16, 0)
	word32 ecx_22 = DPB(ecx, cx, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB8:
	word16 ax_16 = DPB(ax, al | Mem0[ds_si:byte], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB8_thunk_fn1483_1BB9:
	word16 bx_28
	word16 di_29
	selector ds_30
	word16 si_33
	selector es_36
	word16 ax_26 = fn1483_1BB9(ax_16, ecx_22, dx, bx, bp, si, di, es, ds, out ecx_32, out dx_31, out bx_28, out bp_27, out si_33, out di_29, out es_36, out ds_30, out Top_50)
	cxOut = <invalid>
	dhOut = <invalid>
	bxOut = bx_28
	siOut = si_33
	diOut = di_29
	esOut = es_36
	dsOut = ds_30
	return ax_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1BB8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_1BB9(word16 ax, word32 ecx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & ecxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..31] di:[0..15] ds:[0..15] dx:[0..15] ecx:[16..31] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bp bx di ds dx ecx es si ss Top
// Trashed: SCZO ax bp bx di ds dx ecx es si sp ss Top
// Preserved:
fn1483_1BB9_entry:
	word32 ecx_238 = DPB(ecx, cx, 0)
	word16 sp_108 = fp
	int8 Top_259 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB9:
	byte bh_32 = SLICE(bx, byte, 8)
	bx = DPB(bx, bh_32, 8) (alias)
	byte bh_144 = SLICE(bx, byte, 8)
	byte al_125 = (byte) ax
	byte al_184 = (byte) ax
	word32 ecx_234 = DPB(ecx_238, cx, 0)
	byte cl_199 = (byte) cx
	branch C l1483_1BBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BBF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BBC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B38:
	word16 dx_280 = dx - 0x0001
	byte dh_191 = SLICE(dx_280, byte, 8)
	branch dx_280 != 0x0000 l1483_1B7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B3B:
	word16 cx_13 = cx - 0x0001
	word32 ecx_235 = DPB(ecx_238, cx_13, 0)
	branch dx_280 == 0x0000 && cx_13 != 0x0000 l1483_1B6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B3D:
	selector es_16 = Mem6[ss:sp_108:selector]
	word16 sp_17 = sp_108 + 2
	branch si == bx l1483_1B51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B44:
	byte al_34 = (byte) sp_17 + bh_32 + (si <u bx)
	word16 ax_26 = si - 0x0001
	byte ah_56 = SLICE(sp_17, byte, 8)
	word16 ax_50 = DPB(sp_17, al_34, 0)
	branch al_34 == 0x00 l1483_1B13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B13:
	__sti()
	int8 Top_42
	word16 dx_43
	word32 ecx_49
	word16 ax_51
	word16 bx_52
	call Mem6[0x1483:bx:ptr32] (retsize: 4;)
		uses: ax:ax_50,bx:bx_39,dx:0x02E2,ecx:ecx_48,sp:ax_26,Top:Top_41
		defs: ax:ax_51,bx:bx_52,dx:dx_43,ecx:ecx_49,Top:Top_42
	ecxOut = ecx_49
	dxOut = dx_43
	bxOut = bx_52
	bpOut = bp
	siOut = ax
	diOut = di
	esOut = es_16
	dsOut = <invalid>
	TopOut = Top_42
	return ax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B4E:
	Mem58[ds:ax:byte] = Mem6[ds:ax:byte] + ah_56
	Mem61[ss:ax_26 - 2:word16] = cs
	sp_17 = ax_26 - 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B51:
	es = Mem64[ss:sp_17:selector]
	Mem72[es:0x02FB:byte] = Mem64[ds:ax:byte]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	selector stackArg0 = <invalid>
	word32 ecx_80
	byte SCZO_89 = fn1483_1B91(cx_13, (byte) bx, bx, 0x02FC, ds, stackArg0, out ecx_80, out Top_259)
	__cli()
	Mem92[es:0x02FB:word16] = 0x0A0D
	word16 sp_66 = sp_17 + 2
	bx = Mem92[ss:sp_66 + 0x0008:word16]
	word16 dx_103 = Mem92[ss:sp_66 + 0x000A:word16]
	word16 cx_105 = Mem92[ss:sp_66 + 0x000C:word16]
	word16 ax_107 = Mem92[ss:sp_66 + 0x000E:word16]
	word16 di_94 = Mem92[ss:sp_66:word16]
	si = Mem92[ss:sp_66 + 0x0002:word16]
	bp = Mem92[ss:sp_66 + 0x0004:word16]
	Mem110[es:di_94:byte] = (byte) ax_107
	word16 v37_117 = Mem110[ds:bx + (di_94 + 0x0001):word16] + bx
	Mem118[ds:bx + (di_94 + 0x0001):word16] = v37_117
	Mem123[ds:di_94 + 0x0001:byte] = __rcl(Mem118[ds:di_94 + 0x0001:byte], (byte) cx_105, SLICE(cond(v37_117), bool, 1))
	ax = ax_107 - 0xECBA - SCZO_89
	bh_144 = SLICE(bx, byte, 8) (alias)
	ecx_235 = DPB(ecx_80, cx_105, 0) (alias)
	sp_108 = sp_66 + 0x0010
	di = di_94 + 0x0001
	al_125 = (byte) ax (alias)
	dx_280 = DPB(dx_103, SLICE(dx_103, byte, 8) + (byte) bx, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B6D:
	byte al_128 = al_125 & 0x5C
	word16 sp_132 = sp_108 - 2
	Mem135[ss:sp_132:word16] = si
	word16 bx_149 = DPB(bx, bh_144, 8)
	word16 bx_150 = DPB(bx, bh_144, 8)
	word16 ax_141 = DPB(ax, al_128, 0)
	branch al_128 != 0x00 l1483_1BE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BE8:
	word16 bx_272 = DPB(bx, bh_144 | Mem135[ds:bx_150 + 0x0003:byte], 8)
	Mem155[ss:sp_132 - 2:word16] = es
	ecxOut = ecx_235
	dxOut = dx_280
	bxOut = bx_272
	bpOut = bp - 0x0002
	siOut = 0x7269
	diOut = di
	esOut = es
	dsOut = <invalid>
	TopOut = Top_259
	return ax_141 - 0x85FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1BB9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B75:
	Mem161[ss:sp_132 - 2:word16] = 0x6365
	word16 sp_162 = Mem161[ds:bx_149 + 0x726A:word16] *s 0x0046
	cx = Mem161[ss:sp_162 + 0x000C:word16]
	di = Mem161[ss:sp_162:word16]
	si = Mem161[ss:sp_162 + 0x0002:word16]
	bx = Mem161[ss:sp_162 + 0x0008:word16]
	dh_191 = Mem161[sp_162 + 0x000B:byte] (alias)
	cl_199 = (byte) cx (alias)
	ecx_234 = DPB(ecx_235, cx, 0) (alias)
	al_184 = (byte) Mem161[ss:sp_162 + 0x000E:word16] (alias)
	sp_108 = sp_162 + 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B7F:
	bp = Mem181[ds:si + 0x0065:word16] *s 0x3A64
	Mem188[ss:bp + si:byte] = Mem181[ss:bp + si:byte] & al_184
	byte dh_196 = dh_191 ^ Mem188[ds:bx + di:byte]
	word16 ax_198 = __inw(0x0C)
	Mem203[ds:0x2CF2:byte] = Mem188[ds:0x2CF2:byte] ^ cl_199
	Mem206[ds:di:byte] = Mem203[ds:di:byte] - dh_196
	Mem212[ds:di + 0xEA01:word16] = ~Mem206[ds:di + 0xEA01:word16]
	byte al_207 = (byte) ax_198
	word16 sp_222 = sp_108 - 2
	Mem223[ss:sp_222:word16] = sp_108
	ds = Mem223[ss:sp_222 + 2:selector]
	dx = Mem223[ss:sp_222:word16]
	word16 v34_228 = Mem223[ds:di + 0x0B0A:word16]
	Mem229[ds:di + 0x0B0A:word16] = di
	__inb(0x41)
	__sti()
	Mem242[ds:0xFF1F:word16] = Mem229[ds:0xFF1F:word16] + 0x0001
	word16 ax_213 = DPB(ax_198, al_207 - 0xD9, 0)
	bx = 0xD909
	cx = ax_213
	ecx_238 = DPB(ecx_234, ax_213, 0) (alias)
	sp_108 = sp_222 + 4
	di = v34_228
	ax = DPB(DPB(DPB(cx, 0xAF, 8), cl_199, 0) + 0xA587 + (al_207 <u 0xD9), __inb(dx) - 0xF8 & 0x0A, 0) (alias)
	C = false
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_1C50(byte ah, word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[8..15] dx:[0..15]
// LiveOut:
// Trashed: ax dx Top
// Preserved: sp
fn1483_1C50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1C50:
	word16 ax_7 = DPB(ax, __inb(dx), 0)
	call ax_7 (retsize: 2;)
		uses: ax:ax_7,dx:dx,sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1C50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



