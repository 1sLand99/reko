void fn0800_0150(byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: di si sp
fn0800_0150_entry:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0150:
	fn0800_01E6(al, 0x2714, 0x2714, Mem0[0x0800:0x025A:selector])
	return
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0150_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> si:si di:di ah:<invalid> dx:<invalid> bx:<invalid> -4(fp):di -2(fp):si



void fn0800_0163()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_0163_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0163:
	return
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0163_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_0164(byte al, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0002(8)
// Terminates process
fn0800_0164_entry:
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(8)

l0800_0164:
	msdos_terminate(bArg02)
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// Terminates process

fn0800_0164_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:



byte fn0800_01B9(byte al, selector ds, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al dl
// Trashed: ah al ax dh dl ds dx eax edx rax rdx
// Preserved: ds sp
fn0800_01B9_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01B9:
	msdos_set_interrupt_vector(al, Mem0[ds:0x005B:segptr32])
	msdos_set_interrupt_vector(al, Mem0[ds:0x005F:segptr32])
	msdos_set_interrupt_vector(al, Mem0[ds:0x0063:segptr32])
	ptr32 ds_dx_24 = Mem0[ds:0x0067:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_24)
	byte dl_26
	*dlOut = (byte) ds_dx_24
	return 0x06
// DataOut: al di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01B9_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence ds:dx:<invalid> ds:ds ax:0x2506 -2(fp):ds



void fn0800_01E6(byte al, word16 si, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es si
// LiveOut:
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: es sp
fn0800_01E6_entry:
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01E6:
	byte ah_115
	branch si == 0x26FC l0800_01F0
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01F0:
	ah_115 = 0xFF
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01EC:
	ah_115 = 0x00
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01F2:
	word16 dx_33 = di
	word16 bx_34 = si
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01F6:
	branch bx_34 == di l0800_021D
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_021D:
	branch dx_33 == di l0800_023C
// DataOut: al di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_023C:
	return
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es

fn0800_01E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es

l0800_0221:
	Mem78[es:dx_33:byte] = 0xFF
	branch Mem0[es:dx_33:byte] == 0x00 l0800_0235
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16) Local -0002(16)

l0800_0235:
	word16 sp_98
	byte SCZO_100
	byte Z_101
	byte ah_102
	byte SZO_103
	byte C_104
	word16 dx_105
	word16 bx_107
	selector es_108
	selector ss_109
	byte CZ_110
	byte al_112
	call SEQ(cs, Mem78[es:dx_33 + 0x0002:word16]) (retsize: 2; depth: 4)
		uses: ah_38,al_14,bx_75,C_36,cs_15,CZ_37,di_17,dx_39,es_19,SCZO_76,si_18,sp_79,ss_16,SZO_35,wLoc02_80,Z_77
		defs: ah_102,al_112,bx_107,C_104,cs_111,CZ_110,di_106,dx_105,es_108,SCZO_100,si_99,sp_98,ss_109,SZO_103,Z_101
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_022E:
	word16 sp_81
	byte SCZO_83
	byte Z_84
	byte ah_85
	byte SZO_86
	byte C_87
	word16 dx_88
	word16 bx_90
	selector es_91
	selector ss_92
	byte CZ_93
	byte al_95
	call Mem78[es:dx_33 + 0x0002:ptr32] (retsize: 4; depth: 6)
		uses: ah_38,al_14,bx_75,C_36,cs_15,CZ_37,di_17,dx_39,es_19,SCZO_76,si_18,sp_79,ss_16,SZO_35,wLoc02_80,Z_77
		defs: ah_85,al_95,bx_90,C_87,cs_94,CZ_93,di_89,dx_88,es_91,SCZO_83,si_82,sp_81,ss_92,SZO_86,Z_84
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_01FA:
	branch Mem0[es:bx_34:byte] == 0xFF l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0200:
	byte CZ_59
	branch si == 0x26FC l0800_020C
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_020C:
	CZ_59 = cond(Mem0[es:bx_34 + 0x0001:byte] - ah_115) (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0206:
	CZ_59 = cond(ah_115 - Mem0[es:bx_34 + 0x0001:byte]) (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0210:
	branch CZ_59 l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0212:
	ah_115 = Mem0[es:bx_34 + 0x0001:byte]
	dx_33 = bx_34
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)

l0800_0218:
	bx_34 = bx_34 + 0x0006
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:es -2(fp):es
// LocalsOut: fp(16)



void main(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
main_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_025E:
	Mem11[ds:0x2A27:word16] = 0x0001
	Mem13[ds:0x2E4D:word16] = 0x0000
	Mem14[ds:0x2A1F:word16] = 0x0000
	Mem15[ds:0x2E4F:word16] = 0x0000
	Mem16[ds:0x2A1D:word16] = 0x0000
	Mem17[ds:0x2A17:word16] = 0x0000
	Mem18[ds:0x2A1B:word16] = 0x0000
	Mem19[ds:0x2A11:word16] = 0x0000
	Mem20[ds:0x2A0F:word16] = 0x0000
	Mem21[ds:0x2A0D:word16] = 0x0000
	Mem22[ds:0x2A0B:word16] = 0x3000
	Mem23[ds:0x2E31:word16] = 0x8000
	Mem24[ds:0x2E2F:word16] = 0x1000
	Mem25[ds:0x2A21:word16] = 0x0001
	Mem26[ds:0x29F5:word16] = 0x0000
	Mem27[ds:0x29F3:word16] = 0x0000
	Mem28[ds:0x29F1:word16] = 0x0000
	Mem29[ds:0x29EF:word16] = 0x0000
	Mem30[ds:0x2A13:word16] = 0x0000
	Mem31[ds:0x2A23:word16] = 0x0001
	fn0800_2C9A(ds)
	word16 di_42
	word16 si_276 = fn0800_B2EF(ds, 0x07E8, ds, out di_42)
	selector ds_46
	word16 bp_262 = fn0800_0402(fp - 0x0002, si_276, ds, out ds_46)
	selector ds_48
	byte dl_49 = fn0800_0541(bp_262, ds_46, out ds_48)
	Mem54[ss:fp - 0x000A:word16] = 0x0001
	Mem57[ss:fp - 0x000C:word16] = 0x0001
	fn0800_2DBF(ds_48, wArg00, wArg02)
	Mem65[ss:fp - 0x000A:word16] = 0x0000
	Mem67[ss:fp - 0x000C:word16] = 0x0000
	word16 dx_265 = DPB(dx, dl_49, 0)
	word16 di_70
	byte dl_264
	selector ds_263
	word16 ax_72 = fn0800_9764(dl_49, ds_48, ptrArg00, wArg02, out dl_264, out di_70, out ds_263)
	Mem75[ss:bp_262 - 0x0002:word16] = dx_265
	Mem76[ss:bp_262 - 0x0004:word16] = ax_72
	word16 bx_77 = Mem76[ds_263:0x2A25:word16]
	branch bx_77 >u 0x0008 l0800_0338
// DataOut: bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_031A:
	switch (bx_77 << 0x0001) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0335:
	dl_264 = fn0800_19EE(bp_262, ds_263, out ds_263)
	dx_265 = DPB(dx, dl_264, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_032B:
	dl_264 = fn0800_18D9(bp_262, ds_263, out si_276, out ds_263)
	dx_265 = DPB(dx, dl_264, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0326:
	dl_264 = fn0800_12E2(bp_262, ds_263, out ds_263)
	dx_265 = DPB(dx, dl_264, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0330:
	dl_264 = fn0800_112D(bp_262, si_276, ds_263, out bp_262, out ds_263)
	dx_265 = DPB(dx, dl_264, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0321:
	dl_264 = fn0800_0DE8(bp_262, si_276, ds_263, out bp_262, out ds_263)
	dx_265 = DPB(dx, dl_264, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0338:
	Mem89[ss:fp - 0x000A:word16] = 0x0000
	Mem91[ss:fp - 0x000C:word16] = 0x0000
	byte dl_92
	word16 di_93
	selector ds_94
	word16 ax_97 = fn0800_9764(dl_264, ds_263, ptrArg00, wArg02, out dl_92, out di_93, out ds_94) - Mem91[ss:bp_262 - 0x0004:word16]
	Mem102[ss:bp_262 - 0x0002:word16] = dx_265 - Mem91[ss:bp_262 - 0x0002:word16] - (ax_97 <u 0x0000)
	Mem103[ss:bp_262 - 0x0004:word16] = ax_97
	Mem105[ss:fp - 0x000A:word16] = Mem103[ds_94:0x29F1:word16]
	Mem107[ss:fp - 0x000C:word16] = Mem105[ds_94:0x29EF:word16]
	Mem109[ss:fp - 0x000E:word16] = Mem107[ds_94:0x29F5:word16]
	Mem111[ss:fp - 0x0010:word16] = Mem109[ds_94:0x29F3:word16]
	word16 di_114
	word16 ax_115 = fn0800_0B79(bp_262, si_276, di_93, wArg00, wArg02, wArg04, wArg06, out di_114)
	Mem123[ss:fp - 0x000A:word16] = 0x0000
	Mem125[ss:fp - 0x000C:word16] = 0x003C
	Mem127[ss:fp - 0x000E:word16] = Mem125[ss:bp_262 - 0x0002:word16]
	Mem129[ss:fp - 0x0010:word16] = Mem127[ss:bp_262 - 0x0004:word16]
	word16 dx_130
	word16 bp_131
	word16 si_132
	word16 di_133
	word16 ax_134 = fn0800_8BCA(bp_262, ax_115, di_114, bp, out dx_130, out bp_131, out si_132, out di_133)
	Mem136[ss:fp - 0x0012:word16] = dx_130
	Mem138[ss:fp - 0x0014:word16] = ax_134
	Mem144[ss:fp - 0x0016:word16] = 0x0000
	Mem146[ss:fp - 0x0018:word16] = 0x003C
	Mem149[ss:fp - 0x001A:word16] = 0x0000
	Mem151[ss:fp - 0x001C:word16] = 0x0E10
	Mem153[ss:fp - 0x001E:word16] = Mem151[ss:bp_131 - 0x0002:word16]
	Mem155[ss:fp - 0x0020:word16] = Mem153[ss:bp_131 - 0x0004:word16]
	word16 dx_156
	word16 bp_157
	word16 si_158
	word16 di_159
	word16 ax_160 = fn0800_8BCA(bp_131, si_132, di_133, bp, out dx_156, out bp_157, out si_158, out di_159)
	Mem162[ss:fp - 0x0022:word16] = dx_156
	Mem164[ss:fp - 0x0024:word16] = ax_160
	word16 dx_165
	word16 bp_166
	word16 si_167
	word16 di_168
	word16 ax_169 = fn0800_8BBB(bp_157, si_158, di_159, bp, out dx_165, out bp_166, out si_167, out di_168)
	Mem171[ss:fp - 0x0026:word16] = dx_165
	Mem173[ss:fp - 0x0028:word16] = ax_169
	Mem179[ss:fp - 0x002A:word16] = 0x0000
	Mem181[ss:fp - 0x002C:word16] = 0x0E10
	Mem184[ss:fp - 0x002E:word16] = 0x0000
	Mem186[ss:fp - 0x0030:word16] = 0x5180
	Mem188[ss:fp - 0x0032:word16] = Mem186[ss:bp_166 - 0x0002:word16]
	Mem190[ss:fp - 0x0034:word16] = Mem188[ss:bp_166 - 0x0004:word16]
	word16 dx_191
	word16 bp_192
	word16 si_193
	word16 di_194
	word16 ax_195 = fn0800_8BCA(bp_166, si_167, di_168, bp, out dx_191, out bp_192, out si_193, out di_194)
	Mem197[ss:fp - 0x0036:word16] = dx_191
	Mem199[ss:fp - 0x0038:word16] = ax_195
	word16 dx_200
	word16 bp_201
	word16 si_202
	word16 di_203
	word16 ax_204 = fn0800_8BBB(bp_192, si_193, di_194, bp, out dx_200, out bp_201, out si_202, out di_203)
	Mem206[ss:fp - 0x003A:word16] = dx_200
	Mem208[ss:fp - 0x003C:word16] = ax_204
	Mem217[ss:fp - 0x003E:word16] = SEQ(0x0000, si_202) % 0x0064
	Mem226[ss:fp - 0x0040:word16] = SEQ(SEQ(0x0000, si_202) % 0x0064, si_202) /u 0x0064
	Mem228[ss:fp - 0x0042:word16] = Mem226[ds_94:0x29F1:word16]
	Mem230[ss:fp - 0x0044:word16] = Mem228[ds_94:0x29EF:word16]
	Mem232[ss:fp - 0x0046:word16] = Mem230[ds_94:0x29F5:word16]
	Mem234[ss:fp - 0x0048:word16] = Mem232[ds_94:0x29F3:word16]
	Mem236[ss:fp - 0x004A:word16] = ds_94
	Mem239[ss:fp - 0x004C:word16] = 0x05DC
	Mem242[ss:fp - 0x004E:word16] = 0x0008
	Mem244[ss:fp - 0x0050:word16] = Mem242[ds_94:0x2A13:word16]
	Mem246[ss:fp - 0x0052:word16] = ds_94
	Mem249[ss:fp - 0x0054:word16] = 0x07EB
	word16 di_250
	fn0800_B2EF(ds_94, wArg00, wArg02, out di_250)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ds:<invalid> dx:<invalid> al:<invalid> dh:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ds:<invalid> al:<invalid> dh:<invalid> di:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -84(fp):0x07EB -82(fp):ds -80(fp):<invalid> -78(fp):0x0008 -76(fp):0x05DC -74(fp):ds -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):dx_ax /u 0x0064 -62(fp):dx_ax % 0x0064 -60(fp):0x0000 -58(fp):0x5180 -56(fp):0x0000 -54(fp):0x5180 -52(fp):0x0000 -50(fp):<invalid> -48(fp):0x5180 -46(fp):0x0000 -44(fp):0x0E10 -42(fp):0x0000 -40(fp):0x0000 -38(fp):0x0E10 -36(fp):0x0000 -34(fp):0x0E10 -32(fp):0x0000 -30(fp):<invalid> -28(fp):0x0E10 -26(fp):0x0000 -24(fp):0x003C -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x003C -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_0402(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si sp
fn0800_0402_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0402:
	branch Mem0[ds:0x2A27:word16] != Mem0[ds:0x269A:word16] l0800_0410
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_040D:
	word16 si_366
	bp = fn0800_0DCE(ds, out si_366, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0410:
	ptr32 es_bx_20 = Mem0[ds:0x269C:segptr32]
	selector es_21 = SLICE(es_bx_20, selector, 16)
	word16 bx_23 = (word16) es_bx_20 + (Mem0[ds:0x2A27:word16] << 0x0002)
	Mem26[ss:fp - 0x0006:word16] = Mem0[es_21:bx_23 + 0x0002:word16]
	Mem29[ss:fp - 0x0008:word16] = Mem26[es_21:bx_23:word16]
	word16 sp_33 = fp - 0x0004
	branch fn0800_BFC7(ptrArg00, wArg02) <=u 0x0001 l0800_044D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_042F:
	ptr32 es_bx_348 = Mem29[ds:0x269C:segptr32]
	selector es_349 = SLICE(es_bx_348, selector, 16)
	word16 bx_351 = (word16) es_bx_348 + (Mem29[ds:0x2A27:word16] << 0x0002)
	Mem354[ss:fp - 0x0006:word16] = Mem29[es_349:bx_351 + 0x0002:word16]
	Mem356[ss:fp - 0x0008:word16] = Mem354[es_349:bx_351:word16]
	Mem359[ss:fp - 0x000A:word16] = 0x0001
	word16 si_360
	word16 di_361
	fn0800_0D24(bp, ds, out si_360, out di_361, out ds)
	sp_33 = fp - 0x0004
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:0x0000 ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_044D:
	word16 ax_40 = Mem29[ds:0x2A27:word16]
	word16 sp_52 = sp_33 - 0x0002
	Mem53[ss:sp_52:word16] = DPB(ax_40 << 0x0002, Mem0[Mem0[Mem29[ds:(word16) Mem29[ds:0x269C:segptr32] + (ax_40 << 0x0002):segptr32]:byte]:byte], 0)
	Mem55[ss:sp_52 - 0x0002:word16] = ds
	Mem58[ss:sp_52 - 0x0004:word16] = 0x0829
	byte dl_61
	word16 ax_62 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl_61)
	Mem64[ds:0x2A25:word16] = ax_62
	word16 sp_343 = sp_52 + 0x0002
	branch ax_62 < 0x0009 l0800_0492
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> si:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0474:
	ptr32 es_bx_327 = Mem64[ds:0x269C:segptr32]
	selector es_328 = SLICE(es_bx_327, selector, 16)
	word16 bx_330 = (word16) es_bx_327 + (Mem64[ds:0x2A27:word16] << 0x0002)
	Mem333[ss:sp_52:word16] = Mem64[es_328:bx_330 + 0x0002:word16]
	Mem335[ss:sp_52 - 0x0002:word16] = Mem333[es_328:bx_330:word16]
	Mem338[ss:sp_52 - 0x0004:word16] = 0x0001
	word16 si_339
	word16 di_340
	fn0800_0D24(bp, ds, out si_339, out di_340, out ds)
	sp_343 = sp_52 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0492:
	Mem77[ds:0x2A27:word16] = Mem64[ds:0x2A27:word16] + 0x0001
	branch Mem77[ds:0x2A25:word16] > 0x0002 l0800_04A0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04A0:
	branch Mem77[ds:0x2A27:word16] != Mem77[ds:0x269A:word16] l0800_04AC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04A9:
	word16 si_321
	bp = fn0800_0DCE(ds, out si_321, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04AC:
	word16 ax_111 = Mem77[ds:0x2A27:word16]
	Mem113[ds:0x2A27:word16] = Mem77[ds:0x2A27:word16] + 0x0001
	ptr32 es_bx_116 = Mem113[ds:0x269C:segptr32]
	selector es_117 = SLICE(es_bx_116, selector, 16)
	word16 bx_119 = (word16) es_bx_116 + (ax_111 << 0x0002)
	word16 sp_121 = sp_343 - 0x0002
	Mem122[ss:sp_121:word16] = Mem113[es_117:bx_119 + 0x0002:word16]
	Mem124[ss:sp_121 - 0x0002:word16] = Mem122[es_117:bx_119:word16]
	Mem126[ss:sp_121 - 0x0004:word16] = ds
	Mem129[ss:sp_121 - 0x0006:word16] = 0x4348
	fn0800_BF9E(ptrArg00, wArg02, ptrArg04)
	Mem134[ss:sp_121:word16] = ds
	Mem137[ss:sp_121 - 0x0002:word16] = 0x4348
	fn0800_0C6C(ds, ptrArg00)
	Mem141[ss:sp_121:word16] = ds
	selector es_142 = Mem141[ss:sp_121:selector]
	word16 di_145 = 0x4348
	word16 cx_150 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> ds:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E4:
	branch cx_150 == 0x0000 l0800_04E6
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E4_1:
	di_145 = di_145 + 0x0001
	cx_150 = cx_150 - 0x0001
	branch 0x00 != Mem141[es_142:di_145:byte] l0800_04E4
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E6:
	word16 di_159 = di_145 - 0x0001
	word16 cx_157 = ~cx_150
	byte Z_164 = cond(di_159)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04ED:
	branch cx_157 == 0x0000 l0800_04EF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04ED_2:
	Z_164 = cond(0x2E - Mem141[es_142:di_159:byte]) (alias)
	di_159 = di_159 - 0x0001
	cx_157 = cx_157 - 0x0001
	branch 0x2E != Mem141[es_142:di_159:byte] l0800_04ED
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04EF:
	branch Z_164 l0800_04F8
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04F1:
	di_159 = 0xFFFF
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04F8:
	Mem188[ss:sp_121:word16] = ds
	selector es_189 = Mem188[ss:sp_121:selector]
	Mem193[ss:sp_121:word16] = di_159 + 0x0001
	word16 di_194 = 0x4348
	word16 cx_199 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0507:
	branch cx_199 == 0x0000 l0800_0509
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0507_1:
	di_194 = di_194 + 0x0001
	cx_199 = cx_199 - 0x0001
	branch 0x00 != Mem193[es_189:di_194:byte] l0800_0507
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0509:
	word16 cx_206 = ~cx_199
	word16 di_208 = di_194 - cx_206
	byte Z_210 = cond(di_208)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0510:
	branch cx_206 == 0x0000 l0800_0512
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0510_2:
	Z_210 = cond(0x5C - Mem193[es_189:di_208:byte]) (alias)
	di_208 = di_208 + 0x0001
	cx_206 = cx_206 - 0x0001
	branch 0x5C != Mem193[es_189:di_208:byte] l0800_0510
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0512:
	branch Z_210 l0800_051B
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0514:
	di_208 = 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_051B:
	branch Mem193[ss:sp_121:word16] >u di_208 - 0x0001 l0800_0538
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0523:
	Mem254[ss:sp_121:word16] = ds
	selector es_255 = Mem254[ss:sp_121:selector]
	word16 di_258 = 0x4348
	word16 si_259 = 0x0833
	word16 cx_260 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0530:
	branch cx_260 == 0x0000 l0800_0532
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0530_1:
	di_258 = di_258 + 0x0001
	cx_260 = cx_260 - 0x0001
	branch 0x00 != Mem254[es_255:di_258:byte] l0800_0530
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0532:
	word16 di_272 = di_258 - 0x0001
	word16 cx_274 = 0x0005
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0536:
	branch cx_274 == 0x0000 l0800_0538
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0538:
	Mem252[ds:0x2A19:word16] = 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0536_2:
	Mem279[es_255:di_272:byte] = Mem254[ds:si_259:byte]
	si_259 = si_259 + 0x0001
	di_272 = di_272 + 0x0001
	cx_274 = cx_274 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_049D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_053E:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_0402_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> si:<invalid> cl:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



byte fn0800_0541(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_0541_entry:
	*dsOut = ds
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0541:
	word16 bp_159 = fp - 0x0002
	word16 sp_10 = fp - 0x000A
	word16 ax_15 = Mem0[ds:0x2A27:word16]
	branch ax_15 != Mem0[ds:0x269A:word16] l0800_0555
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_0555:
	branch Mem0[Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_15 << 0x0002):segptr32]:byte]:byte] != 0x2D l0800_056B
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_056B:
	branch Mem0[Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte]:byte] != 0x2F l0800_0584
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_0584:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0581:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0568:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_086D:
	branch Mem0[Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte]:byte] != 0x2D l0800_0886
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0886:
	branch Mem0[Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte]:byte] != 0x2F l0800_089F
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_089F:
	word16 ax_307 = Mem0[ds:0x2A21:word16]
	branch ax_307 == 0x0001 l0800_08AE
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AE:
	word16 sp_516 = sp_10 - 0x0002
	Mem517[ss:sp_516:word16] = ds
	selector es_518 = Mem517[ss:sp_516:selector]
	sp_10 = sp_516 + 0x0002
	word16 di_521 = 0x4271
	word16 si_522 = 0x085B
	word16 cx_523 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB:
	branch cx_523 == 0x0000 l0800_08BD
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB_1:
	di_521 = di_521 + 0x0001
	cx_523 = cx_523 - 0x0001
	branch 0x00 != Mem517[es_518:di_521:byte] l0800_08BB
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BD:
	word16 di_535 = di_521 - 0x0001
	word16 cx_537 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1:
	branch cx_537 == 0x0000 l0800_08C3
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C3:
	branch Mem517[ds:0x2E31:word16] <=u 0x8000 l0800_08D1
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08CB:
	Mem549[ds:0x2E31:word16] = 0x8000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D1:
	Mem548[ds:0x2E2F:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1_2:
	Mem542[es_518:di_535:byte] = Mem517[ds:si_522:byte]
	si_522 = si_522 + 0x0001
	di_535 = di_535 + 0x0001
	cx_537 = cx_537 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08A7:
	branch ax_307 == 0x0002 l0800_08D9
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D9:
	word16 sp_478 = sp_10 - 0x0002
	Mem479[ss:sp_478:word16] = ds
	selector es_480 = Mem479[ss:sp_478:selector]
	sp_10 = sp_478 + 0x0002
	word16 di_483 = 0x4271
	word16 si_484 = 0x085D
	word16 cx_485 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6:
	branch cx_485 == 0x0000 l0800_08E8
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6_1:
	di_483 = di_483 + 0x0001
	cx_485 = cx_485 - 0x0001
	branch 0x00 != Mem479[es_480:di_483:byte] l0800_08E6
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E8:
	word16 di_497 = di_483 - 0x0001
	word16 cx_499 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC:
	branch cx_499 == 0x0000 l0800_08EE
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EE:
	branch Mem479[ds:0x2E31:word16] <=u 0x1000 l0800_08FC
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08F6:
	Mem511[ds:0x2E31:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08FC:
	Mem510[ds:0x2E2F:word16] = 0x00FF
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC_2:
	Mem504[es_480:di_497:byte] = Mem479[ds:si_484:byte]
	si_484 = si_484 + 0x0001
	di_497 = di_497 + 0x0001
	cx_499 = cx_499 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AC:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0902:
	branch Mem0[ds:0x2A23:word16] != 0x0002 l0800_0911
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0909:
	Mem474[ds:0x2A1D:word16] = 0x0000
	Mem475[ds:0x2E4F:word16] = 0x0000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0911:
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_092D
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0918:
	word16 sp_437 = sp_10 - 0x0002
	Mem438[ss:sp_437:word16] = ds
	selector es_439 = Mem438[ss:sp_437:selector]
	sp_10 = sp_437 + 0x0002
	word16 di_442 = 0x4271
	word16 si_443 = 0x0653
	word16 cx_444 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925:
	branch cx_444 == 0x0000 l0800_0927
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925_1:
	di_442 = di_442 + 0x0001
	cx_444 = cx_444 - 0x0001
	branch 0x00 != Mem438[es_439:di_442:byte] l0800_0925
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0927:
	word16 di_456 = di_442 - 0x0001
	word16 cx_458 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B:
	branch cx_458 == 0x0000 l0800_092D
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092D:
	branch Mem0[ds:0x2A1D:word16] == 0x0000 l0800_0949
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0934:
	word16 sp_403 = sp_10 - 0x0002
	Mem404[ss:sp_403:word16] = ds
	selector es_405 = Mem404[ss:sp_403:selector]
	sp_10 = sp_403 + 0x0002
	word16 di_408 = 0x4271
	word16 si_409 = 0x085F
	word16 cx_410 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941:
	branch cx_410 == 0x0000 l0800_0943
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941_1:
	di_408 = di_408 + 0x0001
	cx_410 = cx_410 - 0x0001
	branch 0x00 != Mem404[es_405:di_408:byte] l0800_0941
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0943:
	word16 di_422 = di_408 - 0x0001
	word16 cx_424 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947:
	branch cx_424 == 0x0000 l0800_0949
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0949:
	word16 sp_344 = sp_10 - 0x0002
	Mem345[ss:sp_344:word16] = ds
	selector es_346 = Mem345[ss:sp_344:selector]
	word16 di_349 = 0x4271
	word16 si_350 = 0x0861
	word16 cx_351 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956:
	branch cx_351 == 0x0000 l0800_0958
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956_1:
	di_349 = di_349 + 0x0001
	cx_351 = cx_351 - 0x0001
	branch 0x00 != Mem345[es_346:di_349:byte] l0800_0956
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0958:
	word16 di_363 = di_349 - 0x0001
	word16 cx_365 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C:
	branch cx_365 == 0x0000 l0800_095E
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095E:
	branch Mem345[ds:0x2A25:word16] != 0x0000 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0965:
	branch Mem0[Mem0[Mem345[ds:(Mem345[ds:0x2A23:word16] << 0x0002) + 0x0545:segptr32]:byte]:byte] == 0x00 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0977:
	Mem385[ss:sp_344:word16] = ds
	Mem388[ss:sp_344 - 0x0002:word16] = 0x2E75
	Mem390[ss:sp_344 - 0x0004:word16] = ds
	Mem393[ss:sp_344 - 0x0006:word16] = 0x4271
	selector ds_394
	dl = fn0800_09A3(bp_159, ds, out ds_394)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C_2:
	Mem370[es_346:di_363:byte] = Mem345[ds:si_350:byte]
	si_350 = si_350 + 0x0001
	di_363 = di_363 + 0x0001
	cx_365 = cx_365 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947_2:
	Mem429[es_405:di_422:byte] = Mem404[ds:si_409:byte]
	si_409 = si_409 + 0x0001
	di_422 = di_422 + 0x0001
	cx_424 = cx_424 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B_2:
	Mem463[es_439:di_456:byte] = Mem438[ds:si_443:byte]
	si_443 = si_443 + 0x0001
	di_456 = di_456 + 0x0001
	cx_458 = cx_458 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_089C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0883:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_058A:
	word16 ax_108 = Mem0[ds:0x2A27:word16]
	word16 sp_120 = sp_10 - 0x0002
	Mem121[ss:sp_120:word16] = DPB(ax_108 << 0x0002, Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_108 << 0x0002):segptr32] + 0x0001:byte], 0)
	Mem123[ss:sp_120 - 0x0002:word16] = ds
	Mem126[ss:sp_120 - 0x0004:word16] = 0x0838
	word16 ax_131 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl)
	sp_10 = sp_120 + 0x0002
	word16 si_133 = ax_131
	branch ax_131 < 0x000B l0800_05CF
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05B1:
	ptr32 es_bx_277 = Mem126[ds:0x269C:segptr32]
	selector es_278 = SLICE(es_bx_277, selector, 16)
	word16 bx_280 = (word16) es_bx_277 + (Mem126[ds:0x2A27:word16] << 0x0002)
	Mem283[ss:sp_120:word16] = Mem126[es_278:bx_280 + 0x0002:word16]
	Mem285[ss:sp_120 - 0x0002:word16] = Mem283[es_278:bx_280:word16]
	Mem288[ss:sp_120 - 0x0004:word16] = 0x0002
	word16 di_290
	dl = fn0800_0D24(bp_159, ds, out si_133, out di_290, out ds)
	sp_10 = sp_120 + 0x0002
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ah:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05CF:
	branch si_133 < 0x0006 l0800_05D7
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D7:
	ptr32 es_bx_192 = Mem126[ds:0x269C:segptr32]
	selector es_193 = SLICE(es_bx_192, selector, 16)
	word16 bx_195 = (word16) es_bx_192 + (Mem126[ds:0x2A27:word16] << 0x0002)
	word16 sp_197 = sp_10 - 0x0002
	Mem198[ss:sp_197:word16] = Mem126[es_193:bx_195 + 0x0002:word16]
	Mem200[ss:sp_197 - 0x0002:word16] = Mem198[es_193:bx_195:word16]
	sp_10 = sp_197 + 0x0002
	branch fn0800_BFC7(ptrArg00, wArg02) != 0x0002 l0800_0622
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0622:
	ptr32 es_bx_263 = Mem200[ds:0x269C:segptr32]
	selector es_264 = SLICE(es_bx_263, selector, 16)
	word16 bx_266 = (word16) es_bx_263 + (Mem200[ds:0x2A27:word16] << 0x0002)
	word16 dx_268 = Mem200[es_264:bx_266:word16]
	Mem272[ss:bp_159 - 0x0002:word16] = Mem200[es_264:bx_266 + 0x0002:word16]
	Mem273[ss:bp_159 - 0x0004:word16] = dx_268 + 0x0002
	dl = (byte) (dx_268 + 0x0002) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05F6:
	Mem237[ds:0x2A27:word16] = Mem200[ds:0x2A27:word16] + 0x0001
	branch Mem237[ds:0x2A27:word16] != Mem237[ds:0x269A:word16] l0800_0606
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0603:
	bp_159 = fn0800_0DCE(ds, out si_133, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0606:
	ptr32 es_bx_247 = Mem237[ds:0x269C:segptr32]
	selector es_248 = SLICE(es_bx_247, selector, 16)
	word16 bx_250 = (word16) es_bx_247 + (Mem237[ds:0x2A27:word16] << 0x0002)
	word16 dx_253 = Mem237[es_248:bx_250:word16]
	Mem255[ss:bp_159 - 0x0002:word16] = Mem237[es_248:bx_250 + 0x0002:word16]
	Mem256[ss:bp_159 - 0x0004:word16] = dx_253
	dl = (byte) dx_253 (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_063F:
	branch (int16) Mem0[Mem0[Mem200[ss:bp_159 - 0x0004:segptr32]:byte]:byte] != 0x0000 l0800_0659
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_064A:
	Mem222[ss:sp_197:word16] = ds
	Mem225[ss:sp_197 - 0x0002:word16] = 0x05DC
	Mem228[ss:sp_197 - 0x0004:word16] = 0x0002
	word16 di_230
	dl = fn0800_0D24(bp_159, ds, out si_133, out di_230, out ds)
	sp_10 = sp_197 + 0x0002
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D4:
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0659:
	branch si_133 <=u 0x000A l0800_0663
// DataOut: bp bx dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0663:
	word16 bx_168 = si_133 << 0x0001
	word16 sp_170
	word16 bp_171
	selector ss_172
	byte SCZO_173
	word16 si_174
	word16 di_175
	word16 ax_176
	selector ds_177
	byte Z_178
	selector es_179
	word16 bx_180
	byte al_181
	byte SO_182
	byte CZ_183
	byte SZO_184
	byte C_185
	word16 cx_186
	word16 dx_187
	byte dl_188
	call Mem126[0x0800:bx_168 + 0x098D:word16] (retsize: 4; depth: 4)
		uses: al_151,ax_155,bp_159,bx_168,C_150,cx,CZ_164,di_157,dl_148,ds_154,dx_149,es_152,SCZO_169,si_158,SO_147,sp_160,ss,SZO_156,wLoc02_4,wLoc08_9,wLoc0A_12,Z_153
		defs: al_181,ax_176,bp_171,bx_180,C_185,cx_186,CZ_183,di_175,dl_188,ds_177,dx_187,es_179,SCZO_173,si_174,SO_182,sp_170,ss_172,SZO_184,Z_178
	return dl_188
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0660:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0869:
	Mem166[ds:0x2A27:word16] = Mem126[ds:0x2A27:word16] + 0x0001
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0552:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0987:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> ah:<invalid> -18(fp):0x4271 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0541_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> dh:0x00 bl:<invalid> bh:<invalid> ch:<invalid> -18(fp):0x4271 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_09A3(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_09A3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_09A3:
	word16 ax_34 = ((int16) Mem0[ds:0x0A74:byte] << 0x08) + DPB(bx, 0x00, 8)
	ui32 ax_dx_42 = SEQ(((int16) Mem0[ds:0x0A72:byte] << 0x08) + DPB(dx, 0x00, 8) + (ax_34 <u 0x0000), ax_34 + 0x0020)
	word16 ax_45 = SLICE(ax_dx_42 + 0x00000020, word16, 16)
	word16 dx_309 = (word16) (ax_dx_42 + 0x00000020)
	selector ds_52 = fn0800_4311(ds, dx_309, ax_45)
	Mem55[ss:fp - 0x0004:word16] = dx_309
	Mem57[ss:fp - 0x0006:word16] = ax_45
	Mem58[ss:fp - 0x0008:word16] = dx_309
	Mem59[ss:fp - 0x000A:word16] = ax_45
	Mem61[ss:fp - 0x0010:word16] = Mem59[ss:fp - 0x0004:word16]
	Mem63[ss:fp - 0x0012:word16] = ax_45
	Mem65[ss:fp - 0x0014:word16] = ds_52
	Mem68[ss:fp - 0x0016:word16] = 0x0A6E
	selector ds_143
	word16 bp_75 = fn0800_867A(wArg02, psegArg04, wArg06, psegArg08, out ds_143)
	word16 sp_282 = fp - 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0A4F:
	word16 si_128 = Mem68[ss:bp_75 + 0x0004:word16]
	word16 sp_90 = sp_282 - 0x0002
	Mem91[ss:sp_90:word16] = ds_143
	ptr32 es_di_93 = Mem91[ss:bp_75 - 0x0008:segptr32]
	selector ds_92 = Mem91[ss:bp_75 + 0x0006:selector]
	word16 di_109 = (word16) es_di_93
	selector es_95 = SLICE(es_di_93, selector, 16)
	word16 ax_140 = 0x0000
	word16 cx_102 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> Sequence es:di:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E:
	branch cx_102 == 0x0000 l0800_0A60
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E_1:
	di_109 = di_109 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x00 != Mem91[es_95:di_109:byte] l0800_0A5E
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A60:
	word16 cx_112 = ~cx_102
	word16 di_114 = di_109 - cx_112
	byte SCZO_116 = cond(di_114)
	byte Z_118 = SCZO_116
	byte C_119 = SCZO_116
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64:
	branch cx_112 == 0x0000 l0800_0A66
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64_2:
	byte SCZO_339 = cond(Mem91[ds_92:si_356:byte] - Mem91[es_95:di_355:byte])
	Z_118 = SCZO_339 (alias)
	C_119 = SCZO_339 (alias)
	si_128 = si_356 + 0x0001
	di_114 = di_355 + 0x0001
	cx_112 = cx_112 - 0x0001
	word16 di_355 = di_114
	word16 si_356 = si_128
	branch Mem91[ds_92:si_356:byte] != Mem91[es_95:di_355:byte] l0800_0A64
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A66:
	branch Z_118 l0800_0A6D
// DataOut: ax bp sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A68:
	word16 ax_331 = 0x0000 - C_119
	ax_140 = ax_331 - 0xFFFF - (ax_331 <u 0x0000)
// DataOut: ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A6D:
	ds_143 = Mem91[ss:sp_90:selector]
	branch ax_140 != 0x0000 l0800_09FF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_09FF:
	ptr32 es_di_223 = Mem91[ss:bp_75 - 0x0008:segptr32]
	word16 di_224 = (word16) es_di_223
	selector es_225 = SLICE(es_di_223, selector, 16)
	word16 cx_231 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07:
	branch cx_231 == 0x0000 l0800_0A09
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07_1:
	di_224 = di_358 + 0x0001
	cx_231 = cx_231 - 0x0001
	word16 di_358 = di_224
	branch 0x00 != Mem91[es_225:di_358:byte] l0800_0A07
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A09:
	word16 di_252 = Mem91[ss:bp_75 - 0x0008:word16]
	Mem255[ss:sp_90:word16] = (int16) Mem91[es_225:Mem91[ss:bp_75 - 0x0008:word16] + (~cx_231 - 0x0001) + 0x0001:byte] << 0x08
	word16 cx_261 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25:
	branch cx_261 == 0x0000 l0800_0A27
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25_2:
	di_252 = di_359 + 0x0001
	cx_261 = cx_261 - 0x0001
	word16 di_359 = di_252
	branch 0x00 != Mem255[es_225:di_359:byte] l0800_0A25
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A27:
	sp_282 = sp_90 + 0x0002
	word16 dx_283 = Mem255[ss:sp_90:word16] + DPB(Mem255[ss:bp_75 - 0x0008:word16] + (~cx_261 - 0x0001), 0x00, 8)
	word16 di_286 = Mem255[ss:bp_75 - 0x0008:word16]
	word16 cx_293 = 0xFFFF
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42:
	branch cx_293 == 0x0000 l0800_0A44
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42_3:
	di_286 = di_360 + 0x0001
	cx_293 = cx_293 - 0x0001
	word16 di_360 = di_286
	branch 0x00 != Mem255[es_225:di_360:byte] l0800_0A42
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A44:
	word16 dx_308 = dx_283 + (~cx_293 - 0x0001)
	Mem311[ss:bp_75 - 0x0008:word16] = Mem255[ss:bp_75 - 0x0008:word16] + (dx_308 + 0x0003)
	dx_309 = dx_308 + 0x0003
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A72:
	ptr32 es_di_149 = Mem91[ss:bp_75 - 0x0008:segptr32]
	word16 di_150 = (word16) es_di_149
	selector es_151 = SLICE(es_di_149, selector, 16)
	word16 cx_157 = 0xFFFF
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A:
	branch cx_157 == 0x0000 l0800_0A7C
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A_1:
	di_150 = di_357 + 0x0001
	cx_157 = cx_157 - 0x0001
	word16 di_357 = di_150
	branch 0x00 != Mem91[es_151:di_357:byte] l0800_0A7A
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7C:
	Mem172[ss:bp_75 - 0x0008:word16] = Mem91[ss:bp_75 - 0x0008:word16] + ~cx_157
	ptr32 es_bx_173 = Mem172[ss:bp_75 - 0x0008:segptr32]
	Mem187[ss:sp_90:word16] = ((int16) Mem0[Mem0[es_bx_173:byte]:byte] << 0x08) + DPB(dx_309, 0x00, 8) + 0x0002
	Mem189[ss:sp_90 - 0x0002:word16] = Mem187[ss:bp_75 - 0x0006:word16]
	Mem191[ss:sp_90 - 0x0004:word16] = (word16) es_bx_173
	Mem193[ss:sp_90 - 0x0006:word16] = Mem191[ss:bp_75 + 0x000A:word16]
	Mem195[ss:sp_90 - 0x0008:word16] = Mem193[ss:bp_75 + 0x0008:word16]
	selector ds_197 = fn0800_B0F3(wArg00, wArg02, psegArg04, wArg06, psegArg08)
	Mem201[ss:sp_90:word16] = Mem195[ss:bp_75 - 0x0002:word16]
	Mem203[ss:sp_90 - 0x0002:word16] = Mem201[ss:bp_75 - 0x0004:word16]
	selector ds_204
	return fn0800_4346(ds_197, wArg00, wArg02, out ds_204)
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_09A3_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> ah:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_0ABC(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0004(16) Stack +0006(16)
fn0800_0ABC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16)

l0800_0ABC:
	fn0800_35A3(ds, wArg04, wArg06)
	Mem31[ss:fp - 0x0014:word16] = Mem0[ds:0x2A05:word16]
	Mem33[ss:fp - 0x0016:word16] = Mem31[ds:0x2A03:word16]
	Mem35[ss:fp - 0x0018:word16] = Mem33[ds:0x2A09:word16]
	Mem37[ss:fp - 0x001A:word16] = Mem35[ds:0x2A07:word16]
	word16 di_40
	word16 ax_41 = fn0800_0B79(fp - 0x0002, wArg02, di, wArg00, wArg02, wArg04, wArg06, out di_40)
	Mem51[ss:fp - 0x0014:word16] = SEQ(0x0000, ax_41) % 0x0064
	Mem60[ss:fp - 0x0016:word16] = SEQ(SEQ(0x0000, ax_41) % 0x0064, ax_41) /u 0x0064
	Mem62[ss:fp - 0x0018:word16] = Mem60[ds:0x2A05:word16]
	Mem64[ss:fp - 0x001A:word16] = Mem62[ds:0x2A03:word16]
	Mem66[ss:fp - 0x001C:word16] = Mem64[ds:0x2A09:word16]
	Mem68[ss:fp - 0x001E:word16] = Mem66[ds:0x2A07:word16]
	Mem70[ss:fp - 0x0020:word16] = ss
	Mem73[ss:fp - 0x0022:word16] = fp - 0x0010
	Mem76[ss:fp - 0x0024:word16] = 0x0014
	Mem78[ss:fp - 0x0026:word16] = 0x0014
	Mem80[ss:fp - 0x0028:word16] = ds
	Mem83[ss:fp - 0x002A:word16] = 0x0866
	word16 di_84
	word16 si_129 = fn0800_B2EF(ds, wArg00, wArg02, out di_84)
	word16 sp_145 = fp - 0x0012
	branch Mem83[ds:0x2A25:word16] == 0x0002 l0800_0B2E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0B2A:
	branch si_129 == 0x0000 l0800_0B47
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B2E:
	word16 bx_131 = si_129 << 0x0001
	Mem135[ss:fp - 0x0014:word16] = Mem83[ds:(bx_131 << 0x0001) + 0x059B:word16]
	Mem137[ss:fp - 0x0016:word16] = Mem135[ds:(bx_131 << 0x0001) + 0x0599:word16]
	Mem139[ss:fp - 0x0018:word16] = ds
	Mem142[ss:fp - 0x001A:word16] = 0x0889
	word16 di_143
	fn0800_B2EF(ds, wArg00, wArg02, out di_143)
	sp_145 = fp - 0x0012
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B47:
	word16 sp_94 = sp_145 - 0x0002
	Mem95[ss:sp_94:word16] = ds
	Mem98[ss:sp_94 - 0x0002:word16] = 0x0827
	word16 di_99
	fn0800_B2EF(ds, wArg00, wArg02, out di_99)
	word16 ax_102 = Mem98[ds:0x2A09:word16]
	word16 v16_104 = Mem98[ds:0x29F3:word16] + Mem98[ds:0x2A07:word16]
	Mem105[ds:0x29F3:word16] = v16_104
	Mem109[ds:0x29F5:word16] = Mem105[ds:0x29F5:word16] + ax_102 + (v16_104 <u 0x0000)
	word16 ax_110 = Mem109[ds:0x2A05:word16]
	word16 v18_112 = Mem109[ds:0x29EF:word16] + Mem109[ds:0x2A03:word16]
	Mem113[ds:0x29EF:word16] = v18_112
	Mem117[ds:0x29F1:word16] = Mem113[ds:0x29F1:word16] + ax_110 + (v18_112 <u 0x0000)
	Mem120[ds:0x2A13:word16] = Mem117[ds:0x2A13:word16] + 0x0001
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp

fn0800_0ABC_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ds:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp



word16 fn0800_0B79(word16 bp, word16 si, word16 di, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax di
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_0B79_entry:
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B79:
	word16 sp_120 = fp - 0x0002
	word16 bp_116 = fp - 0x0002
	branch (wArg02 | wArg04) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B84:
	branch (wArg06 | wArg08) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B8C:
	branch wArg04 >u wArg08 l0800_0BCE
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B99:
	branch wArg02 >u wArg06 l0800_0BCE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0BCE:
	ui32 ax_dx_73 = SEQ(Mem0[ss:bp_116 + 0x0006:word16], Mem0[ss:bp_116 + 0x0004:word16] - Mem0[ss:bp_116 + 0x0008:word16]) - Mem0[ss:bp_116 + 0x0008:ui32]
	word16 ax_74 = SLICE(ax_dx_73, word16, 16)
	word16 dx_75 = (word16) ax_dx_73
	branch ax_74 >u 0x0006 l0800_0BA2
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BDF:
	branch ax_74 != 0x0006 l0800_0BE7
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE1:
	branch dx_75 >u 0x8DB8 l0800_0BA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BA2:
	word16 sp_87 = sp_120 - 0x0002
	Mem88[ss:sp_87:word16] = 0x0000
	Mem90[ss:sp_87 - 0x0002:word16] = 0x000A
	Mem92[ss:sp_87 - 0x0004:word16] = Mem90[ss:bp_116 + 0x0006:word16]
	Mem94[ss:sp_87 - 0x0006:word16] = Mem92[ss:bp_116 + 0x0004:word16]
	word16 dx_95
	word16 bp_96
	word16 si_97
	word16 di_98
	word16 ax_99 = fn0800_8BC2(bp_116, si, di, bp, out dx_95, out bp_96, out si_97, out di_98)
	Mem101[ss:bp_96 + 0x0006:word16] = dx_95
	Mem102[ss:bp_96 + 0x0004:word16] = ax_99
	Mem108[ss:sp_87:word16] = 0x0000
	Mem110[ss:sp_87 - 0x0002:word16] = 0x000A
	Mem112[ss:sp_87 - 0x0004:word16] = Mem110[ss:bp_96 + 0x000A:word16]
	Mem114[ss:sp_87 - 0x0006:word16] = Mem112[ss:bp_96 + 0x0008:word16]
	word16 dx_115
	word16 ax_119 = fn0800_8BC2(bp_96, si_97, di_98, bp, out dx_115, out bp_116, out si, out di)
	Mem121[ss:bp_116 + 0x000A:word16] = dx_115
	Mem122[ss:bp_116 + 0x0008:word16] = ax_119
	sp_120 = sp_87 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE7:
	word16 sp_124 = sp_120 - 0x0002
	Mem125[ss:sp_124:word16] = Mem0[ss:bp_116 + 0x0006:word16]
	Mem127[ss:sp_124 - 0x0002:word16] = Mem125[ss:bp_116 + 0x0004:word16]
	ui32 cx_bx_133 = SEQ(Mem127[ss:bp_116 + 0x0006:word16], Mem127[ss:bp_116 + 0x0004:word16] - Mem127[ss:bp_116 + 0x0008:word16]) - Mem127[ss:bp_116 + 0x0008:ui32]
	word16 dx_140
	word16 ax_141 = fn0800_8F18(0x2710, SLICE(cx_bx_133, word16, 16), 0x0000, (word16) cx_bx_133, out dx_140)
	Mem143[ss:sp_124 - 0x0004:word16] = dx_140
	Mem145[ss:sp_124 - 0x0006:word16] = ax_141
	word16 dx_146
	word16 bp_147
	word16 si_148
	word16 di_149
	return fn0800_8BC2(bp_116, si, di, bp, out dx_146, out bp_147, out si_148, out di_149)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A

l0800_0B9E:
	return 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_0B79_exit:
// DataOut: ax di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A



word16 fn0800_0C08(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_0C08_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0C08:
	word16 si_10 = wArg02
	word16 cx_11 = 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0C15:
	word32 dx_ax_19 = SEQ(SEQ(0x0000, si_10) % 0x0002, si_10)
	si_10 = dx_ax_19 /u 0x0002
	branch dx_ax_19 /u 0x0002 != 0x0000 l0800_0C14
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> bx:0x0002 ax:dx_ax /u 0x0002 | dx_ax /u 0x0002 dx:dx_ax % 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C14:
	cx_11 = cx_11 + 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:dx_ax /u 0x0002 cx:<invalid> bx:0x0002 ax:dx_ax /u 0x0002 | dx_ax /u 0x0002 dx:dx_ax % 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C24:
	return cx_11
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:dx_ax /u 0x0002 cx:<invalid> bx:0x0002 ax:dx_ax /u 0x0002 | dx_ax /u 0x0002 dx:dx_ax % 0x0002 -4(fp):si -2(fp):bp

fn0800_0C08_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cx:<invalid> bx:0x0002 ax:<invalid> dx:dx_ax % 0x0002 -4(fp):si -2(fp):bp



word16 fn0800_0C29(selector ds, word16 wArg02, word16 wArg04, byte bArg06, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0006(8)
fn0800_0C29_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(8)

l0800_0C29:
	byte dl_15
	byte al_16 = fn0800_97CC(ds, (int16) bArg06, out dl_15)
	word16 wLoc06_25 = wArg02
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C4F:
	selector es_31 = SLICE(ptrLoc06, selector, 16)
	word16 bx_32 = (word16) ptrLoc06
	branch Mem0[es_31:bx_32:byte] == 0x00 l0800_0C5D
// DataOut: bx cl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C58:
	branch Mem0[es_31:bx_32:byte] != al_16 l0800_0C4C
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C4C:
	wLoc06_25 = wLoc06_25 + 0x0001
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C5D:
	word16 ax_39 = wLoc06_25 - wArg02
	byte dl_44
	*dlOut = (byte) (0x0000 - (ax_39 <u 0x0000))
	return ax_39
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0C29_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_0C6C_entry:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C6C:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C88:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] != 0x00 l0800_0C71
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C71:
	Mem43[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] = fn0800_97CC(ds, (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte], out dl)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C91:
	return dl
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

fn0800_0C6C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>



void fn0800_0C93(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0C93_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0C93:
	fn0800_3509(ds, wArg02, wArg04)
	Mem30[ss:fp - 0x006E:word16] = ss
	word16 si_199 = 0x2714
	selector es_31 = Mem30[ss:fp - 0x006E:selector]
	word16 sp_184 = fp - 0x006C
	word16 di_204 = fp - 0x0068
	word16 ax_192 = 0x0000
	word16 cx_205 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0CB9:
	branch cx_205 == 0x0000 l0800_0CBB
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CB9_1:
	di_204 = di_204 + 0x0001
	cx_205 = cx_205 - 0x0001
	branch 0x00 != Mem30[es_31:di_204:byte] l0800_0CB9
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBB:
	word16 cx_201 = ~cx_205
	word16 di_200 = di_204 - cx_201
	byte SCZO_48 = cond(di_200)
	byte Z_197 = SCZO_48
	byte C_198 = SCZO_48
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBF:
	branch cx_201 == 0x0000 l0800_0CC1
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBF_2:
	byte SCZO_195 = cond(Mem30[ds:si_207:byte] - Mem30[es_31:di_208:byte])
	Z_197 = SCZO_195 (alias)
	C_198 = SCZO_195 (alias)
	si_199 = si_207 + 0x0001
	di_200 = di_208 + 0x0001
	cx_201 = cx_201 - 0x0001
	word16 si_207 = si_199
	word16 di_208 = di_200
	branch Mem30[ds:si_207:byte] != Mem30[es_31:di_208:byte] l0800_0CBF
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC1:
	branch Z_197 l0800_0CC8
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC3:
	word16 ax_189 = 0x0000 - C_198
	ax_192 = ax_189 - 0xFFFF - (ax_189 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC8:
	branch ax_192 == 0x0000 l0800_0D0D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CCC:
	Mem103[ss:fp - 0x006E:word16] = ss
	Mem106[ss:fp - 0x0070:word16] = fp - 0x0068
	Mem108[ss:fp - 0x0072:word16] = ds
	Mem111[ss:fp - 0x0074:word16] = 0x088F
	word16 di_112
	fn0800_B2EF(ds, wArg00, wArg02, out di_112)
	Mem116[ss:fp - 0x006E:word16] = ss
	Mem121[ss:fp - 0x006E:word16] = Mem116[ss:fp - 0x006E:selector]
	Mem123[ss:fp - 0x0070:word16] = ds
	selector es_124 = Mem123[ss:fp - 0x0070:selector]
	Mem127[ss:fp - 0x0070:word16] = fp - 0x0068
	word16 di_130 = Mem127[ss:fp - 0x0070:word16]
	selector es_133 = Mem127[ss:fp - 0x006E:selector]
	Mem136[ss:fp - 0x006E:word16] = es_124
	Mem138[ss:fp - 0x0070:word16] = 0x2714
	word16 cx_142 = 0xFFFF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF5:
	branch cx_142 == 0x0000 l0800_0CF7
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF5_1:
	di_130 = di_130 + 0x0001
	cx_142 = cx_142 - 0x0001
	branch 0x00 != Mem138[es_133:di_130:byte] l0800_0CF5
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF7:
	word16 di_157 = Mem138[ss:fp - 0x0070:word16]
	selector es_160 = Mem138[ss:fp - 0x006E:selector]
	Mem163[ss:fp - 0x006E:word16] = ds
	word16 cx_149 = ~cx_142
	word16 cx_151 = cx_149 >>u 0x0001
	word16 si_156 = di_130 - cx_149
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D06:
	branch cx_151 == 0x0000 l0800_0D08
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D08:
	word16 cx_173 = cx_151 * 0x0002 + (cx_149 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0A:
	branch cx_173 == 0x0000 l0800_0D0C
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0C:
	ds = Mem163[ss:fp - 0x006E:selector]
	sp_184 = fp - 0x006C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0D:
	word16 sp_82 = sp_184 - 0x0002
	Mem83[ss:sp_82:word16] = Mem30[ss:fp + 0x0004:word16]
	Mem85[ss:sp_82 - 0x0002:word16] = Mem83[ss:fp + 0x0002:word16]
	Mem87[ss:sp_82 - 0x0004:word16] = ds
	Mem90[ss:sp_82 - 0x0006:word16] = 0x089E
	word16 di_92
	fn0800_B2EF(ds, wArg00, wArg02, out di_92)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

fn0800_0C93_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

l0800_0D0A_1:
	Mem179[es_160:di_157:byte] = Mem163[es_133:si_156:byte]
	si_156 = si_156 + 0x0001
	di_157 = di_157 + 0x0001
	cx_173 = cx_173 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D06_2:
	Mem169[es_160:di_157:word16] = Mem163[es_133:si_156:word16]
	si_156 = si_156 + 0x0002
	di_157 = di_157 + 0x0002
	cx_151 = cx_151 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



byte fn0800_0D24(word16 bp, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_0D24_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0D24:
	selector ds_17 = fn0800_0DA9(fp - 0x0002, ds, Mem0[ds:0x29DB:word16], Mem0[ds:0x29DD:word16])
	Mem21[ss:fp - 0x0004:word16] = ds_17
	Mem25[ss:fp - 0x0006:word16] = 0x4412
	Mem27[ss:fp - 0x0008:word16] = Mem25[ds_17:0x29D9:word16]
	Mem29[ss:fp - 0x000A:word16] = Mem27[ds_17:0x29D7:word16]
	selector ds_32 = fn0800_0DA9(fp - 0x0002, ds_17, wArg00, wArg02)
	Mem36[ss:fp - 0x0004:word16] = ds_32
	Mem39[ss:fp - 0x0006:word16] = 0x43AD
	Mem41[ss:fp - 0x0008:word16] = Mem39[ds_32:0x29D5:word16]
	Mem43[ss:fp - 0x000A:word16] = Mem41[ds_32:0x29D3:word16]
	selector ds_44 = fn0800_0DA9(fp - 0x0002, ds_32, wArg00, wArg02)
	word16 bx_46 = Mem43[ss:fp + 0x0002:word16]
	Mem51[ss:fp - 0x0004:word16] = Mem43[ds_44:(bx_46 << 0x0002) + 0x055F:word16]
	Mem53[ss:fp - 0x0006:word16] = Mem51[ds_44:(bx_46 << 0x0002) + 0x055D:word16]
	Mem55[ss:fp - 0x0008:word16] = ds_44
	Mem58[ss:fp - 0x000A:word16] = 0x08A2
	word16 di_59
	fn0800_B2EF(ds_44, wArg00, wArg02, out di_59)
	ptr32 es_bx_62 = Mem58[ss:fp + 0x0004:segptr32]
	word16 sp_101 = fp - 0x0002
	word16 bx_63 = (word16) es_bx_62
	branch Mem0[Mem0[es_bx_62:byte]:byte] == 0x00 l0800_0D92
// DataOut: bp bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0D83:
	Mem91[ss:fp - 0x0004:word16] = Mem58[ss:fp + 0x0006:word16]
	Mem93[ss:fp - 0x0006:word16] = bx_63
	Mem95[ss:fp - 0x0008:word16] = ds_44
	Mem98[ss:fp - 0x000A:word16] = 0x08A6
	word16 di_99
	fn0800_B2EF(ds_44, wArg00, wArg02, out di_99)
	sp_101 = fp - 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D92:
	word16 sp_68 = sp_101 - 0x0002
	Mem69[ss:sp_68:word16] = ds_44
	Mem72[ss:sp_68 - 0x0002:word16] = 0x0827
	word16 di_73
	fn0800_B2EF(ds_44, wArg00, wArg02, out di_73)
	Mem79[ss:sp_68:word16] = 0x0001
	word16 si_80
	selector ds_81
	return fn0800_8B5A(ds_44, wArg00, out si_80, out ds_81)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0D24_exit:
// DataOut: di dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:0x01 di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_0DA9(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0DA9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0DA9:
	branch (wArg02 | wArg04) == 0x0000 l0800_0DCC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_0DB4:
	byte dl_39
	word16 di_40
	byte al_42 = fn0800_A614(fp - 0x0002, ds, DPB(ptrLoc06, wArg02, 0), wArg04, out dl_39, out di_40, out ds)
	Mem46[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0008:word16]
	Mem48[ss:fp - 0x0006:word16] = Mem46[ss:fp + 0x0006:word16]
	fn0800_8F7F(al_42, ds, ptrArg00)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_0DCC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0DA9_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_0DCE(selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds si
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_0DCE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DCE:
	word16 di_13
	fn0800_B2EF(ds, 0x07E8, ds, out di_13)
	word16 si_21
	selector ds_22
	fn0800_8B5A(ds, 0x0000, out si_21, out ds_22)
	return bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0DCE_exit:
// DataOut: bp ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -8(fp):0x07E8 -6(fp):ds -4(fp):0x0121 -2(fp):<invalid>



byte fn0800_0DE8(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_0DE8_entry:
	*bpOut = bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DE8:
	word16 di_27
	fn0800_B2EF(ds, 0x08AC, ds, out di_27)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_0E2A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_0E1B:
	word16 di_384
	fn0800_B2EF(ds, 0x08BA, ds, out di_384)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E2A:
	branch Mem0[ds:0x2A1F:word16] == 0x0000 l0800_0E3C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E31:
	word16 di_373
	fn0800_B2EF(ds, 0x08CF, ds, out di_373)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E3C:
	word16 di_46
	fn0800_B2EF(ds, 0x08DC, ds, out di_46)
	selector ds_58
	fn0800_3678(bp, ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds_58)
	Mem63[ss:fp - 0x0004:word16] = ds_58
	Mem67[ss:fp - 0x0006:word16] = 0x08DF
	Mem69[ss:fp - 0x0008:word16] = ds_58
	Mem72[ss:fp - 0x000A:word16] = 0x4477
	word16 di_77
	word16 si_78 = fn0800_37BE(ds_58, wArg00, wArg02, wArg04, wArg06, out di_77)
	Mem82[ss:fp - 0x0004:word16] = ds_58
	Mem85[ss:fp - 0x0006:word16] = 0x08EC
	Mem87[ss:fp - 0x0008:word16] = ds_58
	Mem90[ss:fp - 0x000A:word16] = 0x4477
	word16 di_105
	selector ds_108
	word16 si_106 = fn0800_4234(si_78, di_77, ds_58, wArg00, wArg02, wArg04, wArg06, out di_105, out ds_108)
	Mem97[ds_108:0x29DD:word16] = dx
	Mem98[ds_108:0x29DB:word16] = 0x4477
	word16 sp_109 = fp - 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10F4:
	word16 sp_111 = sp_109 - 0x0002
	Mem112[ss:sp_111:word16] = ds_108
	Mem115[ss:sp_111 - 0x0002:word16] = 0x4541
	sp_109 = sp_111 + 0x0002
	byte dl_117
	selector ds_118
	branch fn0800_2DE2(bp, si_106, ds_108, ptrArg00, wArg02, out dl_117, out ds_118) == 0x0000 l0800_1106
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1106:
	Mem347[ss:sp_111:word16] = Mem115[ds_118:0x29DD:word16]
	Mem349[ss:sp_111 - 0x0002:word16] = Mem347[ds_118:0x29DB:word16]
	byte dl_350
	word16 di_351
	selector ds_352
	fn0800_A614(bp, ds_118, ptrArg00, wArg02, out dl_350, out di_351, out ds_352)
	Mem357[ss:sp_111:word16] = ds_352
	Mem361[ss:sp_111 - 0x0002:word16] = 0x4477
	return fn0800_8F7F(0x77, ds_352, ptrArg00)
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_1103:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E7C:
	bp = fn0800_3764(ds_118)
	*bpOut = bp
	branch fn0800_388C(bp, si_106, di_105, ds_118, out si_106, out ds_108) != 0x0000 l0800_0E89
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E89:
	Mem151[ss:sp_111:word16] = ds_108
	Mem154[ss:sp_111 - 0x0002:word16] = 0x4541
	fn0800_0C93(bp, ds_108, wArg00, wArg02)
	Mem158[ss:sp_111:word16] = Mem154[ds_108:0x29E5:word16]
	Mem160[ss:sp_111 - 0x0002:word16] = Mem158[ds_108:0x29E3:word16]
	word16 si_161
	selector ds_162
	word16 ax_163 = fn0800_4194(bp, ds_108, wArg00, wArg02, out si_161, out ds_162)
	Mem165[ds_162:0x2A09:word16] = dx
	Mem166[ds_162:0x2A07:word16] = ax_163
	Mem167[ds_162:0x2A05:word16] = dx
	Mem168[ds_162:0x2A03:word16] = ax_163
	word16 sp_164 = sp_111 + 0x0002
	branch Mem168[ds_162:0x2A09:word16] >u 0x0000 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EB9:
	branch Mem168[ds_162:0x2A09:word16] != 0x0000 l0800_0EC2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EBB:
	branch Mem168[ds_162:0x2A07:word16] >u 0x0012 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC2:
	branch Mem168[ds_162:0x2A15:word16] != 0x0000 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ECF:
	byte dl_285
	branch fn0800_3992(bp, ds_162, out dl_285, out ds_162) == 0x0000 l0800_0EDC
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EDC:
	branch Mem168[ds_162:0x2A23:word16] <=u 0x0005 l0800_0EE8
// DataOut: bp bx dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE8:
	return dl_285
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

fn0800_0DE8_exit:
// DataOut: bp dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_0FF4:
	ds_162 = fn0800_6AD4(bp, ds_162)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1007:
	Mem299[ss:sp_111:word16] = Mem168[ds_162:0x29E1:word16]
	Mem301[ss:sp_111 - 0x0002:word16] = Mem299[ds_162:0x29DF:word16]
	word16 ax_304 = fn0800_4194(bp, ds_162, wArg00, wArg02, out si_106, out ds_162)
	Mem306[ds_162:0x2A05:word16] = dx
	Mem307[ds_162:0x2A03:word16] = ax_304
	sp_164 = sp_111 + 0x0002
	word16 ax_308 = Mem307[ds_162:0x2A05:word16]
	dx = Mem307[ds_162:0x2A03:word16]
	branch ax_308 <u Mem307[ds_162:0x2A09:word16] l0800_1049
// DataOut: bp ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1029:
	branch ax_308 != Mem307[ds_162:0x2A09:word16] l0800_1031
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_102B:
	branch dx <u Mem307[ds_162:0x2A07:word16] l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1031:
	branch Mem307[ds_162:0x2A15:word16] != 0x0000 l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1038:
	dx = Mem307[ds_162:0x2A07:word16]
	Mem331[ds_162:0x2A05:word16] = Mem307[ds_162:0x2A09:word16]
	Mem332[ds_162:0x2A03:word16] = dx
	si_106 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1049:
	branch si_106 != 0x0004 l0800_105C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_104E:
	dx = Mem307[ds_162:0x2A07:word16]
	Mem324[ds_162:0x2A05:word16] = Mem307[ds_162:0x2A09:word16]
	Mem325[ds_162:0x2A03:word16] = dx
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ED6:
	si_106 = 0x000E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC9:
	si_106 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_105C:
	branch Mem168[ds_162:0x427E:byte] == 0x00 l0800_10B7
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1063:
	branch si_106 == 0x0003 l0800_106D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1068:
	branch si_106 != 0x0004 l0800_10B7
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_106D:
	dx = Mem168[ds_162:0x2A07:word16]
	Mem246[ds_162:0x2A05:word16] = Mem168[ds_162:0x2A09:word16]
	Mem247[ds_162:0x2A03:word16] = dx
	word16 sp_248 = sp_164 - 0x0002
	Mem249[ss:sp_248:word16] = Mem247[ds_162:0x29E5:word16]
	Mem251[ss:sp_248 - 0x0002:word16] = Mem249[ds_162:0x29E3:word16]
	selector ds_252 = fn0800_BA67(ds_162, wArg00, wArg02)
	Mem256[ss:sp_248:word16] = Mem251[ds_252:0x29E1:word16]
	Mem258[ss:sp_248 - 0x0002:word16] = Mem256[ds_252:0x29DF:word16]
	selector ds_259 = fn0800_BA67(ds_252, wArg00, wArg02)
	Mem263[ss:sp_248:word16] = Mem258[ds_259:0x2A09:word16]
	Mem265[ss:sp_248 - 0x0002:word16] = Mem263[ds_259:0x2A07:word16]
	Mem267[ss:sp_248 - 0x0004:word16] = Mem265[ds_259:0x29E1:word16]
	Mem269[ss:sp_248 - 0x0006:word16] = Mem267[ds_259:0x29DF:word16]
	Mem271[ss:sp_248 - 0x0008:word16] = Mem269[ds_259:0x29E5:word16]
	Mem273[ss:sp_248 - 0x000A:word16] = Mem271[ds_259:0x29E3:word16]
	ds_162 = fn0800_3B0A(bp, ds_259, wArg08, wArg0A)
	sp_164 = sp_248 + 0x0002
	si_106 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10B7:
	word16 sp_194 = sp_164 - 0x0002
	Mem195[ss:sp_194:word16] = Mem168[ds_162:0x29E5:word16]
	Mem197[ss:sp_194 - 0x0002:word16] = Mem195[ds_162:0x29E3:word16]
	byte dl_198
	word16 di_199
	selector ds_200
	fn0800_A614(bp, ds_162, ptrArg00, wArg02, out dl_198, out di_199, out ds_200)
	Mem205[ss:sp_194:word16] = Mem197[ds_200:0x29E1:word16]
	Mem207[ss:sp_194 - 0x0002:word16] = Mem205[ds_200:0x29DF:word16]
	byte dl_208
	selector ds_210
	fn0800_A614(bp, ds_200, ptrArg00, wArg02, out dl_208, out di_105, out ds_210)
	word16 sp_212 = sp_194 + 0x0002
	branch si_106 <= 0x0002 l0800_10E5
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E5:
	si_106 = fn0800_37DF(bp, ds_210, out ds_210)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10D8:
	Mem231[ss:sp_194:word16] = ds_210
	Mem235[ss:sp_194 - 0x0002:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_210, ptrArg00)
	sp_212 = sp_194 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E8:
	word16 sp_220 = sp_212 - 0x0002
	Mem221[ss:sp_220:word16] = ds_210
	Mem224[ss:sp_220 - 0x0002:word16] = 0x4541
	Mem226[ss:sp_220 - 0x0004:word16] = si_106
	ds_108 = fn0800_0ABC(bp, ds_210, wArg00, wArg02, wArg04)
	sp_109 = sp_220 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E86:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_112D(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_112D_entry:
	*bpOut = bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_112D:
	word16 di_27
	fn0800_B2EF(ds, 0x08F0, ds, out di_27)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_116F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_1160:
	word16 di_290
	fn0800_B2EF(ds, 0x08FE, ds, out di_290)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_116F:
	word16 di_157
	word16 si_136 = fn0800_B2EF(ds, 0x0913, ds, out di_157)
	word16 sp_180 = fp - 0x0002
	branch Mem0[ds:0x2A25:word16] == 0x0001 l0800_1184
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_1184:
	si_136 = fn0800_3678(bp, ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds)
	sp_180 = fp - 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1181:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12C2:
	word16 sp_57 = sp_180 - 0x0002
	Mem58[ss:sp_57:word16] = ds
	Mem62[ss:sp_57 - 0x0002:word16] = 0x4541
	sp_180 = sp_57 + 0x0002
	byte dl_65
	selector ds_66
	branch fn0800_2DE2(bp, si_136, ds, ptrArg00, wArg02, out dl_65, out ds_66) == 0x0000 l0800_12D4
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12D4:
	return dl_65
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_112D_exit:
// DataOut: bp dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_12D1:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1192:
	bp = fn0800_3764(ds_66)
	*bpOut = bp
	branch fn0800_388C(bp, si_136, di_157, ds_66, out si_136, out ds) != 0x0000 l0800_119F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> di:<invalid> si:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119F:
	Mem82[ss:sp_57:word16] = ds
	Mem85[ss:sp_57 - 0x0002:word16] = 0x4541
	fn0800_0C93(bp, ds, wArg00, wArg02)
	Mem90[ss:sp_57:word16] = Mem85[ds:0x29E5:word16]
	Mem92[ss:sp_57 - 0x0002:word16] = Mem90[ds:0x29E3:word16]
	word16 si_93
	selector ds_113
	word16 ax_95 = fn0800_4194(bp, ds, wArg00, wArg02, out si_93, out ds_113)
	Mem98[ds_113:0x2A05:word16] = dx
	Mem99[ds_113:0x2A03:word16] = ax_95
	word16 sp_114 = sp_57 + 0x0002
	branch false l0800_11CF
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C3:
	branch false l0800_11CA
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C5:
	branch ax_95 >=u 0x0012 l0800_11CF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CF:
	word16 bx_206 = Mem99[ds_113:0x2A23:word16]
	branch bx_206 >u 0x0005 l0800_1243
// DataOut: bp bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11D8:
	switch (bx_206 << 0x0001) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1229:
	*bpOut = fn0800_4BB1(bp, ds_113, out ds_113)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1208:
	Mem242[ss:sp_57:word16] = Mem99[ds_113:0x29E5:word16]
	Mem244[ss:sp_57 - 0x0002:word16] = Mem242[ds_113:0x29E3:word16]
	sp_114 = sp_57 + 0x0002
	selector ds_245
	branch fn0800_3F0A(bp, ds_113, wArg00, wArg02, out ds_245) != 0x4D5A l0800_1222
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1222:
	*bpOut = fn0800_4B97(bp, ds_245, out ds_113)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_121B:
	ds_113 = fn0800_46FE(bp, ds_245)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1237:
	*bpOut = fn0800_518F(bp, ds_113, out ds_113)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_123E:
	ds_113 = fn0800_51A9(bp, ds_113)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11DF:
	Mem214[ss:sp_57:word16] = Mem99[ds_113:0x29E5:word16]
	Mem216[ss:sp_57 - 0x0002:word16] = Mem214[ds_113:0x29E3:word16]
	sp_114 = sp_57 + 0x0002
	word16 di_217
	word16 ax_224 = fn0800_8CAA(ax_95, 0x08, fn0800_3F58(bp, ds_113, wArg00, wArg02, out di_217, out ds_113), si, out dx)
	branch dx != 0x0052 l0800_1203
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11F7:
	branch ax_224 != 0x4E43 l0800_1203
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1203:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11FC:
	fn0800_5374(bp, ds_113, out ds_113)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1230:
	ds_113 = fn0800_4C55(bp, ds_113)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CA:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1243:
	word16 sp_115 = sp_114 - 0x0002
	Mem116[ss:sp_115:word16] = Mem99[ds_113:0x29E1:word16]
	Mem118[ss:sp_115 - 0x0002:word16] = Mem116[ds_113:0x29DF:word16]
	word16 si_119
	selector ds_120
	word16 ax_121 = fn0800_4194(bp, ds_113, wArg00, wArg02, out si_119, out ds_120)
	Mem124[ds_120:0x2A09:word16] = dx
	Mem125[ds_120:0x2A07:word16] = ax_121
	Mem127[ss:sp_115:word16] = Mem125[ds_120:0x29E5:word16]
	Mem129[ss:sp_115 - 0x0002:word16] = Mem127[ds_120:0x29E3:word16]
	word16 si_130
	selector ds_131
	word16 ax_132 = fn0800_4194(bp, ds_120, wArg00, wArg02, out si_130, out ds_131)
	Mem134[ds_131:0x2A05:word16] = dx
	Mem135[ds_131:0x2A03:word16] = ax_132
	si_136 = si_130
	branch si_130 == 0x0000 l0800_127F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1271:
	dx = Mem135[ds_131:0x2A03:word16]
	Mem203[ds_131:0x2A09:word16] = Mem135[ds_131:0x2A05:word16]
	Mem204[ds_131:0x2A07:word16] = dx
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_127F:
	Mem143[ss:sp_115:word16] = Mem135[ds_131:0x29E5:word16]
	Mem145[ss:sp_115 - 0x0002:word16] = Mem143[ds_131:0x29E3:word16]
	byte dl_146
	word16 di_147
	selector ds_148
	fn0800_A614(bp, ds_131, ptrArg00, wArg02, out dl_146, out di_147, out ds_148)
	Mem153[ss:sp_115:word16] = Mem145[ds_148:0x29E1:word16]
	Mem155[ss:sp_115 - 0x0002:word16] = Mem153[ds_148:0x29DF:word16]
	byte dl_156
	selector ds_158
	fn0800_A614(bp, ds_148, ptrArg00, wArg02, out dl_156, out di_157, out ds_158)
	word16 sp_160 = sp_115 + 0x0002
	branch Mem155[ds_158:0x2A25:word16] == 0x0002 l0800_12A6
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A2:
	si_136 = si_130
	branch si_130 == 0x0000 l0800_12B3
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B3:
	si_136 = fn0800_37DF(bp, ds_158, out ds_158)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A6:
	Mem187[ss:sp_115:word16] = ds_158
	Mem191[ss:sp_115 - 0x0002:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_158, ptrArg00)
	sp_160 = sp_115 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B6:
	word16 sp_171 = sp_160 - 0x0002
	Mem172[ss:sp_171:word16] = ds_158
	Mem175[ss:sp_171 - 0x0002:word16] = 0x4541
	Mem177[ss:sp_171 - 0x0004:word16] = si_136
	ds = fn0800_0ABC(bp, ds_158, wArg00, wArg02, wArg04)
	sp_180 = sp_171 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> bp:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119C:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> bp:<invalid> si:<invalid> di:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_12E2(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_12E2_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_12E2:
	word16 di_33
	fn0800_B2EF(ds, 0x0916, ds, out di_33)
	word16 bp_107 = fp - 0x0002
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_1321
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0092(16) Local -0094(16)

l0800_1312:
	word16 di_1418
	fn0800_B2EF(ds, 0x0925, ds, out di_1418)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 0x0002 ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):0x4348 -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0094(16)

l0800_1321:
	word16 di_43
	word16 si_44 = fn0800_B2EF(ds, 0x093A, ds, out di_43)
	word16 dx_57
	word16 di_1235
	word16 si_1236
	selector ds_1233
	word16 ax_61 = fn0800_AA7E(si_44, di_43, ds, 0x4348, ds, 0x093D, ds, out dx_57, out si_1236, out di_1235, out ds_1233)
	Mem64[ds_1233:0x29D1:word16] = dx_57
	Mem65[ds_1233:0x29CF:word16] = ax_61
	word16 sp_1237 = fp - 0x008A
	word16 ax_66 = Mem65[ds_1233:0x2A25:word16]
	branch ax_66 == 0x0003 l0800_1353
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 0x0002 ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1353:
	branch (Mem65[ds_1233:0x29CF:word16] | Mem65[ds_1233:0x29D1:word16]) == 0x0000 l0800_135F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_135F:
	Mem1397[ss:fp - 0x008C:word16] = ds_1233
	Mem1400[ss:fp - 0x008E:word16] = 0x4348
	Mem1403[ss:fp - 0x0090:word16] = 0x0007
	word16 si_1404
	word16 di_1405
	fn0800_0D24(fp - 0x0002, ds_1233, out si_1404, out di_1405, out ds_1233)
	sp_1237 = fp - 0x008A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_135C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_134B:
	branch ax_66 == 0x0004 l0800_1371
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1371:
	branch (Mem65[ds_1233:0x29CF:word16] | Mem65[ds_1233:0x29D1:word16]) == 0x0000 l0800_13C6
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_137A:
	Mem1349[ss:fp - 0x008C:word16] = Mem65[ds_1233:0x29D1:word16]
	Mem1351[ss:fp - 0x008E:word16] = Mem1349[ds_1233:0x29CF:word16]
	sp_1237 = fp - 0x008A
	branch fn0800_3E27(fp - 0x0002, ds_1233, wArg00, wArg02, out si_1236, out di_1235, out ds_1233) != 0x4D5A l0800_13BA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13BA:
	Mem1389[ds_1233:0x29D1:word16] = 0x0000
	Mem1390[ds_1233:0x29CF:word16] = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> di:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_138D:
	Mem1362[ss:fp - 0x008C:word16] = 0x0002
	Mem1367[ss:fp - 0x008E:word16] = 0x0000
	Mem1369[ss:fp - 0x0090:word16] = 0x0000
	Mem1371[ss:fp - 0x0092:word16] = Mem1369[ds_1233:0x29D1:word16]
	Mem1373[ss:fp - 0x0094:word16] = Mem1371[ds_1233:0x29CF:word16]
	fn0800_ACB3(fp - 0x0002, ds_1233, ptrArg00, wArg02, wArg08, out ds_1233)
	Mem1379[ss:fp - 0x008C:word16] = Mem1373[ds_1233:0x29D1:word16]
	Mem1381[ss:fp - 0x008E:word16] = Mem1379[ds_1233:0x29CF:word16]
	word16 ax_1383 = fn0800_AD2F(ds_1233, ptrArg00, wArg02, out si_1236)
	Mem1387[ds_1233:0x29ED:word16] = dx_57
	Mem1388[ds_1233:0x29EB:word16] = ax_1383
	sp_1237 = fp - 0x008A
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> di:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13C6:
	branch (Mem65[ds_1233:0x29CF:word16] | Mem65[ds_1233:0x29D1:word16]) != 0x0000 l0800_13F2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> es:<invalid> al:<invalid> dx:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13CF:
	word16 sp_1328 = sp_1237 - 0x0002
	Mem1329[ss:sp_1328:word16] = ds_1233
	Mem1332[ss:sp_1328 - 0x0002:word16] = 0x0941
	Mem1334[ss:sp_1328 - 0x0004:word16] = ds_1233
	Mem1337[ss:sp_1328 - 0x0006:word16] = 0x4348
	word16 di_1338
	fn0800_4234(si_1236, di_1235, ds_1233, wArg00, wArg02, wArg04, wArg06, out di_1338, out ds_1233)
	Mem1344[ds_1233:0x29D1:word16] = dx_57
	Mem1345[ds_1233:0x29CF:word16] = 0x4348
	Mem1346[ds_1233:0x29ED:word16] = 0x0000
	Mem1347[ds_1233:0x29EB:word16] = 0x0000
	sp_1237 = sp_1328 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> es:<invalid> al:<invalid> dx:<invalid> si:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13F2:
	Mem1248[ss:fp - 0x0070:byte] = 0x52
	Mem1249[ss:fp - 0x006F:byte] = 0x4E
	Mem1250[ss:fp - 0x006E:byte] = 0x43
	Mem1251[ss:fp - 0x006D:byte] = 0x41
	Mem1252[ss:fp - 0x006C:byte] = 0x00
	Mem1253[ss:fp - 0x006B:byte] = 0x0C
	Mem1254[ss:fp - 0x0068:byte] = 0x00
	Mem1255[ss:fp - 0x0067:byte] = 0x0C
	Mem1256[ss:fp - 0x0066:byte] = 0x00
	Mem1257[ss:fp - 0x0065:byte] = 0x00
	word16 sp_1261 = sp_1237 - 0x0002
	Mem1262[ss:sp_1261:word16] = 0x0000
	Mem1265[ss:sp_1261 - 0x0002:word16] = 0x0004
	Mem1267[ss:sp_1261 - 0x0004:word16] = ss
	Mem1270[ss:sp_1261 - 0x0006:word16] = fp - 0x0068
	byte dl_1271
	Mem1277[ss:fp - 0x006A:byte] = (byte) (fn0800_2CCF(ds_1233, ptrArg00, wArg04, wArg06, out dl_1271) >>u 0x08)
	Mem1282[ss:sp_1261:word16] = 0x0000
	Mem1285[ss:sp_1261 - 0x0002:word16] = 0x0004
	Mem1287[ss:sp_1261 - 0x0004:word16] = ss
	Mem1290[ss:sp_1261 - 0x0006:word16] = fp - 0x0068
	byte dl_1291
	Mem1295[ss:fp - 0x0069:byte] = (byte) fn0800_2CCF(ds_1233, ptrArg00, wArg04, wArg06, out dl_1291)
	Mem1297[ss:sp_1261:word16] = Mem1295[ds_1233:0x29D1:word16]
	Mem1299[ss:sp_1261 - 0x0002:word16] = Mem1297[ds_1233:0x29CF:word16]
	Mem1305[ss:sp_1261 - 0x0004:word16] = 0x0000
	Mem1307[ss:sp_1261 - 0x0006:word16] = 0x000C
	Mem1309[ss:sp_1261 - 0x0008:word16] = ss
	Mem1312[ss:sp_1261 - 0x000A:word16] = fp - 0x0070
	selector ds_1313 = fn0800_4152(ds_1233, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
	Mem1317[ss:sp_1261:word16] = Mem1312[ds_1313:0x29D1:word16]
	Mem1319[ss:sp_1261 - 0x0002:word16] = Mem1317[ds_1313:0x29CF:word16]
	Mem1321[ss:sp_1261 - 0x0004:word16] = Mem1319[ds_1313:0x29ED:word16]
	Mem1323[ss:sp_1261 - 0x0006:word16] = Mem1321[ds_1313:0x29EB:word16]
	ds_1233 = fn0800_409C(fp - 0x0002, ds_1313, wArg02, wArg04, wArg06)
	sp_1237 = sp_1261 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1350:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1478:
	word16 sp_84 = sp_1237 - 0x0002
	Mem85[ss:sp_84:word16] = 0x0000
	selector ds_103 = fn0800_1CF6(fp - 0x0002, ds_1233)
	word16 sp_108 = sp_84 + 0x0002
	word16 si_106 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1527:
	word16 sp_109 = sp_108 - 0x0002
	Mem110[ss:sp_109:word16] = ds_103
	Mem113[ss:sp_109 - 0x0002:word16] = 0x4541
	byte dl_116
	selector ds_117
	branch fn0800_2DE2(bp_107, si_106, ds_103, ptrArg00, wArg02, out dl_116, out ds_117) == 0x0000 l0800_1539
	Mem125[ss:sp_109:word16] = ds_117
	Mem128[ss:sp_109 - 0x0002:word16] = 0x4541
	sp_108 = sp_109 + 0x0002
	byte dl_129
	branch fn0800_2DE2(bp_107, si_106, ds_117, ptrArg00, wArg02, out dl_129, out ds_103) == 0x0000 l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1536:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1486:
	Mem1107[ss:sp_109:word16] = ds_103
	Mem1110[ss:sp_109 - 0x0002:word16] = 0x4541
	Mem1112[ss:sp_109 - 0x0004:word16] = ss
	Mem1115[ss:sp_109 - 0x0006:word16] = bp_107 - 0x006E
	fn0800_3509(ds_103, wArg04, wArg06)
	Mem1119[ss:sp_109:word16] = ds_103
	Mem1122[ss:sp_109 - 0x0002:word16] = 0x4541
	Mem1124[ss:sp_109 - 0x0004:word16] = ss
	Mem1127[ss:sp_109 - 0x0006:word16] = bp_107 - 0x0084
	fn0800_35A3(ds_103, wArg04, wArg06)
	Mem1133[ss:sp_109:word16] = ss
	Mem1136[ss:sp_109 - 0x0002:word16] = bp_107 - 0x006E
	word16 dx_1137
	word16 ax_1138 = fn0800_283D(ds_103, ptrArg00, wArg02, out dx_1137)
	Mem1141[ss:bp_107 - 0x0002:word16] = dx_1137
	Mem1142[ss:bp_107 - 0x0004:word16] = ax_1138
	word16 sp_1139 = sp_109 + 0x0002
	branch (ax_1138 | dx_1137) != 0x0000 l0800_14CD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14BC:
	Mem1212[ss:sp_109:word16] = ss
	Mem1215[ss:sp_109 - 0x0002:word16] = bp_107 - 0x006E
	word16 dx_1216
	word16 ax_1218 = fn0800_1F5C(bp_107, ds_103, ptrArg00, wArg02, out dx_1216, out ds_103)
	Mem1222[ss:bp_107 - 0x0002:word16] = dx_1216
	Mem1223[ss:bp_107 - 0x0004:word16] = ax_1218
	sp_1139 = sp_109 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14CD:
	word16 sp_1150 = sp_1139 - 0x0002
	Mem1151[ss:sp_1150:word16] = Mem1142[ss:bp_107 - 0x0002:word16]
	Mem1153[ss:sp_1150 - 0x0002:word16] = Mem1151[ss:bp_107 - 0x0004:word16]
	Mem1155[ss:sp_1150 - 0x0004:word16] = ss
	Mem1158[ss:sp_1150 - 0x0006:word16] = bp_107 - 0x0084
	word16 dx_1159
	word16 ax_1160 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_1159)
	Mem1163[ss:bp_107 - 0x0006:word16] = dx_1159
	Mem1164[ss:bp_107 - 0x0008:word16] = ax_1160
	word16 ax_1165 = ax_1160 | dx_1159
	branch ax_1165 != 0x0000 l0800_14FD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14FD:
	Mem1203[ss:sp_1150:word16] = Mem1164[ss:bp_107 - 0x0006:word16]
	Mem1205[ss:sp_1150 - 0x0002:word16] = Mem1203[ss:bp_107 - 0x0008:word16]
	bp_107 = fn0800_23EC(bp_107, ds_103, wArg00, wArg02, out ds_103)
	sp_108 = sp_1150 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14E9:
	Mem1191[ss:sp_1150:word16] = Mem1164[ss:bp_107 - 0x0002:word16]
	Mem1193[ss:sp_1150 - 0x0002:word16] = Mem1191[ss:bp_107 - 0x0004:word16]
	Mem1195[ss:sp_1150 - 0x0004:word16] = ss
	ax_1165 = bp_107 - 0x0084
	Mem1198[ss:sp_1150 - 0x0006:word16] = ax_1165
	fn0800_2085(ds_103, ptrArg00, wArg02, ptrArg04)
	sp_108 = sp_1150 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1509:
	si_106 = 0x0001
	branch (DPB(ax_1165, 0x00, 8) << 0x08) + DPB(dx_1159, 0x00, 8) >=u 0xFF8C l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1539:
	branch si_106 != 0x0000 l0800_1551
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1551:
	selector ds_204
	word16 bp_205 = fn0800_1E5E(bp_107, si_106, ds_103, out ds_204)
	word16 sp_207 = sp_108 - 0x0002
	Mem208[ss:sp_207:word16] = 0x0001
	selector ds_209 = fn0800_1CF6(bp_205, ds_204)
	Mem213[ss:sp_207:word16] = 0x0001
	Mem218[ss:sp_207 - 0x0002:word16] = 0x0000
	fn0800_2DBF(ds_209, wArg00, wArg02)
	word16 dx_223 = Mem218[ds_209:0x29CF:word16]
	Mem224[ds_209:0x29E1:word16] = Mem218[ds_209:0x29D1:word16]
	Mem225[ds_209:0x29DF:word16] = dx_223
	Mem227[ss:sp_207:word16] = ds_209
	Mem230[ss:sp_207 - 0x0002:word16] = 0x0945
	Mem232[ss:sp_207 - 0x0004:word16] = ds_209
	Mem235[ss:sp_207 - 0x0006:word16] = 0x4477
	word16 di_238
	word16 si_239 = fn0800_37BE(ds_209, wArg00, wArg02, wArg04, wArg06, out di_238)
	Mem243[ss:sp_207:word16] = ds_209
	Mem246[ss:sp_207 - 0x0002:word16] = 0x0941
	Mem248[ss:sp_207 - 0x0004:word16] = ds_209
	Mem251[ss:sp_207 - 0x0006:word16] = 0x4477
	word16 di_252
	selector ds_253
	word16 si_254 = fn0800_4234(si_239, di_238, ds_209, wArg00, wArg02, wArg04, wArg06, out di_252, out ds_253)
	Mem258[ds_253:0x29DD:word16] = dx_223
	Mem259[ds_253:0x29DB:word16] = 0x4477
	word16 sp_255 = sp_207 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1897:
	word16 sp_277 = sp_255 - 0x0002
	Mem278[ss:sp_277:word16] = ds_253
	Mem281[ss:sp_277 - 0x0002:word16] = 0x4541
	word16 sp_285 = sp_277 + 0x0002
	byte dl_282
	branch fn0800_2DE2(bp_205, si_254, ds_253, ptrArg00, wArg02, out dl_282, out ds_253) == 0x0000 l0800_18A9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_18A6:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_15A3:
	Mem349[ss:sp_277:word16] = ds_253
	Mem352[ss:sp_277 - 0x0002:word16] = 0x093D
	Mem354[ss:sp_277 - 0x0004:word16] = ds_253
	Mem357[ss:sp_277 - 0x0006:word16] = 0x4541
	word16 di_358
	selector ds_359
	fn0800_4234(si_254, di_252, ds_253, wArg00, wArg02, wArg04, wArg06, out di_358, out ds_359)
	Mem363[ds_359:0x29E5:word16] = dx_223
	Mem364[ds_359:0x29E3:word16] = 0x4541
	Mem366[ss:sp_277:word16] = ds_359
	Mem369[ss:sp_277 - 0x0002:word16] = 0x4541
	Mem371[ss:sp_277 - 0x0004:word16] = ss
	Mem374[ss:sp_277 - 0x0006:word16] = bp_205 - 0x006E
	fn0800_3509(ds_359, wArg04, wArg06)
	Mem378[ss:sp_277:word16] = ds_359
	Mem381[ss:sp_277 - 0x0002:word16] = 0x4541
	Mem383[ss:sp_277 - 0x0004:word16] = ss
	Mem386[ss:sp_277 - 0x0006:word16] = bp_205 - 0x0084
	fn0800_35A3(ds_359, wArg04, wArg06)
	Mem392[ss:sp_277:word16] = ds_359
	Mem395[ss:sp_277 - 0x0002:word16] = 0x4541
	fn0800_0C93(bp_205, ds_359, wArg00, wArg02)
	Mem399[ss:sp_277:word16] = ss
	Mem402[ss:sp_277 - 0x0002:word16] = bp_205 - 0x006E
	word16 dx_403
	word16 ax_404 = fn0800_283D(ds_359, ptrArg00, wArg02, out dx_403)
	Mem408[ss:sp_277:word16] = dx_403
	Mem410[ss:sp_277 - 0x0002:word16] = ax_404
	Mem412[ss:sp_277 - 0x0004:word16] = ss
	Mem415[ss:sp_277 - 0x0006:word16] = bp_205 - 0x0084
	word16 dx_417
	word16 ax_418 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_417)
	Mem421[ss:bp_205 - 0x0006:word16] = dx_417
	Mem422[ss:bp_205 - 0x0008:word16] = ax_418
	Mem424[ss:sp_277:word16] = Mem422[ds_359:0x29D1:word16]
	Mem426[ss:sp_277 - 0x0002:word16] = Mem424[ds_359:0x29CF:word16]
	ui32 dx_sp_431 = SEQ(dx_417, sp_277 + 0x0002)
	word16 si_427
	selector ds_428
	word16 ax_429 = fn0800_4194(bp_205, ds_359, wArg00, wArg02, out si_427, out ds_428)
	Mem438[ds_428:0x29E9:word16] = SLICE(dx_sp_431 - 0x00000002, word16, 16)
	Mem439[ds_428:0x29E7:word16] = ax_429 - 0x0004
	int32 dx_ax_441 = (int32) Mem439[ds_428:0x29E9:word16]
	word16 dx_445
	word16 ax_446 = fn0800_8C8A((word16) dx_ax_441, 0x08, SLICE(dx_ax_441, word16, 16), bp, out dx_445)
	ptr32 es_di_447 = Mem439[ss:bp_205 - 0x0008:segptr32]
	word16 sp_436 = (word16) (dx_sp_431 - 0x00000002)
	Mem452[ss:sp_436 - 0x0002:word16] = ax_446
	word16 di_1102 = (word16) es_di_447
	selector es_1088 = SLICE(es_di_447, selector, 16)
	word16 cx_1104 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1632:
	branch cx_1104 == 0x0000 l0800_1634
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1632_1:
	di_1102 = di_1102 + 0x0001
	cx_1104 = cx_1104 - 0x0001
	branch 0x00 != Mem452[es_1088:di_1102:byte] l0800_1632
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1634:
	word16 cx_1098 = ~cx_1104
	word16 di_1084 = di_1102 - cx_1098
	byte Z_1092 = cond(di_1084)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163A:
	branch cx_1098 == 0x0000 l0800_163C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163A_2:
	Z_1092 = cond(0x00 - Mem452[es_1088:di_1084:byte]) (alias)
	di_1084 = di_1084 + 0x0001
	cx_1098 = cx_1098 - 0x0001
	branch 0x00 != Mem452[es_1088:di_1084:byte] l0800_163A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163C:
	branch Z_1092 l0800_1645
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163E:
	di_1084 = 0x0001
	es_1088 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1645:
	Mem507[es_1088:di_1084 - 0x0001 + 0x0001:byte] = (byte) Mem452[ss:sp_436 - 0x0002:word16]
	ptr32 es_di_511 = Mem507[ss:bp_205 - 0x0008:segptr32]
	Mem516[ss:sp_436 - 0x0002:word16] = (word16) (int32) Mem507[ds_428:0x29E9:word16]
	word16 di_1080 = (word16) es_di_511
	selector es_1066 = SLICE(es_di_511, selector, 16)
	word16 cx_1082 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165C:
	branch cx_1082 == 0x0000 l0800_165E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165C_1:
	di_1080 = di_1080 + 0x0001
	cx_1082 = cx_1082 - 0x0001
	branch 0x00 != Mem516[es_1066:di_1080:byte] l0800_165C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165E:
	word16 cx_1076 = ~cx_1082
	word16 di_1062 = di_1080 - cx_1076
	byte Z_1070 = cond(di_1062)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1664:
	branch cx_1076 == 0x0000 l0800_1666
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1664_2:
	Z_1070 = cond(0x00 - Mem516[es_1066:di_1062:byte]) (alias)
	di_1062 = di_1062 + 0x0001
	cx_1076 = cx_1076 - 0x0001
	branch 0x00 != Mem516[es_1066:di_1062:byte] l0800_1664
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1666:
	branch Z_1070 l0800_166F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1668:
	di_1062 = 0x0001
	es_1066 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_166F:
	Mem572[es_1066:di_1062 - 0x0001 + 0x0002:byte] = (byte) Mem516[ss:sp_436 - 0x0002:word16]
	word16 dx_576
	word16 ax_577 = fn0800_8C8A(Mem572[ds_428:0x29E7:word16], 0x08, Mem572[ds_428:0x29E9:word16], bp, out dx_576)
	ptr32 es_di_578 = Mem572[ss:bp_205 - 0x0008:segptr32]
	Mem583[ss:sp_436 - 0x0002:word16] = ax_577
	word16 di_1058 = (word16) es_di_578
	selector es_1044 = SLICE(es_di_578, selector, 16)
	word16 cx_1060 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_168E:
	branch cx_1060 == 0x0000 l0800_1690
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_168E_1:
	di_1058 = di_1058 + 0x0001
	cx_1060 = cx_1060 - 0x0001
	branch 0x00 != Mem583[es_1044:di_1058:byte] l0800_168E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1690:
	word16 cx_1054 = ~cx_1060
	word16 di_1040 = di_1058 - cx_1054
	byte Z_1048 = cond(di_1040)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1696:
	branch cx_1054 == 0x0000 l0800_1698
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1696_2:
	Z_1048 = cond(0x00 - Mem583[es_1044:di_1040:byte]) (alias)
	di_1040 = di_1040 + 0x0001
	cx_1054 = cx_1054 - 0x0001
	branch 0x00 != Mem583[es_1044:di_1040:byte] l0800_1696
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1698:
	branch Z_1048 l0800_16A1
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_169A:
	di_1040 = 0x0001
	es_1044 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16A1:
	Mem639[es_1044:di_1040 - 0x0001 + 0x0003:byte] = (byte) Mem583[ss:sp_436 - 0x0002:word16]
	ptr32 es_di_640 = Mem639[ss:bp_205 - 0x0008:segptr32]
	word16 di_1036 = (word16) es_di_640
	selector es_1022 = SLICE(es_di_640, selector, 16)
	word16 cx_1038 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B3:
	branch cx_1038 == 0x0000 l0800_16B5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B3_1:
	di_1036 = di_1036 + 0x0001
	cx_1038 = cx_1038 - 0x0001
	branch 0x00 != Mem639[es_1022:di_1036:byte] l0800_16B3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B5:
	word16 cx_1032 = ~cx_1038
	word16 di_1018 = di_1036 - cx_1032
	byte Z_1026 = cond(di_1018)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BB:
	branch cx_1032 == 0x0000 l0800_16BD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BB_2:
	Z_1026 = cond(0x00 - Mem639[es_1022:di_1018:byte]) (alias)
	di_1018 = di_1018 + 0x0001
	cx_1032 = cx_1032 - 0x0001
	branch 0x00 != Mem639[es_1022:di_1018:byte] l0800_16BB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BD:
	branch Z_1026 l0800_16C6
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BF:
	di_1018 = 0x0001
	es_1022 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16C6:
	byte dl_693 = Mem639[ds_428:0x29E7:byte]
	Mem696[es_1022:di_1018 - 0x0001 + 0x0004:byte] = dl_693
	Mem702[ds_428:0x2A05:word16] = 0x0000
	Mem703[ds_428:0x2A03:word16] = 0x0000
	Mem706[ss:sp_436 - 0x0002:word16] = Mem703[ds_428:0x29E5:word16]
	Mem708[ss:sp_436 - 0x0004:word16] = Mem706[ds_428:0x29E3:word16]
	word16 dx_694 = DPB(dx_576, dl_693, 0)
	selector ds_710
	word16 ax_711 = fn0800_4194(bp_205, ds_428, wArg00, wArg02, out si_254, out ds_710)
	Mem713[ds_710:0x2A09:word16] = dx_694
	Mem714[ds_710:0x2A07:word16] = ax_711
	Mem719[ss:sp_436 - 0x0002:word16] = 0x0000
	Mem721[ss:sp_436 - 0x0004:word16] = Mem719[ds_710:0x29E9:word16]
	Mem723[ss:sp_436 - 0x0006:word16] = Mem721[ds_710:0x29E7:word16]
	Mem725[ss:sp_436 - 0x0008:word16] = Mem723[ds_710:0x29E1:word16]
	Mem727[ss:sp_436 - 0x000A:word16] = Mem725[ds_710:0x29DF:word16]
	word16 di_697 = 0x0001
	selector ds_729
	word16 ax_730 = fn0800_ACB3(bp_205, ds_710, ptrArg00, wArg02, wArg08, out ds_729)
	word16 sp_731 = sp_436
	branch Mem727[ds_729:0x2A09:word16] >=u 0x0000 l0800_171B
// DataOut: bp di ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_171B:
	branch Mem727[ds_729:0x2A09:word16] >u 0x0000 l0800_1724
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_171D:
	branch Mem727[ds_729:0x2A07:word16] <=u 0x0012 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1724:
	branch Mem727[ds_729:0x2A21:word16] == 0x0000 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_172B:
	Mem927[ss:sp_436 - 0x0002:word16] = Mem727[ds_729:0x29E5:word16]
	Mem929[ss:sp_436 - 0x0004:word16] = Mem927[ds_729:0x29E3:word16]
	sp_731 = sp_436
	word16 ax_938 = fn0800_8CAA(ax_730, 0x08, fn0800_3F58(bp_205, ds_729, wArg00, wArg02, out di_697, out ds_729), bp, out dx_694)
	branch dx_694 != 0x0052 l0800_1748
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1743:
	branch ax_938 == 0x4E43 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1748:
	word16 ax_1000
	Mem945[ss:sp_436 - 0x0002:word16] = Mem929[ds_729:0x2A09:word16]
	Mem947[ss:sp_436 - 0x0004:word16] = Mem945[ds_729:0x2A07:word16]
	Mem949[ss:sp_436 - 0x0006:word16] = Mem947[ds_729:0x2A09:word16]
	Mem951[ss:sp_436 - 0x0008:word16] = Mem949[ds_729:0x2A07:word16]
	ds_729 = fn0800_75EA(bp_205, ds_729, wArg00, wArg02, wArg04, wArg06)
	sp_731 = sp_436
	word16 ax_954 = Mem951[ds_729:0x2A05:word16]
	dx_694 = Mem951[ds_729:0x2A03:word16]
	branch ax_954 <u Mem951[ds_729:0x2A09:word16] l0800_1778
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_176B:
	branch ax_954 != Mem951[ds_729:0x2A09:word16] l0800_1773
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_176D:
	branch dx_694 <u Mem951[ds_729:0x2A07:word16] l0800_1778
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1778:
	ax_1000 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1773:
	ax_1000 = 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_177A:
	di_697 = ax_1000
	branch ax_1000 == 0x0000 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1780:
	Mem978[ss:sp_436 - 0x0002:word16] = 0x0001
	dx_694 = -Mem978[ds_729:0x2A03:word16]
	Mem987[ss:sp_436 - 0x0004:word16] = -Mem978[ds_729:0x2A05:word16] - (dx_694 == 0x0000)
	Mem989[ss:sp_436 - 0x0006:word16] = dx_694
	Mem991[ss:sp_436 - 0x0008:word16] = Mem989[ds_729:0x29E1:word16]
	Mem993[ss:sp_436 - 0x000A:word16] = Mem991[ds_729:0x29DF:word16]
	fn0800_ACB3(bp_205, ds_729, ptrArg00, wArg02, wArg08, out ds_729)
	sp_731 = sp_436
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1718:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A2:
	branch di_697 != 0x0000 l0800_17A9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A9:
	word16 ax_821 = Mem727[ds_729:0x2A09:word16]
	word16 dx_822 = Mem727[ds_729:0x2A07:word16]
	Mem823[ds_729:0x2A05:word16] = ax_821
	Mem824[ds_729:0x2A03:word16] = dx_822
	word16 sp_825 = sp_731 - 0x0002
	Mem826[ss:sp_825:word16] = Mem824[ds_729:0x29E5:word16]
	Mem828[ss:sp_825 - 0x0002:word16] = Mem826[ds_729:0x29E3:word16]
	selector ds_829 = fn0800_BA67(ds_729, wArg00, wArg02)
	word16 sp_830 = sp_825 + 0x0002
	branch Mem828[ds_829:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17CC:
	branch Mem828[ds_829:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17CE:
	branch Mem828[ds_829:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17D5:
	Mem902[ss:sp_825:word16] = Mem828[ds_829:0x29E5:word16]
	Mem904[ss:sp_825 - 0x0002:word16] = Mem902[ds_829:0x29E3:word16]
	sp_830 = sp_825 + 0x0002
	word16 di_905
	word16 ax_913 = fn0800_8CAA(ax_821, 0x08, fn0800_3F58(bp_205, ds_829, wArg00, wArg02, out di_905, out ds_829), bp, out dx_694)
	branch dx_694 != 0x0052 l0800_17F2
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17ED:
	branch ax_913 == 0x4E43 l0800_181E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17F2:
	word16 sp_875 = sp_830 - 0x0002
	Mem876[ss:sp_875:word16] = Mem828[ds_829:0x29D1:word16]
	Mem878[ss:sp_875 - 0x0002:word16] = Mem876[ds_829:0x29CF:word16]
	Mem882[ss:sp_875 - 0x0004:word16] = 0x524E
	Mem884[ss:sp_875 - 0x0006:word16] = 0x4300
	selector ds_885 = fn0800_409C(bp_205, ds_829, wArg02, wArg04, wArg06)
	Mem889[ss:sp_875:word16] = Mem884[ds_885:0x29D1:word16]
	Mem891[ss:sp_875 - 0x0002:word16] = Mem889[ds_885:0x29CF:word16]
	Mem893[ss:sp_875 - 0x0004:word16] = Mem891[ds_885:0x2A09:word16]
	Mem895[ss:sp_875 - 0x0006:word16] = Mem893[ds_885:0x2A07:word16]
	dx_694 = 0x4300
	ds_829 = fn0800_409C(bp_205, ds_885, wArg02, wArg04, wArg06)
	sp_830 = sp_875 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_181E:
	word16 sp_848 = sp_830 - 0x0002
	Mem849[ss:sp_848:word16] = Mem828[ds_829:0x2A09:word16]
	Mem851[ss:sp_848 - 0x0002:word16] = Mem849[ds_829:0x2A07:word16]
	Mem853[ss:sp_848 - 0x0004:word16] = Mem851[ds_829:0x29D1:word16]
	Mem855[ss:sp_848 - 0x0006:word16] = Mem853[ds_829:0x29CF:word16]
	Mem857[ss:sp_848 - 0x0008:word16] = Mem855[ds_829:0x29E5:word16]
	Mem859[ss:sp_848 - 0x000A:word16] = Mem857[ds_829:0x29E3:word16]
	ds_729 = fn0800_3B0A(bp_205, ds_829, wArg08, wArg0A)
	sp_731 = sp_848 + 0x0002
	si_254 = 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_183F:
	word16 sp_766 = sp_731 - 0x0002
	Mem767[ss:sp_766:word16] = Mem727[ds_729:0x29D1:word16]
	Mem769[ss:sp_766 - 0x0002:word16] = Mem767[ds_729:0x29CF:word16]
	Mem771[ss:sp_766 - 0x0004:word16] = Mem769[ds_729:0x29ED:word16]
	Mem773[ss:sp_766 - 0x0006:word16] = Mem771[ds_729:0x29EB:word16]
	selector ds_774 = fn0800_409C(bp_205, ds_729, wArg02, wArg04, wArg06)
	Mem778[ss:sp_766:word16] = Mem773[ds_774:0x29E5:word16]
	Mem780[ss:sp_766 - 0x0002:word16] = Mem778[ds_774:0x29E3:word16]
	byte dl_781
	selector ds_783
	fn0800_A614(bp_205, ds_774, ptrArg00, wArg02, out dl_781, out di_252, out ds_783)
	Mem788[ss:sp_766:word16] = ds_783
	Mem791[ss:sp_766 - 0x0002:word16] = 0x4541
	Mem793[ss:sp_766 - 0x0004:word16] = si_254
	ds_253 = fn0800_0ABC(bp_205, ds_783, wArg00, wArg02, wArg04)
	sp_255 = sp_766 + 0x0002
	dx_223 = DPB(dx_694, 0x00, 8) (alias)
	branch dx_223 <u 0x4174 l0800_1897
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_188A:
	Mem812[ss:sp_766:word16] = ds_253
	Mem815[ss:sp_766 - 0x0002:word16] = 0x0952
	word16 di_816
	si_254 = fn0800_B2EF(ds_253, wArg00, wArg02, out di_816)
	sp_285 = sp_766 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_18A9:
	word16 sp_308 = sp_285 - 0x0002
	Mem309[ss:sp_308:word16] = Mem281[ds_253:0x29DD:word16]
	Mem311[ss:sp_308 - 0x0002:word16] = Mem309[ds_253:0x29DB:word16]
	byte dl_312
	word16 di_313
	selector ds_314
	fn0800_A614(bp_205, ds_253, ptrArg00, wArg02, out dl_312, out di_313, out ds_314)
	Mem319[ss:sp_308:word16] = ds_314
	Mem323[ss:sp_308 - 0x0002:word16] = 0x4477
	fn0800_8F7F(0x77, ds_314, ptrArg00)
	selector ds_328
	word16 bp_329 = fn0800_1E5E(bp_205, si_254, ds_314, out ds_328)
	Mem331[ss:sp_308:word16] = Mem323[ds_328:0x29D1:word16]
	Mem333[ss:sp_308 - 0x0002:word16] = Mem331[ds_328:0x29CF:word16]
	byte dl_334
	word16 di_335
	selector ds_336
	fn0800_A614(bp_329, ds_328, ptrArg00, wArg02, out dl_334, out di_335, out ds_336)
	return dl_334
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_153D:
	word16 sp_183 = sp_108 - 0x0002
	Mem184[ss:sp_183:word16] = Mem128[ds_103:0x29D1:word16]
	Mem186[ss:sp_183 - 0x0002:word16] = Mem184[ds_103:0x29CF:word16]
	byte dl_187
	word16 di_188
	selector ds_189
	fn0800_A614(bp_107, ds_103, ptrArg00, wArg02, out dl_187, out di_188, out ds_189)
	return dl_187
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_12E2_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_18D9(word16 bp, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_18D9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_18D9:
	word16 di_30
	word16 si_31 = fn0800_B2EF(ds, 0x096C, ds, out di_30)
	word16 dx_44
	word16 di_46
	word16 si_265
	selector ds_267
	word16 ax_48 = fn0800_AA7E(si_31, di_30, ds, 0x4348, ds, 0x097D, ds, out dx_44, out si_265, out di_46, out ds_267)
	Mem50[ds_267:0x29D1:word16] = dx_44
	Mem51[ds_267:0x29CF:word16] = ax_48
	word16 bp_128 = fp - 0x0002
	word16 sp_269 = fp - 0x0072
	branch (ax_48 | dx_44) != 0x0000 l0800_192A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_191B:
	Mem258[ss:fp - 0x0074:word16] = ds_267
	Mem261[ss:fp - 0x0076:word16] = 0x4348
	Mem264[ss:fp - 0x0078:word16] = 0x0007
	word16 di_266
	fn0800_0D24(fp - 0x0002, ds_267, out si_265, out di_266, out ds_267)
	sp_269 = fp - 0x0072
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):ds -118(fp):0x097D -116(fp):ds -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_192A:
	word16 sp_63 = sp_269 - 0x0002
	Mem64[ss:sp_63:word16] = 0x0001
	selector ds_202 = fn0800_1CF6(fp - 0x0002, ds_267)
	Mem72[ss:sp_63:word16] = 0x0000
	Mem74[ss:sp_63 - 0x0002:word16] = 0x0000
	fn0800_2DBF(ds_202, wArg00, wArg02)
	word16 sp_203 = sp_63 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19BC:
	word16 sp_94 = sp_203 - 0x0002
	Mem95[ss:sp_94:word16] = ss
	Mem98[ss:sp_94 - 0x0002:word16] = bp_128 - 0x006E
	Mem100[ss:sp_94 - 0x0004:word16] = ss
	Mem103[ss:sp_94 - 0x0006:word16] = bp_128 - 0x0008
	Mem105[ss:sp_94 - 0x0008:word16] = ss
	Mem108[ss:sp_94 - 0x000A:word16] = bp_128 - 0x0004
	selector ds_109
	branch fn0800_29C5(bp_128, si_265, ds_202, out ds_109) == 0x0000 l0800_19D8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> al:<invalid> Sequence es:di:<invalid> di:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19D8:
	selector ds_239
	word16 bp_240 = fn0800_1E5E(bp_128, si_265, ds_109, out ds_239)
	Mem242[ss:sp_94:word16] = Mem108[ds_239:0x29D1:word16]
	Mem244[ss:sp_94 - 0x0002:word16] = Mem242[ds_239:0x29CF:word16]
	byte dl_245
	word16 di_246
	selector ds_247
	fn0800_A614(bp_240, ds_239, ptrArg00, wArg02, out dl_245, out di_246, out ds_247)
	return dl_245
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

fn0800_18D9_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

l0800_19D5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1940:
	Mem117[ss:sp_94:word16] = ss
	Mem120[ss:sp_94 - 0x0002:word16] = bp_128 - 0x006E
	fn0800_0C93(bp_128, ds_109, wArg00, wArg02)
	Mem124[ss:sp_94:word16] = Mem120[ss:bp_128 - 0x0006:word16]
	Mem126[ss:sp_94 - 0x0002:word16] = Mem124[ss:bp_128 - 0x0008:word16]
	selector ds_127
	bp_128 = fn0800_23EC(bp_128, ds_109, wArg00, wArg02, out ds_127)
	Mem132[ss:sp_94:word16] = Mem126[ss:bp_128 - 0x0006:word16]
	Mem134[ss:sp_94 - 0x0002:word16] = Mem132[ss:bp_128 - 0x0008:word16]
	selector ds_136 = fn0800_22FE(ds_127, ptrArg00, wArg02)
	ptr32 es_di_138 = Mem134[ss:bp_128 - 0x0004:segptr32]
	word16 sp_137 = sp_94 + 0x0002
	selector es_140 = SLICE(es_di_138, selector, 16)
	word16 di_141 = (word16) es_di_138 + 0x0002
	word16 cx_147 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E:
	branch cx_147 == 0x0000 l0800_1970
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E_1:
	di_141 = di_141 + 0x0001
	cx_147 = cx_147 - 0x0001
	branch 0x00 != Mem134[es_140:di_141:byte] l0800_196E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1970:
	word16 cx_155 = ~cx_147
	word16 di_158 = di_141 - cx_155
	byte Z_162 = cond(di_158)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976:
	branch cx_155 == 0x0000 l0800_1978
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976_2:
	Z_162 = cond(0x00 - Mem134[es_140:di_158:byte]) (alias)
	di_158 = di_158 + 0x0001
	cx_155 = cx_155 - 0x0001
	branch 0x00 != Mem134[es_140:di_158:byte] l0800_1976
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1978:
	branch Z_162 l0800_1981
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_197A:
	di_158 = 0x0001
	es_140 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1981:
	branch Mem134[es_140:di_158 - 0x0001 + 0x0001:byte] != 0x00 l0800_19AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_198D:
	word16 dx_206 = Mem134[ds_136:0x2E51:word16]
	branch Mem134[ds_136:0x2E53:word16] != Mem134[ss:bp_128 - 0x0002:word16] l0800_19A1
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_199C:
	branch dx_206 + 0x0008 == Mem134[ss:bp_128 - 0x0004:word16] l0800_19AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19A1:
	Mem213[ss:sp_94:word16] = Mem134[ss:bp_128 - 0x0002:word16]
	Mem215[ss:sp_94 - 0x0002:word16] = Mem213[ss:bp_128 - 0x0004:word16]
	ds_136 = fn0800_2201(ds_136, ptrArg00, wArg02)
	sp_137 = sp_94 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19AD:
	word16 sp_193 = sp_137 - 0x0002
	Mem194[ss:sp_193:word16] = ss
	Mem197[ss:sp_193 - 0x0002:word16] = bp_128 - 0x006E
	Mem200[ss:sp_193 - 0x0004:word16] = 0x000D
	ds_202 = fn0800_0ABC(bp_128, ds_136, wArg00, wArg02, wArg04)
	sp_203 = sp_193 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)



byte fn0800_19EE(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_19EE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_19EE:
	word16 di_33
	word16 si_34 = fn0800_B2EF(ds, 0x0986, ds, out di_33)
	word16 dx_47
	word16 di_49
	selector ds_1014
	word16 si_1012
	word16 ax_51 = fn0800_AA7E(si_34, di_33, ds, 0x4348, ds, 0x0997, ds, out dx_47, out si_1012, out di_49, out ds_1014)
	Mem53[ds_1014:0x29D1:word16] = dx_47
	Mem54[ds_1014:0x29CF:word16] = ax_51
	word16 bp_145 = fp - 0x0002
	word16 sp_1016 = fp - 0x0078
	branch (ax_51 | dx_47) != 0x0000 l0800_1A40
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1A31:
	Mem1005[ss:fp - 0x007A:word16] = ds_1014
	Mem1008[ss:fp - 0x007C:word16] = 0x4348
	Mem1011[ss:fp - 0x007E:word16] = 0x0007
	word16 di_1013
	fn0800_0D24(fp - 0x0002, ds_1014, out si_1012, out di_1013, out ds_1014)
	sp_1016 = fp - 0x0078
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):ds -124(fp):0x0997 -122(fp):ds -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A40:
	branch Mem54[ds_1014:0x2A27:word16] != Mem54[ds_1014:0x269A:word16] l0800_1A7D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A49:
	word16 dx_990 = Mem54[ds_1014:0x0982:word16]
	Mem991[ss:fp - 0x000C:word16] = Mem54[ds_1014:0x0984:word16]
	Mem992[ss:fp - 0x000E:word16] = dx_990
	ptr32 es_bx_995 = Mem992[ds_1014:0x269C:segptr32]
	Mem0[es_bx_995 + 0x0006:word16] = ss
	Mem0[es_bx_995 + 0x0004:word16] = fp - 0x000E
	Mem1001[ds_1014:0x2A27:word16] = 0x0001
	Mem1002[ds_1014:0x269A:word16] = 0x0002
	Mem1003[ds_1014:0x2A1B:word16] = 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A7D:
	word16 sp_77 = sp_1016 - 0x0002
	Mem78[ss:sp_77:word16] = 0x0000
	Mem82[ss:sp_77 - 0x0002:word16] = 0x0001
	fn0800_2DBF(ds_1014, wArg00, wArg02)
	Mem89[ss:sp_77:word16] = 0x0001
	selector ds_107 = fn0800_1CF6(fp - 0x0002, ds_1014)
	word16 sp_108 = sp_77 + 0x0002
	branch Mem89[ds_107:0x2A25:word16] == 0x0007 l0800_1A9E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> di:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9E:
	Mem976[ss:sp_77:word16] = ds_107
	Mem979[ss:sp_77 - 0x0002:word16] = 0x099B
	Mem981[ss:sp_77 - 0x0004:word16] = ds_107
	Mem984[ss:sp_77 - 0x0006:word16] = 0x44DC
	word16 di_985
	si_1012 = fn0800_37BE(ds_107, wArg00, wArg02, wArg04, wArg06, out di_985)
	sp_108 = sp_77 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9B:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CB4:
	word16 sp_110 = sp_108 - 0x0002
	Mem111[ss:sp_110:word16] = ss
	Mem114[ss:sp_110 - 0x0002:word16] = bp_145 - 0x0072
	Mem116[ss:sp_110 - 0x0004:word16] = ss
	Mem119[ss:sp_110 - 0x0006:word16] = bp_145 - 0x0008
	Mem121[ss:sp_110 - 0x0008:word16] = ss
	Mem124[ss:sp_110 - 0x000A:word16] = bp_145 - 0x0004
	selector ds_125
	branch fn0800_29C5(bp_145, si_1012, ds_107, out ds_125) == 0x0000 l0800_1CD0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CD0:
	Mem933[ss:sp_110:word16] = Mem124[ds_125:0x29D1:word16]
	Mem935[ss:sp_110 - 0x0002:word16] = Mem933[ds_125:0x29CF:word16]
	word16 di_937
	selector ds_938
	byte dl_936
	fn0800_A614(bp_145, ds_125, ptrArg00, wArg02, out dl_936, out di_937, out ds_938)
	branch Mem935[ds_938:0x2A25:word16] != 0x0007 l0800_1CF0
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CE5:
	Mem959[ss:sp_110:word16] = ds_938
	Mem963[ss:sp_110 - 0x0002:word16] = 0x44DC
	dl_936 = fn0800_8F7F(0xDC, ds_938, ptrArg00)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CF0:
	return dl_936
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_19EE_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CCD:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AB1:
	Mem133[ss:sp_110:word16] = ss
	Mem136[ss:sp_110 - 0x0002:word16] = bp_145 - 0x0072
	fn0800_0C93(bp_145, ds_125, wArg00, wArg02)
	Mem140[ss:sp_110:word16] = Mem136[ss:bp_145 - 0x0006:word16]
	Mem142[ss:sp_110 - 0x0002:word16] = Mem140[ss:bp_145 - 0x0008:word16]
	word16 dx_144
	selector ds_146
	fn0800_24FE(bp_145, ds_125, ptrArg00, out dx_144, out bp_145, out ds_146)
	Mem155[ss:sp_110:word16] = 0x0000
	ptr32 es_di_156 = Mem155[ss:bp_145 - 0x0008:segptr32]
	word16 di_1018 = (word16) es_di_156
	selector es_158 = SLICE(es_di_156, selector, 16)
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1:
	branch cx_159 == 0x0000 l0800_1AD3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1_1:
	di_1018 = di_1018 + 0x0001
	cx_159 = cx_159 - 0x0001
	branch 0x00 != Mem155[es_158:di_1018:byte] l0800_1AD1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD3:
	word16 cx_169 = ~cx_159
	word16 di_1019 = di_1018 - cx_169
	byte Z_178 = cond(di_1019)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9:
	branch cx_169 == 0x0000 l0800_1ADB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9_2:
	Z_178 = cond(0x00 - Mem155[es_158:di_1019:byte]) (alias)
	di_1019 = di_1019 + 0x0001
	cx_169 = cx_169 - 0x0001
	branch 0x00 != Mem155[es_158:di_1019:byte] l0800_1AD9
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADB:
	branch Z_178 l0800_1AE4
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADD:
	di_1019 = 0x0001
	es_158 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AE4:
	ptr32 es_di_206 = Mem155[ss:bp_145 - 0x0008:segptr32]
	Mem210[ss:sp_110 - 0x0002:word16] = (int16) Mem155[es_158:di_1019 - 0x0001 + 0x0001:byte] << 0x08
	word16 di_1020 = (word16) es_di_206
	selector es_208 = SLICE(es_di_206, selector, 16)
	word16 cx_216 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB:
	branch cx_216 == 0x0000 l0800_1AFD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB_1:
	di_1020 = di_1020 + 0x0001
	cx_216 = cx_216 - 0x0001
	branch 0x00 != Mem210[es_208:di_1020:byte] l0800_1AFB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFD:
	word16 cx_226 = ~cx_216
	word16 di_231 = di_1020 - cx_226
	byte Z_235 = cond(di_231)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03:
	branch cx_226 == 0x0000 l0800_1B05
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03_2:
	Z_235 = cond(0x00 - Mem210[es_208:di_1021:byte]) (alias)
	di_231 = di_1021 + 0x0001
	cx_226 = cx_226 - 0x0001
	word16 di_1021 = di_231
	branch 0x00 != Mem210[es_208:di_1021:byte] l0800_1B03
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B05:
	branch Z_235 l0800_1B0E
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B07:
	es_208 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B0E:
	ptr32 es_di_270 = Mem210[ss:bp_145 - 0x0008:segptr32]
	Mem274[ss:sp_110 - 0x0002:word16] = Mem210[ss:sp_110 - 0x0002:word16] + DPB(es_208, 0x00, 8)
	Mem276[ss:sp_110 - 0x0004:word16] = 0x0000
	word16 di_1022 = (word16) es_di_270
	selector es_272 = SLICE(es_di_270, selector, 16)
	word16 cx_277 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26:
	branch cx_277 == 0x0000 l0800_1B28
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26_1:
	di_1022 = di_1022 + 0x0001
	cx_277 = cx_277 - 0x0001
	branch 0x00 != Mem276[es_272:di_1022:byte] l0800_1B26
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B28:
	word16 cx_287 = ~cx_277
	word16 di_1023 = di_1022 - cx_287
	byte Z_296 = cond(di_1023)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E:
	branch cx_287 == 0x0000 l0800_1B30
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E_2:
	Z_296 = cond(0x00 - Mem276[es_272:di_1023:byte]) (alias)
	di_1023 = di_1023 + 0x0001
	cx_287 = cx_287 - 0x0001
	branch 0x00 != Mem276[es_272:di_1023:byte] l0800_1B2E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B30:
	branch Z_296 l0800_1B39
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B32:
	di_1023 = 0x0001
	es_272 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B39:
	ptr32 es_di_324 = Mem276[ss:bp_145 - 0x0008:segptr32]
	Mem328[ss:sp_110 - 0x0006:word16] = (int16) Mem276[es_272:di_1023 - 0x0001 + 0x0003:byte] << 0x08
	word16 di_1024 = (word16) es_di_324
	selector es_326 = SLICE(es_di_324, selector, 16)
	word16 cx_334 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50:
	branch cx_334 == 0x0000 l0800_1B52
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50_1:
	di_1024 = di_1024 + 0x0001
	cx_334 = cx_334 - 0x0001
	branch 0x00 != Mem328[es_326:di_1024:byte] l0800_1B50
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B52:
	word16 cx_344 = ~cx_334
	word16 di_1025 = di_1024 - cx_344
	byte Z_353 = cond(di_1025)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58:
	branch cx_344 == 0x0000 l0800_1B5A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58_2:
	Z_353 = cond(0x00 - Mem328[es_326:di_1025:byte]) (alias)
	di_1025 = di_1025 + 0x0001
	cx_344 = cx_344 - 0x0001
	branch 0x00 != Mem328[es_326:di_1025:byte] l0800_1B58
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5A:
	branch Z_353 l0800_1B63
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5C:
	di_1025 = 0x0001
	es_326 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B63:
	word16 ax_387 = Mem328[ss:sp_110 - 0x0004:word16] + (Mem328[ss:sp_110 - 0x0006:word16] + DPB(es_326, 0x00, 8))
	word16 dx_392 = Mem328[ss:sp_110 - 0x0002:word16] + (ax_387 <u 0x0000)
	Mem395[ss:sp_110 - 0x0002:word16] = dx_392
	Mem397[ss:sp_110 - 0x0004:word16] = ax_387
	Mem399[ss:sp_110 - 0x0006:word16] = Mem397[ds_146:0x29D1:word16]
	Mem401[ss:sp_110 - 0x0008:word16] = Mem399[ds_146:0x29CF:word16]
	selector ds_403
	fn0800_ACB3(bp_145, ds_146, ptrArg00, wArg02, wArg08, out ds_403)
	word16 di_375 = di_1025 - 0x0001
	word16 sp_405 = sp_110 + 0x0002
	branch Mem401[ds_403:0x2A25:word16] != 0x0007 l0800_1B92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B92:
	Mem481[ss:sp_110:word16] = ds_403
	selector es_482 = Mem481[ss:sp_110:selector]
	Mem487[ss:sp_110:word16] = es_482
	Mem489[ss:sp_110 - 0x0002:word16] = 0x44DC
	word16 di_1026 = 0x427E
	word16 cx_497 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1:
	branch cx_497 == 0x0000 l0800_1BA3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1_1:
	di_1026 = di_1026 + 0x0001
	cx_497 = cx_497 - 0x0001
	branch 0x00 != Mem489[es_482:di_1026:byte] l0800_1BA1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA3:
	word16 di_516 = Mem489[ss:sp_110 - 0x0002:word16]
	selector es_519 = Mem489[ss:sp_110:selector]
	Mem524[ss:sp_110:word16] = ds_403
	word16 cx_507 = ~cx_497
	word16 cx_509 = cx_507 >>u 0x0001
	word16 si_515 = di_1026 - cx_507
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2:
	branch cx_509 == 0x0000 l0800_1BB4
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB4:
	word16 cx_538 = cx_509 * 0x0002 + (cx_507 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6:
	branch cx_538 == 0x0000 l0800_1BB8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB8:
	selector ds_553 = Mem524[ss:sp_110:selector]
	word16 sp_554 = sp_110 + 0x0002
	branch Mem524[ds_553:0x2A25:word16] != 0x0008 l0800_1C29
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC0:
	branch Mem524[ds_553:0x427E:byte] == 0x00 l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC7:
	branch Mem524[ss:bp_145 - 0x0072:byte] != 0x5C l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BFC:
	Mem663[ss:sp_110:word16] = ss
	Mem666[ss:sp_110 - 0x0002:word16] = bp_145 - 0x0072
	Mem668[ss:sp_110 - 0x0004:word16] = ds_553
	selector es_669 = Mem668[ss:sp_110 - 0x0004:selector]
	word16 di_1029 = 0x44DC
	word16 cx_679 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B:
	branch cx_679 == 0x0000 l0800_1C0D
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B_1:
	di_1029 = di_1029 + 0x0001
	cx_679 = cx_679 - 0x0001
	branch 0x00 != Mem668[es_669:di_1029:byte] l0800_1C0B
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0D:
	word16 cx_689 = ~cx_679
	word16 di_1030 = di_1029 - cx_689
	byte Z_698 = cond(di_1030)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13:
	branch cx_689 == 0x0000 l0800_1C15
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13_2:
	Z_698 = cond(0x00 - Mem668[es_669:di_1030:byte]) (alias)
	di_1030 = di_1030 + 0x0001
	cx_689 = cx_689 - 0x0001
	branch 0x00 != Mem668[es_669:di_1030:byte] l0800_1C13
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C15:
	branch Z_698 l0800_1C1E
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C17:
	di_1030 = 0x0001
	es_669 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C1E:
	Mem725[ss:sp_110 - 0x0004:word16] = es_669
	Mem727[ss:sp_110 - 0x0006:word16] = di_1030 - 0x0001
	fn0800_3509(ds_553, wArg04, wArg06)
	sp_554 = sp_110 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BCD:
	Mem754[ss:sp_110:word16] = ss
	Mem757[ss:sp_110 - 0x0002:word16] = bp_145 - 0x0071
	Mem759[ss:sp_110 - 0x0004:word16] = ds_553
	selector es_760 = Mem759[ss:sp_110 - 0x0004:selector]
	word16 di_1031 = 0x44DC
	word16 cx_770 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC:
	branch cx_770 == 0x0000 l0800_1BDE
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC_1:
	di_1031 = di_1031 + 0x0001
	cx_770 = cx_770 - 0x0001
	branch 0x00 != Mem759[es_760:di_1031:byte] l0800_1BDC
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDE:
	word16 cx_780 = ~cx_770
	word16 di_1032 = di_1031 - cx_780
	byte Z_789 = cond(di_1032)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4:
	branch cx_780 == 0x0000 l0800_1BE6
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4_2:
	Z_789 = cond(0x00 - Mem759[es_760:di_1032:byte]) (alias)
	di_1032 = di_1032 + 0x0001
	cx_780 = cx_780 - 0x0001
	branch 0x00 != Mem759[es_760:di_1032:byte] l0800_1BE4
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE6:
	branch Z_789 l0800_1BEF
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE8:
	di_1032 = 0x0001
	es_760 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BEF:
	Mem816[ss:sp_110 - 0x0004:word16] = es_760
	Mem818[ss:sp_110 - 0x0006:word16] = di_1032 - 0x0001
	fn0800_3509(ds_553, wArg04, wArg06)
	sp_554 = sp_110 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C29:
	word16 sp_560 = sp_554 - 0x0002
	Mem561[ss:sp_560:word16] = ds_553
	Mem564[ss:sp_560 - 0x0002:word16] = 0x44DC
	si_1012 = fn0800_3678(bp_145, ds_553, ptrArg00, wArg02, out ds_403)
	Mem569[ss:sp_560:word16] = ss
	Mem572[ss:sp_560 - 0x0002:word16] = bp_145 - 0x0072
	Mem574[ss:sp_560 - 0x0004:word16] = ds_403
	selector es_575 = Mem574[ss:sp_560 - 0x0004:selector]
	word16 di_1027 = 0x44DC
	word16 cx_585 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43:
	branch cx_585 == 0x0000 l0800_1C45
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43_1:
	di_1027 = di_1027 + 0x0001
	cx_585 = cx_585 - 0x0001
	branch 0x00 != Mem574[es_575:di_1027:byte] l0800_1C43
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C45:
	word16 cx_595 = ~cx_585
	word16 di_1028 = di_1027 - cx_595
	byte Z_604 = cond(di_1028)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B:
	branch cx_595 == 0x0000 l0800_1C4D
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B_2:
	Z_604 = cond(0x00 - Mem574[es_575:di_1028:byte]) (alias)
	di_1028 = di_1028 + 0x0001
	cx_595 = cx_595 - 0x0001
	branch 0x00 != Mem574[es_575:di_1028:byte] l0800_1C4B
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4D:
	branch Z_604 l0800_1C56
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4F:
	di_1028 = 0x0001
	es_575 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C56:
	Mem631[ss:sp_560 - 0x0004:word16] = es_575
	di_375 = di_1028 - 0x0001
	Mem633[ss:sp_560 - 0x0006:word16] = di_375
	fn0800_35A3(ds_403, wArg04, wArg06)
	sp_405 = sp_560 + 0x0002
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6_1:
	Mem547[es_519:di_516:byte] = Mem524[es_482:si_515:byte]
	si_515 = si_515 + 0x0001
	di_516 = di_516 + 0x0001
	cx_538 = cx_538 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2_2:
	Mem532[es_519:di_516:word16] = Mem524[es_482:si_515:word16]
	si_515 = si_515 + 0x0002
	di_516 = di_516 + 0x0002
	cx_509 = cx_509 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B8F:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C61:
	word16 sp_418 = sp_405 - 0x0002
	Mem419[ss:sp_418:word16] = ds_403
	Mem422[ss:sp_418 - 0x0002:word16] = 0x09A8
	Mem424[ss:sp_418 - 0x0004:word16] = ds_403
	Mem427[ss:sp_418 - 0x0006:word16] = 0x44DC
	word16 di_430
	selector ds_431
	fn0800_4234(si_1012, di_375, ds_403, wArg00, wArg02, wArg04, wArg06, out di_430, out ds_431)
	Mem435[ds_431:0x29E1:word16] = dx_392
	Mem436[ds_431:0x29DF:word16] = 0x44DC
	word16 dx_438 = Mem436[ds_431:0x29CF:word16]
	Mem440[ds_431:0x29E5:word16] = Mem436[ds_431:0x29D1:word16]
	Mem441[ds_431:0x29E3:word16] = dx_438
	selector ds_442
	word16 ax_443 = fn0800_5374(bp_145, ds_431, out ds_442)
	Mem446[ss:sp_418:word16] = Mem441[ds_442:0x29E1:word16]
	Mem448[ss:sp_418 - 0x0002:word16] = Mem446[ds_442:0x29DF:word16]
	byte dl_449
	word16 di_450
	selector ds_451
	fn0800_A614(bp_145, ds_442, ptrArg00, wArg02, out dl_449, out di_450, out ds_451)
	word16 sp_453 = sp_418 + 0x0002
	si_1012 = ax_443
	branch ax_443 == 0x0000 l0800_1CA8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C9D:
	Mem472[ss:sp_418:word16] = ds_451
	Mem476[ss:sp_418 - 0x0002:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_451, ptrArg00)
	sp_453 = sp_418 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CA8:
	word16 sp_461 = sp_453 - 0x0002
	Mem462[ss:sp_461:word16] = ss
	Mem465[ss:sp_461 - 0x0002:word16] = bp_145 - 0x0072
	Mem467[ss:sp_461 - 0x0004:word16] = ax_443
	ds_107 = fn0800_0ABC(bp_145, ds_451, wArg00, wArg02, wArg04)
	sp_108 = sp_461 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_1CF6(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_1CF6_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1CF6:
	Mem14[ds:0x45A8:word16] = 0x0000
	Mem16[ds:0x45A6:word16] = 0x0000
	Mem17[ds:0x29ED:word16] = 0x0000
	Mem18[ds:0x29EB:word16] = 0x0000
	selector ds_34
	word16 ax_35 = fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc10, Mem18[ds:0x29CF:word16], 0), Mem18[ds:0x29D1:word16], 0x0002, out ds_34)
	Mem39[ss:fp - 0x0008:word16] = Mem18[ds_34:0x29D1:word16]
	Mem42[ss:fp - 0x000A:word16] = Mem39[ds_34:0x29CF:word16]
	selector ds_45
	word16 dx_46 = fn0800_3E5D(fp - 0x0002, ds_34, wArg00, wArg02, out ds_45)
	Mem49[ds_45:0x29ED:word16] = dx_46
	Mem50[ds_45:0x29EB:word16] = ax_35
	Mem52[ss:fp - 0x0008:word16] = Mem50[ds_45:0x29D1:word16]
	Mem54[ss:fp - 0x000A:word16] = Mem52[ds_45:0x29CF:word16]
	word16 si_55
	selector ds_262
	word16 ax_57 = fn0800_4194(fp - 0x0002, ds_45, wArg00, wArg02, out si_55, out ds_262)
	word16 sp_264 = fp - 0x0006
	branch dx_46 >u Mem54[ds_262:0x29ED:word16] l0800_1D69
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1D52:
	branch dx_46 <u Mem54[ds_262:0x29ED:word16] l0800_1D5A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D54:
	branch ax_57 >=u Mem54[ds_262:0x29EB:word16] l0800_1D69
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D5A:
	Mem253[ss:fp - 0x0008:word16] = ds_262
	Mem256[ss:fp - 0x000A:word16] = 0x4348
	Mem259[ss:fp - 0x000C:word16] = 0x000B
	word16 si_260
	word16 di_261
	fn0800_0D24(fp - 0x0002, ds_262, out si_260, out di_261, out ds_262)
	sp_264 = fp - 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D69:
	word16 sp_74 = sp_264 - 0x0002
	Mem75[ss:sp_74:word16] = 0x0000
	Mem77[ss:sp_74 - 0x0002:word16] = Mem75[ds_262:0x29ED:word16]
	Mem79[ss:sp_74 - 0x0004:word16] = Mem77[ds_262:0x29EB:word16]
	Mem81[ss:sp_74 - 0x0006:word16] = Mem79[ds_262:0x29D1:word16]
	Mem83[ss:sp_74 - 0x0008:word16] = Mem81[ds_262:0x29CF:word16]
	selector ds_86
	word16 ax_87 = fn0800_ACB3(fp - 0x0002, ds_262, ptrArg00, wArg02, wArg08, out ds_86)
	Mem91[ss:sp_74:word16] = Mem83[ds_86:0x29D1:word16]
	Mem93[ss:sp_74 - 0x0002:word16] = Mem91[ds_86:0x29CF:word16]
	selector ds_245
	word16 dx_95 = fn0800_3E5D(fp - 0x0002, ds_86, wArg00, wArg02, out ds_245)
	word16 sp_101 = sp_74 + 0x0002
	branch dx_95 != 0x524E l0800_1D9B
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D96:
	branch ax_87 == 0x4341 l0800_1DAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D9B:
	Mem236[ss:sp_74:word16] = ds_245
	Mem239[ss:sp_74 - 0x0002:word16] = 0x4348
	Mem242[ss:sp_74 - 0x0004:word16] = 0x000B
	word16 si_243
	word16 di_244
	fn0800_0D24(fp - 0x0002, ds_245, out si_243, out di_244, out ds_245)
	sp_101 = sp_74 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DAA:
	word16 sp_127
	selector ds_126
	word16 sp_102 = sp_101 - 0x0002
	Mem103[ss:sp_102:word16] = Mem93[ds_245:0x29D1:word16]
	Mem105[ss:sp_102 - 0x0002:word16] = Mem103[ds_245:0x29CF:word16]
	word16 si_106
	word16 di_107
	selector ds_108
	fn0800_3E27(fp - 0x0002, ds_245, wArg00, wArg02, out si_106, out di_107, out ds_108)
	Mem114[ss:sp_102:word16] = Mem105[ds_108:0x29D1:word16]
	Mem116[ss:sp_102 - 0x0002:word16] = Mem114[ds_108:0x29CF:word16]
	word16 si_117
	word16 di_118
	selector ds_119
	Mem122[ss:fp - 0x0004:word16] = fn0800_3E27(fp - 0x0002, ds_108, wArg00, wArg02, out si_117, out di_118, out ds_119)
	branch Mem122[ss:fp + 0x0002:word16] == 0x0000 l0800_1DE4
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DE4:
	Mem226[ss:sp_102:word16] = 0x0000
	Mem228[ss:sp_102 - 0x0002:word16] = 0xFFF0
	ds_126 = fn0800_4311(ds_119, wArg00, wArg02)
	Mem232[ds_126:0x2E53:word16] = 0xFFF0
	Mem233[ds_126:0x2E51:word16] = 0x0000
	sp_127 = sp_102 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DD1:
	Mem213[ss:sp_102:word16] = 0x0000
	Mem215[ss:sp_102 - 0x0002:word16] = si_117
	ds_126 = fn0800_4311(ds_119, wArg00, wArg02)
	Mem219[ds_126:0x2E53:word16] = dx_95
	Mem220[ds_126:0x2E51:word16] = 0x0000
	sp_127 = sp_102 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DF8:
	word16 sp_131 = sp_127 - 0x0002
	Mem132[ss:sp_131:word16] = 0x0000
	Mem134[ss:sp_131 - 0x0002:word16] = Mem132[ds_126:0x29ED:word16]
	Mem136[ss:sp_131 - 0x0004:word16] = Mem134[ds_126:0x29EB:word16]
	Mem138[ss:sp_131 - 0x0006:word16] = Mem136[ds_126:0x29D1:word16]
	Mem140[ss:sp_131 - 0x0008:word16] = Mem138[ds_126:0x29CF:word16]
	selector ds_141
	fn0800_ACB3(fp - 0x0002, ds_126, ptrArg00, wArg02, wArg08, out ds_141)
	Mem145[ss:sp_131:word16] = Mem140[ds_141:0x29D1:word16]
	Mem147[ss:sp_131 - 0x0002:word16] = Mem145[ds_141:0x29CF:word16]
	Mem152[ss:sp_131 - 0x0004:word16] = 0x0000
	Mem154[ss:sp_131 - 0x0006:word16] = si_117
	Mem156[ss:sp_131 - 0x0008:word16] = Mem154[ds_141:0x2E53:word16]
	Mem158[ss:sp_131 - 0x000A:word16] = Mem156[ds_141:0x2E51:word16]
	word16 di_162
	selector ds_163
	word16 si_164 = fn0800_4110(ds_141, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_162, out ds_163)
	Mem168[ss:sp_131:word16] = 0x0000
	Mem172[ss:sp_131 - 0x0002:word16] = si_164 - 0x0008
	word16 ax_173 = Mem172[ds_163:0x2E51:word16]
	Mem177[ss:sp_131 - 0x0004:word16] = Mem172[ds_163:0x2E53:word16]
	Mem179[ss:sp_131 - 0x0006:word16] = ax_173 + 0x0008
	byte dl_180
	branch fn0800_2CCF(ds_163, ptrArg00, wArg04, wArg06, out dl_180) == Mem179[ss:fp - 0x0004:word16] l0800_1E59
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_1E4A:
	Mem196[ss:sp_131:word16] = ds_163
	Mem199[ss:sp_131 - 0x0002:word16] = 0x4348
	Mem202[ss:sp_131 - 0x0004:word16] = 0x000D
	word16 si_203
	word16 di_204
	fn0800_0D24(fp - 0x0002, ds_163, out si_203, out di_204, out ds_163)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_1E59:
	return ds_163
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_1CF6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:0x40 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_1E5E(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_1E5E_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16)

l0800_1E5E:
	byte dl_38
	byte al_43 = (byte) (fn0800_2CCF(ds, DPB(ptrLoc0A, Mem0[ds:0x2E51:word16] + 0x0008, 0), (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8) - 0x0008, 0x0000, out dl_38) >>u 0x08)
	ptr32 es_bx_44 = Mem0[ds:0x2E51:segptr32]
	Mem0[es_bx_44 + 0x0006:byte] = al_43
	Mem0[es_bx_44 + 0x0007:byte] = dl_38
	selector ds_71
	fn0800_ACB3(bp, ds, DPB(ptrLoc0C, Mem48[ds:0x29CF:word16], 0), Mem48[ds:0x29D1:word16], 0x0000, out ds_71)
	Mem76[ss:fp - 0x0004:word16] = Mem48[ds_71:0x29D1:word16]
	Mem79[ss:fp - 0x0006:word16] = Mem76[ds_71:0x29CF:word16]
	word16 si_82
	word16 di_83
	selector ds_162
	word16 ax_85 = fn0800_3E27(bp, ds_71, wArg00, wArg02, out si_82, out di_83, out ds_162)
	word16 sp_163 = fp - 0x0002
	branch si_82 <=u ax_85 l0800_1EF7
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1EF7:
	branch si_82 >=u ax_85 l0800_1F19
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1EFB:
	Mem173[ss:fp - 0x0004:word16] = 0x0000
	Mem175[ss:fp - 0x0006:word16] = ax_85 - si_82
	Mem177[ss:fp - 0x0008:word16] = Mem175[ds_162:0x29ED:word16]
	Mem179[ss:fp - 0x000A:word16] = Mem177[ds_162:0x29EB:word16]
	Mem181[ss:fp - 0x000C:word16] = Mem179[ds_162:0x29D1:word16]
	Mem183[ss:fp - 0x000E:word16] = Mem181[ds_162:0x29CF:word16]
	ds_162 = fn0800_3C99(bp, ds_162)
	sp_163 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1ED7:
	Mem151[ss:fp - 0x0004:word16] = 0x0000
	Mem153[ss:fp - 0x0006:word16] = si_82 - ax_85
	Mem155[ss:fp - 0x0008:word16] = Mem153[ds_162:0x29ED:word16]
	Mem157[ss:fp - 0x000A:word16] = Mem155[ds_162:0x29EB:word16]
	Mem159[ss:fp - 0x000C:word16] = Mem157[ds_162:0x29D1:word16]
	Mem161[ss:fp - 0x000E:word16] = Mem159[ds_162:0x29CF:word16]
	ds_162 = fn0800_3BC3(bp, ds_162)
	sp_163 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> bp:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1F19:
	word16 sp_98 = sp_163 - 0x0002
	Mem99[ss:sp_98:word16] = 0x0000
	Mem101[ss:sp_98 - 0x0002:word16] = Mem99[ds_162:0x29ED:word16]
	Mem103[ss:sp_98 - 0x0004:word16] = Mem101[ds_162:0x29EB:word16]
	Mem105[ss:sp_98 - 0x0006:word16] = Mem103[ds_162:0x29D1:word16]
	Mem107[ss:sp_98 - 0x0008:word16] = Mem105[ds_162:0x29CF:word16]
	selector ds_110
	fn0800_ACB3(bp, ds_162, ptrArg00, wArg02, wArg08, out ds_110)
	Mem114[ss:sp_98:word16] = Mem107[ds_110:0x29D1:word16]
	Mem116[ss:sp_98 - 0x0002:word16] = Mem114[ds_110:0x29CF:word16]
	Mem121[ss:sp_98 - 0x0004:word16] = 0x0000
	Mem123[ss:sp_98 - 0x0006:word16] = si_82
	Mem125[ss:sp_98 - 0x0008:word16] = Mem123[ds_110:0x2E53:word16]
	Mem127[ss:sp_98 - 0x000A:word16] = Mem125[ds_110:0x2E51:word16]
	selector ds_131 = fn0800_4152(ds_110, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
	Mem135[ss:sp_98:word16] = Mem127[ds_131:0x2E53:word16]
	Mem137[ss:sp_98 - 0x0002:word16] = Mem135[ds_131:0x2E51:word16]
	selector ds_138
	fn0800_4346(ds_131, wArg00, wArg02, out ds_138)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_1E5E_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si



word16 fn0800_1F5C(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_1F5C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_1F5C:
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	word16 cx_23 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C:
	branch cx_23 == 0x0000 l0800_1F6E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C_1:
	di_15 = di_15 + 0x0001
	cx_23 = cx_23 - 0x0001
	branch 0x00 != Mem0[es_16:di_15:byte] l0800_1F6C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6E:
	word16 cx_35 = ~cx_23
	word16 di_355 = di_15 - cx_35
	byte Z_363 = cond(di_355)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75:
	branch cx_35 == 0x0000 l0800_1F77
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75_2:
	Z_363 = cond(0x3A - Mem0[es_16:di_355:byte]) (alias)
	di_355 = di_355 + 0x0001
	cx_35 = cx_35 - 0x0001
	branch 0x3A != Mem0[es_16:di_355:byte] l0800_1F75
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F77:
	branch Z_363 l0800_1F80
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F79:
	di_355 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F80:
	word16 ax_330 = 0x0000
	branch di_355 - 0x0001 == 0x0000 l0800_1FAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F87:
	word16 di_282 = (word16) ptrArg02
	word16 cx_288 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F:
	branch cx_288 == 0x0000 l0800_1F91
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F_1:
	di_282 = di_282 + 0x0001
	cx_288 = cx_288 - 0x0001
	branch 0x00 != Mem0[0x0000:di_282:byte] l0800_1F8F
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F91:
	word16 cx_298 = ~cx_288
	word16 di_303 = di_282 - cx_298
	byte Z_307 = cond(di_303)
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98:
	branch cx_298 == 0x0000 l0800_1F9A
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98_2:
	Z_307 = cond(0x3A - Mem0[0x0000:di_303:byte]) (alias)
	di_303 = di_303 + 0x0001
	cx_298 = cx_298 - 0x0001
	branch 0x3A != Mem0[0x0000:di_303:byte] l0800_1F98
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9A:
	branch Z_307 l0800_1FA3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9C:
	di_303 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1FA3:
	ax_330 = 0x0000
	wArg04 = 0x0000
	wArg02 = di_303 - 0x0001 + 0x0001
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1FAD:
	word16 ax_91 = (DPB(ax_330, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 ax_93 = Mem0[ds:0x2E53:word16]
	word16 dx_95 = Mem0[ds:0x2E51:word16] + ax_91
	word16 di_109 = (word16) ptrArg02
	word16 cx_105 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE:
	branch cx_105 == 0x0000 l0800_1FE0
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE_1:
	di_109 = di_377 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_377 = di_109
	branch 0x00 != Mem0[0x0000:di_377:byte] l0800_1FDE
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FE0:
	word16 cx_115 = ~cx_105
	word16 ax_122 = dx_95 - Mem0[ds:0x2E51:word16]
	word16 ax_126 = ax_122 + (cx_115 + 0x0003)
	word16 bx_138 = (word16) ptrLoc06
	word16 dx_133
	Mem139[0x0000:bx_138:byte] = (byte) fn0800_8C8A(ax_126, 0x08, 0x0000 - (ax_122 <u 0x0000) + (ax_126 <u 0x0000), wLoc10, out dx_133)
	byte bLoc0A_119 = (byte) (cx_115 + 0x0003)
	Mem148[0x0000:bx_138 + 0x0001:byte] = (byte) (dx_95 - Mem139[ds:0x2E51:word16]) + bLoc0A_119
	Mem152[ss:fp - 0x0010:word16] = 0x0000
	Mem157[ss:fp - 0x0012:word16] = dx_95 + 0x0002
	word16 di_158 = wArg02
	word16 cx_165 = 0xFFFF
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C:
	branch cx_165 == 0x0000 l0800_202E
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C_2:
	di_158 = di_158 + 0x0001
	cx_165 = cx_165 - 0x0001
	branch 0x00 != Mem157[0x0000:di_158:byte] l0800_202C
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202E:
	word16 di_184 = Mem157[ss:fp - 0x0012:word16]
	selector es_187 = Mem157[ss:fp - 0x0010:selector]
	Mem192[ss:fp - 0x0010:word16] = ds
	word16 cx_175 = ~cx_165
	word16 cx_177 = cx_175 >>u 0x0001
	word16 si_183 = di_158 - cx_175
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D:
	branch cx_177 == 0x0000 l0800_203F
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203F:
	word16 cx_206 = cx_177 * 0x0002 + (cx_175 >>u 0x0001 <u 0x0000)
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2041:
	branch cx_206 == 0x0000 l0800_2043
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2043:
	selector ds_221 = Mem192[ss:fp - 0x0010:selector]
	*dsOut = ds_221
	Mem225[ax_93:bx_138 + (cx_115 + 0x0003) - 0x0001:byte] = 0x00
	ptr32 es_bx_231 = Mem225[ds_221:0x2E51:segptr32]
	Mem0[es_bx_231 + 0x0004:byte] = (byte) (ax_91 + (cx_115 + 0x0003) >>u 0x08)
	Mem0[es_bx_231 + 0x0005:byte] = bLoc08 + bLoc0A_119
	Mem243[ss:fp - 0x0010:word16] = 0x0000
	Mem245[ss:fp - 0x0012:word16] = 0x0000
	Mem247[ss:fp - 0x0014:word16] = 0x0000
	Mem249[ss:fp - 0x0016:word16] = cx_115 + 0x0003
	fn0800_2688(fp - 0x0002, ds_221, wArg00, wArg02, wArg04, wArg06)
	word16 dx_254
	*dxOut = ax_93
	return dx_95
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_1F5C_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:0x00 -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2041_1:
	Mem215[es_187:di_184:byte] = Mem192[0x0000:si_183:byte]
	si_183 = si_183 + 0x0001
	di_184 = di_184 + 0x0001
	cx_206 = cx_206 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D_3:
	Mem200[es_187:di_184:word16] = Mem192[0x0000:si_183:word16]
	si_183 = si_183 + 0x0002
	di_184 = di_184 + 0x0002
	cx_177 = cx_177 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)



void fn0800_2085(selector ds, segptr32 ptrArg02, selector psegArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(32)
fn0800_2085_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(32)

l0800_2085:
	word16 ax_28 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_32 = Mem0[ds:0x2E51:word16] + ax_28
	word16 di_37 = (word16) ptrArg02
	selector es_38 = SLICE(ptrArg02, selector, 16)
	word16 cx_43 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20BE:
	branch cx_43 == 0x0000 l0800_20C0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20BE_1:
	di_37 = di_506 + 0x0001
	cx_43 = cx_43 - 0x0001
	word16 di_506 = di_37
	branch 0x00 != Mem0[es_38:di_506:byte] l0800_20BE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20C0:
	word16 bx_73 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte] << 0x08) + DPB(dx_32, 0x00, 8))
	word16 cx_55 = ~cx_43
	segptr32 ptrLoc06_78 = DPB(ptrLoc06, bx_73 - 0x0001, 0)
	selector ds_98 = fn0800_B0F3(bx_73 - 0x0001 + (cx_55 + 0x0004), Mem0[ds:0x2E53:word16], bx_73 - 0x0001, Mem0[ds:0x2E53:word16], dx_32 - (bx_73 - 0x0001))
	selector es_102 = SLICE(ptrLoc06_78, selector, 16)
	word16 di_111 = wArg02
	word16 cx_117 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_211F:
	branch cx_117 == 0x0000 l0800_2121
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_211F_2:
	di_111 = di_111 + 0x0001
	cx_117 = cx_117 - 0x0001
	branch 0x00 != Mem0[psegArg04:di_111:byte] l0800_211F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_2121:
	word16 cx_127 = ~cx_117
	word16 cx_129 = cx_127 >>u 0x0001
	word16 si_135 = di_111 - cx_127
	word16 di_136 = bx_73 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2130:
	branch cx_129 == 0x0000 l0800_2132
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2132:
	word16 cx_158 = cx_129 * 0x0002 + (cx_127 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2134:
	branch cx_158 == 0x0000 l0800_2136
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2136:
	word16 di_176 = bx_73 - 0x0001
	selector es_177 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_182 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_213F:
	branch cx_182 == 0x0000 l0800_2141
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_213F_1:
	di_176 = di_176 + 0x0001
	cx_182 = cx_182 - 0x0001
	branch 0x00 != Mem0[es_177:di_176:byte] l0800_213F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2141:
	word16 cx_192 = ~cx_182
	word16 di_196 = di_176 - cx_192
	byte Z_200 = cond(di_196)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2147:
	branch cx_192 == 0x0000 l0800_2149
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2147_2:
	Z_200 = cond(0x00 - Mem0[es_177:di_196:byte]) (alias)
	di_196 = di_196 + 0x0001
	cx_192 = cx_192 - 0x0001
	branch 0x00 != Mem0[es_177:di_196:byte] l0800_2147
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2149:
	branch Z_200 l0800_2152
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_214B:
	di_196 = 0x0001
	es_177 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2152:
	Mem224[es_177:di_196 - 0x0001 + 0x0001:byte] = 0x00
	word16 di_226 = bx_73 - 0x0001
	selector es_227 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_232 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2164:
	branch cx_232 == 0x0000 l0800_2166
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2164_1:
	di_226 = di_226 + 0x0001
	cx_232 = cx_232 - 0x0001
	branch 0x00 != Mem224[es_227:di_226:byte] l0800_2164
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2166:
	word16 cx_242 = ~cx_232
	word16 di_246 = di_226 - cx_242
	byte Z_250 = cond(di_246)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216C:
	branch cx_242 == 0x0000 l0800_216E
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216C_2:
	Z_250 = cond(0x00 - Mem224[es_227:di_246:byte]) (alias)
	di_246 = di_246 + 0x0001
	cx_242 = cx_242 - 0x0001
	branch 0x00 != Mem224[es_227:di_246:byte] l0800_216C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216E:
	branch Z_250 l0800_2177
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2170:
	di_246 = 0x0001
	es_227 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2177:
	Mem274[es_227:di_246 - 0x0001 + 0x0002:byte] = 0x00
	word16 di_276 = bx_73 - 0x0001
	selector es_277 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_282 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2189:
	branch cx_282 == 0x0000 l0800_218B
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2189_1:
	di_276 = di_276 + 0x0001
	cx_282 = cx_282 - 0x0001
	branch 0x00 != Mem274[es_277:di_276:byte] l0800_2189
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_218B:
	word16 cx_292 = ~cx_282
	word16 di_296 = di_276 - cx_292
	byte Z_300 = cond(di_296)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2191:
	branch cx_292 == 0x0000 l0800_2193
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2191_2:
	Z_300 = cond(0x00 - Mem274[es_277:di_296:byte]) (alias)
	di_296 = di_296 + 0x0001
	cx_292 = cx_292 - 0x0001
	branch 0x00 != Mem274[es_277:di_296:byte] l0800_2191
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2193:
	branch Z_300 l0800_219C
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2195:
	di_296 = 0x0001
	es_277 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_219C:
	Mem324[es_277:di_296 - 0x0001 + 0x0003:byte] = 0x00
	word16 di_326 = bx_73 - 0x0001
	selector es_327 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_332 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21AE:
	branch cx_332 == 0x0000 l0800_21B0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21AE_1:
	di_326 = di_326 + 0x0001
	cx_332 = cx_332 - 0x0001
	branch 0x00 != Mem324[es_327:di_326:byte] l0800_21AE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B0:
	word16 cx_342 = ~cx_332
	word16 di_346 = di_326 - cx_342
	byte Z_350 = cond(di_346)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B6:
	branch cx_342 == 0x0000 l0800_21B8
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B6_2:
	Z_350 = cond(0x00 - Mem324[es_327:di_346:byte]) (alias)
	di_346 = di_346 + 0x0001
	cx_342 = cx_342 - 0x0001
	branch 0x00 != Mem324[es_327:di_346:byte] l0800_21B6
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B8:
	branch Z_350 l0800_21C1
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21BA:
	di_346 = 0x0001
	es_327 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21C1:
	Mem374[es_327:di_346 - 0x0001 + 0x0004:byte] = 0x00
	ptr32 es_bx_380 = Mem374[ds_98:0x2E51:segptr32]
	Mem0[es_bx_380 + 0x0004:byte] = (byte) (ax_28 + (cx_55 + 0x0004) >>u 0x08)
	Mem0[es_bx_380 + 0x0005:byte] = bLoc0C + bLoc0E
	fn0800_2688(fp - 0x0002, ds_98, cx_55 + 0x0004, 0x0000, 0x0000, 0x0000)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2085_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di bx:<invalid> es:<invalid> si:si ds:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2134_1:
	Mem167[es_102:di_136:byte] = Mem0[psegArg04:si_135:byte]
	si_135 = si_135 + 0x0001
	di_136 = di_136 + 0x0001
	cx_158 = cx_158 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2130_3:
	Mem152[es_102:di_136:word16] = Mem0[psegArg04:si_135:word16]
	si_135 = si_135 + 0x0002
	di_136 = di_136 + 0x0002
	cx_129 = cx_129 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)



selector fn0800_2201(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_2201_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_2201:
	word16 ax_24 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, Mem0[Mem0[ds:0x2E51:segptr32] + 0x0005:byte], 0)
	word16 dx_29 = Mem0[ds:0x2E51:word16] + ax_24
	word16 dx_47 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] << 0x08) + DPB(dx_29, 0x00, 8)) - wArg02
	word16 ax_54 = wArg02 + dx_47
	selector ds_74 = fn0800_B0F3(wArg02, wArg04, ax_54, wArg04, dx_29 - ax_54)
	ptr32 es_bx_81 = Mem0[ds_74:0x2E51:segptr32]
	Mem0[es_bx_81 + 0x0004:byte] = (byte) (ax_24 - dx_47 >>u 0x08)
	Mem0[es_bx_81 + 0x0005:byte] = (byte) ax_24 - (byte) dx_47
	word16 ax_96 = -dx_47
	fn0800_2688(fp - 0x0002, ds_74, ax_96, -0x0000 - (ax_96 == 0x0000), 0x0000, 0x0000)
	word16 dx_106 = Mem87[ds_74:0x45AE:word16]
	branch Mem87[ds_74:0x45B0:word16] != wArg04 l0800_22EA
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22B7:
	branch dx_106 != wArg02 l0800_22EA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22EA:
	branch Mem87[ds_74:0x45AE:word16] <=u wArg02 l0800_22F9
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_22F2:
	Mem141[ds_74:0x45AA:word16] = Mem87[ds_74:0x45AA:word16] - dx_47
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22F9:
	return ds_74
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_22BC:
	selector es_147 = SLICE(ptrArg02, selector, 16)
	word16 di_148 = (word16) ptrArg02 + 0x0002
	word16 cx_154 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7:
	branch cx_154 == 0x0000 l0800_22C9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7_1:
	di_148 = di_148 + 0x0001
	cx_154 = cx_154 - 0x0001
	branch 0x00 != Mem87[es_147:di_148:byte] l0800_22C7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C9:
	word16 cx_164 = ~cx_154
	word16 di_168 = di_148 - cx_164
	byte Z_172 = cond(di_168)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF:
	branch cx_164 == 0x0000 l0800_22D1
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF_2:
	Z_172 = cond(0x00 - Mem87[es_147:di_168:byte]) (alias)
	di_168 = di_168 + 0x0001
	cx_164 = cx_164 - 0x0001
	branch 0x00 != Mem87[es_147:di_168:byte] l0800_22CF
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D1:
	branch Z_172 l0800_22DA
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D3:
	di_168 = 0x0001
	es_147 = 0x0000
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22DA:
	Mem202[ds_74:0x45AC:word16] = es_147
	Mem203[ds_74:0x45AA:word16] = di_168 - 0x0001 + 0x0001
	return ds_74
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2201_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dx:<invalid> dh:<invalid> bx:<invalid> di:di Sequence es:di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_22FE(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_22FE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_22FE:
	word16 ax_25 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_29 = Mem0[ds:0x2E51:word16] + ax_25
	word16 di_202 = (word16) ptrArg02
	selector es_35 = SLICE(ptrArg02, selector, 16)
	word16 cx_204 = 0xFFFF
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336:
	branch cx_204 == 0x0000 l0800_2338
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336_1:
	di_202 = di_202 + 0x0001
	cx_204 = cx_204 - 0x0001
	branch 0x00 != Mem0[es_35:di_202:byte] l0800_2336
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2338:
	word16 cx_198 = ~cx_204
	word16 di_185 = di_202 - cx_198
	byte Z_193 = cond(di_185)
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E:
	branch cx_198 == 0x0000 l0800_2340
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E_2:
	Z_193 = cond(0x00 - Mem0[es_35:di_185:byte]) (alias)
	di_185 = di_185 + 0x0001
	cx_198 = cx_198 - 0x0001
	branch 0x00 != Mem0[es_35:di_185:byte] l0800_233E
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2340:
	branch Z_193 l0800_2349
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2342:
	di_185 = 0x0001
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2349:
	word16 di_89 = di_185 - 0x0001 + 0x0005 - wArg02
	word16 ax_96 = wArg02 + di_89
	selector ds_116 = fn0800_B0F3(wArg02, wArg04, ax_96, wArg04, dx_29 - ax_96)
	ptr32 es_bx_123 = Mem0[ds_116:0x2E51:segptr32]
	Mem0[es_bx_123 + 0x0004:byte] = (byte) (ax_25 - di_89 >>u 0x08)
	Mem0[es_bx_123 + 0x0005:byte] = bLoc08 - (byte) di_89
	word16 ax_139 = -di_89
	fn0800_2688(fp - 0x0002, ds_116, ax_139, -0x0000 - (ax_139 == 0x0000), 0x0000, 0x0000)
	Mem151[ds_116:0x45AC:word16] = wArg04
	word16 dx_150 = wArg02 + di_89
	Mem152[ds_116:0x45AA:word16] = dx_150
	branch (dx_150 | wArg04) == 0x0000 l0800_23D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_23D8:
	branch Mem152[ds_116:0x45AA:word16] <=u wArg02 l0800_23E7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_23E0:
	Mem183[ds_116:0x45AA:word16] = Mem152[ds_116:0x45AA:word16] - di_89
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_23E7:
	return ds_116
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_23C6:
	Mem166[ds_116:0x45AC:word16] = wArg04
	Mem167[ds_116:0x45AA:word16] = wArg02
	return ds_116
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_22FE_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_23EC(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_23EC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_23EC:
	word16 dx_20
	word16 bp_21
	selector ds_22
	word16 ax_23 = fn0800_24FE(fp - 0x0002, ds, DPB(ptrLoc10, wArg02, 0), out dx_20, out bp_21, out ds_22)
	Mem25[ss:bp_21 - 0x0006:word16] = dx_20
	Mem27[ss:bp_21 - 0x0008:word16] = ax_23
	ptr32 es_di_28 = Mem27[ss:bp_21 + 0x0004:segptr32]
	word16 di_29 = (word16) es_di_28
	selector es_30 = SLICE(es_di_28, selector, 16)
	word16 cx_37 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_240D:
	branch cx_37 == 0x0000 l0800_240F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_240D_1:
	di_29 = di_29 + 0x0001
	cx_37 = cx_37 - 0x0001
	branch 0x00 != Mem27[es_30:di_29:byte] l0800_240D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_240F:
	word16 cx_394 = ~cx_37
	word16 di_382 = di_29 - cx_394
	byte Z_390 = cond(di_382)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2415:
	branch cx_394 == 0x0000 l0800_2417
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2415_2:
	Z_390 = cond(0x00 - Mem27[es_30:di_382:byte]) (alias)
	di_382 = di_382 + 0x0001
	cx_394 = cx_394 - 0x0001
	branch 0x00 != Mem27[es_30:di_382:byte] l0800_2415
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2417:
	branch Z_390 l0800_2420
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2419:
	di_382 = 0x0001
	es_30 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2420:
	ptr32 es_di_85 = Mem27[ss:bp_21 + 0x0004:segptr32]
	Mem89[ss:fp - 0x000E:word16] = (int16) Mem27[es_30:di_382 - 0x0001 + 0x0001:byte] << 0x08
	word16 di_103 = (word16) es_di_85
	selector es_134 = SLICE(es_di_85, selector, 16)
	word16 cx_104 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2437:
	branch cx_104 == 0x0000 l0800_2439
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2437_1:
	di_103 = di_103 + 0x0001
	cx_104 = cx_104 - 0x0001
	branch 0x00 != Mem89[es_134:di_103:byte] l0800_2437
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2439:
	word16 cx_106 = ~cx_104
	word16 di_112 = di_103 - cx_106
	byte Z_116 = cond(di_112)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_243F:
	branch cx_106 == 0x0000 l0800_2441
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_243F_2:
	Z_116 = cond(0x00 - Mem89[es_134:di_405:byte]) (alias)
	di_112 = di_405 + 0x0001
	cx_106 = cx_106 - 0x0001
	word16 di_405 = di_112
	branch 0x00 != Mem89[es_134:di_405:byte] l0800_243F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2441:
	branch Z_116 l0800_244A
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2443:
	es_134 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_244A:
	ptr32 es_di_151 = Mem89[ss:bp_21 + 0x0004:segptr32]
	Mem155[ss:fp - 0x000E:word16] = Mem89[ss:fp - 0x000E:word16] + DPB(es_134, 0x00, 8)
	Mem157[ss:fp - 0x0010:word16] = 0x0000
	word16 di_152 = (word16) es_di_151
	selector es_153 = SLICE(es_di_151, selector, 16)
	word16 cx_158 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2462:
	branch cx_158 == 0x0000 l0800_2464
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2462_1:
	di_152 = di_152 + 0x0001
	cx_158 = cx_158 - 0x0001
	branch 0x00 != Mem157[es_153:di_152:byte] l0800_2462
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2464:
	word16 cx_168 = ~cx_158
	word16 di_174 = di_152 - cx_168
	byte Z_178 = cond(di_174)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246A:
	branch cx_168 == 0x0000 l0800_246C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246A_2:
	Z_178 = cond(0x00 - Mem157[es_153:di_174:byte]) (alias)
	di_174 = di_174 + 0x0001
	cx_168 = cx_168 - 0x0001
	branch 0x00 != Mem157[es_153:di_174:byte] l0800_246A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246C:
	branch Z_178 l0800_2475
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246E:
	di_174 = 0x0001
	es_153 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2475:
	ptr32 es_di_205 = Mem157[ss:bp_21 + 0x0004:segptr32]
	Mem209[ss:fp - 0x0012:word16] = (int16) Mem157[es_153:di_174 - 0x0001 + 0x0003:byte] << 0x08
	word16 di_206 = (word16) es_di_205
	selector es_207 = SLICE(es_di_205, selector, 16)
	word16 cx_216 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248C:
	branch cx_216 == 0x0000 l0800_248E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248C_1:
	di_206 = di_206 + 0x0001
	cx_216 = cx_216 - 0x0001
	branch 0x00 != Mem209[es_207:di_206:byte] l0800_248C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248E:
	word16 cx_226 = ~cx_216
	word16 di_232 = di_206 - cx_226
	byte Z_236 = cond(di_232)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2494:
	branch cx_226 == 0x0000 l0800_2496
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2494_2:
	Z_236 = cond(0x00 - Mem209[es_207:di_409:byte]) (alias)
	di_232 = di_409 + 0x0001
	cx_226 = cx_226 - 0x0001
	word16 di_409 = di_232
	branch 0x00 != Mem209[es_207:di_409:byte] l0800_2494
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2496:
	branch Z_236 l0800_249F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2498:
	es_207 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_249F:
	word16 ax_269 = Mem209[ss:fp - 0x0010:word16] + (Mem209[ss:fp - 0x0012:word16] + DPB(es_207, 0x00, 8))
	Mem275[ss:bp_21 - 0x0002:word16] = Mem209[ss:fp - 0x000E:word16] + (ax_269 <u 0x0000)
	Mem276[ss:bp_21 - 0x0004:word16] = ax_269
	Mem278[ss:fp - 0x000E:word16] = Mem276[ss:bp_21 - 0x0006:word16]
	Mem280[ss:fp - 0x0010:word16] = Mem278[ss:bp_21 - 0x0008:word16]
	word16 dx_283 = Mem280[ss:bp_21 - 0x0004:word16] - Mem280[ds_22:0x45A6:word16]
	Mem289[ss:fp - 0x0012:word16] = Mem280[ss:bp_21 - 0x0002:word16] - Mem280[ds_22:0x45A8:word16] - (dx_283 <u 0x0000)
	Mem291[ss:fp - 0x0014:word16] = dx_283
	Mem293[ss:fp - 0x0016:word16] = Mem291[ds_22:0x29D1:word16]
	Mem295[ss:fp - 0x0018:word16] = Mem293[ds_22:0x29CF:word16]
	selector ds_296 = fn0800_3C99(bp_21, ds_22)
	*dsOut = ds_296
	Mem299[ss:fp - 0x000E:word16] = Mem295[ss:bp_21 - 0x0002:word16]
	Mem301[ss:fp - 0x0010:word16] = Mem299[ss:bp_21 - 0x0004:word16]
	word16 dx_305 = -Mem301[ss:bp_21 - 0x0008:word16]
	Mem310[ss:fp - 0x0012:word16] = -Mem301[ss:bp_21 - 0x0006:word16] - (dx_305 == 0x0000)
	Mem312[ss:fp - 0x0014:word16] = dx_305
	fn0800_2688(bp_21, ds_296, wArg00, wArg02, wArg04, wArg06)
	return Mem312[ss:bp_21:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp

fn0800_23EC_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:0x00 bl:<invalid> dl:<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_24FE(word16 bp, selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32)
fn0800_24FE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_24FE:
	word16 di_12 = (word16) ptrArg02
	selector es_13 = SLICE(ptrArg02, selector, 16)
	word16 cx_21 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250D:
	branch cx_21 == 0x0000 l0800_250F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250D_1:
	di_12 = di_12 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch 0x00 != Mem0[es_13:di_12:byte] l0800_250D
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_250F:
	word16 cx_33 = ~cx_21
	word16 di_39 = di_12 - cx_33
	byte Z_43 = cond(di_39)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2515:
	branch cx_33 == 0x0000 l0800_2517
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2515_2:
	Z_43 = cond(0x00 - Mem0[es_13:di_489:byte]) (alias)
	di_39 = di_489 + 0x0001
	cx_33 = cx_33 - 0x0001
	word16 di_489 = di_39
	branch 0x00 != Mem0[es_13:di_489:byte] l0800_2515
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2517:
	branch Z_43 l0800_2520
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2519:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2520:
	word16 di_464 = (word16) ptrArg02
	word16 cx_466 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2537:
	branch cx_466 == 0x0000 l0800_2539
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2537_1:
	di_464 = di_464 + 0x0001
	cx_466 = cx_466 - 0x0001
	branch 0x00 != Mem0[0x0000:di_464:byte] l0800_2537
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2539:
	word16 cx_103 = ~cx_466
	word16 di_110 = di_464 - cx_103
	byte Z_101 = cond(di_110)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_253F:
	branch cx_103 == 0x0000 l0800_2541
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_253F_2:
	Z_101 = cond(0x00 - Mem0[0x0000:di_491:byte]) (alias)
	di_110 = di_491 + 0x0001
	cx_103 = cx_103 - 0x0001
	word16 di_491 = di_110
	branch 0x00 != Mem0[0x0000:di_491:byte] l0800_253F
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2541:
	branch Z_101 l0800_254A
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_2543:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Stack +0002(32)

l0800_254A:
	word16 di_136 = (word16) ptrArg02
	selector es_137 = SLICE(ptrArg02, selector, 16)
	word16 cx_143 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562:
	branch cx_143 == 0x0000 l0800_2564
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562_1:
	di_136 = di_136 + 0x0001
	cx_143 = cx_143 - 0x0001
	branch 0x00 != Mem0[es_137:di_136:byte] l0800_2562
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2564:
	word16 cx_153 = ~cx_143
	word16 di_159 = di_136 - cx_153
	byte Z_163 = cond(di_159)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A:
	branch cx_153 == 0x0000 l0800_256C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A_2:
	Z_163 = cond(0x00 - Mem0[es_137:di_493:byte]) (alias)
	di_159 = di_493 + 0x0001
	cx_153 = cx_153 - 0x0001
	word16 di_493 = di_159
	branch 0x00 != Mem0[es_137:di_493:byte] l0800_256A
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256C:
	branch Z_163 l0800_2575
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256E:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2575:
	word16 di_191 = (word16) ptrArg02
	selector es_192 = SLICE(ptrArg02, selector, 16)
	word16 cx_201 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C:
	branch cx_201 == 0x0000 l0800_258E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C_1:
	di_191 = di_191 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 != Mem0[es_192:di_191:byte] l0800_258C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258E:
	word16 cx_211 = ~cx_201
	word16 di_217 = di_191 - cx_211
	byte Z_221 = cond(di_217)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594:
	branch cx_211 == 0x0000 l0800_2596
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594_2:
	Z_221 = cond(0x00 - Mem0[es_192:di_495:byte]) (alias)
	di_217 = di_495 + 0x0001
	cx_211 = cx_211 - 0x0001
	word16 di_495 = di_217
	branch 0x00 != Mem0[es_192:di_495:byte] l0800_2594
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2596:
	branch Z_221 l0800_259F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2598:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_259F:
	selector ds_281
	word16 ax_282 = fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc1A, Mem0[ds:0x29CF:word16], 0), Mem0[ds:0x29D1:word16], 0x0000, out ds_281)
	Mem286[ss:fp - 0x0012:word16] = Mem0[ds_281:0x29D1:word16]
	Mem289[ss:fp - 0x0014:word16] = Mem286[ds_281:0x29CF:word16]
	selector ds_292
	word16 dx_293 = fn0800_3E5D(fp - 0x0002, ds_281, wArg00, wArg02, out ds_292)
	Mem296[ss:fp - 0x0008:word16] = dx_293
	Mem297[ss:fp - 0x000A:word16] = ax_282
	word16 sp_294 = fp - 0x0010
	word16 dx_299
	word16 ax_300 = fn0800_8C8A(ax_282, 0x08, dx_293, bp, out dx_299)
	branch dx_299 != 0x0052 l0800_25FC
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_25F7:
	branch ax_300 == 0x4E43 l0800_260B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_25FC:
	Mem390[ss:fp - 0x0012:word16] = ds_292
	Mem393[ss:fp - 0x0014:word16] = 0x4348
	Mem396[ss:fp - 0x0016:word16] = 0x000C
	word16 si_397
	word16 di_398
	fn0800_0D24(fp - 0x0002, ds_292, out si_397, out di_398, out ds_292)
	sp_294 = fp - 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_260B:
	word16 ax_313 = Mem297[ss:fp - 0x000A:word16]
	branch (ax_313 & 0x00FF) == 0x0000 l0800_2655
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2655:
	word16 sp_367 = sp_294 - 0x0002
	Mem368[ss:sp_367:word16] = Mem297[ds_292:0x29D1:word16]
	Mem370[ss:sp_367 - 0x0002:word16] = Mem368[ds_292:0x29CF:word16]
	selector ds_371
	word16 dx_372 = fn0800_3E5D(fp - 0x0002, ds_292, wArg00, wArg02, out ds_371)
	Mem374[ds_371:0x2A05:word16] = dx_372
	Mem375[ds_371:0x2A03:word16] = ax_313 & 0x00FF
	Mem376[ds_371:0x2A09:word16] = dx_372
	Mem377[ds_371:0x2A07:word16] = ax_313 & 0x00FF
	ui32 dx_ax_379 = SEQ(dx_372, (ax_313 & 0x00FF) + 0x0008)
	Mem386[ss:fp - 0x000C:word16] = SLICE(dx_ax_379 + 0x00000008, word16, 16)
	Mem387[ss:fp - 0x000E:word16] = (word16) (dx_ax_379 + 0x00000008)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2616:
	word16 sp_337 = sp_294 - 0x0002
	Mem338[ss:sp_337:word16] = Mem297[ds_292:0x29D1:word16]
	Mem340[ss:sp_337 - 0x0002:word16] = Mem338[ds_292:0x29CF:word16]
	selector ds_341
	word16 dx_342 = fn0800_3E5D(fp - 0x0002, ds_292, wArg00, wArg02, out ds_341)
	Mem345[ds_341:0x2A09:word16] = dx_342
	Mem346[ds_341:0x2A07:word16] = ax_313 & 0x00FF
	Mem348[ss:sp_337:word16] = Mem346[ds_341:0x29D1:word16]
	Mem350[ss:sp_337 - 0x0002:word16] = Mem348[ds_341:0x29CF:word16]
	selector ds_351
	word16 dx_352 = fn0800_3E5D(fp - 0x0002, ds_341, wArg00, wArg02, out ds_351)
	Mem354[ds_351:0x2A05:word16] = dx_352
	Mem355[ds_351:0x2A03:word16] = ax_313 & 0x00FF
	word16 dx_358 = Mem355[ds_351:0x2A03:word16]
	Mem365[ss:fp - 0x000C:word16] = SLICE(SEQ(Mem355[ds_351:0x2A05:word16], sp_337 + 0x0002) - 0x00000002, word16, 16)
	Mem366[ss:fp - 0x000E:word16] = dx_358 + 0x0012
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_267D:
	word16 dx_323
	*dxOut = Mem297[ss:fp - 0x000C:word16]
	word16 bp_331
	*bpOut = Mem297[ss:fp - 0x0002:word16]
	return Mem297[ss:fp - 0x000E:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_24FE_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2688(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_2688_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2688:
	word16 sp_141 = fp - 0x0012
	word16 dx_23 = Mem0[ds:0x2E53:word16]
	word16 bx_24 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	word16 ax_27 = Mem0[ds:0x2E53:word16]
	word16 wLoc06_225 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27B3:
	branch ax_27 == dx_23 l0800_27C1
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(8) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C1:
	branch wLoc06_225 == bx_24 l0800_27C9
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(8) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C9:
	branch (wArg06 | wArg08) != 0x0000 l0800_27DF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_27D1:
	word16 v22_267 = Mem0[ds:0x45A6:word16] + wArg02
	Mem268[ds:0x45A6:word16] = v22_267
	Mem272[ds:0x45A8:word16] = Mem268[ds:0x45A8:word16] + wArg04 + (v22_267 <u 0x0000)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_27DF:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2688_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_27C6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(8) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27BE:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(8) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26C3:
	word16 dx_135 = wLoc06_225
	word16 wLoc06_105 = wLoc06_225 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26D3:
	wLoc06_105 = wLoc06_105 + 0x0001
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] != 0x00 l0800_26D3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26DF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_277D:
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] == 0x00 l0800_2789
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2789:
	word16 v24_224 = wLoc06_105 + 0x0001
	word16 ax_228 = v24_224 - Mem0[ds:0x2E51:word16]
	selector es_239 = SLICE(ptrLoc0E, selector, 16)
	word16 bx_240 = (word16) ptrLoc0E
	word16 dx_234
	Mem241[es_239:bx_240:byte] = (byte) fn0800_8C8A(ax_228, 0x08, 0x0000 - (ax_228 <u 0x0000), bp, out dx_234)
	Mem250[es_239:bx_240 + 0x0001:byte] = (byte) (v24_224 - Mem241[ds:0x2E51:word16])
	wLoc06_225 = v24_224
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2786:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26E2:
	word16 v25_109 = wLoc06_105 + 0x0001
	wLoc06_105 = v25_109
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] != 0x00 l0800_26E2
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26EE:
	selector es_114 = SLICE(ptrLoc06, selector, 16)
	word16 bx_115 = (word16) ptrLoc06
	word16 sp_125 = sp_141 - 0x0002
	Mem126[ss:sp_125:word16] = ((int16) Mem0[es_114:bx_115:byte] << 0x08) + DPB(dx_135, 0x00, 8)
	word16 ax_134 = ((int16) Mem126[es_114:bx_115 + 0x0002:byte] << 0x08) + DPB(bx_115, 0x00, 8)
	dx_135 = ax_134
	sp_141 = sp_125 + 0x0002
	word16 ax_142 = Mem126[ss:sp_125:word16] + (ax_134 <u 0x0000)
	branch ax_142 < wArg08 l0800_2779
// DataOut: ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2727:
	branch ax_142 != wArg08 l0800_272E
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2729:
	branch ax_134 <u wArg06 l0800_2779
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_272E:
	int32 dx_ax_177 = (int32) SLICE(SEQ(ax_142, ax_134 + wArg02) + wArg04_wArg02, word16, 16)
	selector es_185 = SLICE(ptrLoc06, selector, 16)
	word16 bx_186 = (word16) ptrLoc06
	word16 dx_181
	Mem187[es_185:bx_186:byte] = (byte) fn0800_8C8A((word16) dx_ax_177, 0x08, SLICE(dx_ax_177, word16, 16), bp, out dx_181)
	Mem197[es_185:bx_186 + 0x0001:byte] = (byte) (int32) SLICE(SEQ(ax_142, ax_134 + wArg02) + wArg04_wArg02, word16, 16)
	word16 ax_200 = ax_134 + wArg02
	selector es_212 = SLICE(ptrLoc06, selector, 16)
	word16 bx_213 = (word16) ptrLoc06
	Mem214[es_212:bx_213 + 0x0002:byte] = (byte) fn0800_8C8A(ax_200, 0x08, ax_142 + wArg04 + (SEQ(ax_200, ax_142) <u 0x00000000), bp, out dx_135)
	Mem220[es_212:bx_213 + 0x0003:byte] = bLoc12 + bArg02
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2779:
	wLoc06_105 = v25_109 + 0x0004
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)



word16 fn0800_283D(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_283D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_283D:
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	word16 cx_21 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284D:
	branch cx_21 == 0x0000 l0800_284F
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284D_1:
	di_15 = di_15 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch 0x00 != Mem0[es_16:di_15:byte] l0800_284D
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284F:
	word16 cx_33 = ~cx_21
	word16 di_346 = di_15 - cx_33
	byte Z_354 = cond(di_346)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2856:
	branch cx_33 == 0x0000 l0800_2858
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2856_2:
	Z_354 = cond(0x3A - Mem0[es_16:di_346:byte]) (alias)
	di_346 = di_346 + 0x0001
	cx_33 = cx_33 - 0x0001
	branch 0x3A != Mem0[es_16:di_346:byte] l0800_2856
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2858:
	branch Z_354 l0800_2861
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_285A:
	di_346 = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2861:
	word16 ax_321 = 0x0000
	branch di_346 - 0x0001 == 0x0000 l0800_288E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2868:
	word16 di_275 = (word16) ptrArg02
	word16 cx_280 = 0xFFFF
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2870:
	branch cx_280 == 0x0000 l0800_2872
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2870_1:
	di_275 = di_275 + 0x0001
	cx_280 = cx_280 - 0x0001
	branch 0x00 != Mem0[0x0000:di_275:byte] l0800_2870
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2872:
	word16 cx_290 = ~cx_280
	word16 di_294 = di_275 - cx_290
	byte Z_298 = cond(di_294)
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2879:
	branch cx_290 == 0x0000 l0800_287B
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2879_2:
	Z_298 = cond(0x3A - Mem0[0x0000:di_372:byte]) (alias)
	di_294 = di_372 + 0x0001
	cx_290 = cx_290 - 0x0001
	word16 di_372 = di_294
	branch 0x3A != Mem0[0x0000:di_372:byte] l0800_2879
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_287B:
	branch Z_298 l0800_2884
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_287D:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2884:
	ax_321 = 0x0000
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_288E:
	word16 dx_94 = Mem0[ds:0x2E53:word16]
	word16 bx_95 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(ax_321, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	word16 wLoc08_102 = Mem0[ds:0x2E53:word16]
	word16 wLoc0A_103 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_2917:
	branch wLoc08_102 != dx_94 l0800_28C2
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_2922:
	branch wLoc0A_103 != bx_95 l0800_28C2
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_28C2:
	word16 si_150 = wLoc0A_103 + 0x0002
	word16 di_155 = (word16) ptrArg02
	word16 ax_156 = 0x0000
	word16 cx_161 = 0xFFFF
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D4:
	branch cx_161 == 0x0000 l0800_28D6
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D4_1:
	di_155 = di_155 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 != Mem0[0x0000:di_155:byte] l0800_28D4
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D6:
	word16 cx_171 = ~cx_161
	word16 di_173 = di_155 - cx_171
	byte SCZO_175 = cond(di_173)
	byte Z_177 = SCZO_175
	byte C_178 = SCZO_175
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DA:
	branch cx_171 == 0x0000 l0800_28DC
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DA_2:
	byte SCZO_243 = cond(Mem0[wLoc08_102:si_370:byte] - Mem0[0x0000:di_369:byte])
	Z_177 = SCZO_243 (alias)
	C_178 = SCZO_243 (alias)
	si_150 = si_370 + 0x0001
	di_173 = di_369 + 0x0001
	cx_171 = cx_171 - 0x0001
	word16 di_369 = di_173
	word16 si_370 = si_150
	branch Mem0[wLoc08_102:si_370:byte] != Mem0[0x0000:di_369:byte] l0800_28DA
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DC:
	branch Z_177 l0800_28E3
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DE:
	word16 ax_236 = 0x0000 - C_178
	ax_156 = ax_236 - 0xFFFF - (ax_236 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28E3:
	branch ax_156 != 0x0000 l0800_28F4
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Stack +0002(32)

l0800_28F4:
	wLoc08_102 = Mem0[ds:0x2E53:word16]
	wLoc0A_103 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[0x0000:(word16) ptrLoc0A:byte] << 0x08) + DPB(wLoc0A_103, 0x00, 8))
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_28E8:
	word16 dx_207
	*dxOut = wLoc08_102
	return wLoc0A_103
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2927:
	word16 dx_260
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_283D_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:si ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000



word16 fn0800_2931(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_2931_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_2931:
	selector es_15 = SLICE(ptrArg06, selector, 16)
	word16 di_16 = (word16) ptrArg06 + 0x0002
	word16 cx_22 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941:
	branch cx_22 == 0x0000 l0800_2943
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941_1:
	di_16 = di_16 + 0x0001
	cx_22 = cx_22 - 0x0001
	branch 0x00 != Mem0[es_15:di_16:byte] l0800_2941
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2943:
	word16 cx_275 = ~cx_22
	word16 di_263 = di_16 - cx_275
	byte Z_271 = cond(di_263)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949:
	branch cx_275 == 0x0000 l0800_294B
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949_2:
	Z_271 = cond(0x00 - Mem0[es_15:di_263:byte]) (alias)
	di_263 = di_263 + 0x0001
	cx_275 = cx_275 - 0x0001
	branch 0x00 != Mem0[es_15:di_263:byte] l0800_2949
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294B:
	branch Z_271 l0800_2954
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294D:
	di_263 = 0x0001
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2954:
	word16 wArg08_223 = 0x0000
	word16 wArg06_224 = di_263 - 0x0001 + 0x0001
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> es:0x0000 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_29B4:
	branch Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte] != 0x00 l0800_2960
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2960:
	word16 si_114 = wArg06_224
	word16 di_120 = (word16) ptrArg02
	selector es_121 = SLICE(ptrArg02, selector, 16)
	word16 ax_122 = 0x0000
	word16 cx_126 = 0xFFFF
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F:
	branch cx_126 == 0x0000 l0800_2971
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F_1:
	di_120 = di_120 + 0x0001
	cx_126 = cx_126 - 0x0001
	branch 0x00 != Mem0[es_121:di_120:byte] l0800_296F
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2971:
	word16 cx_134 = ~cx_126
	word16 di_135 = di_120 - cx_134
	byte SCZO_137 = cond(di_135)
	byte Z_139 = SCZO_137
	byte C_140 = SCZO_137
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975:
	branch cx_134 == 0x0000 l0800_2977
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975_2:
	byte SCZO_250 = cond(Mem0[wArg08_223:si_285:byte] - Mem0[es_121:di_284:byte])
	Z_139 = SCZO_250 (alias)
	C_140 = SCZO_250 (alias)
	si_114 = si_285 + 0x0001
	di_135 = di_284 + 0x0001
	cx_134 = cx_134 - 0x0001
	word16 di_284 = di_135
	word16 si_285 = si_114
	branch Mem0[wArg08_223:si_285:byte] != Mem0[es_121:di_284:byte] l0800_2975
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2977:
	branch Z_139 l0800_297E
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2979:
	word16 ax_244 = 0x0000 - C_140
	ax_122 = ax_244 - 0xFFFF - (ax_244 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_297E:
	branch ax_122 != 0x0000 l0800_298D
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_298D:
	word16 di_176 = (word16) ptrArg06
	selector es_177 = SLICE(ptrArg06, selector, 16)
	word16 cx_182 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995:
	branch cx_182 == 0x0000 l0800_2997
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995_1:
	di_176 = di_176 + 0x0001
	cx_182 = cx_182 - 0x0001
	branch 0x00 != Mem0[es_177:di_176:byte] l0800_2995
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2997:
	word16 cx_190 = ~cx_182
	word16 di_193 = di_176 - cx_190
	byte Z_197 = cond(di_193)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D:
	branch cx_190 == 0x0000 l0800_299F
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D_2:
	Z_197 = cond(0x00 - Mem0[es_177:di_193:byte]) (alias)
	di_193 = di_193 + 0x0001
	cx_190 = cx_190 - 0x0001
	branch 0x00 != Mem0[es_177:di_193:byte] l0800_299D
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299F:
	branch Z_197 l0800_29A8
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A1:
	di_193 = 0x0001
	es_177 = 0x0000
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A8:
	wArg08_223 = es_177
	wArg06_224 = di_193 - 0x0001 + 0x0005
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2983:
	word16 dx_166
	*dxOut = wArg08_223
	return wArg06_224
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_29BD:
	word16 dx_103
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2931_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> di:di ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> dx:<invalid> si:si ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_29C5(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_29C5_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_29C5:
	word16 sp_10 = fp - 0x007E
	branch (Mem0[ds:0x45AE:word16] | Mem0[ds:0x45B0:word16]) != 0x0000 l0800_2A07
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_29D6:
	branch (Mem0[ds:0x45AA:word16] | Mem0[ds:0x45AC:word16]) != 0x0000 l0800_2A07
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 0x0002 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_29DF:
	sp_10 = fp - 0x007E
	byte dl_858
	branch fn0800_2DE2(fp - 0x0002, si, ds, DPB(ptrLoc82, 0x4541, 0), ds, out dl_858, out ds) != 0x0000 l0800_29F6
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 0x0002 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_29F6:
	word16 dx_884 = Mem0[ds:0x2E51:word16]
	Mem887[ds:0x45B0:word16] = Mem0[ds:0x2E53:word16]
	Mem888[ds:0x45AE:word16] = dx_884 + 0x0008
	dx = dx_884 + 0x0008
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A07:
	word16 sp_58 = sp_10 - 0x0002
	Mem59[ss:sp_58:word16] = ds
	Mem63[ss:sp_58 - 0x0002:word16] = 0x4541
	Mem65[ss:sp_58 - 0x0004:word16] = ss
	Mem68[ss:sp_58 - 0x0006:word16] = fp - 0x006C
	fn0800_3509(ds, wArg04, wArg06)
	Mem74[ss:sp_58:word16] = ds
	Mem77[ss:sp_58 - 0x0002:word16] = 0x4541
	Mem79[ss:sp_58 - 0x0004:word16] = ss
	Mem82[ss:sp_58 - 0x0006:word16] = fp - 0x007A
	fn0800_35A3(ds, wArg04, wArg06)
	word16 bx_98 = (word16) Mem82[ds:0x2E51:segptr32] + ((DPB(fp - 0x007A, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	Mem100[ss:fp - 0x0004:word16] = Mem82[ds:0x2E53:word16]
	Mem101[ss:fp - 0x0006:word16] = bx_98
	word16 sp_117 = sp_58 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C53:
	word16 dx_119 = Mem101[ds:0x45AE:word16]
	branch Mem101[ds:0x45B0:word16] == Mem101[ss:fp - 0x0004:word16] l0800_2C62
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C62:
	branch dx_119 == Mem101[ss:fp - 0x0006:word16] l0800_2C6A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C6A:
	Mem819[ds:0x45AC:word16] = 0x0000
	Mem820[ds:0x45AA:word16] = 0x0000
	Mem821[ds:0x45B0:word16] = 0x0000
	Mem822[ds:0x45AE:word16] = 0x0000
	word16 sp_823 = sp_117 - 0x0002
	Mem824[ss:sp_823:word16] = Mem822[ss:fp + 0x000C:word16]
	Mem826[ss:sp_823 - 0x0002:word16] = Mem824[ss:fp + 0x000A:word16]
	Mem828[ss:sp_823 - 0x0004:word16] = Mem826[ss:fp + 0x0008:word16]
	Mem830[ss:sp_823 - 0x0006:word16] = Mem828[ss:fp + 0x0006:word16]
	Mem832[ss:sp_823 - 0x0008:word16] = Mem830[ss:fp + 0x0004:word16]
	Mem834[ss:sp_823 - 0x000A:word16] = Mem832[ss:fp + 0x0002:word16]
	selector ds_835
	return fn0800_29C5(fp - 0x0002, si, ds, out ds_835)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2C67:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C5F:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A4C:
	branch (Mem101[ds:0x45AA:word16] | Mem101[ds:0x45AC:word16]) != 0x0000 l0800_2A58
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A58:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B54:
	branch Mem0[Mem0[Mem101[ds:0x45AA:segptr32]:byte]:byte] == 0x00 l0800_2B61
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B61:
	word16 bx_809 = Mem101[ds:0x2E51:word16] + (((int16) Mem0[Mem0[Mem101[ds:0x45AE:segptr32]:byte]:byte] << 0x08) + DPB(dx_119, 0x00, 8))
	Mem811[ds:0x45B0:word16] = Mem101[ds:0x2E53:word16]
	Mem812[ds:0x45AE:word16] = bx_809
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B5E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A5B:
	word16 sp_431 = sp_117 - 0x0002
	Mem432[ss:sp_431:word16] = ss
	Mem435[ss:sp_431 - 0x0002:word16] = fp - 0x007A
	Mem437[ss:sp_431 - 0x0004:word16] = Mem435[ds:0x45AC:word16]
	Mem439[ss:sp_431 - 0x0006:word16] = Mem437[ds:0x45AA:word16]
	sp_117 = sp_431 + 0x0002
	branch fn0800_4357(bp, ptrArg00, ptrArg04) != 0x0000 l0800_2A75
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A75:
	ptr32 es_bx_522 = Mem439[ss:fp + 0x0002:segptr32]
	word16 dx_526 = Mem439[ds:0x45AE:word16]
	Mem0[es_bx_522 + 0x0002:word16] = Mem439[ds:0x45B0:word16]
	Mem0[Mem0[es_bx_522:word16]:word16] = dx_526
	ptr32 es_bx_529 = Mem528[ss:fp + 0x0006:segptr32]
	word16 dx_533 = Mem528[ds:0x45AA:word16]
	Mem0[es_bx_529 + 0x0002:word16] = Mem528[ds:0x45AC:word16]
	Mem0[Mem0[es_bx_529:word16]:word16] = dx_533
	ptr32 es_di_536 = Mem535[ds:0x45AE:segptr32]
	Mem541[ss:sp_431:word16] = SLICE(es_di_536, selector, 16)
	selector es_542 = Mem541[ss:fp + 0x000C:selector]
	Mem544[ss:sp_431 - 0x0002:word16] = (word16) es_di_536 + 0x0002
	word16 di_545 = Mem544[ss:fp + 0x000A:word16]
	word16 di_547 = Mem544[ss:sp_431 - 0x0002:word16]
	selector es_550 = Mem544[ss:sp_431:selector]
	Mem555[ss:sp_431:word16] = es_542
	Mem557[ss:sp_431 - 0x0002:word16] = di_545
	word16 cx_562 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB3:
	branch cx_562 == 0x0000 l0800_2AB5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB3_1:
	di_547 = di_547 + 0x0001
	cx_562 = cx_562 - 0x0001
	branch 0x00 != Mem557[es_550:di_547:byte] l0800_2AB3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB5:
	word16 di_581 = Mem557[ss:sp_431 - 0x0002:word16]
	selector es_584 = Mem557[ss:sp_431:selector]
	Mem589[ss:sp_431:word16] = ds
	word16 cx_572 = ~cx_562
	word16 cx_574 = cx_572 >>u 0x0001
	word16 si_580 = di_547 - cx_572
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC4:
	branch cx_574 == 0x0000 l0800_2AC6
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC6:
	word16 cx_603 = cx_574 * 0x0002 + (cx_572 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC8:
	branch cx_603 == 0x0000 l0800_2ACA
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ACA:
	ptr32 es_di_620 = Mem589[ss:fp + 0x000A:segptr32]
	selector ds_618 = Mem589[ss:sp_431:selector]
	Mem624[ss:sp_431:word16] = SLICE(es_di_620, selector, 16)
	selector es_625 = Mem624[ds_618:0x45AC:selector]
	Mem628[ss:sp_431 - 0x0002:word16] = (word16) es_di_620
	word16 di_629 = Mem628[ds_618:0x45AA:word16]
	word16 cx_635 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADD:
	branch cx_635 == 0x0000 l0800_2ADF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADD_1:
	di_629 = di_629 + 0x0001
	cx_635 = cx_635 - 0x0001
	branch 0x00 != Mem628[es_625:di_629:byte] l0800_2ADD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADF:
	word16 cx_647 = ~cx_635
	word16 di_650 = Mem628[ss:sp_431 - 0x0002:word16]
	selector es_653 = Mem628[ss:sp_431:selector]
	Mem662[ss:sp_431:word16] = cx_647
	word16 si_649 = di_629 - cx_647
	word16 cx_663 = 0xFFFF
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF3:
	branch cx_663 == 0x0000 l0800_2AF5
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF3_2:
	di_650 = di_650 + 0x0001
	cx_663 = cx_663 - 0x0001
	branch 0x00 != Mem662[es_653:di_650:byte] l0800_2AF3
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF5:
	word16 di_678 = di_650 - 0x0001
	word16 cx_681 = Mem662[ss:sp_431:word16]
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF7:
	branch cx_681 == 0x0000 l0800_2AF9
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF9:
	ptr32 es_di_697 = Mem662[ds_618:0x45AA:segptr32]
	selector ds_696
	*dsOut = ds_618
	word16 di_698 = (word16) es_di_697
	selector es_699 = SLICE(es_di_697, selector, 16)
	word16 cx_700 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B02:
	branch cx_700 == 0x0000 l0800_2B04
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B02_1:
	di_698 = di_698 + 0x0001
	cx_700 = cx_700 - 0x0001
	branch 0x00 != Mem662[es_699:di_698:byte] l0800_2B02
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B04:
	word16 cx_710 = ~cx_700
	word16 di_714 = di_698 - cx_710
	byte Z_718 = cond(di_714)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0A:
	branch cx_710 == 0x0000 l0800_2B0C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0A_2:
	Z_718 = cond(0x00 - Mem662[es_699:di_714:byte]) (alias)
	di_714 = di_714 + 0x0001
	cx_710 = cx_710 - 0x0001
	branch 0x00 != Mem662[es_699:di_714:byte] l0800_2B0A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0C:
	branch Z_718 l0800_2B15
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0E:
	di_714 = 0x0001
	es_699 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B15:
	Mem746[ds_618:0x45AC:word16] = es_699
	Mem747[ds_618:0x45AA:word16] = di_714 - 0x0001 + 0x0005
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF7_3:
	Mem690[es_653:di_678:byte] = Mem662[es_625:si_649:byte]
	si_649 = si_649 + 0x0001
	di_678 = di_678 + 0x0001
	cx_681 = cx_681 - 0x0001
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC8_1:
	Mem612[es_584:di_581:byte] = Mem589[es_550:si_580:byte]
	si_580 = si_580 + 0x0001
	di_581 = di_581 + 0x0001
	cx_603 = cx_603 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC4_2:
	Mem597[es_584:di_581:word16] = Mem589[es_550:si_580:word16]
	si_580 = si_580 + 0x0002
	di_581 = di_581 + 0x0002
	cx_574 = cx_574 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2A72:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B2B:
	ptr32 es_di_446 = Mem439[ds:0x45AA:segptr32]
	word16 di_447 = (word16) es_di_446
	selector es_448 = SLICE(es_di_446, selector, 16)
	word16 cx_453 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B34:
	branch cx_453 == 0x0000 l0800_2B36
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B34_1:
	di_447 = di_447 + 0x0001
	cx_453 = cx_453 - 0x0001
	branch 0x00 != Mem439[es_448:di_447:byte] l0800_2B34
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B36:
	word16 cx_463 = ~cx_453
	word16 di_467 = di_447 - cx_463
	byte Z_471 = cond(di_467)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3C:
	branch cx_463 == 0x0000 l0800_2B3E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3C_2:
	Z_471 = cond(0x00 - Mem439[es_448:di_467:byte]) (alias)
	di_467 = di_467 + 0x0001
	cx_463 = cx_463 - 0x0001
	branch 0x00 != Mem439[es_448:di_467:byte] l0800_2B3C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3E:
	branch Z_471 l0800_2B47
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B40:
	di_467 = 0x0001
	es_448 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B47:
	Mem499[ds:0x45AC:word16] = es_448
	Mem500[ds:0x45AA:word16] = di_467 - 0x0001 + 0x0005
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A55:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> Sequence es:di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C12:
	word16 dx_145 = Mem101[ds:0x45AE:word16]
	branch Mem101[ds:0x45B0:word16] == Mem101[ss:fp - 0x0004:word16] l0800_2C21
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C21:
	branch dx_145 == Mem101[ss:fp - 0x0006:word16] l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C26:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C1E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B8A:
	branch Mem101[ds:0x2A1B:word16] == 0x0000 l0800_2BBB
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B91:
	word16 sp_361 = sp_117 - 0x0002
	Mem362[ss:sp_361:word16] = ss
	selector es_363 = Mem362[ss:sp_361:selector]
	word16 di_366 = fp - 0x006C
	word16 cx_372 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9B:
	branch cx_372 == 0x0000 l0800_2B9D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9B_1:
	di_366 = di_894 + 0x0001
	cx_372 = cx_372 - 0x0001
	word16 di_894 = di_366
	branch 0x00 != Mem362[es_363:di_894:byte] l0800_2B9B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9D:
	Mem387[ss:sp_361:word16] = ~cx_372 - 0x0001
	Mem389[ss:sp_361 - 0x0002:word16] = ss
	Mem392[ss:sp_361 - 0x0004:word16] = fp - 0x006C
	word16 ax_393 = Mem392[ds:0x45AE:word16]
	Mem397[ss:sp_361 - 0x0006:word16] = Mem392[ds:0x45B0:word16]
	Mem399[ss:sp_361 - 0x0008:word16] = ax_393 + 0x0002
	sp_117 = sp_361 + 0x0002
	branch fn0800_BFE6(ptrArg00, ptrArg04, wArg08) == 0x0000 l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BBB:
	branch Mem101[ds:0x2A1B:word16] != 0x0000 l0800_2BEC
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BC2:
	si = Mem101[ds:0x45AE:word16] + 0x0002
	word16 sp_278 = sp_117 - 0x0002
	Mem279[ss:sp_278:word16] = ds
	selector ds_280 = Mem279[ds:0x45B0:selector]
	Mem282[ss:sp_278 - 0x0002:word16] = ss
	selector es_283 = Mem282[ss:sp_278 - 0x0002:selector]
	word16 di_286 = fp - 0x006C
	word16 ax_288 = 0x0000
	word16 cx_293 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BD8:
	branch cx_293 == 0x0000 l0800_2BDA
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BD8_2:
	di_286 = di_286 + 0x0001
	cx_293 = cx_293 - 0x0001
	branch 0x00 != Mem282[es_283:di_286:byte] l0800_2BD8
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDA:
	word16 cx_303 = ~cx_293
	word16 di_305 = di_286 - cx_303
	byte SCZO_307 = cond(di_305)
	byte Z_309 = SCZO_307
	byte C_310 = SCZO_307
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDE:
	branch cx_303 == 0x0000 l0800_2BE0
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDE_3:
	byte SCZO_346 = cond(Mem282[ds_280:si:byte] - Mem282[es_283:di_892:byte])
	Z_309 = SCZO_346 (alias)
	C_310 = SCZO_346 (alias)
	si = si + 0x0001
	di_305 = di_892 + 0x0001
	cx_303 = cx_303 - 0x0001
	word16 di_892 = di_305
	branch Mem282[ds_280:si:byte] != Mem282[es_283:di_892:byte] l0800_2BDE
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE0:
	branch Z_309 l0800_2BE7
// DataOut: ax bp si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE2:
	word16 ax_339 = 0x0000 - C_310
	ax_288 = ax_339 - 0xFFFF - (ax_339 <u 0x0000)
// DataOut: ax bp si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE7:
	ds = Mem282[ss:sp_278:selector]
	sp_117 = sp_278 + 0x0002
	branch ax_288 == 0x0000 l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C29:
	ptr32 es_di_157 = Mem101[ds:0x45AE:segptr32]
	selector es_159 = SLICE(es_di_157, selector, 16)
	word16 di_160 = (word16) es_di_157 + 0x0002
	word16 cx_166 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C35:
	branch cx_166 == 0x0000 l0800_2C37
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C35_1:
	di_160 = di_160 + 0x0001
	cx_166 = cx_166 - 0x0001
	branch 0x00 != Mem101[es_159:di_160:byte] l0800_2C35
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C37:
	word16 cx_176 = ~cx_166
	word16 di_180 = di_160 - cx_176
	byte Z_184 = cond(di_180)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3D:
	branch cx_176 == 0x0000 l0800_2C3F
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3D_2:
	Z_184 = cond(0x00 - Mem101[es_159:di_180:byte]) (alias)
	di_180 = di_180 + 0x0001
	cx_176 = cx_176 - 0x0001
	branch 0x00 != Mem101[es_159:di_180:byte] l0800_2C3D
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3F:
	branch Z_184 l0800_2C48
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C41:
	di_180 = 0x0001
	es_159 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C48:
	Mem211[ds:0x45AC:word16] = es_159
	Mem212[ds:0x45AA:word16] = di_180 - 0x0001 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BEC:
	word16 bx_272 = Mem101[ds:0x2E51:word16] + (((int16) Mem0[Mem0[Mem101[ds:0x45AE:segptr32]:byte]:byte] << 0x08) + DPB(dx_145, 0x00, 8))
	Mem274[ds:0x45B0:word16] = Mem101[ds:0x2E53:word16]
	Mem275[ds:0x45AE:word16] = bx_272
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_29EE:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp

fn0800_29C5_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -138(fp):<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2C9A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: si sp
fn0800_2C9A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2C9A:
	word16 cx_15 = 0x0000
	word16 si_18 = 0x2A29
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2CA0:
	word16 dx_19 = cx_15
	word16 bx_20 = 0x0008
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBD:
	branch bx_20 != 0x0000 l0800_2CA7
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CA7:
	word16 ax_40
	branch (dx_19 & 0x0001) == 0x0000 l0800_2CB6
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CB6:
	ax_40 = dx_19 >>u 0x0001
// DataOut: ax bp bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CAD:
	ax_40 = dx_19 >>u 0x0001 ^ 0xA001
// DataOut: ax bp bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBA:
	dx_19 = ax_40
	bx_20 = bx_20 - 0x0001
// DataOut: bp bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CC1:
	Mem29[ds:si_18:word16] = dx_19
	si_18 = si_18 + 0x0002
	cx_15 = cx_15 + 0x0001
	branch cx_15 <u 0x0100 l0800_2CA0
// DataOut: bp cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CCD:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

fn0800_2C9A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> si:si dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si



word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax dl
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_2CCF_entry:
	*dlOut = dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2CCF:
	word16 si_10 = wArg06
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CFD:
	si_10 = si_10 - 0x0001
	branch si_10 != 0x0000 l0800_2CD8
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CD8:
	word16 dx_63 = wArg08 >>u 0x08
	byte dl_64
	*dlOut = (byte) dx_63
	wArg08 = Mem0[ds:((DPB(si_10, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ dx_63
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2D04:
	return wArg08
// DataOut: al ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>

fn0800_2CCF_exit:
// DataOut: al ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>



word16 fn0800_2D0A(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_2D0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2D0A:
	selector ds_121 = fn0800_4311(ds, 0xFFF0, 0x0000)
	Mem22[ss:fp - 0x0004:word16] = 0xFFF0
	Mem24[ss:fp - 0x0006:word16] = 0x0000
	Mem26[ss:fp - 0x0012:word16] = Mem24[ss:fp + 0x0004:word16]
	Mem28[ss:fp - 0x0014:word16] = Mem26[ss:fp + 0x0002:word16]
	word16 si_31
	word16 ax_32 = fn0800_AD2F(ds_121, ptrArg00, wArg02, out si_31)
	Mem34[ss:fp - 0x000C:word16] = 0xFFF0
	Mem35[ss:fp - 0x000E:word16] = ax_32
	word16 sp_135 = fp - 0x0010
	word16 si_136 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_2D8F:
	branch (Mem35[ss:fp + 0x0006:word16] | Mem35[ss:fp + 0x0008:word16]) != 0x0000 l0800_2D3A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D3A:
	word16 ax_102
	word16 dx_149
	branch Mem35[ss:fp + 0x0008:word16] <u 0x0000 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D40:
	branch Mem35[ss:fp + 0x0008:word16] >u 0x0000 l0800_2D48
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D42:
	branch Mem35[ss:fp + 0x0006:word16] <=u 0xFFF0 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D4F:
	dx_149 = Mem35[ss:fp + 0x0008:word16]
	ax_102 = Mem35[ss:fp + 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D48:
	dx_149 = 0x0000
	ax_102 = 0xFFF0
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D55:
	Mem103[ss:fp - 0x0008:word16] = dx_149
	Mem104[ss:fp - 0x000A:word16] = ax_102
	word16 sp_105 = sp_135 - 0x0002
	Mem106[ss:sp_105:word16] = Mem104[ss:fp + 0x0004:word16]
	Mem108[ss:sp_105 - 0x0002:word16] = Mem106[ss:fp + 0x0002:word16]
	Mem110[ss:sp_105 - 0x0004:word16] = Mem108[ss:fp - 0x0008:word16]
	Mem112[ss:sp_105 - 0x0006:word16] = ax_102
	Mem114[ss:sp_105 - 0x0008:word16] = Mem112[ss:fp - 0x0004:word16]
	Mem116[ss:sp_105 - 0x000A:word16] = Mem114[ss:fp - 0x0006:word16]
	word16 di_120
	Mem126[ss:sp_105:word16] = fn0800_4110(ds_121, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_120, out ds_121)
	Mem128[ss:sp_105 - 0x0002:word16] = Mem126[ss:fp - 0x000A:word16]
	Mem130[ss:sp_105 - 0x0004:word16] = Mem128[ss:fp - 0x0004:word16]
	Mem132[ss:sp_105 - 0x0006:word16] = Mem130[ss:fp - 0x0006:word16]
	byte dl_133
	si_136 = fn0800_2CCF(ds_121, ptrArg00, wArg04, wArg06, out dl_133)
	Mem141[ss:fp + 0x0006:word16] = Mem132[ss:fp + 0x0006:word16] - Mem132[ss:fp - 0x000A:word16]
	Mem145[ss:fp + 0x0008:word16] = v14
	sp_135 = sp_105 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D97:
	word16 sp_62 = sp_135 - 0x0002
	Mem63[ss:sp_62:word16] = 0x0000
	Mem65[ss:sp_62 - 0x0002:word16] = Mem63[ss:fp - 0x000C:word16]
	Mem67[ss:sp_62 - 0x0004:word16] = Mem65[ss:fp - 0x000E:word16]
	Mem69[ss:sp_62 - 0x0006:word16] = Mem67[ss:fp + 0x0004:word16]
	Mem71[ss:sp_62 - 0x0008:word16] = Mem69[ss:fp + 0x0002:word16]
	selector ds_73
	fn0800_ACB3(fp - 0x0002, ds_121, ptrArg00, wArg02, wArg08, out ds_73)
	Mem78[ss:sp_62:word16] = Mem71[ss:fp - 0x0004:word16]
	Mem80[ss:sp_62 - 0x0002:word16] = Mem78[ss:fp - 0x0006:word16]
	selector ds_82
	fn0800_4346(ds_73, wArg00, wArg02, out ds_82)
	return si_136
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2D0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> cx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: ah al ax eax rax
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DBF_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_2DBF:
	Mem6[ds:0x4656:word16] = 0xFFFF
	Mem8[ds:0x4654:word16] = 0x0000
	Mem10[ds:0x4652:word16] = Mem8[ds:0x2A27:word16]
	Mem13[ds:0x4650:word16] = wArg02
	Mem16[ds:0x464E:word16] = wArg04
	return
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_2DBF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> -2(fp):bp



word16 fn0800_2DE2(word16 bp, word16 si, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DE2_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DE2:
	word16 sp_10 = fp - 0x0016
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DF1:
	branch Mem0[ds:0x4652:word16] != Mem0[ds:0x4656:word16] l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DFA:
	branch Mem0[ds:0x464E:word16] == 0x0000 l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E01:
	sp_10 = fp - 0x0016
	byte dl_1169
	si = fn0800_3479(ds, DPB(ptrLoc1C, fp - 0x0012, 0), ss, 0x0000, out dl_1169, out ds)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E11:
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E1B
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E1B:
	Mem779[ds:0x4617:word16] = 0x0000
	word16 dx_793
	selector ds_794
	word16 ax_795 = fn0800_A77D(ds, 0x45B2, ds, 0x0065, DPB(ptrLoc1A, Mem779[ds:0x461B:word16], 0), Mem779[ds:0x461D:word16], out dx_793, out ds_794)
	branch (ax_795 | dx_793) != 0x0000 l0800_2E3F
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E3F:
	selector es_1138 = ds_794
	word16 di_1150 = 0x45B2
	word16 cx_1152 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E49:
	branch cx_1152 == 0x0000 l0800_2E4B
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E49_1:
	di_1150 = di_1150 + 0x0001
	cx_1152 = cx_1152 - 0x0001
	branch 0x00 != Mem779[ds_794:di_1150:byte] l0800_2E49
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E4B:
	word16 cx_1147 = ~cx_1152
	word16 di_1134 = di_1150 - cx_1147
	byte Z_1142 = cond(di_1134)
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E52:
	branch cx_1147 == 0x0000 l0800_2E54
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E52_2:
	Z_1142 = cond(0x0D - Mem779[ds_794:di_1134:byte]) (alias)
	di_1134 = di_1134 + 0x0001
	cx_1147 = cx_1147 - 0x0001
	branch 0x0D != Mem779[ds_794:di_1134:byte] l0800_2E52
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E54:
	branch Z_1142 l0800_2E5D
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E56:
	di_1134 = 0x0001
	es_1138 = 0x0000
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E5D:
	branch (di_1134 - 0x0001 | es_1138) == 0x0000 l0800_2E8B
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E64:
	selector es_1066 = ds_794
	word16 di_1069 = 0x45B2
	word16 cx_1075 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E6E:
	branch cx_1075 == 0x0000 l0800_2E70
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E6E_1:
	di_1069 = di_1069 + 0x0001
	cx_1075 = cx_1075 - 0x0001
	branch 0x00 != Mem779[ds_794:di_1069:byte] l0800_2E6E
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E70:
	word16 cx_1083 = ~cx_1075
	word16 di_1085 = di_1069 - cx_1083
	byte Z_1088 = cond(di_1085)
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E77:
	branch cx_1083 == 0x0000 l0800_2E79
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E77_2:
	Z_1088 = cond(0x0D - Mem779[ds_794:di_1085:byte]) (alias)
	di_1085 = di_1085 + 0x0001
	cx_1083 = cx_1083 - 0x0001
	branch 0x0D != Mem779[ds_794:di_1085:byte] l0800_2E77
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E79:
	branch Z_1088 l0800_2E82
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E7B:
	di_1085 = 0x0001
	es_1066 = 0x0000
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E82:
	Mem1114[es_1066:di_1085 - 0x0001:byte] = 0x00
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E8B:
	branch (int16) Mem779[ds_794:0x45B2:byte] != 0x0000 l0800_2EA5
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2EA5:
	word16 di_1061 = 0x45B2
	word16 cx_1063 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EAF:
	branch cx_1063 == 0x0000 l0800_2EB1
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EAF_1:
	di_1061 = di_1187 + 0x0001
	cx_1063 = cx_1063 - 0x0001
	word16 di_1187 = di_1061
	branch 0x00 != Mem779[ds_794:di_1187:byte] l0800_2EAF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EB1:
	Mem939[ds_794:0x4619:word16] = ~cx_1063 - 0x0001
	ptrLoc1A = DPB(ptrLoc1A, 0x45B2, 0) (alias)
	byte dl_946 = fn0800_0C6C(ds_794, ptrLoc1A)
	*dlOut = dl_946
	dx = DPB(dx_793, dl_946, 0) (alias)
	branch Mem939[ds_794:0x464E:word16] != 0x0000 l0800_2EFE
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2EFE:
	byte dl_1052
	si = fn0800_33CD(ds_794, DPB(ptrLoc20, fp - 0x0012, 0), ss, 0x0000, 0x45B2, ds_794, out dl_1052, out ds)
	Mem1058[ds:0x4654:word16] = 0x0000
	sp_10 = fp - 0x0016
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2ECA:
	word16 di_953 = (word16) ptrArg02
	selector es_954 = SLICE(ptrArg02, selector, 16)
	word16 di_1033 = 0x45B2
	word16 cx_1035 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2ED9:
	branch cx_1035 == 0x0000 l0800_2EDB
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2ED9_2:
	di_1033 = di_1033 + 0x0001
	cx_1035 = cx_1035 - 0x0001
	branch 0x00 != Mem939[ds_794:di_1033:byte] l0800_2ED9
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2EDB:
	word16 cx_978 = ~cx_1035
	word16 cx_1005 = cx_978 >>u 0x0001
	word16 si_1002 = di_1033 - cx_978
	word16 di_1003 = di_953
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEA:
	branch cx_1005 == 0x0000 l0800_2EEC
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEC:
	word16 cx_1006 = cx_1005 * 0x0002 + (cx_978 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEE:
	branch cx_1006 == 0x0000 l0800_2EF0
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EF0:
	Mem1021[ds_794:0x4617:word16] = Mem939[ds_794:0x4617:word16] + 0x0001
	selector ds_1018
	*dsOut = ds_794
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2EEE_1:
	Mem1013[es_954:di_1003:byte] = Mem939[ds_794:si_1002:byte]
	si_1002 = si_1002 + 0x0001
	di_1003 = di_1003 + 0x0001
	cx_1006 = cx_1006 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEA_3:
	Mem1001[es_954:di_1003:word16] = Mem939[ds_794:si_1002:word16]
	si_1002 = si_1002 + 0x0002
	di_1003 = di_1003 + 0x0002
	cx_1005 = cx_1005 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2E93:
	byte dl_904
	selector ds_905
	return fn0800_2DE2(fp - 0x0002, si, ds_794, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_904, out ds_905)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2E3C:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16)

l0800_2F1B:
	byte dl_806
	word16 di_807
	selector ds_808
	fn0800_A614(fp - 0x0002, ds_794, DPB(ptrLoc1A, Mem779[ds_794:0x461B:word16], 0), Mem779[ds_794:0x461D:word16], out dl_806, out di_807, out ds_808)
	Mem812[ds_808:0x4654:word16] = 0x0000
	Mem813[ds_808:0x461D:word16] = 0x0000
	Mem814[ds_808:0x461B:word16] = 0x0000
	Mem816[ds_808:0x4652:word16] = Mem814[ds_808:0x4652:word16] + 0x0001
	Mem819[ss:fp - 0x0018:word16] = Mem816[ss:fp + 0x0004:word16]
	Mem821[ss:fp - 0x001A:word16] = Mem819[ss:fp + 0x0002:word16]
	byte dl_822
	selector ds_823
	return fn0800_2DE2(fp - 0x0002, si, ds_808, ptrArg00, wArg02, out dl_822, out ds_823)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2E18:
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F51:
	word16 ax_85 = Mem0[ds:0x4652:word16]
	branch ax_85 != Mem0[ds:0x4656:word16] l0800_2F5D
// DataOut: ax bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F5D:
	branch ax_85 != Mem0[ds:0x269A:word16] l0800_2F6B
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F6B:
	ptr32 es_bx_542 = Mem0[ds:0x269C:segptr32]
	fn0800_BF9E(DPB(ptrLoc1E, 0x45B2, 0), ds, DPB(ptrLoc1A, Mem0[SLICE(es_bx_542, selector, 16):(word16) es_bx_542 + (Mem0[ds:0x4652:word16] << 0x0002):word16], 0))
	word16 di_1183 = 0x45B2
	word16 cx_570 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F94:
	branch cx_570 == 0x0000 l0800_2F96
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F94_1:
	di_1183 = di_1183 + 0x0001
	cx_570 = cx_570 - 0x0001
	branch 0x00 != Mem0[ds:di_1183:byte] l0800_2F94
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F96:
	Mem582[ds:0x4619:word16] = ~cx_570 - 0x0001
	fn0800_0C6C(ds, DPB(ptrLoc1A, 0x45B2, 0))
	word16 ax_591 = Mem582[ds:0x4652:word16]
	Mem592[ds:0x4656:word16] = ax_591
	Mem593[ds:0x4617:word16] = 0x0000
	branch Mem0[Mem0[Mem593[ds:(word16) Mem593[ds:0x269C:segptr32] + (ax_591 << 0x0002):segptr32]:byte]:byte] != 0x40 l0800_3007
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_3007:
	byte dl_653
	*dlOut = fn0800_335C(ds, 0x45B2, ds)
	branch Mem593[ds:0x464E:word16] != 0x0000 l0800_3051
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3051:
	Mem745[ss:fp - 0x0018:word16] = ds
	Mem748[ss:fp - 0x001A:word16] = 0x45B2
	Mem753[ss:fp - 0x001C:word16] = 0x0000
	Mem755[ss:fp - 0x001E:word16] = ss
	Mem758[ss:fp - 0x0020:word16] = fp - 0x0012
	sp_10 = fp - 0x0016
	byte dl_759
	si = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_759, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3019:
	ptr32 es_di_658 = Mem593[ss:fp + 0x0002:segptr32]
	Mem662[ss:fp - 0x0018:word16] = SLICE(es_di_658, selector, 16)
	Mem664[ss:fp - 0x001A:word16] = ds
	selector es_665 = Mem664[ss:fp - 0x001A:selector]
	Mem669[ss:fp - 0x001A:word16] = (word16) es_di_658
	word16 di_1184 = 0x45B2
	word16 cx_676 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3028:
	branch cx_676 == 0x0000 l0800_302A
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3028_1:
	di_1184 = di_1184 + 0x0001
	cx_676 = cx_676 - 0x0001
	branch 0x00 != Mem669[es_665:di_1184:byte] l0800_3028
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_302A:
	word16 di_692 = Mem669[ss:fp - 0x001A:word16]
	selector es_695 = Mem669[ss:fp - 0x0018:selector]
	Mem700[ss:fp - 0x0018:word16] = ds
	word16 cx_684 = ~cx_676
	word16 cx_686 = cx_684 >>u 0x0001
	word16 si_691 = di_1184 - cx_684
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3039:
	branch cx_686 == 0x0000 l0800_303B
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303B:
	word16 cx_712 = cx_686 * 0x0002 + (cx_684 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303D:
	branch cx_712 == 0x0000 l0800_303F
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303F:
	selector ds_724 = Mem700[ss:fp - 0x0018:selector]
	*dsOut = ds_724
	Mem727[ds_724:0x4617:word16] = Mem700[ds_724:0x4617:word16] + 0x0001
	Mem729[ds_724:0x4652:word16] = Mem727[ds_724:0x4652:word16] + 0x0001
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303D_1:
	Mem719[es_695:di_692:byte] = Mem700[es_665:si_691:byte]
	si_691 = si_691 + 0x0001
	di_692 = di_692 + 0x0001
	cx_712 = cx_712 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3039_2:
	Mem707[es_695:di_692:word16] = Mem700[es_665:si_691:word16]
	si_691 = si_691 + 0x0002
	di_692 = di_692 + 0x0002
	cx_686 = cx_686 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2FC7:
	ptr32 es_bx_612 = Mem593[ds:0x269C:segptr32]
	selector es_613 = SLICE(es_bx_612, selector, 16)
	word16 bx_615 = (word16) es_bx_612 + (Mem593[ds:0x4652:word16] << 0x0002)
	word16 ax_617 = Mem593[es_613:bx_615:word16]
	word16 di_624
	selector ds_625
	word16 si_626 = fn0800_4234(si, di_1183, ds, ax_617 + 0x0001, Mem593[es_613:bx_615 + 0x0002:word16], 0x0A13, ds, out di_624, out ds_625)
	Mem629[ds_625:0x461D:word16] = dx
	Mem630[ds_625:0x461B:word16] = ax_617 + 0x0001
	Mem631[ds_625:0x4654:word16] = 0x0001
	Mem633[ss:fp - 0x0018:word16] = Mem631[ss:fp + 0x0004:word16]
	Mem635[ss:fp - 0x001A:word16] = Mem633[ss:fp + 0x0002:word16]
	byte dl_636
	selector ds_637
	return fn0800_2DE2(fp - 0x0002, si_626, ds_625, ptrArg00, wArg02, out dl_636, out ds_637)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2F63:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2F5A:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3066:
	word16 si_109 = si
	branch si != 0x0000 l0800_306D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_306D:
	branch Mem0[ds:0x2A1B:word16] == 0x0000 l0800_309E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3074:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_309A:
	branch si_109 != 0x0000 l0800_3076
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3076:
	word16 sp_491 = sp_10 - 0x0002
	Mem492[ss:sp_491:word16] = ds
	Mem495[ss:sp_491 - 0x0002:word16] = 0x45B2
	sp_10 = sp_491 + 0x0002
	branch fn0800_31B4(fp - 0x0002, ds, out ds) == 0x0000 l0800_309E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3085:
	Mem504[ss:sp_491:word16] = ds
	Mem507[ss:sp_491 - 0x0002:word16] = 0x45B2
	Mem512[ss:sp_491 - 0x0004:word16] = 0x0000
	Mem514[ss:sp_491 - 0x0006:word16] = ss
	Mem517[ss:sp_491 - 0x0008:word16] = fp - 0x0012
	sp_10 = sp_491 + 0x0002
	byte dl_519
	si_109 = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_519, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_309E:
	word16 si_426 = si_109
	branch si_109 == 0x0000 l0800_30F0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30A2:
	Mem431[ds:Mem0[ds:0x4619:word16] + 0x45B2:byte] = 0x00
	branch Mem431[ds:0x4617:word16] != 0x0000 l0800_30C9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30B2:
	branch Mem431[ds:0x4650:word16] == 0x0000 l0800_30C9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30B9:
	word16 sp_466 = sp_10 - 0x0002
	Mem467[ss:sp_466:word16] = ds
	Mem470[ss:sp_466 - 0x0002:word16] = 0x45B2
	Mem472[ss:sp_466 - 0x0004:word16] = ds
	Mem475[ss:sp_466 - 0x0006:word16] = 0x0A17
	word16 di_477
	si_426 = fn0800_B2EF(ds, wArg00, wArg02, out di_477)
	sp_10 = sp_466 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30C9:
	branch (Mem431[ds:0x461B:word16] | Mem431[ds:0x461D:word16]) == 0x0000 l0800_30DA
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30DA:
	Mem462[ds:0x4652:word16] = Mem431[ds:0x4652:word16] + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30D2:
	Mem460[ds:0x4654:word16] = 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30DE:
	word16 sp_444 = sp_10 - 0x0002
	Mem445[ss:sp_444:word16] = Mem431[ss:fp + 0x0004:word16]
	Mem447[ss:sp_444 - 0x0002:word16] = Mem445[ss:fp + 0x0002:word16]
	byte dl_448
	selector ds_449
	return fn0800_2DE2(fp - 0x0002, si_426, ds, ptrArg00, wArg02, out dl_448, out ds_449)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_306A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30F0:
	word16 sp_119 = sp_10 - 0x0002
	Mem120[ss:sp_119:word16] = ds
	Mem124[ss:sp_119 - 0x0002:word16] = 0x45B2
	Mem126[ss:sp_119 - 0x0004:word16] = Mem124[ss:fp + 0x0004:word16]
	Mem128[ss:sp_119 - 0x0006:word16] = Mem126[ss:fp + 0x0002:word16]
	fn0800_3509(ds, wArg04, wArg06)
	Mem133[ss:sp_119:word16] = ss
	Mem138[ss:sp_119:word16] = Mem133[ss:sp_119:selector]
	selector es_139 = Mem138[ss:fp + 0x0004:selector]
	Mem141[ss:sp_119 - 0x0002:word16] = fp - 0x0012
	word16 di_142 = Mem141[ss:fp + 0x0002:word16]
	word16 di_1175 = Mem141[ss:sp_119 - 0x0002:word16]
	selector es_147 = Mem141[ss:sp_119:selector]
	Mem152[ss:sp_119:word16] = es_139
	Mem154[ss:sp_119 - 0x0002:word16] = di_142
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311B:
	branch cx_159 == 0x0000 l0800_311D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311B_1:
	di_1175 = di_1175 + 0x0001
	cx_159 = cx_159 - 0x0001
	branch 0x00 != Mem154[es_147:di_1175:byte] l0800_311B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311D:
	word16 di_1176 = Mem154[ss:sp_119 - 0x0002:word16]
	selector es_175 = Mem154[ss:sp_119:selector]
	Mem179[ss:fp - 0x0004:word16] = ds
	word16 cx_169 = ~cx_159
	Mem182[ss:sp_119:word16] = cx_169
	word16 si_171 = di_1175 - cx_169
	word16 cx_183 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3132:
	branch cx_183 == 0x0000 l0800_3134
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3132_2:
	di_1176 = di_1176 + 0x0001
	cx_183 = cx_183 - 0x0001
	branch 0x00 != Mem182[es_175:di_1176:byte] l0800_3132
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3134:
	word16 di_196 = di_1176 - 0x0001
	word16 cx_199 = Mem182[ss:sp_119:word16]
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3136:
	branch cx_199 == 0x0000 l0800_3138
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3138:
	selector ds_211 = Mem182[ss:fp - 0x0004:selector]
	Mem213[ss:sp_119:word16] = Mem182[ss:fp + 0x0004:word16]
	Mem215[ss:sp_119 - 0x0002:word16] = Mem213[ss:fp + 0x0002:word16]
	byte dl_217
	*dlOut = fn0800_0C6C(ds_211, ptrArg00)
	word16 si_1178 = Mem215[ss:fp + 0x0002:word16]
	word16 cx_221 = Mem215[ss:fp + 0x0004:word16]
	Mem223[ss:sp_119:word16] = ds_211
	selector es_224 = Mem223[ss:sp_119:selector]
	Mem230[ss:sp_119:word16] = ds_211
	word16 di_1177 = 0x4348
	word16 ax_232 = 0x0000
	word16 cx_236 = 0xFFFF
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315A:
	branch cx_236 == 0x0000 l0800_315C
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315A_1:
	di_1177 = di_1177 + 0x0001
	cx_236 = cx_236 - 0x0001
	branch 0x00 != Mem230[es_224:di_1177:byte] l0800_315A
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315C:
	word16 cx_244 = ~cx_236
	word16 di_245 = di_1177 - cx_244
	byte SCZO_247 = cond(di_245)
	byte Z_248 = SCZO_247
	byte C_250 = SCZO_247
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3160:
	branch cx_244 == 0x0000 l0800_3162
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3160_2:
	byte SCZO_395 = cond(Mem230[cx_221:si_1178:byte] - Mem230[es_224:di_1179:byte])
	Z_248 = SCZO_395 (alias)
	C_250 = SCZO_395 (alias)
	si_1178 = si_1178 + 0x0001
	di_245 = di_1179 + 0x0001
	cx_244 = cx_244 - 0x0001
	word16 di_1179 = di_245
	branch Mem230[cx_221:si_1178:byte] != Mem230[es_224:di_1179:byte] l0800_3160
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3162:
	branch Z_248 l0800_3169
// DataOut: ax bp dl si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3164:
	word16 ax_389 = 0x0000 - C_250
	ax_232 = ax_389 - 0xFFFF - (ax_389 <u 0x0000)
// DataOut: ax bp dl si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3169:
	selector ds_270 = Mem230[ss:sp_119:selector]
	word16 sp_271 = sp_119 + 0x0002
	branch ax_232 == 0x0000 l0800_3195
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_316E:
	si_1178 = Mem230[ss:fp + 0x0002:word16]
	word16 cx_304 = Mem230[ss:fp + 0x0004:word16]
	Mem306[ss:sp_119:word16] = ds_270
	selector es_307 = Mem306[ss:sp_119:selector]
	Mem313[ss:sp_119:word16] = ds_270
	word16 di_1180 = 0x4477
	word16 ax_315 = 0x0000
	word16 cx_319 = 0xFFFF
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3181:
	branch cx_319 == 0x0000 l0800_3183
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3181_1:
	di_1180 = di_1180 + 0x0001
	cx_319 = cx_319 - 0x0001
	branch 0x00 != Mem313[es_307:di_1180:byte] l0800_3181
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3183:
	word16 cx_327 = ~cx_319
	word16 di_328 = di_1180 - cx_327
	byte SCZO_330 = cond(di_328)
	byte Z_331 = SCZO_330
	byte C_333 = SCZO_330
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3187:
	branch cx_327 == 0x0000 l0800_3189
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3187_2:
	byte SCZO_376 = cond(Mem313[cx_304:si_1178:byte] - Mem313[es_307:di_1182:byte])
	Z_331 = SCZO_376 (alias)
	C_333 = SCZO_376 (alias)
	si_1178 = si_1178 + 0x0001
	di_328 = di_1182 + 0x0001
	cx_327 = cx_327 - 0x0001
	word16 di_1182 = di_328
	branch Mem313[cx_304:si_1178:byte] != Mem313[es_307:di_1182:byte] l0800_3187
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3189:
	branch Z_331 l0800_3190
// DataOut: ax bp dl si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_318B:
	word16 ax_370 = 0x0000 - C_333
	ax_315 = ax_370 - 0xFFFF - (ax_370 <u 0x0000)
// DataOut: ax bp dl si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3190:
	ds_270 = Mem313[ss:sp_119:selector]
	*dsOut = ds_270
	sp_271 = sp_119 + 0x0002
	branch ax_315 != 0x0000 l0800_31A7
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_31A7:
	Mem360[ds_270:0x4617:word16] = Mem313[ds_270:0x4617:word16] + 0x0001
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3195:
	word16 sp_286 = sp_271 - 0x0002
	Mem287[ss:sp_286:word16] = Mem230[ss:fp + 0x0004:word16]
	Mem289[ss:sp_286 - 0x0002:word16] = Mem287[ss:fp + 0x0002:word16]
	byte dl_291
	selector ds_292
	return fn0800_2DE2(fp - 0x0002, si_1178, ds_270, ptrArg00, wArg02, out dl_291, out ds_292)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_2DE2_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3136_3:
	Mem206[es_175:di_196:byte] = Mem182[es_147:si_171:byte]
	si_171 = si_171 + 0x0001
	di_196 = di_196 + 0x0001
	cx_199 = cx_199 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_31B4(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_31B4_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_31B4:
	word16 sp_11 = fp - 0x0088
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_31BD:
	word16 sp_27 = sp_11 - 0x0002
	Mem30[ss:sp_27:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem32[ss:sp_27 - 0x0002:word16] = Mem30[ss:fp + 0x0002:word16]
	Mem34[ss:sp_27 - 0x0004:word16] = ss
	Mem37[ss:sp_27 - 0x0006:word16] = fp - 0x0084
	fn0800_3509(ds, wArg04, wArg06)
	Mem43[ss:sp_27:word16] = Mem37[ss:fp + 0x0004:word16]
	Mem45[ss:sp_27 - 0x0002:word16] = Mem43[ss:fp + 0x0002:word16]
	Mem47[ss:sp_27 - 0x0004:word16] = ss
	Mem50[ss:sp_27 - 0x0006:word16] = fp - 0x0010
	fn0800_35A3(ds, wArg04, wArg06)
	Mem57[ss:sp_27:word16] = Mem50[ds:(Mem50[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16]
	Mem59[ss:sp_27 - 0x0002:word16] = ss
	Mem62[ss:sp_27 - 0x0004:word16] = fp - 0x0084
	Mem64[ss:sp_27 - 0x0006:word16] = ss
	Mem67[ss:sp_27 - 0x0008:word16] = fp - 0x001E
	selector ds_71
	branch fn0800_32CD(ds, wArg00, wArg02, wArg04, wArg06, wArg08, out ds_71) != 0x0000 l0800_323E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_323E:
	branch Mem67[ds_71:0x09AC:word16] != 0x0000 l0800_3253
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3253:
	Mem151[ss:sp_27:word16] = ss
	selector es_152 = Mem151[ss:sp_27:selector]
	word16 di_154 = fp - 0x0084
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_325E:
	branch cx_159 == 0x0000 l0800_3260
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_325E_1:
	di_154 = di_275 + 0x0001
	cx_159 = cx_159 - 0x0001
	word16 di_275 = di_154
	branch 0x00 != Mem151[es_152:di_275:byte] l0800_325E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3260:
	Mem173[ss:~cx_159 - 0x0002 + (fp - 0x0084):byte] = 0x00
	Mem175[ss:sp_27:word16] = ss
	Mem177[ss:sp_27 - 0x0002:word16] = fp - 0x0084
	Mem179[ss:sp_27 - 0x0004:word16] = Mem177[ss:fp + 0x0004:word16]
	Mem181[ss:sp_27 - 0x0006:word16] = Mem179[ss:fp + 0x0002:word16]
	fn0800_3509(ds_71, wArg04, wArg06)
	Mem184[ss:sp_27:word16] = ss
	Mem189[ss:sp_27:word16] = Mem184[ss:sp_27:selector]
	selector es_190 = Mem189[ss:fp + 0x0004:selector]
	Mem192[ss:sp_27 - 0x0002:word16] = fp - 0x0010
	word16 di_193 = Mem192[ss:fp + 0x0002:word16]
	word16 di_195 = Mem192[ss:sp_27 - 0x0002:word16]
	selector es_198 = Mem192[ss:sp_27:selector]
	Mem201[ss:sp_27:word16] = es_190
	Mem203[ss:sp_27 - 0x0002:word16] = di_193
	word16 cx_208 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3298:
	branch cx_208 == 0x0000 l0800_329A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3298_2:
	di_195 = di_195 + 0x0001
	cx_208 = cx_208 - 0x0001
	branch 0x00 != Mem203[es_198:di_195:byte] l0800_3298
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_329A:
	word16 cx_217 = ~cx_208
	word16 di_220 = Mem203[ss:sp_27 - 0x0002:word16]
	selector es_223 = Mem203[ss:sp_27:selector]
	Mem229[ss:sp_27:word16] = cx_217
	word16 si_219 = di_195 - cx_217
	word16 cx_230 = 0xFFFF
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32AE:
	branch cx_230 == 0x0000 l0800_32B0
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32AE_3:
	di_220 = di_220 + 0x0001
	cx_230 = cx_230 - 0x0001
	branch 0x00 != Mem229[es_223:di_220:byte] l0800_32AE
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B0:
	word16 di_242 = di_220 - 0x0001
	word16 cx_244 = Mem229[ss:sp_27:word16]
	sp_11 = sp_27 + 0x0002
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B2:
	branch cx_244 == 0x0000 l0800_32B4
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B4:
	Mem256[ds_71:0x09AC:word16] = Mem229[ds_71:0x09AC:word16] - 0x0001
	word16 bx_257 = Mem256[ds_71:0x09AC:word16]
	Mem261[ds_71:(bx_257 << 0x0001) + 0x09AE:word16] = Mem256[ds_71:(bx_257 << 0x0001) + 0x09AE:word16] + 0x0001
	ds = ds_71
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B2_4:
	Mem250[es_223:di_242:byte] = Mem229[es_198:si_219:byte]
	si_219 = si_219 + 0x0001
	di_242 = di_242 + 0x0001
	cx_244 = cx_244 - 0x0001
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3245:
	Mem139[ds_71:0x09AE:word16] = 0x0000
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

l0800_31FF:
	Mem91[ss:sp_27:word16] = ss
	Mem94[ss:sp_27 - 0x0002:word16] = fp - 0x0010
	Mem96[ss:sp_27 - 0x0004:word16] = ds_71
	Mem99[ss:sp_27 - 0x0006:word16] = 0x0A30
	Mem101[ss:sp_27 - 0x0008:word16] = ss
	Mem104[ss:sp_27 - 0x000A:word16] = fp - 0x001E
	Mem106[ss:sp_27 - 0x000C:word16] = ss
	Mem109[ss:sp_27 - 0x000E:word16] = fp - 0x0084
	Mem111[ss:sp_27 - 0x0010:word16] = ds_71
	Mem114[ss:sp_27 - 0x0012:word16] = 0x0A27
	Mem116[ss:sp_27 - 0x0014:word16] = Mem114[ss:fp + 0x0004:word16]
	Mem118[ss:sp_27 - 0x0016:word16] = Mem116[ss:fp + 0x0002:word16]
	word16 di_120
	fn0800_BEA2(ds_71, ptrArg00, wArg04, wArg06, out di_120)
	Mem124[ds_71:0x09AC:word16] = Mem118[ds_71:0x09AC:word16] + 0x0001
	Mem128[ds_71:(Mem124[ds_71:0x09AC:word16] << 0x0001) + 0x09AE:word16] = 0x0000
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

fn0800_31B4_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> -160(fp):<invalid> -158(fp):<invalid> -156(fp):0x0A27 -154(fp):<invalid> -152(fp):fp - 0x0084 -150(fp):ss -148(fp):fp - 0x001E -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp



word16 fn0800_32CD(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, selector psegArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_32CD_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_32CD:
	word16 di_214 = wArg06
	word16 cx_215 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E7:
	branch cx_215 == 0x0000 l0800_32E9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E7_1:
	di_214 = di_214 + 0x0001
	cx_215 = cx_215 - 0x0001
	branch 0x00 != Mem0[psegArg08:di_214:byte] l0800_32E7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E9:
	word16 cx_40 = ~cx_215
	word16 cx_42 = cx_40 >>u 0x0001
	word16 si_47 = di_214 - cx_40
	word16 di_48 = fp - 0x0068
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32F8:
	branch cx_42 == 0x0000 l0800_32FA
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FA:
	word16 cx_66 = cx_42 * 0x0002 + (cx_40 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FC:
	branch cx_66 == 0x0000 l0800_32FE
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FE:
	word16 di_210 = fp - 0x0068
	word16 si_104 = 0x0A32
	word16 cx_211 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330C:
	branch cx_211 == 0x0000 l0800_330E
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330C_1:
	di_210 = di_210 + 0x0001
	cx_211 = cx_211 - 0x0001
	branch 0x00 != Mem0[ss:di_210:byte] l0800_330C
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330E:
	word16 di_100 = di_210 - 0x0001
	word16 cx_101 = 0x0004
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3312:
	branch cx_101 == 0x0000 l0800_3314
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3314:
	byte dl_123
	selector ds_124
	branch fn0800_33CD(ds, DPB(ptrLoc76, wArg02, 0), wArg04, 0x0010, fp - 0x0068, ss, out dl_123, out ds_124) == 0x0000 l0800_334D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_334D:
	branch wArg0A != 0x0000 l0800_3336
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3336:
	ptrLoc72 = DPB(ptrLoc72, wArg02, 0) (alias)
	byte dl_197
	branch fn0800_3479(ds_124, ptrLoc72, wArg04, 0x0010, out dl_197, out ds_124) != 0x0000 l0800_3353
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_334A:
	wArg0A = wArg0A - 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):0x0010 -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3353:
	return wArg0A
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_332D:
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

fn0800_32CD_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp es:<invalid> di:di ax:<invalid> cx:<invalid> si:si ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_3312_2:
	Mem103[ss:di_100:byte] = Mem0[ds:si_104:byte]
	si_104 = si_104 + 0x0001
	di_100 = di_100 + 0x0001
	cx_101 = cx_101 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FC_1:
	Mem72[ss:di_48:byte] = Mem0[psegArg08:si_47:byte]
	si_47 = si_47 + 0x0001
	di_48 = di_48 + 0x0001
	cx_66 = cx_66 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32F8_2:
	Mem62[ss:di_48:word16] = Mem0[psegArg08:si_47:word16]
	si_47 = si_47 + 0x0002
	di_48 = di_48 + 0x0002
	cx_42 = cx_42 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)



byte fn0800_335C(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_335C_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_335C:
	selector ds_33
	byte dl_32
	branch fn0800_33CD(ds, DPB(ptrLoc2C, fp - 0x0010, 0), ss, 0x0010, wArg02, wArg04, out dl_32, out ds_33) != 0x0000 l0800_33C7
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -002C(16) Stack +0002(16) Stack +0004(16)

l0800_337D:
	dl_32 = fn0800_35A3(ds_33, wArg02, wArg04)
	Mem81[ss:fp - 0x0024:word16] = ds_33
	Mem84[ss:fp - 0x0026:word16] = ss
	word16 si_112 = fp - 0x0010
	selector es_85 = Mem84[ss:fp - 0x0026:selector]
	word16 di_185 = fp - 0x001E
	word16 ax_124 = 0x0000
	word16 cx_100 = 0xFFFF
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 0x0002 ax:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> di:<invalid> -44(fp):fp - 0x0010 -42(fp):ss -40(fp):0x0010 -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A0:
	branch cx_100 == 0x0000 l0800_33A2
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A0_1:
	di_185 = di_185 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch 0x00 != Mem84[es_85:di_185:byte] l0800_33A0
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A2:
	word16 cx_101 = ~cx_100
	word16 di_102 = di_185 - cx_101
	byte SCZO_104 = cond(di_102)
	byte Z_106 = SCZO_104
	byte C_107 = SCZO_104
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A6:
	branch cx_101 == 0x0000 l0800_33A8
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A6_2:
	byte SCZO_175 = cond(Mem84[ss:si_189:byte] - Mem84[es_85:di_190:byte])
	Z_106 = SCZO_175 (alias)
	C_107 = SCZO_175 (alias)
	si_112 = si_189 + 0x0001
	di_102 = di_190 + 0x0001
	cx_101 = cx_101 - 0x0001
	word16 si_189 = si_112
	word16 di_190 = di_102
	branch Mem84[ss:si_189:byte] != Mem84[es_85:di_190:byte] l0800_33A6
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A8:
	branch Z_106 l0800_33AF
// DataOut: ax bp dl sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33AA:
	word16 ax_169 = 0x0000 - C_107
	ax_124 = ax_169 - 0xFFFF - (ax_169 <u 0x0000)
// DataOut: ax bp dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33AF:
	selector ds_127 = Mem84[ss:fp - 0x0024:selector]
	branch ax_124 != 0x0000 l0800_33C7
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33B4:
	ptr32 es_di_133 = Mem84[ss:fp + 0x0002:segptr32]
	word16 di_134 = (word16) es_di_133
	selector es_135 = SLICE(es_di_133, selector, 16)
	word16 si_136 = 0x0A36
	word16 cx_137 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33BF:
	branch cx_137 == 0x0000 l0800_33C1
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33BF_1:
	di_134 = di_134 + 0x0001
	cx_137 = cx_137 - 0x0001
	branch 0x00 != Mem84[es_135:di_134:byte] l0800_33BF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C1:
	word16 di_150 = di_134 - 0x0001
	word16 cx_153 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5:
	branch cx_153 == 0x0000 l0800_33C7
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C7:
	return dl_32
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

fn0800_335C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> ds:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5_2:
	Mem159[es_135:di_150:byte] = Mem84[ds_127:si_136:byte]
	si_136 = si_136 + 0x0001
	di_150 = di_150 + 0x0001
	cx_153 = cx_153 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp



word16 fn0800_33CD(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_33CD_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_33CD:
	byte dl_31
	branch fn0800_A817(0x4623, ds, DPB(ptrLoc10, wArg08, 0), DPB(ptrLoc0C, 0x4623, 0), wArg06, out dl_31) == 0x0000 l0800_33F1
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33F1:
	word16 di_298 = 0x0A3B
	word16 si_297 = 0x4641
	word16 cx_300 = 0x0002
	word16 ax_102 = 0x0000
	byte Z_295 = cond(0x0000)
	byte C_296 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE:
	branch cx_300 == 0x0000 l0800_3400
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE_1:
	byte SCZO_293 = cond(Mem0[ds:si_302:byte] - Mem0[ds:di_301:byte])
	Z_295 = SCZO_293 (alias)
	C_296 = SCZO_293 (alias)
	si_297 = si_302 + 0x0001
	di_298 = di_301 + 0x0001
	cx_300 = cx_300 - 0x0001
	word16 di_301 = di_298
	word16 si_302 = si_297
	branch Mem0[ds:si_302:byte] != Mem0[ds:di_301:byte] l0800_33FE
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3400:
	branch Z_295 l0800_3407
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3402:
	word16 ax_287 = 0x0000 - C_296
	ax_102 = ax_287 - 0xFFFF - (ax_287 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3407:
	branch ax_102 == 0x0000 l0800_3431
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_340B:
	word16 di_139 = 0x0A3D
	word16 si_141 = 0x4641
	word16 cx_142 = 0x0003
	word16 ax_143 = 0x0000
	byte Z_146 = cond(0x0000)
	byte C_147 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418:
	branch cx_142 == 0x0000 l0800_341A
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418_1:
	byte SCZO_279 = cond(Mem0[ds:si_304:byte] - Mem0[ds:di_303:byte])
	Z_146 = SCZO_279 (alias)
	C_147 = SCZO_279 (alias)
	si_141 = si_304 + 0x0001
	di_139 = di_303 + 0x0001
	cx_142 = cx_142 - 0x0001
	word16 di_303 = di_139
	word16 si_304 = si_141
	branch Mem0[ds:si_304:byte] != Mem0[ds:di_303:byte] l0800_3418
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341A:
	branch Z_146 l0800_3421
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341C:
	word16 ax_273 = 0x0000 - C_147
	ax_143 = ax_273 - 0xFFFF - (ax_273 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3421:
	branch ax_143 == 0x0000 l0800_3431
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3425:
	branch ((int16) Mem0[ds:0x4638:byte] & wArg06) == wArg06 l0800_3444
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3444:
	branch (wArg02 | wArg04) == 0x0000 l0800_3473
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_344C:
	word16 di_203 = (word16) ptrArg02
	selector es_204 = SLICE(ptrArg02, selector, 16)
	word16 di_213 = 0x4641
	word16 cx_219 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B:
	branch cx_219 == 0x0000 l0800_345D
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B_1:
	di_213 = di_213 + 0x0001
	cx_219 = cx_219 - 0x0001
	branch 0x00 != Mem0[ds:di_213:byte] l0800_345B
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345D:
	word16 cx_227 = ~cx_219
	word16 cx_229 = cx_227 >>u 0x0001
	word16 si_234 = di_213 - cx_227
	word16 di_235 = di_203
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C:
	branch cx_229 == 0x0000 l0800_346E
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346E:
	word16 cx_254 = cx_229 * 0x0002 + (cx_227 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3470:
	branch cx_254 == 0x0000 l0800_3472
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3472:
	selector ds_266
	*dsOut = ds
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3473:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3470_1:
	Mem261[es_204:di_235:byte] = Mem0[ds:si_234:byte]
	si_234 = si_234 + 0x0001
	di_235 = di_235 + 0x0001
	cx_254 = cx_254 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C_2:
	Mem249[es_204:di_235:word16] = Mem0[ds:si_234:word16]
	si_234 = si_234 + 0x0002
	di_235 = di_235 + 0x0002
	cx_229 = cx_229 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3431:
	byte dl_123
	selector ds_124
	return fn0800_3479(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, wArg06, out dl_123, out ds_124)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_33EA:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_33CD_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_3479(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_3479_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3479:
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_347E:
	ptrLoc0A = DPB(ptrLoc0A, 0x4623, 0) (alias)
	word16 ax_33
	byte dl_34
	fn0800_A84A(0x4623, ds, ptrLoc0A, out ax_33, out dl_34)
	branch ax_33 == 0x0000 l0800_3494
// DataOut: dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3494:
	word16 di_272 = 0x0A3B
	word16 si_271 = 0x4641
	word16 cx_274 = 0x0002
	word16 ax_264 = 0x0000
	byte Z_269 = cond(0x0000)
	byte C_270 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> di:<invalid> si:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A1:
	branch cx_274 == 0x0000 l0800_34A3
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A1_1:
	byte SCZO_267 = cond(Mem0[ds:si_276:byte] - Mem0[ds:di_275:byte])
	Z_269 = SCZO_267 (alias)
	C_270 = SCZO_267 (alias)
	si_271 = si_276 + 0x0001
	di_272 = di_275 + 0x0001
	cx_274 = cx_274 - 0x0001
	word16 di_275 = di_272
	word16 si_276 = si_271
	branch Mem0[ds:si_276:byte] != Mem0[ds:di_275:byte] l0800_34A1
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A3:
	branch Z_269 l0800_34AA
// DataOut: ax dl ds ss
// DataOut (flags): CDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A5:
	word16 ax_261 = 0x0000 - C_270
	ax_264 = ax_261 - 0xFFFF - (ax_261 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34AA:
	branch ax_264 == 0x0000 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34AE:
	word16 di_108 = 0x0A3D
	word16 si_110 = 0x4641
	word16 cx_111 = 0x0003
	word16 ax_112 = 0x0000
	byte Z_115 = cond(0x0000)
	byte C_116 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BB:
	branch cx_111 == 0x0000 l0800_34BD
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BB_1:
	byte SCZO_253 = cond(Mem0[ds:si_278:byte] - Mem0[ds:di_277:byte])
	Z_115 = SCZO_253 (alias)
	C_116 = SCZO_253 (alias)
	si_110 = si_278 + 0x0001
	di_108 = di_277 + 0x0001
	cx_111 = cx_111 - 0x0001
	word16 di_277 = di_108
	word16 si_278 = si_110
	branch Mem0[ds:si_278:byte] != Mem0[ds:di_277:byte] l0800_34BB
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BD:
	branch Z_115 l0800_34C4
// DataOut: ax dl ds ss
// DataOut (flags): CDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BF:
	word16 ax_247 = 0x0000 - C_116
	ax_112 = ax_247 - 0xFFFF - (ax_247 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34C4:
	branch ax_112 == 0x0000 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34C8:
	branch ((int16) Mem0[ds:0x4638:byte] & wArg06) != wArg06 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34D4:
	branch (wArg02 | wArg04) == 0x0000 l0800_3503
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_34DC:
	word16 di_177 = (word16) ptrArg02
	selector es_178 = SLICE(ptrArg02, selector, 16)
	word16 di_187 = 0x4641
	word16 cx_193 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34EB:
	branch cx_193 == 0x0000 l0800_34ED
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34EB_1:
	di_187 = di_187 + 0x0001
	cx_193 = cx_193 - 0x0001
	branch 0x00 != Mem0[ds:di_187:byte] l0800_34EB
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34ED:
	word16 cx_201 = ~cx_193
	word16 cx_203 = cx_201 >>u 0x0001
	word16 si_208 = di_187 - cx_201
	word16 di_209 = di_177
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FC:
	branch cx_203 == 0x0000 l0800_34FE
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FE:
	word16 cx_228 = cx_203 * 0x0002 + (cx_201 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3500:
	branch cx_228 == 0x0000 l0800_3502
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3502:
	selector ds_240
	*dsOut = ds
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3503:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3500_1:
	Mem235[es_178:di_209:byte] = Mem0[ds:si_208:byte]
	si_208 = si_208 + 0x0001
	di_209 = di_209 + 0x0001
	cx_228 = cx_228 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FC_2:
	Mem223[es_178:di_209:word16] = Mem0[ds:si_208:word16]
	si_208 = si_208 + 0x0002
	di_209 = di_209 + 0x0002
	cx_203 = cx_203 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_348D:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> di:<invalid> si:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_3479_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> Sequence es:di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_3509(selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_3509_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_3509:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	Mem43[ss:fp - 0x0060:word16] = ss
	Mem48[ss:fp - 0x0060:word16] = Mem43[ss:fp - 0x0060:selector]
	selector es_49 = Mem48[ss:fp + 0x0004:selector]
	Mem51[ss:fp - 0x0062:word16] = fp - 0x0006
	word16 di_52 = Mem51[ss:fp + 0x0002:word16]
	word16 di_199 = Mem51[ss:fp - 0x0062:word16]
	selector es_57 = Mem51[ss:fp - 0x0060:selector]
	Mem60[ss:fp - 0x0060:word16] = es_49
	Mem62[ss:fp - 0x0062:word16] = di_52
	word16 cx_200 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_354B:
	branch cx_200 == 0x0000 l0800_354D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_354B_1:
	di_199 = di_199 + 0x0001
	cx_200 = cx_200 - 0x0001
	branch 0x00 != Mem62[es_57:di_199:byte] l0800_354B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_354D:
	word16 di_103 = Mem62[ss:fp - 0x0062:word16]
	selector es_86 = Mem62[ss:fp - 0x0060:selector]
	Mem90[ss:fp - 0x0060:word16] = ds
	word16 cx_75 = ~cx_200
	word16 cx_77 = cx_75 >>u 0x0001
	word16 si_102 = di_199 - cx_75
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355C:
	branch cx_77 == 0x0000 l0800_355E
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355E:
	word16 cx_100 = cx_77 * 0x0002 + (cx_75 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3560:
	branch cx_100 == 0x0000 l0800_3562
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3562:
	selector ds_110 = Mem90[ss:fp - 0x0060:selector]
	Mem113[ss:fp - 0x0060:word16] = ss
	Mem118[ss:fp - 0x0060:word16] = Mem113[ss:fp - 0x0060:selector]
	selector es_119 = Mem118[ss:fp + 0x0004:selector]
	Mem121[ss:fp - 0x0062:word16] = fp - 0x005A
	word16 di_122 = Mem121[ss:fp + 0x0002:word16]
	word16 di_124 = Mem121[ss:fp - 0x0062:word16]
	selector es_127 = Mem121[ss:fp - 0x0060:selector]
	Mem130[ss:fp - 0x0060:word16] = es_119
	Mem132[ss:fp - 0x0062:word16] = di_122
	word16 cx_137 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357D:
	branch cx_137 == 0x0000 l0800_357F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357D_1:
	di_124 = di_124 + 0x0001
	cx_137 = cx_137 - 0x0001
	branch 0x00 != Mem132[es_127:di_124:byte] l0800_357D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357F:
	word16 di_149 = Mem132[ss:fp - 0x0062:word16]
	selector es_152 = Mem132[ss:fp - 0x0060:selector]
	Mem154[ss:fp - 0x0018:word16] = ds_110
	word16 cx_146 = ~cx_137
	Mem157[ss:fp - 0x0060:word16] = cx_146
	word16 si_148 = di_124 - cx_146
	word16 cx_158 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3594:
	branch cx_158 == 0x0000 l0800_3596
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3594_2:
	di_149 = di_149 + 0x0001
	cx_158 = cx_158 - 0x0001
	branch 0x00 != Mem157[es_152:di_149:byte] l0800_3594
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3596:
	word16 di_170 = di_149 - 0x0001
	word16 cx_172 = Mem157[ss:fp - 0x0060:word16]
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598:
	branch cx_172 == 0x0000 l0800_359A
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_359A:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_3509_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598_3:
	Mem178[es_152:di_170:byte] = Mem157[es_127:si_148:byte]
	si_148 = si_148 + 0x0001
	di_170 = di_170 + 0x0001
	cx_172 = cx_172 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3560_1:
	Mem106[es_86:di_103:byte] = Mem90[es_57:si_102:byte]
	si_102 = si_102 + 0x0001
	di_103 = di_103 + 0x0001
	cx_100 = cx_100 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355C_2:
	Mem96[es_86:di_103:word16] = Mem90[es_57:si_102:word16]
	si_102 = si_102 + 0x0002
	di_103 = di_103 + 0x0002
	cx_77 = cx_77 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp



byte fn0800_35A3(selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_35A3_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_35A3:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	Mem43[ss:fp - 0x0060:word16] = ss
	Mem48[ss:fp - 0x0060:word16] = Mem43[ss:fp - 0x0060:selector]
	selector es_49 = Mem48[ss:fp + 0x0004:selector]
	Mem51[ss:fp - 0x0062:word16] = fp - 0x0010
	word16 di_52 = Mem51[ss:fp + 0x0002:word16]
	word16 di_200 = Mem51[ss:fp - 0x0062:word16]
	selector es_57 = Mem51[ss:fp - 0x0060:selector]
	Mem60[ss:fp - 0x0060:word16] = es_49
	Mem62[ss:fp - 0x0062:word16] = di_52
	word16 cx_201 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_35E5:
	branch cx_201 == 0x0000 l0800_35E7
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35E5_1:
	di_200 = di_200 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 != Mem62[es_57:di_200:byte] l0800_35E5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35E7:
	word16 di_103 = Mem62[ss:fp - 0x0062:word16]
	selector es_86 = Mem62[ss:fp - 0x0060:selector]
	Mem90[ss:fp - 0x0060:word16] = ds
	word16 cx_75 = ~cx_201
	word16 cx_77 = cx_75 >>u 0x0001
	word16 si_102 = di_200 - cx_75
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F6:
	branch cx_77 == 0x0000 l0800_35F8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F8:
	word16 cx_100 = cx_77 * 0x0002 + (cx_75 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35FA:
	branch cx_100 == 0x0000 l0800_35FC
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35FC:
	selector ds_110 = Mem90[ss:fp - 0x0060:selector]
	Mem113[ss:fp - 0x0060:word16] = ss
	Mem118[ss:fp - 0x0060:word16] = Mem113[ss:fp - 0x0060:selector]
	selector es_119 = Mem118[ss:fp + 0x0004:selector]
	Mem121[ss:fp - 0x0062:word16] = fp - 0x0016
	word16 di_122 = Mem121[ss:fp + 0x0002:word16]
	word16 di_124 = Mem121[ss:fp - 0x0062:word16]
	selector es_128 = Mem121[ss:fp - 0x0060:selector]
	Mem131[ss:fp - 0x0060:word16] = es_119
	Mem133[ss:fp - 0x0062:word16] = di_122
	byte dl_127 = (byte) es_119
	word16 cx_138 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3617:
	branch cx_138 == 0x0000 l0800_3619
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3617_1:
	di_124 = di_124 + 0x0001
	cx_138 = cx_138 - 0x0001
	branch 0x00 != Mem133[es_128:di_124:byte] l0800_3617
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3619:
	word16 di_150 = Mem133[ss:fp - 0x0062:word16]
	selector es_153 = Mem133[ss:fp - 0x0060:selector]
	Mem155[ss:fp - 0x0018:word16] = ds_110
	word16 cx_147 = ~cx_138
	Mem158[ss:fp - 0x0060:word16] = cx_147
	word16 si_149 = di_124 - cx_147
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_362E:
	branch cx_159 == 0x0000 l0800_3630
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_362E_2:
	di_150 = di_150 + 0x0001
	cx_159 = cx_159 - 0x0001
	branch 0x00 != Mem158[es_153:di_150:byte] l0800_362E
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3630:
	word16 di_171 = di_150 - 0x0001
	word16 cx_173 = Mem158[ss:fp - 0x0060:word16]
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632:
	branch cx_173 == 0x0000 l0800_3634
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3634:
	return dl_127
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_35A3_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632_3:
	Mem179[es_153:di_171:byte] = Mem158[es_128:si_149:byte]
	si_149 = si_149 + 0x0001
	di_171 = di_171 + 0x0001
	cx_173 = cx_173 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_35FA_1:
	Mem106[es_86:di_103:byte] = Mem90[es_57:si_102:byte]
	si_102 = si_102 + 0x0001
	di_103 = di_103 + 0x0001
	cx_100 = cx_100 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F6_2:
	Mem96[es_86:di_103:word16] = Mem90[es_57:si_102:word16]
	si_102 = si_102 + 0x0002
	di_103 = di_103 + 0x0002
	cx_77 = cx_77 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp



selector fn0800_363D(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_363D_entry:
// DataOut: ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_363D:
	byte dl_29
	branch fn0800_A817(fp - 0x002E, ds, DPB(ptrLoc38, wArg06, 0), DPB(ptrLoc34, fp - 0x002E, 0), 0x0000, out dl_29) == 0x0000 l0800_3662
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32)

l0800_3662:
	selector es_53 = SLICE(ptrArg02, selector, 16)
	word16 bx_54 = (word16) ptrArg02
	Mem57[es_53:bx_54:word16] = wLoc18
	Mem60[es_53:bx_54 + 0x0002:word16] = wLoc16
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

l0800_365B:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

fn0800_363D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp



word16 fn0800_3678(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3678_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_3678:
	word16 sp_169 = fp - 0x000C
	word16 di_18 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 cx_24 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3693:
	branch cx_24 == 0x0000 l0800_3695
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3693_1:
	di_18 = di_18 + 0x0001
	cx_24 = cx_24 - 0x0001
	branch 0x00 != Mem0[es_19:di_18:byte] l0800_3693
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3695:
	word16 cx_270 = ~cx_24
	word16 di_258 = di_18 - cx_270
	byte Z_266 = cond(di_258)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369C:
	branch cx_270 == 0x0000 l0800_369E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369C_2:
	Z_266 = cond(0x5C - Mem0[es_19:di_258:byte]) (alias)
	di_258 = di_258 + 0x0001
	cx_270 = cx_270 - 0x0001
	branch 0x5C != Mem0[es_19:di_258:byte] l0800_369C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369E:
	branch Z_266 l0800_36A7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_36A0:
	di_258 = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_36A7:
	word16 di_60 = di_258 - 0x0001
	branch di_60 == 0x0000 l0800_3732
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_36B6:
	branch 0x0000 != wArg04 l0800_36C6
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32) Stack +0002(16)

l0800_36C1:
	branch di_60 == wArg02 l0800_36D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32)

l0800_36C6:
	branch Mem0[0x0000:(word16) ptrLoc0A - 0x0001:byte] != 0x3A l0800_3732
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(16)

l0800_36D0:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3732:
	ptr32 es_di_87 = Mem0[ss:fp - 0x0006:segptr32]
	word16 di_101 = (word16) es_di_87
	selector es_126 = SLICE(es_di_87, selector, 16)
	word16 cx_100 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373A:
	branch cx_100 == 0x0000 l0800_373C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373A_1:
	di_101 = di_101 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch 0x00 != Mem0[es_126:di_101:byte] l0800_373A
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373C:
	word16 cx_102 = ~cx_100
	word16 di_104 = di_101 - cx_102
	byte Z_108 = cond(di_104)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3743:
	branch cx_102 == 0x0000 l0800_3745
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3743_2:
	Z_108 = cond(0x5C - Mem0[es_126:di_104:byte]) (alias)
	di_104 = di_104 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x5C != Mem0[es_126:di_104:byte] l0800_3743
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3745:
	branch Z_108 l0800_374E
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3747:
	di_104 = 0x0001
	es_126 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_374E:
	Mem130[ss:fp - 0x0008:word16] = es_126
	word16 di_128 = di_104 - 0x0001
	Mem131[ss:fp - 0x000A:word16] = di_128
	branch (di_128 | es_126) != 0x0000 l0800_36DF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_36DF:
	Mem0[Mem0[Mem131[ss:fp - 0x000A:segptr32]:byte]:byte] = 0x00
	word16 sp_149 = sp_169 - 0x0002
	Mem150[ss:sp_149:word16] = Mem148[ss:fp + 0x0004:word16]
	Mem152[ss:sp_149 - 0x0002:word16] = Mem150[ss:fp + 0x0002:word16]
	Mem155[ss:sp_149 - 0x0004:word16] = 0x0010
	Mem160[ss:sp_149 - 0x0006:word16] = 0x0000
	Mem162[ss:sp_149 - 0x0008:word16] = 0x0000
	byte dl_166
	word16 ax_168 = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_166, out ds)
	sp_169 = sp_149 + 0x0002
	byte al_171 = (byte) ax_168
	branch ax_168 == 0x0000 l0800_371E
// DataOut: al bp ds si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_36FE:
	Mem195[ss:sp_149:word16] = Mem162[ss:fp + 0x0004:word16]
	Mem197[ss:sp_149 - 0x0002:word16] = Mem195[ss:fp + 0x0002:word16]
	sp_169 = sp_149 + 0x0002
	branch fn0800_8E52(al_171, ds, ptrArg00) == 0x0000 l0800_371E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_370E:
	Mem205[ss:sp_149:word16] = Mem197[ss:fp + 0x0004:word16]
	Mem207[ss:sp_149 - 0x0002:word16] = Mem205[ss:fp + 0x0002:word16]
	Mem210[ss:sp_149 - 0x0004:word16] = 0x000E
	word16 di_212
	fn0800_0D24(fp - 0x0002, ds, out si, out di_212, out ds)
	sp_169 = sp_149 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_371E:
	Mem0[Mem0[Mem162[ss:fp - 0x000A:segptr32]:byte]:byte] = 0x5C
	word16 dx_189 = Mem187[ss:fp - 0x000A:word16]
	Mem192[ss:fp - 0x0004:word16] = Mem187[ss:fp - 0x0008:word16]
	Mem193[ss:fp - 0x0006:word16] = dx_189 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_375D:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_3678_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3764(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di ds si sp
fn0800_3764_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3764:
	word16 sp_115
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_3796
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3796:
	fn0800_3509(ds, 0x4541, ds)
	sp_115 = fp - 0x0004
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si

l0800_376D:
	word16 di_120 = 0x427E
	word16 cx_121 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C:
	branch cx_121 == 0x0000 l0800_377E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C_1:
	di_120 = di_120 + 0x0001
	cx_121 = cx_121 - 0x0001
	branch 0x00 != Mem0[ds:di_120:byte] l0800_377C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377E:
	word16 cx_80 = ~cx_121
	word16 cx_103 = cx_80 >>u 0x0001
	word16 si_101 = di_120 - cx_80
	word16 di_102 = 0x44DC
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D:
	branch cx_103 == 0x0000 l0800_378F
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378F:
	word16 cx_104 = cx_103 * 0x0002 + (cx_80 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3791:
	branch cx_104 == 0x0000 l0800_3793
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3793:
	sp_115 = fp - 0x0004
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si

l0800_37A6:
	word16 sp_20 = sp_115 - 0x0002
	Mem21[ss:sp_20:word16] = ds
	selector es_23 = Mem21[ss:sp_20:selector]
	word16 di_134 = 0x44DC
	word16 si_26 = 0x0A40
	word16 cx_27 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B3:
	branch cx_27 == 0x0000 l0800_37B5
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B3_1:
	di_134 = di_134 + 0x0001
	cx_27 = cx_27 - 0x0001
	branch 0x00 != Mem21[es_23:di_134:byte] l0800_37B3
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B5:
	word16 di_39 = di_134 - 0x0001
	word16 cx_41 = 0x000D
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9:
	branch cx_41 == 0x0000 l0800_37BB
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37BB:
	return bp
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

fn0800_3764_exit:
// DataOut: bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9_2:
	Mem46[es_23:di_39:byte] = Mem21[ds:si_26:byte]
	si_26 = si_26 + 0x0001
	di_39 = di_39 + 0x0001
	cx_41 = cx_41 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_3791_1:
	Mem110[ds:di_102:byte] = Mem0[ds:si_101:byte]
	si_101 = si_101 + 0x0001
	di_102 = di_102 + 0x0001
	cx_104 = cx_104 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D_2:
	Mem100[ds:di_102:word16] = Mem0[ds:si_101:word16]
	si_101 = si_101 + 0x0002
	di_102 = di_102 + 0x0002
	cx_103 = cx_103 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)



word16 fn0800_37BE(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_37BE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_37BE:
	word16 di_31
	return fn0800_BEA2(ds, DPB(ptrLoc12, wArg02, 0), 0x0A2B, ds, out di_31)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_37BE_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x0A2B -12(fp):ds -10(fp):0x42E3 -8(fp):ds -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_37DF(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_37DF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_37DF:
	fn0800_3509(ds, 0x44DC, ds)
	Mem25[ss:fp - 0x0070:word16] = ds
	Mem28[ss:fp - 0x0072:word16] = 0x4541
	Mem30[ss:fp - 0x0074:word16] = ss
	selector es_185 = Mem30[ss:fp - 0x0074:selector]
	word16 di_194 = fp - 0x006C
	word16 cx_195 = 0xFFFF
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3805:
	branch cx_195 == 0x0000 l0800_3807
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3805_1:
	di_194 = di_194 + 0x0001
	cx_195 = cx_195 - 0x0001
	branch 0x00 != Mem30[es_185:di_194:byte] l0800_3805
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3807:
	word16 cx_191 = ~cx_195
	word16 di_181 = di_194 - cx_191
	byte Z_188 = cond(di_181)
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380D:
	branch cx_191 == 0x0000 l0800_380F
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380D_2:
	Z_188 = cond(0x00 - Mem30[es_185:di_181:byte]) (alias)
	di_181 = di_181 + 0x0001
	cx_191 = cx_191 - 0x0001
	branch 0x00 != Mem30[es_185:di_181:byte] l0800_380D
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380F:
	branch Z_188 l0800_3818
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3811:
	di_181 = 0x0001
	es_185 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3818:
	Mem70[ss:fp - 0x0074:word16] = es_185
	word16 di_66 = di_181 - 0x0001
	Mem72[ss:fp - 0x0076:word16] = di_66
	fn0800_35A3(ds, wArg04, wArg06)
	Mem81[ss:fp - 0x0070:word16] = ds
	Mem84[ss:fp - 0x0072:word16] = 0x0A4D
	Mem86[ss:fp - 0x0074:word16] = ss
	Mem89[ss:fp - 0x0076:word16] = fp - 0x006C
	word16 dx_93
	word16 di_95
	selector ds_105
	word16 si_127
	word16 ax_97 = fn0800_AA7E(si, di_66, ds, wArg00, wArg02, wArg04, wArg06, out dx_93, out si_127, out di_95, out ds_105)
	Mem99[ss:fp - 0x0004:word16] = dx_93
	Mem100[ss:fp - 0x0006:word16] = ax_97
	word16 sp_108 = fp - 0x006E
	branch (ax_97 | dx_93) == 0x0000 l0800_3863
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_383D:
	Mem152[ss:fp - 0x0070:word16] = Mem100[ss:fp - 0x0004:word16]
	Mem154[ss:fp - 0x0072:word16] = Mem152[ss:fp - 0x0006:word16]
	byte dl_155
	word16 di_156
	selector ds_157
	fn0800_A614(fp - 0x0002, ds_105, ptrArg00, wArg02, out dl_155, out di_156, out ds_157)
	Mem163[ss:fp - 0x0070:word16] = 0x0180
	Mem165[ss:fp - 0x0072:word16] = ss
	Mem168[ss:fp - 0x0074:word16] = fp - 0x006C
	ds_105 = fn0800_A4F6(fp - 0x0002, ds_157, wArg00, wArg02, wArg04)
	*dsOut = ds_105
	Mem173[ss:fp - 0x0070:word16] = ss
	Mem177[ss:fp - 0x0072:word16] = fp - 0x006C
	fn0800_8F7F((byte) (fp - 0x006C), ds_105, ptrArg00)
	sp_108 = fp - 0x006E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):ds -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3863:
	word16 sp_109 = sp_108 - 0x0002
	Mem110[ss:sp_109:word16] = ss
	Mem113[ss:sp_109 - 0x0002:word16] = fp - 0x006C
	Mem115[ss:sp_109 - 0x0004:word16] = ds_105
	Mem119[ss:sp_109 - 0x0006:word16] = 0x44DC
	branch fn0800_BA4A(0xDC, ds_105, ptrArg00, ptrArg04) != 0xFFFF l0800_3887
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3878:
	Mem138[ss:sp_109:word16] = ds_105
	Mem141[ss:sp_109 - 0x0002:word16] = 0x44DC
	Mem144[ss:sp_109 - 0x0004:word16] = 0x000A
	word16 di_146
	selector ds_147
	fn0800_0D24(fp - 0x0002, ds_105, out si_127, out di_146, out ds_147)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3887:
	return si_127
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_37DF_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_388C(word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_388C_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_388C:
	word16 di_21
	selector ds_22
	word16 si_23 = fn0800_4234(si, di, ds, 0x4541, ds, 0x0A13, ds, out di_21, out ds_22)
	Mem27[ds_22:0x29E5:word16] = dx
	Mem28[ds_22:0x29E3:word16] = 0x4541
	Mem30[ss:fp - 0x000C:word16] = ds_22
	Mem34[ss:fp - 0x000E:word16] = 0x0A50
	Mem36[ss:fp - 0x0010:word16] = ds_22
	Mem39[ss:fp - 0x0012:word16] = 0x44DC
	word16 di_44
	selector ds_45
	word16 si_46
	*siOut = fn0800_4234(si_23, di_21, ds_22, wArg00, wArg02, wArg04, wArg06, out di_44, out ds_45)
	Mem49[ds_45:0x29E1:word16] = dx
	Mem50[ds_45:0x29DF:word16] = 0x44DC
	Mem52[ss:fp - 0x000C:word16] = ds_45
	Mem55[ss:fp - 0x000E:word16] = 0x44DC
	Mem57[ss:fp - 0x0010:word16] = ss
	Mem60[ss:fp - 0x0012:word16] = fp - 0x0006
	selector ds_62 = fn0800_363D(ds_45, ptrArg00, wArg04, wArg06)
	*dsOut = ds_62
	branch Mem60[ds_62:0x0A12:byte] != 0x00 l0800_38EF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_38EF:
	Mem94[ss:fp - 0x000C:word16] = ds_62
	Mem97[ss:fp - 0x000E:word16] = 0x4541
	Mem99[ss:fp - 0x0010:word16] = ss
	Mem102[ss:fp - 0x0012:word16] = fp - 0x000A
	selector ds_103 = fn0800_363D(ds_62, ptrArg00, wArg04, wArg06)
	*dsOut = ds_103
	Mem107[ss:fp - 0x000C:word16] = ds_103
	Mem110[ss:fp - 0x000E:word16] = 0x461F
	Mem112[ss:fp - 0x0010:word16] = ss
	Mem115[ss:fp - 0x0012:word16] = fp - 0x000A
	branch fn0800_395B(ptrArg00, ptrArg04) < 0x0000 l0800_3927
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> ah:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3913:
	Mem131[ss:fp - 0x000C:word16] = ss
	Mem134[ss:fp - 0x000E:word16] = fp - 0x0006
	Mem136[ss:fp - 0x0010:word16] = ss
	Mem139[ss:fp - 0x0012:word16] = fp - 0x000A
	branch fn0800_395B(ptrArg00, ptrArg04) <= 0x0000 l0800_392E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> ah:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_392E:
	Mem146[ss:fp - 0x000C:word16] = Mem139[ds_103:0x29E5:word16]
	Mem148[ss:fp - 0x000E:word16] = Mem146[ds_103:0x29E3:word16]
	byte dl_149
	word16 di_150
	selector ds_151
	fn0800_A614(fp - 0x0002, ds_103, ptrArg00, wArg02, out dl_149, out di_150, out ds_151)
	Mem156[ss:fp - 0x000C:word16] = Mem148[ds_151:0x29E1:word16]
	Mem158[ss:fp - 0x000E:word16] = Mem156[ds_151:0x29DF:word16]
	byte dl_159
	word16 di_160
	selector ds_161
	fn0800_A614(fp - 0x0002, ds_151, ptrArg00, wArg02, out dl_159, out di_160, out ds_161)
	Mem166[ss:fp - 0x000C:word16] = ds_161
	Mem170[ss:fp - 0x000E:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_161, ptrArg00)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> ah:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_3927:
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> ah:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_38D7:
	Mem80[ds_62:0x4621:word16] = Mem60[ss:fp - 0x0004:word16]
	Mem82[ds_62:0x461F:word16] = Mem80[ss:fp - 0x0006:word16]
	Mem83[ds_62:0x0A12:byte] = 0x01
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> ah:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_388C_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_395B_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_395B:
	word16 ax_12 = Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16]
	branch ax_12 != Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06 + 0x0002:word16] l0800_3984
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0006(32)

l0800_3984:
	return ax_12 - Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06 + 0x0002:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3974:
	return Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16] - Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_395B_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3992(word16 bp, selector ds, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_3992_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3992:
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_39AE
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A0:
	branch Mem0[ds:0x2A23:word16] != 0x0001 l0800_39AE
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A7:
	branch Mem0[ds:0x2A17:word16] != 0x0000 l0800_39B5
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39B5:
	fn0800_3509(ds, 0x44DC, ds)
	Mem79[ss:fp - 0x0078:word16] = ds
	Mem82[ss:fp - 0x007A:word16] = 0x4541
	Mem84[ss:fp - 0x007C:word16] = ss
	selector es_128 = Mem84[ss:fp - 0x007C:selector]
	word16 di_398 = fp - 0x0074
	word16 cx_399 = 0xFFFF
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D4:
	branch cx_399 == 0x0000 l0800_39D6
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D4_1:
	di_398 = di_398 + 0x0001
	cx_399 = cx_399 - 0x0001
	branch 0x00 != Mem84[es_128:di_398:byte] l0800_39D4
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D6:
	word16 cx_100 = ~cx_399
	word16 di_103 = di_398 - cx_100
	byte Z_105 = cond(di_103)
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DC:
	branch cx_100 == 0x0000 l0800_39DE
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DC_2:
	Z_105 = cond(0x00 - Mem84[es_128:di_103:byte]) (alias)
	di_103 = di_103 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch 0x00 != Mem84[es_128:di_103:byte] l0800_39DC
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DE:
	branch Z_105 l0800_39E7
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39E0:
	di_103 = 0x0001
	es_128 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39E7:
	Mem134[ss:fp - 0x007C:word16] = es_128
	word16 di_130 = di_103 - 0x0001
	Mem136[ss:fp - 0x007E:word16] = di_130
	byte dl_139
	*dlOut = fn0800_35A3(ds, wArg04, wArg06)
	Mem144[ss:fp - 0x0078:word16] = ds
	Mem147[ss:fp - 0x007A:word16] = 0x0A4D
	Mem149[ss:fp - 0x007C:word16] = ss
	Mem152[ss:fp - 0x007E:word16] = fp - 0x0074
	word16 dx_155
	word16 si_156
	word16 di_157
	selector ds_158
	word16 ax_159 = fn0800_AA7E(si, di_130, ds, wArg00, wArg02, wArg04, wArg06, out dx_155, out si_156, out di_157, out ds_158)
	Mem161[ss:fp - 0x0004:word16] = dx_155
	Mem162[ss:fp - 0x0006:word16] = ax_159
	branch (ax_159 | dx_155) != 0x0000 l0800_3A13
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A13:
	Mem178[ss:fp - 0x0078:word16] = Mem162[ss:fp - 0x0004:word16]
	Mem180[ss:fp - 0x007A:word16] = Mem178[ss:fp - 0x0006:word16]
	word16 si_181
	selector ds_182
	word16 ax_183 = fn0800_4194(fp - 0x0002, ds_158, wArg00, wArg02, out si_181, out ds_182)
	branch false l0800_3A3D
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A23:
	branch dx_155 != 0x0000 l0800_3A2A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A25:
	branch ax_183 >u 0x0012 l0800_3A3D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A3D:
	Mem196[ss:fp - 0x0078:word16] = Mem180[ss:fp - 0x0004:word16]
	Mem198[ss:fp - 0x007A:word16] = Mem196[ss:fp - 0x0006:word16]
	selector ds_199
	word16 dx_204
	word16 ax_205 = fn0800_8CAA(ax_183, 0x08, fn0800_3E5D(fp - 0x0002, ds_182, wArg00, wArg02, out ds_199), bp, out dx_204)
	branch dx_204 != 0x0052 l0800_3A58
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A53:
	branch ax_205 == 0x4E43 l0800_3A6B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A6B:
	Mem234[ss:fp - 0x0078:word16] = Mem198[ss:fp - 0x0004:word16]
	Mem236[ss:fp - 0x007A:word16] = Mem234[ss:fp - 0x0006:word16]
	selector ds_237
	word16 dx_238 = fn0800_3E5D(fp - 0x0002, ds_199, wArg00, wArg02, out ds_237)
	branch dx_238 != Mem236[ds_237:0x2A09:word16] l0800_3A83
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A7D:
	branch ax_205 == Mem236[ds_237:0x2A07:word16] l0800_3A96
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A96:
	Mem266[ss:fp - 0x0078:word16] = ss
	Mem269[ss:fp - 0x007A:word16] = fp - 0x0074
	Mem271[ss:fp - 0x007C:word16] = ss
	Mem274[ss:fp - 0x007E:word16] = fp - 0x000E
	selector ds_275 = fn0800_363D(ds_237, ptrArg00, wArg04, wArg06)
	Mem279[ss:fp - 0x0078:word16] = ds_275
	Mem282[ss:fp - 0x007A:word16] = 0x4541
	Mem284[ss:fp - 0x007C:word16] = ss
	Mem287[ss:fp - 0x007E:word16] = fp - 0x000A
	selector ds_288 = fn0800_363D(ds_275, ptrArg00, wArg04, wArg06)
	Mem292[ss:fp - 0x0078:word16] = ss
	Mem295[ss:fp - 0x007A:word16] = fp - 0x000A
	Mem297[ss:fp - 0x007C:word16] = ss
	Mem300[ss:fp - 0x007E:word16] = fp - 0x000E
	word16 ax_302 = fn0800_395B(ptrArg00, ptrArg04)
	branch ax_302 >= 0x0000 l0800_3ADD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3ADD:
	Mem327[ss:fp - 0x0078:word16] = Mem300[ss:fp - 0x0004:word16]
	Mem329[ss:fp - 0x007A:word16] = Mem327[ss:fp - 0x0006:word16]
	selector ds_330
	ui32 dx_ax_334 = SEQ(fn0800_3E5D(fp - 0x0002, ds_288, wArg00, wArg02, out ds_330), ax_302 + 0x0012)
	Mem341[ds_330:0x2A05:word16] = SLICE(dx_ax_334 + 0x00000012, word16, 16)
	Mem342[ds_330:0x2A03:word16] = (word16) (dx_ax_334 + 0x00000012)
	Mem344[ss:fp - 0x0078:word16] = Mem342[ss:fp - 0x0004:word16]
	Mem346[ss:fp - 0x007A:word16] = Mem344[ss:fp - 0x0006:word16]
	byte dl_347
	word16 di_348
	selector ds_349
	fn0800_A614(fp - 0x0002, ds_330, ptrArg00, wArg02, out dl_347, out di_348, out ds_349)
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3ACA:
	Mem309[ss:fp - 0x0078:word16] = Mem300[ss:fp - 0x0004:word16]
	Mem311[ss:fp - 0x007A:word16] = Mem309[ss:fp - 0x0006:word16]
	byte dl_312
	word16 di_313
	selector ds_314
	fn0800_A614(fp - 0x0002, ds_288, ptrArg00, wArg02, out dl_312, out di_313, out ds_314)
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A83:
	Mem246[ss:fp - 0x0078:word16] = Mem236[ss:fp - 0x0004:word16]
	Mem248[ss:fp - 0x007A:word16] = Mem246[ss:fp - 0x0006:word16]
	byte dl_249
	word16 di_250
	selector ds_251
	fn0800_A614(fp - 0x0002, ds_237, ptrArg00, wArg02, out dl_249, out di_250, out ds_251)
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A58:
	Mem213[ss:fp - 0x0078:word16] = Mem198[ss:fp - 0x0004:word16]
	Mem215[ss:fp - 0x007A:word16] = Mem213[ss:fp - 0x0006:word16]
	byte dl_217
	word16 di_218
	selector ds_219
	fn0800_A614(fp - 0x0002, ds_199, ptrArg00, wArg02, out dl_217, out di_218, out ds_219)
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A2A:
	Mem363[ss:fp - 0x0078:word16] = Mem180[ss:fp - 0x0004:word16]
	Mem365[ss:fp - 0x007A:word16] = Mem363[ss:fp - 0x0006:word16]
	byte dl_366
	word16 di_367
	selector ds_368
	fn0800_A614(fp - 0x0002, ds_182, ptrArg00, wArg02, out dl_366, out di_367, out ds_368)
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A0C:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_39AE:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp

fn0800_3992_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_3B0A(word16 bp, selector ds, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +000A(16) Stack +000C(16)
fn0800_3B0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +000A(16) Stack +000C(16)

l0800_3B0A:
	branch (wArg0A | wArg0C) != 0x0000 l0800_3B1B
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B1B:
	word16 dx_177
	word16 ax_179
	branch wArg0C < 0x0000 l0800_3B31
// DataOut: ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B21:
	branch wArg0C > 0x0000 l0800_3B2A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B23:
	branch wArg0A <=u 0xFDE8 l0800_3B31
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B31:
	dx_177 = wArg0C
	ax_179 = wArg0A
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B2A:
	dx_177 = 0x0000
	ax_179 = 0xFDE8
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B37:
	selector ds_147 = fn0800_4311(ds, ax_179, dx_177)
	Mem73[ss:fp - 0x0004:word16] = dx_177
	Mem74[ss:fp - 0x0006:word16] = ax_179
	word16 sp_148 = fp - 0x000A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3BAB:
	branch (Mem74[ss:fp + 0x000A:word16] | Mem74[ss:fp + 0x000C:word16]) != 0x0000 l0800_3B4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B4F:
	word16 dx_111
	word16 ax_110
	branch Mem74[ss:fp + 0x000C:word16] < 0x0000 l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): SZO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B55:
	branch Mem74[ss:fp + 0x000C:word16] > 0x0000 l0800_3B5E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B57:
	branch Mem74[ss:fp + 0x000A:word16] <=u 0xFDE8 l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B65:
	dx_111 = Mem74[ss:fp + 0x000C:word16]
	ax_110 = Mem74[ss:fp + 0x000A:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B5E:
	dx_111 = 0x0000
	ax_110 = 0xFDE8
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B6B:
	Mem113[ss:fp - 0x0008:word16] = dx_111
	Mem114[ss:fp - 0x000A:word16] = ax_110
	word16 sp_115 = sp_148 - 0x0002
	Mem116[ss:sp_115:word16] = Mem114[ss:fp + 0x0004:word16]
	Mem118[ss:sp_115 - 0x0002:word16] = Mem116[ss:fp + 0x0002:word16]
	Mem120[ss:sp_115 - 0x0004:word16] = Mem118[ss:fp - 0x0008:word16]
	Mem122[ss:sp_115 - 0x0006:word16] = ax_110
	Mem124[ss:sp_115 - 0x0008:word16] = Mem122[ss:fp - 0x0004:word16]
	Mem126[ss:sp_115 - 0x000A:word16] = Mem124[ss:fp - 0x0006:word16]
	word16 di_130
	selector ds_131
	fn0800_4110(ds_147, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_130, out ds_131)
	Mem136[ss:sp_115:word16] = Mem126[ss:fp + 0x0008:word16]
	Mem138[ss:sp_115 - 0x0002:word16] = Mem136[ss:fp + 0x0006:word16]
	Mem140[ss:sp_115 - 0x0004:word16] = Mem138[ss:fp - 0x0008:word16]
	Mem142[ss:sp_115 - 0x0006:word16] = Mem140[ss:fp - 0x000A:word16]
	Mem144[ss:sp_115 - 0x0008:word16] = Mem142[ss:fp - 0x0004:word16]
	Mem146[ss:sp_115 - 0x000A:word16] = Mem144[ss:fp - 0x0006:word16]
	ds_147 = fn0800_4152(ds_131, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
	Mem153[ss:fp + 0x000A:word16] = Mem146[ss:fp + 0x000A:word16] - Mem146[ss:fp - 0x000A:word16]
	Mem157[ss:fp + 0x000C:word16] = v14
	sp_148 = sp_115 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3BB3:
	word16 sp_91 = sp_148 - 0x0002
	Mem92[ss:sp_91:word16] = Mem74[ss:fp - 0x0004:word16]
	Mem94[ss:sp_91 - 0x0002:word16] = Mem92[ss:fp - 0x0006:word16]
	fn0800_4346(ds_147, wArg00, wArg02, out ds)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

l0800_3B18:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_3BBF:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_3B0A_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>



selector fn0800_3BC3(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_3BC3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3BC3:
	word16 di_19
	word16 si_20 = fn0800_37BE(ds, 0x43AD, ds, 0x0A54, ds, out di_19)
	word16 di_33
	selector ds_34
	fn0800_4234(si_20, di_19, ds, 0x43AD, ds, 0x0A61, ds, out di_33, out ds_34)
	Mem39[ds_34:0x29D5:word16] = dx
	Mem40[ds_34:0x29D3:word16] = 0x43AD
	Mem43[ss:fp - 0x0008:word16] = Mem40[ss:fp + 0x0004:word16]
	Mem45[ss:fp - 0x000A:word16] = Mem43[ss:fp + 0x0002:word16]
	word16 si_48
	selector ds_49
	ui32 dx_ax_55 = SEQ(dx, fn0800_4194(fp - 0x0002, ds_34, wArg00, wArg02, out si_48, out ds_49) - Mem45[ss:fp + 0x0006:word16]) - Mem45[ss:fp + 0x0006:ui32]
	Mem58[ss:fp - 0x0004:word16] = SLICE(dx_ax_55, word16, 16)
	Mem59[ss:fp - 0x0006:word16] = (word16) dx_ax_55
	Mem64[ss:fp - 0x0008:word16] = 0x0000
	Mem66[ss:fp - 0x000A:word16] = Mem64[ss:fp + 0x0008:word16]
	Mem68[ss:fp - 0x000C:word16] = Mem66[ss:fp + 0x0006:word16]
	Mem70[ss:fp - 0x000E:word16] = Mem68[ss:fp + 0x0004:word16]
	Mem72[ss:fp - 0x0010:word16] = Mem70[ss:fp + 0x0002:word16]
	selector ds_75
	fn0800_ACB3(fp - 0x0002, ds_49, ptrArg00, wArg02, wArg08, out ds_75)
	Mem80[ss:fp - 0x0008:word16] = Mem72[ss:fp - 0x0004:word16]
	Mem82[ss:fp - 0x000A:word16] = Mem80[ss:fp - 0x0006:word16]
	Mem84[ss:fp - 0x000C:word16] = Mem82[ds_75:0x29D5:word16]
	Mem86[ss:fp - 0x000E:word16] = Mem84[ds_75:0x29D3:word16]
	Mem88[ss:fp - 0x0010:word16] = Mem86[ss:fp + 0x0004:word16]
	Mem90[ss:fp - 0x0012:word16] = Mem88[ss:fp + 0x0002:word16]
	selector ds_92 = fn0800_3B0A(fp - 0x0002, ds_75, wArg08, wArg0A)
	Mem96[ss:fp - 0x0008:word16] = Mem90[ds_92:0x29D5:word16]
	Mem98[ss:fp - 0x000A:word16] = Mem96[ds_92:0x29D3:word16]
	selector ds_99 = fn0800_BA67(ds_92, wArg00, wArg02)
	Mem103[ss:fp - 0x0008:word16] = 0x0000
	word16 ax_104 = Mem103[ss:fp + 0x0008:word16]
	word16 dx_106 = Mem103[ss:fp + 0x0006:word16] + Mem103[ss:fp + 0x000A:word16]
	Mem114[ss:fp - 0x000A:word16] = ax_104 + Mem103[ss:fp + 0x000C:word16] + (SEQ(dx_106, ax_104) <u 0x00000000)
	Mem116[ss:fp - 0x000C:word16] = dx_106
	Mem118[ss:fp - 0x000E:word16] = Mem116[ss:fp + 0x0004:word16]
	Mem120[ss:fp - 0x0010:word16] = Mem118[ss:fp + 0x0002:word16]
	selector ds_121
	fn0800_ACB3(fp - 0x0002, ds_99, ptrArg00, wArg02, wArg08, out ds_121)
	Mem126[ss:fp - 0x0008:word16] = Mem120[ss:fp - 0x0004:word16]
	Mem128[ss:fp - 0x000A:word16] = Mem126[ss:fp - 0x0006:word16]
	Mem130[ss:fp - 0x000C:word16] = Mem128[ss:fp + 0x0004:word16]
	Mem132[ss:fp - 0x000E:word16] = Mem130[ss:fp + 0x0002:word16]
	Mem134[ss:fp - 0x0010:word16] = Mem132[ds_121:0x29D5:word16]
	Mem136[ss:fp - 0x0012:word16] = Mem134[ds_121:0x29D3:word16]
	selector ds_137 = fn0800_3B0A(fp - 0x0002, ds_121, wArg08, wArg0A)
	Mem141[ss:fp - 0x0008:word16] = Mem136[ds_137:0x29D5:word16]
	Mem143[ss:fp - 0x000A:word16] = Mem141[ds_137:0x29D3:word16]
	byte dl_144
	word16 di_145
	selector ds_146
	fn0800_A614(fp - 0x0002, ds_137, ptrArg00, wArg02, out dl_144, out di_145, out ds_146)
	Mem151[ss:fp - 0x0008:word16] = ds_146
	Mem155[ss:fp - 0x000A:word16] = 0x43AD
	fn0800_8F7F(0xAD, ds_146, ptrArg00)
	return ds_146
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3BC3_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> si:<invalid> di:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_3C99(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_3C99_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3C99:
	fn0800_3509(ds, 0x4348, ds)
	Mem30[ss:fp - 0x0072:word16] = ss
	selector es_31 = Mem30[ss:fp - 0x0072:selector]
	word16 di_295 = fp - 0x006C
	word16 si_35 = 0x0A54
	word16 cx_296 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3CBE:
	branch cx_296 == 0x0000 l0800_3CC0
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CBE_1:
	di_295 = di_295 + 0x0001
	cx_296 = cx_296 - 0x0001
	branch 0x00 != Mem30[es_31:di_295:byte] l0800_3CBE
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC0:
	word16 di_56 = di_295 - 0x0001
	word16 cx_58 = 0x000D
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC4:
	branch cx_58 == 0x0000 l0800_3CC6
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC6:
	Mem71[ss:fp - 0x0072:word16] = ds
	Mem74[ss:fp - 0x0074:word16] = 0x0A61
	Mem76[ss:fp - 0x0076:word16] = ss
	Mem79[ss:fp - 0x0078:word16] = fp - 0x006C
	word16 di_84
	selector ds_85
	fn0800_4234(si_35, di_56, ds, wArg00, wArg02, wArg04, wArg06, out di_84, out ds_85)
	Mem88[ss:fp - 0x0004:word16] = dx
	Mem89[ss:fp - 0x0006:word16] = fp - 0x006C
	Mem94[ss:fp - 0x0072:word16] = 0x0000
	Mem96[ss:fp - 0x0074:word16] = 0x0000
	Mem98[ss:fp - 0x0076:word16] = 0x0000
	Mem100[ss:fp - 0x0078:word16] = Mem98[ss:fp + 0x0004:word16]
	Mem102[ss:fp - 0x007A:word16] = Mem100[ss:fp + 0x0002:word16]
	selector ds_105
	fn0800_ACB3(fp - 0x0002, ds_85, ptrArg00, wArg02, wArg08, out ds_105)
	Mem110[ss:fp - 0x0072:word16] = Mem102[ss:fp + 0x0008:word16]
	Mem112[ss:fp - 0x0074:word16] = Mem110[ss:fp + 0x0006:word16]
	Mem114[ss:fp - 0x0076:word16] = Mem112[ss:fp - 0x0004:word16]
	Mem116[ss:fp - 0x0078:word16] = Mem114[ss:fp - 0x0006:word16]
	Mem118[ss:fp - 0x007A:word16] = Mem116[ss:fp + 0x0004:word16]
	Mem120[ss:fp - 0x007C:word16] = Mem118[ss:fp + 0x0002:word16]
	selector ds_122 = fn0800_3B0A(fp - 0x0002, ds_105, wArg08, wArg0A)
	Mem126[ss:fp - 0x0072:word16] = 0x0000
	ui32 ax_dx_132 = SEQ(Mem126[ss:fp + 0x0008:word16], Mem126[ss:fp + 0x0006:word16] + Mem126[ss:fp + 0x000A:word16]) + Mem126[ss:fp + 0x000A:ui32]
	Mem137[ss:fp - 0x0074:word16] = SLICE(ax_dx_132, word16, 16)
	word16 dx_134 = (word16) ax_dx_132
	Mem139[ss:fp - 0x0076:word16] = dx_134
	Mem141[ss:fp - 0x0078:word16] = Mem139[ss:fp + 0x0004:word16]
	Mem143[ss:fp - 0x007A:word16] = Mem141[ss:fp + 0x0002:word16]
	selector ds_144
	fn0800_ACB3(fp - 0x0002, ds_122, ptrArg00, wArg02, wArg08, out ds_144)
	Mem149[ss:fp - 0x0072:word16] = Mem143[ss:fp + 0x0004:word16]
	Mem151[ss:fp - 0x0074:word16] = Mem149[ss:fp + 0x0002:word16]
	selector ds_153
	word16 si_152
	word16 ax_154 = fn0800_4194(fp - 0x0002, ds_144, wArg00, wArg02, out si_152, out ds_153)
	ui32 bx_cx_162 = SEQ(Mem151[ss:fp + 0x0008:word16], Mem151[ss:fp + 0x0006:word16] + Mem151[ss:fp + 0x000A:word16]) + Mem151[ss:fp + 0x000A:ui32]
	ui32 dx_ax_167 = SEQ(dx_134, ax_154 - (word16) bx_cx_162) - bx_cx_162
	word16 dx_169 = SLICE(dx_ax_167, word16, 16)
	Mem172[ss:fp + 0x000C:word16] = dx_169
	word16 ax_168 = (word16) dx_ax_167
	Mem173[ss:fp + 0x000A:word16] = ax_168
	Mem175[ss:fp - 0x0072:word16] = Mem173[ss:fp + 0x000C:word16]
	Mem177[ss:fp - 0x0074:word16] = ax_168
	Mem179[ss:fp - 0x0076:word16] = Mem177[ss:fp - 0x0004:word16]
	Mem181[ss:fp - 0x0078:word16] = Mem179[ss:fp - 0x0006:word16]
	Mem183[ss:fp - 0x007A:word16] = Mem181[ss:fp + 0x0004:word16]
	Mem185[ss:fp - 0x007C:word16] = Mem183[ss:fp + 0x0002:word16]
	selector ds_186 = fn0800_3B0A(fp - 0x0002, ds_153, wArg08, wArg0A)
	Mem190[ss:fp - 0x0072:word16] = Mem185[ss:fp - 0x0004:word16]
	Mem192[ss:fp - 0x0074:word16] = Mem190[ss:fp - 0x0006:word16]
	byte dl_193
	word16 di_194
	selector ds_195
	fn0800_A614(fp - 0x0002, ds_186, ptrArg00, wArg02, out dl_193, out di_194, out ds_195)
	Mem200[ss:fp - 0x0072:word16] = Mem192[ds_195:0x29D1:word16]
	Mem202[ss:fp - 0x0074:word16] = Mem200[ds_195:0x29CF:word16]
	byte dl_203
	selector ds_205
	word16 di_204
	fn0800_A614(fp - 0x0002, ds_195, ptrArg00, wArg02, out dl_203, out di_204, out ds_205)
	Mem211[ss:fp - 0x0072:word16] = 0x0180
	Mem213[ss:fp - 0x0074:word16] = ds_205
	Mem216[ss:fp - 0x0076:word16] = 0x4348
	selector ds_217 = fn0800_A4F6(fp - 0x0002, ds_205, wArg00, wArg02, wArg04)
	Mem221[ss:fp - 0x0072:word16] = ds_217
	Mem225[ss:fp - 0x0074:word16] = 0x4348
	fn0800_8F7F(0x48, ds_217, ptrArg00)
	Mem230[ss:fp - 0x0072:word16] = ds_217
	Mem233[ss:fp - 0x0074:word16] = 0x4348
	Mem235[ss:fp - 0x0076:word16] = ss
	Mem239[ss:fp - 0x0078:word16] = fp - 0x006C
	word16 sp_242 = fp - 0x0070
	branch fn0800_BA4A((byte) (fp - 0x006C), ds_217, ptrArg00, ptrArg04) != 0xFFFF l0800_3DB2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3DA3:
	Mem278[ss:fp - 0x0072:word16] = ss
	Mem281[ss:fp - 0x0074:word16] = fp - 0x006C
	Mem284[ss:fp - 0x0076:word16] = 0x000A
	fn0800_0D24(fp - 0x0002, ds_217, out si_152, out di_204, out ds_217)
	sp_242 = fp - 0x0070
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3DB2:
	word16 sp_254 = sp_242 - 0x0002
	Mem255[ss:sp_254:word16] = ds_217
	Mem258[ss:sp_254 - 0x0002:word16] = 0x0A65
	Mem260[ss:sp_254 - 0x0004:word16] = ds_217
	Mem263[ss:sp_254 - 0x0006:word16] = 0x4348
	word16 di_264
	selector ds_265
	fn0800_4234(si_152, di_204, ds_217, wArg00, wArg02, wArg04, wArg06, out di_264, out ds_265)
	Mem269[ds_265:0x29D1:word16] = dx_169
	Mem270[ds_265:0x29CF:word16] = 0x4348
	return ds_265
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_3C99_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

l0800_3CC4_2:
	Mem65[es_31:di_56:byte] = Mem30[ds:si_35:byte]
	si_35 = si_35 + 0x0001
	di_56 = di_56 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_3DCF(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al ax di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3DCF_entry:
	*diOut = di
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16)

l0800_3DCF:
	word16 ax_28
	selector es_13 = SLICE(ptrArg02, selector, 16)
	word16 bx_14 = (word16) ptrArg02
	word16 v10_16 = Mem0[es_13:bx_14:word16] - 0x0001
	Mem17[es_13:bx_14:word16] = v10_16
	branch v10_16 < 0x0000 l0800_3DF3
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DF3:
	ax_28 = fn0800_AEC2(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out ds)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DDE:
	word16 ax_77 = Mem17[es_13:bx_14 + 0x000E:word16]
	Mem80[es_13:bx_14 + 0x000C:word16] = Mem17[es_13:bx_14 + 0x000C:word16] + 0x0001
	ax_28 = DPB(ax_77, 0x00, 8) (alias)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DFF:
	branch ax_28 != 0xFFFF l0800_3E1F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3E07:
	fn0800_4271(ds, wArg02, wArg04)
	word16 si_71
	word16 di_72
	selector ds_73
	fn0800_0D24(fp - 0x0002, ds, out si_71, out di_72, out ds_73)
	ax_28 = 0x0008
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3E1F:
	return DPB(ax_28, Mem17[ss:fp - 0x0004:byte], 0)
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3DCF_exit:
// DataOut: al ax di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E27(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E27_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E27:
	word16 di_17
	selector ds_18
	Mem24[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_17, out ds_18), 0x00, 8)
	Mem27[ss:fp - 0x0008:word16] = Mem24[ss:fp + 0x0004:word16]
	Mem29[ss:fp - 0x000A:word16] = Mem27[ss:fp + 0x0002:word16]
	word16 di_31
	selector ds_32
	Mem37[ss:fp - 0x0006:word16] = DPB(fn0800_3DCF(ds_18, ptrArg00, wArg02, out di_31, out ds_32), 0x00, 8)
	return (Mem37[ss:fp - 0x0004:word16] << 0x08) + Mem37[ss:fp - 0x0006:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E27_exit:
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> ax:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E5D(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds dx
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E5D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E5D:
	word16 si_15
	word16 di_16
	selector ds_17
	word16 ax_18 = fn0800_3E27(fp - 0x0002, ds, wArg02, wArg04, out si_15, out di_16, out ds_17)
	Mem21[ss:fp - 0x0004:word16] = 0x0000
	Mem23[ss:fp - 0x0006:word16] = ax_18
	Mem25[ss:fp - 0x000C:word16] = Mem23[ss:fp + 0x0004:word16]
	Mem27[ss:fp - 0x000E:word16] = Mem25[ss:fp + 0x0002:word16]
	word16 si_29
	word16 di_30
	selector ds_31
	word16 ax_32 = fn0800_3E27(fp - 0x0002, ds_17, wArg00, wArg02, out si_29, out di_30, out ds_31)
	Mem34[ss:fp - 0x0008:word16] = 0x0000
	Mem35[ss:fp - 0x000A:word16] = ax_32
	return SLICE(SEQ(Mem35[ss:fp - 0x0006:word16], fp) - 0x00000002, word16, 16)
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E5D_exit:
// DataOut: ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3E9A(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3E9A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16)

l0800_3E9A:
	word16 ax_102
	selector es_13 = SLICE(ptrArg02, selector, 16)
	word16 bx_14 = (word16) ptrArg02
	word16 v10_16 = Mem0[es_13:bx_14:word16] - 0x0001
	Mem17[es_13:bx_14:word16] = v10_16
	word16 sp_116 = fp - 0x0006
	branch v10_16 < 0x0000 l0800_3EBE
// DataOut: bp bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3EBE:
	ax_102 = fn0800_AEC2(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out ds)
	sp_116 = fp - 0x0006
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3EA9:
	word16 ax_94 = Mem17[es_13:bx_14 + 0x000E:word16]
	Mem97[es_13:bx_14 + 0x000C:word16] = Mem17[es_13:bx_14 + 0x000C:word16] + 0x0001
	ax_102 = DPB(ax_94, 0x00, 8) (alias)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3ECA:
	branch ax_102 != 0xFFFF l0800_3EEA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3ED2:
	fn0800_4271(ds, wArg02, wArg04)
	word16 si_88
	word16 di_89
	fn0800_0D24(fp - 0x0002, ds, out si_88, out di_89, out ds)
	sp_116 = fp - 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3EEA:
	word16 sp_45 = sp_116 - 0x0002
	Mem46[ss:sp_45:word16] = 0x0001
	Mem51[ss:sp_45 - 0x0002:word16] = 0xFFFF
	Mem53[ss:sp_45 - 0x0004:word16] = 0xFFFF
	Mem55[ss:sp_45 - 0x0006:word16] = Mem53[ss:fp + 0x0004:word16]
	Mem57[ss:sp_45 - 0x0008:word16] = Mem55[ss:fp + 0x0002:word16]
	selector ds_61
	return DPB(fn0800_ACB3(fp - 0x0002, ds, ptrArg00, wArg02, wArg08, out ds_61), Mem57[ss:fp - 0x0004:byte], 0)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3E9A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F0A(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3F0A:
	word16 di_17
	selector ds_18
	Mem24[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_17, out ds_18), 0x00, 8)
	Mem27[ss:fp - 0x0008:word16] = Mem24[ss:fp + 0x0004:word16]
	Mem29[ss:fp - 0x000A:word16] = Mem27[ss:fp + 0x0002:word16]
	word16 di_31
	selector ds_32
	Mem38[ss:fp - 0x0006:word16] = DPB(fn0800_3DCF(ds_18, ptrArg00, wArg02, out di_31, out ds_32), 0x00, 8)
	Mem41[ss:fp - 0x0008:word16] = 0x0001
	Mem45[ss:fp - 0x000A:word16] = 0xFFFF
	Mem47[ss:fp - 0x000C:word16] = 0xFFFE
	Mem49[ss:fp - 0x000E:word16] = Mem47[ss:fp + 0x0004:word16]
	Mem51[ss:fp - 0x0010:word16] = Mem49[ss:fp + 0x0002:word16]
	selector ds_53
	fn0800_ACB3(fp - 0x0002, ds_32, ptrArg00, wArg02, wArg08, out ds_53)
	return (Mem51[ss:fp - 0x0004:word16] << 0x08) + Mem51[ss:fp - 0x0006:word16]
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> ax:<invalid> dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFE -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F58(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds dx
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F58_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3F58:
	word16 si_15
	word16 di_16
	selector ds_17
	word16 ax_18 = fn0800_3E27(fp - 0x0002, ds, wArg02, wArg04, out si_15, out di_16, out ds_17)
	Mem21[ss:fp - 0x0004:word16] = 0x0000
	Mem23[ss:fp - 0x0006:word16] = ax_18
	Mem25[ss:fp - 0x000C:word16] = Mem23[ss:fp + 0x0004:word16]
	Mem27[ss:fp - 0x000E:word16] = Mem25[ss:fp + 0x0002:word16]
	word16 si_29
	word16 di_30
	selector ds_31
	word16 ax_32 = fn0800_3E27(fp - 0x0002, ds_17, wArg00, wArg02, out si_29, out di_30, out ds_31)
	Mem35[ss:fp - 0x0008:word16] = 0x0000
	Mem36[ss:fp - 0x000A:word16] = ax_32
	Mem39[ss:fp - 0x000C:word16] = 0x0001
	Mem43[ss:fp - 0x000E:word16] = 0xFFFF
	Mem45[ss:fp - 0x0010:word16] = 0xFFFC
	Mem47[ss:fp - 0x0012:word16] = Mem45[ss:fp + 0x0004:word16]
	Mem49[ss:fp - 0x0014:word16] = Mem47[ss:fp + 0x0002:word16]
	selector ds_52
	fn0800_ACB3(fp - 0x0002, ds_31, ptrArg00, wArg02, wArg08, out ds_52)
	return Mem49[ss:fp - 0x0006:word16] + Mem49[ss:fp - 0x0008:word16] + (Mem49[ss:fp - 0x000A:word16] <u 0x0000)
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F58_exit:
// DataOut: di ds dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):0xFFFC -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3FAD(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3FAD_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3FAD:
	word16 di_17
	selector ds_18
	Mem24[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_17, out ds_18), 0x00, 8)
	Mem27[ss:fp - 0x0008:word16] = Mem24[ss:fp + 0x0004:word16]
	Mem29[ss:fp - 0x000A:word16] = Mem27[ss:fp + 0x0002:word16]
	word16 di_31
	selector ds_32
	word16 ax_36 = DPB(fn0800_3DCF(ds_18, ptrArg00, wArg02, out di_31, out ds_32), 0x00, 8)
	Mem37[ss:fp - 0x0006:word16] = ax_36
	return (ax_36 << 0x08) + Mem37[ss:fp - 0x0004:word16]
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3FAD_exit:
// DataOut: ax di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> cl:0x08 ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_401E(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_401E_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_401E:
	selector ds_23
	fn0800_4047(ds, (byte) (wArg02 >>u 0x08), DPB(ptrLoc06, wArg04, 0), wArg06, out ds_23)
	Mem30[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0006:word16]
	Mem32[ss:fp - 0x0006:word16] = Mem30[ss:fp + 0x0004:word16]
	Mem36[ss:fp - 0x0008:word16] = DPB(wArg02 >>u 0x08, Mem32[ss:fp + 0x0002:byte], 0)
	selector ds_39
	fn0800_4047(ds_23, bArg00, ptrArg02, wArg04, out ds_39)
	return ds_39
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_401E_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4047(selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_4047_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_4047:
	word16 ax_102
	selector es_15 = SLICE(ptrArg04, selector, 16)
	word16 bx_16 = (word16) ptrArg04
	word16 v10_18 = Mem0[es_15:bx_16:word16] + 0x0001
	Mem19[es_15:bx_16:word16] = v10_18
	branch v10_18 >= 0x0000 l0800_406F
// DataOut: bp bx cl cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_406F:
	ax_102 = fn0800_B30A(ds, bArg02, DPB(ptrLoc08, wArg04, 0), wArg06, out ds)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_4056:
	word16 ax_76 = Mem19[es_15:bx_16 + 0x000E:word16]
	word16 si_77 = Mem19[es_15:bx_16 + 0x000C:word16]
	Mem79[es_15:bx_16 + 0x000C:word16] = Mem19[es_15:bx_16 + 0x000C:word16] + 0x0001
	Mem83[ax_76:si_77:byte] = bArg02
	ax_102 = DPB(ax_76, 0x00, 8) (alias)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_407C:
	branch ax_102 != 0xFFFF l0800_4099
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_4081:
	fn0800_4271(ds, wArg04, wArg06)
	word16 si_70
	selector ds_72
	fn0800_0D24(fp - 0x0002, ds, out si_70, out di, out ds_72)
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_4099:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_4047_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_409C(word16 bp, selector ds, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_409C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_409C:
	selector ds_16 = fn0800_401E(fp - 0x0002, ds, wArg04, wArg06, wArg08)
	Mem22[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0008:word16]
	Mem24[ss:fp - 0x0006:word16] = Mem22[ss:fp + 0x0006:word16]
	Mem26[ss:fp - 0x0008:word16] = Mem24[ss:fp + 0x0002:word16]
	return fn0800_401E(fp - 0x0002, ds_16, wArg00, wArg02, wArg04)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_409C_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_40BF(word16 bp, selector ds, byte bArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(16) Stack +0006(16)
fn0800_40BF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16)

l0800_40BF:
	selector ds_25
	fn0800_4047(ds, bArg02 & 0xFF, DPB(ptrLoc06, wArg04, 0), wArg06, out ds_25)
	Mem31[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0006:word16]
	Mem33[ss:fp - 0x0006:word16] = Mem31[ss:fp + 0x0004:word16]
	word16 ax_34 = Mem33[ss:fp + 0x0002:word16]
	Mem43[ss:fp - 0x0008:word16] = DPB(ax_34 >>u 0x08, (byte) (ax_34 >>u 0x08) & 0xFF, 0)
	selector ds_46
	return fn0800_4047(ds_25, bArg00, ptrArg02, wArg04, out ds_46)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_40BF_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4110(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_4110_entry:
	*diOut = di
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_4110:
	selector ds_25
	word16 ax_26 = fn0800_ABA3(fp - 0x0002, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_25)
	branch 0x0000 != wArg08 l0800_4138
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4133:
	branch ax_26 == wArg06 l0800_4150
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +000A(16) Stack +000C(16)

l0800_4138:
	fn0800_4271(ds_25, wArg0A, wArg0C)
	word16 di_64
	selector ds_65
	fn0800_0D24(fp - 0x0002, ds_25, out si, out di_64, out ds_65)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4150:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4110_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_4152(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_4152_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_4152:
	selector ds_25
	word16 ax_26 = fn0800_AD85(fp - 0x0002, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_25)
	branch 0x0000 != wArg08 l0800_417A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4175:
	branch ax_26 == wArg06 l0800_4192
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +000A(16) Stack +000C(16)

l0800_417A:
	fn0800_4271(ds_25, wArg0A, wArg0C)
	word16 si_61
	word16 di_62
	fn0800_0D24(fp - 0x0002, ds_25, out si_61, out di_62, out ds_25)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4192:
	return ds_25
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4152_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4194(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4194_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4194:
	word16 si_17
	word16 ax_18 = fn0800_AD2F(ds, DPB(ptrLoc0E, wArg02, 0), wArg04, out si_17)
	Mem21[ss:fp - 0x0004:word16] = dx
	Mem23[ss:fp - 0x0006:word16] = ax_18
	Mem26[ss:fp - 0x000C:word16] = 0x0002
	Mem31[ss:fp - 0x000E:word16] = 0x0000
	Mem33[ss:fp - 0x0010:word16] = 0x0000
	Mem35[ss:fp - 0x0012:word16] = Mem33[ss:fp + 0x0004:word16]
	Mem37[ss:fp - 0x0014:word16] = Mem35[ss:fp + 0x0002:word16]
	selector ds_40
	fn0800_ACB3(fp - 0x0002, ds, ptrArg00, wArg02, wArg08, out ds_40)
	Mem45[ss:fp - 0x000C:word16] = Mem37[ss:fp + 0x0004:word16]
	Mem47[ss:fp - 0x000E:word16] = Mem45[ss:fp + 0x0002:word16]
	word16 si_48
	word16 ax_49 = fn0800_AD2F(ds_40, ptrArg00, wArg02, out si_48)
	Mem51[ss:fp - 0x0008:word16] = dx
	Mem52[ss:fp - 0x000A:word16] = ax_49
	Mem57[ss:fp - 0x000C:word16] = 0x0000
	Mem59[ss:fp - 0x000E:word16] = Mem57[ss:fp - 0x0004:word16]
	Mem61[ss:fp - 0x0010:word16] = Mem59[ss:fp - 0x0006:word16]
	Mem63[ss:fp - 0x0012:word16] = Mem61[ss:fp + 0x0004:word16]
	Mem65[ss:fp - 0x0014:word16] = Mem63[ss:fp + 0x0002:word16]
	selector ds_66
	fn0800_ACB3(fp - 0x0002, ds_40, ptrArg00, wArg02, wArg08, out ds_66)
	return Mem65[ss:fp - 0x000A:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4194_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4234(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_4234_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_4234:
	word16 dx_23
	word16 di_25
	selector ds_26
	word16 si_24
	word16 ax_27 = fn0800_AA7E(si, di, ds, wArg02, wArg04, wArg06, wArg08, out dx_23, out si_24, out di_25, out ds_26)
	Mem29[ss:fp - 0x0004:word16] = dx_23
	Mem31[ss:fp - 0x0006:word16] = ax_27
	branch (ax_27 | Mem31[ss:fp - 0x0004:word16]) != 0x0000 l0800_4267
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4257:
	Mem50[ss:fp - 0x0008:word16] = Mem31[ss:fp + 0x0004:word16]
	Mem52[ss:fp - 0x000A:word16] = Mem50[ss:fp + 0x0002:word16]
	Mem55[ss:fp - 0x000C:word16] = 0x0007
	word16 di_57
	selector ds_58
	fn0800_0D24(fp - 0x0002, ds_26, out si_24, out di_57, out ds_58)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4267:
	return si_24
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4234_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_4271(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4271_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4271:
	branch wArg04 != Mem0[ds:0x29E5:word16] l0800_428D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4280:
	branch wArg02 != Mem0[ds:0x29E3:word16] l0800_428D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_428D:
	branch wArg04 != Mem0[ds:0x29E1:word16] l0800_42A6
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4299:
	branch wArg02 != Mem0[ds:0x29DF:word16] l0800_42A6
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42A6:
	branch wArg04 != Mem0[ds:0x29D1:word16] l0800_42BF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42B2:
	branch wArg02 != Mem0[ds:0x29CF:word16] l0800_42BF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42BF:
	branch wArg04 != Mem0[ds:0x29DD:word16] l0800_42D8
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42CB:
	branch wArg02 != Mem0[ds:0x29DB:word16] l0800_42D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42D8:
	branch wArg04 != Mem0[ds:0x29D9:word16] l0800_42F1
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42E4:
	branch wArg02 != Mem0[ds:0x29D7:word16] l0800_42F1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42F1:
	branch wArg04 != Mem0[ds:0x29D5:word16] l0800_430A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42FD:
	branch wArg02 != Mem0[ds:0x29D3:word16] l0800_430A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_430A:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4303:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42EA:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42D1:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42B8:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_429F:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4286:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_4271_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:ds -2(fp):bp



selector fn0800_4311(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4311_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4311:
	word16 dx_15
	word16 bp_16
	selector ds_17
	word16 ax_18 = fn0800_9F89(fp - 0x0002, ds, wArg02, wArg04, out dx_15, out bp_16, out ds_17)
	Mem20[ss:bp_16 - 0x0002:word16] = dx_15
	Mem22[ss:bp_16 - 0x0004:word16] = ax_18
	branch (ax_18 | dx_15) != 0x0000 l0800_433C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_432D:
	Mem41[ss:fp - 0x0008:word16] = ds_17
	Mem44[ss:fp - 0x000A:word16] = 0x0A6C
	Mem47[ss:fp - 0x000C:word16] = 0x0006
	word16 si_48
	word16 di_49
	fn0800_0D24(bp_16, ds_17, out si_48, out di_49, out ds_17)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp

l0800_433C:
	return ds_17
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -12(fp):0x0006 -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp

fn0800_4311_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -12(fp):0x0006 -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp



byte fn0800_4346(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4346_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4346:
	selector ds_13
	return fn0800_9E75(ds, wArg04, out ds_13)
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4346_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4357(word16 wArg00, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bp bpl bx dl dx eax ebp ebx edx es esp rax rbp rbx rdx rsp sp spl
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_4357_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4357:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43B9:
	branch Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte] != 0x00 l0800_435C
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_435C:
	byte al_59 = Mem0[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte]
	word16 ax_61 = (int16) al_59
	branch ax_61 == 0x002A l0800_4379
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4379:
	selector es_119 = SLICE(ptrArg02, selector, 16)
	word16 bx_120 = (word16) ptrArg02
	branch Mem0[es_119:bx_120:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4382:
	branch Mem0[es_119:bx_120:byte] != 0x00 l0800_4376
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4376:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4388:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_436A:
	branch ax_61 == 0x002E l0800_439E
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_439E:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] == 0x00 l0800_43B6
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_436F:
	branch ax_61 == 0x003F l0800_438A
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_438A:
	selector es_102 = SLICE(ptrArg02, selector, 16)
	word16 bx_103 = (word16) ptrArg02
	branch Mem0[es_102:bx_103:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0006(32)

l0800_4393:
	branch Mem0[es_102:bx_103:byte] == 0x00 l0800_43B6
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0006(32)

l0800_4399:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4374:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43A7:
	branch al_59 == Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] l0800_43B3
	branch al_59 == Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] l0800_43B3
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0006(32)

l0800_43B3:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43B6:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_43AF:
	return 0x0000
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43C2:
	word16 ax_45
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] != 0x00 l0800_43D0
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D0:
	ax_45 = 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43CB:
	ax_45 = 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D2:
	return ax_45
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

fn0800_4357_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>



void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx es rax rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_43D4_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_43D4:
	word16 cx_10 = wArg06
	word16 si_17 = wArg02 + (word16) (wArg06 *s 0x000C)
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_440F:
	si_17 = si_17 - 0x000C
	cx_10 = cx_10 - 0x0001
	branch cx_10 != 0x0000 l0800_43E9
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_43E9:
	Mem36[psegArg04:si_17 + 0x0002:word16] = 0x0000
	Mem37[psegArg04:si_17:word16] = 0x0000
	Mem38[psegArg04:si_17 + 0x0004:word16] = 0xFFFF
	Mem39[psegArg04:si_17 + 0x0008:word16] = 0x0000
	Mem40[psegArg04:si_17 + 0x0006:word16] = 0x0000
	Mem41[psegArg04:si_17 + 0x000A:word16] = 0x0000
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_4419:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp

fn0800_43D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp



void fn0800_441C(word16 bp, selector ds, segptr32 ptrArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_441C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_441C:
	word16 bp_112 = fp - 0x0002
	word16 sp_10 = fp - 0x0008
	word16 di_13 = 0x0000
	word16 cx_14 = 0x0000
	word16 si_20 = wArg02
	branch 0x0000 >=u wArg06 l0800_4452
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4439:
	branch (Mem0[psegArg04:si_20:word16] | Mem0[psegArg04:si_20 + 0x0002:word16]) == 0x0000 l0800_4449
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4445:
	di_13 = di_13 + 0x0001
	wLoc04 = cx_14
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4449:
	si_20 = si_20 + 0x000C
	cx_14 = cx_14 + 0x0001
	branch cx_14 <u wArg06 l0800_4439
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4452:
	branch di_13 != 0x0000 l0800_4459
	branch di_13 != 0x0000 l0800_4459
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32)

l0800_4459:
	branch di_13 == 0x0001 l0800_4461
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(32)

l0800_4461:
	selector es_235 = SLICE(ptrArg02, selector, 16)
	word16 bx_237 = (word16) ptrArg02 + (word16) (wLoc04 *s 0x000C)
	Mem240[es_235:bx_237 + 0x000A:word16] = Mem0[es_235:bx_237 + 0x000A:word16] + 0x0001
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_445E:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4525:
	word16 sp_90 = sp_10 - 0x0002
	Mem91[ss:sp_90:word16] = Mem0[ss:bp_112 + 0x0008:word16]
	Mem93[ss:sp_90 - 0x0002:word16] = Mem91[ss:bp_112 + 0x0006:word16]
	Mem95[ss:sp_90 - 0x0004:word16] = Mem93[ss:bp_112 + 0x0004:word16]
	word16 bp_99
	branch fn0800_463B(bp_112, ds, bp, wArg00, wArg02, psegArg04, out bp_99) == 0x0000 l0800_453B
	Mem107[ss:sp_90:word16] = Mem95[ss:bp_99 + 0x0008:word16]
	Mem109[ss:sp_90 - 0x0002:word16] = Mem107[ss:bp_99 + 0x0006:word16]
	Mem111[ss:sp_90 - 0x0004:word16] = Mem109[ss:bp_99 + 0x0004:word16]
	branch fn0800_463B(bp_99, ds, bp, wArg00, wArg02, psegArg04, out bp_112) == 0x0000 l0800_453B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_453B:
	Mem222[ss:sp_90:word16] = Mem111[ss:bp_112 + 0x0008:word16]
	Mem224[ss:sp_90 - 0x0002:word16] = Mem222[ss:bp_112 + 0x0006:word16]
	Mem226[ss:sp_90 - 0x0004:word16] = Mem224[ss:bp_112 + 0x0004:word16]
	fn0800_4550(bp_112)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_4538:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4478:
	ptr32 es_bx_124 = Mem111[ss:bp_112 + 0x0004:segptr32]
	word16 ax_122 = (word16) (Mem111[ds:0x4658:word16] *s 0x000C)
	selector es_125 = SLICE(es_bx_124, selector, 16)
	word16 bx_127 = (word16) es_bx_124 + ax_122
	word16 dx_129 = Mem111[es_125:bx_127:word16]
	Mem131[ss:sp_90:word16] = Mem111[es_125:bx_127 + 0x0002:word16]
	word16 ax_132 = Mem131[ds:0x465A:word16]
	Mem135[ss:sp_90 - 0x0002:word16] = dx_129
	word16 ax_137 = (word16) (ax_132 *s 0x000C)
	word16 bx_140 = Mem135[ss:bp_112 + 0x0004:word16] + ax_137
	word16 v20_143 = Mem135[es_125:bx_140:word16] + Mem135[ss:sp_90 - 0x0002:word16]
	Mem144[es_125:bx_140:word16] = v20_143
	Mem151[es_125:bx_140 + 0x0002:word16] = Mem144[es_125:bx_140 + 0x0002:word16] + Mem144[ss:sp_90:word16] + (v20_143 <u 0x0000)
	word16 bx_153 = Mem151[ss:bp_112 + 0x0004:word16] + ax_122
	Mem154[es_125:bx_153 + 0x0002:word16] = 0x0000
	Mem155[es_125:bx_153:word16] = 0x0000
	word16 bx_157 = Mem155[ss:bp_112 + 0x0004:word16] + ax_137
	Mem160[es_125:bx_157 + 0x000A:word16] = Mem155[es_125:bx_157 + 0x000A:word16] + 0x0001
	word16 cx_123 = ax_122
	word16 dx_138 = ax_137
	sp_10 = sp_90 + 0x0002
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_44DD:
	ptr32 es_bx_166 = Mem160[ss:bp_112 + 0x0004:segptr32]
	selector es_167 = SLICE(es_bx_166, selector, 16)
	word16 bx_169 = (word16) es_bx_166 + dx_138
	branch Mem160[es_167:bx_169 + 0x0004:word16] != 0xFFFF l0800_44C3
// DataOut: bp cx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_44C3:
	selector es_207 = Mem160[ss:bp_112 + 0x0006:selector]
	word16 ax_208 = Mem160[es_207:bx_169 + 0x0004:word16]
	Mem209[ds:0x465A:word16] = ax_208
	word16 ax_212 = (word16) (ax_208 *s 0x000C)
	word16 bx_216 = Mem209[ss:bp_112 + 0x0004:word16] + ax_212
	Mem219[es_207:bx_216 + 0x000A:word16] = Mem209[es_207:bx_216 + 0x000A:word16] + 0x0001
	dx_138 = ax_212
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_44EB:
	Mem175[es_167:bx_169 + 0x0004:word16] = Mem160[ds:0x4658:word16]
	word16 bx_177 = Mem175[ss:bp_112 + 0x0004:word16] + ax_122
	Mem180[es_167:bx_177 + 0x000A:word16] = Mem175[es_167:bx_177 + 0x000A:word16] + 0x0001
// DataOut: bp cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4517:
	ptr32 es_bx_187 = Mem180[ss:bp_112 + 0x0004:segptr32]
	word16 bx_190 = (word16) es_bx_187 + cx_123
	branch Mem180[SLICE(es_bx_187, selector, 16):bx_190 + 0x0004:word16] != 0xFFFF l0800_44FD
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_44FD:
	selector es_194 = Mem180[ss:bp_112 + 0x0006:selector]
	word16 ax_195 = Mem180[es_194:bx_190 + 0x0004:word16]
	Mem196[ds:0x4658:word16] = ax_195
	word16 ax_199 = (word16) (ax_195 *s 0x000C)
	word16 bx_202 = Mem196[ss:bp_112 + 0x0004:word16] + ax_199
	Mem205[es_194:bx_202 + 0x000A:word16] = Mem196[es_194:bx_202 + 0x000A:word16] + 0x0001
	cx_123 = ax_199
// DataOut: bp cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4456:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_454A:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> Sequence es:bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_441C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



void fn0800_4550(word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_4550_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4550:
	word16 bp_108 = fp - 0x0002
	word16 sp_11 = fp - 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_45D6:
	branch Mem0[ss:bp_108 - 0x000A:word16] <=u 0x0010 l0800_4573
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4573:
	word16 di_110 = 0x0000
	word16 si_109 = Mem0[ss:bp_108 + 0x0004:word16]
	branch 0x0000 >=u Mem0[ss:bp_108 + 0x0008:word16] l0800_45C3
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_457D:
	branch Mem0[Mem0[ss:bp_108 + 0x0006:selector]:si_109 + 0x000A:word16] != Mem0[ss:bp_108 - 0x000A:word16] l0800_45BA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4589:
	word16 sp_97 = sp_11 - 0x0002
	Mem98[ss:sp_97:word16] = Mem0[ss:bp_108 - 0x000A:word16]
	Mem100[ss:sp_97 - 0x0002:word16] = Mem98[ss:bp_108 - 0x0006:word16]
	Mem102[ss:sp_97 - 0x0004:word16] = Mem100[ss:bp_108 - 0x0008:word16]
	Mem104[ss:sp_97 - 0x0006:word16] = Mem102[ss:bp_108 - 0x0002:word16]
	Mem106[ss:sp_97 - 0x0008:word16] = Mem104[ss:bp_108 - 0x0004:word16]
	word16 dx_107
	word16 ax_111 = fn0800_8BC2(bp_108, si_109, di_110, bp, out dx_107, out bp_108, out si_109, out di_110)
	Mem114[ss:sp_97 - 0x0002:word16] = dx_107
	Mem116[ss:sp_97 - 0x0004:word16] = ax_111
	word16 dx_120
	word16 ax_121 = fn0800_45E2(wArg00, wArg02, wArg04, out dx_120)
	selector es_123 = Mem116[ss:bp_108 + 0x0006:selector]
	Mem124[es_123:si_109 + 0x0008:word16] = dx_120
	Mem125[es_123:si_109 + 0x0006:word16] = ax_121
	word16 ax_126 = Mem125[ss:bp_108 - 0x0006:word16]
	word16 v15_128 = Mem125[ss:bp_108 - 0x0004:word16] + Mem125[ss:bp_108 - 0x0008:word16]
	Mem129[ss:bp_108 - 0x0004:word16] = v15_128
	Mem133[ss:bp_108 - 0x0002:word16] = Mem129[ss:bp_108 - 0x0002:word16] + ax_126 + (v15_128 <u 0x0000)
	sp_11 = sp_97 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45BA:
	si_109 = si_109 + 0x000C
	di_110 = di_110 + 0x0001
	branch di_110 <u Mem0[ss:bp_108 + 0x0008:word16] l0800_457D
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45C3:
	Mem54[ss:bp_108 - 0x000A:word16] = Mem0[ss:bp_108 - 0x000A:word16] + 0x0001
	word16 ax_55 = Mem54[ss:bp_108 - 0x0006:word16]
	word16 dx_61 = __rcr(Mem54[ss:bp_108 - 0x0008:word16], 0x01, cond(ax_55 >>u 0x0001))
	Mem62[ss:bp_108 - 0x0006:word16] = ax_55 >>u 0x0001
	Mem63[ss:bp_108 - 0x0008:word16] = dx_61
	Mem65[ss:bp_108 - 0x000A:word16] = Mem63[ss:bp_108 - 0x000A:word16] + 0x0001
	word16 ax_66 = Mem65[ss:bp_108 - 0x0006:word16]
	word16 dx_72 = __rcr(Mem65[ss:bp_108 - 0x0008:word16], 0x01, cond(ax_66 >>u 0x0001))
	Mem74[ss:bp_108 - 0x0006:word16] = ax_66 >>u 0x0001
	Mem75[ss:bp_108 - 0x0008:word16] = dx_72
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45DC:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4550_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_45E2_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_45E2:
	word16 bx_15 = wArg06
	word16 wLoc04_10 = 0x0000
	word16 wLoc06_11 = 0x0000
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_462A:
	bx_15 = bx_15 - 0x0001
	branch bx_15 != 0x0000 l0800_45F7
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_45F7:
	word16 dx_36 = wLoc06_11 << 0x0001
	word16 ax_40 = __rcl(wLoc04_10, 0x01, cond(dx_36))
	wLoc04_10 = ax_40
	wLoc06_11 = dx_36
	branch (wArg02 & 0x0001) == 0x0000 l0800_461A
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4612:
	wLoc06_11 = dx_36 | 0x0001
	wLoc04_10 = ax_40
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_461A:
	word16 ax_54 = wArg04 >>u 0x0001
	wArg04 = ax_54
	wArg02 = __rcr(wArg02, 0x01, cond(ax_54))
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4631:
	word16 dx_28
	*dxOut = wLoc04_10
	return wLoc06_11
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_45E2_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_463B(word16 bp, selector ds, word16 wArg00, word16 wArg02, selector psegArg04, word16 wArg06, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp sp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_463B_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_463B:
	word16 wLoc0C_102 = 0xFFFF
	word16 wLoc0E_103 = 0xFFFF
	word16 wLoc08_104 = 0xFFFF
	word16 wLoc0A_105 = 0xFFFF
	word16 cx_106 = 0x0000
	word16 si_108 = wArg02 + 0x0002
	branch 0x0000 >=u wArg06 l0800_46D5
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4661:
	word16 ax_111 = Mem0[psegArg04:si_108 + 0x0000:word16]
	word16 dx_112 = Mem0[psegArg04:si_108:word16]
	branch (dx_112 | ax_111) == 0x0000 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4675:
	branch ax_111 >u wLoc08_104 l0800_46AB
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4680:
	branch ax_111 <u wLoc08_104 l0800_4687
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4682:
	branch dx_112 >=u wLoc0A_105 l0800_46AB
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46AB:
	branch ax_111 >u wLoc0C_102 l0800_46CD
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B6:
	branch ax_111 <u wLoc0C_102 l0800_46BD
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B8:
	branch dx_112 >=u wLoc0E_103 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46BD:
	Mem152[ds:0x4658:word16] = cx_106
	wLoc0C_102 = ax_111
	wLoc0E_103 = dx_112
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4687:
	Mem163[ds:0x4658:word16] = Mem0[ds:0x465A:word16]
	Mem168[ds:0x465A:word16] = cx_106
	wLoc0C_102 = wLoc08_104
	wLoc0E_103 = wLoc0A_105
	wLoc08_104 = ax_111
	wLoc0A_105 = dx_112
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46CD:
	si_108 = si_108 + 0x000C
	cx_106 = cx_106 + 0x0001
	branch cx_106 <u wArg06 l0800_4661
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46D5:
	branch wLoc08_104 != 0xFFFF l0800_46E1
	branch wLoc08_104 != 0xFFFF l0800_46E1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000A(0) Local -000C(0) Local -000E(0)

l0800_46DB:
	branch wLoc0A_105 == 0xFFFF l0800_46ED
	branch wLoc0A_105 == 0xFFFF l0800_46ED
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(0) Local -000E(0)

l0800_46E1:
	branch wLoc0C_102 != 0xFFFF l0800_46F5
	branch wLoc0C_102 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000E(0)

l0800_46E7:
	branch wLoc0E_103 != 0xFFFF l0800_46F5
	branch wLoc0E_103 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_46F5:
	word16 bp_91
	*bpOut = bp
	return 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_46ED:
	return 0x0000
	word16 bp_78
	*bpOut = Mem0[ss:bp:word16]
	return 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_463B_exit:
// DataOut: ax bp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_46FE(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_46FE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_46FE:
	branch Mem0[ds:0x2A05:word16] >u 0x0000 l0800_471F
// DataOut: bp ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_470D:
	branch Mem0[ds:0x2A05:word16] <u 0x0000 l0800_4716
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_470F:
	branch Mem0[ds:0x2A03:word16] >=u 0x002A l0800_471F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_471F:
	selector ds_61
	fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc30, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], 0x0000, out ds_61)
	Mem66[ss:fp - 0x0028:word16] = Mem0[ds_61:0x29E5:word16]
	Mem69[ss:fp - 0x002A:word16] = Mem66[ds_61:0x29E3:word16]
	word16 di_72
	selector ds_73
	word16 ax_74 = fn0800_3FAD(fp - 0x0002, ds_61, wArg00, wArg02, out di_72, out ds_73)
	branch 0x0000 <u Mem69[ds_73:0x2A05:word16] l0800_4761
// DataOut: ax bp di ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4750:
	branch 0x0000 >u Mem69[ds_73:0x2A05:word16] l0800_4758
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4752:
	branch ax_74 + 0x0024 <=u Mem69[ds_73:0x2A03:word16] l0800_4761
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4761:
	Mem92[ss:fp - 0x0028:word16] = 0x0000
	Mem99[ss:fp - 0x002A:word16] = 0x0000
	Mem101[ss:fp - 0x002C:word16] = ax_74 + 0x0020
	Mem103[ss:fp - 0x002E:word16] = Mem101[ds_73:0x29E5:word16]
	Mem105[ss:fp - 0x0030:word16] = Mem103[ds_73:0x29E3:word16]
	selector ds_108
	word16 ax_109 = fn0800_ACB3(fp - 0x0002, ds_73, ptrArg00, wArg02, wArg08, out ds_108)
	Mem113[ss:fp - 0x0028:word16] = Mem105[ds_108:0x29E5:word16]
	Mem115[ss:fp - 0x002A:word16] = Mem113[ds_108:0x29E3:word16]
	word16 di_116
	selector ds_117
	word16 dx_123
	word16 ax_124 = fn0800_8CAA(ax_109, 0x08, fn0800_3F58(fp - 0x0002, ds_108, wArg00, wArg02, out di_116, out ds_117), bp, out dx_123)
	branch dx_123 != 0x0052 l0800_4798
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4793:
	branch ax_124 == 0x4E43 l0800_47A1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47A1:
	Mem142[ss:fp - 0x0028:word16] = Mem115[ds_117:0x29E5:word16]
	Mem144[ss:fp - 0x002A:word16] = Mem142[ds_117:0x29E3:word16]
	word16 si_145
	word16 ax_146 = fn0800_AD2F(ds_117, ptrArg00, wArg02, out si_145)
	Mem148[ss:fp - 0x0008:word16] = dx_123
	Mem149[ss:fp - 0x000A:word16] = ax_146
	Mem154[ss:fp - 0x0028:word16] = 0x0000
	Mem157[ss:fp - 0x002A:word16] = 0x0000
	Mem159[ss:fp - 0x002C:word16] = 0x0002
	Mem161[ss:fp - 0x002E:word16] = Mem159[ds_117:0x29E5:word16]
	Mem163[ss:fp - 0x0030:word16] = Mem161[ds_117:0x29E3:word16]
	selector ds_164
	fn0800_ACB3(fp - 0x0002, ds_117, ptrArg00, wArg02, wArg08, out ds_164)
	Mem169[ss:fp - 0x0028:word16] = Mem163[ds_164:0x29E5:word16]
	Mem171[ss:fp - 0x002A:word16] = Mem169[ds_164:0x29E3:word16]
	word16 di_172
	selector ds_173
	fn0800_3FAD(fp - 0x0002, ds_164, wArg00, wArg02, out di_172, out ds_173)
	Mem179[ss:fp - 0x0028:word16] = Mem171[ds_173:0x29E5:word16]
	Mem181[ss:fp - 0x002A:word16] = Mem179[ds_173:0x29E3:word16]
	word16 di_182
	selector ds_183
	Mem186[ss:fp - 0x000C:word16] = fn0800_3FAD(fp - 0x0002, ds_173, wArg00, wArg02, out di_182, out ds_183)
	branch di_182 == 0x0000 l0800_47F3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47F0:
	Mem828[ss:fp - 0x000C:word16] = Mem186[ss:fp - 0x000C:word16] - 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47F3:
	word16 dx_196
	word16 ax_198 = fn0800_8C69(Mem186[ss:fp - 0x000C:word16], 0x09, 0x0000, bp, out dx_196) + di_182
	Mem202[ss:fp - 0x0004:word16] = dx_196 + (ax_198 <u 0x0000)
	Mem203[ss:fp - 0x0006:word16] = ax_198
	Mem208[ss:fp - 0x0028:word16] = 0x0000
	Mem211[ss:fp - 0x002A:word16] = 0x0000
	Mem213[ss:fp - 0x002C:word16] = 0x0016
	Mem215[ss:fp - 0x002E:word16] = Mem213[ds_183:0x29E5:word16]
	Mem217[ss:fp - 0x0030:word16] = Mem215[ds_183:0x29E3:word16]
	selector ds_218
	fn0800_ACB3(fp - 0x0002, ds_183, ptrArg00, wArg02, wArg08, out ds_218)
	Mem223[ss:fp - 0x0028:word16] = Mem217[ds_218:0x29E5:word16]
	Mem225[ss:fp - 0x002A:word16] = Mem223[ds_218:0x29E3:word16]
	word16 di_226
	selector ds_227
	fn0800_3FAD(fp - 0x0002, ds_218, wArg00, wArg02, out di_226, out ds_227)
	Mem232[ss:fp - 0x0028:word16] = Mem225[ds_227:0x29E5:word16]
	Mem234[ss:fp - 0x002A:word16] = Mem232[ds_227:0x29E3:word16]
	word16 di_235
	selector ds_236
	Mem240[ss:fp - 0x001E:word16] = fn0800_3FAD(fp - 0x0002, ds_227, wArg00, wArg02, out di_235, out ds_236)
	Mem242[ss:fp - 0x0028:word16] = Mem240[ds_236:0x29E5:word16]
	Mem244[ss:fp - 0x002A:word16] = Mem242[ds_236:0x29E3:word16]
	word16 di_245
	selector ds_246
	Mem250[ss:fp - 0x0020:word16] = fn0800_3FAD(fp - 0x0002, ds_236, wArg00, wArg02, out di_245, out ds_246)
	Mem252[ss:fp - 0x0028:word16] = Mem250[ds_246:0x29E5:word16]
	Mem254[ss:fp - 0x002A:word16] = Mem252[ds_246:0x29E3:word16]
	word16 di_255
	selector ds_256
	Mem260[ss:fp - 0x0012:word16] = fn0800_3FAD(fp - 0x0002, ds_246, wArg00, wArg02, out di_255, out ds_256)
	Mem262[ss:fp - 0x0028:word16] = Mem260[ds_256:0x29E5:word16]
	Mem264[ss:fp - 0x002A:word16] = Mem262[ds_256:0x29E3:word16]
	word16 di_265
	selector ds_266
	Mem270[ss:fp - 0x0014:word16] = fn0800_3FAD(fp - 0x0002, ds_256, wArg00, wArg02, out di_265, out ds_266)
	Mem272[ss:fp - 0x0028:word16] = Mem270[ds_266:0x29E5:word16]
	Mem274[ss:fp - 0x002A:word16] = Mem272[ds_266:0x29E3:word16]
	word16 di_275
	selector ds_276
	Mem280[ss:fp - 0x001A:word16] = fn0800_3FAD(fp - 0x0002, ds_266, wArg00, wArg02, out di_275, out ds_276)
	Mem282[ss:fp - 0x0028:word16] = Mem280[ds_276:0x29E5:word16]
	Mem284[ss:fp - 0x002A:word16] = Mem282[ds_276:0x29E3:word16]
	word16 di_285
	selector ds_286
	Mem290[ss:fp - 0x001C:word16] = fn0800_3FAD(fp - 0x0002, ds_276, wArg00, wArg02, out di_285, out ds_286)
	Mem292[ss:fp - 0x0028:word16] = Mem290[ds_286:0x29E5:word16]
	Mem294[ss:fp - 0x002A:word16] = Mem292[ds_286:0x29E3:word16]
	word16 di_295
	selector ds_296
	Mem300[ss:fp - 0x0018:word16] = fn0800_3FAD(fp - 0x0002, ds_286, wArg00, wArg02, out di_295, out ds_296)
	Mem302[ss:fp - 0x0028:word16] = Mem300[ds_296:0x29E5:word16]
	Mem304[ss:fp - 0x002A:word16] = Mem302[ds_296:0x29E3:word16]
	word16 di_305
	selector ds_306
	Mem310[ss:fp - 0x0016:word16] = fn0800_3FAD(fp - 0x0002, ds_296, wArg00, wArg02, out di_305, out ds_306)
	Mem312[ss:fp - 0x0028:word16] = Mem310[ds_306:0x29E1:word16]
	Mem314[ss:fp - 0x002A:word16] = Mem312[ds_306:0x29DF:word16]
	Mem317[ss:fp - 0x002C:word16] = 0x4D5A
	selector ds_319 = fn0800_401E(fp - 0x0002, ds_306, wArg00, wArg02, wArg04)
	Mem322[ss:fp - 0x0028:word16] = Mem317[ds_319:0x29E1:word16]
	Mem324[ss:fp - 0x002A:word16] = Mem322[ds_319:0x29DF:word16]
	Mem329[ss:fp - 0x002C:word16] = 0x0000
	Mem331[ss:fp - 0x002E:word16] = 0x0000
	selector ds_333 = fn0800_409C(fp - 0x0002, ds_319, wArg02, wArg04, wArg06)
	Mem336[ss:fp - 0x0028:word16] = Mem331[ds_333:0x29E1:word16]
	Mem338[ss:fp - 0x002A:word16] = Mem336[ds_333:0x29DF:word16]
	Mem343[ss:fp - 0x002C:word16] = 0x0000
	Mem345[ss:fp - 0x002E:word16] = 0x0000
	selector ds_346 = fn0800_409C(fp - 0x0002, ds_333, wArg02, wArg04, wArg06)
	Mem350[ss:fp - 0x0028:word16] = Mem345[ds_346:0x29E1:word16]
	Mem352[ss:fp - 0x002A:word16] = Mem350[ds_346:0x29DF:word16]
	Mem354[ss:fp - 0x002C:word16] = Mem352[ss:fp - 0x0012:word16]
	selector ds_356
	fn0800_40BF(fp - 0x0002, ds_346, bArg00, wArg02, wArg04, out ds_356)
	Mem361[ss:fp - 0x0028:word16] = Mem354[ds_356:0x29E1:word16]
	Mem363[ss:fp - 0x002A:word16] = Mem361[ds_356:0x29DF:word16]
	Mem365[ss:fp - 0x002C:word16] = Mem363[ss:fp - 0x0014:word16]
	selector ds_366
	fn0800_40BF(fp - 0x0002, ds_356, bArg00, wArg02, wArg04, out ds_366)
	Mem371[ss:fp - 0x0028:word16] = Mem365[ds_366:0x29E1:word16]
	Mem373[ss:fp - 0x002A:word16] = Mem371[ds_366:0x29DF:word16]
	Mem375[ss:fp - 0x002C:word16] = Mem373[ss:fp - 0x0016:word16]
	selector ds_376
	fn0800_40BF(fp - 0x0002, ds_366, bArg00, wArg02, wArg04, out ds_376)
	Mem381[ss:fp - 0x0028:word16] = Mem375[ds_376:0x29E1:word16]
	Mem383[ss:fp - 0x002A:word16] = Mem381[ds_376:0x29DF:word16]
	Mem385[ss:fp - 0x002C:word16] = Mem383[ss:fp - 0x0018:word16]
	selector ds_386
	fn0800_40BF(fp - 0x0002, ds_376, bArg00, wArg02, wArg04, out ds_386)
	Mem390[ss:fp - 0x0028:word16] = Mem385[ds_386:0x29E1:word16]
	Mem392[ss:fp - 0x002A:word16] = Mem390[ds_386:0x29DF:word16]
	Mem397[ss:fp - 0x002C:word16] = 0x0000
	selector ds_398 = fn0800_401E(fp - 0x0002, ds_386, wArg00, wArg02, wArg04)
	Mem402[ss:fp - 0x0028:word16] = Mem397[ds_398:0x29E1:word16]
	Mem404[ss:fp - 0x002A:word16] = Mem402[ds_398:0x29DF:word16]
	Mem406[ss:fp - 0x002C:word16] = Mem404[ss:fp - 0x001A:word16]
	selector ds_407
	fn0800_40BF(fp - 0x0002, ds_398, bArg00, wArg02, wArg04, out ds_407)
	Mem412[ss:fp - 0x0028:word16] = Mem406[ds_407:0x29E1:word16]
	Mem414[ss:fp - 0x002A:word16] = Mem412[ds_407:0x29DF:word16]
	Mem416[ss:fp - 0x002C:word16] = Mem414[ss:fp - 0x001C:word16]
	selector ds_417
	fn0800_40BF(fp - 0x0002, ds_407, bArg00, wArg02, wArg04, out ds_417)
	Mem422[ss:fp - 0x0028:word16] = Mem416[ds_417:0x29E1:word16]
	Mem424[ss:fp - 0x002A:word16] = Mem422[ds_417:0x29DF:word16]
	Mem427[ss:fp - 0x002C:word16] = 0x001E
	selector ds_428
	fn0800_40BF(fp - 0x0002, ds_417, bArg00, wArg02, wArg04, out ds_428)
	Mem433[ss:fp - 0x0028:word16] = Mem427[ds_428:0x29E1:word16]
	Mem435[ss:fp - 0x002A:word16] = Mem433[ds_428:0x29DF:word16]
	Mem437[ss:fp - 0x002C:word16] = Mem435[ss:fp - 0x0020:word16]
	selector ds_438
	fn0800_40BF(fp - 0x0002, ds_428, bArg00, wArg02, wArg04, out ds_438)
	Mem442[ss:fp - 0x0028:word16] = Mem437[ds_438:0x29E1:word16]
	Mem444[ss:fp - 0x002A:word16] = Mem442[ds_438:0x29DF:word16]
	Mem449[ss:fp - 0x002C:word16] = 0x0000
	selector ds_450 = fn0800_401E(fp - 0x0002, ds_438, wArg00, wArg02, wArg04)
	Mem454[ss:fp - 0x0028:word16] = 0x0000
	word16 ax_455 = Mem454[ss:fp - 0x001E:word16]
	Mem461[ss:fp - 0x002A:word16] = 0x0000
	Mem463[ss:fp - 0x002C:word16] = ax_455 + 0x0020
	Mem465[ss:fp - 0x002E:word16] = Mem463[ds_450:0x29E5:word16]
	Mem467[ss:fp - 0x0030:word16] = Mem465[ds_450:0x29E3:word16]
	selector ds_468
	fn0800_ACB3(fp - 0x0002, ds_450, ptrArg00, wArg02, wArg08, out ds_468)
	Mem473[ss:fp - 0x000E:word16] = 0x0000
	word16 sp_470 = fp - 0x0026
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49B5:
	word16 sp_478 = sp_470 - 0x0002
	Mem479[ss:sp_478:word16] = Mem473[ds_468:0x29E5:word16]
	Mem481[ss:sp_478 - 0x0002:word16] = Mem479[ds_468:0x29E3:word16]
	word16 di_482
	word16 ax_488 = DPB(fn0800_3DCF(ds_468, ptrArg00, wArg02, out di_482, out ds_468), 0x00, 8)
	sp_470 = sp_478 + 0x0002
	word16 di_490 = ax_488
	branch ax_488 == 0x0000 l0800_4A22
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49CB:
	Mem764[ss:sp_478:word16] = Mem481[ds_468:0x29E5:word16]
	Mem766[ss:sp_478 - 0x0002:word16] = Mem764[ds_468:0x29E3:word16]
	Mem772[ss:fp - 0x0022:word16] = fn0800_3FAD(fp - 0x0002, ds_468, wArg00, wArg02, out di_490, out ds_468)
	Mem776[ss:fp - 0x000C:word16] = di_490
	sp_470 = sp_478 + 0x0002
	word16 si_773 = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:0x00 cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A15:
	word16 ax_784 = Mem776[ss:fp - 0x000C:word16]
	Mem786[ss:fp - 0x000C:word16] = Mem776[ss:fp - 0x000C:word16] - 0x0001
	branch ax_784 != 0x0000 l0800_49E3
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49E3:
	word16 sp_794 = sp_470 - 0x0002
	Mem795[ss:sp_794:word16] = Mem786[ds_468:0x29E5:word16]
	Mem797[ss:sp_794 - 0x0002:word16] = Mem795[ds_468:0x29E3:word16]
	word16 di_798
	selector ds_799
	si_773 = si_773 + DPB(fn0800_3DCF(ds_468, ptrArg00, wArg02, out di_798, out ds_799), 0x00, 8)
	Mem807[ss:sp_794:word16] = Mem797[ds_799:0x29E1:word16]
	Mem809[ss:sp_794 - 0x0002:word16] = Mem807[ds_799:0x29DF:word16]
	Mem811[ss:sp_794 - 0x0004:word16] = si_773
	selector ds_812
	fn0800_40BF(fp - 0x0002, ds_799, bArg00, wArg02, wArg04, out ds_812)
	Mem817[ss:sp_794:word16] = Mem811[ds_812:0x29E1:word16]
	Mem819[ss:sp_794 - 0x0002:word16] = Mem817[ds_812:0x29DF:word16]
	Mem821[ss:sp_794 - 0x0004:word16] = Mem819[ss:fp - 0x0022:word16]
	di_490 = fn0800_40BF(fp - 0x0002, ds_812, bArg00, wArg02, wArg04, out ds_468)
	sp_470 = sp_794 + 0x0002
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A1F:
	Mem792[ss:fp - 0x000E:word16] = Mem786[ss:fp - 0x000E:word16] + di_490
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A22:
	branch di_490 != 0x0000 l0800_49B5
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A26:
	word16 sp_531
	word16 di_529
	word16 dx_526
	word16 sp_506 = sp_470 - 0x0002
	Mem507[ss:sp_506:word16] = Mem481[ds_468:0x29E1:word16]
	Mem509[ss:sp_506 - 0x0002:word16] = Mem507[ds_468:0x29DF:word16]
	word16 si_510
	word16 ax_511 = fn0800_AD2F(ds_468, ptrArg00, wArg02, out si_510)
	branch false l0800_4A56
// DataOut: ax ds sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A38:
	branch false l0800_4A3F
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A3A:
	branch ax_511 >=u 0x0200 l0800_4A56
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A56:
	Mem735[ss:sp_506:word16] = Mem509[ds_468:0x29E1:word16]
	Mem737[ss:sp_506 - 0x0002:word16] = Mem735[ds_468:0x29DF:word16]
	word16 si_738
	word16 dx_742 = 0x0010 - fn0800_AD2F(ds_468, ptrArg00, wArg02, out si_738)
	sp_531 = sp_506 + 0x0002
	dx_526 = dx_742 & 0x000F
	di_529 = dx_742 & 0x000F
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A3F:
	Mem750[ss:sp_506:word16] = Mem509[ds_468:0x29E1:word16]
	Mem752[ss:sp_506 - 0x0002:word16] = Mem750[ds_468:0x29DF:word16]
	word16 si_753
	dx_526 = 0x0200 - fn0800_AD2F(ds_468, ptrArg00, wArg02, out si_753)
	sp_531 = sp_506 + 0x0002
	di_529 = dx_526
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A81:
	branch di_529 != 0x0000 l0800_4A70
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A70:
	word16 sp_719 = sp_531 - 0x0002
	Mem720[ss:sp_719:word16] = Mem509[ds_468:0x29E1:word16]
	Mem722[ss:sp_719 - 0x0002:word16] = Mem720[ds_468:0x29DF:word16]
	Mem726[ss:sp_719 - 0x0004:word16] = DPB(di_529, 0x00, 0)
	di_529 = fn0800_4047(ds_468, bArg00, ptrArg02, wArg04, out ds_468)
	sp_531 = sp_719 + 0x0002
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A88:
	word16 sp_538 = sp_531 - 0x0002
	Mem539[ss:sp_538:word16] = Mem509[ds_468:0x29E1:word16]
	Mem541[ss:sp_538 - 0x0002:word16] = Mem539[ds_468:0x29DF:word16]
	word16 si_542
	word16 dx_547
	Mem549[ss:fp - 0x0010:word16] = fn0800_8C8A(fn0800_AD2F(ds_468, ptrArg00, wArg02, out si_542), 0x04, dx_526, bp, out dx_547)
	Mem554[ss:sp_538:word16] = 0x0000
	Mem556[ss:sp_538 - 0x0002:word16] = Mem554[ss:fp - 0x0008:word16]
	Mem558[ss:sp_538 - 0x0004:word16] = Mem556[ss:fp - 0x000A:word16]
	Mem560[ss:sp_538 - 0x0006:word16] = Mem558[ds_468:0x29E5:word16]
	Mem562[ss:sp_538 - 0x0008:word16] = Mem560[ds_468:0x29E3:word16]
	selector ds_563
	fn0800_ACB3(fp - 0x0002, ds_468, ptrArg00, wArg02, wArg08, out ds_563)
	selector ds_567
	word16 ax_568 = fn0800_5374(fp - 0x0002, ds_563, out ds_567)
	branch ax_568 == 0x0000 l0800_4AC4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4AC4:
	Mem582[ss:sp_538:word16] = Mem562[ds_567:0x29E1:word16]
	Mem584[ss:sp_538 - 0x0002:word16] = Mem582[ds_567:0x29DF:word16]
	word16 si_585
	word16 ax_586 = fn0800_AD2F(ds_567, ptrArg00, wArg02, out si_585)
	Mem588[ss:fp - 0x0008:word16] = ax_568
	Mem589[ss:fp - 0x000A:word16] = ax_586
	Mem594[ss:sp_538:word16] = 0x0000
	Mem596[ss:sp_538 - 0x0002:word16] = Mem594[ss:fp - 0x0004:word16]
	Mem598[ss:sp_538 - 0x0004:word16] = Mem596[ss:fp - 0x0006:word16]
	Mem600[ss:sp_538 - 0x0006:word16] = Mem598[ds_567:0x29E5:word16]
	Mem602[ss:sp_538 - 0x0008:word16] = Mem600[ds_567:0x29E3:word16]
	selector ds_603
	fn0800_ACB3(fp - 0x0002, ds_567, ptrArg00, wArg02, wArg08, out ds_603)
	Mem608[ss:sp_538:word16] = Mem602[ds_603:0x29E5:word16]
	Mem610[ss:sp_538 - 0x0002:word16] = Mem608[ds_603:0x29E3:word16]
	word16 si_611
	selector ds_612
	word16 ax_615 = fn0800_4194(fp - 0x0002, ds_603, wArg00, wArg02, out si_611, out ds_612) - Mem610[ss:fp - 0x0006:word16]
	Mem621[ss:sp_538:word16] = ax_568 - Mem610[ss:fp - 0x0004:word16] - (ax_615 <u 0x0000)
	Mem623[ss:sp_538 - 0x0002:word16] = ax_615
	Mem625[ss:sp_538 - 0x0004:word16] = Mem623[ds_612:0x29E1:word16]
	Mem627[ss:sp_538 - 0x0006:word16] = Mem625[ds_612:0x29DF:word16]
	Mem629[ss:sp_538 - 0x0008:word16] = Mem627[ds_612:0x29E5:word16]
	Mem631[ss:sp_538 - 0x000A:word16] = Mem629[ds_612:0x29E3:word16]
	selector ds_633 = fn0800_3B0A(fp - 0x0002, ds_612, wArg08, wArg0A)
	word16 di_635 = Mem631[ss:fp - 0x000A:word16]
	word16 dx_643
	Mem645[ss:fp - 0x000C:word16] = fn0800_8CAA(Mem631[ss:fp - 0x000A:word16], 0x09, Mem631[ss:fp - 0x0008:word16], bp, out dx_643)
	branch (di_635 & 0x01FF) == 0x0000 l0800_4B37
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4B34:
	Mem717[ss:fp - 0x000C:word16] = Mem645[ss:fp - 0x000C:word16] + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4B37:
	Mem654[ss:sp_538:word16] = 0x0000
	Mem657[ss:sp_538 - 0x0002:word16] = 0x0000
	Mem659[ss:sp_538 - 0x0004:word16] = 0x0002
	Mem661[ss:sp_538 - 0x0006:word16] = Mem659[ds_633:0x29E1:word16]
	Mem663[ss:sp_538 - 0x0008:word16] = Mem661[ds_633:0x29DF:word16]
	selector ds_664
	fn0800_ACB3(fp - 0x0002, ds_633, ptrArg00, wArg02, wArg08, out ds_664)
	Mem669[ss:sp_538:word16] = Mem663[ds_664:0x29E1:word16]
	Mem671[ss:sp_538 - 0x0002:word16] = Mem669[ds_664:0x29DF:word16]
	Mem673[ss:sp_538 - 0x0004:word16] = di_635 & 0x01FF
	selector ds_674
	fn0800_40BF(fp - 0x0002, ds_664, bArg00, wArg02, wArg04, out ds_674)
	Mem679[ss:sp_538:word16] = Mem673[ds_674:0x29E1:word16]
	Mem681[ss:sp_538 - 0x0002:word16] = Mem679[ds_674:0x29DF:word16]
	Mem683[ss:sp_538 - 0x0004:word16] = Mem681[ss:fp - 0x000C:word16]
	selector ds_684
	fn0800_40BF(fp - 0x0002, ds_674, bArg00, wArg02, wArg04, out ds_684)
	Mem689[ss:sp_538:word16] = Mem683[ds_684:0x29E1:word16]
	Mem691[ss:sp_538 - 0x0002:word16] = Mem689[ds_684:0x29DF:word16]
	Mem693[ss:sp_538 - 0x0004:word16] = Mem691[ss:fp - 0x000E:word16]
	selector ds_694
	fn0800_40BF(fp - 0x0002, ds_684, bArg00, wArg02, wArg04, out ds_694)
	Mem699[ss:sp_538:word16] = Mem693[ds_694:0x29E1:word16]
	Mem701[ss:sp_538 - 0x0002:word16] = Mem699[ds_694:0x29DF:word16]
	Mem703[ss:sp_538 - 0x0004:word16] = Mem701[ss:fp - 0x0010:word16]
	selector ds_704
	fn0800_40BF(fp - 0x0002, ds_694, bArg00, wArg02, wArg04, out ds_704)
	return ds_704
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4ABE:
	return ds_567
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4798:
	return ds_117
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4758:
	return ds_73
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4716:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp

fn0800_46FE_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4B97(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4B97_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4B97:
	selector ds_9
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_9) != 0x0000 l0800_4BAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4BAD:
	selector ds_20
	fn0800_5374(bp, ds_9, out ds_20)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BA9:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4B97_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_4BB1(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4BB1_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4BB1:
	selector ds_9
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_9) != 0x0000 l0800_4BC7
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4BC7:
	Mem33[ss:fp - 0x0002:word16] = 0x0001
	Mem38[ss:fp - 0x0004:word16] = 0xFFFF
	Mem40[ss:fp - 0x0006:word16] = 0xFFEE
	Mem42[ss:fp - 0x0008:word16] = Mem40[ds_9:0x29E5:word16]
	Mem44[ss:fp - 0x000A:word16] = Mem42[ds_9:0x29E3:word16]
	selector ds_48
	fn0800_ACB3(bp, ds_9, ptrArg00, wArg02, wArg08, out ds_48)
	Mem53[ss:fp - 0x0002:word16] = Mem44[ds_48:0x29E1:word16]
	Mem55[ss:fp - 0x0004:word16] = Mem53[ds_48:0x29DF:word16]
	Mem58[ss:fp - 0x0006:word16] = 0x601A
	selector ds_61 = fn0800_401E(bp, ds_48, wArg00, wArg02, wArg04)
	Mem68[ss:fp - 0x0002:word16] = 0x0000
	Mem70[ss:fp - 0x0004:word16] = 0x0010
	Mem72[ss:fp - 0x0006:word16] = Mem70[ds_61:0x29E1:word16]
	Mem74[ss:fp - 0x0008:word16] = Mem72[ds_61:0x29DF:word16]
	Mem76[ss:fp - 0x000A:word16] = Mem74[ds_61:0x29E5:word16]
	Mem78[ss:fp - 0x000C:word16] = Mem76[ds_61:0x29E3:word16]
	selector ds_80 = fn0800_3B0A(bp, ds_61, wArg08, wArg0A)
	Mem83[ss:fp - 0x0002:word16] = Mem78[ds_80:0x29E1:word16]
	Mem85[ss:fp - 0x0004:word16] = Mem83[ds_80:0x29DF:word16]
	Mem90[ss:fp - 0x0006:word16] = 0x0000
	Mem92[ss:fp - 0x0008:word16] = 0x0000
	selector ds_94 = fn0800_409C(bp, ds_80, wArg02, wArg04, wArg06)
	Mem97[ss:fp - 0x0002:word16] = Mem92[ds_94:0x29E1:word16]
	Mem99[ss:fp - 0x0004:word16] = Mem97[ds_94:0x29DF:word16]
	Mem104[ss:fp - 0x0006:word16] = 0x0000
	Mem106[ss:fp - 0x0008:word16] = 0x0000
	selector ds_107 = fn0800_409C(bp, ds_94, wArg02, wArg04, wArg06)
	Mem111[ss:fp - 0x0002:word16] = Mem106[ds_107:0x29E1:word16]
	Mem113[ss:fp - 0x0004:word16] = Mem111[ds_107:0x29DF:word16]
	Mem115[ss:fp - 0x0006:word16] = Mem113[ds_107:0x29E5:word16]
	Mem117[ss:fp - 0x0008:word16] = Mem115[ds_107:0x29E3:word16]
	word16 si_118
	word16 di_119
	selector ds_120
	Mem125[ss:fp - 0x0006:word16] = fn0800_3E27(bp, ds_107, wArg00, wArg02, out si_118, out di_119, out ds_120)
	selector ds_129
	fn0800_5374(bp, fn0800_401E(bp, ds_120, wArg00, wArg02, wArg04), out ds_129)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BC3:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4BB1_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_4C55(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
fn0800_4C55_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4C55:
	word16 wLoc1C_11 = Mem0[ds:0x29E5:word16]
	word16 wLoc1E_13 = Mem0[ds:0x29E3:word16]
	selector ds_14
	branch fn0800_3E5D(fp - 0x0002, ds, wLoc1E_13, wLoc1C_11, out ds_14) != 0x0000 l0800_4C72
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4C6D:
	branch ax == 0x03F3 l0800_4C79
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4C79:
	Mem58[ss:fp - 0x001C:word16] = Mem0[ds_14:0x29E1:word16]
	Mem60[ss:fp - 0x001E:word16] = Mem58[ds_14:0x29DF:word16]
	Mem66[ss:fp - 0x0020:word16] = 0x0000
	Mem68[ss:fp - 0x0022:word16] = 0x03F3
	word16 ax_126 = 0x0000
	selector ds_104 = fn0800_409C(fp - 0x0002, ds_14, wArg02, wArg04, wArg06)
	word16 sp_105 = fp - 0x001A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4C8E:
	word16 sp_83 = sp_105 - 0x0002
	Mem84[ss:sp_83:word16] = Mem68[ds_104:0x29E5:word16]
	Mem86[ss:sp_83 - 0x0002:word16] = Mem84[ds_104:0x29E3:word16]
	selector ds_88
	word16 dx_89 = fn0800_3E5D(fp - 0x0002, ds_104, wArg00, wArg02, out ds_88)
	Mem92[ss:fp - 0x0008:word16] = dx_89
	Mem93[ss:fp - 0x000A:word16] = ax_126
	Mem94[ss:fp - 0x0004:word16] = dx_89
	Mem95[ss:fp - 0x0006:word16] = ax_126
	Mem97[ss:sp_83:word16] = Mem95[ds_88:0x29E1:word16]
	Mem99[ss:sp_83 - 0x0002:word16] = Mem97[ds_88:0x29DF:word16]
	Mem101[ss:sp_83 - 0x0004:word16] = Mem99[ss:fp - 0x0004:word16]
	Mem103[ss:sp_83 - 0x0006:word16] = ax_126
	ds_104 = fn0800_409C(fp - 0x0002, ds_88, wArg02, wArg04, wArg06)
	sp_105 = sp_83 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CDA:
	word16 ax_111 = Mem103[ss:fp - 0x000A:word16]
	word16 dx_112 = Mem103[ss:fp - 0x0008:word16]
	word16 v12_114 = Mem103[ss:fp - 0x000A:word16] - 0x0001
	Mem115[ss:fp - 0x000A:word16] = v12_114
	Mem119[ss:fp - 0x0008:word16] = Mem115[ss:fp - 0x0008:word16] - (v12_114 <u 0x0000)
	word16 ax_120 = ax_111 | dx_112
	branch ax_120 != 0x0000 l0800_4CBC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CBC:
	word16 sp_449 = sp_105 - 0x0002
	Mem450[ss:sp_449:word16] = Mem119[ds_104:0x29E1:word16]
	Mem452[ss:sp_449 - 0x0002:word16] = Mem450[ds_104:0x29DF:word16]
	Mem454[ss:sp_449 - 0x0004:word16] = Mem452[ds_104:0x29E5:word16]
	Mem456[ss:sp_449 - 0x0006:word16] = Mem454[ds_104:0x29E3:word16]
	selector ds_457
	Mem462[ss:sp_449 - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds_104, wArg00, wArg02, out ds_457)
	Mem464[ss:sp_449 - 0x0006:word16] = ax_120
	ds_104 = fn0800_409C(fp - 0x0002, ds_457, wArg02, wArg04, wArg06)
	sp_105 = sp_449 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CEC:
	ax_126 = Mem119[ss:fp - 0x0006:word16] | Mem119[ss:fp - 0x0004:word16]
	branch ax_126 != 0x0000 l0800_4C8E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CF4:
	word16 sp_131 = sp_105 - 0x0002
	Mem132[ss:sp_131:word16] = Mem119[ds_104:0x29E1:word16]
	Mem134[ss:sp_131 - 0x0002:word16] = Mem132[ds_104:0x29DF:word16]
	Mem136[ss:sp_131 - 0x0004:word16] = Mem134[ds_104:0x29E5:word16]
	Mem138[ss:sp_131 - 0x0006:word16] = Mem136[ds_104:0x29E3:word16]
	selector ds_139
	ui32 dx_ax_143 = SEQ(fn0800_3E5D(fp - 0x0002, ds_104, wArg00, wArg02, out ds_139), ax_126 - 0x0001)
	Mem150[ss:sp_131 - 0x0004:word16] = SLICE(dx_ax_143 - 0x00000001, word16, 16)
	word16 ax_147 = (word16) (dx_ax_143 - 0x00000001)
	Mem152[ss:sp_131 - 0x0006:word16] = ax_147
	selector ds_153 = fn0800_409C(fp - 0x0002, ds_139, wArg02, wArg04, wArg06)
	Mem157[ss:sp_131:word16] = Mem152[ds_153:0x29E5:word16]
	Mem159[ss:sp_131 - 0x0002:word16] = Mem157[ds_153:0x29E3:word16]
	selector ds_160
	Mem164[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_153, wArg00, wArg02, out ds_160)
	Mem165[ss:fp - 0x000E:word16] = ax_147
	Mem167[ss:sp_131:word16] = Mem165[ds_160:0x29E5:word16]
	Mem169[ss:sp_131 - 0x0002:word16] = Mem167[ds_160:0x29E3:word16]
	selector ds_170
	Mem173[ss:fp - 0x0010:word16] = fn0800_3E5D(fp - 0x0002, ds_160, wArg00, wArg02, out ds_170)
	Mem174[ss:fp - 0x0012:word16] = ax_147
	word16 dx_177 = Mem174[ss:fp - 0x0012:word16] - Mem174[ss:fp - 0x000E:word16]
	Mem182[ss:fp - 0x0014:word16] = Mem174[ss:fp - 0x0010:word16] - Mem174[ss:fp - 0x000C:word16] - (dx_177 <u 0x0000)
	Mem183[ss:fp - 0x0016:word16] = dx_177
	Mem185[ss:sp_131:word16] = Mem183[ds_170:0x29E1:word16]
	Mem187[ss:sp_131 - 0x0002:word16] = Mem185[ds_170:0x29DF:word16]
	Mem189[ss:sp_131 - 0x0004:word16] = Mem187[ss:fp - 0x000C:word16]
	Mem191[ss:sp_131 - 0x0006:word16] = Mem189[ss:fp - 0x000E:word16]
	selector ds_192 = fn0800_409C(fp - 0x0002, ds_170, wArg02, wArg04, wArg06)
	Mem195[ss:sp_131:word16] = Mem191[ds_192:0x29E1:word16]
	Mem197[ss:sp_131 - 0x0002:word16] = Mem195[ds_192:0x29DF:word16]
	ui32 ax_dx_201 = SEQ(Mem197[ss:fp - 0x0010:word16], Mem197[ss:fp - 0x0012:word16] - 0x0001)
	Mem208[ss:sp_131 - 0x0004:word16] = SLICE(ax_dx_201 - 0x00000001, word16, 16)
	word16 dx_205 = (word16) (ax_dx_201 - 0x00000001)
	Mem210[ss:sp_131 - 0x0006:word16] = dx_205
	selector ds_211 = fn0800_409C(fp - 0x0002, ds_192, wArg02, wArg04, wArg06)
	Mem215[ss:sp_131:word16] = Mem210[ds_211:0x29E1:word16]
	Mem217[ss:sp_131 - 0x0002:word16] = Mem215[ds_211:0x29DF:word16]
	word16 si_219
	word16 ax_220 = fn0800_AD2F(ds_211, ptrArg00, wArg02, out si_219)
	Mem222[ds_211:0x4E8E:word16] = dx_205
	Mem223[ds_211:0x4E8C:word16] = ax_220
	Mem226[ss:sp_131:word16] = 0x0001
	Mem232[ss:sp_131 - 0x0002:word16] = 0x0000
	Mem234[ss:sp_131 - 0x0004:word16] = 0x0004
	Mem236[ss:sp_131 - 0x0006:word16] = Mem234[ds_211:0x29E5:word16]
	Mem238[ss:sp_131 - 0x0008:word16] = Mem236[ds_211:0x29E3:word16]
	selector ds_240
	fn0800_ACB3(fp - 0x0002, ds_211, ptrArg00, wArg02, wArg08, out ds_240)
	word16 dx_246 = Mem238[ss:fp - 0x0016:word16]
	Mem248[ss:fp - 0x0004:word16] = Mem238[ss:fp - 0x0014:word16]
	Mem249[ss:fp - 0x0006:word16] = dx_246
	word16 sp_242 = sp_131 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DE4:
	word16 ax_256 = Mem249[ss:fp - 0x0006:word16] | Mem249[ss:fp - 0x0004:word16]
	branch ax_256 != 0x0000 l0800_4DBE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DBE:
	word16 sp_422 = sp_242 - 0x0002
	Mem423[ss:sp_422:word16] = Mem249[ds_240:0x29E1:word16]
	Mem425[ss:sp_422 - 0x0002:word16] = Mem423[ds_240:0x29DF:word16]
	Mem427[ss:sp_422 - 0x0004:word16] = Mem425[ds_240:0x29E5:word16]
	Mem429[ss:sp_422 - 0x0006:word16] = Mem427[ds_240:0x29E3:word16]
	selector ds_430
	Mem435[ss:sp_422 - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds_240, wArg00, wArg02, out ds_430)
	Mem437[ss:sp_422 - 0x0006:word16] = ax_256
	ds_240 = fn0800_409C(fp - 0x0002, ds_430, wArg02, wArg04, wArg06)
	word16 v15_442 = Mem437[ss:fp - 0x0006:word16] - 0x0001
	Mem443[ss:fp - 0x0006:word16] = v15_442
	Mem447[ss:fp - 0x0004:word16] = Mem443[ss:fp - 0x0004:word16] - (v15_442 <u 0x0000)
	sp_242 = sp_422 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DEC:
	word16 sp_262 = sp_242 - 0x0002
	Mem263[ss:sp_262:word16] = 0x0001
	Mem269[ss:sp_262 - 0x0002:word16] = 0x0000
	Mem271[ss:sp_262 - 0x0004:word16] = 0x0004
	Mem273[ss:sp_262 - 0x0006:word16] = Mem271[ds_240:0x29E5:word16]
	Mem275[ss:sp_262 - 0x0008:word16] = Mem273[ds_240:0x29E3:word16]
	selector ds_276
	word16 ax_277 = fn0800_ACB3(fp - 0x0002, ds_240, ptrArg00, wArg02, wArg08, out ds_276)
	Mem281[ss:sp_262:word16] = Mem275[ds_276:0x29E5:word16]
	Mem283[ss:sp_262 - 0x0002:word16] = Mem281[ds_276:0x29E3:word16]
	selector ds_284
	ui32 dx_sp_287 = SEQ(fn0800_3E5D(fp - 0x0002, ds_276, wArg00, wArg02, out ds_284), sp_262 + 0x0002)
	Mem294[ss:fp - 0x0004:word16] = SLICE(dx_sp_287 - 0x00000002, word16, 16)
	Mem295[ss:fp - 0x0006:word16] = ax_277 + 0x0001
	word16 sp_292 = (word16) (dx_sp_287 - 0x00000002)
	Mem298[ss:sp_292 - 0x0002:word16] = 0x0001
	word16 dx_302
	word16 ax_303 = fn0800_8C69(Mem298[ss:fp - 0x0006:word16], 0x02, Mem298[ss:fp - 0x0004:word16], bp, out dx_302)
	Mem305[ss:sp_292 - 0x0004:word16] = dx_302
	Mem307[ss:sp_292 - 0x0006:word16] = ax_303
	Mem309[ss:sp_292 - 0x0008:word16] = Mem307[ds_284:0x29E5:word16]
	Mem311[ss:sp_292 - 0x000A:word16] = Mem309[ds_284:0x29E3:word16]
	selector ds_312
	fn0800_ACB3(fp - 0x0002, ds_284, ptrArg00, wArg02, wArg08, out ds_312)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4EDE:
	Mem319[ss:sp_292 - 0x0002:word16] = Mem311[ds_312:0x29E5:word16]
	Mem321[ss:sp_292 - 0x0004:word16] = Mem319[ds_312:0x29E3:word16]
	word16 si_322
	Mem327[ss:sp_292 - 0x0002:word16] = fn0800_AD2F(ds_312, ptrArg00, wArg02, out si_322)
	Mem329[ss:sp_292 - 0x0004:word16] = dx_302
	Mem331[ss:sp_292 - 0x0006:word16] = Mem329[ds_312:0x29E5:word16]
	Mem333[ss:sp_292 - 0x0008:word16] = Mem331[ds_312:0x29E3:word16]
	word16 si_334
	selector ds_335
	word16 ax_336 = fn0800_4194(fp - 0x0002, ds_312, wArg00, wArg02, out si_334, out ds_335)
	word16 bx_338 = Mem333[ss:sp_292 - 0x0004:word16]
	word16 dx_344 = Mem333[ss:sp_292 - 0x0002:word16]
	branch bx_338 >=u dx_302 l0800_4F05
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F05:
	branch bx_338 != dx_302 l0800_4F0E
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F07:
	branch dx_344 >=u ax_336 l0800_4F0E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F0E:
	return ds_335
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4F0B:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4E41:
	Mem351[ss:sp_292 - 0x0002:word16] = Mem333[ds_335:0x29E5:word16]
	Mem353[ss:sp_292 - 0x0004:word16] = Mem351[ds_335:0x29E3:word16]
	selector ds_354
	Mem358[ss:fp - 0x0008:word16] = fn0800_3E5D(fp - 0x0002, ds_335, wArg00, wArg02, out ds_354)
	Mem359[ss:fp - 0x000A:word16] = ax_336
	Mem361[ss:sp_292 - 0x0002:word16] = Mem359[ds_354:0x29E1:word16]
	Mem363[ss:sp_292 - 0x0004:word16] = Mem361[ds_354:0x29DF:word16]
	Mem365[ss:sp_292 - 0x0006:word16] = Mem363[ss:fp - 0x0008:word16]
	Mem367[ss:sp_292 - 0x0008:word16] = ax_336
	selector ds_368 = fn0800_409C(fp - 0x0002, ds_354, wArg02, wArg04, wArg06)
	word16 ax_370 = Mem367[ss:fp - 0x0008:word16]
	word16 dx_371 = Mem367[ss:fp - 0x000A:word16]
	Mem375[ss:fp - 0x001A:word16] = dx_371
	Mem376[ss:fp - 0x0018:word16] = ax_370 & 0x3FFF
	word16 cx_377 = 0x0004
	word16 bx_379 = 0x4F14
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E7C:
	branch Mem376[0x0800:bx_379:word16] != Mem376[ss:fp - 0x000A:word16] l0800_4E8D
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E84:
	word16 ax_396 = Mem376[0x0800:bx_379 + 0x0008:word16]
	branch ax_396 == Mem376[ss:fp - 0x0018:word16] l0800_4E94
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E94:
	word16 sp_399
	word16 bp_400
	selector ss_401
	byte SCZO_402
	selector ds_403
	word16 dx_404
	byte SZO_405
	byte C_406
	byte Z_407
	word16 ax_408
	byte cl_409
	word16 bx_410
	word16 cx_411
	word16 si_412
	call Mem376[0x0800:bx_379 + 0x0010:word16] (retsize: 4; depth: 4)
		uses: ax_396,bp_5,bx_380,C_374,cl_382,cx_381,ds_368,dx_371,SCZO_397,si_334,sp_369,ss,SZO_373,wLoc02_4,wLoc1C_11,wLoc1E_13,Z_398
		defs: ax_408,bp_400,bx_410,C_406,cl_409,cx_411,ds_403,dx_404,SCZO_402,si_412,sp_399,ss_401,SZO_405,Z_407
	return ds_403
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E8D:
	bx_379 = bx_379 + 0x0002
	cx_377 = cx_377 - 0x0001
	branch cx_377 != 0x0000 l0800_4E7C
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E92:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4ED7:
	return ds_368
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4C72:
	return ds_14
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp

fn0800_4C55_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_518F(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_518F_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_518F:
	selector ds_9
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_9) != 0x0000 l0800_51A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_51A5:
	selector ds_20
	fn0800_5374(bp, ds_9, out ds_20)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_51A1:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_518F_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



selector fn0800_51A9(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_51A9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_51A9:
	word16 sp_102 = fp - 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_533D:
	word16 sp_26 = sp_102 - 0x0002
	Mem28[ss:sp_26:word16] = Mem0[ds:0x29E5:word16]
	Mem31[ss:sp_26 - 0x0002:word16] = Mem28[ds:0x29E3:word16]
	word16 si_34
	Mem39[ss:sp_26:word16] = fn0800_AD2F(ds, ptrArg00, wArg02, out si_34)
	Mem41[ss:sp_26 - 0x0002:word16] = dx
	Mem43[ss:sp_26 - 0x0004:word16] = Mem41[ds:0x29E5:word16]
	Mem45[ss:sp_26 - 0x0006:word16] = Mem43[ds:0x29E3:word16]
	word16 si_47
	selector ds_48
	word16 ax_49 = fn0800_4194(fp - 0x0002, ds, wArg00, wArg02, out si_47, out ds_48)
	word16 bx_51 = Mem45[ss:sp_26 - 0x0002:word16]
	dx = Mem45[ss:sp_26:word16]
	branch bx_51 >=u dx l0800_5364
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5364:
	branch bx_51 != dx l0800_536D
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5366:
	branch dx >=u ax_49 l0800_536D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_536D:
	return ds_48
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_536A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5361:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51B3:
	Mem79[ss:sp_26:word16] = Mem45[ds_48:0x29E5:word16]
	Mem81[ss:sp_26 - 0x0002:word16] = Mem79[ds_48:0x29E3:word16]
	word16 ax_83 = fn0800_3E9A(fp - 0x0002, ds_48, ptrArg00, wArg02, out ds)
	sp_102 = sp_26 + 0x0002
	branch ax_83 == 0x0000 l0800_51D5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D5:
	Mem327[ss:sp_26:word16] = Mem81[ds:0x29E1:word16]
	Mem329[ss:sp_26 - 0x0002:word16] = Mem327[ds:0x29DF:word16]
	Mem331[ss:sp_26 - 0x0004:word16] = Mem329[ds:0x29E5:word16]
	Mem333[ss:sp_26 - 0x0006:word16] = Mem331[ds:0x29E3:word16]
	word16 di_334
	selector ds_335
	Mem340[ss:sp_26 - 0x0004:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_334, out ds_335)
	fn0800_4047(ds_335, bArg00, ptrArg02, wArg04, out ds)
	sp_102 = sp_26 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51C5:
	branch ax_83 == 0x0001 l0800_51F5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51F5:
	Mem184[ss:sp_26:word16] = Mem81[ds:0x29E1:word16]
	Mem186[ss:sp_26 - 0x0002:word16] = Mem184[ds:0x29DF:word16]
	Mem188[ss:sp_26 - 0x0004:word16] = Mem186[ds:0x29E5:word16]
	Mem190[ss:sp_26 - 0x0006:word16] = Mem188[ds:0x29E3:word16]
	selector ds_191
	Mem196[ss:sp_26 - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds, wArg00, wArg02, out ds_191)
	Mem198[ss:sp_26 - 0x0006:word16] = ax_83
	selector ds_200 = fn0800_409C(fp - 0x0002, ds_191, wArg02, wArg04, wArg06)
	Mem204[ss:sp_26:word16] = Mem198[ds_200:0x29E5:word16]
	Mem206[ss:sp_26 - 0x0002:word16] = Mem204[ds_200:0x29E3:word16]
	word16 di_207
	selector ds_208
	word16 ax_209 = fn0800_3FAD(fp - 0x0002, ds_200, wArg00, wArg02, out di_207, out ds_208)
	Mem212[ss:fp - 0x0004:word16] = 0x0000
	Mem213[ss:fp - 0x0006:word16] = ax_209
	Mem215[ss:sp_26:word16] = Mem213[ds_208:0x29E1:word16]
	Mem217[ss:sp_26 - 0x0002:word16] = Mem215[ds_208:0x29DF:word16]
	Mem219[ss:sp_26 - 0x0004:word16] = ax_209
	selector ds_220
	fn0800_40BF(fp - 0x0002, ds_208, bArg00, wArg02, wArg04, out ds_220)
	Mem225[ss:sp_26:word16] = Mem219[ds_220:0x29E5:word16]
	Mem227[ss:sp_26 - 0x0002:word16] = Mem225[ds_220:0x29E3:word16]
	word16 di_228
	selector ds_229
	word16 ax_236 = fn0800_8CAA(ax_209, 0x08, fn0800_3F58(fp - 0x0002, ds_220, wArg00, wArg02, out di_228, out ds_229), bp, out dx)
	branch dx != 0x0052 l0800_52BA
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5250:
	branch ax_236 != 0x4E43 l0800_52BA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52BA:
	Mem243[ss:sp_26:word16] = Mem227[ss:fp - 0x0004:word16]
	Mem245[ss:sp_26 - 0x0002:word16] = Mem243[ss:fp - 0x0006:word16]
	Mem247[ss:sp_26 - 0x0004:word16] = Mem245[ds_229:0x29E1:word16]
	Mem249[ss:sp_26 - 0x0006:word16] = Mem247[ds_229:0x29DF:word16]
	Mem251[ss:sp_26 - 0x0008:word16] = Mem249[ds_229:0x29E5:word16]
	Mem253[ss:sp_26 - 0x000A:word16] = Mem251[ds_229:0x29E3:word16]
	ds = fn0800_3B0A(fp - 0x0002, ds_229, wArg08, wArg0A)
	sp_102 = sp_26 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5255:
	selector ds_260
	branch fn0800_5374(fp - 0x0002, ds_229, out ds_260) == 0x0000 l0800_5263
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5263:
	Mem273[ss:sp_26:word16] = 0x0001
	ui32 ax_dx_277 = SEQ(Mem273[ds_260:0x2A09:word16], Mem273[ds_260:0x2A07:word16] + 0x0002)
	dx = -(word16) (ax_dx_277 + 0x00000002)
	Mem289[ss:sp_26 - 0x0002:word16] = -SLICE(ax_dx_277 + 0x00000002, word16, 16) - (dx == 0x0000)
	Mem291[ss:sp_26 - 0x0004:word16] = dx
	Mem293[ss:sp_26 - 0x0006:word16] = Mem291[ds_260:0x29E1:word16]
	Mem295[ss:sp_26 - 0x0008:word16] = Mem293[ds_260:0x29DF:word16]
	selector ds_296
	fn0800_ACB3(fp - 0x0002, ds_260, ptrArg00, wArg02, wArg08, out ds_296)
	Mem301[ss:sp_26:word16] = Mem295[ds_296:0x29E1:word16]
	Mem303[ss:sp_26 - 0x0002:word16] = Mem301[ds_296:0x29DF:word16]
	Mem305[ss:sp_26 - 0x0004:word16] = Mem303[ds_296:0x2A07:word16]
	selector ds_306
	fn0800_40BF(fp - 0x0002, ds_296, bArg00, wArg02, wArg04, out ds_306)
	Mem312[ss:sp_26:word16] = 0x0001
	Mem314[ss:sp_26 - 0x0002:word16] = Mem312[ds_306:0x2A09:word16]
	Mem316[ss:sp_26 - 0x0004:word16] = Mem314[ds_306:0x2A07:word16]
	Mem318[ss:sp_26 - 0x0006:word16] = Mem316[ds_306:0x29E1:word16]
	Mem320[ss:sp_26 - 0x0008:word16] = Mem318[ds_306:0x29DF:word16]
	fn0800_ACB3(fp - 0x0002, ds_306, ptrArg00, wArg02, wArg08, out ds)
	sp_102 = sp_26 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_525E:
	return ds_260
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_51A9_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_51CA:
	branch ax_83 != 0x0003 l0800_51D2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5301:
	Mem134[ss:sp_26:word16] = Mem81[ds:0x29E5:word16]
	Mem136[ss:sp_26 - 0x0002:word16] = Mem134[ds:0x29E3:word16]
	word16 si_137
	selector ds_138
	Mem143[ss:sp_26:word16] = fn0800_4194(fp - 0x0002, ds, wArg00, wArg02, out si_137, out ds_138)
	Mem145[ss:sp_26 - 0x0002:word16] = dx
	Mem147[ss:sp_26 - 0x0004:word16] = Mem145[ds_138:0x29E5:word16]
	Mem149[ss:sp_26 - 0x0006:word16] = Mem147[ds_138:0x29E3:word16]
	word16 si_150
	word16 ax_151 = fn0800_AD2F(ds_138, ptrArg00, wArg02, out si_150)
	ui32 bx_cx_161 = SEQ(Mem149[ss:sp_26 - 0x0002:word16], Mem149[ss:sp_26:word16] - ax_151) - SEQ(dx, ax_151)
	Mem166[ss:sp_26:word16] = SLICE(bx_cx_161, word16, 16)
	Mem168[ss:sp_26 - 0x0002:word16] = (word16) bx_cx_161
	Mem170[ss:sp_26 - 0x0004:word16] = Mem168[ds_138:0x29E1:word16]
	Mem172[ss:sp_26 - 0x0006:word16] = Mem170[ds_138:0x29DF:word16]
	Mem174[ss:sp_26 - 0x0008:word16] = Mem172[ds_138:0x29E5:word16]
	Mem176[ss:sp_26 - 0x000A:word16] = Mem174[ds_138:0x29E3:word16]
	ds = fn0800_3B0A(fp - 0x0002, ds_138, wArg08, wArg0A)
	sp_102 = sp_26 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51CF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52D8:
	word16 si_104 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FA:
	branch si_104 != 0x0003 l0800_52DC
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52DC:
	word16 sp_108 = sp_102 - 0x0002
	Mem109[ss:sp_108:word16] = Mem81[ds:0x29E1:word16]
	Mem111[ss:sp_108 - 0x0002:word16] = Mem109[ds:0x29DF:word16]
	Mem113[ss:sp_108 - 0x0004:word16] = Mem111[ds:0x29E5:word16]
	Mem115[ss:sp_108 - 0x0006:word16] = Mem113[ds:0x29E3:word16]
	word16 di_116
	selector ds_117
	Mem122[ss:sp_108 - 0x0004:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_116, out ds_117)
	fn0800_4047(ds_117, bArg00, ptrArg02, wArg04, out ds)
	sp_102 = sp_108 + 0x0002
	si_104 = si_104 + 0x0001
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_5374(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_5374_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5374:
	word16 si_19
	word16 ax_20 = fn0800_AD2F(ds, DPB(ptrLoc16, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out si_19)
	Mem24[ss:fp - 0x000C:word16] = dx
	Mem26[ss:fp - 0x000E:word16] = ax_20
	Mem28[ss:fp - 0x0014:word16] = Mem26[ds:0x29E5:word16]
	Mem30[ss:fp - 0x0016:word16] = Mem28[ds:0x29E3:word16]
	selector ds_33
	fn0800_3E5D(fp - 0x0002, ds, wArg00, wArg02, out ds_33)
	Mem39[ds_33:0x2A21:word16] = ax_20 & 0x0003
	Mem41[ss:fp - 0x0014:word16] = Mem39[ds_33:0x29E5:word16]
	Mem43[ss:fp - 0x0016:word16] = Mem41[ds_33:0x29E3:word16]
	selector ds_44
	word16 dx_45 = fn0800_3E5D(fp - 0x0002, ds_33, wArg00, wArg02, out ds_44)
	Mem48[ds_44:0x2A09:word16] = dx_45
	Mem49[ds_44:0x2A07:word16] = ax_20 & 0x0003
	word16 bp_238 = fp - 0x0002
	branch Mem49[ds_44:0x2A21:word16] != 0x0000 l0800_53EF
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_53EF:
	Mem97[ss:fp - 0x0014:word16] = Mem49[ds_44:0x29E5:word16]
	Mem99[ss:fp - 0x0016:word16] = Mem97[ds_44:0x29E3:word16]
	selector ds_100
	word16 dx_101 = fn0800_3E5D(fp - 0x0002, ds_44, wArg00, wArg02, out ds_100)
	Mem104[ds_100:0x2A05:word16] = dx_101
	Mem105[ds_100:0x2A03:word16] = ax_20 & 0x0003
	Mem107[ss:fp - 0x0014:word16] = Mem105[ds_100:0x29E5:word16]
	Mem109[ss:fp - 0x0016:word16] = Mem107[ds_100:0x29E3:word16]
	word16 si_110
	word16 di_111
	selector ds_112
	word16 ax_113 = fn0800_3E27(fp - 0x0002, ds_100, wArg00, wArg02, out si_110, out di_111, out ds_112)
	Mem116[ds_112:0x2E4B:word16] = ax_113
	Mem118[ss:fp - 0x0014:word16] = Mem116[ds_112:0x29E5:word16]
	Mem120[ss:fp - 0x0016:word16] = Mem118[ds_112:0x29E3:word16]
	word16 si_121
	word16 di_122
	selector ds_123
	word16 ax_124 = fn0800_3E27(fp - 0x0002, ds_112, wArg00, wArg02, out si_121, out di_122, out ds_123)
	Mem127[ds_123:0x2E49:word16] = ax_124
	Mem129[ss:fp - 0x0014:word16] = Mem127[ds_123:0x29E5:word16]
	Mem131[ss:fp - 0x0016:word16] = Mem129[ds_123:0x29E3:word16]
	word16 si_132
	word16 di_133
	selector ds_134
	fn0800_3E27(fp - 0x0002, ds_123, wArg00, wArg02, out si_132, out di_133, out ds_134)
	Mem139[ss:fp - 0x0014:word16] = Mem131[ds_134:0x2A05:word16]
	Mem141[ss:fp - 0x0016:word16] = Mem139[ds_134:0x2A03:word16]
	Mem143[ss:fp - 0x0018:word16] = Mem141[ds_134:0x29E5:word16]
	Mem145[ss:fp - 0x001A:word16] = Mem143[ds_134:0x29E3:word16]
	selector ds_146
	word16 ax_147 = fn0800_2D0A(fp - 0x0002, ds_134, out ds_146)
	branch ax_147 == Mem145[ds_146:0x2E49:word16] l0800_5458
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5458:
	Mem160[ss:fp - 0x0014:word16] = 0x0001
	Mem162[ss:fp - 0x0016:word16] = 0x000F
	selector ds_163 = fn0800_4311(ds_146, wArg00, wArg02)
	Mem166[ss:fp - 0x0008:word16] = 0x000F
	Mem167[ss:fp - 0x000A:word16] = 0x0001
	Mem170[ds_163:0x2E73:word16] = 0x0010
	Mem171[ds_163:0x2E71:word16] = 0x0000
	Mem175[ss:fp - 0x0014:word16] = 0x0001
	Mem177[ss:fp - 0x0016:word16] = 0x000F
	selector ds_178 = fn0800_4311(ds_163, wArg00, wArg02)
	Mem180[ss:fp - 0x0004:word16] = 0x000F
	Mem181[ss:fp - 0x0006:word16] = 0x0001
	Mem183[ds_178:0x2E5B:word16] = 0x0010
	Mem184[ds_178:0x2E59:word16] = 0x0000
	word16 dx_186 = Mem184[ds_178:0x2E71:word16]
	Mem188[ds_178:0x2E6F:word16] = Mem184[ds_178:0x2E73:word16]
	Mem189[ds_178:0x2E6D:word16] = dx_186 + 0xFFFD
	word16 dx_192 = Mem189[ds_178:0x2E59:word16] + Mem189[ds_178:0x2E31:word16]
	Mem193[ds_178:0x2E57:word16] = Mem189[ds_178:0x2E5B:word16]
	Mem194[ds_178:0x2E55:word16] = dx_192
	Mem195[ds_178:0x2E4D:word16] = 0x0000
	Mem199[ds_178:0x2E45:word16] = 0x0000
	Mem200[ds_178:0x29FD:word16] = 0x0000
	Mem201[ds_178:0x29FB:word16] = 0x0000
	Mem202[ds_178:0x2A01:word16] = 0x0000
	Mem203[ds_178:0x29FF:word16] = 0x0000
	Mem205[ss:fp - 0x0010:word16] = Mem203[ds_178:0x2E4F:word16]
	Mem208[ss:fp - 0x0014:word16] = 0x0001
	word16 sp_212 = fp - 0x0012
	word16 si_209
	selector ds_210
	branch fn0800_5C1A(ds_178, wArg00, out si_209, out ds_210) == 0x0000 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54F3:
	branch Mem208[ds_210:0x2A25:word16] == 0x0002 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54FA:
	branch Mem208[ds_210:0x2A25:word16] == 0x0007 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5501:
	si_209 = 0x000A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5504:
	word16 si_219 = si_209
	branch si_209 != 0x0000 l0800_555D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5508:
	Mem324[ss:fp - 0x0014:word16] = 0x0001
	sp_212 = fp - 0x0012
	branch fn0800_5C1A(ds_210, wArg00, out si_219, out ds_210) == 0x0000 l0800_5557
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5557:
	Mem365[ds_210:0x2E4F:word16] = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5516:
	branch Mem324[ds_210:0x2A23:word16] == 0x0001 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_551D:
	Mem347[ss:fp - 0x0014:word16] = 0x0010
	word16 ax_350 = fn0800_5C1A(ds_210, wArg00, out si_219, out ds_210)
	sp_212 = fp - 0x0012
	branch Mem347[ds_210:0x2A25:word16] != 0x0002 l0800_553B
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5530:
	branch Mem347[ds_210:0x2E4F:word16] != 0x0000 l0800_553B
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5537:
	Mem364[ds_210:0x2E4F:word16] = ax_350
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_553B:
	branch Mem347[ds_210:0x2E4F:word16] == ax_350 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5541:
	branch Mem347[ds_210:0x2E4F:word16] == 0x0000 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5548:
	si_219 = 0x000C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_554B:
	branch Mem324[ds_210:0x2E4F:word16] != 0x0000 l0800_555D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5552:
	si_219 = 0x000B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_555D:
	word16 si_231 = si_219
	branch si_219 != 0x0000 l0800_557C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5561:
	word16 ax_311 = Mem208[ds_210:0x2A21:word16]
	branch ax_311 == 0x0001 l0800_5570
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5570:
	ds_210 = fn0800_55E8(fp - 0x0002, ds_210)
	si_231 = ax_311
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5569:
	branch ax_311 == 0x0002 l0800_5577
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5577:
	bp_238 = fn0800_579B(ds_210, out ds_210)
	si_231 = ax_311
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_556E:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_557C:
	Mem240[ds_210:0x2E4F:word16] = Mem208[ss:bp_238 - 0x000E:word16]
	word16 sp_241 = sp_212 - 0x0002
	Mem242[ss:sp_241:word16] = Mem240[ss:bp_238 - 0x0006:word16]
	Mem244[ss:sp_241 - 0x0002:word16] = Mem242[ss:bp_238 - 0x0008:word16]
	selector ds_245
	fn0800_4346(ds_210, wArg00, wArg02, out ds_245)
	Mem250[ss:sp_241:word16] = Mem244[ss:bp_238 - 0x0002:word16]
	Mem252[ss:sp_241 - 0x0002:word16] = Mem250[ss:bp_238 - 0x0004:word16]
	selector ds_253
	fn0800_4346(ds_245, wArg00, wArg02, out ds_253)
	word16 v13_256 = Mem252[ds_253:0x2A03:word16] + 0x0012
	Mem257[ds_253:0x2A03:word16] = v13_256
	Mem261[ds_253:0x2A05:word16] = Mem257[ds_253:0x2A05:word16] + (v13_256 <u 0x0000)
	Mem264[ss:sp_241:word16] = 0x0000
	word16 dx_267 = Mem264[ss:bp_238 - 0x000C:word16] + Mem264[ds_253:0x2A03:word16]
	Mem273[ss:sp_241 - 0x0002:word16] = Mem264[ss:bp_238 - 0x000A:word16] + Mem264[ds_253:0x2A05:word16] + (dx_267 <u 0x0000)
	Mem275[ss:sp_241 - 0x0004:word16] = dx_267
	Mem277[ss:sp_241 - 0x0006:word16] = Mem275[ds_253:0x29E5:word16]
	Mem279[ss:sp_241 - 0x0008:word16] = Mem277[ds_253:0x29E3:word16]
	selector ds_281
	fn0800_ACB3(bp_238, ds_253, ptrArg00, wArg02, wArg08, out ds_281)
	branch si_231 == 0x0000 l0800_55D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55D0:
	branch Mem279[ds_281:0x2E4D:word16] == Mem279[ds_281:0x2E4B:word16] l0800_55E1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55E1:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55D9:
	return 0x0006
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55C9:
	return si_231
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_5450:
	return 0x0005
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_53BF:
	Mem67[ss:fp - 0x0014:word16] = Mem49[ds_44:0x2A09:word16]
	Mem69[ss:fp - 0x0016:word16] = ax_20 & 0x0003
	Mem71[ss:fp - 0x0018:word16] = Mem69[ds_44:0x29E1:word16]
	Mem73[ss:fp - 0x001A:word16] = Mem71[ds_44:0x29DF:word16]
	Mem75[ss:fp - 0x001C:word16] = Mem73[ds_44:0x29E5:word16]
	Mem77[ss:fp - 0x001E:word16] = Mem75[ds_44:0x29E3:word16]
	selector ds_80 = fn0800_3B0A(fp - 0x0002, ds_44, wArg08, wArg0A)
	*dsOut = ds_80
	word16 dx_83 = Mem77[ds_80:0x2A07:word16]
	Mem84[ds_80:0x2A05:word16] = Mem77[ds_80:0x2A09:word16]
	Mem85[ds_80:0x2A03:word16] = dx_83
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_5374_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp



selector fn0800_55E8(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_55E8_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_55E8:
	word16 sp_110 = fp - 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_574B:
	word16 ax_36 = Mem0[ds:0x2A01:word16]
	word16 dx_37 = Mem0[ds:0x29FF:word16]
	branch ax_36 >=u Mem0[ds:0x2A09:word16] l0800_575B
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_575B:
	branch ax_36 != Mem0[ds:0x2A09:word16] l0800_5766
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_575D:
	branch dx_37 >=u Mem0[ds:0x2A07:word16] l0800_5766
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5766:
	word16 sp_349 = sp_110 - 0x0002
	Mem350[ss:sp_349:word16] = Mem0[ds:0x29E1:word16]
	Mem352[ss:sp_349 - 0x0002:word16] = Mem350[ds:0x29DF:word16]
	word16 ax_355 = Mem352[ds:0x2E55:word16] - Mem352[ds:0x2E59:word16]
	word16 ax_359 = ax_355 - Mem352[ds:0x2E31:word16]
	Mem364[ss:sp_349 - 0x0004:word16] = 0x0000 - (ax_355 <u 0x0000) - (ax_359 <u 0x0000)
	Mem366[ss:sp_349 - 0x0006:word16] = ax_359
	word16 ax_368 = Mem366[ds:0x2E59:word16] + Mem366[ds:0x2E31:word16]
	Mem371[ss:sp_349 - 0x0008:word16] = Mem366[ds:0x2E5B:word16]
	Mem373[ss:sp_349 - 0x000A:word16] = ax_368
	return fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_55E8_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> Sequence es:bx:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5763:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5758:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_55F1:
	word16 sp_48 = sp_110 - 0x0002
	Mem49[ss:sp_48:word16] = 0x0010
	Mem52[ss:sp_48 - 0x0002:word16] = ds
	Mem55[ss:sp_48 - 0x0004:word16] = 0x290F
	selector ds_59 = fn0800_5A24(fp - 0x0002, ds, wArg00, wArg02, wArg04)
	Mem64[ss:sp_48:word16] = 0x0010
	Mem66[ss:sp_48 - 0x0002:word16] = ds_59
	Mem69[ss:sp_48 - 0x0004:word16] = 0x284F
	selector ds_70 = fn0800_5A24(fp - 0x0002, ds_59, wArg00, wArg02, wArg04)
	Mem75[ss:sp_48:word16] = 0x0010
	Mem77[ss:sp_48 - 0x0002:word16] = ds_70
	Mem80[ss:sp_48 - 0x0004:word16] = 0x278F
	selector ds_81 = fn0800_5A24(fp - 0x0002, ds_70, wArg00, wArg02, wArg04)
	Mem86[ss:sp_48:word16] = 0x0010
	word16 ax_88 = fn0800_5C39(fp - 0x0002, ds_81, wArg00, out ds)
	Mem91[ss:fp - 0x0004:word16] = 0x0000
	Mem92[ss:fp - 0x0006:word16] = ax_88
	sp_110 = sp_48 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5736:
	word16 ax_111 = Mem92[ss:fp - 0x0006:word16]
	word16 dx_112 = Mem92[ss:fp - 0x0004:word16]
	word16 v11_113 = Mem92[ss:fp - 0x0006:word16] - 0x0001
	Mem114[ss:fp - 0x0006:word16] = v11_113
	Mem118[ss:fp - 0x0004:word16] = Mem114[ss:fp - 0x0004:word16] - (v11_113 <u 0x0000)
	branch (ax_111 | dx_112) == 0x0000 l0800_574B
	word16 ax_122 = Mem118[ss:fp - 0x0006:word16]
	word16 dx_123 = Mem118[ss:fp - 0x0004:word16]
	word16 v20_124 = Mem118[ss:fp - 0x0006:word16] - 0x0001
	Mem125[ss:fp - 0x0006:word16] = v20_124
	Mem129[ss:fp - 0x0004:word16] = Mem125[ss:fp - 0x0004:word16] - (v20_124 <u 0x0000)
	branch (ax_122 | dx_123) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5748:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5633:
	word16 sp_134 = sp_110 - 0x0002
	Mem135[ss:sp_134:word16] = ds
	Mem138[ss:sp_134 - 0x0002:word16] = 0x290F
	word16 ax_140 = fn0800_5A8D(fp - 0x0002, ds, wArg00, wArg02, out ds)
	Mem142[ds:0x2E47:word16] = ax_140
	word16 v14_143 = Mem142[ds:0x29FF:word16] + ax_140
	Mem144[ds:0x29FF:word16] = v14_143
	Mem148[ds:0x2A01:word16] = Mem144[ds:0x2A01:word16] + (v14_143 <u 0x0000)
	sp_110 = sp_134 + 0x0002
	branch Mem148[ds:0x2E47:word16] != 0x0000 l0800_5654
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5654:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5664:
	word16 ax_237 = Mem148[ds:0x2E47:word16]
	Mem239[ds:0x2E47:word16] = Mem148[ds:0x2E47:word16] - 0x0001
	word16 ax_240 = ax_237
	branch ax_237 != 0x0000 l0800_5656
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5656:
	word16 si_335
	word16 di_336
	selector ds_337
	word16 ax_338 = fn0800_5B15(fp - 0x0002, ds, out si_335, out di_336, out ds_337)
	word16 sp_344 = sp_110 - 0x0002
	Mem345[ss:sp_344:word16] = DPB(ax_338, (byte) ax_338 ^ Mem239[ds_337:0x2E4F:byte], 0)
	ds = fn0800_5D2F(fp - 0x0002, ds_337)
	sp_110 = sp_344 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_566F:
	branch (Mem239[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_5684
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5684:
	Mem333[ds:0x2E4F:word16] = Mem239[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5677:
	ax_240 = Mem239[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem331[ds:0x2E4F:word16] = ax_240
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5688:
	word16 bx_251 = (word16) Mem239[ds:0x2E6D:segptr32]
	word16 sp_255 = sp_110 - 0x0002
	Mem256[ss:sp_255:word16] = DPB(ax_240, 0x00, 8)
	word16 dx_260 = DPB(dx_123, 0x00, 8)
	word16 dx_268 = Mem256[ss:sp_255:word16] + (dx_260 << 0x08 <u 0x0000)
	Mem273[ss:sp_255:word16] = dx_260 << 0x08
	Mem276[ss:sp_255 - 0x0002:word16] = dx_268
	int32 dx_ax_277 = (int32) DPB(bx_251, 0x00, 8)
	word16 ax_278 = (word16) dx_ax_277
	int32 dx_ax_290 = SEQ(Mem276[ss:sp_255 - 0x0002:word16], Mem276[ss:sp_255:word16] + ax_278) + SEQ(SLICE(dx_ax_277, word16, 16), ax_278)
	word16 dx_295
	Mem298[ss:sp_255:word16] = fn0800_8C69((word16) dx_ax_290, Mem276[ds:0x2E45:byte], SLICE(dx_ax_290, word16, 16), bp, out dx_295)
	word16 ax_301 = 0x0001 << Mem298[ds:0x2E45:byte]
	Mem304[ss:sp_255 - 0x0002:word16] = dx_295
	int32 dx_ax_305 = (int32) (ax_301 - 0x0001)
	word16 cx_310 = Mem304[ds:0x29FB:word16] & (word16) dx_ax_305
	ui32 ax_dx_320 = SEQ(Mem304[ss:sp_255 - 0x0002:word16], Mem304[ss:sp_255:word16] + cx_310) + SEQ(Mem304[ds:0x29FD:word16] & SLICE(dx_ax_305, word16, 16), cx_310)
	Mem324[ds:0x29FD:word16] = SLICE(ax_dx_320, word16, 16)
	Mem325[ds:0x29FB:word16] = (word16) ax_dx_320
	sp_110 = sp_255 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5651:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_56E6:
	branch (Mem148[ss:fp - 0x0006:word16] | Mem148[ss:fp - 0x0004:word16]) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_56EE:
	word16 sp_176 = sp_110 - 0x0002
	Mem177[ss:sp_176:word16] = ds
	Mem180[ss:sp_176 - 0x0002:word16] = 0x284F
	selector ds_181
	word16 ax_182 = fn0800_5A8D(fp - 0x0002, ds, wArg00, wArg02, out ds_181)
	Mem187[ds_181:0x2E2B:word16] = ax_182 + 0x0001
	Mem189[ss:sp_176:word16] = ds_181
	Mem192[ss:sp_176 - 0x0002:word16] = 0x278F
	word16 ax_194 = fn0800_5A8D(fp - 0x0002, ds_181, wArg00, wArg02, out ds)
	Mem197[ds:0x2E29:word16] = ax_194 + 0x0002
	word16 v16_198 = Mem197[ds:0x29FF:word16] + (ax_194 + 0x0002)
	Mem199[ds:0x29FF:word16] = v16_198
	Mem203[ds:0x2A01:word16] = Mem199[ds:0x2A01:word16] + (v16_198 <u 0x0000)
	sp_110 = sp_176 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_572B:
	word16 ax_212 = Mem203[ds:0x2E29:word16]
	Mem214[ds:0x2E29:word16] = Mem203[ds:0x2E29:word16] - 0x0001
	branch ax_212 != 0x0000 l0800_5719
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5719:
	ptr32 es_bx_219 = Mem214[ds:0x2E55:segptr32]
	word16 sp_226 = sp_110 - 0x0002
	Mem227[ss:sp_226:word16] = DPB(ax_212, Mem214[SLICE(es_bx_219, selector, 16):(word16) es_bx_219 - Mem214[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(fp - 0x0002, ds)
	sp_110 = sp_226 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_579B(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_579B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_579B:
	word16 sp_1 = fp
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_58F2:
	word16 ax_22 = Mem0[ds:0x2A01:word16]
	word16 dx_23 = Mem0[ds:0x29FF:word16]
	branch ax_22 >=u Mem0[ds:0x2A09:word16] l0800_5902
// DataOut: ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5902:
	branch ax_22 != Mem0[ds:0x2A09:word16] l0800_590D
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5904:
	branch dx_23 >=u Mem0[ds:0x2A07:word16] l0800_590D
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_590D:
	word16 sp_283 = sp_1 - 0x0002
	Mem284[ss:sp_283:word16] = Mem0[ds:0x29E1:word16]
	Mem286[ss:sp_283 - 0x0002:word16] = Mem284[ds:0x29DF:word16]
	word16 ax_289 = Mem286[ds:0x2E55:word16] - Mem286[ds:0x2E59:word16]
	word16 ax_293 = ax_289 - Mem286[ds:0x2E31:word16]
	Mem298[ss:sp_283 - 0x0004:word16] = 0x0000 - (ax_289 <u 0x0000) - (ax_293 <u 0x0000)
	Mem300[ss:sp_283 - 0x0006:word16] = ax_293
	word16 ax_302 = Mem300[ds:0x2E59:word16] + Mem300[ds:0x2E31:word16]
	Mem305[ss:sp_283 - 0x0008:word16] = Mem300[ds:0x2E5B:word16]
	Mem307[ss:sp_283 - 0x000A:word16] = ax_302
	selector ds_313
	*dsOut = fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

fn0800_579B_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> al:<invalid> ah:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> Sequence es:bx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_590A:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58FF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57CF:
	word16 sp_41 = sp_1 - 0x0002
	Mem42[ss:sp_41:word16] = 0x0001
	selector ds_45
	branch fn0800_5CD9(ds, wArg00, out ds_45) == 0x0000 l0800_579E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_579E:
	word16 si_249
	word16 di_250
	selector ds_251
	word16 ax_252 = fn0800_5B15(bp, ds_45, out si_249, out di_250, out ds_251)
	Mem259[ss:sp_41:word16] = DPB(ax_252, (byte) ax_252 ^ Mem42[ds_251:0x2E4F:byte], 0)
	ds = fn0800_5D2F(bp, ds_251)
	sp_1 = sp_41 + 0x0002
	branch (Mem259[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_57C1
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57C1:
	Mem281[ds:0x2E4F:word16] = Mem259[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57B4:
	Mem279[ds:0x2E4F:word16] = Mem259[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57C5:
	word16 v16_267 = Mem259[ds:0x29FF:word16] + 0x0001
	Mem268[ds:0x29FF:word16] = v16_267
	Mem272[ds:0x2A01:word16] = Mem268[ds:0x2A01:word16] + (v16_267 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57DD:
	Mem54[ss:sp_41:word16] = 0x0001
	sp_1 = sp_41 + 0x0002
	selector ds_55
	branch fn0800_5CD9(ds_45, wArg00, out ds_55) == 0x0000 l0800_5866
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5866:
	selector ds_161 = fn0800_593F(ds_55)
	branch Mem54[ds_161:0x2E29:word16] != 0x0009 l0800_58B7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58B7:
	bp = fn0800_5975(ds_161, out ds)
	word16 v25_216 = Mem54[ds:0x29FF:word16] + Mem54[ds:0x2E29:word16]
	Mem217[ds:0x29FF:word16] = v25_216
	Mem221[ds:0x2A01:word16] = Mem217[ds:0x2A01:word16] + (v25_216 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58DA:
	word16 ax_230 = Mem221[ds:0x2E29:word16]
	Mem232[ds:0x2E29:word16] = Mem221[ds:0x2E29:word16] - 0x0001
	branch ax_230 != 0x0000 l0800_58C8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58C8:
	ptr32 es_bx_237 = Mem232[ds:0x2E55:segptr32]
	word16 sp_244 = sp_1 - 0x0002
	Mem245[ss:sp_244:word16] = DPB(ax_230, Mem232[SLICE(es_bx_237, selector, 16):(word16) es_bx_237 - Mem232[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(bp, ds)
	sp_1 = sp_244 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58E5:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5870:
	bp = fn0800_5A0F(ds_161, out ds)
	word16 v22_167 = Mem54[ds:0x29FF:word16] + Mem54[ds:0x2E47:word16]
	Mem168[ds:0x29FF:word16] = v22_167
	Mem172[ds:0x2A01:word16] = Mem168[ds:0x2A01:word16] + (v22_167 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_588F:
	word16 ax_180 = Mem172[ds:0x2E47:word16]
	Mem182[ds:0x2E47:word16] = Mem172[ds:0x2E47:word16] - 0x0001
	branch ax_180 != 0x0000 l0800_5881
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5881:
	word16 si_199
	word16 di_200
	selector ds_201
	word16 ax_202 = fn0800_5B15(bp, ds, out si_199, out di_200, out ds_201)
	word16 sp_208 = sp_1 - 0x0002
	Mem209[ss:sp_208:word16] = DPB(ax_202, (byte) ax_202 ^ Mem182[ds_201:0x2E4F:byte], 0)
	ds = fn0800_5D2F(bp, ds_201)
	sp_1 = sp_208 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_589A:
	branch (Mem182[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_58B0
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58B0:
	Mem197[ds:0x2E4F:word16] = Mem182[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58A2:
	Mem195[ds:0x2E4F:word16] = Mem182[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57EB:
	Mem64[ss:sp_41:word16] = 0x0001
	sp_1 = sp_41 + 0x0002
	selector ds_65
	branch fn0800_5CD9(ds_55, wArg00, out ds_65) != 0x0000 l0800_580A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_580A:
	Mem126[ss:sp_41:word16] = 0x0001
	sp_1 = sp_41 + 0x0002
	selector ds_127
	branch fn0800_5CD9(ds_65, wArg00, out ds_127) != 0x0000 l0800_5820
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5820:
	word16 si_144
	word16 di_145
	word16 ax_149 = DPB(fn0800_5B15(bp, ds_127, out si_144, out di_145, out ds_127), 0x00, 8)
	Mem151[ds_127:0x2E29:word16] = ax_149 + 0x0008
	branch Mem151[ds_127:0x2E29:word16] != 0x0008 l0800_5835
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5832:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58E8:
	Mem156[ss:sp_41:word16] = 0x0001
	fn0800_5CD9(ds_127, wArg00, out ds)
	sp_1 = sp_41 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5818:
	Mem143[ds_127:0x2E29:word16] = 0x0003
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5835:
	bp = fn0800_5975(ds_127, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57F9:
	Mem114[ds_65:0x2E29:word16] = 0x0002
	word16 si_115
	word16 di_116
	word16 ax_120 = DPB(fn0800_5B15(bp, ds_65, out si_115, out di_116, out ds), 0x00, 8)
	Mem123[ds:0x2E2B:word16] = ax_120 + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5838:
	word16 v13_81 = Mem64[ds:0x29FF:word16] + Mem64[ds:0x2E29:word16]
	Mem82[ds:0x29FF:word16] = v13_81
	Mem86[ds:0x2A01:word16] = Mem82[ds:0x2A01:word16] + (v13_81 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5858:
	word16 ax_95 = Mem86[ds:0x2E29:word16]
	Mem97[ds:0x2E29:word16] = Mem86[ds:0x2E29:word16] - 0x0001
	branch ax_95 != 0x0000 l0800_5846
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5846:
	ptr32 es_bx_102 = Mem97[ds:0x2E55:segptr32]
	word16 sp_109 = sp_1 - 0x0002
	Mem110[ss:sp_109:word16] = DPB(ax_95, Mem97[SLICE(es_bx_102, selector, 16):(word16) es_bx_102 - Mem97[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(bp, ds)
	sp_1 = sp_109 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5863:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>



selector fn0800_593F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_593F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_593F:
	selector ds_6
	word16 ax_7 = fn0800_5CD9(ds, 0x0001, out ds_6)
	Mem11[ds_6:0x2E29:word16] = ax_7 + 0x0004
	Mem14[ss:fp - 0x0002:word16] = 0x0001
	selector ds_17
	branch fn0800_5CD9(ds_6, wArg00, out ds_17) == 0x0000 l0800_5974
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_595D:
	Mem32[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_34 = fn0800_5CD9(ds_17, wArg00, out ds_17)
	Mem41[ds_17:0x2E29:word16] = (Mem32[ds_17:0x2E29:word16] - 0x0001 << 0x0001) + ax_34
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

l0800_5974:
	return ds_17
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

fn0800_593F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001



word16 fn0800_5975(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5975_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5975:
	Mem2[ds:0x2E2B:word16] = 0x0000
	selector ds_17
	branch fn0800_5CD9(ds, 0x0001, out ds_17) == 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5989:
	Mem36[ss:fp - 0x0002:word16] = 0x0001
	selector ds_39
	word16 ax_40 = fn0800_5CD9(ds_17, wArg00, out ds_39)
	Mem43[ds_39:0x2E2B:word16] = ax_40
	Mem46[ss:fp - 0x0002:word16] = 0x0001
	branch fn0800_5CD9(ds_39, wArg00, out ds_17) == 0x0000 l0800_59E3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59E3:
	branch Mem46[ds_17:0x2E2B:word16] != 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59EA:
	Mem92[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_94 = fn0800_5CD9(ds_17, wArg00, out ds_17)
	Mem98[ds_17:0x2E2B:word16] = ax_94 + 0x0002
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

l0800_59A4:
	Mem56[ss:fp - 0x0002:word16] = 0x0001
	selector ds_57
	word16 ax_58 = fn0800_5CD9(ds_17, wArg00, out ds_57)
	Mem66[ds_57:0x2E2B:word16] = (Mem56[ds_57:0x2E2B:word16] << 0x0001) + ax_58 | 0x0004
	Mem69[ss:fp - 0x0002:word16] = 0x0001
	branch fn0800_5CD9(ds_57, wArg00, out ds_17) != 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59CB:
	Mem79[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_81 = fn0800_5CD9(ds_17, wArg00, out ds_17)
	Mem87[ds_17:0x2E2B:word16] = (Mem79[ds_17:0x2E2B:word16] << 0x0001) + ax_81
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

l0800_59FA:
	word16 si_19
	word16 di_20
	selector ds_21
	word16 ax_24 = DPB(fn0800_5B15(bp, ds_17, out si_19, out di_20, out ds_21), 0x00, 8)
	Mem32[ds_21:0x2E2B:word16] = (Mem2[ds_21:0x2E2B:word16] << 0x08) + ax_24 + 0x0001
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001

fn0800_5975_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:0x00 dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0001



word16 fn0800_5A0F(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5A0F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5A0F:
	selector ds_6
	word16 ax_11 = (fn0800_5CD9(ds, 0x0004, out ds_6) << 0x0002) + 0x000C
	Mem13[ds_6:0x2E47:word16] = ax_11
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_5A0F_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> bp:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -2(fp):0x0004



selector fn0800_5A24(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_5A24_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	selector ds_27
	word16 ax_28 = fn0800_5C39(fp - 0x0002, ds, 0x0005, out ds_27)
	Mem30[ss:fp + 0x0006:word16] = ax_28
	word16 sp_29 = fp - 0x0006
	branch ax_28 == 0x0000 l0800_5A89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5A49:
	branch Mem30[ss:fp + 0x0006:word16] <=u 0x0010 l0800_5A54
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A4F:
	Mem90[ss:fp + 0x0006:word16] = 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A54:
	word16 di_53 = 0x0000
	word16 si_55 = Mem30[ss:fp + 0x0002:word16] + 0x000A
	branch 0x0000 >=u Mem30[ss:fp + 0x0006:word16] l0800_5A7A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A61:
	word16 sp_78 = sp_29 - 0x0002
	Mem79[ss:sp_78:word16] = 0x0004
	Mem85[Mem79[ss:fp + 0x0004:selector]:si_55:word16] = fn0800_5C39(fp - 0x0002, ds_27, wArg00, out ds_27)
	sp_29 = sp_78 + 0x0002
	si_55 = si_55 + 0x000C
	di_53 = di_53 + 0x0001
	branch di_53 <u Mem85[ss:fp + 0x0006:word16] l0800_5A61
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A7A:
	word16 sp_65 = sp_29 - 0x0002
	Mem66[ss:sp_65:word16] = Mem30[ss:fp + 0x0006:word16]
	Mem68[ss:sp_65 - 0x0002:word16] = Mem66[ss:fp + 0x0004:word16]
	Mem70[ss:sp_65 - 0x0004:word16] = Mem68[ss:fp + 0x0002:word16]
	fn0800_4550(fp - 0x0002)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

l0800_5A89:
	return ds_27
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

fn0800_5A24_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>



word16 fn0800_5A8D(word16 bp, selector ds, word16 wArg02, selector psegArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5A8D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5A8D:
	word16 wLoc04_14 = 0x0000
	word16 di_16 = wArg02
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5AA5:
	branch Mem0[psegArg04:di_16 + 0x000A:word16] == 0x0000 l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5AAF:
	int32 dx_ax_54 = (int32) ((0x0001 << Mem0[psegArg04:di_16 + 0x000A:byte]) - 0x0001)
	word16 cx_60 = Mem0[ds:0x29FB:word16] & (word16) dx_ax_54
	branch (Mem0[ds:0x29FD:word16] & SLICE(dx_ax_54, word16, 16)) != Mem0[psegArg04:di_16 + 0x0008:word16] l0800_5A9F
// DataOut: bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5ACC:
	branch cx_60 != Mem0[psegArg04:di_16 + 0x0006:word16] l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5A9F:
	di_16 = di_16 + 0x000C
	wLoc04_14 = wLoc04_14 + 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(8) Stack +0002(16) Stack +0004(16)

l0800_5AD2:
	selector ds_76
	fn0800_5C39(fp - 0x0002, ds, Mem0[psegArg04:wArg02 + (word16) (wLoc04_14 *s 0x000C) + 0x000A:word16], out ds_76)
	branch Mem0[ss:fp - 0x0004:word16] >=u 0x0002 l0800_5AF8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5AF8:
	Mem106[ss:fp - 0x000A:word16] = Mem0[ss:fp - 0x0004:word16] - 0x0001
	selector ds_108
	return fn0800_5C39(fp - 0x0002, ds_76, wArg00, out ds_108) | 0x0001 << Mem106[ss:fp - 0x0004:byte] - 0x01
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_5AEF:
	return Mem0[ss:fp - 0x0004:word16]
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_5A8D_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_5B15(word16 bp, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al ax di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_5B15_entry:
	*dsOut = ds
	*diOut = di
	*siOut = si
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5B15:
	word16 ax_189 = Mem0[ds:0x2E73:word16]
	word16 dx_10 = Mem0[ds:0x2E71:word16]
	branch ax_189 == Mem0[ds:0x2E6F:word16] l0800_5B2E
// DataOut: bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5B2E:
	branch dx_10 + 0xFFFD == Mem0[ds:0x2E6D:word16] l0800_5B37
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5B37:
	word16 ax_103
	word16 dx_101
	word16 si_64
	selector ds_65
	Mem70[ss:fp - 0x000C:word16] = fn0800_4194(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out si_64, out ds_65)
	Mem72[ss:fp - 0x000E:word16] = dx_10 + 0xFFFD
	Mem74[ss:fp - 0x0010:word16] = Mem72[ds_65:0x29E5:word16]
	Mem76[ss:fp - 0x0012:word16] = Mem74[ds_65:0x29E3:word16]
	word16 si_79
	word16 ax_80 = fn0800_AD2F(ds_65, ptrArg00, wArg02, out si_79)
	ui32 bx_cx_91 = SEQ(Mem76[ss:fp - 0x000E:word16], Mem76[ss:fp - 0x000C:word16] - ax_80) - SEQ(dx_10 + 0xFFFD, ax_80)
	Mem94[ss:fp - 0x0004:word16] = SLICE(bx_cx_91, word16, 16)
	Mem95[ss:fp - 0x0006:word16] = (word16) bx_cx_91
	branch Mem95[ss:fp - 0x0004:word16] <u 0x0000 l0800_5B76
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B67:
	branch Mem95[ss:fp - 0x0004:word16] >u 0x0000 l0800_5B6F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B69:
	branch Mem95[ss:fp - 0x0006:word16] <=u 0xFFFD l0800_5B76
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B76:
	dx_101 = Mem95[ss:fp - 0x0004:word16]
	ax_103 = Mem95[ss:fp - 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B6F:
	dx_101 = 0x0000
	ax_103 = 0xFFFD
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5B7C:
	Mem104[ss:fp - 0x0008:word16] = dx_101
	Mem105[ss:fp - 0x000A:word16] = ax_103
	Mem107[ss:fp - 0x000C:word16] = Mem105[ds_65:0x29E5:word16]
	Mem109[ss:fp - 0x000E:word16] = Mem107[ds_65:0x29E3:word16]
	Mem111[ss:fp - 0x0010:word16] = Mem109[ss:fp - 0x0008:word16]
	Mem113[ss:fp - 0x0012:word16] = ax_103
	word16 ax_114 = Mem113[ds_65:0x2E73:word16]
	word16 dx_115 = Mem113[ds_65:0x2E71:word16]
	Mem116[ds_65:0x2E6F:word16] = ax_114
	Mem117[ds_65:0x2E6D:word16] = dx_115
	Mem119[ss:fp - 0x0014:word16] = ax_114
	Mem121[ss:fp - 0x0016:word16] = dx_115
	word16 di_127
	selector ds_128
	fn0800_4110(ds_65, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_127, out ds_128)
	word16 ax_132 = Mem121[ss:fp - 0x0008:word16]
	word16 v19_134 = Mem121[ss:fp - 0x0006:word16] - Mem121[ss:fp - 0x000A:word16]
	Mem135[ss:fp - 0x0006:word16] = v19_134
	word16 dx_138 = Mem135[ss:fp - 0x0006:word16]
	Mem140[ss:fp - 0x0004:word16] = Mem135[ss:fp - 0x0004:word16] - ax_132 - (v19_134 <u 0x0000)
	branch false l0800_5BCB
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BBA:
	branch false l0800_5BC1
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BBC:
	branch dx_138 <=u 0x0002 l0800_5BCB
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BC1:
	Mem194[ss:fp - 0x0004:word16] = 0x0000
	Mem195[ss:fp - 0x0006:word16] = 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BCB:
	Mem152[ss:fp - 0x000C:word16] = Mem140[ds_128:0x29E5:word16]
	Mem154[ss:fp - 0x000E:word16] = Mem152[ds_128:0x29E3:word16]
	Mem156[ss:fp - 0x0010:word16] = Mem154[ss:fp - 0x0004:word16]
	Mem158[ss:fp - 0x0012:word16] = Mem156[ss:fp - 0x0006:word16]
	word16 ax_160 = Mem158[ds_128:0x2E71:word16] + Mem158[ss:fp - 0x000A:word16]
	Mem163[ss:fp - 0x0014:word16] = Mem158[ds_128:0x2E73:word16]
	Mem165[ss:fp - 0x0016:word16] = ax_160
	word16 di_166
	selector ds_167
	word16 si_168
	*siOut = fn0800_4110(ds_128, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_166, out ds_167)
	Mem172[ss:fp - 0x000C:word16] = 0x0001
	word16 dx_176 = -Mem172[ss:fp - 0x0006:word16]
	Mem181[ss:fp - 0x000E:word16] = -Mem172[ss:fp - 0x0004:word16] - (dx_176 == 0x0000)
	Mem183[ss:fp - 0x0010:word16] = dx_176
	Mem185[ss:fp - 0x0012:word16] = Mem183[ds_167:0x29E5:word16]
	Mem187[ss:fp - 0x0014:word16] = Mem185[ds_167:0x29E3:word16]
	ax_189 = fn0800_ACB3(fp - 0x0002, ds_167, ptrArg00, wArg02, wArg08, out ds)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> si:<invalid> ds:<invalid> ah:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5B34:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5B2B:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5C0B:
	ptr32 es_bx_32 = Mem0[ds:0x2E6D:segptr32]
	Mem36[ds:0x2E6D:word16] = Mem0[ds:0x2E6D:word16] + 0x0001
	return DPB(ax_189, Mem0[Mem0[es_bx_32:byte]:byte], 0)
// DataOut: al ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5B15_exit:
// DataOut: al ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C1A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_5C1A_entry:
	*siOut = si
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C1A:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_5C30
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5C30:
	selector ds_32
	return fn0800_5C39(fp - 0x0002, ds, wArg02, out ds_32)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_5C27:
	selector ds_23
	return fn0800_5CD9(ds, wArg02, out ds_23)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

fn0800_5C1A_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C39(word16 bp, selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5C39_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C39:
	word16 si_14 = wArg02
	word16 di_100 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_5CCA:
	word16 si_45 = si_14
	branch si_14 == 0x0000 l0800_5CD1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CD1:
	return di_100
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5C39_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5CCE:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5C4D:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5CA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5C54:
	word16 si_92
	word16 di_93
	selector ds_94
	Mem98[ss:fp - 0x0004:word16] = DPB(fn0800_5B15(fp - 0x0002, ds, out si_92, out di_93, out ds_94), 0x00, 8)
	word16 ax_102 = fn0800_5B15(fp - 0x0002, ds_94, out si_45, out di_100, out ds)
	Mem103[ss:fp - 0x0006:word16] = ax_102
	word16 dx_114
	word16 ax_115 = fn0800_8C69(DPB(ax_102, 0x00, 8), 0x18, 0x0000, bp, out dx_114)
	word16 ax_129 = ax_115 + (Mem103[ss:fp - 0x0006:word16] << 0x08)
	word16 ax_133 = ax_129 + Mem103[ss:fp - 0x0004:word16]
	Mem138[ds:0x29FD:word16] = dx_114 + DPB((word16) Mem103[ds:0x2E6D:segptr32], 0x00, 8) + (ax_115 <u 0x0000) + (ax_129 <u 0x0000) + (ax_133 <u 0x0000)
	Mem139[ds:0x29FB:word16] = ax_133
	Mem140[ds:0x2E45:word16] = 0x0010
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CA2:
	branch (Mem0[ds:0x29FB:word16] & 0x0001) == 0x0000 l0800_5CB0
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CAD:
	di_100 = di_100 | Mem0[ss:fp - 0x0008:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CB0:
	word16 ax_72 = Mem0[ds:0x29FD:word16]
	word16 dx_78 = __rcr(Mem0[ds:0x29FB:word16], 0x01, cond(ax_72 >>u 0x0001))
	Mem79[ds:0x29FD:word16] = ax_72 >>u 0x0001
	Mem80[ds:0x29FB:word16] = dx_78
	Mem83[ss:fp - 0x0008:word16] = Mem80[ss:fp - 0x0008:word16] << 0x0001
	Mem86[ds:0x2E45:word16] = Mem83[ds:0x2E45:word16] - 0x0001
	si_14 = si_45 - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)



word16 fn0800_5CD9(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5CD9_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5CD9:
	word16 di_13 = wArg02
	word16 si_14 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5D25:
	word16 di_29 = di_13
	branch di_13 != 0x0000 l0800_5CE5
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5CE5:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5D00
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5CEC:
	word16 ax_79 = DPB(fn0800_5B15(fp - 0x0002, ds, out si_14, out di_29, out ds), 0x00, 8)
	Mem80[ds:0x29FD:word16] = 0x0000
	Mem81[ds:0x29FB:word16] = ax_79
	Mem82[ds:0x2E45:word16] = 0x0008
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D00:
	si_14 = si_14 << 0x0001
	branch (Mem0[ds:0x29FB:word16] & 0x0080) == 0x0000 l0800_5D0E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D0D:
	si_14 = si_14 + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D0E:
	word16 dx_59 = Mem0[ds:0x29FB:word16]
	Mem66[ds:0x29FD:word16] = __rcl(Mem0[ds:0x29FD:word16], 0x01, cond(dx_59 << 0x0001))
	Mem67[ds:0x29FB:word16] = dx_59 << 0x0001
	Mem69[ds:0x2E45:word16] = Mem67[ds:0x2E45:word16] - 0x0001
	di_13 = di_29 - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D29:
	return si_14
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_5CD9_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_5D2F(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_5D2F_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5D2F:
	word16 ax_100 = Mem0[ds:0x2E5B:word16]
	word16 dx_9 = Mem0[ds:0x2E59:word16]
	branch ax_100 != Mem0[ds:0x2E57:word16] l0800_5D9E
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5D40:
	branch dx_9 - 0x0001 != Mem0[ds:0x2E55:word16] l0800_5D9E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5D46:
	word16 dx_63 = 0xFFFF - Mem0[ds:0x2E31:word16]
	selector ds_78 = fn0800_4152(ds, Mem0[ds:0x2E59:word16] + Mem0[ds:0x2E31:word16], Mem0[ds:0x2E5B:word16], dx_63, 0x0000 - (dx_63 <u 0x0000), Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16])
	Mem81[ss:fp - 0x0004:word16] = Mem0[ds_78:0x2E31:word16]
	word16 ax_83 = Mem81[ds_78:0x2E55:word16] - Mem81[ds_78:0x2E31:word16]
	Mem86[ss:fp - 0x0006:word16] = Mem81[ds_78:0x2E57:word16]
	Mem88[ss:fp - 0x0008:word16] = ax_83
	Mem90[ss:fp - 0x000A:word16] = Mem88[ds_78:0x2E5B:word16]
	Mem92[ss:fp - 0x000C:word16] = Mem90[ds_78:0x2E59:word16]
	ds = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08)
	ax_100 = Mem92[ds:0x2E5B:word16]
	word16 dx_102 = Mem92[ds:0x2E59:word16] + Mem92[ds:0x2E31:word16]
	Mem104[ds:0x2E57:word16] = ax_100
	Mem105[ds:0x2E55:word16] = dx_102
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5D9E:
	Mem0[Mem0[Mem0[ds:0x2E55:segptr32]:byte]:byte] = Mem0[ss:fp + 0x0002:byte]
	Mem37[ds:0x2E55:word16] = Mem35[ds:0x2E55:word16] + 0x0001
	Mem52[ds:0x2E4D:word16] = Mem37[ds:((DPB(ax_100, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem37[ds:0x2E4D:word16] >>u 0x08
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:0x40 bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5D2F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5DCE(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5DCE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5DCE:
	word16 ax_138
	word16 si_16
	selector ds_125
	word16 ax_18 = fn0800_4194(fp - 0x0002, ds, wArg02, wArg04, out si_16, out ds_125)
	word16 sp_127 = fp - 0x0004
	branch false l0800_5DEE
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5DE2:
	branch dx != 0x0000 l0800_5DE9
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DE4:
	branch ax_18 <u 0x0400 l0800_5DEE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DEE:
	Mem131[ss:fp - 0x0006:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem133[ss:fp - 0x0008:word16] = Mem131[ss:fp + 0x0002:word16]
	sp_127 = fp - 0x0004
	word16 si_134
	ax_138 = fn0800_4194(fp - 0x0002, ds_125, wArg00, wArg02, out si_134, out ds_125) & 0xFFFC
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DE9:
	ax_138 = 0x0400
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DFD:
	word16 si_32 = ax_138
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E5B:
	word16 si_41 = si_32
	branch si_32 != 0x0000 l0800_5E01
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E01:
	word16 sp_60 = sp_127 - 0x0002
	Mem61[ss:sp_60:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem63[ss:sp_60 - 0x0002:word16] = Mem61[ss:fp + 0x0002:word16]
	sp_127 = sp_60 + 0x0002
	word16 di_66
	branch fn0800_3E27(fp - 0x0002, ds_125, wArg00, wArg02, out si_41, out di_66, out ds_125) != 0x524E l0800_5E58
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E12:
	Mem82[ss:sp_60:word16] = Mem63[ss:fp + 0x0004:word16]
	Mem84[ss:sp_60 - 0x0002:word16] = Mem82[ss:fp + 0x0002:word16]
	word16 di_86
	selector ds_87
	branch (fn0800_3E27(fp - 0x0002, ds_125, wArg00, wArg02, out si_41, out di_86, out ds_87) & 0xFF00) != 0x4300 l0800_5E40
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E40:
	Mem114[ss:sp_60:word16] = 0x0001
	Mem118[ss:sp_60 - 0x0002:word16] = 0xFFFF
	Mem120[ss:sp_60 - 0x0004:word16] = 0xFFFE
	Mem122[ss:sp_60 - 0x0006:word16] = Mem120[ss:fp + 0x0004:word16]
	Mem124[ss:sp_60 - 0x0008:word16] = Mem122[ss:fp + 0x0002:word16]
	fn0800_ACB3(fp - 0x0002, ds_87, ptrArg00, wArg02, wArg08, out ds_125)
	sp_127 = sp_60 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E58:
	si_32 = si_41 - 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E26:
	Mem95[ss:sp_60:word16] = 0x0001
	Mem99[ss:sp_60 - 0x0002:word16] = 0xFFFF
	Mem101[ss:sp_60 - 0x0004:word16] = 0xFFFC
	Mem103[ss:sp_60 - 0x0006:word16] = Mem101[ss:fp + 0x0004:word16]
	Mem105[ss:sp_60 - 0x0008:word16] = Mem103[ss:fp + 0x0002:word16]
	selector ds_108
	fn0800_ACB3(fp - 0x0002, ds_87, ptrArg00, wArg02, wArg08, out ds_108)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_5E5F:
	return si_41
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_5DCE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_6AD4(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_6AD4_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6AD4:
	word16 ax_22 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_6B04
// DataOut: ax bp ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_6AF4:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_6AFC
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6AF6:
	branch ax_22 <u Mem0[ds:0x2A07:word16] l0800_6B04
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6B04:
	word16 wLoc1E_58 = Mem0[ds:0x29E5:word16]
	word16 wLoc20_60 = Mem0[ds:0x29E3:word16]
	selector ds_61
	branch fn0800_3E5D(fp - 0x0002, ds, wLoc20_60, wLoc1E_58, out ds_61) != 0x0000 l0800_6B1B
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B16:
	branch ax_22 == 0x03F3 l0800_6B23
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B23:
	Mem84[ss:fp - 0x001E:word16] = Mem0[ds_61:0x29E1:word16]
	Mem86[ss:fp - 0x0020:word16] = Mem84[ds_61:0x29DF:word16]
	Mem92[ss:fp - 0x0022:word16] = 0x0000
	Mem94[ss:fp - 0x0024:word16] = 0x03F3
	word16 ax_106 = 0x0000
	selector ds_105 = fn0800_409C(fp - 0x0002, ds_61, wArg02, wArg04, wArg06)
	word16 sp_107 = fp - 0x001C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B38:
	word16 sp_108 = sp_107 - 0x0002
	Mem109[ss:sp_108:word16] = Mem94[ds_105:0x29E5:word16]
	Mem111[ss:sp_108 - 0x0002:word16] = Mem109[ds_105:0x29E3:word16]
	selector ds_113
	word16 dx_114 = fn0800_3E5D(fp - 0x0002, ds_105, wArg00, wArg02, out ds_113)
	Mem117[ss:fp - 0x0008:word16] = dx_114
	Mem118[ss:fp - 0x000A:word16] = ax_106
	Mem119[ss:fp - 0x0004:word16] = dx_114
	Mem120[ss:fp - 0x0006:word16] = ax_106
	Mem122[ss:sp_108:word16] = Mem120[ds_113:0x29E1:word16]
	Mem124[ss:sp_108 - 0x0002:word16] = Mem122[ds_113:0x29DF:word16]
	Mem126[ss:sp_108 - 0x0004:word16] = Mem124[ss:fp - 0x0004:word16]
	Mem128[ss:sp_108 - 0x0006:word16] = ax_106
	ds_105 = fn0800_409C(fp - 0x0002, ds_113, wArg02, wArg04, wArg06)
	sp_107 = sp_108 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B84:
	word16 ax_135 = Mem128[ss:fp - 0x000A:word16]
	word16 dx_136 = Mem128[ss:fp - 0x0008:word16]
	word16 v18_137 = Mem128[ss:fp - 0x000A:word16] - 0x0001
	Mem138[ss:fp - 0x000A:word16] = v18_137
	Mem142[ss:fp - 0x0008:word16] = Mem138[ss:fp - 0x0008:word16] - (v18_137 <u 0x0000)
	word16 ax_143 = ax_135 | dx_136
	branch ax_143 != 0x0000 l0800_6B66
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B66:
	word16 sp_443 = sp_107 - 0x0002
	Mem444[ss:sp_443:word16] = Mem142[ds_105:0x29E1:word16]
	Mem446[ss:sp_443 - 0x0002:word16] = Mem444[ds_105:0x29DF:word16]
	Mem448[ss:sp_443 - 0x0004:word16] = Mem446[ds_105:0x29E5:word16]
	Mem450[ss:sp_443 - 0x0006:word16] = Mem448[ds_105:0x29E3:word16]
	selector ds_451
	Mem456[ss:sp_443 - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds_105, wArg00, wArg02, out ds_451)
	Mem458[ss:sp_443 - 0x0006:word16] = ax_143
	ds_105 = fn0800_409C(fp - 0x0002, ds_451, wArg02, wArg04, wArg06)
	sp_107 = sp_443 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B96:
	ax_106 = Mem142[ss:fp - 0x0006:word16] | Mem142[ss:fp - 0x0004:word16]
	branch ax_106 != 0x0000 l0800_6B38
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B9E:
	word16 sp_154 = sp_107 - 0x0002
	Mem155[ss:sp_154:word16] = Mem142[ds_105:0x29E1:word16]
	Mem157[ss:sp_154 - 0x0002:word16] = Mem155[ds_105:0x29DF:word16]
	Mem159[ss:sp_154 - 0x0004:word16] = Mem157[ds_105:0x29E5:word16]
	Mem161[ss:sp_154 - 0x0006:word16] = Mem159[ds_105:0x29E3:word16]
	selector ds_162
	ui32 dx_ax_166 = SEQ(fn0800_3E5D(fp - 0x0002, ds_105, wArg00, wArg02, out ds_162), ax_106 + 0x0001)
	Mem173[ss:sp_154 - 0x0004:word16] = SLICE(dx_ax_166 + 0x00000001, word16, 16)
	word16 ax_169 = (word16) (dx_ax_166 + 0x00000001)
	Mem175[ss:sp_154 - 0x0006:word16] = ax_169
	selector ds_176 = fn0800_409C(fp - 0x0002, ds_162, wArg02, wArg04, wArg06)
	Mem180[ss:sp_154:word16] = Mem175[ds_176:0x29E5:word16]
	Mem182[ss:sp_154 - 0x0002:word16] = Mem180[ds_176:0x29E3:word16]
	selector ds_183
	Mem187[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_176, wArg00, wArg02, out ds_183)
	Mem188[ss:fp - 0x000E:word16] = ax_169
	Mem190[ss:sp_154:word16] = Mem188[ds_183:0x29E5:word16]
	Mem192[ss:sp_154 - 0x0002:word16] = Mem190[ds_183:0x29E3:word16]
	selector ds_193
	Mem196[ss:fp - 0x0010:word16] = fn0800_3E5D(fp - 0x0002, ds_183, wArg00, wArg02, out ds_193)
	Mem197[ss:fp - 0x0012:word16] = ax_169
	word16 dx_200 = Mem197[ss:fp - 0x0012:word16] - Mem197[ss:fp - 0x000E:word16]
	ui32 ax_dx_205 = SEQ(Mem197[ss:fp - 0x0010:word16] - Mem197[ss:fp - 0x000C:word16] - (dx_200 <u 0x0000), dx_200 + 0x0001)
	Mem211[ss:fp - 0x0014:word16] = SLICE(ax_dx_205 + 0x00000001, word16, 16)
	Mem212[ss:fp - 0x0016:word16] = (word16) (ax_dx_205 + 0x00000001)
	Mem214[ss:sp_154:word16] = Mem212[ds_193:0x29E1:word16]
	Mem216[ss:sp_154 - 0x0002:word16] = Mem214[ds_193:0x29DF:word16]
	Mem218[ss:sp_154 - 0x0004:word16] = Mem216[ss:fp - 0x000C:word16]
	Mem220[ss:sp_154 - 0x0006:word16] = Mem218[ss:fp - 0x000E:word16]
	selector ds_221 = fn0800_409C(fp - 0x0002, ds_193, wArg02, wArg04, wArg06)
	Mem224[ss:sp_154:word16] = Mem220[ds_221:0x29E1:word16]
	Mem226[ss:sp_154 - 0x0002:word16] = Mem224[ds_221:0x29DF:word16]
	ui32 ax_dx_230 = SEQ(Mem226[ss:fp - 0x0010:word16], Mem226[ss:fp - 0x0012:word16] + 0x0001)
	word16 ax_233 = SLICE(ax_dx_230 + 0x00000001, word16, 16)
	Mem237[ss:sp_154 - 0x0004:word16] = ax_233
	word16 dx_234 = (word16) (ax_dx_230 + 0x00000001)
	Mem239[ss:sp_154 - 0x0006:word16] = dx_234
	selector ds_240 = fn0800_409C(fp - 0x0002, ds_221, wArg02, wArg04, wArg06)
	Mem254[ss:fp - 0x0004:word16] = 0x0000
	word16 dx_249 = DPB(dx_234, 0x00, 8)
	Mem255[ss:fp - 0x0006:word16] = (DPB(ax_233, 0x00, 8) << 0x08) + dx_249 - 0x000C >>u 0x0001 >>u 0x0001
	Mem257[ss:sp_154:word16] = Mem255[ds_240:0x29E1:word16]
	Mem259[ss:sp_154 - 0x0002:word16] = Mem257[ds_240:0x29DF:word16]
	Mem264[ss:sp_154 - 0x0004:word16] = 0x0000
	Mem266[ss:sp_154 - 0x0006:word16] = Mem264[ss:fp - 0x0006:word16]
	selector ds_267 = fn0800_409C(fp - 0x0002, ds_240, wArg02, wArg04, wArg06)
	Mem271[ss:sp_154:word16] = Mem266[ds_267:0x29E1:word16]
	Mem273[ss:sp_154 - 0x0002:word16] = Mem271[ds_267:0x29DF:word16]
	word16 si_275
	word16 ax_276 = fn0800_AD2F(ds_267, ptrArg00, wArg02, out si_275)
	Mem279[ds_267:0x4E8E:word16] = dx_249
	Mem280[ds_267:0x4E8C:word16] = ax_276
	word16 dx_283 = Mem280[ss:fp - 0x0016:word16]
	Mem284[ss:fp - 0x0004:word16] = Mem280[ss:fp - 0x0014:word16]
	Mem285[ss:fp - 0x0006:word16] = dx_283
	word16 sp_277 = sp_154 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CAF:
	word16 ax_291 = Mem285[ss:fp - 0x0006:word16] | Mem285[ss:fp - 0x0004:word16]
	branch ax_291 != 0x0000 l0800_6C89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6C89:
	word16 sp_417 = sp_277 - 0x0002
	Mem418[ss:sp_417:word16] = Mem285[ds_267:0x29E1:word16]
	Mem420[ss:sp_417 - 0x0002:word16] = Mem418[ds_267:0x29DF:word16]
	Mem422[ss:sp_417 - 0x0004:word16] = Mem420[ds_267:0x29E5:word16]
	Mem424[ss:sp_417 - 0x0006:word16] = Mem422[ds_267:0x29E3:word16]
	selector ds_425
	dx_283 = fn0800_3E5D(fp - 0x0002, ds_267, wArg00, wArg02, out ds_425)
	Mem430[ss:sp_417 - 0x0004:word16] = dx_283
	Mem432[ss:sp_417 - 0x0006:word16] = ax_291
	ds_267 = fn0800_409C(fp - 0x0002, ds_425, wArg02, wArg04, wArg06)
	word16 v20_436 = Mem432[ss:fp - 0x0006:word16] - 0x0001
	Mem437[ss:fp - 0x0006:word16] = v20_436
	Mem441[ss:fp - 0x0004:word16] = Mem437[ss:fp - 0x0004:word16] - (v20_436 <u 0x0000)
	sp_277 = sp_417 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CB7:
	word16 sp_296 = sp_277 - 0x0002
	Mem297[ss:sp_296:word16] = Mem285[ds_267:0x29E1:word16]
	Mem299[ss:sp_296 - 0x0002:word16] = Mem297[ds_267:0x29DF:word16]
	Mem313[ss:sp_296 - 0x0004:word16] = 0x0000
	Mem315[ss:sp_296 - 0x0006:word16] = (DPB(ax_291, 0x00, 8) << 0x08) + DPB(dx_283, 0x00, 8)
	Mem317[ss:sp_296 - 0x0008:word16] = ds_267
	Mem320[ss:sp_296 - 0x000A:word16] = 0x2E77
	selector ds_323 = fn0800_4152(ds_267, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6E93:
	Mem330[ss:sp_296:word16] = Mem320[ds_323:0x29E5:word16]
	Mem332[ss:sp_296 - 0x0002:word16] = Mem330[ds_323:0x29E3:word16]
	word16 si_333
	word16 ax_334 = fn0800_AD2F(ds_323, ptrArg00, wArg02, out si_333)
	branch 0x0000 >=u Mem332[ds_323:0x2A09:word16] l0800_6EAA
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EAA:
	branch 0x0000 != Mem332[ds_323:0x2A09:word16] l0800_6EB5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EAC:
	branch ax_334 >=u Mem332[ds_323:0x2A07:word16] l0800_6EB5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EB5:
	return ds_323
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6EB2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EA7:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CE4:
	Mem347[ss:sp_296:word16] = Mem332[ds_323:0x29E5:word16]
	Mem349[ss:sp_296 - 0x0002:word16] = Mem347[ds_323:0x29E3:word16]
	selector ds_350
	Mem353[ss:fp - 0x0008:word16] = fn0800_3E5D(fp - 0x0002, ds_323, wArg00, wArg02, out ds_350)
	Mem354[ss:fp - 0x000A:word16] = ax_334
	word16 ax_355 = Mem354[ss:fp - 0x0008:word16]
	word16 dx_356 = Mem354[ss:fp - 0x000A:word16]
	Mem361[ss:fp - 0x001A:word16] = dx_356
	Mem362[ss:fp - 0x0018:word16] = ax_355 & 0x3FFF
	word16 cx_363 = 0x0007
	word16 bx_365 = 0x6EBC
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:0x40 bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D0D:
	branch Mem362[0x0800:bx_365:word16] != Mem362[ss:fp - 0x000A:word16] l0800_6D1E
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D15:
	word16 ax_385 = Mem362[0x0800:bx_365 + 0x000E:word16]
	branch ax_385 == Mem362[ss:fp - 0x0018:word16] l0800_6D26
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D26:
	word16 sp_389
	word16 bp_390
	selector ss_391
	byte SCZO_392
	word16 si_393
	byte al_394
	selector ds_395
	byte ah_396
	byte cl_397
	word16 ax_398
	byte dl_399
	byte dh_400
	word16 dx_401
	byte SZO_402
	byte C_403
	byte Z_404
	word16 cx_405
	word16 bx_406
	call Mem362[0x0800:bx_365 + 0x001C:word16] (retsize: 4; depth: 4)
		uses: ah_336,al_335,ax_385,bp_5,bx_366,C_360,cl_368,cx_367,dh_306,dl_305,ds_350,dx_356,SCZO_387,si_333,sp_352,ss,SZO_359,wLoc02_4,wLoc1C_9,wLoc1E_58,wLoc20_60,Z_388
		defs: ah_396,al_394,ax_398,bp_390,bx_406,C_403,cl_397,cx_405,dh_400,dl_399,ds_395,dx_401,SCZO_392,si_393,sp_389,ss_391,SZO_402,Z_404
	return ds_395
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D1E:
	bx_365 = bx_365 + 0x0002
	cx_363 = cx_363 - 0x0001
	branch cx_363 != 0x0000 l0800_6D0D
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D23:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6E8B:
	return ds_350
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6B1B:
	return ds_61
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp

l0800_6AFC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp

fn0800_6AD4_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):ds -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_75EA(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_75EA_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_75EA:
	Mem14[ds:0x4680:word16] = wArg04
	Mem16[ds:0x467E:word16] = wArg02
	Mem17[ds:0x2A05:word16] = wArg04
	Mem18[ds:0x2A03:word16] = wArg02
	Mem19[ds:0x4678:word16] = wArg04
	Mem20[ds:0x4676:word16] = wArg02
	ui32 ax_dx_28 = SEQ(wArg08, wArg06 - 0x0012)
	Mem33[ds:0x4E86:word16] = SLICE(ax_dx_28 - 0x00000012, word16, 16)
	Mem34[ds:0x4E84:word16] = (word16) (ax_dx_28 - 0x00000012)
	branch Mem34[ds:0x4680:word16] >u 0x0000 l0800_7634
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_7626:
	branch Mem34[ds:0x4680:word16] == 0x0000 l0800_762B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_762B:
	branch wArg02 >u 0x0012 l0800_7634
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_7634:
	Mem66[ds:0x2E4B:word16] = 0x0000
	Mem67[ds:0x2E49:word16] = 0x0000
	Mem68[ds:0x465C:word16] = 0x0000
	Mem69[ds:0x4668:word16] = 0x0000
	Mem70[ds:0x4666:word16] = 0x0000
	Mem71[ds:0x2A05:word16] = 0x0000
	Mem72[ds:0x2A03:word16] = 0x0000
	Mem73[ds:0x2A01:word16] = 0x0000
	Mem74[ds:0x29FF:word16] = 0x0000
	Mem75[ds:0x467C:word16] = 0x0000
	Mem76[ds:0x467A:word16] = 0x0000
	Mem77[ds:0x4674:word16] = 0x0000
	Mem78[ds:0x4672:word16] = 0x0000
	Mem79[ds:0x2E43:word16] = 0x0000
	Mem80[ds:0x2E45:word16] = 0x0000
	Mem81[ds:0x4E82:word16] = 0x0000
	Mem82[ds:0x4E8A:word16] = 0x0000
	Mem83[ds:0x4E88:word16] = 0x0000
	Mem84[ds:0x29F9:word16] = 0x0000
	Mem85[ds:0x29F7:word16] = 0x0000
	selector ds_92 = fn0800_4311(ds, 0x000F, 0x0001)
	Mem95[ss:fp - 0x0016:word16] = 0x000F
	Mem96[ss:fp - 0x0018:word16] = 0x0001
	Mem99[ds_92:0x2E73:word16] = 0x0010
	Mem100[ds_92:0x2E71:word16] = 0x0000
	Mem104[ss:fp - 0x001C:word16] = 0x0001
	Mem106[ss:fp - 0x001E:word16] = 0x0010
	selector ds_108 = fn0800_4311(ds_92, wArg00, wArg02)
	Mem111[ss:fp - 0x0012:word16] = 0x0010
	Mem112[ss:fp - 0x0014:word16] = 0x0001
	Mem115[ds_108:0x2E39:word16] = 0x0011
	Mem116[ds_108:0x2E37:word16] = 0x0000
	Mem120[ss:fp - 0x001C:word16] = 0x0001
	Mem122[ss:fp - 0x001E:word16] = 0x0010
	selector ds_123 = fn0800_4311(ds_108, wArg00, wArg02)
	Mem126[ss:fp - 0x000E:word16] = 0x0010
	Mem127[ss:fp - 0x0010:word16] = 0x0001
	Mem130[ds_123:0x2E35:word16] = 0x0011
	Mem131[ds_123:0x2E33:word16] = 0x0000
	Mem135[ss:fp - 0x001C:word16] = 0x0001
	Mem137[ss:fp - 0x001E:word16] = 0x0010
	selector ds_138 = fn0800_4311(ds_123, wArg00, wArg02)
	Mem141[ss:fp - 0x000A:word16] = 0x0010
	Mem142[ss:fp - 0x000C:word16] = 0x0001
	Mem145[ds_138:0x2E41:word16] = 0x0011
	Mem146[ds_138:0x2E3F:word16] = 0x0000
	Mem150[ss:fp - 0x001C:word16] = 0x0001
	Mem152[ss:fp - 0x001E:word16] = 0x0010
	selector ds_153 = fn0800_4311(ds_138, wArg00, wArg02)
	Mem156[ss:fp - 0x0006:word16] = 0x0010
	Mem157[ss:fp - 0x0008:word16] = 0x0001
	Mem161[ds_153:0x2E3D:word16] = 0x0011
	Mem162[ds_153:0x2E3B:word16] = 0x0000
	fn0800_87F8(ds_153)
	Mem164[ss:fp - 0x001C:word16] = Mem162[ds_153:0x29E5:word16]
	Mem166[ss:fp - 0x001E:word16] = Mem164[ds_153:0x29E3:word16]
	word16 si_168
	word16 ax_169 = fn0800_AD2F(ds_153, ptrArg00, wArg02, out si_168)
	Mem172[ds_153:0x4664:word16] = 0x0011
	Mem173[ds_153:0x4662:word16] = ax_169
	Mem175[ss:fp - 0x001C:word16] = Mem173[ds_153:0x29E1:word16]
	Mem177[ss:fp - 0x001E:word16] = Mem175[ds_153:0x29DF:word16]
	word16 si_178
	word16 ax_179 = fn0800_AD2F(ds_153, ptrArg00, wArg02, out si_178)
	Mem181[ds_153:0x4660:word16] = 0x0011
	Mem182[ds_153:0x465E:word16] = ax_179
	Mem184[ss:fp - 0x001C:word16] = Mem182[ds_153:0x29E1:word16]
	Mem186[ss:fp - 0x001E:word16] = Mem184[ds_153:0x29DF:word16]
	ui32 dx_fp_159 = SEQ(0x0011, fp)
	word16 ax_189 = (word16) (int32) Mem186[ds_153:0x2A21:word16]
	word16 sp_194 = (word16) (dx_fp_159 - 0x524E001C)
	Mem197[ss:sp_194 - 0x0002:word16] = SLICE(dx_fp_159 - 0x524E001C, word16, 16)
	Mem199[ss:sp_194 - 0x0004:word16] = ax_189 + 0x4300
	selector ds_200 = fn0800_409C(fp - 0x0002, ds_153, wArg02, wArg04, wArg06)
	Mem204[ss:sp_194 + 0x0002:word16] = Mem199[ds_200:0x29E1:word16]
	Mem206[ss:sp_194:word16] = Mem204[ds_200:0x29DF:word16]
	Mem208[ss:sp_194 - 0x0002:word16] = Mem206[ds_200:0x4680:word16]
	Mem210[ss:sp_194 - 0x0004:word16] = Mem208[ds_200:0x467E:word16]
	selector ds_211 = fn0800_409C(fp - 0x0002, ds_200, wArg02, wArg04, wArg06)
	Mem214[ss:sp_194 + 0x0002:word16] = Mem210[ds_211:0x29E1:word16]
	Mem216[ss:sp_194:word16] = Mem214[ds_211:0x29DF:word16]
	Mem221[ss:sp_194 - 0x0002:word16] = 0x0000
	Mem223[ss:sp_194 - 0x0004:word16] = 0x0000
	selector ds_224 = fn0800_409C(fp - 0x0002, ds_211, wArg02, wArg04, wArg06)
	Mem227[ss:sp_194 + 0x0002:word16] = Mem223[ds_224:0x29E1:word16]
	Mem229[ss:sp_194:word16] = Mem227[ds_224:0x29DF:word16]
	Mem234[ss:sp_194 - 0x0002:word16] = 0x0000
	selector ds_235 = fn0800_401E(fp - 0x0002, ds_224, wArg00, wArg02, wArg04)
	Mem238[ss:sp_194 + 0x0002:word16] = Mem234[ds_235:0x29E1:word16]
	Mem240[ss:sp_194:word16] = Mem238[ds_235:0x29DF:word16]
	Mem245[ss:sp_194 - 0x0002:word16] = 0x0000
	selector ds_246 = fn0800_401E(fp - 0x0002, ds_235, wArg00, wArg02, wArg04)
	Mem249[ss:sp_194 + 0x0002:word16] = Mem245[ds_246:0x29E1:word16]
	Mem251[ss:sp_194:word16] = Mem249[ds_246:0x29DF:word16]
	Mem256[ss:sp_194 - 0x0002:word16] = 0x0000
	selector ds_257 = fn0800_401E(fp - 0x0002, ds_246, wArg00, wArg02, wArg04)
	Mem261[ss:sp_194 + 0x0002:word16] = ds_257
	Mem264[ss:sp_194:word16] = 0x2240
	word16 di_265
	fn0800_B2EF(ds_257, wArg00, wArg02, out di_265)
	Mem269[ss:fp - 0x0004:word16] = Mem264[ds_257:0x2E4F:word16]
	Mem277[ss:sp_194 + 0x0002:word16] = 0x0001
	word16 ax_270 = 0x0001
	branch Mem277[ds_257:0x2A1F:word16] == 0x0000 l0800_7808
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7808:
	ax_270 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7806:
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_780A:
	Mem284[ss:sp_194:word16] = ax_270
	selector ds_285 = fn0800_8465(ds_257, wArg00, wArg02)
	Mem294[ss:sp_194 + 0x0002:word16] = 0x0001
	word16 ax_287 = 0x0001
	branch Mem294[ds_285:0x2E4F:word16] == 0x0000 l0800_781E
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781E:
	ax_287 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781C:
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7820:
	Mem304[ss:sp_194:word16] = ax_287
	selector ds_305 = fn0800_8465(ds_285, wArg00, wArg02)
	word16 sp_306 = sp_194 + 0x0004
	branch Mem304[ds_305:0x2A23:word16] == 0x0001 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_782E:
	branch Mem304[ds_305:0x2E4F:word16] == 0x0000 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7835:
	Mem612[ss:sp_194 + 0x0002:word16] = 0x0010
	Mem614[ss:sp_194:word16] = Mem612[ds_305:0x2E4F:word16]
	ds_305 = fn0800_8465(ds_305, wArg00, wArg02)
	sp_306 = sp_194 + 0x0004
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7843:
	word16 ax_314 = Mem304[ds_305:0x2A21:word16]
	branch ax_314 == 0x0001 l0800_7852
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7852:
	ds_305 = fn0800_7A02(fp - 0x0002, ds_305)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_784B:
	branch ax_314 == 0x0002 l0800_7857
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7857:
	ds_305 = fn0800_7C78(fp - 0x0002, ds_305)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7850:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785A:
	word16 si_324 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7870:
	branch Mem304[ds_305:0x4E82:word16] != 0x0000 l0800_785E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785E:
	ax_314 = DPB(ax_314, Mem304[ds_305:si_324 + 0x4682:byte], 0) (alias)
	word16 sp_592 = sp_306 - 0x0002
	Mem593[ss:sp_592:word16] = ax_314
	word16 di_594
	si_324 = fn0800_8624(ds_305, bArg00, out di_594, out ds_305)
	Mem602[ds_305:0x4E82:word16] = Mem593[ds_305:0x4E82:word16] - 0x0001
	sp_306 = sp_592 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7877:
	Mem341[ds_305:0x2E4F:word16] = Mem304[ss:fp - 0x0004:word16]
	word16 dx_344 = Mem341[ds_305:0x467E:word16] - Mem341[ds_305:0x2A03:word16]
	word16 ax_350 = Mem341[ds_305:0x4680:word16] - Mem341[ds_305:0x2A05:word16] - (dx_344 <u 0x0000)
	branch ax_350 >u Mem341[ds_305:0x4E8A:word16] l0800_78B3
// DataOut: ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7892:
	branch ax_350 <u Mem341[ds_305:0x4E8A:word16] l0800_789A
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7894:
	branch dx_344 >=u Mem341[ds_305:0x4E88:word16] l0800_78B3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78B3:
	Mem568[ds_305:0x4E8A:word16] = 0x0000
	Mem569[ds_305:0x4E88:word16] = 0x0000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_789A:
	dx_344 = Mem341[ds_305:0x467E:word16] - Mem341[ds_305:0x2A03:word16]
	word16 ax_576 = Mem341[ds_305:0x4680:word16] - Mem341[ds_305:0x2A05:word16] - (dx_344 <u 0x0000)
	word16 v15_578 = Mem341[ds_305:0x4E88:word16] - dx_344
	Mem579[ds_305:0x4E88:word16] = v15_578
	Mem583[ds_305:0x4E8A:word16] = Mem579[ds_305:0x4E8A:word16] - ax_576 - (v15_578 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78BF:
	branch Mem341[ds_305:0x2A21:word16] != 0x0002 l0800_78D0
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78C6:
	word16 v20_559 = Mem341[ds_305:0x4E88:word16] + 0x0002
	Mem560[ds_305:0x4E88:word16] = v20_559
	Mem564[ds_305:0x4E8A:word16] = Mem560[ds_305:0x4E8A:word16] + (v20_559 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78D0:
	word16 sp_366 = sp_306 - 0x0002
	Mem367[ss:sp_366:word16] = Mem341[ds_305:0x29E1:word16]
	Mem369[ss:sp_366 - 0x0002:word16] = Mem367[ds_305:0x29DF:word16]
	word16 si_370
	word16 ax_373 = fn0800_AD2F(ds_305, ptrArg00, wArg02, out si_370) - Mem369[ds_305:0x465E:word16]
	Mem377[ds_305:0x2A05:word16] = dx_344 - Mem369[ds_305:0x4660:word16] - (ax_373 <u 0x0000)
	Mem378[ds_305:0x2A03:word16] = ax_373
	Mem381[ss:sp_366:word16] = 0x0000
	ui32 ax_dx_385 = SEQ(Mem381[ds_305:0x4660:word16], Mem381[ds_305:0x465E:word16] + 0x0008)
	Mem392[ss:sp_366 - 0x0002:word16] = SLICE(ax_dx_385 + 0x00000008, word16, 16)
	Mem394[ss:sp_366 - 0x0004:word16] = (word16) (ax_dx_385 + 0x00000008)
	Mem396[ss:sp_366 - 0x0006:word16] = Mem394[ds_305:0x29E1:word16]
	Mem398[ss:sp_366 - 0x0008:word16] = Mem396[ds_305:0x29DF:word16]
	selector ds_399
	fn0800_ACB3(fp - 0x0002, ds_305, ptrArg00, wArg02, wArg08, out ds_399)
	Mem403[ss:sp_366:word16] = Mem398[ds_399:0x29E1:word16]
	Mem405[ss:sp_366 - 0x0002:word16] = Mem403[ds_399:0x29DF:word16]
	ui32 ax_dx_409 = SEQ(Mem405[ds_399:0x2A05:word16], Mem405[ds_399:0x2A03:word16] - 0x0012)
	word16 ax_412 = SLICE(ax_dx_409 - 0x00000012, word16, 16)
	Mem416[ss:sp_366 - 0x0004:word16] = ax_412
	Mem418[ss:sp_366 - 0x0006:word16] = (word16) (ax_dx_409 - 0x00000012)
	selector ds_419 = fn0800_409C(fp - 0x0002, ds_399, wArg02, wArg04, wArg06)
	Mem423[ss:sp_366:word16] = Mem418[ds_419:0x29E1:word16]
	Mem425[ss:sp_366 - 0x0002:word16] = Mem423[ds_419:0x29DF:word16]
	Mem427[ss:sp_366 - 0x0004:word16] = Mem425[ds_419:0x2E4B:word16]
	selector ds_428 = fn0800_401E(fp - 0x0002, ds_419, wArg00, wArg02, wArg04)
	Mem432[ss:sp_366:word16] = Mem427[ds_428:0x29E1:word16]
	Mem434[ss:sp_366 - 0x0002:word16] = Mem432[ds_428:0x29DF:word16]
	Mem436[ss:sp_366 - 0x0004:word16] = Mem434[ds_428:0x2E49:word16]
	selector ds_437 = fn0800_401E(fp - 0x0002, ds_428, wArg00, wArg02, wArg04)
	Mem441[ss:sp_366:word16] = Mem436[ds_437:0x29E1:word16]
	Mem443[ss:sp_366 - 0x0002:word16] = Mem441[ds_437:0x29DF:word16]
	Mem447[ss:sp_366 - 0x0004:word16] = DPB(ax_412, Mem443[ds_437:0x4E88:byte], 0)
	selector ds_450
	fn0800_4047(ds_437, bArg00, ptrArg02, wArg04, out ds_450)
	Mem455[ss:sp_366:word16] = Mem447[ds_450:0x29E1:word16]
	Mem457[ss:sp_366 - 0x0002:word16] = Mem455[ds_450:0x29DF:word16]
	Mem461[ss:sp_366 - 0x0004:word16] = DPB(ax_412, Mem457[ds_450:0x29F7:byte], 0)
	selector ds_462
	fn0800_4047(ds_450, bArg00, ptrArg02, wArg04, out ds_462)
	Mem467[ss:sp_366:word16] = 0x0000
	word16 dx_470 = Mem467[ds_462:0x465E:word16] + Mem467[ds_462:0x2A03:word16]
	Mem476[ss:sp_366 - 0x0002:word16] = Mem467[ds_462:0x4660:word16] + Mem467[ds_462:0x2A05:word16] + (dx_470 <u 0x0000)
	Mem478[ss:sp_366 - 0x0004:word16] = dx_470
	Mem480[ss:sp_366 - 0x0006:word16] = Mem478[ds_462:0x29E1:word16]
	Mem482[ss:sp_366 - 0x0008:word16] = Mem480[ds_462:0x29DF:word16]
	selector ds_483
	fn0800_ACB3(fp - 0x0002, ds_462, ptrArg00, wArg02, wArg08, out ds_483)
	Mem488[ss:sp_366:word16] = 0x0000
	word16 dx_491 = Mem488[ds_483:0x4662:word16] + Mem488[ds_483:0x467E:word16]
	Mem497[ss:sp_366 - 0x0002:word16] = Mem488[ds_483:0x4664:word16] + Mem488[ds_483:0x4680:word16] + (dx_491 <u 0x0000)
	Mem499[ss:sp_366 - 0x0004:word16] = dx_491
	Mem501[ss:sp_366 - 0x0006:word16] = Mem499[ds_483:0x29E5:word16]
	Mem503[ss:sp_366 - 0x0008:word16] = Mem501[ds_483:0x29E3:word16]
	selector ds_504
	fn0800_ACB3(fp - 0x0002, ds_483, ptrArg00, wArg02, wArg08, out ds_504)
	Mem509[ss:sp_366:word16] = Mem503[ss:fp - 0x0016:word16]
	Mem511[ss:sp_366 - 0x0002:word16] = Mem509[ss:fp - 0x0018:word16]
	selector ds_512
	fn0800_4346(ds_504, wArg00, wArg02, out ds_512)
	Mem517[ss:sp_366:word16] = Mem511[ss:fp - 0x0012:word16]
	Mem519[ss:sp_366 - 0x0002:word16] = Mem517[ss:fp - 0x0014:word16]
	selector ds_520
	fn0800_4346(ds_512, wArg00, wArg02, out ds_520)
	Mem525[ss:sp_366:word16] = Mem519[ss:fp - 0x000E:word16]
	Mem527[ss:sp_366 - 0x0002:word16] = Mem525[ss:fp - 0x0010:word16]
	selector ds_528
	fn0800_4346(ds_520, wArg00, wArg02, out ds_528)
	Mem533[ss:sp_366:word16] = Mem527[ss:fp - 0x000A:word16]
	Mem535[ss:sp_366 - 0x0002:word16] = Mem533[ss:fp - 0x000C:word16]
	selector ds_536
	fn0800_4346(ds_528, wArg00, wArg02, out ds_536)
	Mem541[ss:sp_366:word16] = Mem535[ss:fp - 0x0006:word16]
	Mem543[ss:sp_366 - 0x0002:word16] = Mem541[ss:fp - 0x0008:word16]
	fn0800_4346(ds_536, wArg00, wArg02, out ds)
	Mem549[ss:sp_366:word16] = ds
	Mem552[ss:sp_366 - 0x0002:word16] = 0x223C
	word16 di_553
	fn0800_B2EF(ds, wArg00, wArg02, out di_553)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp

l0800_7631:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_7628:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_79FD:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp

fn0800_75EA_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp



selector fn0800_7A02(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7A02_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7A02:
	word16 sp_24 = fp - 0x0008
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7C1A:
	word16 ax_26 = Mem0[ds:0x467C:word16]
	word16 dx_27 = Mem0[ds:0x467A:word16]
	branch ax_26 >=u Mem0[ds:0x4680:word16] l0800_7C2A
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C2A:
	branch ax_26 != Mem0[ds:0x4680:word16] l0800_7C35
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C2C:
	branch dx_27 >=u Mem0[ds:0x467E:word16] l0800_7C35
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C35:
	Mem418[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] >>u 0x10 - Mem0[ds:0x2E45:byte]
	branch Mem418[ds:0x2E45:word16] != 0x0000 l0800_7C4D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C46:
	branch Mem418[ds:0x4E82:word16] == 0x0000 l0800_7C57
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C4D:
	word16 sp_458 = sp_24 - 0x0002
	Mem459[ss:sp_458:word16] = DPB(ax_26, Mem418[ds:0x2E43:byte], 0)
	word16 di_460
	fn0800_8624(ds, bArg00, out di_460, out ds)
	sp_24 = sp_458 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C57:
	branch Mem418[ds:0x2E45:word16] >u 0x0008 l0800_7C65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C5E:
	branch Mem418[ds:0x4E82:word16] == 0x0000 l0800_7C73
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C65:
	Mem447[ss:sp_24 - 0x0002:word16] = Mem418[ds:0x2E43:word16] >>u 0x08
	word16 di_448
	fn0800_8624(ds, bArg00, out di_448, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7C73:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7A02_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7C32:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C27:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7A19:
	word16 sp_34 = sp_24 - 0x0002
	Mem35[ss:sp_34:word16] = 0x0010
	Mem38[ss:sp_34 - 0x0002:word16] = ds
	Mem41[ss:sp_34 - 0x0004:word16] = 0x284F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	Mem49[ss:sp_34:word16] = 0x0010
	Mem51[ss:sp_34 - 0x0002:word16] = ds
	Mem54[ss:sp_34 - 0x0004:word16] = 0x278F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	Mem59[ss:sp_34:word16] = 0x0010
	Mem61[ss:sp_34 - 0x0002:word16] = ds
	Mem64[ss:sp_34 - 0x0004:word16] = 0x290F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	selector ds_67 = fn0800_7FDC(fp - 0x0002, ds)
	Mem72[ss:sp_34:word16] = 0x0000
	Mem74[ss:sp_34 - 0x0002:word16] = Mem72[ss:fp - 0x0004:word16]
	Mem76[ss:sp_34 - 0x0004:word16] = Mem74[ss:fp - 0x0006:word16]
	Mem78[ss:sp_34 - 0x0006:word16] = Mem76[ds_67:0x29E5:word16]
	Mem80[ss:sp_34 - 0x0008:word16] = Mem78[ds_67:0x29E3:word16]
	selector ds_83
	fn0800_ACB3(fp - 0x0002, ds_67, ptrArg00, psegArg02, wArg08, out ds_83)
	Mem89[ss:sp_34:word16] = 0x0010
	Mem91[ss:sp_34 - 0x0002:word16] = ds_83
	Mem94[ss:sp_34 - 0x0004:word16] = 0x290F
	fn0800_441C(fp - 0x0002, ds_83, ptrArg00, psegArg02, wArg04)
	Mem99[ss:sp_34:word16] = 0x0010
	Mem101[ss:sp_34 - 0x0002:word16] = ds_83
	Mem104[ss:sp_34 - 0x0004:word16] = 0x284F
	fn0800_441C(fp - 0x0002, ds_83, ptrArg00, psegArg02, wArg04)
	Mem109[ss:sp_34:word16] = 0x0010
	Mem111[ss:sp_34 - 0x0002:word16] = ds_83
	Mem114[ss:sp_34 - 0x0004:word16] = 0x278F
	fn0800_441C(fp - 0x0002, ds_83, ptrArg00, psegArg02, wArg04)
	Mem119[ss:sp_34:word16] = 0x0010
	Mem121[ss:sp_34 - 0x0002:word16] = ds_83
	Mem124[ss:sp_34 - 0x0004:word16] = 0x290F
	selector ds_125 = fn0800_83A1(fp - 0x0002, ds_83, ptrArg00, wArg04)
	Mem130[ss:sp_34:word16] = 0x0010
	Mem132[ss:sp_34 - 0x0002:word16] = ds_125
	Mem135[ss:sp_34 - 0x0004:word16] = 0x284F
	selector ds_136 = fn0800_83A1(fp - 0x0002, ds_125, ptrArg00, wArg04)
	Mem141[ss:sp_34:word16] = 0x0010
	Mem143[ss:sp_34 - 0x0002:word16] = ds_136
	Mem146[ss:sp_34 - 0x0004:word16] = 0x278F
	selector ds_147 = fn0800_83A1(fp - 0x0002, ds_136, ptrArg00, wArg04)
	Mem152[ss:sp_34:word16] = 0x0010
	Mem154[ss:sp_34 - 0x0002:word16] = Mem152[ds_147:0x466A:word16]
	ds = fn0800_8489(fp - 0x0002, ds_147, wArg00)
	word16 sp_156 = sp_34 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BC0:
	word16 ax_164 = Mem154[ds:0x466A:word16]
	word16 dx_165 = Mem154[ds:0x466C:word16]
	word16 v13_166 = Mem154[ds:0x466A:word16] - 0x0001
	Mem167[ds:0x466A:word16] = v13_166
	Mem171[ds:0x466C:word16] = Mem167[ds:0x466C:word16] - (v13_166 <u 0x0000)
	branch (ax_164 | dx_165) == 0x0000 l0800_7BD8
	word16 ax_175 = Mem171[ds:0x466A:word16]
	word16 dx_176 = Mem171[ds:0x466C:word16]
	word16 v30_177 = Mem171[ds:0x466A:word16] - 0x0001
	Mem178[ds:0x466A:word16] = v30_177
	Mem182[ds:0x466C:word16] = Mem178[ds:0x466C:word16] - (v30_177 <u 0x0000)
	word16 ax_183 = ax_175 | dx_176
	branch ax_183 == 0x0000 l0800_7BD8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BD8:
	branch Mem182[ds:0x2E45:word16] != 0x0000 l0800_7BFC
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BDF:
	word16 si_386 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BF5:
	branch Mem182[ds:0x4E82:word16] != 0x0000 l0800_7BE3
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BE3:
	al = Mem182[ds:si_386 + 0x4682:byte]
	ax_183 = DPB(ax_183, al, 0) (alias)
	word16 sp_404 = sp_156 - 0x0002
	Mem405[ss:sp_404:word16] = ax_183
	word16 di_406
	si_386 = fn0800_8624(ds, bArg00, out di_406, out ds)
	Mem412[ds:0x4E82:word16] = Mem405[ds:0x4E82:word16] - 0x0001
	sp_156 = sp_404 + 0x0002
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BFC:
	word16 v21_369 = Mem182[ds:0x29F7:word16] + 0x0001
	Mem370[ds:0x29F7:word16] = v21_369
	Mem374[ds:0x29F9:word16] = Mem370[ds:0x29F9:word16] + (v21_369 <u 0x0000)
	word16 sp_376 = sp_156 - 0x0002
	Mem377[ss:sp_376:word16] = Mem374[ds:0x29E5:word16]
	Mem379[ss:sp_376 - 0x0002:word16] = Mem377[ds:0x29E3:word16]
	word16 si_380
	word16 ax_381 = fn0800_AD2F(ds, ptrArg00, psegArg02, out si_380)
	Mem384[ss:fp - 0x0004:word16] = dx_176
	Mem385[ss:fp - 0x0006:word16] = ax_381
	sp_24 = sp_376 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> si:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> di:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BD5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7ACB:
	word16 sp_187 = sp_156 - 0x0002
	Mem188[ss:sp_187:word16] = Mem182[ds:0x29DD:word16]
	Mem190[ss:sp_187 - 0x0002:word16] = Mem188[ds:0x29DB:word16]
	word16 si_191
	word16 di_192
	selector ds_193
	word16 ax_194 = fn0800_3E27(fp - 0x0002, ds, wArg00, psegArg02, out si_191, out di_192, out ds_193)
	Mem196[ds_193:0x2E47:word16] = ax_194
	word16 v18_197 = Mem196[ds_193:0x467A:word16] + ax_194
	Mem198[ds_193:0x467A:word16] = v18_197
	Mem202[ds_193:0x467C:word16] = Mem198[ds_193:0x467C:word16] + (v18_197 <u 0x0000)
	Mem205[ss:sp_187:word16] = ds_193
	Mem208[ss:sp_187 - 0x0002:word16] = 0x290F
	Mem210[ss:sp_187 - 0x0004:word16] = Mem208[ds_193:0x2E47:word16]
	ds = fn0800_8407(fp - 0x0002, ds_193, wArg00, ptrArg02)
	sp_156 = sp_187 + 0x0002
	branch Mem210[ds:0x2E47:word16] == 0x0000 l0800_7B56
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7AFB:
	branch Mem210[ds:0x2E45:word16] == 0x0000 l0800_7B32
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B32:
	word16 ax_340 = Mem210[ds:0x2E47:word16]
	Mem342[ds:0x2E47:word16] = Mem210[ds:0x2E47:word16] - 0x0001
	branch ax_340 != 0x0000 l0800_7B24
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B24:
	selector ds_347 = fn0800_8359(ds)
	al = al ^ Mem342[ds_347:0x2E4F:byte]
	word16 sp_352 = sp_156 - 0x0002
	Mem353[ss:sp_352:word16] = DPB(ax_340, al, 0)
	word16 di_355
	fn0800_8624(ds_347, bArg00, out di_355, out ds)
	sp_156 = sp_352 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B17:
	word16 ax_319 = Mem210[ds:0x2E47:word16]
	Mem321[ds:0x2E47:word16] = Mem210[ds:0x2E47:word16] - 0x0001
	branch ax_319 != 0x0000 l0800_7B04
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B04:
	ds = fn0800_8359(ds)
	al = al ^ Mem321[ds:0x2E4F:byte]
	Mem330[ds:Mem321[ds:0x4E82:word16] + 0x4682:byte] = al
	Mem332[ds:0x4E82:word16] = Mem330[ds:0x4E82:word16] + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B22:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> si:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B3D:
	branch (Mem210[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
	branch (Mem210[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B52:
	Mem314[ds:0x2E4F:word16] = Mem210[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B45:
	Mem306[ds:0x2E4F:word16] = Mem210[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem312[ds:0x2E4F:word16] = Mem306[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> di:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B56:
	branch (Mem210[ds:0x466A:word16] | Mem210[ds:0x466C:word16]) == 0x0000 l0800_7BC0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B5F:
	word16 sp_228 = sp_156 - 0x0002
	Mem229[ss:sp_228:word16] = Mem210[ds:0x29DD:word16]
	Mem231[ss:sp_228 - 0x0002:word16] = Mem229[ds:0x29DB:word16]
	word16 si_232
	word16 di_233
	selector ds_234
	word16 ax_235 = fn0800_3E27(fp - 0x0002, ds, wArg00, psegArg02, out si_232, out di_233, out ds_234)
	Mem238[ds_234:0x2E29:word16] = ax_235
	Mem240[ss:sp_228:word16] = Mem238[ds_234:0x29DD:word16]
	Mem242[ss:sp_228 - 0x0002:word16] = Mem240[ds_234:0x29DB:word16]
	word16 si_243
	word16 di_244
	selector ds_245
	word16 ax_246 = fn0800_3E27(fp - 0x0002, ds_234, wArg00, psegArg02, out si_243, out di_244, out ds_245)
	Mem249[ds_245:0x2E2B:word16] = ax_246
	Mem251[ss:sp_228:word16] = ds_245
	Mem254[ss:sp_228 - 0x0002:word16] = 0x284F
	Mem256[ss:sp_228 - 0x0004:word16] = Mem254[ds_245:0x2E2B:word16]
	selector ds_257 = fn0800_8407(fp - 0x0002, ds_245, wArg00, ptrArg02)
	Mem261[ss:sp_228:word16] = ds_257
	Mem264[ss:sp_228 - 0x0002:word16] = 0x278F
	Mem266[ss:sp_228 - 0x0004:word16] = Mem264[ds_257:0x2E29:word16]
	ds = fn0800_8407(fp - 0x0002, ds_257, wArg00, ptrArg02)
	Mem270[ds:0x2E29:word16] = Mem266[ds:0x2E29:word16] + 0x0002
	word16 v24_272 = Mem270[ds:0x467A:word16] + Mem270[ds:0x2E29:word16]
	Mem273[ds:0x467A:word16] = v24_272
	Mem277[ds:0x467C:word16] = Mem273[ds:0x467C:word16] + (v24_272 <u 0x0000)
	sp_156 = sp_228 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BB5:
	word16 ax_280 = Mem277[ds:0x2E29:word16]
	Mem282[ds:0x2E29:word16] = Mem277[ds:0x2E29:word16] - 0x0001
	branch ax_280 != 0x0000 l0800_7BB2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BB2:
	ds = fn0800_8359(ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7C78(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7C78_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7C78:
	word16 sp_28 = fp - 0x0008
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7E6D:
	word16 ax_30 = Mem0[ds:0x467C:word16]
	word16 dx_31 = Mem0[ds:0x467A:word16]
	branch ax_30 >=u Mem0[ds:0x4680:word16] l0800_7E7D
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7D:
	branch ax_30 != Mem0[ds:0x4680:word16] l0800_7E88
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7F:
	branch dx_31 >=u Mem0[ds:0x467E:word16] l0800_7E88
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E88:
	Mem401[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] << 0x08 - Mem0[ds:0x2E45:byte]
	branch Mem401[ds:0x2E45:word16] != 0x0000 l0800_7EA0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E99:
	branch Mem401[ds:0x4E82:word16] == 0x0000 l0800_7EAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EA0:
	Mem419[ss:sp_28 - 0x0002:word16] = DPB(ax_30, Mem401[ds:0x2E43:byte], 0)
	word16 di_420
	fn0800_8624(ds, bArg00, out di_420, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7EAA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7C78_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7E85:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7A:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C8F:
	selector ds_37 = fn0800_7FDC(fp - 0x0002, ds)
	word16 sp_41 = sp_28 - 0x0002
	Mem42[ss:sp_41:word16] = 0x0000
	Mem45[ss:sp_41 - 0x0002:word16] = Mem42[ss:fp - 0x0004:word16]
	Mem47[ss:sp_41 - 0x0004:word16] = Mem45[ss:fp - 0x0006:word16]
	Mem49[ss:sp_41 - 0x0006:word16] = Mem47[ds_37:0x29E5:word16]
	Mem51[ss:sp_41 - 0x0008:word16] = Mem49[ds_37:0x29E3:word16]
	selector ds_110
	fn0800_ACB3(fp - 0x0002, ds_37, ptrArg00, wArg02, wArg08, out ds_110)
	word16 sp_111 = sp_41 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DCD:
	word16 ax_67 = Mem51[ds_110:0x466A:word16]
	word16 dx_68 = Mem51[ds_110:0x466C:word16]
	word16 v13_69 = Mem51[ds_110:0x466A:word16] - 0x0001
	Mem70[ds_110:0x466A:word16] = v13_69
	Mem74[ds_110:0x466C:word16] = Mem70[ds_110:0x466C:word16] - (v13_69 <u 0x0000)
	branch (ax_67 | dx_68) == 0x0000 l0800_7DE5
	word16 ax_78 = Mem74[ds_110:0x466A:word16]
	word16 dx_79 = Mem74[ds_110:0x466C:word16]
	word16 v32_80 = Mem74[ds_110:0x466A:word16] - 0x0001
	Mem81[ds_110:0x466A:word16] = v32_80
	Mem85[ds_110:0x466C:word16] = Mem81[ds_110:0x466C:word16] - (v32_80 <u 0x0000)
	branch (ax_78 | dx_79) == 0x0000 l0800_7DE5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE5:
	word16 ax_301
	word16 sp_300
	word16 sp_277 = sp_111 - 0x0002
	Mem278[ss:sp_277:word16] = 0x0004
	Mem281[ss:sp_277 - 0x0002:word16] = 0x000F
	selector ds_282 = fn0800_854B(fp - 0x0002, ds_110, bArg02)
	Mem288[ss:sp_277:word16] = 0x0000
	word16 di_289
	selector ds_290
	fn0800_8600(ds_282, bArg00, out di_289, out ds_290)
	word16 ax_293 = Mem288[ds_290:0x467C:word16]
	word16 dx_294 = Mem288[ds_290:0x467A:word16]
	branch ax_293 >u Mem288[ds_290:0x4680:word16] l0800_7E1E
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E09:
	branch ax_293 <u Mem288[ds_290:0x4680:word16] l0800_7E11
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E0B:
	branch dx_294 >=u Mem288[ds_290:0x467E:word16] l0800_7E1E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E1E:
	Mem377[ss:sp_277:word16] = 0x0001
	Mem382[ss:sp_277 - 0x0002:word16] = 0x0000
	ax_301 = 0x0000
	ds = fn0800_854B(fp - 0x0002, ds_290, bArg02)
	sp_300 = sp_277 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E11:
	Mem389[ss:sp_277:word16] = 0x0001
	Mem391[ss:sp_277 - 0x0002:word16] = 0x0001
	ax_301 = 0x0001
	ds = fn0800_854B(fp - 0x0002, ds_290, bArg02)
	sp_300 = sp_277 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E2B:
	branch Mem288[ds:0x2E45:word16] != 0x0000 l0800_7E4F
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E32:
	word16 si_347 = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E48:
	branch Mem288[ds:0x4E82:word16] != 0x0000 l0800_7E36
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E36:
	ax_301 = DPB(ax_301, Mem288[ds:si_347 + 0x4682:byte], 0) (alias)
	word16 sp_365 = sp_300 - 0x0002
	Mem366[ss:sp_365:word16] = ax_301
	word16 di_367
	si_347 = fn0800_8624(ds, bArg00, out di_367, out ds)
	Mem373[ds:0x4E82:word16] = Mem366[ds:0x4E82:word16] - 0x0001
	sp_300 = sp_365 + 0x0002
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E4F:
	word16 v21_314 = Mem288[ds:0x29F7:word16] + 0x0001
	Mem315[ds:0x29F7:word16] = v21_314
	Mem319[ds:0x29F9:word16] = Mem315[ds:0x29F9:word16] + (v21_314 <u 0x0000)
	word16 sp_321 = sp_300 - 0x0002
	Mem322[ss:sp_321:word16] = Mem319[ds:0x29E5:word16]
	Mem324[ss:sp_321 - 0x0002:word16] = Mem322[ds:0x29E3:word16]
	word16 si_325
	word16 ax_326 = fn0800_AD2F(ds, ptrArg00, wArg02, out si_325)
	Mem328[ss:fp - 0x0004:word16] = dx_294
	Mem329[ss:fp - 0x0006:word16] = ax_326
	word16 v23_330 = Mem329[ds:0x29F7:word16] + 0x0001
	Mem331[ds:0x29F7:word16] = v23_330
	Mem335[ds:0x29F9:word16] = Mem331[ds:0x29F9:word16] + (v23_330 <u 0x0000)
	Mem338[ss:sp_321:word16] = Mem335[ds:0x29E5:word16]
	Mem340[ss:sp_321 - 0x0002:word16] = Mem338[ds:0x29E3:word16]
	word16 si_341
	word16 ax_342 = fn0800_AD2F(ds, ptrArg00, wArg02, out si_341)
	Mem345[ss:fp - 0x0004:word16] = dx_294
	Mem346[ss:fp - 0x0006:word16] = ax_342
	sp_28 = sp_321 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> si:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CAC:
	word16 sp_90 = sp_111 - 0x0002
	Mem91[ss:sp_90:word16] = Mem85[ds_110:0x29DD:word16]
	Mem93[ss:sp_90 - 0x0002:word16] = Mem91[ds_110:0x29DB:word16]
	word16 si_95
	word16 di_96
	selector ds_97
	word16 ax_98 = fn0800_3E27(fp - 0x0002, ds_110, wArg00, wArg02, out si_95, out di_96, out ds_97)
	Mem100[ds_97:0x2E47:word16] = ax_98
	word16 v19_101 = Mem100[ds_97:0x467A:word16] + ax_98
	Mem102[ds_97:0x467A:word16] = v19_101
	Mem106[ds_97:0x467C:word16] = Mem102[ds_97:0x467C:word16] + (v19_101 <u 0x0000)
	Mem109[ss:sp_90:word16] = ax_98
	ds_110 = fn0800_7EAF(fp - 0x0002, ds_97, wArg00)
	sp_111 = sp_90 + 0x0002
	branch (Mem109[ds_110:0x466A:word16] | Mem109[ds_110:0x466C:word16]) != 0x0000 l0800_7CD9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD9:
	Mem118[ss:sp_90:word16] = Mem109[ds_110:0x29DD:word16]
	Mem120[ss:sp_90 - 0x0002:word16] = Mem118[ds_110:0x29DB:word16]
	word16 si_121
	word16 di_122
	selector ds_123
	word16 ax_124 = fn0800_3E27(fp - 0x0002, ds_110, wArg00, wArg02, out si_121, out di_122, out ds_123)
	Mem127[ds_123:0x2E29:word16] = ax_124
	Mem129[ss:sp_90:word16] = Mem127[ds_123:0x29DD:word16]
	Mem131[ss:sp_90 - 0x0002:word16] = Mem129[ds_123:0x29DB:word16]
	word16 si_132
	word16 di_133
	selector ds_134
	word16 ax_135 = fn0800_3E27(fp - 0x0002, ds_123, wArg00, wArg02, out si_132, out di_133, out ds_134)
	Mem137[ds_134:0x2E2B:word16] = ax_135
	branch Mem137[ds_134:0x2E29:word16] != 0x0000 l0800_7D1D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D1D:
	branch Mem137[ds_134:0x2E29:word16] >=u 0x0007 l0800_7D68
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D68:
	Mem232[ss:sp_90:word16] = 0x0004
	Mem235[ss:sp_90 - 0x0002:word16] = 0x000F
	selector ds_236 = fn0800_854B(fp - 0x0002, ds_134, bArg02)
	Mem243[ss:sp_90:word16] = DPB(0x000F, Mem235[ds_236:0x2E29:byte] - 0x06, 0)
	word16 di_244
	selector ds_245
	fn0800_8600(ds_236, bArg00, out di_244, out ds_245)
	word16 ax_254 = DPB(0x000F, Mem243[ds_245:(Mem243[ds_245:0x2E2B:word16] >>u 0x08) + 0x21F2:byte], 0)
	Mem256[ss:sp_90:word16] = ax_254
	word16 ax_259 = DPB(ax_254, 0x00, 8)
	Mem261[ss:sp_90 - 0x0002:word16] = ax_259
	selector ds_262 = fn0800_854B(fp - 0x0002, ds_245, bArg02)
	Mem270[ss:sp_90:word16] = DPB(ax_259, Mem261[ds_262:0x2E2B:byte] & 0xFF, 0)
	word16 di_271
	fn0800_8600(ds_262, bArg00, out di_271, out ds_110)
	sp_111 = sp_90 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D24:
	word16 ax_192 = DPB(ax_135, Mem137[ds_134:Mem137[ds_134:0x2E29:word16] + 0x21DB:byte], 0)
	Mem194[ss:sp_90:word16] = ax_192
	word16 ax_197 = DPB(ax_192, 0x00, 8)
	Mem199[ss:sp_90 - 0x0002:word16] = ax_197
	selector ds_200 = fn0800_854B(fp - 0x0002, ds_134, bArg02)
	word16 ax_208 = DPB(ax_197, Mem199[ds_200:(Mem199[ds_200:0x2E2B:word16] >>u 0x08) + 0x21F2:byte], 0)
	Mem210[ss:sp_90:word16] = ax_208
	word16 ax_213 = DPB(ax_208, 0x00, 8)
	Mem215[ss:sp_90 - 0x0002:word16] = ax_213
	selector ds_216 = fn0800_854B(fp - 0x0002, ds_200, bArg02)
	Mem224[ss:sp_90:word16] = DPB(ax_213, Mem215[ds_216:0x2E2B:byte] & 0xFF, 0)
	word16 di_225
	fn0800_8600(ds_216, bArg00, out di_225, out ds_110)
	sp_111 = sp_90 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D02:
	Mem170[ss:sp_90:word16] = 0x0003
	Mem173[ss:sp_90 - 0x0002:word16] = 0x0006
	selector ds_175 = fn0800_854B(fp - 0x0002, ds_134, bArg02)
	Mem181[ss:sp_90:word16] = DPB(0x0006, Mem173[ds_175:0x2E2B:byte], 0)
	word16 di_183
	fn0800_8600(ds_175, bArg00, out di_183, out ds_110)
	sp_111 = sp_90 + 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DAC:
	Mem150[ds_110:0x2E29:word16] = Mem137[ds_110:0x2E29:word16] + 0x0002
	word16 v26_152 = Mem150[ds_110:0x467A:word16] + Mem150[ds_110:0x2E29:word16]
	Mem153[ds_110:0x467A:word16] = v26_152
	Mem157[ds_110:0x467C:word16] = Mem153[ds_110:0x467C:word16] + (v26_152 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DC2:
	word16 ax_160 = Mem157[ds_110:0x2E29:word16]
	Mem162[ds_110:0x2E29:word16] = Mem157[ds_110:0x2E29:word16] - 0x0001
	branch ax_160 != 0x0000 l0800_7DBF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DBF:
	ds_110 = fn0800_8359(ds_110)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7EAF(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_7EAF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_7EAF:
	word16 sp_112 = fp - 0x0006
	word16 si_13 = wArg02
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7FD1:
	word16 si_122 = si_13
	branch si_13 == 0x0000 l0800_7FD8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FD8:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_7EAF_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_7FD5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EBA:
	branch si_13 >=u 0x000C l0800_7F32
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F32:
	branch (si_122 & 0x0003) != 0x0000 l0800_7EFD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EFD:
	word16 sp_208 = sp_112 - 0x0002
	Mem209[ss:sp_208:word16] = 0x0001
	Mem215[ss:sp_208 - 0x0002:word16] = 0x0000
	selector ds_219 = fn0800_8359(fn0800_854B(fp - 0x0002, ds, bArg02))
	al = Mem215[ds_219:0x2E4F:byte] ^ 0x00
	Mem225[ss:sp_208:word16] = (word16) al
	word16 di_226
	word16 si_228 = fn0800_8600(ds_219, bArg00, out di_226, out ds)
	sp_112 = sp_208 + 0x0002
	branch (Mem225[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F2D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F2D:
	Mem245[ds:0x2E4F:word16] = Mem225[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F20:
	Mem243[ds:0x2E4F:word16] = Mem225[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F31:
	si_122 = si_228 - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F38:
	word16 sp_96 = sp_112 - 0x0002
	Mem97[ss:sp_96:word16] = 0x0005
	Mem100[ss:sp_96 - 0x0002:word16] = 0x0017
	selector ds_101 = fn0800_854B(fp - 0x0002, ds, bArg02)
	branch si_122 <u 0x0048 l0800_7F8F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F8F:
	Mem159[ss:sp_96:word16] = 0x0004
	word16 ax_161 = si_122 - 0x000C
	Mem166[ss:sp_96 - 0x0002:word16] = ax_161 >>u 0x0002
	word16 ax_163 = ax_161 >>u 0x0002
	ds = fn0800_854B(fp - 0x0002, ds_101, bArg02)
	sp_112 = sp_96 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FB4:
	si_13 = si_122
	branch si_122 != 0x0000 l0800_7FA5
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FA5:
	selector ds_193 = fn0800_8359(ds)
	al = al ^ Mem166[ds_193:0x2E4F:byte]
	ax_163 = DPB(ax_163, al, 0) (alias)
	word16 sp_198 = sp_112 - 0x0002
	Mem199[ss:sp_198:word16] = ax_163
	sp_112 = sp_198 + 0x0002
	word16 di_200
	si_122 = fn0800_8600(ds_193, bArg00, out di_200, out ds) - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FB8:
	branch (Mem166[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7FCD
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FCD:
	Mem191[ds:0x2E4F:word16] = Mem166[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FC0:
	Mem189[ds:0x2E4F:word16] = Mem166[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F4B:
	Mem107[ss:sp_96:word16] = 0x0004
	Mem110[ss:sp_96 - 0x0002:word16] = 0x000F
	word16 ax_108 = 0x000F
	ds = fn0800_854B(fp - 0x0002, ds_101, bArg02)
	sp_112 = sp_96 + 0x0002
	word16 di_113 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F6C:
	branch di_113 != 0x0048 l0800_7F5D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F5D:
	selector ds_143 = fn0800_8359(ds)
	al = al ^ Mem110[ds_143:0x2E4F:byte]
	ax_108 = DPB(ax_108, al, 0) (alias)
	word16 sp_148 = sp_112 - 0x0002
	Mem149[ss:sp_148:word16] = ax_108
	word16 di_150
	si_122 = fn0800_8600(ds_143, bArg00, out di_150, out ds)
	sp_112 = sp_148 + 0x0002
	di_113 = di_150 + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F71:
	branch (Mem110[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F86
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F86:
	Mem141[ds:0x2E4F:word16] = Mem110[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F79:
	Mem139[ds:0x2E4F:word16] = Mem110[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F8A:
	si_13 = si_122 - 0x0048
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EBF:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF6:
	si_13 = si_122
	branch si_122 != 0x0000 l0800_7EC1
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EC1:
	word16 sp_43 = sp_112 - 0x0002
	Mem44[ss:sp_43:word16] = 0x0001
	Mem51[ss:sp_43 - 0x0002:word16] = 0x0000
	selector ds_56 = fn0800_8359(fn0800_854B(fp - 0x0002, ds, bArg02))
	al = Mem51[ds_56:0x2E4F:byte] ^ 0x00
	Mem62[ss:sp_43:word16] = (word16) al
	word16 di_64
	word16 si_66 = fn0800_8600(ds_56, bArg00, out di_64, out ds)
	sp_112 = sp_43 + 0x0002
	branch (Mem62[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7EF1
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF1:
	Mem83[ds:0x2E4F:word16] = Mem62[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EE4:
	Mem81[ds:0x2E4F:word16] = Mem62[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF5:
	si_122 = si_66 - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EFA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7FDC(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_7FDC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7FDC:
	Mem7[ds:0x466C:word16] = 0x0000
	Mem9[ds:0x466A:word16] = 0x0000
	Mem10[ds:0x2E47:word16] = 0x0000
	word16 dx_12 = Mem10[ds:0x2A0B:word16]
	Mem13[ds:0x4670:word16] = Mem10[ds:0x2A0D:word16]
	Mem14[ds:0x466E:word16] = dx_12
	selector ds_39
	fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc10, Mem14[ds:0x29E3:word16], 0), Mem14[ds:0x29E5:word16], 0x0000, out ds_39)
	Mem46[ss:fp - 0x0008:word16] = 0x0000
	Mem49[ss:fp - 0x000A:word16] = 0x0000
	Mem51[ss:fp - 0x000C:word16] = 0x0000
	Mem53[ss:fp - 0x000E:word16] = Mem51[ds_39:0x29DD:word16]
	Mem55[ss:fp - 0x0010:word16] = Mem53[ds_39:0x29DB:word16]
	selector ds_294
	fn0800_ACB3(fp - 0x0002, ds_39, ptrArg00, wArg02, wArg08, out ds_294)
	word16 bp_242 = fp - 0x0002
	word16 sp_295 = fp - 0x0006
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_82A1:
	branch (Mem55[ds_294:0x4676:word16] | Mem55[ds_294:0x4678:word16]) == 0x0000 l0800_82AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82AD:
	branch (Mem55[ds_294:0x4672:word16] | Mem55[ds_294:0x4674:word16]) == 0x0000 l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82B6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82AA:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8042:
	word16 dx_159 = 0xFFFF - Mem55[ds_294:0x2E31:word16]
	word16 dx_163 = dx_159 - Mem55[ds_294:0x4672:word16]
	Mem167[ss:bp_242 - 0x0002:word16] = 0x0000 - (dx_159 <u 0x0000) - Mem55[ds_294:0x4674:word16] - (dx_163 <u 0x0000)
	Mem168[ss:bp_242 - 0x0004:word16] = dx_163
	word16 ax_169 = Mem168[ds_294:0x4678:word16]
	word16 dx_170 = Mem168[ds_294:0x4676:word16]
	branch ax_169 >u Mem168[ss:bp_242 - 0x0002:word16] l0800_807C
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8068:
	branch ax_169 <u Mem168[ss:bp_242 - 0x0002:word16] l0800_806F
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_806A:
	branch dx_170 >=u Mem168[ss:bp_242 - 0x0004:word16] l0800_807C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_806F:
	word16 dx_480 = Mem168[ds_294:0x4676:word16]
	Mem481[ss:bp_242 - 0x0002:word16] = Mem168[ds_294:0x4678:word16]
	Mem482[ss:bp_242 - 0x0004:word16] = dx_480
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_807C:
	word16 dx_180 = Mem168[ds_294:0x2E71:word16] + Mem168[ds_294:0x2E31:word16]
	Mem181[ds_294:0x2E6F:word16] = Mem168[ds_294:0x2E73:word16]
	Mem182[ds_294:0x2E6D:word16] = dx_180
	word16 sp_183 = sp_295 - 0x0002
	Mem184[ss:sp_183:word16] = Mem182[ds_294:0x29E5:word16]
	Mem186[ss:sp_183 - 0x0002:word16] = Mem184[ds_294:0x29E3:word16]
	Mem188[ss:sp_183 - 0x0004:word16] = Mem186[ss:bp_242 - 0x0002:word16]
	Mem190[ss:sp_183 - 0x0006:word16] = Mem188[ss:bp_242 - 0x0004:word16]
	word16 ax_192 = Mem190[ds_294:0x2E6D:word16] + Mem190[ds_294:0x4672:word16]
	Mem195[ss:sp_183 - 0x0008:word16] = Mem190[ds_294:0x2E73:word16]
	Mem197[ss:sp_183 - 0x000A:word16] = ax_192
	word16 di_201
	selector ds_202
	word16 si_203 = fn0800_4110(ds_294, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_201, out ds_202)
	word16 dx_206 = Mem197[ss:bp_242 - 0x0004:word16]
	word16 ax_205 = Mem197[ss:bp_242 - 0x0002:word16]
	word16 v15_207 = Mem197[ds_202:0x4676:word16] - dx_206
	Mem208[ds_202:0x4676:word16] = v15_207
	Mem212[ds_202:0x4678:word16] = Mem208[ds_202:0x4678:word16] - ax_205 - (v15_207 <u 0x0000)
	word16 v17_213 = Mem212[ds_202:0x4672:word16] + dx_206
	Mem214[ds_202:0x4672:word16] = v17_213
	Mem218[ds_202:0x4674:word16] = Mem214[ds_202:0x4674:word16] + ax_205 + (v17_213 <u 0x0000)
	word16 ax_219 = Mem218[ds_202:0x2E6F:word16]
	word16 dx_221 = Mem218[ds_202:0x2E6D:word16] + Mem218[ds_202:0x4672:word16]
	Mem222[ds_202:0x2E67:word16] = ax_219
	Mem223[ds_202:0x2E65:word16] = dx_221
	Mem224[ds_202:0x2E6B:word16] = ax_219
	Mem225[ds_202:0x2E69:word16] = dx_221
	word16 sp_204 = sp_183 + 0x0002
	word16 ax_226 = Mem225[ds_202:0x4670:word16]
	word16 dx_227 = Mem225[ds_202:0x466E:word16]
	branch ax_226 <=u Mem225[ds_202:0x4674:word16] l0800_80ED
// DataOut: bp ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80ED:
	branch ax_226 <u Mem225[ds_202:0x4674:word16] l0800_80F8
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80EF:
	branch dx_227 <u Mem225[ds_202:0x4672:word16] l0800_80F8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80F8:
	word16 dx_471 = Mem225[ds_202:0x2E6D:word16] + Mem225[ds_202:0x466E:word16]
	Mem473[ds_202:0x2E67:word16] = Mem225[ds_202:0x2E6F:word16]
	Mem474[ds_202:0x2E65:word16] = dx_471
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80F5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80EA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:0x40 bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81E9:
	branch Mem225[ds_202:0x2E65:word16] - 0x0001 <=u Mem225[ds_202:0x2E6D:word16] l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81F3:
	branch Mem225[ds_202:0x466C:word16] >=u 0x0000 l0800_81FD
// DataOut: bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FD:
	branch Mem225[ds_202:0x466C:word16] != 0x0000 l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FF:
	branch Mem225[ds_202:0x466A:word16] >=u 0xFFFE l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8206:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_810D:
	fn0800_8832(ds_202)
	branch Mem225[ds_202:0x2E29:word16] <u 0x0002 l0800_8193
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8193:
	word16 sp_457 = sp_204 - 0x0002
	Mem458[ss:sp_457:word16] = 0x0001
	fn0800_89A8(ds_202, wArg00)
	Mem462[ds_202:0x2E47:word16] = Mem458[ds_202:0x2E47:word16] + 0x0001
	Mem464[ds_202:0x465C:word16] = Mem462[ds_202:0x465C:word16] + 0x0001
	sp_204 = sp_457 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8117:
	branch Mem225[ds_202:0x2E6D:word16] + Mem225[ds_202:0x2E29:word16] <=u Mem225[ds_202:0x2E65:word16] l0800_813F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8124:
	branch (Mem225[ds_202:0x466A:word16] | Mem225[ds_202:0x466C:word16]) == 0x0000 l0800_8130
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8130:
	Mem455[ds_202:0x2E29:word16] = Mem225[ds_202:0x2E65:word16] - Mem225[ds_202:0x2E6D:word16]
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_813F:
	word16 sp_394 = sp_204 - 0x0002
	Mem395[ss:sp_394:word16] = ds_202
	Mem398[ss:sp_394 - 0x0002:word16] = 0x290F
	Mem400[ss:sp_394 - 0x0004:word16] = Mem398[ds_202:0x2E47:word16]
	selector ds_401 = fn0800_831D(ds_202, wArg00, ptrArg02)
	Mem404[ss:sp_394:word16] = ds_401
	Mem407[ss:sp_394 - 0x0002:word16] = 0x278F
	Mem412[ss:sp_394 - 0x0004:word16] = Mem407[ds_401:0x2E29:word16] - 0x0002
	selector ds_413 = fn0800_831D(ds_401, wArg00, ptrArg02)
	Mem417[ss:sp_394:word16] = ds_413
	Mem420[ss:sp_394 - 0x0002:word16] = 0x284F
	Mem425[ss:sp_394 - 0x0004:word16] = Mem420[ds_413:0x2E2B:word16] - 0x0001
	ds_202 = fn0800_831D(ds_413, wArg00, ptrArg02)
	Mem430[ss:sp_394:word16] = Mem425[ds_202:0x2E29:word16]
	fn0800_89A8(ds_202, wArg00)
	word16 v23_432 = Mem430[ds_202:0x466A:word16] + 0x0001
	Mem433[ds_202:0x466A:word16] = v23_432
	Mem437[ds_202:0x466C:word16] = Mem433[ds_202:0x466C:word16] + (v23_432 <u 0x0000)
	Mem438[ds_202:0x2E47:word16] = 0x0000
	Mem441[ds_202:0x465C:word16] = Mem438[ds_202:0x465C:word16] + Mem438[ds_202:0x2E29:word16]
	sp_204 = sp_394 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81A5:
	branch Mem225[ds_202:0x465C:word16] <u 0x0400 l0800_81E9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81AD:
	word16 v28_346 = Mem225[ds_202:0x4666:word16] + Mem225[ds_202:0x465C:word16]
	Mem347[ds_202:0x4666:word16] = v28_346
	Mem351[ds_202:0x4668:word16] = Mem347[ds_202:0x4668:word16] + (v28_346 <u 0x0000)
	word16 sp_352 = sp_204 - 0x0002
	Mem353[ss:sp_352:word16] = Mem351[ds_202:0x4680:word16]
	Mem355[ss:sp_352 - 0x0002:word16] = Mem353[ds_202:0x467E:word16]
	word16 dx_362
	word16 ax_363 = fn0800_8F18(0x0063, Mem355[ds_202:0x4668:word16], 0x0000, Mem355[ds_202:0x4666:word16], out dx_362)
	Mem365[ss:sp_352 - 0x0004:word16] = dx_362
	Mem367[ss:sp_352 - 0x0006:word16] = ax_363
	word16 dx_368
	word16 si_370
	word16 di_371
	word16 ax_372 = fn0800_8BC2(bp_242, si_203, di_201, bp, out dx_368, out bp_242, out si_370, out di_371)
	Mem375[ss:sp_352:word16] = dx_368
	Mem377[ss:sp_352 - 0x0002:word16] = ax_372
	Mem379[ss:sp_352 - 0x0004:word16] = ds_202
	Mem382[ss:sp_352 - 0x0006:word16] = 0x2244
	si_203 = fn0800_B2EF(ds_202, wArg00, wArg02, out di_201)
	Mem387[ds_202:0x465C:word16] = 0x0000
	sp_204 = sp_352 + 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_812D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8209:
	word16 ax_255 = Mem225[ds_202:0x2E69:word16] - Mem225[ds_202:0x2E6D:word16]
	Mem259[ds_202:0x4674:word16] = 0x0000 - (ax_255 <u 0x0000)
	Mem260[ds_202:0x4672:word16] = ax_255
	word16 ax_263 = Mem260[ds_202:0x2E6D:word16] - Mem260[ds_202:0x2E71:word16]
	word16 ax_267 = ax_263 - Mem260[ds_202:0x2E31:word16]
	Mem271[ss:bp_242 - 0x0002:word16] = 0x0000 - (ax_263 <u 0x0000) - (ax_267 <u 0x0000)
	Mem272[ss:bp_242 - 0x0004:word16] = ax_267
	word16 ax_274 = Mem272[ds_202:0x2E71:word16] + Mem272[ss:bp_242 - 0x0004:word16]
	word16 sp_284 = sp_204 - 0x0002
	Mem285[ss:sp_284:word16] = Mem272[ds_202:0x2E6D:word16] - ax_274 + Mem272[ds_202:0x4672:word16]
	Mem287[ss:sp_284 - 0x0002:word16] = Mem285[ds_202:0x2E73:word16]
	Mem289[ss:sp_284 - 0x0004:word16] = ax_274
	Mem291[ss:sp_284 - 0x0006:word16] = Mem289[ds_202:0x2E73:word16]
	Mem293[ss:sp_284 - 0x0008:word16] = Mem291[ds_202:0x2E71:word16]
	ds_294 = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08)
	sp_295 = sp_284 + 0x0002
	branch Mem293[ds_294:0x2E65:word16] <u Mem293[ds_294:0x2E69:word16] l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8269:
	word16 dx_300 = Mem293[ds_294:0x2E65:word16]
	branch Mem293[ds_294:0x2E67:word16] != Mem293[ds_294:0x2E6B:word16] l0800_8285
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8276:
	branch dx_300 != Mem293[ds_294:0x2E69:word16] l0800_8285
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_827C:
	branch (Mem293[ds_294:0x4676:word16] | Mem293[ds_294:0x4678:word16]) == 0x0000 l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8285:
	branch Mem293[ds_294:0x466C:word16] != 0x0000 l0800_8293
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_828C:
	branch Mem293[ds_294:0x466A:word16] == 0xFFFE l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82B9:
	word16 dx_98 = Mem55[ds_294:0x2E65:word16]
	branch Mem55[ds_294:0x2E67:word16] != Mem55[ds_294:0x2E6B:word16] l0800_82ED
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82C6:
	branch dx_98 != Mem55[ds_294:0x2E69:word16] l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82CC:
	branch (Mem55[ds_294:0x4676:word16] | Mem55[ds_294:0x4678:word16]) != 0x0000 l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82D5:
	branch Mem55[ds_294:0x466C:word16] != 0x0000 l0800_82E3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82DC:
	branch Mem55[ds_294:0x466A:word16] == 0xFFFE l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82E3:
	Mem154[ds_294:0x2E47:word16] = Mem55[ds_294:0x2E47:word16] + Mem55[ds_294:0x4672:word16]
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82ED:
	word16 sp_104 = sp_295 - 0x0002
	Mem105[ss:sp_104:word16] = ds_294
	Mem108[ss:sp_104 - 0x0002:word16] = 0x290F
	Mem110[ss:sp_104 - 0x0004:word16] = Mem108[ds_294:0x2E47:word16]
	selector ds_113 = fn0800_831D(ds_294, wArg00, ptrArg02)
	word16 v13_115 = Mem110[ds_113:0x466A:word16] + 0x0001
	Mem116[ds_113:0x466A:word16] = v13_115
	Mem120[ds_113:0x466C:word16] = Mem116[ds_113:0x466C:word16] + (v13_115 <u 0x0000)
	Mem125[ss:sp_104:word16] = 0x0000
	Mem127[ss:sp_104 - 0x0002:word16] = 0x0000
	Mem129[ss:sp_104 - 0x0004:word16] = 0x0000
	Mem131[ss:sp_104 - 0x0006:word16] = Mem129[ds_113:0x29DD:word16]
	Mem133[ss:sp_104 - 0x0008:word16] = Mem131[ds_113:0x29DB:word16]
	selector ds_134
	fn0800_ACB3(bp_242, ds_113, ptrArg00, wArg02, wArg08, out ds_134)
	return ds_134
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7FDC_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_8293:
	word16 ax_311 = Mem293[ss:bp_242 - 0x0002:word16]
	word16 v21_313 = Mem293[ds_294:0x466E:word16] - Mem293[ss:bp_242 - 0x0004:word16]
	Mem314[ds_294:0x466E:word16] = v21_313
	Mem318[ds_294:0x4670:word16] = Mem314[ds_294:0x4670:word16] - ax_311 - (v21_313 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_831D(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_831D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(16) Stack +0004(32)

l0800_831D:
	word16 ax_13
	branch wArg02 <=u 0x0001 l0800_8332
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0004(32)

l0800_8332:
	ax_13 = wArg02
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8329:
	ax_13 = fn0800_0C08(wArg02)
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8334:
	word16 ax_16 = (word16) (ax_13 *s 0x000C)
	selector es_19 = SLICE(ptrArg04, selector, 16)
	word16 v14_22 = Mem0[es_19:ax_16 + 0x0002:word16] + 0x0001
	Mem23[es_19:ax_16 + 0x0002:word16] = v14_22
	Mem27[es_19:ax_16 + 0x0004:word16] = Mem23[es_19:ax_16 + 0x0004:word16] + (v14_22 <u 0x0000)
	return fn0800_401E(fp - 0x0002, ds, wArg02, Mem27[ds:0x29DB:word16], Mem27[ds:0x29DD:word16])
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_831D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_8359(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: al bp sp
fn0800_8359_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8359:
	word16 di_16
	selector ds_17
	word16 ax_18 = fn0800_3DCF(ds, DPB(ptrLoc08, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out di_16, out ds_17)
	Mem21[ss:fp - 0x0003:byte] = (byte) ax_18
	Mem35[ds_17:0x2E4B:word16] = Mem21[ds_17:((DPB(ax_18, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem21[ds_17:0x2E4B:word16] >>u 0x08
	word16 v15_36 = Mem35[ds_17:0x29FF:word16] + 0x0001
	Mem37[ds_17:0x29FF:word16] = v15_36
	Mem41[ds_17:0x2A01:word16] = Mem37[ds_17:0x2A01:word16] + (v15_36 <u 0x0000)
	return ds_17
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8359_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp



selector fn0800_83A1(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_83A1_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_83A1:
	word16 di_100 = wArg06
	word16 si_16 = wArg06
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83C4:
	si_16 = si_16 - 0x0001
	branch si_16 != 0x0000 l0800_83B0
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83B0:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + (word16) (si_16 *s 0x000C) + 0x000A:word16] != 0x0000 l0800_83CB
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83C3:
	di_100 = di_100 - 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83CB:
	selector ds_48 = fn0800_8489(fp - 0x0002, ds, di_100)
	Mem55[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0002:word16] + 0x000A
	word16 sp_49 = fp - 0x0008
	word16 si_50 = 0x0000
	branch 0x0000 >=u di_100 l0800_8401
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_83E5:
	word16 sp_75 = sp_49 - 0x0002
	Mem76[ss:sp_75:word16] = 0x0004
	Mem80[ss:sp_75 - 0x0002:word16] = Mem76[Mem76[ss:fp + 0x0004:selector]:Mem76[ss:fp - 0x0004:word16]:word16]
	ds_48 = fn0800_8489(fp - 0x0002, ds_48, wArg00)
	Mem85[ss:fp - 0x0004:word16] = Mem80[ss:fp - 0x0004:word16] + 0x000C
	sp_49 = sp_75 + 0x0002
	si_50 = si_50 + 0x0001
	branch si_50 <u di_100 l0800_83E5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8401:
	return ds_48
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_83A1_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8407(word16 bp, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_8407_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(32)

l0800_8407:
	word16 ax_17
	branch wArg02 <=u 0x0001 l0800_8420
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0004(32)

l0800_8420:
	ax_17 = wArg02
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(32)

l0800_8417:
	ax_17 = fn0800_0C08(wArg02)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(32)

l0800_8422:
	word16 ax_21 = (word16) (ax_17 *s 0x000C)
	selector ds_34 = fn0800_8489(fp - 0x0002, ds, Mem0[SLICE(ptrArg04, selector, 16):ax_21 + 0x0008:word16])
	branch Mem0[ss:fp - 0x0004:word16] <=u 0x0001 l0800_845F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8445:
	Mem55[ss:fp - 0x000A:word16] = Mem0[ss:fp - 0x0004:word16] - 0x0001
	Mem64[ss:fp - 0x000C:word16] = wArg02 - (0x0001 << Mem55[ss:fp - 0x0004:byte] - 0x01)
	ds_34 = fn0800_8489(fp - 0x0002, ds_34, wArg00)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_845F:
	return ds_34
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_8407_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_8465_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8465:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_847F
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_847F:
	return fn0800_8489(fp - 0x0002, ds, wArg02)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8475:
	return fn0800_854B(fp - 0x0002, ds, (byte) wArg04)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_8465_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_8489(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_8489_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8489:
	word16 sp_141 = fp - 0x0006
	word16 di_13 = wArg02
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_853A:
	word16 ax_35 = Mem0[ss:fp + 0x0004:word16]
	Mem37[ss:fp + 0x0004:word16] = Mem0[ss:fp + 0x0004:word16] - 0x0001
	branch ax_35 == 0x0000 l0800_8547
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8547:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_8489_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> si:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_8544:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8494:
	Mem43[ds:0x2E43:word16] = Mem37[ds:0x2E43:word16] >>u 0x0001
	branch (di_13 & 0x0001) == 0x0000 l0800_84A4
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_849E:
	Mem147[ds:0x2E43:word16] = Mem43[ds:0x2E43:word16] | 0x8000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84A4:
	Mem51[ds:0x2E45:word16] = Mem43[ds:0x2E45:word16] + 0x0001
	di_13 = di_13 >>u 0x0001
	word16 ax_52 = Mem51[ds:0x2E45:word16]
	branch ax_52 == 0x0010 l0800_84B5
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84B5:
	word16 sp_57 = sp_141 - 0x0002
	Mem58[ss:sp_57:word16] = DPB(ax_52, Mem51[ds:0x2E43:byte], 0)
	word16 di_60
	selector ds_61
	fn0800_8624(ds, bArg00, out di_60, out ds_61)
	word16 ax_64 = Mem58[ds_61:0x2E43:word16]
	Mem69[ss:sp_57:word16] = ax_64 >>u 0x08
	fn0800_8624(ds_61, bArg00, out di_13, out ds)
	word16 ax_135 = ax_64 >>u 0x08
	sp_141 = sp_57 + 0x0002
	word16 si_140 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84E3:
	branch Mem69[ds:0x4E82:word16] != 0x0000 l0800_84D1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84D1:
	ax_135 = DPB(ax_135, Mem69[ds:si_140 + 0x4682:byte], 0) (alias)
	word16 sp_136 = sp_141 - 0x0002
	Mem137[ss:sp_136:word16] = ax_135
	si_140 = fn0800_8624(ds, bArg00, out di_13, out ds)
	Mem144[ds:0x4E82:word16] = Mem137[ds:0x4E82:word16] - 0x0001
	sp_141 = sp_136 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84EA:
	word16 ax_87 = Mem69[ds:0x2A01:word16]
	word16 dx_88 = Mem69[ds:0x29FF:word16]
	branch ax_87 <u Mem69[ds:0x2A05:word16] l0800_8532
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84F7:
	branch ax_87 >u Mem69[ds:0x2A05:word16] l0800_84FF
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84F9:
	branch dx_88 <=u Mem69[ds:0x2A03:word16] l0800_8532
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84FF:
	word16 dx_107 = Mem69[ds:0x29FF:word16] - Mem69[ds:0x2A03:word16]
	word16 ax_110 = Mem69[ds:0x2A01:word16] - Mem69[ds:0x2A05:word16] - (dx_107 <u 0x0000)
	branch ax_110 <u Mem69[ds:0x4E8A:word16] l0800_8532
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8514:
	branch ax_110 >u Mem69[ds:0x4E8A:word16] l0800_851C
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8516:
	branch dx_107 <=u Mem69[ds:0x4E88:word16] l0800_8532
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_851C:
	word16 dx_120 = Mem69[ds:0x29FF:word16] - Mem69[ds:0x2A03:word16]
	Mem125[ds:0x4E8A:word16] = Mem69[ds:0x2A01:word16] - Mem69[ds:0x2A05:word16] - (dx_120 <u 0x0000)
	Mem126[ds:0x4E88:word16] = dx_120
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8532:
	Mem103[ds:0x2E45:word16] = 0x0000
	Mem104[ds:0x2E43:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84B2:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)



selector fn0800_854B(word16 bp, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0004(8)
fn0800_854B_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(8)

l0800_854B:
	word16 sp_131 = fp - 0x0006
	word16 di_128 = 0x0001 << bArg04 - 0x01
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_85EF:
	word16 ax_36 = Mem0[ss:fp + 0x0004:word16]
	Mem38[ss:fp + 0x0004:word16] = Mem0[ss:fp + 0x0004:word16] - 0x0001
	branch ax_36 == 0x0000 l0800_85FC
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85FC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_854B_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> si:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_85F9:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_855D:
	Mem44[ds:0x2E43:word16] = Mem38[ds:0x2E43:word16] << 0x0001
	branch (Mem44[ss:fp + 0x0002:word16] & di_128) == 0x0000 l0800_856A
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8566:
	Mem137[ds:0x2E43:word16] = Mem44[ds:0x2E43:word16] + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_856A:
	Mem51[ds:0x2E45:word16] = Mem44[ds:0x2E45:word16] + 0x0001
	di_128 = di_128 >>u 0x0001
	word16 ax_52 = Mem51[ds:0x2E45:word16]
	branch ax_52 != 0x0008 l0800_85EF
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8578:
	word16 ax_125 = DPB(ax_52, Mem51[ds:0x2E43:byte], 0)
	word16 sp_57 = sp_131 - 0x0002
	Mem58[ss:sp_57:word16] = ax_125
	fn0800_8624(ds, bArg00, out di_128, out ds)
	sp_131 = sp_57 + 0x0002
	word16 si_130 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8598:
	branch Mem58[ds:0x4E82:word16] != 0x0000 l0800_8586
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8586:
	ax_125 = DPB(ax_125, Mem58[ds:si_130 + 0x4682:byte], 0) (alias)
	word16 sp_126 = sp_131 - 0x0002
	Mem127[ss:sp_126:word16] = ax_125
	si_130 = fn0800_8624(ds, bArg00, out di_128, out ds)
	Mem134[ds:0x4E82:word16] = Mem127[ds:0x4E82:word16] - 0x0001
	sp_131 = sp_126 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_859F:
	word16 ax_77 = Mem58[ds:0x2A01:word16]
	word16 dx_78 = Mem58[ds:0x29FF:word16]
	branch ax_77 <u Mem58[ds:0x2A05:word16] l0800_85E7
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85AC:
	branch ax_77 >u Mem58[ds:0x2A05:word16] l0800_85B4
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85AE:
	branch dx_78 <=u Mem58[ds:0x2A03:word16] l0800_85E7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85B4:
	word16 dx_97 = Mem58[ds:0x29FF:word16] - Mem58[ds:0x2A03:word16]
	word16 ax_100 = Mem58[ds:0x2A01:word16] - Mem58[ds:0x2A05:word16] - (dx_97 <u 0x0000)
	branch ax_100 <u Mem58[ds:0x4E8A:word16] l0800_85E7
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85C9:
	branch ax_100 >u Mem58[ds:0x4E8A:word16] l0800_85D1
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85CB:
	branch dx_97 <=u Mem58[ds:0x4E88:word16] l0800_85E7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85D1:
	word16 dx_110 = Mem58[ds:0x29FF:word16] - Mem58[ds:0x2A03:word16]
	Mem115[ds:0x4E8A:word16] = Mem58[ds:0x2A01:word16] - Mem58[ds:0x2A05:word16] - (dx_110 <u 0x0000)
	Mem116[ds:0x4E88:word16] = dx_110
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85E7:
	Mem93[ds:0x2E45:word16] = 0x0000
	Mem94[ds:0x2E43:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)



word16 fn0800_8600(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8600_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8600:
	branch Mem0[ds:0x2E45:word16] == 0x0000 l0800_861B
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_861B:
	word16 di_40
	selector ds_41
	return fn0800_8624(ds, bArg02, out di_40, out ds_41)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dl:<invalid> -2(fp):bp

l0800_860D:
	Mem27[ds:Mem0[ds:0x4E82:word16] + 0x4682:byte] = bArg02
	Mem29[ds:0x4E82:word16] = Mem27[ds:0x4E82:word16] + 0x0001
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dl:<invalid> -2(fp):bp

fn0800_8600_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dl:<invalid> bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -4(fp):dx -2(fp):bp



word16 fn0800_8624(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8624_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8624:
	word16 ax_8 = Mem0[ds:0x2A05:word16]
	word16 dx_9 = Mem0[ds:0x2A03:word16]
	branch ax_8 >u Mem0[ds:0x4E86:word16] l0800_8678
// DataOut: di ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8634:
	branch ax_8 <u Mem0[ds:0x4E86:word16] l0800_863C
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8636:
	branch dx_9 >=u Mem0[ds:0x4E84:word16] l0800_8678
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_863C:
	selector ds_57
	word16 di_58
	*diOut = fn0800_4047(ds, bArg02, DPB(ptrLoc06, Mem0[ds:0x29DF:word16], 0), Mem0[ds:0x29E1:word16], out ds_57)
	Mem72[ds_57:0x2E49:word16] = Mem0[ds_57:((DPB(DPB(ax_8, bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem0[ds_57:0x2E49:word16] >>u 0x08
	word16 v16_73 = Mem72[ds_57:0x2A03:word16] + 0x0001
	Mem74[ds_57:0x2A03:word16] = v16_73
	Mem78[ds_57:0x2A05:word16] = Mem74[ds_57:0x2A05:word16] + (v16_73 <u 0x0000)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8678:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_8624_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: bp ds sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_867A_entry:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_867A:
	word16 si_26
	word16 bx_121 = DPB(bx, fn0800_87EF(wArg04 + 0x0004, psegArg06, out si_26), 0)
	byte al_41 = Mem0[psegArg06:si_26 + 0x000A:byte] * 0x02 + true
	selector ds_19 = psegArg06
	word16 di_136 = wArg08
	selector es_23 = psegArg0A
	word16 si_113 = si_26 + 0x000B
	byte al_115 = al_41 * 0x02
	word16 ax_116 = DPB(ax, al_41 * 0x02, 0)
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8745:
	al_115 = al_115 * 0x02
	byte SCZO_67 = cond(al_115)
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	byte Z_580 = SCZO_67
	byte C_582 = SCZO_67
	branch al_115 <u 0x00 l0800_8751
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8749:
	Mem573[es_23:di_136:byte] = Mem0[ds_19:si_113:byte]
	byte SCZO_579 = cond(al_115 * 0x02)
	si_113 = si_113 + 0x0001 + 0x0001
	di_136 = di_136 + 0x0001 + 0x0001
	al_115 = al_115 * 0x02
	ax_116 = DPB(ax_116, al_115 * 0x02, 0) (alias)
	Z_580 = SCZO_579 (alias)
	C_582 = SCZO_579 (alias)
	branch al_115 * 0x02 >=u 0x00 l0800_8744
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8751:
	branch Z_580 l0800_873C
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_873C:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + C_582
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	branch al_115 <u 0x00 l0800_8753
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8741:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8744:
	Mem80[es_23:di_136:byte] = Mem0[ds_19:si_113:byte]
	si_113 = si_113 + 0x0000
	di_136 = di_136 + 0x0000
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8753:
	byte al_100 = al_115 * 0x02
	word16 cx_123 = 0x0002
	byte bh_479 = 0x00
	bx_121 = DPB(bx_121, 0x00, 8) (alias)
	word16 ax_101 = DPB(ax_116, al_100, 0)
	byte C_106 = cond(al_100)
	branch al_100 == 0x00 l0800_879B
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_879B:
	al_100 = Mem0[ds_19:si_113:byte] * 0x02 + (al_100 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_101 = DPB(ax_116, al_100, 0) (alias)
	C_106 = cond(al_100) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_875C:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_875F:
	branch C_106 l0800_86E6
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86E6:
	byte al_428 = al_100 * 0x02
	word16 ax_429 = DPB(ax_101, al_428, 0)
	byte C_434 = cond(al_428)
	branch al_428 == 0x00 l0800_86BC
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86BC:
	al_428 = Mem0[ds_19:si_113:byte] * 0x02 + (al_428 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_429 = DPB(ax_101, al_428, 0) (alias)
	C_434 = cond(al_428) (alias)
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86EA:
	al_115 = al_428 * 0x02
	cx_123 = DPB(0x0002, C_434 + 0x04, 0) (alias)
	ax_116 = DPB(ax_429, al_115, 0) (alias)
	byte C_447 = cond(al_115)
	branch al_115 == 0x00 l0800_86C2
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86C2:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_429, al_115, 0) (alias)
	C_447 = cond(al_115) (alias)
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F0:
	branch C_447 l0800_8701
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F2:
	al_115 = al_115 * 0x02
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	byte C_462 = cond(al_115)
	branch al_115 == 0x00 l0800_86C8
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86C8:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	C_462 = cond(al_115) (alias)
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F9:
	byte cl_471 = (byte) (cx_123 - 0x0001) * 0x02 + C_462
	cx_123 = DPB(cx_123 - 0x0001, cl_471, 0) (alias)
	branch cl_471 == 0x09 l0800_86A7
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A7:
	word16 cx_476 = DPB(cx_123 - 0x0001, 0x04, 0)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A9:
	al_115 = al_115 * 0x02
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	byte C_490 = cond(al_115)
	branch al_115 == 0x00 l0800_86A1
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A1:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	C_490 = cond(al_115) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86AD:
	bh_479 = bh_479 * 0x02 + C_490
	bx_121 = DPB(bx_121, bh_479, 8) (alias)
	cx_476 = cx_476 - 0x0001
	branch cx_476 != 0x0000 l0800_86A9
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B1:
	word16 cx_506 = DPB(cx_476, (bh_479 + 0x03) * 0x02, 0)
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B7:
	branch cx_506 == 0x0000 l0800_86B9
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B9:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B7_1:
	Mem514[es_23:di_136:word16] = Mem0[ds_19:si_113:word16]
	si_113 = si_113 + 0x0002
	di_136 = di_136 + 0x0002
	cx_506 = cx_506 - 0x0001
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8761:
	al_115 = al_100 * 0x02
	ax_116 = DPB(ax_101, al_115, 0) (alias)
	byte C_314 = cond(al_115)
	branch al_115 == 0x00 l0800_87A0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87A0:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_101, al_115, 0) (alias)
	C_314 = cond(al_115) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8765:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8768:
	branch C_314 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_876A:
	al_115 = al_115 * 0x02
	cx_123 = 0x0003
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	byte C_331 = cond(al_115)
	branch al_115 == 0x00 l0800_87A5
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87A5:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	C_331 = cond(al_115) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_876F:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8772:
	branch C_331 l0800_8701
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8774:
	byte cl_340 = Mem0[ds_19:si_113:byte]
	si_113 = si_113 + 0x0001
	word16 cx_344 = DPB(0x0003, cl_340, 0)
	branch cl_340 == 0x00 l0800_87B4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87B4:
	word16 ax_367 = ds_19 + (si_113 >>u 0x04)
	byte al_370 = (byte) ax_116
	di_136 = (di_136 & 0x000F) + 0x8000
	es_23 = es_23 + (di_136 >>u 0x04) - 0x0800
	si_113 = si_113 & 0x000F
	bx_121 = si_113 >>u 0x04
	ds_19 = ax_367
	al_115 = al_370 * 0x02
	ax_116 = DPB(ax_116, al_370 * 0x02, 0) (alias)
	byte C_378 = cond(al_370 * 0x02)
	branch al_370 * 0x02 != 0x00 l0800_87E3
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87DD:
	al_115 = Mem0[ax_367:si_113 & 0x000F:byte] * 0x02 + (al_370 * 0x02 <u 0x00)
	si_113 = (si_113 & 0x000F) + 0x0001
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	C_378 = cond(al_115) (alias)
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87E3:
	branch C_378 l0800_87E8
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87E8:
	selector ds_392
	*dsOut = psegLoc0A
	return si
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_867A_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:si si:di ds:<invalid> di:ds es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> dx:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_87E5:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_877B:
	cx_123 = cx_344 + 0x0008
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8701:
	al_115 = al_115 * 0x02
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	byte C_159 = cond(al_115)
	branch al_115 == 0x00 l0800_86CE
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86CE:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	C_159 = cond(al_115) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8705:
	branch C_159 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8707:
	byte al_168 = al_115 * 0x02
	word16 ax_169 = DPB(ax_116, al_168, 0)
	byte C_174 = cond(al_168)
	branch al_168 == 0x00 l0800_86D4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86D4:
	al_168 = Mem0[ds_19:si_113:byte] * 0x02 + (al_168 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_169 = DPB(ax_116, al_168, 0) (alias)
	C_174 = cond(al_168) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_870E:
	al_115 = al_168 * 0x02
	ax_116 = DPB(ax_169, al_115, 0) (alias)
	byte C_187 = cond(al_115)
	branch al_115 == 0x00 l0800_86DA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86DA:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_169, al_115, 0) (alias)
	C_187 = cond(al_115) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8714:
	branch C_187 l0800_8784
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8784:
	byte al_234 = al_115 * 0x02
	word16 ax_235 = DPB(ax_116, al_234, 0)
	byte C_240 = cond(al_234)
	branch al_234 == 0x00 l0800_87AA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87AA:
	al_234 = Mem0[ds_19:si_113:byte] * 0x02 + (al_234 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_235 = DPB(ax_116, al_234, 0) (alias)
	C_240 = cond(al_234) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8788:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_878B:
	al_115 = al_234 * 0x02
	bx_121 = DPB(bx_121, C_174 * 0x02 + C_240 | 0x04, 8) (alias)
	ax_116 = DPB(ax_235, al_115, 0) (alias)
	byte C_254 = cond(al_115)
	branch al_115 == 0x00 l0800_87AF
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87AF:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_235, al_115, 0) (alias)
	C_254 = cond(al_115) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8794:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8797:
	branch C_254 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8799:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8716:
	bx_121 = DPB(bx_121, C_174, 8) (alias)
	branch C_174 != 0x00 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_871D:
	bx_121 = DPB(bx_121, C_174 + 0x01, 8) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8722:
	al_115 = al_115 * 0x02
	ax_116 = DPB(ax_116, al_115, 0) (alias)
	branch al_115 == 0x00 l0800_86E0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86E0:
	al_115 = Mem0[ds_19:si_113:byte] * 0x02 + (al_115 <u 0x00)
	si_113 = si_113 + 0x0001
	ax_116 = DPB(ax_116, al_115, 0) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8726:
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8728:
	bx_121 = DPB(bx_121, Mem0[ds_19:si_113:byte], 0) (alias)
	__cli()
	word16 si_127 = si_113 + 0x0001
	word16 si_131 = di_136 - 0x0001 - bx_121
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8733:
	branch cx_123 == 0x0000 l0800_8736
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8736:
	__sti()
	si_113 = si_127
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8733_1:
	Mem140[es_23:di_136:byte] = Mem0[ds_19:si_131:byte]
	si_131 = si_131 + 0x0001
	di_136 = di_136 + 0x0001
	cx_123 = cx_123 - 0x0001
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)



byte fn0800_87EF(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: bl si
// Trashed: ah al ax bh bl bx eax ebx esi rax rbx rsi si sil
// Preserved: sp
fn0800_87EF_entry:
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87EF:
	word16 si_4
	byte al_5 = fn0800_87F4(si, ds, out si_4)
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F2_thunk_fn0800_87F4:
	word16 si_10
	fn0800_87F4(si_4, ds, out si_10)
	return al_5
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>

fn0800_87EF_exit:
// DataOut: bl si
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>



byte fn0800_87F4(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: al si
// Trashed: ah al ax eax esi rax rsi si sil
// Preserved: ah sp
fn0800_87F4_entry:
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F4:
	word16 si_8
	*siOut = si + 0x0002
	return SLICE(Mem0[ds:si:word16], byte, 8)
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_87F4_exit:
// DataOut: al si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:si + 0x0002 al:ah ah:ah



void fn0800_87F8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: di sp
fn0800_87F8_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_87F8:
	ptr32 es_di_8 = Mem0[ds:0x2E37:segptr32]
	word16 di_13 = (word16) es_di_8
	selector es_10 = SLICE(es_di_8, selector, 16)
	word16 ax_11 = Mem0[ds:0x2E31:word16]
	word16 cx_12 = 0x8000
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8804:
	branch cx_12 == 0x0000 l0800_8806
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8806:
	ptr32 es_di_20 = Mem0[ds:0x2E33:segptr32]
	word16 di_21 = (word16) es_di_20
	selector es_22 = SLICE(es_di_20, selector, 16)
	word16 ax_23 = Mem0[ds:0x2E31:word16]
	word16 cx_24 = 0x8000
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810:
	branch cx_24 == 0x0000 l0800_8812
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8812:
	ptr32 es_di_32 = Mem0[ds:0x2E3B:segptr32]
	word16 di_33 = (word16) es_di_32
	selector es_34 = SLICE(es_di_32, selector, 16)
	word16 cx_35 = Mem0[ds:0x2E31:word16]
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881C:
	branch cx_35 == 0x0000 l0800_881E
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881E:
	ptr32 es_di_46 = Mem0[ds:0x2E3F:segptr32]
	word16 di_47 = (word16) es_di_46
	selector es_48 = SLICE(es_di_46, selector, 16)
	word16 ax_49 = 0x0000
	word16 cx_52 = Mem0[ds:0x2E31:word16]
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8828:
	Mem56[es_48:di_47:word16] = ax_49
	di_47 = di_47 + 0x0002
	ax_49 = ax_49 + 0x0001
	cx_52 = cx_52 - 0x0001
	branch cx_52 != 0x0000 l0800_8828
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_882C:
	Mem62[ds:0x2E2D:word16] = cx_52
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

fn0800_87F8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di -2(fp):di

l0800_881C_1:
	Mem42[es_34:di_33:word16] = 0x0000
	di_33 = di_33 + 0x0002
	cx_35 = cx_35 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810_1:
	Mem28[es_22:di_21:word16] = ax_23
	di_21 = di_21 + 0x0002
	cx_24 = cx_24 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8804_1:
	Mem16[es_10:di_13:word16] = ax_11
	di_13 = di_13 + 0x0002
	cx_12 = cx_12 - 0x0001
// DataOut: ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di



void fn0800_8832(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: di si sp
fn0800_8832_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8832:
	fn0800_889A(ds)
	branch Mem0[ds:0x2E29:word16] <u 0x0002 l0800_8897
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_883E:
	branch Mem0[ds:0x2E65:word16] - Mem0[ds:0x2E6D:word16] <u 0x0003 l0800_8897
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_884D:
	word16 ax_34 = Mem0[ds:0x2E2D:word16]
	word16 si_32 = Mem0[ds:0x2E29:word16]
	word16 di_33 = Mem0[ds:0x2E2B:word16]
	word16 ax_37 = ax_34 + 0x0001
	branch ax_34 + 0x0001 != Mem0[ds:0x2E31:word16] l0800_8865
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8863:
	ax_37 = 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8865:
	Mem42[ds:0x2E2D:word16] = ax_37
	Mem44[ds:0x2E6D:word16] = Mem42[ds:0x2E6D:word16] + 0x0001
	fn0800_889A(ds)
	Mem47[ds:0x2E6D:word16] = Mem44[ds:0x2E6D:word16] - 0x0001
	Mem48[ds:0x2E2D:word16] = ax_34
	branch Mem48[ds:0x2E29:word16] <=u si_32 l0800_888F
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_888F:
	Mem54[ds:0x2E29:word16] = si_32
	Mem55[ds:0x2E2B:word16] = di_33
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_887D:
	Mem52[ds:0x2E29:word16] = 0x0001
	Mem53[ds:0x2E2B:word16] = 0x0000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8897:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_8832_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> di:di si:si es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



void fn0800_889A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: di ds si sp
fn0800_889A_entry:
	def ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_889A:
	Mem9[ds:0x2E2B:word16] = 0x0000
	Mem11[ds:0x2E29:word16] = 0x0001
	es_di_12 = Mem11[ds:0x2E6D:segptr32]
	di_13 = (word16) es_di_12 (alias)
	es_14 = SLICE(es_di_12, selector, 16) (alias)
	ax_15 = Mem0[Mem0[es_di_12:word16]:word16]
	al_16 = (byte) ax_15 (alias)
	Mem17[ds:0x4E90:word16] = ax_15
	di_18 = di_13 + 0x0001
	dx_20 = Mem17[ds:0x2E69:word16]
	dx_21 = dx_20 - (di_13 + 0x0001)
	SCZO_22 = cond(dx_21)
	Z_24 = SCZO_22 (alias)
	cx_27 = dx_21
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_88BC:
	cx_30 = PHI(cx_27, cx_235)
	Z_32 = PHI(Z_24, Z_230)
	di_35 = PHI(di_18, di_233)
	branch cx_30 == 0x0000 l0800_88BE
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BC_1:
	SCZO_228 = cond(al_16 - Mem17[es_14:di_35:byte])
	Z_230 = SCZO_228 (alias)
	di_233 = di_35 + 0x0001
	cx_235 = cx_30 - 0x0001
	branch al_16 != Mem17[es_14:di_35:byte] l0800_88BC
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BE:
	cx_38 = PHI(cx_30, cx_235)
	Z_40 = PHI(Z_32, Z_230)
	branch Z_40 l0800_88C1
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C0:
	cx_226 = cx_38 - 0x0001
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C1:
	cx_45 = PHI(cx_38, cx_226)
	dx_46 = dx_21 - cx_45
	es_di_47 = Mem17[ds:0x2E6D:segptr32]
	di_48 = (word16) es_di_47 (alias)
	ax_49 = Mem17[ds:0x2E69:word16]
	ax_50 = ax_49 - di_48
	Mem51[ds:0x4E94:word16] = ax_50
	di_52 = Mem51[ds:0x4E90:word16]
	di_53 = di_52 << 0x0001
	es_55 = Mem51[ds:0x2E39:selector]
	ax_56 = Mem51[es_55:di_52 << 0x0001:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88DC:
	ds_66 = PHI(ds, ds_113)
	ax_70 = PHI(ax_56, ax_123)
	branch ax_70 != Mem51[ds_66:0x2E31:word16] l0800_88E5
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E5:
	di_90 = ax_70
	di_91 = ax_70 << 0x0001
	es_92 = Mem51[ds_66:0x2E41:selector]
	bx_94 = Mem51[es_92:di_91:word16]
	Mem95[ds_66:0x4E92:word16] = bx_94
	bx_96 = Mem95[ds_66:0x2E2D:word16]
	branch bx_96 >u ax_70 l0800_8903
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88FC:
	bx_224 = bx_96 + Mem95[ds_66:0x2E31:word16]
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8903:
	bx_99 = PHI(bx_96, bx_224)
	bx_100 = bx_99 - ax_70
	es_si_101 = Mem95[ds_66:0x2E6D:segptr32]
	es_102 = SLICE(es_si_101, selector, 16) (alias)
	si_103 = (word16) es_si_101 (alias)
	si_104 = si_103 - bx_100
	ax_105 = Mem95[es_102:si_104:word16]
	branch Mem95[ds_66:0x4E90:word16] != ax_105 l0800_897E
// DataOut: bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8914:
	es_125 = Mem95[ds_66:0x2E3D:selector]
	cx_126 = Mem95[es_125:di_91:word16]
	branch cx_126 <=u bx_100 l0800_892D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_892D:
	branch cx_126 <=u dx_46 l0800_893A
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8931:
	cx_220 = cx_126 - dx_46
	bx_221 = bx_100 - cx_220
	cx_223 = dx_46
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893A:
	bx_156 = PHI(bx_100, bx_221)
	cx_157 = PHI(cx_126, cx_223)
	branch cx_157 != dx_46 l0800_8963
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893E:
	es_di_160 = Mem95[ds_66:0x2E6D:segptr32]
	di_161 = (word16) es_di_160 (alias)
	es_162 = SLICE(es_di_160, selector, 16) (alias)
	di_163 = di_161 + cx_157
	si_165 = di_163
	si_166 = di_163 - bx_156
	ax_168 = Mem95[ds_66:0x4E94:word16]
	ax_169 = ax_168 - cx_157
	SCZO_171 = cond(ax_169)
	Z_173 = SCZO_171 (alias)
	cx_176 = ax_169
	wLoc06_178 = ds_66
	ds_179 = Mem95[ds_66:0x2E6F:selector]
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957:
	cx_183 = PHI(cx_176, cx_219)
	Z_185 = PHI(Z_173, Z_212)
	di_188 = PHI(di_163, di_217)
	si_189 = PHI(si_166, si_215)
	branch cx_183 == 0x0000 l0800_8959
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957_1:
	SCZO_210 = cond(Mem95[ds_179:si_189:byte] - Mem95[es_162:di_188:byte])
	Z_212 = SCZO_210 (alias)
	si_215 = si_189 + 0x0001
	di_217 = di_188 + 0x0001
	cx_219 = cx_183 - 0x0001
	branch Mem95[ds_179:si_189:byte] != Mem95[es_162:di_188:byte] l0800_8957
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8959:
	cx_193 = PHI(cx_183, cx_219)
	Z_195 = PHI(Z_185, Z_212)
	branch Z_195 l0800_895C
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895B:
	cx_208 = cx_193 + 0x0001
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895C:
	cx_201 = PHI(cx_193, cx_208)
	ds_202 = ds_66
	ax_204 = ax_169 - cx_201
	cx_205 = dx_46
	cx_206 = dx_46 + ax_204
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8922:
	bx_152 = 0x0001
	cx_153 = dx_46
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8963:
	ds_134 = PHI(ds_66, ds_66, ds_202)
	bx_135 = PHI(bx_152, bx_156, bx_156)
	cx_136 = PHI(cx_153, cx_157, cx_206)
	branch cx_136 <=u Mem95[ds_134:0x2E2F:word16] l0800_896D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8969:
	cx_151 = Mem95[ds_134:0x2E2F:word16]
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_896D:
	cx_146 = PHI(cx_136, cx_151)
	branch cx_146 <u Mem95[ds_134:0x2E29:word16] l0800_897E
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8973:
	Mem149[ds_134:0x2E29:word16] = cx_146
	Mem150[ds_134:0x2E2B:word16] = bx_135
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_897E:
	ds_113 = PHI(ds_66, ds_134, ds_134)
	ax_123 = Mem95[ds_113:0x4E92:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E2:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8984:
	branch Mem51[ds_66:0x2E29:word16] != 0x0002 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_898B:
	branch Mem51[ds_66:0x2E2B:word16] <=u 0x0100 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8996:
	Mem88[ds_66:0x2E29:word16] = 0x0001
	Mem89[ds_66:0x2E2B:word16] = 0x0000
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_89A5:
	return
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si

fn0800_889A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> di:di dx:<invalid> cx:<invalid> es:<invalid> si:si bx:<invalid> Sequence es:si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si



void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di sp
// Stack args: Stack +0002(8)
fn0800_89A8_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_89A8:
	word16 dx_11 = Mem0[ds:0x2E31:word16]
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_89B1:
	word16 di_27 = Mem0[ds:0x2E2D:word16]
	selector es_29 = Mem0[ds:0x2E41:selector]
	word16 ax_30 = Mem0[es_29:di_27 << 0x0001:word16]
	Mem32[es_29:di_27 << 0x0001:word16] = dx_11
	branch Mem32[ds:0x2E2D:word16] == ax_30 l0800_89EA
// DataOut: ax ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_89C7:
	ptr32 es_di_164 = Mem32[ds:0x2E6D:segptr32]
	word16 di_168 = Mem32[SLICE(es_di_164, selector, 16):(word16) es_di_164 - dx_11:word16]
	Mem172[Mem32[ds:0x2E39:selector]:di_168 << 0x0001:word16] = ax_30
	branch ax_30 != dx_11 l0800_89EA
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_89E0:
	Mem176[Mem172[ds:0x2E35:selector]:di_168 << 0x0001:word16] = dx_11
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_89EA:
	word16 di_38 = Mem0[Mem0[Mem32[ds:0x2E6D:segptr32]:word16]:word16]
	word16 ax_40 = Mem32[ds:0x2E2D:word16]
	selector es_42 = Mem32[ds:0x2E39:selector]
	branch Mem32[es_42:di_38 << 0x0001:word16] != dx_11 l0800_8A08
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A08:
	Mem163[Mem32[ds:0x2E41:selector]:Mem32[Mem32[ds:0x2E35:selector]:di_38 << 0x0001:word16] << 0x0001:word16] = ax_40
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_89FF:
	Mem156[es_42:di_38 << 0x0001:word16] = ax_40
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A18:
	Mem47[Mem32[ds:0x2E35:selector]:di_38 << 0x0001:word16] = ax_40
	ptr32 es_di_48 = Mem47[ds:0x2E6D:segptr32]
	word16 di_49 = (word16) es_di_48
	word16 bx_56 = Mem47[ds:0x2E69:word16] - (di_49 + 0x0001)
	selector es_50 = SLICE(es_di_48, selector, 16)
	byte al_51 = Mem0[Mem0[es_di_48:byte]:byte]
	word16 di_153 = di_49 + 0x0001
	byte Z_149 = cond(bx_56)
	word16 cx_146 = bx_56
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A2F:
	branch cx_146 == 0x0000 l0800_8A31
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A2F_1:
	Z_149 = cond(al_51 - Mem47[es_50:di_177:byte]) (alias)
	di_153 = di_177 + 0x0001
	cx_146 = cx_146 - 0x0001
	word16 di_177 = di_153
	branch al_51 != Mem47[es_50:di_177:byte] l0800_8A2F
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A31:
	branch Z_149 l0800_8A34
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A33:
	cx_146 = cx_146 - 0x0001
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A34:
	word16 bx_110 = bx_56 - cx_146
	Mem86[Mem47[ds:0x2E3D:selector]:Mem47[ds:0x2E2D:word16] << 0x0001:word16] = bx_110
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A86:
	word16 ax_95 = Mem86[ds:0x2E2D:word16]
	word16 ax_101 = ax_95 + 0x0001
	branch ax_95 + 0x0001 != dx_11 l0800_8A90
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A8E:
	ax_101 = 0x0000
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A90:
	Mem103[ds:0x2E2D:word16] = ax_101
	Mem105[ds:0x2E6D:word16] = Mem103[ds:0x2E6D:word16] + 0x0001
	word16 v20_106 = wArg02 - 0x0001
	wArg02 = v20_106
	branch v20_106 == 0x0000 l0800_8AA8
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8AA8:
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

fn0800_89A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> di:di es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

l0800_8A9C:
	bx_110 = bx_110 - 0x0001
	branch bx_110 >u 0x0001 l0800_8A46
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A46:
	word16 di_113 = Mem105[ds:0x2E2D:word16]
	Mem116[Mem105[ds:0x2E3D:selector]:di_113 << 0x0001:word16] = bx_110
	selector es_117 = Mem116[ds:0x2E41:selector]
	word16 v22_119 = Mem116[es_117:di_113 << 0x0001:word16]
	Mem120[es_117:di_113 << 0x0001:word16] = Mem116[ds:0x2E2D:word16]
	branch Mem120[ds:0x2E2D:word16] == v22_119 l0800_8A86
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A63:
	ptr32 es_di_125 = Mem120[ds:0x2E6D:segptr32]
	word16 di_129 = Mem120[SLICE(es_di_125, selector, 16):(word16) es_di_125 - dx_11:word16]
	Mem133[Mem120[ds:0x2E39:selector]:di_129 << 0x0001:word16] = v22_119
	branch v22_119 != dx_11 l0800_8A86
// DataOut: bx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8A7C:
	Mem137[Mem133[ds:0x2E35:selector]:di_129 << 0x0001:word16] = dx_11
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)

l0800_8AA5:
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8)



byte fn0800_8B0D(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8B0D_entry:
	*dsOut = ds
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8B0D:
	word16 si_11 = wArg06
	branch wArg06 != 0x0000 l0800_8B36
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B18:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B28:
	branch Mem0[ds:0x224E:word16] != 0x0000 l0800_8B1A
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B1A:
	Mem139[ds:0x224E:word16] = Mem0[ds:0x224E:word16] - 0x0001
	word16 sp_143
	word16 bp_144
	selector ss_145
	word16 si_146
	byte SZO_147
	byte C_148
	byte Z_149
	byte SCZO_150
	word16 cx_153
	word16 bx_154
	byte dl_156
	call SEQ(cs, Mem139[ds:(Mem139[ds:0x224E:word16] << 0x0001) + 0x4E96:word16]) (retsize: 2; depth: 6)
		uses: al_111,bLoc06,bp_120,bx_141,C_115,cs_113,cx_118,dl_110,ds_114,SCZO_142,si_119,sp_121,ss_117,SZO_116,wLoc02_4,wLoc04_8,wLoc06,Z_123
		defs: al_155,bp_144,bx_154,C_148,cs_152,cx_153,dl_156,ds_151,SCZO_150,si_146,sp_143,ss_145,SZO_147,Z_149
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B2F:
	fn0800_0150(al)
	word16 sp_124
	word16 bp_125
	selector ss_126
	byte SZO_128
	byte C_129
	byte Z_130
	byte SCZO_131
	word16 cx_134
	word16 bx_135
	byte dl_137
	call SEQ(cs, Mem0[ds:0x2352:word16]) (retsize: 2; depth: 6)
		uses: al_111,bLoc06,bp_120,bx_112,C_115,cs_113,cx_118,dl_110,ds_114,SCZO_122,si_119,sp_121,ss_117,SZO_116,wLoc02_4,wLoc04_8,wLoc06,Z_123
		defs: al_136,bp_125,bx_135,C_129,cs_133,cx_134,dl_137,ds_132,SCZO_131,si_127,sp_124,ss_126,SZO_128,Z_130
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8B36:
	byte dl_108
	byte al_107 = fn0800_01B9(al, ds, out dl_108)
	fn0800_0163()
	branch wArg04 != 0x0000 l0800_8B55
// DataOut: al di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> es:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B42:
	branch si_11 != 0x0000 l0800_8B4E
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ds:<invalid> dx:<invalid> ax:0x2506 es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B46:
	word16 sp_81
	word16 bp_82
	selector ss_83
	word16 si_84
	byte SZO_85
	byte C_86
	byte Z_87
	byte SCZO_88
	selector ds_89
	selector cs_90
	word16 cx_91
	word16 bx_92
	byte al_93
	byte dl_94
	call SEQ(cs, Mem0[ds:0x2354:word16]) (retsize: 2; depth: 6)
		uses: al_33,bLoc06,bp_30,bx_22,C_62,cs_23,cx_28,dl_32,ds_24,SCZO_35,si_59,sp_31,ss_27,SZO_60,wLoc02_4,wLoc04_8,wLoc06,Z_61
		defs: al_93,bp_82,bx_92,C_86,cs_90,cx_91,dl_94,ds_89,SCZO_88,si_84,sp_81,ss_83,SZO_85,Z_87
	word16 sp_95
	word16 bp_96
	selector ss_97
	word16 si_98
	byte SZO_99
	byte C_100
	byte Z_101
	byte SCZO_102
	selector ds_103
	selector cs_104
	word16 cx_105
	word16 bx_106
	call SEQ(cs_90, Mem0[ds_89:0x2356:word16]) (retsize: 2; depth: 6)
		uses: al_93,bLoc06,bp_82,bx_92,C_86,cs_90,cx_91,dl_94,ds_89,SCZO_88,si_84,sp_81,ss_83,SZO_85,wLoc02_4,wLoc04_8,wLoc06,Z_87
		defs: al_107,bp_96,bx_106,C_100,cs_104,cx_105,dl_108,ds_103,SCZO_102,si_98,sp_95,ss_97,SZO_99,Z_101
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ds:<invalid> dx:<invalid> ax:0x2506 es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B4E:
	fn0800_0164(al_107, (byte) wArg02)
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ds:<invalid> dx:<invalid> ax:0x2506 es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// Terminates process

l0800_8B55:
	return dl_108
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ds:<invalid> dx:<invalid> ax:0x2506 cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_8B0D_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ds:<invalid> dx:<invalid> ax:0x2506 cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_8B5A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8B5A_entry:
	*siOut = si
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B5A:
	selector ds_18
	return fn0800_8B0D(0x00, ds, wArg02, 0x0000, 0x0000, out ds_18)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B5A_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



void fn0800_8B95(byte al, byte dl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al dl
// LiveOut:
// Trashed: ah ax bh bl bx dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8B95_entry:
// DataOut: al dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8B95:
	byte dh_7
	word16 cx_8
	word16 dx_11 = DPB(dx, msdos_get_system_date(out dh_7, out cx_8), 0)
	selector es_14 = SLICE(ptrArg02, selector, 16)
	word16 bx_15 = (word16) ptrArg02
	Mem16[es_14:bx_15:word16] = cx_8
	Mem17[es_14:bx_15 + 0x0002:word16] = dx_11
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B95_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2A dl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



void fn0800_8BA8(byte al, byte cl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cl
// LiveOut:
// Trashed: ah ax bh bl bx cl cx eax ebx ecx es rax rbx rcx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8BA8_entry:
// DataOut: al cl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8BA8:
	selector es_15 = SLICE(ptrArg02, selector, 16)
	word16 bx_16 = (word16) ptrArg02
	byte ch_7
	byte dh_8
	byte dl_9
	Mem17[es_15:bx_16:word16] = DPB(cx, msdos_get_system_time(out ch_7, out dh_8, out dl_9), 0)
	Mem19[es_15:bx_16 + 0x0002:word16] = dx
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8BA8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2C cl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



word16 fn0800_8BBB(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BBB_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BBB:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC0_thunk_fn0800_8BD8:
	word16 dx_16
	word16 bp_17
	word16 si_18
	word16 di_19
	return fn0800_8BD8(0x0000, bp, si, di, out dx_16, out bp_17, out si_18, out di_19)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8BBB_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BC2(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BC2_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BC2:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC5_thunk_fn0800_8BD8:
	word16 dx_14
	word16 bp_15
	word16 si_16
	word16 di_17
	return fn0800_8BD8(0x0001, bp, si, di, out dx_14, out bp_15, out si_16, out di_17)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:0x0001 -2(fp):<invalid> 0(fp):cs

fn0800_8BC2_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BCA(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BCA_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BCA:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BD0_thunk_fn0800_8BD8:
	word16 dx_14
	word16 bp_15
	word16 si_16
	word16 di_17
	return fn0800_8BD8(0x0002, bp, si, di, out dx_14, out bp_15, out si_16, out di_17)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:0x0002 -2(fp):<invalid> 0(fp):cs

fn0800_8BCA_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BD8(word16 cx, word16 bp, word16 si, word16 di, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp cx di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BD8_entry:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_8BD8:
	Mem4[ss:v3 - 0x0002:word16] = bp
	Mem8[ss:v3 - 0x0004:word16] = si
	Mem11[ss:v3 - 0x0006:word16] = di
	word16 cx_21 = Mem11[ss:v3 + 0x000A:word16]
	word16 sp_110 = v3 - 0x0006
	word16 di_14 = cx
	word16 ax_100 = Mem11[ss:v3 + 0x0004:word16]
	word16 dx_116 = Mem11[ss:v3 + 0x0006:word16]
	word16 bx_163 = Mem11[ss:v3 + 0x0008:word16]
	word16 cx_158 = cx_21
	branch cx_21 != 0x0000 l0800_8BF7
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BEF:
	word32 dx_ax_181 = SEQ(dx_116, ax_100)
	branch dx_116 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF3:
	branch bx_163 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C5C:
	word16 dx_187 = dx_ax_181 % bx_163
	ax_100 = SEQ(dx_187, ax_100) /u bx_163
	branch (cx & 0x0002) == 0x0000 l0800_8C65
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C64:
	ax_100 = dx_187
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C65:
	word16 dx_195
	*dxOut = 0x0000
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF7:
	branch (cx & 0x0001) != 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BFD:
	branch dx_116 >= 0x0000 l0800_8C0B
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C01:
	ax_100 = -ax_100
	dx_116 = -dx_116 - (ax_100 == 0x0000)
	di_14 = cx | 0x000C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0B:
	cx_158 = cx_21
	branch cx_21 >= 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0F:
	bx_163 = -bx_163
	cx_158 = -cx_21 - (bx_163 == 0x0000)
	di_14 = di_14 ^ 0x0004
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C19:
	Mem69[ss:v3 - 0x0008:word16] = di_14
	ui32 bp_bx_66 = SEQ(cx_158, bx_163)
	word16 cx_107 = 0x0020
	word16 di_104 = 0x0000
	word16 si_105 = 0x0000
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C23:
	ax_100 = ax_100 << 0x0001
	dx_116 = __rcl(dx_116, 0x01, cond(ax_100))
	*dxOut = dx_116
	si_105 = __rcl(si_105, 0x01, (dx_116 & 0x8000) != 0x0000)
	di_104 = __rcl(di_104, 0x01, (si_105 & 0x8000) != 0x0000)
	branch di_104 <u cx_158 l0800_8C3A
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C2F:
	branch di_104 >u cx_158 l0800_8C35
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C31:
	branch si_105 <u bx_163 l0800_8C3A
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C35:
	ui32 di_si_139 = SEQ(di_104, si_105 - bx_163) - bp_bx_66
	di_104 = SLICE(di_si_139, word16, 16) (alias)
	si_105 = (word16) di_si_139 (alias)
	ax_100 = ax_100 + 0x0001
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3A:
	cx_107 = cx_107 - 0x0001
	branch cx_107 != 0x0000 l0800_8C23
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3C:
	word16 bx_108 = Mem69[ss:v3 - 0x0008:word16]
	sp_110 = v3 - 0x0006
	branch (bx_108 & 0x0002) == 0x0000 l0800_8C49
// DataOut: ax bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C43:
	ax_100 = si_105
	*dxOut = di_104
	bx_108 = bx_108 >>u 0x0001
// DataOut: ax bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C49:
	branch (bx_108 & 0x0004) == 0x0000 l0800_8C56
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C4F:
	ax_100 = -ax_100
	word16 dx_126
	*dxOut = -dx_116 - (ax_100 == 0x0000)
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C56:
	word16 sp_39 = sp_110 + 0x0002
	word16 di_38
	*diOut = Mem11[ss:sp_110:word16]
	word16 si_40
	*siOut = Mem11[ss:sp_39:word16]
	word16 bp_43
	*bpOut = Mem11[ss:sp_39 + 0x0002:word16]
	return ax_100
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

fn0800_8BD8_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:v3 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>



word16 fn0800_8C69(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C69_entry:
// DataOut: ax bp cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C69:
	branch cl >=u 0x10 l0800_8C81
// DataOut: ax bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8C81:
	word16 dx_37
	*dxOut = ax << cl - 0x10
	return 0x0000
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C71:
	word16 dx_29
	*dxOut = dx << cl | ax >>u -cl + 0x10
	return ax << cl
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C69_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C8A_entry:
// DataOut: ax bp cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C8A:
	branch cl >=u 0x10 l0800_8CA2
// DataOut: ax bp cl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CA2:
	int32 dx_ax_37 = (int32) dx
	word16 dx_38
	*dxOut = SLICE(dx_ax_37, word16, 16)
	return (word16) dx_ax_37 >> cl - 0x10
// DataOut: al ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C92:
	word16 dx_26
	*dxOut = dx >> cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: al ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C8A_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:dx >> cl cl:<invalid> Sequence dx:ax:(int32) dx -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CAA(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CAA_entry:
// DataOut: ax bp cl di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CAA:
	branch cl >=u 0x10 l0800_8CC2
// DataOut: ax bp cl di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CC2:
	word16 dx_36
	*dxOut = 0x0000
	return dx >>u cl - 0x10
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8CB2:
	word16 dx_25
	*dxOut = dx >>u cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: ax bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8CAA_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CCB(word16 ax, word16 cx, word16 dx, word16 bx, selector psegArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dh dl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CCB_entry:
// DataOut: ax bx cx dh di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CCB:
	byte cl_15 = (byte) cx
	branch cx >= 0x0000 l0800_8CDE
// DataOut: ax bx cl cx dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CDE:
	word16 ax_73 = ax + bx
	byte al_74 = (byte) ax_73
	branch ax_73 >=u 0x0000 l0800_8CE6
// DataOut: al ax cl dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8CE2:
	dx = dx + 0x1000
	dh = SLICE(dx + 0x1000, byte, 8) (alias)
// DataOut: al ax cl dh di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx ax:ax + bx -2(fp):<invalid> 0(fp):cs

l0800_8CE6:
	word16 dx_88
	*dxOut = DPB(dx, dh + (cl_15 << 0x04), 8) + (ax_73 >>u 0x04)
	return DPB(ax_73 >>u 0x04, al_74, 0) & 0x000F
// DataOut: al ax di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx ax:ax + bx dx:dx + 0x1000 -2(fp):<invalid> 0(fp):cs

l0800_8CD2:
	word16 bx_41 = (word16) (SEQ(~cx, ~bx + 0x0001) + 0x00000001)
// DataOut: ax bl bx cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8D0D:
	word16 ax_47 = ax - bx_41
	byte al_48 = (byte) ax_47
	branch ax_47 >=u 0x0000 l0800_8D15
// DataOut: al ax bl cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 -2(fp):<invalid> 0(fp):cs

l0800_8D11:
	dx = dx - 0x1000
// DataOut: al ax bl cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) -2(fp):<invalid> 0(fp):cs

l0800_8D15:
	word16 dx_62
	*dxOut = dx - DPB(bx_41, 0x00, 0) + (ax_47 >>u 0x04)
	return DPB(ax_47 >>u 0x04, al_48, 0) & 0x000F
// DataOut: al ax di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) dx:dx - 0x1000 -2(fp):<invalid> 0(fp):cs

fn0800_8CCB_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> ch:al cl:0x04 dh:<invalid> al:<invalid> bx:<invalid> bh:0x40 bl:0x00 -2(fp):<invalid> 0(fp):cs



word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_8D2B_entry:
// DataOut: di dil dl ds sil ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D2B:
	word16 si_17
	word16 si_11 = wArg02
	branch wArg02 < 0x0000 l0800_8D4B
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D4B:
	si_17 = -wArg02
	branch si_17 > 0x0023 l0800_8D3B
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D52:
	Mem41[ds:0x2516:word16] = 0xFFFF
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D36:
	branch wArg02 <= 0x0058 l0800_8D3E
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3B:
	si_11 = 0x0057
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3E:
	Mem29[ds:0x2516:word16] = si_11
	si_17 = (int16) Mem29[ds:si_11 + 0x2518:byte]
// DataOut: di dil dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D58:
	Mem18[ds:0x007F:word16] = si_17
	return 0xFFFF
// DataOut: al ax di dil dl ds sil ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> -4(fp):si -2(fp):bp

fn0800_8D2B_exit:
// DataOut: al ax
// DataOut (flags): DP
// SymbolicIn: sp:fp bp:bp si:si al:0xFF ax:0xFFFF -4(fp):si -2(fp):bp



void fn0800_8D76(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8D76_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D76:
	word16 dx_9
	msdos_ioctl_get_device_info(wArg02, out dx_9)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8D76_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x0000 bx:<invalid> dx:0x4400 -2(fp):bp



byte fn0800_8D87(word16 bp, word16 di, selector es, selector psegArg00, word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di es ss
// LiveOut: sil sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)
fn0800_8D87_entry:
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)

l0800_8D87:
	word16 di_140 = (word16) ptrArg08
	selector es_19 = SLICE(ptrArg08, selector, 16)
	byte bl_22 = (byte) wArg06
	branch wArg06 >u 0x0024 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8D9B:
	branch bl_22 <u 0x02 l0800_8DF7
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8DA0:
	word16 ax_103 = wArg0C
	word16 cx_168 = wArg0E
	branch wArg0E >= 0x0000 l0800_8DBC
// DataOut: ax bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DAA:
	branch bArg04 == 0x00 l0800_8DBC
// DataOut: ax bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DB0:
	Mem197[es_19:di_140:byte] = 0x2D
	ax_103 = -wArg0C
	di_140 = di_140 + 0x0001
	cx_168 = -wArg0E - (ax_103 == 0x0000)
// DataOut: ax bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DBC:
	word16 si_104 = fp - 0x0024
	branch cx_168 == 0x0000 l0800_8DD1
// DataOut: ax bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DC1:
	word16 dx_176 = SEQ(0x0000, cx_168) % wArg06
	word16 dx_183 = SEQ(dx_176, ax_103) % wArg06
	Mem190[ss:si_104:byte] = (byte) dx_183
	word16 ax_178 = SEQ(dx_176, cx_168) /u wArg06
	cx_168 = ax_178
	ax_103 = SEQ(dx_183, ax_103) /u wArg06
	si_104 = si_104 + 0x0001
	branch ax_178 == 0x0000 l0800_8DD9
// DataOut: ax bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DD9:
	branch ax_103 != 0x0000 l0800_8DD1
// DataOut: ax bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DD1:
	word16 dx_107 = SEQ(0x0000, ax_103) % wArg06
	Mem114[ss:si_104:byte] = (byte) dx_107
	ax_103 = SEQ(dx_107, ax_103) /u wArg06
	si_104 = si_104 + 0x0001
// DataOut: ax bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DDD:
	word16 cx_133 = 0x0024 - fp + si_104
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DE5:
	byte al_153
	si_104 = si_104 - 0x0001
	byte al_145 = Mem0[ss:si_104:byte]
	branch al_145 >=u 0x0A l0800_8DF1
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:<invalid> al:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF1:
	al_153 = al_145 - 0x0A + bArg02
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DED:
	al_153 = al_145 + 0x30
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF4:
	Mem155[es_19:di_140:byte] = al_153
	di_140 = di_140 + 0x0001
	cx_133 = cx_133 - 0x0001
	branch cx_133 != 0x0000 l0800_8DE5
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)

l0800_8DF7:
	Mem45[es_19:di_140:byte] = 0x00
	return (byte) si
	Mem60[es:di:byte] = 0x00
	return (byte) wArg04
// DataOut: ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

fn0800_8D87_exit:
// DataOut: sil sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 bp:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> es:<invalid> dx:<invalid> ax:<invalid> di:<invalid> si:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

l0800_8DCF:
// DataOut: ax bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0028(16) Local -002A(16) Stack +0002(8) Stack +0004(8)



byte fn0800_8E09(word16 di, selector es, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di es ss
// LiveOut: sil
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8E09_entry:
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8E09:
	return fn0800_8D87(fp - 0x0002, di, es, psegLoc12, 0x0061, 0x000A, 0x000A, DPB(ptrLoc0A, wArg02, 0), wArg04, wArg06, 0x0000)
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8E09_exit:
// DataOut: sil
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> dx:<invalid> si:<invalid> cx:<invalid> -16(fp):<invalid> -14(fp):0x000A -12(fp):0x000A -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_8E29(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_8E29_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_8E29:
	Mem12[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 ax_18 = DPB(ax, bArg08, 0)
	word16 dx_23
	*dxOut = wArg04
	branch msdos_set_file_position(wArg02, SEQ(wArg06, wArg04), bArg08, SEQ(wArg04, ax_18)) l0800_8E4B
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E4B:
	fn0800_8D2B(ds, ax_18)
	word16 dx_44
	*dxOut = 0x0000
	ax_18 = 0xFFFF (alias)
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E49:
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E50:
	return ax_18
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp

fn0800_8E29_exit:
// DataOut: al ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp



word16 fn0800_8E52(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
fn0800_8E52_entry:
// DataOut: al ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E52:
	word16 ax_20
	__syscall(0x21)
	word16 ax_11 = DPB(ax, 0x39, 8)
	branch C l0800_8E64
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E64:
	ax_20 = fn0800_8D2B(ds, ax_11)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E60:
	ax_20 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E68:
	return ax_20
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8E52_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_8E6A(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & silOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al ax di ds dx sil
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_8E6A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_8E6A:
	branch (wArg08 | wArg0A) != 0x0000 l0800_8E7D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E75:
	wArg0A = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E7D:
	word16 ax_26
	word16 dx_25
	branch (wArg04 | wArg06) != 0x0000 l0800_8E8F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E8F:
	dx_25 = wArg06
	ax_26 = wArg04
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +000A(16)

l0800_8E88:
	dx_25 = ds
	ax_26 = 0x2572
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +000A(16)

l0800_8E95:
	word16 dx_35
	word16 di_36
	selector es_37
	selector ds_38
	word16 ax_39 = fn0800_9CE6(0x4ED6, wArg0A, ax_26, dx_25, out dx_35, out di_36, out es_37, out ds_38)
	byte sil_46
	*silOut = fn0800_8E09(di_36, es_37, ax_39, dx_35, wArg02)
	Mem49[ss:fp - 0x0004:word16] = ds_38
	Mem53[ss:fp - 0x0006:word16] = 0x2576
	Mem55[ss:fp - 0x0008:word16] = Mem53[ss:fp + 0x000A:word16]
	Mem57[ss:fp - 0x000A:word16] = Mem55[ss:fp + 0x0008:word16]
	fn0800_BF5F(ptrArg00, ptrArg04)
	word16 dx_62
	*dxOut = Mem57[ss:fp + 0x000A:word16]
	return Mem57[ss:fp + 0x0008:word16]
// DataOut: al ax di ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds

fn0800_8E6A_exit:
// DataOut: al ax di ds dx sil
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -12(fp):0x4ED6 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds



word16 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dx
// LiveOut: al ax dl dx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: si sp
fn0800_8F18_entry:
// DataOut: ax bp bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F18:
	word16 ax_11 = dx
	branch dx == 0x0000 l0800_8F21
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8F1F:
	ax_11 = (word16) (bx *u dx) (alias)
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si -2(fp):si

l0800_8F21:
	branch cx == 0x0000 l0800_8F28
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F23:
	ax_11 = (word16) (ax *u cx) + ax_11
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F28:
	word32 dx_ax_28 = bx *u ax
	word16 dx_31
	*dxOut = SLICE(dx_ax_28, word16, 16) + ax_11
	return (word16) dx_ax_28
// DataOut: al ax bp di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:<invalid> si:si dx:si Sequence dx:ax:<invalid> cx:si -2(fp):si

fn0800_8F18_exit:
// DataOut: al ax dl dx
// DataOut (flags): 
// SymbolicIn: sp:fp ax:si si:si dx:<invalid> Sequence dx:ax:bx *u si cx:si -2(fp):si



byte fn0800_8F2F(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ax bl bx cl cx dx
// LiveOut: CZ dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: sp
fn0800_8F2F_entry:
// DataOut: al ax bl bx cl cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F2F:
	word16 dx_11 = dx + (ax >>u 0x04)
	word16 cx_21 = cx + (bx >>u 0x04)
	byte dl_12
	*dlOut = (byte) dx_11
	word16 ax_16 = DPB(ax >>u 0x04, bl, 8)
	word16 bx_23 = DPB(bx >>u 0x04, bl, 0)
	byte CZ_33 = cond(dx_11 - cx_21)
	branch dx_11 != cx_21 l0800_8F4F
// DataOut: ax bx dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp

l0800_8F4D:
	CZ_33 = cond((ax_16 & 0x000F) - (bx_23 & 0x000F)) (alias)
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

l0800_8F4F:
	return CZ_33
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

fn0800_8F2F_exit:
// DataOut: dl
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx



word16 fn0800_8F50(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_8F50_entry:
// DataOut: al di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F50:
	word16 wLoc04_30
	word16 ax_20
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0002) == 0x0000 l0800_8F66
// DataOut: al di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F66:
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_20) l0800_8F79
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_8F79:
	wLoc04_30 = ax_20
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F77:
// DataOut: ax di dil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F60:
	wLoc04_30 = 0x0005
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F7A:
	ax_20 = fn0800_8D2B(ds, wLoc04_30)
// DataOut: ax di dil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 bx:<invalid> ax:0x0005 ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_8F7D:
	return ax_20
// DataOut: ax di dil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F50_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_8F7F(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_8F7F_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8F7F:
	word16 ax_11 = DPB(ax, 0x41, 8)
	byte dl_16 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_8F91
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F91:
	fn0800_8D2B(ds, ax_11)
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F8D:
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F95:
	return dl_16
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F7F_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_9764(byte dl, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl ds ss
// LiveOut: ax di dl ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9764_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0014(16) Stack +0002(16) Stack +0004(16)

l0800_9764:
	fn0800_8B95((byte) (fp - 0x0006), dl, DPB(ptrLoc12, fp - 0x0006, 0))
	fn0800_8BA8((byte) (fp - 0x000A), (byte) ss, DPB(ptrLoc12, fp - 0x000A, 0))
	word16 dx_48
	word16 di_49
	selector ds_50
	word16 ax_51 = fn0800_C04F(ds, DPB(ptrLoc16, fp - 0x0006, 0), DPB(ptrLoc12, fp - 0x000A, 0), out dx_48, out di_49, out ds_50)
	branch (wArg02 | wArg04) == 0x0000 l0800_97AC
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_979C:
	selector es_80 = SLICE(ptrArg02, selector, 16)
	word16 bx_81 = (word16) ptrArg02
	Mem84[es_80:bx_81 + 0x0002:word16] = dx_48
	Mem85[es_80:bx_81:word16] = ax_51
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 ax:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16)

l0800_97AC:
	byte dl_69
	*dlOut = (byte) dx_48
	return ax_51
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_9764_exit:
// DataOut: ax di dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_97B6(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97B6_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97B6:
	word16 dx_22
	return fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x01, out dx_22)
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_97B6_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



byte fn0800_97CC(selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97CC_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97CC:
	byte al_18
	byte dl_8 = (byte) wArg02
	*dlOut = dl_8
	branch wArg02 != 0xFFFF l0800_97DC
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_97DC:
	branch (Mem0[ds:DPB(ax, 0x00, 8) + 0x2251:byte] & 0x08) == 0x00 l0800_97F2
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_97F2:
	al_18 = dl_8
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97E9:
	al_18 = (byte) (DPB(ax, 0x00, 8) + 0xFFE0) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97D7:
	al_18 = 0xFF (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_97F6:
	return al_18
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp

fn0800_97CC_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp



byte fn0800_97F8(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_97F8_entry:
// DataOut: al di ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_97F8:
	word16 ax_11 = DPB(ax, 0x41, 8)
	byte dl_16 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_980A
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_980A:
	fn0800_8D2B(ds, ax_11)
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_9806:
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_980E:
	return dl_16
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_97F8_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_9828(selector ds, segptr32 ptrArg04, selector psegArg06, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0004(32)
fn0800_9828_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(32)

l0800_9828:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(8) Stack +0004(32)

l0800_988C:
	word16 sp_160 = fp - 0x009E
	word16 di_105 = fp - 0x0098
	word16 si_102 = (word16) ptrArg04
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009C bp:fp - 0x0002 -156(fp):di -154(fp):si -24(fp):0x0000 -22(fp):0x0050 -20(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_989B:
	byte al_38 = Mem0[ds:si_102:byte]
	si_102 = si_102 + 0x0001
	byte al_111 = al_38
	ax = DPB(ax, al_38, 0) (alias)
	branch al_38 == 0x00 l0800_98B3
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98B3:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_98A1:
	branch al_38 == 0x25 l0800_98B6
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98B6:
	al_111 = Mem0[ds:si_102:byte]
	ax = DPB(ax, al_111, 0) (alias)
	si_102 = si_102 + 0x0001
	branch al_111 == 0x25 l0800_98A5
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0012(16) Local -0016(8)

l0800_98BF:
	byte bLoc0D_125 = 0x00
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98DD:
	word16 ax_137 = DPB(ax, 0x00, 8)
	byte bl_141 = (byte) ax_137
	byte dl_139 = (byte) ax_137
	word16 bx_143 = DPB(ax_137, bl_141 - 0x20, 0)
	branch bl_141 >=u 0x80 l0800_98FE
// DataOut: bp bx ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98EB:
	word16 bx_177 = DPB(ax_137, Mem0[ds:bx_143 + 0x2605:byte], 0)
	branch bx_177 <=u 0x0017 l0800_98F7
// DataOut: bp bx ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98F7:
	switch (bx_177 << 0x0001) { l0800_9917 }
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9917:
	branch true l0800_98FE
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98FE:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_991C:
	branch bLoc0D_125 == 0x2B l0800_9925
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9922:
	bLoc0D_125 = dl_139
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_9925:
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98DB:
	ax = DPB(ax_137, Mem0[ds:si_102:byte], 0) (alias)
	si_102 = si_102 + 0x0001
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -000D(0) Local -0012(16) Local -0016(0)

l0800_98F4:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_9C82:
	word16 si_150 = si_102
	byte al_155 = 0x25
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_9C8D:
	di_105 = fn0800_984F(al_155, fp - 0x0002, di_105)
	byte al_164 = Mem0[ds:si_150:byte]
	sp_160 = sp_160 + 0xFFFE
	si_150 = si_150 + 0x0001
	al_155 = al_164
	branch al_164 != 0x00 l0800_9C8D
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16) Local -0016(0)

l0800_9C96:
	branch bLoc16 >= 0x50 l0800_9C9F
	branch bLoc16 >= 0x50 l0800_9C9F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9C9C:
	fn0800_9858(fp - 0x0002, fn0800_9858(fp - 0x0002, di_105))
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9C9F:
	word16 sp_79 = sp_160 + 0x0002
	branch 0x0000 == 0x0000 l0800_9CAB
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CAB:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CA6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:0x00 bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp
// LocalsOut: fp(16)

l0800_9CAE:
	word16 di_83
	*diOut = Mem0[ss:sp_79:word16]
	return Mem0[ss:sp_79 + 0x0002:word16]
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp

fn0800_9828_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):0xFFFF -10(fp):0xFFFF -6(fp):<invalid> -4(fp):0x0020 -2(fp):bp

l0800_98A5:
	Mem104[ss:di_105:byte] = al_111
	byte v16_106 = bLoc16 - 0x01
	di_105 = di_105 + 0x0001
	bLoc16 = v16_106
	branch v16_106 > 0x00 l0800_989B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)

l0800_98AE:
	di_105 = fn0800_9858(fp - 0x0002, di_105)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -6(fp):fp - 0x0098 -2(fp):bp
// LocalsOut: fp(16) Local -0016(8)



word16 fn0800_984F(byte al, word16 bp, word16 di)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ss
// LiveOut: di
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved: sp
fn0800_984F_entry:
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_984F:
	Mem3[ss:di:byte] = al
	byte v8_8 = Mem3[ss:bp - 0x0014:byte] - 0x01
	Mem9[ss:bp - 0x0014:byte] = v8_8
	branch v8_8 != 0x00 l0800_988B_in_fn0800_984F
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_988B_in_fn0800_984F:
	return di + 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_9856_thunk_fn0800_9858:
	word16 di_13 = fn0800_9858(bp, di + 0x0001)
	return di_13
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_9856_thunk_fn0800_9858:
	return fn0800_9858(bp, di_13)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>

fn0800_984F_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_9858(word16 bp, word16 di)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: di sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved:
fn0800_9858_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9858:
	word16 sp_33
	word16 bx_34
	selector ss_35
	word16 cx_36
	word16 dx_37
	selector es_38
	word16 bp_39
	word16 ax_40
	word16 di_41
	byte SCZO_42
	selector cs_43
	byte SZO_44
	byte C_45
	byte Z_46
	call SEQ(cs, Mem0[ss:bp + 0x000E:word16]) (retsize: 2; depth: 20)
		uses: ax_22,bp,bx,cs,cx,di_17,dx,es,SCZO_18,sp_30,ss,wLoc02_4,wLoc04_7,wLoc06_10,wLoc08_13,wLoc0A_21,wLoc0C_24,wLoc0E_26,wLoc10_29,wLoc12_31
		defs: ax_40,bp_39,bx_34,C_45,cs_43,cx_36,di_41,dx_37,es_38,SCZO_42,sp_33,ss_35,SZO_44,Z_46
	branch ax_40 != 0x0000 l0800_987B
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9876:
	Mem64[ss_35:bp_39 - 0x0016:word16] = 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 ax:bp - 0x0096 | bp - 0x0096 di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx
// LocalsOut: fp(16)

l0800_987B:
	Mem51[ss_35:bp_39 - 0x0014:word16] = 0x0050
	Mem53[ss_35:bp_39 - 0x0012:word16] = Mem51[ss_35:bp_39 - 0x0012:word16] + di_41
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 ax:bp - 0x0096 | bp - 0x0096 di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_988B:
	return bp_39 - 0x0096
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A ax:bp - 0x0096 | bp - 0x0096 di:bp - 0x0096 es:<invalid> dx:<invalid> cx:di - (bp - 0x0096) bx:bp - 0x0096 -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_9858_exit:
// DataOut: di sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A ax:bp - 0x0096 | bp - 0x0096 di:bp - 0x0096 es:<invalid> dx:<invalid> cx:di - (bp - 0x0096) bx:bp - 0x0096 -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



word16 fn0800_9CE6(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax di ds dx es
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_9CE6_entry:
	*diOut = di
	*dsOut = ds
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_9CE6:
	word16 ax_17 = fn0800_BFC7(DPB(ptrLoc08, wArg06, 0), wArg08)
	selector es_41
	*esOut = fn0800_B03B(DPB(ptrLoc0E, wArg02, 0), wArg04, DPB(ptrLoc0A, wArg06, 0), ax_17 + 0x0001)
	word16 dx_43
	*dxOut = wArg04
	return wArg02 + ax_17
// DataOut: ax di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9CE6_exit:
// DataOut: ax di ds dx es
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_9D41(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9D41_entry:
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D41:
	word16 wLoc04_15
	word16 wLoc02_11
	selector ds_10
	branch dx == Mem0[0x0800:0x9D35:word16] l0800_9D7F
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D48:
	selector ds_43 = Mem0[dx:0x0002:selector]
	branch Mem0[ds_43:0x0002:word16] == 0x0000 l0800_9D5C
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D5C:
	branch ds_43 == Mem0[0x0800:0x9D35:word16] l0800_9D7A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D7A:
	dx = Mem0[0x0800:0x9D35:word16]
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(16)

l0800_9D7F:
	Mem39[0x0800:0x9D35:word16] = 0x0000
	Mem40[0x0800:0x9D37:word16] = 0x0000
	Mem41[0x0800:0x9D39:word16] = 0x0000
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_9D65:
	Mem51[0x0800:0x9D37:word16] = Mem0[ds_43:0x0008:word16]
	fn0800_9E15(ds_43)
	wLoc02_11 = ds_43
	wLoc04_15 = 0x0000
	ds_10 = Mem51[0x0800:0x9D3B:selector]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(8) Local -0002(0) Local -0004(0)

l0800_9D55:
	Mem46[0x0800:0x9D37:word16] = ds_43
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D94:
	ds_10 = Mem0[0x0800:0x9D3B:selector]
	wLoc02_11 = dx
	wLoc04_15 = 0x0000
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(8) Local -0002(0) Local -0004(0)

l0800_9D9D:
	return fn0800_A1D6(ds_10, wLoc04_15, wLoc02_11)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_9D41_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



byte fn0800_9DA4(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9DA4_entry:
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9DA4:
	selector es_7 = Mem0[dx:0x0002:selector]
	Mem8[dx:0x0002:word16] = 0x0000
	Mem9[dx:0x0008:word16] = es_7
	word16 wLoc02_12 = dx
	branch dx == Mem9[0x0800:0x9D35:word16] l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9DBC:
	branch Mem9[es_7:0x0002:word16] != 0x0000 l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: fp(16) Local -0002(16)

l0800_9DEA:
	fn0800_9E3E(dx)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DC4:
	word16 ax_44 = Mem9[dx:0x0000:word16]
	Mem50[es_7:0x0000:word16] = Mem9[es_7:0x0000:word16] + ax_44
	word16 dx_52 = dx + ax_44
	wLoc02_12 = es_7
	dl = (byte) dx_52 (alias)
	branch Mem50[dx_52:0x0002:word16] != 0x0000 l0800_9DE3
// DataOut: cx dl es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DE3:
	Mem58[dx_52:0x0002:word16] = es_7
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DDC:
	Mem57[dx_52:0x0008:word16] = es_7
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DED:
	word16 ax_20 = wLoc02_12 + Mem9[wLoc02_12:0x0000:word16]
	branch Mem9[ax_20:0x0002:word16] == 0x0000 l0800_9DFF
// DataOut: dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFF:
	Mem30[wLoc02_12:0x0000:word16] = Mem9[wLoc02_12:0x0000:word16] + Mem9[ax_20:0x0000:word16]
	Mem36[ax_20 + Mem30[ax_20:0x0000:word16]:0x0002:word16] = wLoc02_12
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9E11_thunk_fn0800_9E15:
	fn0800_9E15(ax_20)
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFE:
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

fn0800_9DA4_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>



void fn0800_9E15(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO bh bl bx ebx es rbx
// Preserved: ds sp
fn0800_9E15_entry:
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E15:
	branch ds == Mem0[ds:0x0006:word16] l0800_9E36
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E36:
	Mem15[0x0800:0x9D39:word16] = 0x0000
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

l0800_9E1D:
	selector es_9 = Mem0[ds:0x0006:selector]
	selector ds_10 = Mem0[ds:0x0004:selector]
	Mem11[ds_10:0x0006:word16] = es_9
	Mem12[es_9:0x0004:word16] = ds_10
	Mem13[0x0800:0x9D39:word16] = ds_10
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

fn0800_9E15_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds es:<invalid> ds:ds



void fn0800_9E3E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bx eax ebx es rax rbx
// Preserved: sp ss
fn0800_9E3E_entry:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E3E:
	word16 ax_3 = Mem0[0x0800:0x9D39:word16]
	branch ax_3 == 0x0000 l0800_9E67
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E67:
	Mem29[0x0800:0x9D39:word16] = ds
	Mem30[ds:0x0004:word16] = ds
	Mem31[ds:0x0006:word16] = ds
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_9E46:
	__cli()
	selector es_20 = Mem0[ax_3:0x0006:selector]
	Mem22[ax_3:0x0006:word16] = ds
	Mem23[ds:0x0004:word16] = ax_3
	Mem27[es_20:0x0004:word16] = ds
	Mem28[ds:0x0006:word16] = es_20
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

fn0800_9E3E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> bx:ss ss:ss es:<invalid> -2(fp):<invalid>



byte fn0800_9E75(selector ds, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0004(16)
fn0800_9E75_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_9E75:
	Mem13[0x0800:0x9D3B:word16] = ds
	byte dl_17 = (byte) wArg04
	branch wArg04 == 0x0000 l0800_9E95
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E86:
	branch wArg04 != Mem13[0x0800:0x9D37:word16] l0800_9E92
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E92:
	dl_17 = fn0800_9DA4(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E8D:
	dl_17 = fn0800_9D41(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E95:
	selector ds_26
	*dsOut = Mem13[0x0800:0x9D3B:selector]
	return dl_17
// DataOut: dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_9E75_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> di:di si:si ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_9E9E(word16 ax, word16 bp, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9E9E_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E9E:
	word16 dx_15
	word16 ax_16 = fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0000, 0x0000, out dx_15)
	branch (ax_16 & 0x000F) == 0x0000 l0800_9EC7
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9EB3:
	word16 dx_85
	fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0010 - (ax_16 & 0x000F), 0x0000, out dx_85)
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):ax
// LocalsOut: fp(16) Local -0002(16)

l0800_9EC7:
	word16 dx_43
	branch fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], ax << 0x04, (word16) SLICE(ax, byte, 8) >>u 0x04, out dx_43) == 0xFFFF l0800_9EFE
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9EFE:
	word16 dx_73
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9EE6:
	Mem60[0x0800:0x9D35:word16] = dx_43
	Mem61[0x0800:0x9D37:word16] = dx_43
	Mem63[dx_43:0x0000:word16] = ax
	Mem64[dx_43:0x0002:word16] = dx_43
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

fn0800_9E9E_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> Sequence dx:ax:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F02(word16 ax, word16 bp, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah ax bp ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9F02_entry:
// DataOut: ah ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_9F02:
	selector ds_14 = Mem0[0x0800:0x9D3B:selector]
	word16 dx_116
	word16 ax_21 = fn0800_A215(bp, ds_14, ax << 0x04, (word16) ah >>u 0x04, out dx_116)
	word16 bx_111 = ax
	branch ax_21 == 0xFFFF l0800_9F58
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9F20:
	branch (ax_21 & 0x000F) != 0x0000 l0800_9F3D
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax
// LocalsOut: fp(16)

l0800_9F3D:
	bx_111 = ax
	word16 dx_105
	branch fn0800_A215(bp, ds_14, -(ax_21 & 0x000F) + 0x0010, 0x0000, out dx_105) == 0xFFFF l0800_9F58
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9F58:
	word16 dx_64
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9F55:
	*dxOut = dx_116 + 0x0001
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):<invalid> -2(fp):ax

l0800_9F25:
	word16 cx_84 = Mem0[0x0800:0x9D37:word16]
	Mem85[0x0800:0x9D37:word16] = dx_116
	Mem87[dx_116:0x0000:word16] = bx_111
	Mem88[dx_116:0x0002:word16] = cx_84
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

fn0800_9F02_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax ds dx
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl ds dx eax ebx edx rax rbx rdx
// Preserved: sp
fn0800_9F5C_entry:
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9F5C:
	Mem8[ds:0x0000:word16] = Mem0[ds:0x0000:word16] - ax
	word16 dx_9 = dx + Mem8[ds:0x0000:word16]
	*dxOut = dx_9
	Mem11[dx_9:0x0000:word16] = ax
	Mem12[dx_9:0x0002:word16] = dx
	Mem17[dx_9 + Mem12[dx_9:0x0000:word16]:0x0002:word16] = dx_9
	return 0x0004
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9F5C_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> dx:<invalid> ds:<invalid> ax:0x0004



word16 fn0800_9F7F(word16 bp, selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16)
fn0800_9F7F_entry:
	*siOut = si
	*diOut = di
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_9F7F:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_9F87_thunk_fn0800_9F92:
	word16 dx_12
	word16 bp_13
	selector ds_14
	return fn0800_9F92(wArg02, 0x0000, fp - 0x0002, ds, bp, out dx_12, out bp_13, out ds_14)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:0x0000 ax:<invalid> -2(fp):bp

fn0800_9F7F_exit:
// DataOut: ax bp di ds dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_9F89(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9F89_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_9F89:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_9F8F_thunk_fn0800_9F92:
	word16 dx_14
	word16 bp_15
	selector ds_16
	return fn0800_9F92(wArg02, wArg04, fp - 0x0002, ds, bp, out dx_14, out bp_15, out ds_16)
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> -2(fp):bp

fn0800_9F89_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_9F92(word16 ax, word16 dx, word16 bp, selector ds, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds dx ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si
// Stack args: Stack +0000(16)
l0800_9F92:
	cx = ax
	cx = cx | dx
	SZO = cond(cx)
	Z = SZO (alias)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = si
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = di
	Mem0[0x0800:0x9D3B:word16] = ds
	branch Test(EQ,Z) l0800_9FFD
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	ax = fn0800_9F9F(ax, dx, bp, out dx, out bp, out ds)
	return ax
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	ax = fn0800_9F9F(ax, dx, bp, out dx, out bp, out ds)
	return ax
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

fn0800_9F92_entry:
	def fp
	def ax
	def dx
	def si
	def di
	def ds
	def dxOut
	def bpOut
	def dsOut
	def bp
	def wArg00
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9F92:
	sp_1 = fp
	cx_3 = ax
	cx_5 = cx_3 | dx
	SZO_6 = cond(cx_5)
	Z_7 = SZO_6 (alias)
	C_8 = false
	sp_9 = fp - 0x0002
	wLoc02_11 = si
	sp_12 = fp - 0x0004
	wLoc04_14 = di
	Mem16[0x0800:0x9D3B:word16] = ds
	branch cx_5 == 0x0000 l0800_9FFD_in_fn0800_9F92
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9FFD_in_fn0800_9F92:
	ds_36 = Mem16[0x0800:0x9D3B:selector]
	di_37 = wLoc04_14
	sp_38 = fp - 0x0002
	si_39 = wLoc02_11
	sp_40 = fp
	bp_42 = wArg00
	sp_43 = fp + 0x0002
	return ax
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx -4(fp):di -2(fp):si

l0800_9F9D_thunk_fn0800_9F9F:
	ax_31 = fn0800_9F9F(ax, dx, bp, out dx_28, out bp_29, out ds_30)
	return ax_31
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx -4(fp):di -2(fp):si

l0800_9F9D_thunk_fn0800_9F9F:
	ax_35 = fn0800_9F9F(ax_31, dx_28, bp_29, out dx_32, out bp_33, out ds_34)
	return ax_35
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -4(fp):di -2(fp):si

fn0800_9F92_exit:
	di_17 = PHI(di_37, di, di, di, di)
	si_18 = PHI(si_39, si, si, si, si)
	sp_19 = PHI(sp_43, sp_12, sp_12, sp, sp)
	dx_20 = PHI(dx, dx_28, dx_32, dx, dx)
	bp_21 = PHI(bp_42, bp_29, bp_33, bp, bp)
	ds_22 = PHI(ds_36, ds_30, ds_34, ds, ds)
	ax_23 = PHI(ax, ax_31, ax_35, ax, ax)
	use dx_20 (=> dxOut)
	use bp_21 (=> bpOut)
	use ds_22 (=> dsOut)
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -4(fp):di -2(fp):si



word16 fn0800_9F9F(word16 ax, word16 dx, word16 bp, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp dx ss
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_9F9F_entry:
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_9F9F:
	word16 ax_105
	int32 dx_ax_5 = SEQ(dx, ax + 0x0013)
	word16 ax_8 = (word16) (dx_ax_5 + 0x00000013)
	word16 dx_9 = SLICE(dx_ax_5 + 0x00000013, word16, 16)
	branch dx_ax_5 <u 0x00000013 l0800_9FE8
// DataOut: ax bp dl dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9FA7:
	branch (dx_9 & 0xFFF0) != 0x0000 l0800_9FE8
// DataOut: ax bp dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FE8:
	ax_105 = 0x0000 (alias)
	word16 dx_45
	*dxOut = 0x0000
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FAD:
	word16 ax_60 = DPB(ax_8 >>u 0x04, SLICE(ax_8 >>u 0x04, byte, 8) | (byte) (dx_9 << 0x04), 8)
	branch Mem0[0x0800:0x9D35:word16] == 0x0000 l0800_9FDE
// DataOut: ah ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FDE:
	word16 dx_112
	ax_105 = fn0800_9E9E(ax_60, bp, out dx_112)
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FBE:
	word16 dx_67 = Mem0[0x0800:0x9D39:word16]
	word16 dx_68
	*dxOut = dx_67
	branch dx_67 == 0x0000 l0800_9FD9
// DataOut: ah ax bp dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FC7:
// DataOut: ah ax bp bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FC9:
	branch Mem0[dx_68:0x0000:word16] >=u ax_60 l0800_9FED
// DataOut: ah ax bp bx ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FED:
	branch Mem0[dx_68:0x0000:word16] >u ax_60 l0800_9FE3
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FE3:
	word16 dx_108
	ax_105 = fn0800_9F5C(ax_60, dx_68, dx_68, out dx_108)
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FEF:
	fn0800_9E15(dx_68)
	Mem104[dx_68:0x0002:word16] = Mem0[dx_68:0x0008:word16]
	ax_105 = 0x0004
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FD1:
	dx_68 = Mem0[dx_68:0x0006:word16]
	*dxOut = dx_68
	branch dx_68 != dx_67 l0800_9FC9
// DataOut: ah ax bp bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FD9:
	word16 dx_84
	ax_105 = fn0800_9F02(ax_60, bp, out dx_84)
// DataOut: ax dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FFD:
	selector ds_28
	*dsOut = Mem0[0x0800:0x9D3B:selector]
	word16 bp_34
	*bpOut = Mem0[ss:v3 + 0x0004:word16]
	return ax_105
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> Sequence dx:ax:(int32) (ax + 0x0026 ^ ax + 0x0026) cl:<invalid> ah:<invalid> ds:<invalid> bx:<invalid> bl:<invalid> cx:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid>

fn0800_9F9F_exit:
// DataOut: ax bp ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:v3 + 0x0006 ax:<invalid> dx:<invalid> Sequence dx:ax:(int32) (ax + 0x0026 ^ ax + 0x0026) ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> cx:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid>



word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A162_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A162:
	word16 ax_35
	word16 si_17 = wArg04 + 0x0001 - Mem0[ds:0x007B:word16] + 0x003F >>u 0x06
	branch si_17 != Mem0[ds:0x2698:word16] l0800_A18D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A18D:
	word16 ax_66 = (si_17 << 0x06) + Mem0[ds:0x007B:word16]
	word16 si_62 = si_17 << 0x06
	word16 dx_63 = Mem0[ds:0x0091:word16]
	byte al_67 = (byte) ax_66
	branch ax_66 <=u dx_63 l0800_A1A5
// DataOut: al ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A19F:
	si_62 = dx_63 - Mem0[ds:0x007B:word16]
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1A5:
	word16 ax_75 = fn0800_A401(al_67, ds, Mem0[ds:0x007B:word16], si_62)
	byte dl_81
	*dlOut = (byte) ax_75
	branch ax_75 != 0xFFFF l0800_A1C1
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1C1:
	Mem91[ds:0x0091:word16] = Mem0[ds:0x007B:word16] + ax_75
	Mem92[ds:0x008F:word16] = 0x0000
	ax_35 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1B6:
	Mem88[ds:0x2698:word16] = si_62 >>u 0x06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A17B:
	Mem55[ds:0x008D:word16] = wArg04
	Mem56[ds:0x008B:word16] = wArg02
	byte dl_54
	*dlOut = (byte) wArg02
	ax_35 = 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1D1:
	return ax_35
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A162_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A1D6_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1D6:
	byte dl_15
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0089:word16], wArg04, Mem0[ds:0x0087:word16], out dl_15) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1EC:
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0091:word16], wArg04, Mem0[ds:0x008F:word16], out dl_15) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out dl_15) != 0x0000 l0800_A211
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp

l0800_A211:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A20C:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A213:
	return dl_15
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A1D6_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A215(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A215_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A215:
	word16 ax_116
	word16 dx_15
	word16 ax_17 = fn0800_8C69(Mem0[ds:0x008D:word16], 0x04, 0x0000, wLoc0C, out dx_15) + Mem0[ds:0x008B:word16]
	ui32 dx_ax_26 = SEQ(dx_15 + (ax_17 <u 0x0000), ax_17 + wArg02) + wArg04_wArg02
	word16 ax_27 = (word16) dx_ax_26
	word16 dx_28 = SLICE(dx_ax_26, word16, 16)
	branch dx_28 < 0x000F l0800_A246
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A237:
	branch dx_28 > 0x000F l0800_A23E
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A239:
	branch ax_27 <=u 0xFFFF l0800_A246
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A246:
	word16 dx_76
	word16 ax_77 = fn0800_8CCB(Mem0[ds:0x008B:word16], wArg04, Mem0[ds:0x008D:word16], wArg02, bp, out dx_76)
	byte dl_84
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0089:word16], dx_76, Mem0[ds:0x0087:word16], out dl_84) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A26C:
	byte dl_94
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0091:word16], dx_76, Mem0[ds:0x008F:word16], out dl_94) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A27F:
	word16 ax_96 = Mem0[ds:0x008D:word16]
	word16 dx_97 = Mem0[ds:0x008B:word16]
	Mem102[ss:fp - 0x000C:word16] = dx_76
	Mem105[ss:fp - 0x000E:word16] = ax_77
	byte dl_107
	branch fn0800_A162(ds, wArg00, wArg02, out dl_107) == 0x0000 l0800_A23E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A299:
	word16 dx_114
	*dxOut = ax_96
	ax_116 = dx_97
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A23E:
	word16 dx_66
	*dxOut = 0xFFFF
	ax_116 = 0xFFFF
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A29F:
	return ax_116
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A215_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A2A3(byte al, selector ds, word16 wArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0004(16) Stack +0006(32)
fn0800_A2A3_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(32)

l0800_A2A3:
	msdos_unknown_2144()
	word16 dx_11 = (word16) ptrArg06
	word16 ax_16 = DPB(ax, bArg04, 0)
	branch C l0800_A2C6
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_A2C6:
	ax_16 = fn0800_8D2B(ds, ax_16)
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2BA:
	branch wArg04 != 0x0000 l0800_A2C4
// DataOut: al ax di dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C4:
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C0:
	ax_16 = dx_11
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2CA:
	return ax_16
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A2A3_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A401_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A401:
	word16 ax_17
	word16 ax_8 = DPB(ax, 0x4A, 8)
	word16 bx_13
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_13) l0800_A415
// DataOut: ax bx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A415:
	fn0800_8D2B(ds, ax_8)
	ax_17 = bx_13
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A410:
	ax_17 = 0xFFFF
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A41B:
	return ax_17
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp

fn0800_A401_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp



word16 fn0800_A471(byte bl, selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(32)
fn0800_A471_entry:
// DataOut: bl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0002(32)

l0800_A471:
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 si_164 = (word16) ptrArg02
	word16 ax_124 = 0x0000
	word16 dx_149 = 0x0000
	*dxOut = dx_149
	byte dl_148 = 0x00
	ui32 dh_bx_135 = DPB(dh_bx, 0x00, 8)
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A487:
	byte bl_225 = Mem0[es_19:si_164:byte]
	bx = DPB(bx, bl_225, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_225, 0) (alias)
	si_164 = si_164 + 0x0001
	branch (Mem0[ds:bx + 0x2251:byte] & 0x01) != 0x00 l0800_A487
// DataOut: ax bl di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A490:
	word16 bp_224 = 0x0000
	branch bl_225 == 0x2B l0800_A49E
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A498:
	branch bl_225 != 0x2D l0800_A4A2
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49D:
	bp_224 = 0x0001
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49E:
	bl_225 = Mem0[es_19:si_164:byte]
	bx = DPB(bx, bl_225, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_225, 0) (alias)
	si_164 = si_164 + 0x0001
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A2:
	branch bl_225 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A7:
	byte bl_133 = bl_225 - 0x30
	bx = DPB(bx, bl_133, 0) (alias)
	dh_bx_135 = DPB(dh_bx_135, bl_133, 0) (alias)
	branch bl_133 <u 0x00 l0800_A4D6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4AC:
	ui32 dl_ax_146 = SEQ(dl_148, (word16) (ax_124 *u 0x000A) + bx) + dh_bx_135
	ax_124 = (word16) dl_ax_146 (alias)
	dl_148 = SLICE(dl_ax_146, byte, 16) (alias)
	*dxOut = SLICE(dl_ax_146, word16, 16)
	branch dl_ax_146 == 0x00000000 l0800_A49E
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B4:
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4C8:
	byte bl_165 = Mem0[es_19:si_164:byte]
	si_164 = si_164 + 0x0001
	branch bl_165 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D1:
	bx = DPB(bx, bl_165 - 0x30, 0) (alias)
	branch bl_165 >=u 0x30 l0800_A4B6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B6:
	int32 dx_ax_181 = ax_124 *u 0x000A
	int32 dx_ax_204 = SEQ((word16) (dx_149 *u 0x000A), (word16) dx_ax_181 + bx) + SEQ(SLICE(dx_ax_181, word16, 16), bx)
	ax_124 = (word16) dx_ax_204 (alias)
	*dxOut = SLICE(dx_ax_204, word16, 16)
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D6:
	word16 bp_93 = bp_224 - 0x0001
	branch bp_93 < 0x0000 l0800_A4E0
	branch bp_93 < 0x0001 l0800_A4E0
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D9:
	word16 ax_120 = -ax_124
	ax_124 = -ax_120
	word16 dx_126
	*dxOut = -(-dx_149 - (ax_120 == 0x0000)) - (ax_124 == 0x0000)
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4E0:
	return ax_124
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dx:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp

fn0800_A471_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:di bl:<invalid> si:si dx:<invalid> es:es dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_A4F6(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds
// LiveOut: ds
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_A4F6_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A4F6:
	word16 ax_22 = fn0800_A53C(0x00, ds, DPB(ptrLoc08, wArg02, 0), 0x00, bp)
	branch ax_22 != 0xFFFF l0800_A513
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A513:
	word16 dx_59 = ax_22 & 0xFFFE
	branch (wArg06 & 0x0080) != 0x0000 l0800_A520
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A51D:
	dx_59 = ax_22 & 0xFFFE | 0x0001
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A520:
	branch fn0800_A53C(0x01, ds, DPB(ptrLoc0A, wArg02, 0), 0x01, dx_59) == 0xFFFF l0800_A50F
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_A538:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):<invalid> -2(fp):bp

l0800_A50F:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A53A:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A4F6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A53C(byte al, selector ds, segptr32 ptrArg02, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0006(8) Stack +0008(16)
fn0800_A53C_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(8) Stack +0008(16)

l0800_A53C:
	word16 ax_24
	msdos_unknown_2143()
	word16 ax_15 = DPB(ax, bArg06, 0)
	branch C l0800_A553
// DataOut: ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A553:
	ax_24 = fn0800_8D2B(ds, ax_15)
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A550:
	ax_24 = wArg08
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A557:
	return ax_24
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A53C_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A559(byte al, selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A559_entry:
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A559:
	byte al_18
	byte dl_8
	*dlOut = (byte) wArg02
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A56E
// DataOut: al di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A56E:
	Mem33[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_18 = fn0800_A57F(al, ds, wArg02)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_A565:
	al_18 = (byte) fn0800_8D2B(ds, 0x0006) (alias)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_A57D:
	return al_18
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_A559_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A57F_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A57F:
	byte al_15
	word16 ax_8 = DPB(ax, 0x3E, 8)
	branch msdos_close_file(wArg02) l0800_A597
// DataOut: ax bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A597:
	al_15 = (byte) fn0800_8D2B(ds, ax_8) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A58B:
	Mem21[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_15 = 0x00 (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A59B:
	return al_15
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp

fn0800_A57F_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp



word16 fn0800_A59D(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A59D_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A59D:
	word16 wLoc08_107
	word16 ax_123
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A5B2
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5B2:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_A5C4
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5C4:
	word16 ax_103 = 0x4400
	word16 dx_91
	branch msdos_ioctl_get_device_info(wArg02, out dx_91) l0800_A60C
// DataOut: ax bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5CE:
	branch (dl & 0x80) != 0x00 l0800_A608
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5D3:
	ax_103 = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_A60C
// DataOut: ax bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5DE:
	ax_103 = 0x4202
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_A60C
// DataOut: ax bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4201 bx:<invalid> cx:0x0000 dx:0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5F3:
	ax_103 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_A60C
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4202 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A60C:
	wLoc08_107 = ax_103
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A5FA:
	branch false l0800_A608
// DataOut: di ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5FF:
	branch false l0800_A606
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A601:
	branch false l0800_A608
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A608:
	ax_123 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A606:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5BF:
	ax_123 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5AC:
	wLoc08_107 = 0x0006
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A60D:
	ax_123 = fn0800_8D2B(ds, wLoc08_107)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A610:
	return ax_123
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp

fn0800_A59D_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp



byte fn0800_A614(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al di dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_A614_entry:
	*diOut = di
	*dsOut = ds
	*dlOut = dl
// DataOut: bp di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A614:
	word16 si_151 = 0xFFFF
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0012:word16] == wArg02 l0800_A62A
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A62A:
	selector es_67 = SLICE(ptrArg02, selector, 16)
	word16 bx_68 = (word16) ptrArg02
	branch Mem0[es_67:bx_68 + 0x0006:word16] == 0x0000 l0800_A65F
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A634:
	branch Mem0[es_67:bx_68:word16] >= 0x0000 l0800_A647
// DataOut: bp bx di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A63A:
	byte dl_186
	branch fn0800_A6B7(ds, DPB(ptrLoc08, bx_68, 0), wArg04, out dl_186, out ds) != 0x0000 l0800_A6B2
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_A647:
	selector es_164 = SLICE(ptrArg02, selector, 16)
	word16 bx_165 = (word16) ptrArg02
	branch (Mem0[es_164:bx_165 + 0x0002:word16] & 0x0004) == 0x0000 l0800_A65F
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_A652:
	byte dl_174
	*dlOut = fn0800_9E75(ds, Mem0[es_164:bx_165 + 0x000A:word16], out ds)
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +0002(32)

l0800_A65F:
	selector es_84 = SLICE(ptrArg02, selector, 16)
	word16 bx_85 = (word16) ptrArg02
	branch Mem0[es_84:bx_85 + 0x0004:byte] < 0x00 l0800_A675
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +0002(32)

l0800_A669:
	word16 ax_142 = (int16) Mem0[es_84:bx_85 + 0x0004:byte]
	byte dl_146
	si_151 = DPB(ax_142, fn0800_A559((byte) ax_142, ds, ax_142, out dl_146), 0)
// DataOut: bp di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_A675:
	selector es_98 = SLICE(ptrArg02, selector, 16)
	word16 bx_99 = (word16) ptrArg02
	Mem100[es_98:bx_99 + 0x0002:word16] = 0x0000
	Mem101[es_98:bx_99 + 0x0006:word16] = 0x0000
	Mem102[es_98:bx_99:word16] = 0x0000
	Mem103[es_98:bx_99 + 0x0004:byte] = 0xFF
	branch Mem103[es_98:bx_99 + 0x0010:word16] == 0x0000 l0800_A6B2
// DataOut: bp bx di dl ds es sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0)

l0800_A695:
	word16 dx_119
	byte sil_120
	word16 di_121
	selector ds_122
	word16 ax_123 = fn0800_8E6A(fp - 0x0002, ds, Mem103[es_98:bx_99 + 0x0010:word16], 0x0000, 0x0000, 0x0000, 0x0000, out dx_119, out sil_120, out di_121, out ds_122)
	Mem127[ss:fp - 0x0006:word16] = dx_119
	Mem129[ss:fp - 0x0008:word16] = ax_123
	byte dl_131
	*dlOut = fn0800_97F8((byte) ax_123, ds_122, ptrArg00)
	Mem0[Mem129[ss:fp + 0x0002:segptr32] + 0x0010:word16] = 0x0000
// DataOut: di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_A627:
// DataOut: di dl ds sil sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp

l0800_A6B2:
	return (byte) si_151
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A614_exit:
// DataOut: al di dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A6B7(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A6B7_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A6B7:
	word16 ax_29
	branch (wArg02 | wArg04) != 0x0000 l0800_A6C9
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6C9:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0012:word16] == wArg02 l0800_A6DB
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6DB:
	selector es_101 = SLICE(ptrArg02, selector, 16)
	word16 bx_102 = (word16) ptrArg02
	branch Mem0[es_101:bx_102:word16] < 0x0000 l0800_A732
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A732:
	selector es_134 = SLICE(ptrArg02, selector, 16)
	word16 bx_135 = (word16) ptrArg02
	word16 ax_137 = Mem0[es_134:bx_135 + 0x0006:word16] + Mem0[es_134:bx_135:word16]
	Mem141[es_134:bx_135:word16] = Mem0[es_134:bx_135:word16] - (ax_137 + 0x0001)
	word16 ax_145 = Mem141[es_134:bx_135 + 0x000A:word16]
	word16 dx_146 = Mem141[es_134:bx_135 + 0x0008:word16]
	Mem148[es_134:bx_135 + 0x000E:word16] = ax_145
	Mem149[es_134:bx_135 + 0x000C:word16] = dx_146
	byte dl_158
	selector ds_159
	branch fn0800_C632(ds, (int16) Mem149[es_134:bx_135 + 0x0004:byte], dx_146, ax_145, ax_137 + 0x0001, out dl_158, out ds_159) == ax_137 + 0x0001 l0800_A778
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32)

l0800_A765:
	selector es_165 = SLICE(ptrArg02, selector, 16)
	word16 bx_166 = (word16) ptrArg02
	branch (Mem149[es_165:bx_166 + 0x0002:word16] & 0x0200) != 0x0000 l0800_A778
// DataOut: bx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A770:
	Mem171[es_165:bx_166 + 0x0002:word16] = Mem149[es_165:bx_166 + 0x0002:word16] | 0x0010
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6E4:
	branch (Mem0[es_101:bx_102 + 0x0002:word16] & 0x0008) != 0x0000 l0800_A701
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6EC:
	byte dl_128
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem0[es_101:bx_102 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6FB:
	branch Mem0[es_101:bx_102 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A701:
	selector es_109 = SLICE(ptrArg02, selector, 16)
	word16 bx_110 = (word16) ptrArg02
	Mem111[es_109:bx_110:word16] = 0x0000
	byte dl_115
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem111[es_109:bx_110 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A718:
	branch Mem111[es_109:bx_110 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: bx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A71E:
	word16 dx_121 = Mem111[es_109:bx_110 + 0x0008:word16]
	Mem123[es_109:bx_110 + 0x000E:word16] = Mem111[es_109:bx_110 + 0x000A:word16]
	Mem124[es_109:bx_110 + 0x000C:word16] = dx_121
	byte dl_122
	*dlOut = (byte) dx_121
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6D5:
	ax_29 = 0xFFFF
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6C3:
	selector ds_59
	byte dl_60
	*dlOut = fn0800_A877(ds, out ds_59)
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A778:
	ax_29 = 0x0000
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A77A:
	return ax_29
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A6B7_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> si:si dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A77D(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_A77D_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_A77D:
	word16 di_14 = wArg06
	word16 cx_15 = 0x0000
	word16 wLoc06_170 = wArg02
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A1:
	branch cx_15 == 0x000A l0800_A7D8
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A6:
	di_14 = di_14 - 0x0001
	branch di_14 <= 0x0000 l0800_A7D8
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A9:
	word16 ax_155
	selector es_143 = SLICE(ptrArg08, selector, 16)
	word16 bx_144 = (word16) ptrArg08
	word16 v17_146 = Mem0[es_143:bx_144:word16] - 0x0001
	Mem147[es_143:bx_144:word16] = v17_146
	branch v17_146 < 0x0000 l0800_A7C6
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_A7C6:
	ptrLoc0E = DPB(ptrLoc0E, wArg08, 0) (alias)
	ax_155 = fn0800_AEC2(ds, ptrLoc0E, wArg0A, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7B1:
	word16 ax_172 = Mem147[es_143:bx_144 + 0x000E:word16]
	Mem175[es_143:bx_144 + 0x000C:word16] = Mem147[es_143:bx_144 + 0x000C:word16] + 0x0001
	ax_155 = DPB(ax_172, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7D1:
	cx_15 = ax_155
	byte cl_162 = (byte) ax_155
	branch ax_155 != 0xFFFF l0800_A798
// DataOut: cl cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A798:
	Mem168[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = cl_162
	wLoc06_170 = wLoc06_170 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7D8:
	word16 ax_111
	branch cx_15 != 0xFFFF l0800_A7F3
	branch cx_15 != 0xFFFF l0800_A7F3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7DD:
	branch wArg04 != wArg04 l0800_A7F3
	branch wArg04 != wArg04 l0800_A7F3
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7E8:
	branch wLoc06_170 != wArg02 l0800_A7F3
	branch wLoc06_170 != wArg02 l0800_A7F3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7F3:
	Mem102[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = 0x00
	branch (Mem102[SLICE(ptrArg08, selector, 16):(word16) ptrArg08 + 0x0002:word16] & 0x0010) == 0x0000 l0800_A80B
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A80B:
	word16 dx_116
	*dxOut = wArg04
	ax_111 = wArg02
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A805:
	word16 dx_110
	*dxOut = 0x0000
	ax_111 = 0x0000
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A7ED:
	word16 dx_134
	*dxOut = 0x0000
	ax_111 = 0x0000
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A811:
	return ax_111
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A77D_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A817(word16 ax, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP ax ds
// LiveOut: ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_A817_entry:
// DataOut: ax ds si ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_A817:
	word16 ax_52
	word32 es_bx_9 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg06, selector, 16), (word16) ptrArg06)
	word16 bx_11 = (word16) es_bx_9
	bool C_26 = msdos_find_first_file(wArg0A, SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	msdos_set_DTA(SLICE(es_bx_9, selector, 16), bx_11)
	byte dl_39
	*dlOut = (byte) bx_11
	branch C_26 l0800_A844
// DataOut: bx dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A844:
	ax_52 = fn0800_8D2B(ds, ax)
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> cx:<invalid> ax:<invalid> bx:bx ah:0x1A dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A840:
	ax_52 = 0x0000
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> cx:<invalid> ax:<invalid> bx:bx ah:0x1A dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A848:
	return ax_52
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> cx:<invalid> ax:<invalid> bx:bx ah:<invalid> dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A817_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> cx:<invalid> ax:<invalid> bx:bx ah:<invalid> dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A84A(word16 ax, selector ds, segptr32 ptrArg02, ptr16 & axOut, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP ax ds
// LiveOut: DP ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32)
fn0800_A84A_entry:
// DataOut: ax ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A84A:
	word32 es_bx_9 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	word16 bx_11 = (word16) es_bx_9
	bool C_20 = msdos_find_next_file()
	msdos_set_DTA(SLICE(es_bx_9, selector, 16), bx_11)
	byte dl_33
	*dlOut = (byte) bx_11
	branch C_20 l0800_A871
// DataOut: bx dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A871:
	word16 ax_64
	*axOut = fn0800_8D2B(ds, ax)
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> cx:<invalid> ax:<invalid> bx:bx ah:0x1A dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A86D:
	word16 ax_57
	*axOut = 0x0000
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> cx:<invalid> ax:<invalid> bx:bx ah:0x1A dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A875:
	return C_20
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> cx:<invalid> ax:<invalid> bx:bx ah:<invalid> dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A84A_exit:
// DataOut: ax dl
// DataOut (flags): DP
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> cx:<invalid> ax:<invalid> bx:bx ah:<invalid> dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A877(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
fn0800_A877_entry:
	*dsOut = ds
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A877:
	word16 si_18 = Mem0[ds:0x24E8:word16]
	ds_37 = ds
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A8A8:
	selector ds_37
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_A88F
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A88F:
	word16 bx_61 = (word16) ptrLoc06
	branch (Mem0[SLICE(ptrLoc06, selector, 16):bx_61 + 0x0002:word16] & 0x0003) == 0x0000 l0800_A8A4
// DataOut: bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(8)

l0800_A89A:
	ptrLoc0E = DPB(ptrLoc0E, bx_61, 0) (alias)
	fn0800_A6B7(ds_37, ptrLoc0E, ds, out dl, out ds_37)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(8)

l0800_A8A4:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A8AF:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_A877_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di si:si ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(32)
fn0800_A8B7_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8B7:
	word16 dx_117
	word16 si_121
	word16 ax_150
	word16 di_12 = 0x0000
	byte cl_21 = Mem0[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte]
	branch cl_21 != 0x72 l0800_A8D5
// DataOut: cl di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8D5:
	branch cl_21 != 0x77 l0800_A8DF
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DF:
	branch cl_21 != 0x61 l0800_A8EF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8EF:
	ax_150 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A8E4:
	dx_117 = 0x0902
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DA:
	dx_117 = 0x0302
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8E7:
	di_12 = 0x0080
	si_121 = 0x0002
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8CD:
	dx_117 = 0x0001
	si_121 = 0x0001
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8F3:
	byte cl_112 = Mem0[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte]
	branch cl_112 == 0x2B l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A901:
	branch Mem0[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte] != 0x2B l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90A:
	branch cl_112 == 0x74 l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90F:
	branch cl_112 != 0x62 l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A914:
	branch cl_112 != 0x2B l0800_A91F
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A919:
	cl_112 = Mem0[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte]
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A91F:
	dx_117 = dx_117 & 0xFFFC | 0x0004
	di_12 = 0x0180
	si_121 = 0x0003
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A92B:
	word16 dx_102
	branch cl_112 != 0x74 l0800_A936
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A936:
	branch cl_112 != 0x62 l0800_A941
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A941:
	dx_102 = dx_117 | Mem0[ds:0x2512:word16] & 0xC000
	branch (dx_102 & 0x8000) == 0x0000 l0800_A953
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A93B:
	dx_102 = dx_117 | 0x8000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A950:
	si_121 = si_121 | 0x0040
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A930:
	dx_102 = dx_117 | 0x4000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A953:
	Mem71[ds:0x2354:word16] = 0xC7B5
	Mem77[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:word16] = dx_102
	Mem82[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16] = di_12
	ax_150 = si_121
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A967:
	return ax_150
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>

fn0800_A8B7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> si:si dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>



word16 fn0800_A96D(word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, segptr32 ptrArg0C, word16 wArg0E, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax di dl ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)
fn0800_A96D_entry:
	def fp
	def wArg04
	def ptrLoc0A
	def ss
	def ptrLoc0E
	def ptrLoc12
	def ds
	def ptrArg0C
	def si
	def di
	def wArg0E
	def wArg0C
	def ptrArg00
	def wArg02
	def wLoc06
	def wLoc04
	def wArg0A
	def wArg08
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A96D:
	bp_5 = fp - 0x0002
	wLoc0A_13 = wArg04
	ptrLoc0A_15 = DPB(ptrLoc0A, wArg04, 0) (alias)
	wLoc0E_21 = fp - 0x0004
	ptrLoc0E_23 = DPB(ptrLoc0E, fp - 0x0004, 0) (alias)
	wLoc12_28 = fp - 0x0006
	ptrLoc12_30 = DPB(ptrLoc12, fp - 0x0006, 0) (alias)
	ax_32 = fn0800_A8B7(ds, ptrLoc12_30, ptrLoc0E_23, ptrLoc0A_15)
	es_bx_35 = ptrArg0C
	es_36 = SLICE(ptrArg0C, selector, 16) (alias)
	bx_37 = (word16) ptrArg0C (alias)
	Mem38[es_36:bx_37 + 0x0002:word16] = ax_32
	ax_39 = ax_32
	branch ax_32 == 0x0000 l0800_A9B9
// DataOut: bp bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Local -0006(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A991:
	branch Mem38[es_36:bx_37 + 0x0004:byte] >= 0x00 l0800_A9CD
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Local -0006(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A998:
	wLoc08_208 = wLoc06
	ax_210 = wLoc04
	ax_211 = wLoc04 | wArg02
	wLoc0A_215 = ax_211
	wLoc0C_218 = wArg0A
	wLoc0E_221 = wArg08
	al_223 = fn0800_B140(si, di, ds, wArg08, wArg0A, ax_211, wLoc06, out ds_222)
	es_bx_225 = ptrArg0C
	es_226 = SLICE(ptrArg0C, selector, 16) (alias)
	bx_227 = (word16) ptrArg0C (alias)
	Mem228[es_226:bx_227 + 0x0004:byte] = al_223
	al_229 = al_223
	branch al_223 >= 0x00 l0800_A9CD
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -000A(16) Stack +000C(32) Stack +000E(16)

l0800_A9CD:
	ds_123 = PHI(ds, ds_222)
	es_bx_124 = ptrArg0C
	es_125 = SLICE(ptrArg0C, selector, 16) (alias)
	bx_126 = (word16) ptrArg0C (alias)
	al_127 = Mem38[es_125:bx_126 + 0x0004:byte]
	ax_128 = (int16) al_127
	wLoc08_130 = ax_128
	fn0800_8D76(ax_128)
	branch 0x0000 == 0x0000 l0800_A9E7
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cl:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +000C(32) Stack +000E(16)

l0800_A9DE:
	es_bx_199 = ptrArg0C
	es_200 = SLICE(ptrArg0C, selector, 16) (alias)
	bx_201 = (word16) ptrArg0C (alias)
	v17_202 = Mem38[es_200:bx_201 + 0x0002:word16] | 0x0200
	Mem203[es_200:bx_201 + 0x0002:word16] = v17_202
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +000C(32) Stack +000E(16)

l0800_A9E7:
	wLoc08_139 = 0x0200
	es_bx_140 = ptrArg0C
	es_141 = SLICE(ptrArg0C, selector, 16) (alias)
	bx_142 = (word16) ptrArg0C (alias)
	branch (Mem38[es_141:bx_142 + 0x0002:word16] & 0x0200) == 0x0000 l0800_A9FB
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9FB:
	ax_195 = 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x02 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9F6:
	ax_193 = 0x0001
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x02 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9FD:
	ax_146 = PHI(ax_193, ax_195)
	wLoc0A_149 = ax_146
	wLoc10_159 = wArg0E
	sp_160 = fp - 0x0012
	wLoc12_162 = wArg0C
	ptrLoc12_163 = DPB(ptrLoc12, wArg0C, 0) (alias)
	ax_165 = fn0800_BA89(fp - 0x0002, ds_123, ptrLoc12_163, wArg0E, ax_146, 0x0200, out ds_164)
	sp_166 = fp - 0x0006
	ax_167 = ax_165
	branch ax_165 == 0x0000 l0800_AA1F
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AA1F:
	es_bx_185 = Mem38[ss:fp + 0x000C:segptr32]
	es_186 = SLICE(es_bx_185, selector, 16) (alias)
	bx_187 = (word16) es_bx_185 (alias)
	Mem0[es_bx_185 + 0x0010:word16] = 0x0000
	dx_189 = Mem188[ss:fp + 0x000E:word16]
	ax_191 = Mem188[ss:fp + 0x000C:word16]
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp

l0800_AA12:
	sp_171 = fp - 0x0008
	Mem172[ss:fp - 0x0008:word16] = Mem38[ss:fp + 0x000E:word16]
	sp_173 = fp - 0x000A
	Mem174[ss:fp - 0x000A:word16] = Mem172[ss:fp + 0x000C:word16]
	fn0800_A614(fp - 0x0002, ds_164, ptrArg00, wArg02, out dl_177, out di_178, out ds_179)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp

l0800_A9B9:
	ds_104 = PHI(ds, ds_222)
	es_bx_110 = ptrArg0C
	es_111 = SLICE(ptrArg0C, selector, 16) (alias)
	bx_112 = (word16) ptrArg0C (alias)
	Mem113[es_111:bx_112 + 0x0004:byte] = 0xFF
	Mem114[es_111:bx_112 + 0x0002:word16] = 0x0000
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_A9C7:
	di_85 = PHI(di, di_178)
	ds_86 = PHI(ds_104, ds_179)
	dx_92 = 0x0000
	ax_94 = 0x0000
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_AA2E:
	di_55 = PHI(di_85, di)
	ds_56 = PHI(ds_86, ds_164)
	dx_61 = PHI(dx_92, dx_189)
	ax_63 = PHI(ax_94, ax_191)
	return ax_63
// DataOut: ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

fn0800_A96D_exit:
	use dx_61 (=> dxOut)
	use si (=> siOut)
	use di_55 (=> diOut)
	use ds_56 (=> dsOut)
// DataOut: ax di dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_AA34(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
fn0800_AA34_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AA34:
	word16 wLoc06_10 = 0x2358
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA42:
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA64
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA4C:
	wLoc06_10 = wLoc06_10 + 0x0014
	branch wLoc06_10 <u (word16) (Mem0[ds:0x24E8:word16] *s 0x0014) + 0x2358 l0800_AA42
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA64:
	word16 ax_43
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA74
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AA74:
	word16 dx_56
	*dxOut = ds
	ax_43 = wLoc06_10
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA6E:
	word16 dx_51
	*dxOut = 0x0000
	ax_43 = 0x0000
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA7A:
	return ax_43
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AA34_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AA7E(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax di dl ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_AA7E_entry:
	*dsOut = ds
	*siOut = si
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA7E:
	word16 ax_29
	word16 dx_9
	word16 ax_10 = fn0800_AA34(ds, out dx_9)
	branch (ax_10 | dx_9) != 0x0000 l0800_AA97
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA97:
	word16 dx_77
	word16 si_78
	word16 di_79
	selector ds_80
	ax_29 = fn0800_A96D(fp - 0x0002, si, di, ds, 0x0000, wArg06, wArg08, wArg02, wArg04, DPB(ptrLoc0A, ax_10, 0), dx_9, out dx_77, out si_78, out di_79, out ds_80)
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AA91:
	word16 dx_41
	*dxOut = 0x0000
	ax_29 = 0x0000
// DataOut: ax bp di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AAAF:
	return ax_29
// DataOut: ax di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AA7E_exit:
// DataOut: ax di dl ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AAB3(word16 dx, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds dx ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_AAB3_entry:
	*dsOut = ds
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAB3:
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB91:
	branch wArg06 == 0x0000 l0800_AB9A
	branch wArg06 == 0x0000 l0800_AB9A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB97:
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AABB:
	word16 ax_104
	word16 v10_94 = wArg06 + 0x0001
	wArg06 = v10_94
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0006:word16] <=u v10_94 l0800_AACF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AACF:
	ax_104 = Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0006:word16]
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AACA:
	ax_104 = v10_94
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAD6:
	word16 di_107 = ax_104
	selector es_109 = SLICE(ptrArg02, selector, 16)
	word16 bx_110 = (word16) ptrArg02
	branch (Mem0[es_109:bx_110 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAE3:
	branch Mem0[es_109:bx_110 + 0x0006:word16] == 0x0000 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAEA:
	branch Mem0[es_109:bx_110 + 0x0006:word16] >=u v10_94 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAF3:
	branch Mem0[es_109:bx_110:word16] != 0x0000 l0800_AB50
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB50:
	word16 v18_162 = wArg06 - 0x0001
	wArg06 = v18_162
	branch v18_162 == 0x0000 l0800_AB8C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB5A:
	di_107 = di_107 - 0x0001
	branch di_107 == 0x0000 l0800_AB8C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB5D:
	word16 ax_206
	selector es_193 = SLICE(ptrArg02, selector, 16)
	word16 bx_194 = (word16) ptrArg02
	word16 v19_195 = Mem0[es_193:bx_194:word16] - 0x0001
	Mem196[es_193:bx_194:word16] = v19_195
	branch v19_195 < 0x0000 l0800_AB7A
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB7A:
	ptrLoc0A = DPB(ptrLoc0A, wArg02, 0) (alias)
	ax_206 = fn0800_AEC2(ds, ptrLoc0A, wArg04, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB65:
	word16 ax_223 = Mem196[es_193:bx_194 + 0x000E:word16]
	Mem226[es_193:bx_194 + 0x000C:word16] = Mem196[es_193:bx_194 + 0x000C:word16] + 0x0001
	ax_206 = DPB(ax_223, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB85:
	dx = ax_206
	byte dl_212 = (byte) ax_206
	branch ax_206 != 0xFFFF l0800_AB47
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB47:
	Mem219[SLICE(ptrArg08, selector, 16):(word16) ptrArg08:byte] = dl_212
	wArg08 = wArg08 + 0x0001
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB8C:
	branch dx == 0xFFFF l0800_AB3D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAF9:
	wArg06 = v10_94 - 0x0001
	word16 di_256 = 0x0000
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB0E:
	selector es_262 = SLICE(ptrArg02, selector, 16)
	word16 bx_263 = (word16) ptrArg02
	branch Mem0[es_262:bx_263 + 0x0006:word16] <=u wArg06 l0800_AB00
// DataOut: bx di dil ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB00:
	selector es_294 = SLICE(ptrArg02, selector, 16)
	word16 bx_295 = (word16) ptrArg02
	di_256 = di_256 + Mem0[es_294:bx_295 + 0x0006:word16]
	wArg06 = wArg06 - Mem0[es_294:bx_295 + 0x0006:word16]
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB1A:
	word16 ax_276 = (int16) Mem0[es_262:bx_263 + 0x0004:byte]
	ptrLoc0C = DPB(ptrLoc0C, wArg08, 0) (alias)
	word16 ax_280 = fn0800_8F50((byte) ax_276, ds, ax_276, ptrLoc0C, di_256)
	dx = ax_280
	wArg08 = wArg08 + ax_280
	branch ax_280 == di_256 l0800_AB91
// DataOut: di dil dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB36:
	wArg06 = wArg06 + (di_256 - ax_280)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:0xFF bx:<invalid> ah:0x3F cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_AB3D:
	selector es_137 = SLICE(ptrArg02, selector, 16)
	word16 bx_138 = (word16) ptrArg02
	Mem140[es_137:bx_138 + 0x0002:word16] = Mem0[es_137:bx_138 + 0x0002:word16] | 0x0020
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0006(16)

l0800_AB9A:
	return wArg06
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_AAB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_ABA3(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_ABA3_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABA3:
	word16 ax_116
	word16 sp_10 = fp - 0x000A
	branch wArg06 != 0x0000 l0800_ABB6
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABB6:
	word16 dx_100
	word16 ax_80 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_100)
	branch dx_100 >u 0x0001 l0800_ABF2
// DataOut: ax di ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABCD:
	branch dx_100 <u 0x0001 l0800_ABD3
// DataOut: ax di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABCF:
	branch false l0800_ABF2
// DataOut: di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABF2:
	word16 si_101 = wArg08 + 0x0001
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC0B:
	word16 dx_146
	si_101 = si_101 - 0x0001
	branch si_101 == 0x0000 l0800_AC26
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC12:
	word16 sp_119 = sp_10 - 0x0002
	Mem120[ss:sp_119:word16] = wArg04
	Mem122[ss:sp_119 - 0x0002:word16] = wArg02
	Mem124[ss:sp_119 - 0x0004:word16] = wArg06
	Mem127[ss:sp_119 - 0x0006:word16] = wArg0C
	Mem130[ss:sp_119 - 0x0008:word16] = wArg0A
	sp_10 = sp_119 + 0x0002
	branch fn0800_AAB3(dx_100, ds, ptrArg00, wArg02, wArg04, ptrArg06, wArg08, out ds) == 0x0000 l0800_ABF8
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABF8:
	wArg04 = dx_146
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, bp, out dx_146)
	dx_100 = dx_146
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC26:
	ax_116 = wArg08 - si_101
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ABD3:
	selector ds_165
	word16 dx_169 = ax_80 - fn0800_AAB3(dx_100, ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_80, DPB(ptrLoc0E, wArg02, 0), wArg04, out ds_165)
	ax_116 = SEQ(SEQ(0x0000, dx_169) % wArg06, dx_169) /u wArg06
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_ABB2:
	ax_116 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AC2B:
	return ax_116
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_ABA3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_AC31(word16 bp, word16 wArg00, segptr32 ptrArg02, ptr16 & bpOut, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(32)
fn0800_AC31_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(32)

l0800_AC31:
	word16 cx_101
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 bx_13 = (word16) ptrArg02
	branch Mem0[es_12:bx_13:word16] >= 0x0000 l0800_AC4D
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC4D:
	int32 dx_ax_128 = (int32) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16]
	word16 dx_130 = SLICE(dx_ax_128, word16, 16)
	ax = ((word16) dx_ax_128 ^ dx_130) - dx_130
	cx_101 = ax
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC41:
	cx_101 = Mem0[es_12:bx_13 + 0x0006:word16] + Mem0[es_12:bx_13:word16] + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC5C:
	branch (Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_ACAA
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16) Stack +0002(32)

l0800_AC67:
	selector es_61 = SLICE(ptrArg02, selector, 16)
	word16 bx_62 = (word16) ptrArg02
	word16 wLoc06_66 = Mem0[es_61:bx_62 + 0x000C:word16]
	branch Mem0[es_61:bx_62:word16] >= 0x0000 l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_ACA3:
	cx_101 = cx_101 - 0x0001
	ax = cx_101
	branch cx_101 != 0x0000 l0800_AC96
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC96:
	branch Mem0[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] != 0x0A l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_ACA2:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC7E:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC8D:
	cx_101 = cx_101 - 0x0001
	ax = cx_101
	branch cx_101 != 0x0000 l0800_AC80
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC80:
	word16 v18_83 = wLoc06_66 - 0x0001
	ptrLoc06 = DPB(ptrLoc06, v18_83, 0) (alias)
	wLoc06_66 = v18_83
	branch Mem0[SLICE(ptrLoc06, selector, 16):v18_83:byte] != 0x0A l0800_AC8D
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC8C:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(32) Local -0008(16) Stack +0000(16)

l0800_AC94:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Stack +0000(16)

l0800_ACAA:
	return ax
	word16 si_53
	*siOut = wArg00
	word16 bp_56
	*bpOut = Mem0[ss:bp:word16]
	return si
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AC31_exit:
// DataOut: ax bp si sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 bp:<invalid> Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:si Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_ACB3(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +000A(16)
fn0800_ACB3_entry:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_ACB3:
	word16 ax_106
	word16 bp_128 = fp - 0x0002
	word16 si_10 = wArg0A
	word16 sp_131 = fp - 0x0004
	byte dl_20
	selector ds_21
	branch fn0800_A6B7(ds, DPB(ptrLoc08, wArg02, 0), wArg04, out dl_20, out ds_21) == 0x0000 l0800_ACCE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_ACCE:
	branch wArg0A != 0x0001 l0800_ACEA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32) Stack +0004(16)

l0800_ACD3:
	word16 bx_119 = (word16) ptrArg02
	branch Mem0[SLICE(ptrArg02, selector, 16):bx_119:word16] <= 0x0000 l0800_ACEA
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(16)

l0800_ACDC:
	word16 ax_133 = (word16) (int32) fn0800_AC31(fp - 0x0002, wLoc0A, DPB(ptrLoc08, bx_119, 0), out bp_128, out si_10)
	Mem135[ss:bp_128 + 0x0008:word16] = Mem0[ss:bp_128 + 0x0008:word16] - ax_133
	Mem139[ss:bp_128 + 0x000A:word16] = v18
	sp_131 = fp - 0x0004
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_ACEA:
	ptr32 es_bx_72 = Mem0[ss:bp_128 + 0x0004:segptr32]
	Mem0[es_bx_72 + 0x0002:word16] = Mem0[es_bx_72 + 0x0002:word16] & 0xFE5F
	Mem0[Mem0[es_bx_72:word16]:word16] = 0x0000
	word16 dx_81 = Mem0[es_bx_72 + 0x0008:word16]
	Mem0[es_bx_72 + 0x000E:word16] = Mem0[es_bx_72 + 0x000A:word16]
	Mem0[es_bx_72 + 0x000C:word16] = dx_81
	word16 sp_84 = sp_131 - 0x0002
	Mem85[ss:sp_84:word16] = si_10
	Mem87[ss:sp_84 - 0x0002:word16] = Mem85[ss:bp_128 + 0x000A:word16]
	Mem89[ss:sp_84 - 0x0004:word16] = Mem87[ss:bp_128 + 0x0008:word16]
	word16 ax_91 = (int16) Mem0[es_bx_72 + 0x0004:byte]
	Mem94[ss:sp_84 - 0x0006:word16] = ax_91
	word16 dx_97
	word16 ax_98 = fn0800_8E29((byte) ax_91, ds_21, wArg00, wArg02, wArg04, bArg06, out dx_97)
	branch dx_97 != 0xFFFF l0800_AD2A
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD20:
	branch ax_98 != 0xFFFF l0800_AD2A
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD2A:
	ax_106 = 0x0000
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_AD25:
	ax_106 = 0xFFFF
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_ACC9:
	ax_106 = 0xFFFF
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_AD2C:
	return ax_106
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_ACB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_AD2F(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AD2F_entry:
	*siOut = si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AD2F:
	word16 bp_39 = fp - 0x0002
	word16 dx_18
	word16 ax_19 = fn0800_97B6(ds, (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte], out dx_18)
	branch dx_18 != 0xFFFF l0800_AD52
// DataOut: ax bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AD4D:
	branch ax_19 == 0xFFFF l0800_AD7B
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AD52:
	word16 bx_52 = (word16) ptrArg02
	branch Mem0[SLICE(ptrArg02, selector, 16):bx_52:word16] >= 0x0000 l0800_AD6B
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_AD6B:
	word16 si_84
	int32 dx_ax_87 = (int32) fn0800_AC31(fp - 0x0002, wLoc0C, DPB(ptrLoc0A, wArg02, 0), out bp_39, out si_84)
	word16 v19_90 = Mem0[ss:bp_39 - 0x0004:word16] - (word16) dx_ax_87
	Mem91[ss:bp_39 - 0x0004:word16] = v19_90
	Mem95[ss:bp_39 - 0x0002:word16] = Mem91[ss:bp_39 - 0x0002:word16] - SLICE(dx_ax_87, word16, 16) - (v19_90 <u 0x0000)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AD5B:
	word16 si_64
	int32 dx_ax_67 = (int32) fn0800_AC31(fp - 0x0002, wLoc0C, DPB(ptrLoc0A, bx_52, 0), out bp_39, out si_64)
	word16 v16_70 = Mem0[ss:bp_39 - 0x0004:word16] + (word16) dx_ax_67
	Mem71[ss:bp_39 - 0x0004:word16] = v16_70
	Mem75[ss:bp_39 - 0x0002:word16] = Mem71[ss:bp_39 - 0x0002:word16] + SLICE(dx_ax_67, word16, 16) + (v16_70 <u 0x0000)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AD7B:
	return Mem0[ss:bp_39 - 0x0004:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> si:<invalid> dx:<invalid> ah:0x42 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AD2F_exit:
// DataOut: ax si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> si:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AD85(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_AD85_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD85:
	word16 ax_141
	word16 sp_10 = fp - 0x000A
	branch wArg06 == 0x0000 l0800_AE07
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD94:
	word16 dx_93
	word16 ax_94 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_93)
	branch dx_93 >u 0x0001 l0800_ADC9
// DataOut: ax di ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAB:
	branch dx_93 <u 0x0001 l0800_ADB1
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAD:
	branch false l0800_ADC9
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADC9:
	word16 si_105 = 0x0000
	branch 0x0000 >=u wArg08 l0800_AE07
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADD0:
	word16 sp_116 = sp_10 - 0x0002
	Mem117[ss:sp_116:word16] = wArg04
	Mem119[ss:sp_116 - 0x0002:word16] = wArg02
	Mem121[ss:sp_116 - 0x0004:word16] = wArg06
	Mem124[ss:sp_116 - 0x0006:word16] = wArg0C
	Mem127[ss:sp_116 - 0x0008:word16] = wArg0A
	word16 ax_131 = fn0800_B4BE(ds, ptrArg00, wArg02, wArg04, ptrArg06, wArg08, out ds)
	sp_10 = sp_116 + 0x0002
	branch false l0800_ADEA
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADE6:
	branch ax_131 == wArg06 l0800_ADEE
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADEE:
	wArg04 = dx_151
	word16 dx_151
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, bp, out dx_151)
	si_105 = si_105 + 0x0001
	branch si_105 <u wArg08 l0800_ADD0
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AE07:
	ax_141 = wArg08
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ADEA:
	ax_141 = si_105
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ADB1:
	selector ds_172
	word16 ax_173 = fn0800_B4BE(ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_94, DPB(ptrLoc0E, wArg02, 0), wArg04, out ds_172)
	ax_141 = SEQ(SEQ(0x0000, ax_173) % wArg06, ax_173) /u wArg06
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_AE0A:
	return ax_141
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_AD85_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



selector fn0800_AE10(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
fn0800_AE10_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AE10:
	word16 si_11 = 0x0014
	ds_30 = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE40:
	selector ds_30
	si_11 = si_11 - 0x0001
	branch si_11 != 0x0000 l0800_AE24
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE24:
	word16 bx_49 = (word16) ptrLoc06
	branch (Mem0[SLICE(ptrLoc06, selector, 16):bx_49 + 0x0002:word16] & 0x0300) != 0x0300 l0800_AE3C
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(8)

l0800_AE33:
	ptrLoc0C = DPB(ptrLoc0C, bx_49, 0) (alias)
	byte dl_71
	fn0800_A6B7(ds_30, ptrLoc0C, ds, out dl_71, out ds_30)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(8)

l0800_AE3C:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE47:
	return ds_30
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AE10_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AE4C(selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_AE4C_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE4C:
	branch (Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AE5D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE5A:
	ds = fn0800_AE10(ds)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE5D:
	word16 ax_50
	selector es_17 = SLICE(ptrArg02, selector, 16)
	word16 bx_18 = (word16) ptrArg02
	word16 wLoc04_20 = Mem0[es_17:bx_18 + 0x0006:word16]
	word16 ax_21 = Mem0[es_17:bx_18 + 0x000A:word16]
	word16 dx_22 = Mem0[es_17:bx_18 + 0x0008:word16]
	Mem23[es_17:bx_18 + 0x000E:word16] = ax_21
	Mem24[es_17:bx_18 + 0x000C:word16] = dx_22
	selector ds_35
	word16 ax_36 = fn0800_B97F(ds, (int16) Mem24[es_17:bx_18 + 0x0004:byte], DPB(ptrLoc08, dx_22, 0), ax_21, wLoc04_20, out ds_35)
	selector es_39 = SLICE(ptrArg02, selector, 16)
	word16 bx_40 = (word16) ptrArg02
	Mem41[es_39:bx_40:word16] = ax_36
	branch ax_36 <= 0x0000 l0800_AE95
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(32)

l0800_AE95:
	selector es_66 = SLICE(ptrArg02, selector, 16)
	word16 bx_67 = (word16) ptrArg02
	branch Mem41[es_66:bx_67:word16] != 0x0000 l0800_AEAE
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Stack +0002(32)

l0800_AEAE:
	selector es_84 = SLICE(ptrArg02, selector, 16)
	word16 bx_85 = (word16) ptrArg02
	Mem86[es_84:bx_85:word16] = 0x0000
	Mem88[es_84:bx_85 + 0x0002:word16] = Mem86[es_84:bx_85 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE9E:
	Mem82[es_66:bx_67 + 0x0002:word16] = Mem41[es_66:bx_67 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBB:
	ax_50 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE8C:
	Mem58[es_39:bx_40 + 0x0002:word16] = Mem41[es_39:bx_40 + 0x0002:word16] & 0xFFDF
	ax_50 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBE:
	return ax_50
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AE4C_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AEC2_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AEC2:
	selector es_8 = SLICE(ptrArg02, selector, 16)
	word16 bx_9 = (word16) ptrArg02
	Mem12[es_8:bx_9:word16] = Mem0[es_8:bx_9:word16] + 0x0001
	selector ds_22
	return fn0800_AED6(ds, DPB(ptrLoc06, bx_9, 0), wArg04, out ds_22)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_AEC2_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_AED6(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_AED6_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_AED6:
	word16 ax_100
	branch (wArg02 | wArg04) != 0x0000 l0800_AEE8
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AEE8:
	word16 ax_122
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16] <= 0x0000 l0800_AF0B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF0B:
	selector es_124 = SLICE(ptrArg02, selector, 16)
	word16 bx_125 = (word16) ptrArg02
	branch Mem0[es_124:bx_125:word16] < 0x0000 l0800_AF7F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF14:
	branch (Mem0[es_124:bx_125 + 0x0002:word16] & 0x0110) != 0x0000 l0800_AF7F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF1C:
	branch (Mem0[es_124:bx_125 + 0x0002:word16] & 0x0001) == 0x0000 l0800_AF7F
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF24:
	selector es_161 = SLICE(ptrArg02, selector, 16)
	word16 bx_162 = (word16) ptrArg02
	Mem164[es_161:bx_162 + 0x0002:word16] = Mem0[es_161:bx_162 + 0x0002:word16] | 0x0080
	branch Mem164[es_161:bx_162 + 0x0006:word16] == 0x0000 l0800_AF43
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF43:
	branch (Mem164[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AF51
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF4E:
	ds = fn0800_AE10(ds)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF51:
	ptrLoc0A = DPB(ptrLoc0A, 0x4EE4, 0) (alias)
	word16 ax_214 = fn0800_B97F(ds, (int16) Mem164[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte], ptrLoc0A, ds, 0x0001, out ds)
	branch ax_214 != 0x0000 l0800_AF9E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(32)

l0800_AF9E:
	branch Mem164[ds:0x4EE4:byte] != 0x0D l0800_AFB0
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFA5:
	branch (Mem164[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AF43
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFB0:
	selector es_245 = SLICE(ptrArg02, selector, 16)
	word16 bx_246 = (word16) ptrArg02
	Mem248[es_245:bx_246 + 0x0002:word16] = Mem164[es_245:bx_246 + 0x0002:word16] & 0xFFDF
	ax_122 = DPB(ax_214, Mem248[ds:0x4EE4:byte], 0) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF6D:
	branch fn0800_A59D(ds, (int16) Mem164[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte]) == 0x0001 l0800_AF8A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF8A:
	selector es_233 = SLICE(ptrArg02, selector, 16)
	word16 bx_234 = (word16) ptrArg02
	Mem240[es_233:bx_234 + 0x0002:word16] = Mem164[es_233:bx_234 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF7F:
	selector es_142 = SLICE(ptrArg02, selector, 16)
	word16 bx_143 = (word16) ptrArg02
	Mem145[es_142:bx_143 + 0x0002:word16] = Mem0[es_142:bx_143 + 0x0002:word16] | 0x0010
	selector es_148 = SLICE(ptrArg02, selector, 16)
	word16 bx_149 = (word16) ptrArg02
	Mem151[es_148:bx_149 + 0x0002:word16] = Mem145[es_148:bx_149 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF34:
	selector ds_173
	branch fn0800_AE4C(ds, DPB(ptrLoc08, bx_162, 0), out ds_173) == 0x0000 l0800_AEF1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF3F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AEF1:
	selector es_111 = SLICE(ptrArg02, selector, 16)
	word16 bx_112 = (word16) ptrArg02
	Mem114[es_111:bx_112:word16] = Mem0[es_111:bx_112:word16] - 0x0001
	word16 ax_115 = Mem114[es_111:bx_112 + 0x000E:word16]
	word16 si_116 = Mem114[es_111:bx_112 + 0x000C:word16]
	Mem118[es_111:bx_112 + 0x000C:word16] = Mem114[es_111:bx_112 + 0x000C:word16] + 0x0001
	ax_122 = DPB(ax_115, Mem118[ax_115:si_116:byte], 0) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AFBB:
	ax_100 = DPB(ax_122, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AEE2:
	ax_100 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AFBD:
	return ax_100
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_AED6_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> si:si Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_AFCB(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_AFCB_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFCB:
	word16 ax_188
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	branch (es_16 | di_15) == 0x0000 l0800_AFFC
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFDC:
	byte ah_82 = Mem0[es_16:di_15:byte]
	word16 cx_205 = 0xFFFF
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:es | di -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5:
	branch cx_205 == 0x0000 l0800_AFE7
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5_1:
	di_15 = di_206 + 0x0001
	cx_205 = cx_205 - 0x0001
	word16 di_206 = di_15
	branch 0x00 != Mem0[es_16:di_206:byte] l0800_AFE5
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE7:
	word16 cx_95 = ~cx_205
	word16 cx_112 = cx_95 - 0x0001
	branch cx_95 == 0x0001 l0800_AFFC
// DataOut: ah cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFEC:
	ptr32 es_di_99 = Mem0[ds:0x26AA:segptr32]
	word16 di_100 = (word16) es_di_99
	word16 wLoc06_108 = di_100
	branch (SLICE(es_di_99, selector, 16) | di_100) != 0x0000 l0800_B009
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B009:
	ptr32 es_di_121 = Mem0[ds:di_100:segptr32]
	word16 di_122 = (word16) es_di_121
	selector es_123 = SLICE(es_di_121, selector, 16)
	branch (es_123 | di_122) == 0x0000 l0800_AFFC
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B012:
	byte al_129 = Mem0[Mem0[es_di_121:byte]:byte]
	branch al_129 == 0x00 l0800_AFFC
// DataOut: ah al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B019:
	branch ah_82 != al_129 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B01D:
	byte Z_156 = cond(Mem0[es_123:cx_112 + di_122:byte] - 0x3D)
	branch Mem0[es_123:cx_112 + di_122:byte] != 0x3D l0800_B002
// DataOut: ah bx cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B025:
	selector ds_161 = SLICE(ptrArg02, selector, 16)
	word16 si_162 = (word16) ptrArg02
	cx_165 = cx_112
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029:
	word16 cx_165
	branch cx_165 == 0x0000 l0800_B02B
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029_1:
	Z_156 = cond(Mem0[ds_161:si_208:byte] - Mem0[es_123:di_122:byte]) (alias)
	si_162 = si_208 + 0x0001
	di_122 = di_122 + 0x0001
	cx_165 = cx_165 - 0x0001
	word16 si_208 = si_162
	branch Mem0[ds_161:si_208:byte] != Mem0[es_123:di_122:byte] l0800_B029
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B02B:
	branch Z_156 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B002:
	word16 v23_147 = wLoc06_108 + 0x0004
	wLoc06_108 = v23_147
	di_100 = v23_147 (alias)
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B030:
	ax_188 = di_122 + 0x0001
	word16 dx_191
	*dxOut = es_123
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_AFFC:
	word16 dx_74
	*dxOut = 0x0000
	ax_188 = 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_B035:
	return ax_188
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp

fn0800_AFCB_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> dx:<invalid> di:di si:si al:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> Sequence ds:si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp



selector fn0800_B03B(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: es
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es esi rax rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_B03B_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B03B:
	word16 di_16 = (word16) ptrArg02
	selector es_17 = SLICE(ptrArg02, selector, 16)
	selector ds_20 = SLICE(ptrArg06, selector, 16)
	word16 si_21 = (word16) ptrArg06
	word16 cx_24 = wArg0A >>u 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B04E:
	branch cx_24 == 0x0000 l0800_B050
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B050:
	branch wArg0A >>u 0x0001 >=u 0x0000 l0800_B053
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B052:
	Mem54[es_17:di_16:byte] = Mem0[ds_20:si_21:byte]
// DataOut: es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B053:
	return es_17
// DataOut: es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_B03B_exit:
// DataOut: es
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:si di:di ds:ds ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_B04E_1:
	Mem35[es_17:di_16:word16] = Mem0[ds_20:si_21:word16]
	si_21 = si_21 + 0x0002
	di_16 = di_16 + 0x0002
	cx_24 = cx_24 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(8)
fn0800_B05F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(8)

l0800_B05F:
	word16 di_11 = (word16) ptrArg02
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 cx_14 = wArg06
	word16 ax_19 = DPB(ax, bArg08, 8)
	branch (di_11 & 0x0001) == 0x0000 l0800_B079
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B075:
	branch wArg06 == 0x0000 l0800_B080
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B077:
	Mem52[es_12:di_11:byte] = bArg08
	di_11 = di_11 + 0x0001
	cx_14 = wArg06 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B079:
	word16 cx_37 = cx_14 >>u 0x0001
	cx_44 = cx_37
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di + 0x0001 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07B:
	word16 cx_44
	branch cx_44 == 0x0000 l0800_B07D
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07D:
	branch cx_37 >=u 0x0000 l0800_B080
// DataOut: al di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07F:
	Mem49[es_12:di_11:byte] = bArg08
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B080:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp

fn0800_B05F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di -4(fp):di -2(fp):bp

l0800_B07B_1:
	Mem45[es_12:di_11:word16] = ax_19
	di_11 = di_11 + 0x0002
	cx_44 = cx_44 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B083(word16 wArg02, word16 wArg04, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)
fn0800_B083_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)

l0800_B083:
	fn0800_B05F(DPB(ptrLoc0A, wArg02, 0), wArg08, bArg06)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B083_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> dx:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ax -2(fp):bp



void fn0800_B0A1(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0A1_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0A1:
	word16 ax_119
	byte dl_24
	branch fn0800_8F2F(wArg02, wArg08, wArg04, wArg06, out dl_24) l0800_B0BE
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0BE:
	ax_119 = 0x0000
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0B8:
	ax_119 = 0x0001
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0C1:
	selector ds_31 = SLICE(ptrArg02, selector, 16)
	word16 si_104 = (word16) ptrArg02
	word16 di_106 = (word16) ptrArg06
	selector es_36 = SLICE(ptrArg06, selector, 16)
	word16 cx_108 = wArg0A
	branch ax_119 == 0x0000 l0800_B0D4
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0CE:
	si_104 = si_104 + wArg0A - 0x0001
	di_106 = di_106 + wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0D4:
	branch (di_106 & 0x0001) == 0x0000 l0800_B0DE
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DA:
	branch wArg0A == 0x0000 l0800_B0ED
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DC:
	Mem103[es_36:di_106:byte] = Mem0[ds_31:si_104:byte]
	si_104 = si_104 + 0x0001
	di_106 = di_106 + 0x0001
	cx_108 = wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DE:
	word16 si_72 = si_104 - ax_119
	word16 di_74 = di_106 - ax_119
	word16 cx_76 = cx_108 >>u 0x0001
	cx_86 = cx_76
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E4:
	word16 cx_86
	branch cx_86 == 0x0000 l0800_B0E6
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E6:
	branch cx_76 >=u 0x0000 l0800_B0ED
// DataOut: ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E8:
	Mem99[es_36:di_74 + ax_119:byte] = Mem0[ds_31:si_72 + ax_119:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0ED:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_B0A1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:si di:di ds:ds ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_B0E4_1:
	Mem89[es_36:di_74:word16] = Mem0[ds_31:si_72:word16]
	si_72 = si_72 + 0x0002
	di_74 = di_74 + 0x0002
	cx_86 = cx_86 - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



selector fn0800_B0F3(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0F3_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0F3:
	fn0800_B0A1(DPB(ptrLoc0C, wArg06, 0), wArg08, DPB(ptrLoc08, wArg02, 0), wArg04, wArg0A)
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B0F3_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B113(byte al, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_B113_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_B113:
	word16 ax_18
	branch msdos_create_truncate_file(wArg02, SLICE(ptrArg04, selector, 16), (word16) ptrArg04, out ax_18) l0800_B126
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B126:
	fn0800_8D2B(ds, ax_18)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B124:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B12A:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp

fn0800_B113_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp



void fn0800_B12E(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_B12E_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_B12E:
	word16 ax_16
	msdos_write_file(wArg02, 0x0000, SEQ(ds, 0x0000), out ax_16)
	return
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B12E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> cx:0x0000 dx:0x0000 ah:0x40 -2(fp):bp



byte fn0800_B140(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si
// LiveOut: al ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B140_entry:
	*dsOut = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B140:
	word16 si_113 = wArg06
	branch (wArg06 & 0xC000) != 0x0000 l0800_B15C
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B154:
	si_113 = wArg06 | Mem0[ds:0x2512:word16] & 0xC000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B15C:
	word16 di_112
	byte al_283
	word16 ax_161 = fn0800_A53C(0x00, ds, DPB(ptrLoc10, wArg02, 0), 0x00, di)
	word16 wLoc04_156 = ax_161
	branch (si_113 & 0x0100) == 0x0000 l0800_B1F2
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B174:
	word16 di_267 = wArg08 & Mem0[ds:0x2514:word16]
	ax_161 = di_267
	branch (di_267 & 0x0180) != 0x0000 l0800_B186
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B17F:
	ax_161 = fn0800_8D2B(ds, 0x0001)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B186:
	word16 wLoc0C_281
	branch ax_161 != 0xFFFF l0800_B1AF
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1AF:
	branch (si_113 & 0x0400) == 0x0000 l0800_B1F2
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1B5:
	wLoc0C_281 = 0x0050
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B18C:
	branch Mem0[ds:0x2516:word16] == 0x0002 l0800_B19D
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B19D:
	byte al_296
	word16 ax_295
	branch (di_267 & 0x0080) == 0x0000 l0800_B1A7
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1A7:
	ax_295 = 0x0001
	al_296 = 0x01 (alias)
// DataOut: al ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1A3:
	ax_295 = 0x0000
	al_296 = 0x00 (alias)
// DataOut: al ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1AA:
	wLoc04_156 = ax_295
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1BB:
	branch (si_113 & 0x00F0) == 0x0000 l0800_B1DD
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1DD:
	fn0800_B113(al_296, ds, ax_295, DPB(ptrLoc0E, wArg02, 0))
	di_112 = 0xFFFF
	branch false l0800_B265
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B1EF:
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B1C1:
	ptrLoc0E = DPB(ptrLoc0E, wArg02, 0) (alias)
	fn0800_B113(0x00, ds, 0x0000, ptrLoc0E)
	di_112 = 0xFFFF
	ax_161 = 0xFFFF
	branch false l0800_B1D6
// DataOut: al dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1D6:
	fn0800_A57F(0xFF, ds, 0xFFFF)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1F2:
	fn0800_B2A0(ds, DPB(ptrLoc10, wArg02, 0), si_113)
	di_112 = ax_161
	branch ax_161 < 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0004(16)

l0800_B205:
	word16 ax_190 = fn0800_A2A3(0x00, ds, ax_161, 0x0000, ptrLoc0A, wLoc06)
	byte al_191 = (byte) ax_190
	branch (ax_190 & 0x0080) == 0x0000 l0800_B237
// DataOut: al ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B237:
	branch (si_113 & 0x0200) == 0x0000 l0800_B241
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B23D:
	fn0800_B12E(al_191, ds, ax_161)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B216:
	si_113 = si_113 | 0x2000
	branch (si_113 & 0x8000) == 0x0000 l0800_B241
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B220:
	fn0800_A2A3(0x01, ds, ax_161, 0x0001, DPB(ptrLoc0E, ax_190 & 0x00FF | 0x0020, 0), di)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B241:
	branch (wLoc04_156 & 0x0001) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B248:
	branch (si_113 & 0x0100) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B24E:
	branch (si_113 & 0x00F0) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B254:
	fn0800_A53C(0x01, ds, DPB(ptrLoc12, wArg02, 0), 0x01, 0x0001)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B265:
	branch di_112 < 0x0000 l0800_B298
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B269:
	word16 ax_123
	branch (si_113 & 0x0300) == 0x0000 l0800_B274
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B274:
	ax_123 = 0x0000
// DataOut: ax di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B26F:
	ax_123 = 0x1000
// DataOut: ax di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B276:
	word16 ax_135
	word16 dx_127 = si_113 & 0xF8FF | ax_123
	branch (wLoc04_156 & 0x0001) == 0x0000 l0800_B28A
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B28A:
	ax_135 = 0x0100
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B286:
	ax_135 = 0x0000
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B28D:
	Mem143[ds:(di_112 << 0x0001) + 0x24EA:word16] = dx_127 | ax_135
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B1D3:
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B298:
	al_283 = (byte) di_112 (alias)
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B193:
	wLoc0C_281 = Mem0[ds:0x2516:word16]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B197:
	al_283 = (byte) fn0800_8D2B(ds, wLoc0C_281) (alias)
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B29A:
	return al_283
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_B140_exit:
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si di:di ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ax bp ds sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_B2A0_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_B2A0:
	byte al_17 = 0x01
	branch (wArg06 & 0x0002) != 0x0000 l0800_B2BB
// DataOut: al cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B1:
	al_17 = 0x02
	branch (wArg06 & 0x0004) != 0x0000 l0800_B2BB
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:0x01 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B9:
	al_17 = 0x00
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:0x02 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2BB:
	word16 ax_31
	branch msdos_open_file(ptrArg02, al_17 | bArg06 & 0xF0, out ax_31) l0800_B2E7
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0006(16)

l0800_B2E7:
	fn0800_8D2B(ds, ax_31)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2CD:
	Mem52[ds:(ax_31 << 0x0001) + 0x24EA:word16] = wArg06 & 0xB8FF | 0x8000
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2EB:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp

fn0800_B2A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp



word16 fn0800_B2EF(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_B2EF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_B2EF:
	word16 di_26
	return fn0800_9828(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, out di_26)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B2EF_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -14(fp):fp + 0x0006 -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x236C -6(fp):ds -4(fp):0xB4BE -2(fp):bp



word16 fn0800_B30A(selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B30A_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B30A:
	selector es_8 = SLICE(ptrArg04, selector, 16)
	word16 bx_9 = (word16) ptrArg04
	Mem12[es_8:bx_9:word16] = Mem0[es_8:bx_9:word16] - 0x0001
	selector ds_28
	return fn0800_B324(ds, (byte) (int16) bArg02, DPB(ptrLoc06, bx_9, 0), wArg06, out ds_28)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B30A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_B324(selector ds, byte bArg02, segptr32 ptrArg04, selector psegArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B324_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B324:
	word16 ax_131
	word16 ax_39
	Mem11[ds:0x4EE6:byte] = bArg02
	selector es_15 = SLICE(ptrArg04, selector, 16)
	word16 bx_16 = (word16) ptrArg04
	branch Mem11[es_15:bx_16:word16] >= 0xFFFF l0800_B389
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B389:
	selector es_138 = SLICE(ptrArg04, selector, 16)
	word16 bx_139 = (word16) ptrArg04
	branch (Mem11[es_138:bx_139 + 0x0002:word16] & 0x0090) != 0x0000 l0800_B39C
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B394:
	branch (Mem11[es_138:bx_139 + 0x0002:word16] & 0x0002) != 0x0000 l0800_B3A6
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3A6:
	selector es_169 = SLICE(ptrArg04, selector, 16)
	word16 bx_170 = (word16) ptrArg04
	Mem172[es_169:bx_170 + 0x0002:word16] = Mem11[es_169:bx_170 + 0x0002:word16] | 0x0100
	branch Mem172[es_169:bx_170 + 0x0006:word16] == 0x0000 l0800_B421
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B421:
	selector es_239 = SLICE(ptrArg04, selector, 16)
	branch (Mem172[ds:((int16) Mem172[es_239:(word16) ptrArg04 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B44C
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_B435:
	word16 ax_342 = (int16) Mem172[es_239:wArg04 + 0x0004:byte]
	word16 dx_346
	fn0800_8E29((byte) ax_342, ds, ax_342, 0x0000, 0x0000, 0x02, out dx_346)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B44C:
	branch Mem172[ds:0x4EE6:byte] != 0x0A l0800_B478
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B453:
	selector es_305 = SLICE(ptrArg04, selector, 16)
	word16 bx_306 = (word16) ptrArg04
	branch (Mem172[es_305:bx_306 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B478
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B45E:
	word16 ax_320 = (int16) Mem172[es_305:bx_306 + 0x0004:byte]
	ptrLoc0A = DPB(ptrLoc0A, 0x26AE, 0) (alias)
	byte dl_324
	ax_131 = fn0800_C779((byte) ax_320, ds, ax_320, ptrLoc0A, 0x0001, out dl_324)
	branch ax_131 != 0x0001 l0800_B495
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B478:
	word16 ax_295 = (int16) Mem172[SLICE(ptrArg04, selector, 16):(word16) ptrArg04 + 0x0004:byte]
	byte dl_299
	ax_131 = fn0800_C779((byte) ax_295, ds, ax_295, DPB(ptrLoc0A, 0x4EE6, 0), 0x0001, out dl_299)
	branch ax_131 == 0x0001 l0800_B4A3
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B495:
	branch (Mem172[SLICE(ptrArg04, selector, 16):(word16) ptrArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_B4A3
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B4A0:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B3B6:
	branch Mem172[es_169:bx_170:word16] == 0x0000 l0800_B3C9
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3BC:
	ptrLoc08 = DPB(ptrLoc08, bx_170, 0) (alias)
	byte dl_227
	branch fn0800_A6B7(ds, ptrLoc08, psegArg06, out dl_227, out ds) != 0x0000 l0800_B380
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3C9:
	selector es_185 = SLICE(ptrArg04, selector, 16)
	word16 bx_186 = (word16) ptrArg04
	Mem189[es_185:bx_186:word16] = -Mem172[es_185:bx_186 + 0x0006:word16]
	ax_131 = Mem189[es_185:bx_186 + 0x000E:word16]
	word16 si_191 = Mem189[es_185:bx_186 + 0x000C:word16]
	Mem193[es_185:bx_186 + 0x000C:word16] = Mem189[es_185:bx_186 + 0x000C:word16] + 0x0001
	Mem196[ax_131:si_191:byte] = Mem193[ds:0x4EE6:byte]
	branch (Mem196[psegArg06:bx_186 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B3F8
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B3F8:
	branch Mem196[ds:0x4EE6:byte] == 0x0A l0800_B409
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B3FF:
	branch Mem196[ds:0x4EE6:byte] == 0x0D l0800_B409
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B409:
	byte dl_209
	selector ds_210
	word16 ax_211 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_209, out ds_210)
	ax_131 = ax_211
	branch ax_211 != 0x0000 l0800_B41B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B41B:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B418:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B406:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B3F5:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B39C:
	selector es_159 = SLICE(ptrArg04, selector, 16)
	word16 bx_160 = (word16) ptrArg04
	Mem162[es_159:bx_160 + 0x0002:word16] = Mem11[es_159:bx_160 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B337:
	Mem93[es_15:bx_16:word16] = Mem11[es_15:bx_16:word16] + 0x0001
	ax_131 = Mem93[es_15:bx_16 + 0x000E:word16]
	word16 si_95 = Mem93[es_15:bx_16 + 0x000C:word16]
	Mem97[es_15:bx_16 + 0x000C:word16] = Mem93[es_15:bx_16 + 0x000C:word16] + 0x0001
	Mem100[ax_131:si_95:byte] = Mem97[ds:0x4EE6:byte]
	branch (Mem100[psegArg06:bx_16 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B35D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B35D:
	branch Mem100[ds:0x4EE6:byte] == 0x0A l0800_B36E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B364:
	branch Mem100[ds:0x4EE6:byte] == 0x0D l0800_B36E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B36E:
	byte dl_124
	selector ds_125
	word16 ax_126 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_124, out ds_125)
	ax_131 = ax_126
	branch ax_126 != 0x0000 l0800_B380
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B380:
	ax_39 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B37D:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B36B:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B35A:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B4A3:
	ax_39 = DPB(ax_131, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B4A8:
	return ax_39
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_B324_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:si dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_B4BE(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_B4BE_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_B4BE:
	word16 ax_108
	word16 di_136 = wArg06
	branch (Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0002:word16] & 0x0008) == 0x0000 l0800_B504
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_B504:
	selector es_176 = SLICE(ptrArg02, selector, 16)
	word16 bx_177 = (word16) ptrArg02
	branch (Mem0[es_176:bx_177 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B512
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B512:
	branch Mem0[es_176:bx_177 + 0x0006:word16] != 0x0000 l0800_B51C
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B51C:
	branch Mem0[es_176:bx_177 + 0x0006:word16] >=u wArg06 l0800_B583
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B583:
	selector es_435 = SLICE(ptrArg02, selector, 16)
	word16 bx_436 = (word16) ptrArg02
	branch Mem0[es_435:bx_436:word16] + wArg06 < 0x0000 l0800_B5B1
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B58D:
	branch Mem0[es_435:bx_436:word16] != 0x0000 l0800_B59F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B59F:
	byte dl_485
	selector ds_486
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, out dl_485, out ds_486) == 0x0000 l0800_B5B1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5AE:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B593:
	Mem479[es_435:bx_436:word16] = 0xFFFF - Mem0[es_435:bx_436 + 0x0006:word16]
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5B1:
	selector es_456 = SLICE(ptrArg02, selector, 16)
	word16 bx_457 = (word16) ptrArg02
	fn0800_B03B(DPB(ptrLoc12, Mem0[es_456:bx_457 + 0x000C:word16], 0), Mem0[es_456:bx_457 + 0x000E:word16], DPB(ptrLoc0E, wArg08, 0), wArg06)
	selector es_466 = SLICE(ptrArg02, selector, 16)
	word16 bx_467 = (word16) ptrArg02
	Mem470[es_466:bx_467:word16] = Mem0[es_466:bx_467:word16] + wArg06
	Mem472[es_466:bx_467 + 0x000C:word16] = Mem470[es_466:bx_467 + 0x000C:word16] + wArg06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B522:
	branch Mem0[es_176:bx_177:word16] == 0x0000 l0800_B535
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B528:
	byte dl_423
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, bx_177, 0), wArg04, out dl_423, out ds) != 0x0000 l0800_B4F5
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B535:
	selector es_364 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[es_364:(word16) ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B560
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B549:
	word16 ax_410 = (int16) Mem0[es_364:wArg02 + 0x0004:byte]
	word16 dx_414
	fn0800_8E29((byte) ax_410, ds, ax_410, 0x0000, 0x0000, 0x02, out dx_414)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B560:
	word16 ax_388 = (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte]
	byte dl_392
	branch fn0800_C779((byte) ax_388, ds, ax_388, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_392) <u wArg06 l0800_B57D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B57D:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B57A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B519:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5DB:
	selector es_298 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[es_298:(word16) ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B606
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5EF:
	word16 ax_344 = (int16) Mem0[es_298:wArg02 + 0x0004:byte]
	word16 dx_348
	fn0800_8E29((byte) ax_344, ds, ax_344, 0x0000, 0x0000, 0x02, out dx_348)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B606:
	word16 ax_322 = (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte]
	byte dl_326
	branch fn0800_C779((byte) ax_322, ds, ax_322, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_326) >=u wArg06 l0800_B69D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):0x0000 -10(fp):0x0002 -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B620:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B50F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B625:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0006:word16] == 0x0000 l0800_B680
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B680:
	byte dl_289
	selector ds_290
	branch fn0800_C632(ds, (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0004:byte], wArg08, wArg0A, wArg06, out dl_289, out ds_290) >=u wArg06 l0800_B69D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B69A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B62F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B677:
	di_136 = di_136 - 0x0001
	branch di_136 != 0x0000 l0800_B631
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B631:
	word16 ax_230
	selector es_212 = SLICE(ptrArg02, selector, 16)
	word16 bx_213 = (word16) ptrArg02
	word16 v17_214 = Mem0[es_212:bx_213:word16] + 0x0001
	Mem215[es_212:bx_213:word16] = v17_214
	branch v17_214 >= 0x0000 l0800_B659
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B659:
	ptrLoc0C = DPB(ptrLoc0C, wArg02, 0) (alias)
	ax_230 = fn0800_B30A(ds, Mem215[SLICE(ptrArg08, selector, 16):(word16) ptrArg08:byte], ptrLoc0C, wArg04, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B639:
	word16 ax_237 = Mem215[es_212:bx_213 + 0x000E:word16]
	word16 si_238 = Mem215[es_212:bx_213 + 0x000C:word16]
	Mem240[es_212:bx_213 + 0x000C:word16] = Mem215[es_212:bx_213 + 0x000C:word16] + 0x0001
	Mem249[ax_237:si_238:byte] = Mem240[SLICE(ptrArg08, selector, 16):(word16) ptrArg08:byte]
	ax_230 = DPB(ax_237, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B66F:
	branch ax_230 != 0xFFFF l0800_B677
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B674:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B67E:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_B4D7:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4FA:
	di_136 = di_136 - 0x0001
	branch di_136 != 0x0000 l0800_B4D9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4D9:
	ptrLoc0C = DPB(ptrLoc0C, wArg02, 0) (alias)
	selector ds_496 = ds
	branch fn0800_B324(ds_496, (byte) (int16) Mem0[SLICE(ptrArg08, selector, 16):(word16) ptrArg08:byte], ptrLoc0C, wArg04, out ds) != 0xFFFF l0800_B4FA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4F5:
	ax_108 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B501:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_B69D:
	ax_108 = wArg06
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> si:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B6A0:
	return ax_108
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

fn0800_B4BE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> ax:<invalid> al:<invalid> si:si es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>



word16 fn0800_B97F(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B97F_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B97F:
	word16 ax_124
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_B99A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B99A:
	byte al_100 = (byte) (wArg08 + 0x0001)
	branch wArg08 <u 0xFFFF l0800_B9B0
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9A3:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_B9B5
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9B5:
	ptrLoc10 = DPB(ptrLoc10, wArg04, 0) (alias)
	word16 ax_114 = fn0800_8F50(al_100, ds, wArg02, ptrLoc10, wArg08)
	branch ax_114 <u 0xFFFF l0800_B9DD
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9D0:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_B9E2
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9E2:
	word16 si_135 = (word16) ptrArg04
	word16 cx_131 = ax_114
	selector es_134 = SLICE(ptrArg04, selector, 16)
	word16 di_136 = si_135
	word16 bx_137 = si_135
	si_142 = si_135
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9ED:
	word16 si_142
	al_100 = Mem0[ds:si_142:byte]
	si_142 = si_142 + 0x0001
	branch al_100 == 0x1A l0800_BA21
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> al:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA21:
	word16 cx_233 = -cx_131
	word16 ax_235 = 0x0000 - (cx_233 == 0x0000)
	word16 dx_244
	fn0800_8E29((byte) ax_235, ds, wArg02, cx_233, ax_235, 0x01, out dx_244)
	Mem250[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x0200
	bx_137 = si_135
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9F3:
	branch al_100 == 0x0D l0800_B9FC
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FC:
	cx_131 = cx_131 - 0x0001
	branch cx_131 != 0x0000 l0800_B9ED
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FE:
	ptrLoc14 = DPB(ptrLoc14, fp - 0x0005, 0) (alias)
	fn0800_8F50((byte) (fp - 0x0005), ds, wArg02, ptrLoc14, 0x0001)
	Mem225[es_134:di_136:byte] = bLoc05
	bx_137 = si_135
	al_100 = bLoc05
	di_136 = di_136 + 0x0001
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9F7:
	Mem193[es_134:di_136:byte] = al_100
	di_136 = di_136 + 0x0001
	cx_131 = cx_131 - 0x0001
	branch cx_131 != 0x0000 l0800_B9ED
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FA:
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA19:
	branch di_136 != bx_137 l0800_BA1F
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA1F:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA41:
	ax_124 = di_136 - bx_137
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA1D:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9DD:
	ax_124 = ax_114
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9B0:
	ax_124 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B990:
	ax_124 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BA44:
	return ax_124
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_B97F_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_BA4A(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh di dil dl ds dx eax edi edx es rax rdi rdx
// Preserved: bp di ds sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BA4A_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BA4A:
	word16 ax_26
	word16 ax_19
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_19) l0800_BA60
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BA60:
	ax_26 = fn0800_8D2B(ds, ax_19)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA5C:
	ax_26 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA64:
	return ax_26
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp

fn0800_BA4A_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> di:di al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp



selector fn0800_BA67(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_BA67_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_BA67:
	selector ds_24
	branch fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc0C, wArg02, 0), wArg04, 0x0000, out ds_24) != 0x0000 l0800_BA87
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_BA7F:
	ptr32 es_bx_43 = Mem0[ss:fp + 0x0002:segptr32]
	Mem0[es_bx_43 + 0x0002:word16] = Mem0[es_bx_43 + 0x0002:word16] & 0xFFEF
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

l0800_BA87:
	return ds_24
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

fn0800_BA67_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



word16 fn0800_BA89(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16)
fn0800_BA89_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16)

l0800_BA89:
	word16 ax_149
	word16 bp_168 = fp - 0x0002
	word16 sp_109 = fp - 0x0006
	word16 di_13 = wArg0A
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0012:word16] != wArg02 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAA0:
	branch wArg0A > 0x0002 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAA5:
	branch wArg0C <=u 0x7FFF l0800_BAB1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAB1:
	branch Mem0[ds:0x26B2:word16] != 0x0000 l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_BAB8:
	branch wArg02 != 0x236C l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BAC7:
	branch Mem0[ds:0x26B0:word16] != 0x0000 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BACE:
	branch wArg02 != 0x2358 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BAD5:
	Mem244[ds:0x26B0:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BABF:
	Mem247[ds:0x26B2:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32) Stack +0004(16)

l0800_BADB:
	word16 bx_97 = (word16) ptrArg02
	branch Mem0[SLICE(ptrArg02, selector, 16):bx_97:word16] == 0x0000 l0800_BAF6
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0004(16)

l0800_BAE4:
	fn0800_ACB3(fp - 0x0002, ds, DPB(ptrLoc10, bx_97, 0), wArg04, 0x0001, out ds)
	sp_109 = fp - 0x0006
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BAF6:
	ptr32 es_bx_110 = Mem0[ss:fp + 0x0002:segptr32]
	branch (Mem0[es_bx_110 + 0x0002:word16] & 0x0004) == 0x0000 l0800_BB0E
// DataOut: bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB01:
	word16 sp_210 = sp_109 - 0x0002
	Mem211[ss:sp_210:word16] = Mem0[es_bx_110 + 0x000A:word16]
	Mem213[ss:sp_210 - 0x0002:word16] = Mem0[es_bx_110 + 0x0008:word16]
	fn0800_9E75(ds, wArg02, out ds)
	sp_109 = sp_210 + 0x0002
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB0E:
	ptr32 es_bx_120 = Mem0[ss:fp + 0x0002:segptr32]
	Mem0[es_bx_120 + 0x0002:word16] = Mem0[es_bx_120 + 0x0002:word16] & 0xFFF3
	Mem0[es_bx_120 + 0x0006:word16] = 0x0000
	word16 ax_127 = Mem126[ss:fp + 0x0004:word16]
	word16 dx_128 = Mem126[ss:fp + 0x0002:word16]
	Mem0[es_bx_120 + 0x000A:word16] = ax_127
	Mem0[es_bx_120 + 0x0008:word16] = dx_128 + 0x0005
	Mem0[es_bx_120 + 0x000E:word16] = ax_127
	Mem0[es_bx_120 + 0x000C:word16] = dx_128 + 0x0005
	branch wArg0A == 0x0002 l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB3A:
	word16 si_152 = wArg0C
	branch false l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB3E:
	Mem156[ds:0x2352:word16] = 0xC7F0
	branch (Mem156[ss:fp + 0x0006:word16] | Mem156[ss:fp + 0x0008:word16]) != 0x0000 l0800_BB6B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_BB4C:
	Mem187[ss:sp_109 - 0x0002:word16] = wArg0C
	word16 dx_189
	selector ds_193
	word16 ax_194 = fn0800_9F7F(fp - 0x0002, ds, wArg00, out dx_189, out bp_168, out si_152, out di_13, out ds_193)
	Mem197[ss:bp_168 + 0x000A:word16] = dx_189
	Mem198[ss:bp_168 + 0x0008:word16] = ax_194
	branch (ax_194 | dx_189) != 0x0000 l0800_BB5E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5E:
	ptr32 es_bx_203 = Mem198[ss:bp_168 + 0x0004:segptr32]
	Mem0[es_bx_203 + 0x0002:word16] = Mem0[es_bx_203 + 0x0002:word16] | 0x0004
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB6B:
	ptr32 es_bx_170 = Mem156[ss:bp_168 + 0x0004:segptr32]
	word16 ax_173 = Mem156[ss:bp_168 + 0x000A:word16]
	word16 dx_174 = Mem156[ss:bp_168 + 0x0008:word16]
	Mem0[es_bx_170 + 0x000E:word16] = ax_173
	Mem0[es_bx_170 + 0x000C:word16] = dx_174
	Mem0[es_bx_170 + 0x000A:word16] = ax_173
	Mem0[es_bx_170 + 0x0008:word16] = dx_174
	Mem0[es_bx_170 + 0x0006:word16] = si_152
	branch di_13 != 0x0001 l0800_BB92
// DataOut: bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB8D:
	Mem0[es_bx_170 + 0x0002:word16] = Mem0[es_bx_170 + 0x0002:word16] | 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB92:
	ax_149 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5B:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BAAB:
	ax_149 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB94:
	return ax_149
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_BA89_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_BC49(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, segptr32 ptrArg0A, word16 wArg0C, segptr32 ptrArg0E, word16 wArg10, segptr32 ptrArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut: sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BC49_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC49:
	branch (wArg06 | wArg08) == 0x0000 l0800_BC62
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC5B:
	Mem184[SLICE(ptrArg06, selector, 16):(word16) ptrArg06:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC62:
	branch (wArg0A | wArg0C) == 0x0000 l0800_BC71
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(32) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC6A:
	Mem179[SLICE(ptrArg0A, selector, 16):(word16) ptrArg0A:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC71:
	branch (wArg0E | wArg10) == 0x0000 l0800_BC80
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(32) Stack +0012(16) Stack +0014(16)

l0800_BC79:
	Mem174[SLICE(ptrArg0E, selector, 16):(word16) ptrArg0E:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(16) Stack +0014(16)

l0800_BC80:
	branch (wArg12 | wArg14) == 0x0000 l0800_BC8F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(32)

l0800_BC88:
	Mem169[SLICE(ptrArg12, selector, 16):(word16) ptrArg12:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC8F:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9D:
	word16 bx_67 = (word16) ptrArg02
	branch Mem0[SLICE(ptrArg02, selector, 16):bx_67:byte] == 0x20 l0800_BC9A
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9A:
	wArg02 = wArg02 + 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BCA6:
	segptr32 ptrLoc62_77 = DPB(ptrLoc62, bx_67, 0)
	word16 ax_78 = fn0800_BFC7(ptrLoc62_77, wArg04)
	word16 si_161 = ax_78
	branch ax_78 <= 0x0050 l0800_BCB9
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB6:
	si_161 = 0x0050
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB9:
	Mem91[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = 0x00
	segptr32 ptrLoc64_102 = DPB(ptrLoc64, wArg02, 0)
	segptr32 ptrLoc68_108 = DPB(ptrLoc68, fp - 0x0059, 0)
	fn0800_C01E(ptrLoc68_108, ss, ptrLoc64_102, si_161)
	word16 v18_110 = fp - 0x0059 + si_161
	segptr32 ptrLoc06_112 = DPB(ptrLoc06, v18_110, 0)
	Mem116[SLICE(ptrLoc06_112, selector, 16):v18_110:byte] = 0x00
	word16 wLoc06_111 = v18_110
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)

l0800_BCE2:
	word16 v19_124 = wLoc06_111 - 0x0001
	ptrLoc06_112 = DPB(ptrLoc06_112, v19_124, 0) (alias)
	selector es_129 = SLICE(ptrLoc06_112, selector, 16)
	byte al_131 = Mem116[es_129:v19_124:byte]
	wLoc06_111 = v19_124
	word16 ax_132 = (int16) al_131
	word16 cx_134 = 0x0007
	word16 bx_135 = 0xBE1F
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BCF5:
	word16 ax_140 = Mem116[0x0800:bx_135:word16]
	branch ax_140 == ax_132 l0800_BD04
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD04:
	word16 sp_147
	word16 bp_148
	selector ss_149
	byte SCZO_150
	word16 si_151
	word16 di_152
	byte SZO_153
	byte C_154
	word16 ax_155
	byte Z_156
	selector es_157
	word16 bx_158
	word16 cx_159
	byte al_160
	call Mem116[0x0800:bx_135 + 0x000E:word16] (retsize: 4; depth: 98)
		uses: al_131,ax_140,bp_5,bx_137,C_119,cx_139,di_13,es_129,ptrLoc06_126,ptrLoc62_77,ptrLoc64_102,ptrLoc68_108,SCZO_141,si_117,sp_109,ss,SZO_127,wLoc02_4,wLoc04_59,wLoc06_125,wLoc08_133,wLoc5C_9,wLoc5E_12,wLoc60_96,wLoc62_98,wLoc64_100,wLoc66_104,wLoc68_106,Z_142
		defs: al_160,ax_155,bp_148,bx_158,C_154,cx_159,di_152,es_157,SCZO_150,si_151,sp_147,ss_149,SZO_153,Z_156
	return
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

fn0800_BC49_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

l0800_BCFD:
	bx_135 = bx_135 + 0x0002
	cx_134 = cx_134 - 0x0001
	branch cx_134 != 0x0000 l0800_BCF5
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD02:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)



void fn0800_BE3B(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, word16 wArg10, word16 wArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BE3B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BE3B:
	fn0800_BC49(DPB(ptrLoc16, wArg02, 0), wArg04, DPB(ptrLoc12, wArg06, 0), wArg08, DPB(ptrLoc0E, wArg0A, 0), wArg0C, DPB(ptrLoc0A, wArg0E, 0), wArg10, DPB(ptrLoc06, wArg12, 0), wArg14)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BE3B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> al:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_BEA2(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_BEA2_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_BEA2:
	Mem10[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:byte] = 0x00
	word16 di_32
	return fn0800_9828(ds, DPB(ptrLoc0C, wArg06, 0), wArg08, out di_32)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BEA2_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -14(fp):fp + 0x000A -12(fp):<invalid> -10(fp):<invalid> -8(fp):fp + 0x0002 -6(fp):ss -4(fp):0xBE64 -2(fp):bp



void fn0800_BF5F(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds es si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF5F_entry:
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF5F:
	word16 di_116 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 cx_118 = 0xFFFF
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70:
	branch cx_118 == 0x0000 l0800_BF72
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70_1:
	di_116 = di_116 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch 0x00 != Mem0[es_19:di_116:byte] l0800_BF70
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF72:
	word16 si_37 = di_116 - 0x0001
	word16 di_111 = (word16) ptrArg06
	selector es_41 = SLICE(ptrArg06, selector, 16)
	word16 cx_113 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C:
	branch cx_113 == 0x0000 l0800_BF7E
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C_2:
	di_111 = di_111 + 0x0001
	cx_113 = cx_113 - 0x0001
	branch 0x00 != Mem0[es_41:di_111:byte] l0800_BF7C
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7E:
	word16 cx_107 = ~cx_113
	word16 di_52 = di_111 - cx_107
	word16 di_105 = si_37
	word16 si_104 = di_52
	branch (di_52 & 0x0001) == 0x0000 l0800_BF8F
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8D:
	Mem103[es_19:si_37:byte] = Mem0[es_41:di_52:byte]
	si_104 = di_52 + 0x0001
	di_105 = si_37 + 0x0001
	cx_107 = cx_107 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8F:
	word16 cx_70 = cx_107 >>u 0x0001
	cx_78 = cx_70
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF91:
	word16 cx_78
	branch cx_78 == 0x0000 l0800_BF93
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF93:
	branch cx_70 >=u 0x0000 l0800_BF96
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF95:
	Mem99[es_19:di_105:byte] = Mem0[es_41:si_104:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF96:
	return
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF5F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> dx:es al:<invalid> cx:<invalid> di:di si:si ds:ds es:es ax:di -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BF91_1:
	Mem81[es_19:di_105:word16] = Mem0[es_41:si_104:word16]
	si_104 = si_104 + 0x0002
	di_105 = di_105 + 0x0002
	cx_78 = cx_78 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)



void fn0800_BF9E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF9E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF9E:
	word16 di_15 = (word16) ptrArg06
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 si_17 = di_15
	word16 cx_21 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE:
	branch cx_21 == 0x0000 l0800_BFB0
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE_1:
	di_15 = di_70 + 0x0001
	cx_21 = cx_21 - 0x0001
	word16 di_70 = di_15
	branch 0x00 != Mem0[es_16:di_70:byte] l0800_BFAE
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFB0:
	word16 cx_32 = ~cx_21
	word16 di_40 = (word16) ptrArg02
	selector es_41 = SLICE(ptrArg02, selector, 16)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBA:
	branch cx_32 == 0x0000 l0800_BFBC
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBC:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF9E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> cx:<invalid> di:di ax:<invalid> ds:ds dx:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BFBA_2:
	Mem48[es_41:di_40:byte] = Mem0[es_16:si_17:byte]
	si_17 = si_17 + 0x0001
	di_40 = di_40 + 0x0001
	cx_32 = cx_32 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_BFC7(segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_BFC7_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_BFC7:
	word16 di_11 = (word16) ptrArg02
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 ax_13 = 0x0000
	branch 0x0000 != wArg04 l0800_BFD9
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BFD5:
	branch 0x0000 == di_11 l0800_BFE3
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFD9:
	word16 cx_33 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD:
	branch cx_33 == 0x0000 l0800_BFDF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD_1:
	di_11 = di_62 + 0x0001
	cx_33 = cx_33 - 0x0001
	word16 di_62 = di_11
	branch 0x00 != Mem0[es_12:di_62:byte] l0800_BFDD
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDF:
	ax_13 = ~cx_33 - 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFE3:
	return ax_13
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:0x0000 di:<invalid> -4(fp):di -2(fp):bp

fn0800_BFC7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> di:di cx:0x0000 -4(fp):di -2(fp):bp



word16 fn0800_BFE6(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_BFE6_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_BFE6:
	word16 di_17 = (word16) ptrArg06
	selector es_18 = SLICE(ptrArg06, selector, 16)
	word16 ax_22 = wArg0A
	word16 cx_110 = wArg0A
	branch wArg0A == 0x0000 l0800_C018
// DataOut: ax cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFA:
	di_108 = di_17
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE:
	word16 di_108
	branch cx_110 == 0x0000 l0800_C000
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE_1:
	di_108 = di_111 + 0x0001
	cx_110 = cx_110 - 0x0001
	word16 di_111 = di_108
	branch 0x00 != Mem0[es_18:di_111:byte] l0800_BFFE
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C000:
	word16 bx_66 = wArg0A - cx_110
	word16 cx_105 = bx_66
	word16 di_103 = di_17
	selector ds_73 = SLICE(ptrArg02, selector, 16)
	word16 si_101 = (word16) ptrArg02
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009:
	branch cx_105 == 0x0000 l0800_C00B
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009_2:
	si_101 = si_113 + 0x0001
	di_103 = di_112 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_112 = di_103
	word16 si_113 = si_101
	branch Mem0[ds_73:si_113:byte] != Mem0[es_18:di_112:byte] l0800_C009
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C00B:
	ax_22 = DPB(wArg0A, 0x00, 8) - DPB(bx_66, 0x00, 8)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C018:
	return ax_22
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> di:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp

fn0800_BFE6_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:ds Sequence es:di:<invalid> si:si ax:<invalid> cx:<invalid> ds:ds di:di bx:<invalid> al:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp



void fn0800_C01E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_C01E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_C01E:
	word16 di_15 = (word16) ptrArg06
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 si_17 = di_15
	word16 cx_23 = wArg0A
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030:
	branch cx_23 == 0x0000 l0800_C032
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030_1:
	di_15 = di_83 + 0x0001
	cx_23 = cx_23 - 0x0001
	word16 di_83 = di_15
	branch 0x00 != Mem0[es_16:di_83:byte] l0800_C030
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C032:
	word16 di_42 = (word16) ptrArg02
	selector es_43 = SLICE(ptrArg02, selector, 16)
	word16 cx_46 = wArg0A - cx_23
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E:
	branch cx_46 == 0x0000 l0800_C040
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C040:
	word16 cx_58 = cx_23
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C042:
	branch cx_58 == 0x0000 l0800_C044
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C044:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_C01E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> bx:<invalid> cx:<invalid> di:di ds:ds dx:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_C042_1:
	Mem62[es_43:di_42:byte] = 0x00
	di_42 = di_42 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E_2:
	Mem53[es_43:di_42:byte] = Mem0[es_16:si_17:byte]
	si_17 = si_17 + 0x0001
	di_42 = di_42 + 0x0001
	cx_46 = cx_46 - 0x0001
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_C04F(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax di ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_C04F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_C04F:
	selector ds_12
	word16 di_13
	*diOut = fn0800_C379(ds, out ds_12)
	word16 si_29 = Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16]
	int32 dx_ax_36 = (int32) (si_29 + 0xF844 >> 0x0001 >> 0x0001)
	int32 dx_ax_63 = (int32) (si_29 + 0xF844 & 0x0003)
	word16 dx_49
	word16 dx_76
	word16 v19_79 = (word16) (SEQ(Mem0[ds_12:0x26E4:word16], Mem0[ds_12:0x26E2:word16] + 0xA600) + 0x12CEA600) + fn0800_8F18(0x1F80, SLICE(dx_ax_36, word16, 16), 0x0786, (word16) dx_ax_36, out dx_49) + fn0800_8F18(0x3380, SLICE(dx_ax_63, word16, 16), 0x01E1, (word16) dx_ax_63, out dx_76)
	word16 wLoc06_292 = v19_79
	branch (si_29 + 0xF844 & 0x0003) == 0x0000 l0800_C0B9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0B0:
	wLoc06_292 = v19_79 + 0x5180
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0B9:
	word16 cx_107 = 0x0000
	word16 si_105 = (int16) Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + 0x0003:byte] - 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0D0:
	branch si_105 > 0x0000 l0800_C0C8
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0C8:
	si_105 = si_105 - 0x0001
	cx_107 = cx_107 + (int16) Mem0[ds_12:si_105 + 0x26B4:byte]
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0D4:
	selector es_116 = SLICE(ptrArg02, selector, 16)
	word16 bx_117 = (word16) ptrArg02
	word16 ax_121 = (int16) Mem0[es_116:bx_117 + 0x0002:byte]
	word16 cx_123 = cx_107 + (ax_121 - 0x0001)
	branch Mem0[es_116:bx_117 + 0x0003:byte] <= 0x02 l0800_C0EE
// DataOut: bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0E6:
	branch (Mem0[es_116:bx_117:word16] & 0x0003) != 0x0000 l0800_C0EE
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0ED:
	cx_123 = cx_123 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C0EE:
	word16 ax_148 = (word16) (cx_123 *s 0x0018) + DPB(ax_121 - 0x0001, 0x00, 8)
	word16 si_149 = ax_148
	branch Mem0[ds_12:0x26E6:word16] == 0x0000 l0800_C128
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0002(32) Stack +0006(32)

l0800_C10B:
	branch fn0800_C553(ds_12, Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02:word16] + 0xF84E, 0x0000, cx_123, (byte) DPB(ax_148, 0x00, 8)) == 0x0000 l0800_C128
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0006(32)

l0800_C127:
	si_149 = ax_148 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -0006(8) Stack +0006(32)

l0800_C128:
	int32 dx_ax_161 = (int32) si_149
	word16 dx_176
	word16 ax_177 = fn0800_8F18(0x0E10, SLICE(dx_ax_161, word16, 16), 0x0000, (word16) dx_ax_161, out dx_176)
	int32 dx_ax_192 = (int32) DPB(ax_177, 0x00, 8)
	int32 dx_ax_220 = (int32) DPB((word16) ptrArg06, 0x00, 8)
	word16 dx_207
	word16 cx_226 = fn0800_8F18(0x003C, SLICE(dx_ax_192, word16, 16), 0x0000, (word16) dx_ax_192, out dx_207) + (word16) dx_ax_220
	word16 dx_239
	*dxOut = v31
	return wLoc06_292 + ax_177 + (word16) (SEQ(dx_207, cx_226) + dx_ax_220)
// DataOut: ax di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C04F_exit:
// DataOut: ax di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> es:<invalid> di:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_C379(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: di ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
fn0800_C379_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0012(16)

l0800_C379:
	segptr32 ptrLoc0C_141 = DPB(ptrLoc0C, 0x26E8, 0)
	word16 dx_19
	word16 ax_20 = fn0800_AFCB(ds, ptrLoc0C_141, out dx_19)
	branch (ax_20 | dx_19) != 0x0000 l0800_C397
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000E(16) Local -0012(16)

l0800_C397:
	ptrLoc0C_141 = DPB(ptrLoc0C, ax_20, 0) (alias)
	branch fn0800_BFC7(ptrLoc0C_141, dx_19) >=u 0x0004 l0800_C3AA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3AA:
	selector es_151 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[es_151:(word16) ptrLoc06:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3BD:
	branch ((int16) Mem0[ds:(int16) Mem0[es_151:ax_20 + 0x0001:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3D1:
	branch ((int16) Mem0[ds:(int16) Mem0[es_151:ax_20 + 0x0002:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3E5:
	branch Mem0[es_151:ax_20 + 0x0003:byte] == 0x2D l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3EF:
	branch Mem0[es_151:ax_20 + 0x0003:byte] == 0x2B l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3F6:
	branch (Mem0[ds:(int16) Mem0[es_151:ax_20 + 0x0003:byte] + 0x2251:byte] & 0x02) == 0x00 l0800_C42C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C404:
	selector es_190 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[es_190:(word16) ptrLoc06 + 0x0003:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C418:
	branch ((int16) Mem0[ds:(int16) Mem0[es_190:ax_20 + 0x0004:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C467:
	fn0800_B083(Mem0[ds:0x26DE:word16], Mem0[ds:0x26E0:word16], 0x00, 0x0004)
	fn0800_C01E(DPB(ptrLoc12, Mem0[ds:0x26DA:word16], 0), Mem0[ds:0x26DC:word16], DPB(ptrLoc0E, ax_20, 0), 0x0003)
	ptr32 es_bx_232 = Mem0[ds:0x26DA:segptr32]
	Mem0[es_bx_232 + 0x0003:byte] = 0x00
	word16 dx_245
	word16 ax_246 = fn0800_A471((byte) es_bx_232, ds, DPB(ptrLoc0C, ax_20 + 0x0003, 0), out dx_245)
	word16 dx_263
	word16 ax_264 = fn0800_8F18(0x0E10, dx_245, 0x0000, ax_246, out dx_263)
	Mem265[ds:0x26E4:word16] = dx_263
	Mem266[ds:0x26E2:word16] = ax_264
	Mem267[ds:0x26E6:word16] = 0x0000
	word16 si_268 = 0x0003
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C542:
	branch Mem267[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06 + si_268:byte] == 0x00 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C54B:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4CA:
	branch (Mem267[ds:(int16) Mem267[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06 + si_268:byte] + 0x2251:byte] & 0x0C) == 0x00 l0800_C541
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C541:
	si_268 = si_268 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4DA:
	branch fn0800_BFC7(DPB(ptrLoc0C, ax_20 + si_268, 0), dx_19) <u 0x0003 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_C4ED:
	selector es_304 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem267[ds:(int16) Mem267[es_304:(word16) ptrLoc06 + 0x0001 + si_268:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C501:
	branch ((int16) Mem267[ds:(int16) Mem267[es_304:ax_20 + 0x0002 + si_268:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C515:
	fn0800_C01E(DPB(ptrLoc12, Mem267[ds:0x26DE:word16], 0), Mem267[ds:0x26E0:word16], DPB(ptrLoc0E, ax_20 + si_268, 0), 0x0003)
	Mem0[Mem267[ds:0x26DE:segptr32] + 0x0003:byte] = 0x00
	Mem346[ds:0x26E6:word16] = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C3A7:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C394:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C42C:
	Mem69[ds:0x26E6:word16] = 0x0001
	Mem70[ds:0x26E4:word16] = 0x0000
	Mem71[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(DPB(ptrLoc10, Mem71[ds:0x26DA:word16], 0), Mem71[ds:0x26DC:word16], DPB(ptrLoc0C_141, 0x26EB, 0))
	fn0800_BF9E(DPB(ptrLoc10, Mem71[ds:0x26DE:word16], 0), Mem71[ds:0x26E0:word16], DPB(ptrLoc0C_141, 0x26EF, 0))
	Mem99[ds:0x26E6:word16] = 0x0001
	Mem100[ds:0x26E4:word16] = 0x0000
	Mem101[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(DPB(ptrLoc10, Mem101[ds:0x26DA:word16], 0), Mem101[ds:0x26DC:word16], DPB(ptrLoc0C_141, 0x26EB, 0))
	fn0800_BF9E(DPB(ptrLoc10, Mem101[ds:0x26DE:word16], 0), Mem101[ds:0x26E0:word16], DPB(ptrLoc0C_141, 0x26EF, 0))
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C54E:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C379_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_C553_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C553:
	branch wArg04 != 0x0000 l0800_C589
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C589:
	branch wArg04 <u 0x0003 l0800_C59A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(8)

l0800_C58F:
	branch (wArg02 + 0x0046 & 0x0003) == 0x0000 l0800_C59D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(8)

l0800_C59A:
	wArg06 = wArg06 - 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(8)

l0800_C59D:
	wArg06 = wArg06 + Mem0[ds:(wArg04 - 0x0001 << 0x0001) + 0x26C0:word16]
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C55D:
	word16 si_134 = wArg06
	branch wArg06 <u 0x003B l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C566:
	branch (wArg02 + 0x0046 & 0x0003) != 0x0000 l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C571:
	si_134 = wArg06 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C572:
	wArg04 = 0x0000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C57C:
	branch Mem0[ds:(wArg04 << 0x0001) + 0x26C0:word16] <=u si_134 l0800_C579
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C579:
	wArg04 = wArg04 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C587:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5AA:
	word16 ax_34
	branch wArg04 <u 0x0004 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B0:
	branch wArg04 == 0x0004 l0800_C5BA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B2:
	branch wArg04 >u 0x000A l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B8:
	branch wArg04 != 0x000A l0800_C626
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5BA:
	word16 cx_116
	word16 bx_66 = wArg04 << 0x0001
	branch wArg02 <= 0x0010 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5C5:
	branch wArg04 != 0x0004 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D4:
	cx_116 = Mem0[ds:bx_66 + 0x26C0:word16]
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5CB:
	cx_116 = Mem0[ds:bx_66 + 0x26BE:word16] + 0x0007
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D8:
	branch ((byte) (wArg02 + 0x07B2) & 0x03) == 0x00 l0800_C5E5
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E4:
	cx_116 = cx_116 - 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E5:
	word16 cx_96 = cx_116 - SEQ(0x0000, (((wArg02 + 0x0001 >> 0x0001) >> 0x0001) + cx_116) + 0x0171) % 0x0007
	branch wArg04 != 0x0004 l0800_C61A
// DataOut: ax cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61A:
	branch wArg06 <u cx_96 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61E:
	branch wArg06 != cx_96 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C620:
	branch bArg08 >u 0x01 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C60C:
	branch wArg06 >u cx_96 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C610:
	branch wArg06 != cx_96 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C612:
	branch bArg08 <u 0x02 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62B:
	ax_34 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C618:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C626:
	ax_34 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62D:
	return ax_34
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>

fn0800_C553_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> si:si cx:<invalid> Sequence dx:ax:<invalid> dx:dx_ax % 0x0007 -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>



word16 fn0800_C632(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_C632_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C632:
	word16 ax_121
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_C64E
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C64E:
	byte al_102 = (byte) (wArg08 + 0x0001)
	branch wArg08 >=u 0xFFFF l0800_C65C
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C65C:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_C677
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C668:
	word16 dx_368
	al_102 = (byte) fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x02, out dx_368) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C677:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_C696
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C696:
	Mem128[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 wLoc08_136 = wArg08
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C727:
	word16 wLoc06_162 = fp - 0x0090
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C731:
	branch wLoc08_136 == 0x0000 l0800_C73A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(32) Local -000E(32) Stack +0008(16)

l0800_C73A:
	word16 si_310 = wLoc06_162 - (fp - 0x0090)
	byte dl_314
	*dlOut = (byte) (0x0000 - (si_310 <u 0x0000))
	branch false l0800_C770
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C74E:
	byte dl_343
	word16 ax_344 = fn0800_C779((byte) (fp - 0x0090), ds, wArg02, DPB(ptrLoc9A, fp - 0x0090, 0), si_310, out dl_343)
	byte dl_347
	*dlOut = (byte) ax_344
	branch ax_344 == si_310 l0800_C770
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> Sequence es:bx:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C770:
	ax_121 = wArg08
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C762:
	branch ax_344 == 0xFFFF l0800_C71A
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C767:
// DataOut: ax dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C737:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(32) Local -000E(32) Stack +0008(16)

l0800_C6B4:
	wLoc08_136 = wLoc08_136 - 0x0001
	byte al_238 = Mem128[SLICE(ptrLoc0E, selector, 16):(word16) ptrLoc0E:byte]
	branch al_238 != 0x0A l0800_C6D1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(0) Local -0009(8) Local -000E(32) Stack +0008(16)

l0800_C6C7:
	Mem303[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = 0x0D
	wLoc06_162 = wLoc06_162 + 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(0) Local -0009(8) Local -000E(32) Stack +0008(16)

l0800_C6D1:
	Mem248[SLICE(ptrLoc06, selector, 16):(word16) ptrLoc06:byte] = al_238
	word16 v23_249 = wLoc06_162 + 0x0001
	word16 dx_254 = v23_249 - (fp - 0x0090)
	wLoc06_162 = v23_249
	word16 bx_258 = 0x0000 - (dx_254 <u 0x0000)
	branch bx_258 < 0x0000 l0800_C731
// DataOut: di ds dx ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6EF:
	branch bx_258 != 0x0000 l0800_C6F7
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6F1:
	branch dx_254 <u 0x0080 l0800_C731
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6F7:
	word16 si_270 = v23_249 - (fp - 0x0090)
	ptrLoc9A = DPB(ptrLoc9A, fp - 0x0090, 0) (alias)
	byte dl_285
	word16 ax_286 = fn0800_C779((byte) (fp - 0x0090), ds, wArg02, ptrLoc9A, si_270, out dl_285)
	byte dl_289
	*dlOut = (byte) ax_286
	branch ax_286 == si_270 l0800_C727
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C715:
	branch ax_286 != 0xFFFF l0800_C71F
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0008(16)

l0800_C71F:
// DataOut: ax dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C76A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C71A:
	ax_121 = 0xFFFF
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C76E:
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:0xFFFF bx:<invalid> ah:0xFF al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C683:
	byte dl_120
	ax_121 = fn0800_C779(al_102, ds, wArg02, DPB(ptrLoc9A, wArg04, 0), wArg08, out dl_120)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C657:
	ax_121 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C644:
	ax_121 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C773:
	return ax_121
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

fn0800_C632_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> si:si bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp



word16 fn0800_C779(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_C779_entry:
	*dlOut = dl
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C779:
	word16 wLoc04_36
	word16 ax_23
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0001) == 0x0000 l0800_C78F
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C78F:
	byte dl_59 = (byte) ptrArg04
	*dlOut = dl_59
	word16 ax_60
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_60) l0800_C7AF
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_C7AF:
	wLoc04_36 = ax_60
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7A0:
	Mem70[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x1000
	ax_23 = ax_60
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_C789:
	wLoc04_36 = 0x0005
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7B0:
	ax_23 = fn0800_8D2B(ds, wLoc04_36)
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 bx:<invalid> ax:0x0005 ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_C7B3:
	return ax_23
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_C779_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



