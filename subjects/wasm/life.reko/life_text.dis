word32 count_neighbors(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
count_neighbors_entry:
l000C0000:
	return <invalid>
count_neighbors_exit:


void update_gen(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
update_gen_entry:
l000C0060:
	loc1_131 = arg0 * 0x2710<32> + 0x10<32>
	loc2_135 = (1<32> - arg0) * 0x2710<32> + 0x10<32>
	arg0_139 = 0xFFFFFFFF<32>
l000C0083:
	v17_24 = arg0_139 + 1<32>
	v16_30 = v17_24 == 0x64<32> ? 0<32> : v17_24
	v16_34 = arg0_139 + 0<32>
	loc12_39 = 0<32>
l000C00A8:
	loc13_102 = 0<32>
l000C00AC:
	v16_45 = arg0 * 0x2710<32> + 0x10<32>
	v18_58 = loc12_39 + 1<32>
	v16_51 = v16_45 + (v16_34 %s 0x64<32>) * 0x64<32>
	v17_63 = loc12_39 == 0x63<32> ? 0<32> : v18_58
	v18_72 = loc12_39 + 0xFFFFFFFF<32>
	v17_85 = v16_45 + v16_30 * 0x64<32>
	loc12_39 = v18_58
	v16_97 = CONVERT(Mem66[v16_51 + v17_63:byte] + Mem66[v16_51 + v18_72 %s 0x64<32>:byte] + Mem66[v17_85 + v18_72 %s 0x64<32>:byte] + Mem66[v17_85 + v17_63:byte], byte, word32)
	branch v16_97 == 3<32> l000C011F
l000C011F:
	loc13_102 = 1<32>
l000C010C:
	branch v16_97 != 2<32> l000C0124
l000C0113:
	loc13_102 = CONVERT(Mem66[loc1_131 + loc12_39:byte], byte, word32)
l000C0124:
	Mem122[loc2_135 + loc12_39:byte] = SLICE(loc13_102, byte, 0)
	branch v18_58 != 0x64<32> l000C00A8
l000C0137:
	loc1_131 = loc1_131 + 0x64<32>
	loc2_135 = loc2_135 + 0x64<32>
	arg0_139 = v17_24
	branch v17_24 == 0x64<32> == 0<32> l000C0083
l000C0151:
	return
update_gen_exit:


word32 main()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
main_entry:
l000C0153:
	return <invalid>
main_exit:


