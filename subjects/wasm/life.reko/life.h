// life.h
// Generated by decompiling life.wasm
// using Reko decompiler version 0.11.4.0.

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals" (FFFFFFAB (arr Eq_60) aFFFFFFAB))
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_16: (union "Eq_16" (bool u0) (word32 u1))
	T_16 (in loc7_27 @ 000C0092 : Eq_16)
	T_17 (in false @ 000C0092 : bool)
	T_55 (in 0<32> @ 000C014F : word32)
Eq_21: (union "Eq_21" (byte u0) (word32 u1))
	T_21 (in v86_91 @ 000C0104 : Eq_21)
	T_39 (in (word80000) ((Eq_58[]) 0xFFFFFFAD<32>)[arg0_1] + (((Eq_60[]) 0xFFFFFFAB<32>))[arg0_1].b0000 + (word32) ((Eq_62[]) 0x73<32>)[arg0_1] + (word32) ((Eq_64[]) 0x75<32>)[arg0_1] @ 000C0104 : word32)
	T_40 (in 3<32> @ 000C010A : word32)
	T_42 (in 2<32> @ 000C0111 : word32)
Eq_58: (struct "Eq_58" 2710 (2 byte b0002))
	T_58
Eq_60: (struct "Eq_60" 2710 (0 byte b0000) (2 byte b0002) (65 byte b0065) (C8 byte b00C8) (CA byte b00CA))
	T_60
Eq_62: (struct "Eq_62" 2710 (C8 byte b00C8))
	T_62
Eq_64: (struct "Eq_64" 2710 (CA byte b00CA))
	T_64
Eq_66: (struct "Eq_66" 2710 (65 byte b0065))
	T_66
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in  : word32)
  Class: Eq_2
  DataType: word32
  OrigDataType: word32
T_3: (in arg0 : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in arg1 : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in arg2 : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6: (in <invalid> @ 000C005F : word32)
  Class: Eq_2
  DataType: word32
  OrigDataType: word32
T_7: (in arg0 @ 000C005F : ui32)
  Class: Eq_7
  DataType: ui32
  OrigDataType: word32
T_8: (in arg0_1 @ 000C0060 : ui32)
  Class: Eq_7
  DataType: ui32
  OrigDataType: ui32
T_9: (in v26_15 @ 000C007A : (ptr32 byte))
  Class: Eq_9
  DataType: (ptr32 byte)
  OrigDataType: (ptr32 (struct (0 T_52 t0000)))
T_10: (in 1<32> @ 000C007A : word32)
  Class: Eq_10
  DataType: ui32
  OrigDataType: ui32
T_11: (in 1<32> - arg0_1 @ 000C007A : word32)
  Class: Eq_11
  DataType: ui32
  OrigDataType: ui32
T_12: (in 0x2710<32> @ 000C007A : word32)
  Class: Eq_12
  DataType: ui32
  OrigDataType: ui32
T_13: (in (1<32> - arg0_1) * 0x2710<32> @ 000C007A : word32)
  Class: Eq_13
  DataType: ui32
  OrigDataType: ui32
T_14: (in 0x10<32> @ 000C007A : word32)
  Class: Eq_14
  DataType: word32
  OrigDataType: word32
T_15: (in (1<32> - arg0_1) * 0x2710<32> + 0x10<32> @ 000C007A : word32)
  Class: Eq_9
  DataType: (ptr32 byte)
  OrigDataType: ui32
T_16: (in loc7_27 @ 000C0092 : Eq_16)
  Class: Eq_16
  DataType: Eq_16
  OrigDataType: (union (bool u1) (word32 u0))
T_17: (in false @ 000C0092 : bool)
  Class: Eq_16
  DataType: bool
  OrigDataType: bool
T_18: (in loc13_105 @ 000C00AA : word32)
  Class: Eq_18
  DataType: word32
  OrigDataType: word32
T_19: (in 0<32> @ 000C00AA : word32)
  Class: Eq_18
  DataType: word32
  OrigDataType: word32
T_20: (in 0<32> @ 000C00C4 : word32)
  Class: Eq_7
  DataType: ui32
  OrigDataType: word32
T_21: (in v86_91 @ 000C0104 : Eq_21)
  Class: Eq_21
  DataType: Eq_21
  OrigDataType: (union (byte u1) (word32 u0))
T_22: (in 0xFFFFFFAD<32> @ 000C0104 : word32)
  Class: Eq_22
  DataType: (ptr32 (arr Eq_58))
  OrigDataType: (ptr32 (struct (0 (arr T_58) a0000)))
T_23: (in 0x2710<32> @ 000C0104 : word32)
  Class: Eq_23
  DataType: ui32
  OrigDataType: ui32
T_24: (in arg0_1 * 0x2710<32> @ 000C0104 : word32)
  Class: Eq_24
  DataType: ui32
  OrigDataType: ui32
T_25: (in 0xFFFFFFAD<32>[arg0_1 * 0x2710<32>] @ 000C0104 : byte)
  Class: Eq_25
  DataType: byte
  OrigDataType: byte
T_26: (in 0xFFFFFFAB<32> @ 000C0104 : word32)
  Class: Eq_26
  DataType: (ptr32 (arr Eq_60))
  OrigDataType: (ptr32 (struct (0 (arr T_60) a0000)))
T_27: (in arg0_1 * 0x2710<32> @ 000C0104 : word32)
  Class: Eq_27
  DataType: ui32
  OrigDataType: ui32
T_28: (in 0xFFFFFFAB<32>[arg0_1 * 0x2710<32>] @ 000C0104 : byte)
  Class: Eq_28
  DataType: byte
  OrigDataType: byte
T_29: (in 0xFFFFFFAD<32>[arg0_1 * 0x2710<32>] + 0xFFFFFFAB<32>[arg0_1 * 0x2710<32>] @ 000C0104 : byte)
  Class: Eq_29
  DataType: byte
  OrigDataType: byte
T_30: (in 0x73<32> @ 000C0104 : word32)
  Class: Eq_30
  DataType: (ptr32 (arr Eq_62))
  OrigDataType: (ptr32 (struct (0 (arr T_62) a0000)))
T_31: (in arg0_1 * 0x2710<32> @ 000C0104 : word32)
  Class: Eq_31
  DataType: ui32
  OrigDataType: ui32
T_32: (in 0x73<32>[arg0_1 * 0x2710<32>] @ 000C0104 : byte)
  Class: Eq_32
  DataType: byte
  OrigDataType: byte
T_33: (in CONVERT(0x73<32>[arg0_1 * 0x2710<32>], byte, word32) @ 000C0104 : word32)
  Class: Eq_33
  DataType: word32
  OrigDataType: word32
T_34: (in (word80000) ((Eq_58[]) 0xFFFFFFAD<32>)[arg0_1] + (((Eq_60[]) 0xFFFFFFAB<32>))[arg0_1].b0000 + (word32) ((Eq_62[]) 0x73<32>)[arg0_1] @ 000C0104 : word32)
  Class: Eq_34
  DataType: byte
  OrigDataType: byte
T_35: (in 0x75<32> @ 000C0104 : word32)
  Class: Eq_35
  DataType: (ptr32 (arr Eq_64))
  OrigDataType: (ptr32 (struct (0 (arr T_64) a0000)))
T_36: (in arg0_1 * 0x2710<32> @ 000C0104 : word32)
  Class: Eq_36
  DataType: ui32
  OrigDataType: ui32
T_37: (in 0x75<32>[arg0_1 * 0x2710<32>] @ 000C0104 : byte)
  Class: Eq_37
  DataType: byte
  OrigDataType: byte
T_38: (in CONVERT(0x75<32>[arg0_1 * 0x2710<32>], byte, word32) @ 000C0104 : word32)
  Class: Eq_38
  DataType: word32
  OrigDataType: word32
T_39: (in (word80000) ((Eq_58[]) 0xFFFFFFAD<32>)[arg0_1] + (((Eq_60[]) 0xFFFFFFAB<32>))[arg0_1].b0000 + (word32) ((Eq_62[]) 0x73<32>)[arg0_1] + (word32) ((Eq_64[]) 0x75<32>)[arg0_1] @ 000C0104 : word32)
  Class: Eq_21
  DataType: Eq_21
  OrigDataType: byte
T_40: (in 3<32> @ 000C010A : word32)
  Class: Eq_21
  DataType: word32
  OrigDataType: word32
T_41: (in v86_91 == 3<32> @ 000C010A : bool)
  Class: Eq_41
  DataType: bool
  OrigDataType: bool
T_42: (in 2<32> @ 000C0111 : word32)
  Class: Eq_21
  DataType: word32
  OrigDataType: word32
T_43: (in v86_91 != 2<32> @ 000C0111 : bool)
  Class: Eq_43
  DataType: bool
  OrigDataType: bool
T_44: (in 0x10<32> @ 000C011B : word32)
  Class: Eq_44
  DataType: (ptr32 (arr Eq_66))
  OrigDataType: (ptr32 (struct (0 (arr T_66) a0000)))
T_45: (in arg0_1 * 0x2710<32> @ 000C011B : word32)
  Class: Eq_45
  DataType: ui32
  OrigDataType: ui32
T_46: (in 0x10<32>[arg0_1 * 0x2710<32>] @ 000C011B : byte)
  Class: Eq_46
  DataType: byte
  OrigDataType: byte
T_47: (in CONVERT(0x10<32>[arg0_1 * 0x2710<32>], byte, word32) @ 000C011B : word32)
  Class: Eq_18
  DataType: word32
  OrigDataType: word32
T_48: (in 1<32> @ 000C0122 : word32)
  Class: Eq_18
  DataType: word32
  OrigDataType: word32
T_49: (in SLICE(loc13_105, byte, 0) @ 000C012C : byte)
  Class: Eq_49
  DataType: byte
  OrigDataType: byte
T_50: (in 0<32> @ 000C012C : word32)
  Class: Eq_50
  DataType: word32
  OrigDataType: word32
T_51: (in v26_15 + 0<32> @ 000C012C : word32)
  Class: Eq_51
  DataType: ui32
  OrigDataType: ui32
T_52: (in Mem114[v26_15 + 0<32>:byte] @ 000C012C : byte)
  Class: Eq_49
  DataType: byte
  OrigDataType: byte
T_53: (in true @ 000C0135 : bool)
  Class: Eq_53
  DataType: bool
  OrigDataType: bool
T_54: (in 1<32> @ 000C014A : word32)
  Class: Eq_7
  DataType: ui32
  OrigDataType: word32
T_55: (in 0<32> @ 000C014F : word32)
  Class: Eq_16
  DataType: word32
  OrigDataType: word32
T_56: (in loc7_27 == 0<32> @ 000C014F : bool)
  Class: Eq_56
  DataType: bool
  OrigDataType: bool
T_57: (in  @ 000C0152 : word32)
  Class: Eq_2
  DataType: word32
  OrigDataType: word32
T_58:
  Class: Eq_58
  DataType: Eq_58
  OrigDataType: (struct 2710 (0 T_25 t0000))
T_59:
  Class: Eq_59
  DataType: (arr Eq_58)
  OrigDataType: (arr T_58)
T_60:
  Class: Eq_60
  DataType: Eq_60
  OrigDataType: (struct 2710 (0 T_28 t0000))
T_61:
  Class: Eq_61
  DataType: (arr Eq_60)
  OrigDataType: (arr T_60)
T_62:
  Class: Eq_62
  DataType: Eq_62
  OrigDataType: (struct 2710 (0 T_32 t0000))
T_63:
  Class: Eq_63
  DataType: (arr Eq_62)
  OrigDataType: (arr T_62)
T_64:
  Class: Eq_64
  DataType: Eq_64
  OrigDataType: (struct 2710 (0 T_37 t0000))
T_65:
  Class: Eq_65
  DataType: (arr Eq_64)
  OrigDataType: (arr T_64)
T_66:
  Class: Eq_66
  DataType: Eq_66
  OrigDataType: (struct 2710 (0 T_46 t0000))
T_67:
  Class: Eq_67
  DataType: (arr Eq_66)
  OrigDataType: (arr T_66)
*/
typedef struct Globals {
	Eq_60 aFFFFFFAB[];	// FFFFFFAB
} Eq_1;

typedef union Eq_16 {
	bool u0;
	word32 u1;
} Eq_16;

typedef union Eq_21 {
	byte u0;
	word32 u1;
} Eq_21;

typedef struct Eq_58 {	// size: 10000 2710
	byte b0002;	// 2
} Eq_58;

typedef struct Eq_60 {	// size: 10000 2710
	byte b0000;	// 0
	byte b0002;	// 2
	byte b0065;	// 65
	byte b00C8;	// C8
	byte b00CA;	// CA
} Eq_60;

typedef struct Eq_62 {	// size: 10000 2710
	byte b00C8;	// C8
} Eq_62;

typedef struct Eq_64 {	// size: 10000 2710
	byte b00CA;	// CA
} Eq_64;

typedef struct Eq_66 {	// size: 10000 2710
	byte b0065;	// 65
} Eq_66;

