void _advance(word32 arg0, word32 arg1, real64 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..63]
// LiveOut:
// Trashed:
// Preserved:
_advance_entry:
l000E0000:
	branch !(arg0 > 0<32>) l000E0010
l000E0010:
	return
l000E000B:
	word32 loc3_19 = 0<32>
l000E0011:
	word32 v24_12 = loc3_19 + 1<32>
	branch !(v24_12 < arg0) l000E0176
l000E0020:
	real64 v81_84 = Mem24[arg1 + loc3_19 * 0x38<32>:real64] - Mem24[arg1 + v24_12 * 0x38<32>:real64]
	real64 v91_95 = Mem24[arg1 + loc3_19 * 0x38<32> + 8<u32>:real64] - Mem24[(arg1 + v24_12 * 0x38<32>) + 8<u32>:real64]
	real64 v102_107 = Mem24[arg1 + loc3_19 * 0x38<32> + 0x10<u32>:real64] - Mem24[(arg1 + v24_12 * 0x38<32>) + 0x10<u32>:real64]
	real64 v71_70 = Mem24[arg1 + loc3_19 * 0x38<32> + 0x30<u32>:real64]
	real64 v106_112 = sqrt(v81_84 * v81_84 + v91_95 * v91_95 + v102_107 * v102_107)
	word32 v49_45 = arg1 + loc3_19 * 0x38<32>
	real64 v121_129 = Mem24[arg1 + v24_12 * 0x38<32> + 0x30<u32>:real64]
	real64 v111_118 = arg2 / (v106_112 * (v106_112 * v106_112))
	Mem135[v49_45 + 0x18<32>:real64] = Mem24[v49_45 + 0x18<32>:real64] - (v81_84 * v121_129) * v111_118
	word32 v56_53 = arg1 + loc3_19 * 0x38<32>
	Mem145[v56_53 + 0x20<32>:real64] = Mem135[v56_53 + 0x20<32>:real64] - v111_118 * (v91_95 * v121_129)
	word32 v63_61 = arg1 + loc3_19 * 0x38<32>
	Mem155[v63_61 + 0x28<32>:real64] = Mem145[v63_61 + 0x28<32>:real64] - v111_118 * (v102_107 * v121_129)
	word32 v148_160 = arg1 + v24_12 * 0x38<32>
	Mem172[v148_160 + 0x18<32>:real64] = Mem155[v148_160 + 0x18<32>:real64] + v111_118 * (v81_84 * v71_70)
	word32 v163_177 = arg1 + v24_12 * 0x38<32>
	Mem189[v163_177 + 0x20<32>:real64] = Mem172[v163_177 + 0x20<32>:real64] + v111_118 * (v91_95 * v71_70)
	word32 v178_194 = arg1 + v24_12 * 0x38<32>
	Mem206[v178_194 + 0x28<32>:real64] = Mem189[v178_194 + 0x28<32>:real64] + v111_118 * (v102_107 * v71_70)
	loc3_19 = v24_12 + 1<32>
	branch v24_12 + 1<32> != arg0 l000E0020
l000E0174:
l000E0176:
	branch !(v24_12 != arg0) l000E0184
l000E0184:
	branch !(arg0 > 0<32>) l000E018E
l000E018E:
	return
l000E0189:
	word32 loc4_220 = 0<32>
l000E018F:
	word32 v204_227 = arg1 + loc4_220 * 0x38<32>
	Mem242[v204_227:real64] = Mem230[v204_227:real64] + Mem230[(arg1 + loc4_220 * 0x38<32>) + 0x18<u32>:real64] * arg2
	word32 v220_247 = arg1 + loc4_220 * 0x38<32>
	Mem262[v220_247 + 8<32>:real64] = Mem242[v220_247 + 8<32>:real64] + Mem242[(arg1 + loc4_220 * 0x38<32>) + 0x20<u32>:real64] * arg2
	word32 v238_267 = arg1 + loc4_220 * 0x38<32>
	Mem282[v238_267 + 0x10<32>:real64] = Mem262[v238_267 + 0x10<32>:real64] + Mem262[(arg1 + loc4_220 * 0x38<32>) + 0x28<u32>:real64] * arg2
	word32 v254_285 = loc4_220 + 1<32>
	loc4_220 = v254_285
	branch v254_285 != arg0 l000E018F
l000E0207:
l000E0208:
	return
_advance_exit:
l000E017D:
	loc3_19 = v24_12


real64 _energy(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
_energy_entry:
l000E020A:
	branch !(arg0 > 0<32>) l000E0223
l000E0223:
	return 0.0
l000E0213:
	word32 loc2_15 = 0<32>
	real64 loc4_10 = 0.0
l000E022D:
	real64 v29_30 = Mem0[arg1 + loc2_15 * 0x38<32> + 0x18<u32>:real64]
	real64 v37_39 = Mem0[arg1 + loc2_15 * 0x38<32> + 0x20<u32>:real64]
	real64 v46_49 = Mem0[arg1 + loc2_15 * 0x38<32> + 0x28<u32>:real64]
	real64 v51_55 = loc4_10 + (Mem0[(arg1 + loc2_15 * 0x38<32>) + 0x30<u32>:real64] * 0.5) * ((v29_30 * v29_30 + v37_39 * v37_39) + v46_49 * v46_49)
	word32 v54_59 = loc2_15 + 1<32>
	loc4_10 = v51_55
	branch !(v54_59 < arg0) l000E0316
l000E028B:
	branch v54_59 + 1<32> != arg0 l000E028B
l000E0314:
l000E0316:
	branch !(v54_59 != arg0) l000E0324
l000E0324:
l000E0327:
	return v51_55
_energy_exit:
l000E031D:
	loc2_15 = v54_59


void _offset_momentum(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
_offset_momentum_entry:
l000E0329:
	real64 loc3_60
	real64 loc4_49
	real64 loc5_11
	branch !(arg0 > 0<32>) l000E03AB
l000E03AB:
	loc3_60 = 0.0
	loc4_49 = 0.0
	loc5_11 = 0.0
l000E0332:
	real64 v26_34 = Mem0[arg1 + 0x30<u32>:real64]
	loc5_11 = Mem0[arg1 + 0x18<u32>:real64] * v26_34 + 0.0
	loc4_49 = v26_34 * Mem0[arg1 + 0x20<u32>:real64] + 0.0
	loc3_60 = v26_34 * Mem0[arg1 + 0x28<u32>:real64] + 0.0
	branch arg0 != 1<32> l000E0332
l000E03A9:
l000E03CC:
	Mem77[arg1 + 0x18<u32>:real64] = -loc5_11 / 39.47841760435743
	Mem84[arg1 + 0x20<u32>:real64] = -loc4_49 / 39.47841760435743
	Mem91[arg1 + 0x28<u32>:real64] = -loc3_60 / 39.47841760435743
l000E0403:
	return
_offset_momentum_exit:


real64 _start()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
_start_entry:
l000E0405:
	real64 v12_3 = Mem1[Mem1[0x00100000<p32>:word32] + 0x30<u32>:real64]
	real64 v19_11 = Mem1[Mem1[0x00100000<p32>:word32] + 0x68<u32>:real64]
	real64 v25_18 = Mem1[Mem1[0x00100000<p32>:word32] + 0xA0<u32>:real64]
	real64 v31_25 = Mem1[Mem1[0x00100000<p32>:word32] + 0xD8<u32>:real64]
	real64 v37_32 = Mem1[Mem1[0x00100000<p32>:word32] + 0x110<u32>:real64]
	real64 v41_37 = v12_3 * Mem1[Mem1[0x00100000<p32>:word32] + 0x20<u32>:real64] + 0.0 + v19_11 * Mem1[Mem1[0x00100000<p32>:word32] + 0x58<u32>:real64] + v25_18 * Mem1[Mem1[0x00100000<p32>:word32] + 0x90<u32>:real64] + v31_25 * Mem1[Mem1[0x00100000<p32>:word32] + 0xC8<u32>:real64] + v37_32 * Mem1[Mem1[0x00100000<p32>:word32] + 0x100<u32>:real64]
	real64 v67_64 = v12_3 * Mem1[Mem1[0x00100000<p32>:word32] + 0x28<u32>:real64] + 0.0 + v19_11 * Mem1[Mem1[0x00100000<p32>:word32] + 0x60<u32>:real64] + v25_18 * Mem1[Mem1[0x00100000<p32>:word32] + 0x98<u32>:real64] + v31_25 * Mem1[Mem1[0x00100000<p32>:word32] + 0xD0<u32>:real64] + v37_32 * Mem1[Mem1[0x00100000<p32>:word32] + 0x108<u32>:real64]
	Mem97[Mem1[0x00100000<p32>:word32] + 0x18<u32>:real64] = -(Mem1[Mem1[0x00100000<p32>:word32] + 0x18<u32>:real64] * v12_3 + 0.0 + Mem1[Mem1[0x00100000<p32>:word32] + 0x50<u32>:real64] * v19_11 + Mem1[Mem1[0x00100000<p32>:word32] + 0x88<u32>:real64] * v25_18 + Mem1[Mem1[0x00100000<p32>:word32] + 0xC0<u32>:real64] * v31_25 + Mem1[Mem1[0x00100000<p32>:word32] + 0xF8<u32>:real64] * v37_32) / 39.47841760435743
	Mem104[Mem97[0x00100000<p32>:word32] + 0x20<u32>:real64] = -v41_37 / 39.47841760435743
	Mem111[Mem104[0x00100000<p32>:word32] + 0x28<u32>:real64] = -v67_64 / 39.47841760435743
	branch false l000E05D7
l000E054C:
	branch true l000E054C
l000E05D5:
l000E05D7:
	branch false l000E0619
l000E0619:
l000E061C:
	return <invalid>
_start_exit:
l000E05DE:


real64 _run(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
_run_entry:
l000E061E:
	word32 arg0_168
	branch !(arg0 < 1<32>) l000E0637
l000E0637:
	_advance(5<32>, Mem0[0x00100000<p32>:word32], 0.01)
	branch !(arg0 == 1<32>) l000E066A
l000E066A:
l000E065A:
	arg0_168 = 0<32>
l000E0670:
l000E0627:
	arg0_168 = 0<32>
l000E0672:
	word32 v66_77 = arg0_168 + 1<32>
	branch !(v66_77 < 5<32>) l000E075B
l000E06D0:
	branch v66_77 != 0xFFFFFFFC<32> l000E06D0
l000E0759:
l000E075B:
	branch !(v66_77 != 5<32>) l000E0769
l000E0769:
l000E076C:
	return <invalid>
_run_exit:
l000E0762:
	arg0_168 = v66_77


void runPostSets()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
runPostSets_entry:
l000E076E:
	return
runPostSets_exit:


void __post_instantiate()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
__post_instantiate_entry:
l000E0770:
	Mem5[0x00100008<p32>:word32] = Mem0[0x00100000<p32>:word32] + 0x120<32>
	Mem9[0x0010000C<p32>:word32] = Mem5[0x00100008<p32>:word32] + 0x500000<32>
	runPostSets()
l000E0786:
	return
__post_instantiate_exit:


