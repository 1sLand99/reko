// fn00110287
// Return size: 0
word32 fn00110287(word32 arg0, word32 arg1, word32 arg2)
fn00110287_entry:
	// succ:  l00110287
l00110287:
	v45 = Mem0[0x00140030<p32>:word32]
	loc45 = v45
	v45 = arg1
	loc26 = v45
	v45 = arg0
	v46 = 8<32>
	v45 = v45 + v46
	loc36 = v45
	v45 = loc36
	v46 = 3<32>
	v45 = v45 + v46
	loc37 = v45
	v45 = loc37
	v47 = Mem0[v45:int8]
	v45 = CONVERT(v47, int8, word32)
	loc38 = v45
	v45 = loc38
	v46 = 0x18<32>
	v45 = v45 << v46
	v46 = 0x18<32>
	v45 = v45 >> v46
	v46 = 0<32>
	v48 = v45 < v46
	loc39 = v48
	v45 = loc39
	branch !v45 l001102E7
	// succ:  l001102B7 l001102E7
l001102B7:
	v45 = arg0
	v46 = 4<32>
	v45 = v45 + v46
	loc41 = v45
	v45 = loc41
	v45 = Mem0[v45:word32]
	loc6 = v45
	v45 = loc36
	v45 = Mem0[v45:word32]
	loc7 = v45
	v45 = loc7
	v46 = 0x7FFFFFFF<32>
	v45 = v45 & v46
	loc8 = v45
	v45 = loc8
	v46 = 0xFFFFFFFF<32>
	v45 = v45 + v46
	loc42 = v45
	v45 = loc42
	loc14 = v45
	v45 = loc6
	loc15 = v45
	goto l001102F7
	// succ:  l001102F7
l001102E7:
	v45 = loc38
	v46 = 0xFF<32>
	v45 = v45 & v46
	loc40 = v45
	v45 = 1<32>
	loc14 = v45
	v45 = loc40
	loc15 = v45
	// succ:  l001102F7
l001102F7:
	v45 = arg2
	loc9 = v45
	v45 = loc9
	v46 = loc26
	v45 = v45 - v46
	loc10 = v45
	v45 = loc10
	v46 = 2<32>
	v45 = v45 >> v46
	loc11 = v45
	v45 = loc11
	v46 = 0<32>
	v48 = v45 == v46
	loc12 = v48
	// succ:  l00110311
l00110311:
	v45 = loc12
	v48 = v45 == 0<32>
	branch !v48 l00110421
	// succ:  l00110318 l00110421
l00110318:
	v45 = loc14
	v46 = loc15
	v45 = v45 - v46
	loc13 = v45
	v45 = loc13
	v46 = loc11
	v48 = v45 <u v46
	loc16 = v48
	v45 = loc16
	branch !v45 l00110355
	// succ:  l0011032A l00110355
l0011032A:
	v45 = loc15
	v46 = loc11
	v45 = v45 + v46
	loc17 = v45
	v45 = loc17
	v46 = loc14
	v45 = v45 - v46
	loc18 = v45
	v45 = arg0
	v46 = loc14
	v49 = loc18
	v50 = loc15
	v51 = loc15
	v52 = 0<32>
	v53 = 0<32>
	fn0011CDB7(v45, v46, v49, v50, v51, v52, v53)
	v45 = loc37
	v54 = Mem0[v45:int8]
	v45 = CONVERT(v54, int8, word32)
	loc5 = v45
	v45 = loc5
	loc20 = v45
	goto l00110359
	// succ:  l00110359
l00110355:
	v45 = loc38
	loc20 = v45
	// succ:  l00110359
l00110359:
	v45 = loc20
	v46 = 0x18<32>
	v45 = v45 << v46
	v46 = 0x18<32>
	v45 = v45 >> v46
	v46 = 0<32>
	v48 = v45 < v46
	loc19 = v48
	v45 = loc19
	branch !v45 l00110377
	// succ:  l0011036B l00110377
l0011036B:
	v45 = arg0
	v45 = Mem0[v45:word32]
	loc21 = v45
	v45 = loc21
	loc23 = v45
	goto l0011037B
	// succ:  l0011037B
l00110377:
	v45 = arg0
	loc23 = v45
	// succ:  l0011037B
l0011037B:
	v45 = loc23
	v46 = loc15
	v49 = 2<32>
	v46 = v46 << v49
	v45 = v45 + v46
	loc22 = v45
	v45 = arg2
	loc24 = v45
	v45 = loc24
	v46 = loc26
	v45 = v45 - v46
	loc25 = v45
	v45 = loc25
	v46 = 2<32>
	v45 = v45 >>u v46
	loc27 = v45
	v45 = loc15
	v46 = loc27
	v45 = v45 + v46
	loc28 = v45
	v45 = loc22
	loc3 = v45
	v45 = arg1
	loc4 = v45
	// succ:  l001103A9
l001103A9:
	v45 = loc4
	v46 = arg2
	v48 = v45 == v46
	loc29 = v48
	v45 = loc29
	branch !v45 l001103B9
	// succ:  l001103B6 l001103B9
l001103B6:
	goto l001103DF
	// succ:  l001103DF
l001103B9:
	v45 = loc4
	v45 = Mem0[v45:word32]
	loc30 = v45
	v45 = loc3
	v46 = loc30
	Mem0[v45:word32] = v46
	v45 = loc3
	v46 = 4<32>
	v45 = v45 + v46
	loc31 = v45
	v45 = loc4
	v46 = 4<32>
	v45 = v45 + v46
	loc32 = v45
	v45 = loc31
	loc3 = v45
	v45 = loc32
	loc4 = v45
	goto l0011037B
	// succ:  l0011037B
l001103DF:
	v45 = loc23
	v46 = loc28
	v49 = 2<32>
	v46 = v46 << v49
	v45 = v45 + v46
	loc43 = v45
	v45 = loc43
	v46 = 0<32>
	Mem0[v45:word32] = v46
	v45 = loc15
	v46 = loc11
	v45 = v45 + v46
	loc33 = v45
	v45 = loc19
	branch !v45 l0011040E
	// succ:  l001103FD l0011040E
l001103FD:
	v45 = arg0
	v46 = 4<32>
	v45 = v45 + v46
	loc34 = v45
	v45 = loc34
	v46 = loc33
	Mem0[v45:word32] = v46
	goto l00110421
	// succ:  l00110421
l0011040E:
	v45 = loc33
	v46 = 0xFF<32>
	v45 = v45 & v46
	loc35 = v45
	v45 = loc37
	v46 = loc35
	v55 = SLICE(v46, byte, 0)
	Mem0[v45:byte] = v55
	goto l00110421
	// succ:  l00110421
l0011041F:
	// succ:  l00110421
l00110421:
	// succ:  l00110421
l00110421:
	v45 = arg0
	return v45
	// succ:  fn00110287_exit
l00110425:
	return v45
	// succ:  fn00110287_exit
fn00110287_exit:


// fn00110427
// Return size: 0
void fn00110427(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
fn00110427_entry:
	// succ:  l00110427
l00110427:
	v183 = Mem0[0x00140030<p32>:word32]
	loc190 = v183
	v183 = Mem0[0x00140030<p32>:word32]
	v184 = 0x70<32>
	v183 = v183 + v184
	Mem0[0x00140030<p32>:word32] = v183
	v183 = Mem0[0x00140030<p32>:word32]
	v184 = Mem0[0x00140034<p32>:word32]
	v185 = v183 >= v184
	branch !v185 l00110443
	// succ:  l0011043D l00110443
l0011043D:
	v183 = 0x70<32>
	abortStackOverflow(v183)
	// succ:  l00110443
l00110443:
	v183 = loc190
	v184 = 0x64<32>
	v183 = v183 + v184
	loc18 = v183
	v183 = loc190
	v184 = 0x58<32>
	v183 = v183 + v184
	loc29 = v183
	v183 = loc190
	v184 = 0x4C<32>
	v183 = v183 + v184
	loc40 = v183
	v183 = loc190
	v184 = 0x40<32>
	v183 = v183 + v184
	loc51 = v183
	v183 = loc190
	v184 = 0x34<32>
	v183 = v183 + v184
	loc62 = v183
	v183 = loc190
	v184 = 0x30<32>
	v183 = v183 + v184
	loc73 = v183
	v183 = loc190
	v184 = 0x24<32>
	v183 = v183 + v184
	loc84 = v183
	v183 = loc190
	v184 = 0x18<32>
	v183 = v183 + v184
	loc95 = v183
	v183 = loc190
	v184 = 0xC<32>
	v183 = v183 + v184
	loc98 = v183
	v183 = loc190
	loc99 = v183
	v183 = arg0
	v183 = v183
	// succ:  l00110498
l00110498:
	v183 = arg1
	v184 = 0x5338<32>
	v183 = fn000EA9F7(v183, v184)
	loc100 = v183
	v183 = loc100
	v183 = Mem0[v183:word32]
	loc101 = v183
	v183 = loc101
	v184 = 0x2C<32>
	v183 = v183 + v184
	loc102 = v183
	v183 = loc102
	v183 = Mem0[v183:word32]
	loc103 = v183
	v183 = loc18
	v184 = loc100
	v186 = loc103
	v187 = 0x1FF<32>
	v186 = v186 & v187
	v187 = 0x700<32>
	v186 = v186 + v187
fn00110427_exit:


// fn00110E8A
// Return size: 0
void fn00110E8A(word32 arg0, word32 arg1, word32 arg2)
fn00110E8A_entry:
	// succ:  l00110E8A
l00110E8A:
	v37 = Mem0[0x00140030<p32>:word32]
	loc37 = v37
	v37 = arg0
	v38 = 4<32>
	v37 = v37 + v38
	loc27 = v37
	v37 = loc27
	v37 = Mem0[v37:word32]
	loc29 = v37
	v37 = loc29
	v38 = 0x1A4<32>
	v39 = v37 != v38
	loc30 = v39
	v37 = arg2
	v37 = Mem0[v37:word32]
	loc31 = v37
	v37 = arg0
	v37 = Mem0[v37:word32]
	loc32 = v37
	v37 = loc31
	v38 = loc32
	v37 = v37 - v38
	loc33 = v37
	v37 = loc33
	v38 = 0x7FFFFFFF<32>
	v39 = v37 <u v38
	loc34 = v39
	v37 = loc33
	v38 = 1<32>
	v37 = v37 << v38
	loc7 = v37
	v37 = loc34
	branch !v37 l00110ED4
	// succ:  l00110ED1 l00110ED4
l00110ED1:
	v37 = loc7
	goto l00110ED6
	// succ:  l00110ED6
l00110ED4:
	v37 = 0xFFFFFFFF<32>
	// succ:  l00110ED6
l00110ED6:
	loc4 = v37
	v37 = loc4
	v38 = 0<32>
	v39 = v37 == v38
	loc8 = v39
	v37 = loc8
	branch !v37 l00110EE7
	// succ:  l00110EE4 l00110EE7
l00110EE4:
	v37 = 4<32>
	goto l00110EE9
	// succ:  l00110EE9
l00110EE7:
	v37 = loc4
	// succ:  l00110EE9
l00110EE9:
	loc3 = v37
	v37 = arg1
	v37 = Mem0[v37:word32]
	loc9 = v37
	v37 = loc9
	v38 = loc32
	v37 = v37 - v38
	loc10 = v37
	v37 = loc10
	v38 = 2<32>
	v37 = v37 >> v38
	loc11 = v37
	v37 = loc32
	loc35 = v37
	v37 = loc30
	branch !v37 l00110F0C
	// succ:  l00110F09 l00110F0C
l00110F09:
	v37 = loc35
	goto l00110F0E
	// succ:  l00110F0E
l00110F0C:
	v37 = 0<32>
	// succ:  l00110F0E
l00110F0E:
	loc12 = v37
	v37 = loc12
	v38 = loc3
	v37 = fn000E3E00(v37, v38)
	loc13 = v37
	v37 = loc13
	v38 = 0<32>
	v39 = v37 == v38
	loc14 = v39
	v37 = loc14
	branch !v37 l00110F29
	// succ:  l00110F25 l00110F29
l00110F25:
	fn0011B725()
	// succ:  l00110F29
l00110F29:
	v37 = loc30
	branch !v37 l00110F3F
	// succ:  l00110F2F l00110F3F
l00110F2F:
	v37 = loc13
	loc15 = v37
	v37 = arg0
	v38 = loc15
	Mem0[v37:word32] = v38
	v37 = loc13
	loc25 = v37
	goto l00110FA3
	// succ:  l00110FA3
l00110F3F:
	v37 = arg0
	v37 = Mem0[v37:word32]
	loc5 = v37
	v37 = loc13
	loc16 = v37
	v37 = arg0
	v38 = loc16
	Mem0[v37:word32] = v38
	v37 = loc5
	v38 = 0<32>
	v39 = v37 == v38
	loc17 = v39
	v37 = loc17
	branch !v37 l00110F61
	// succ:  l00110F5C l00110F61
l00110F5C:
	v37 = loc13
	loc25 = v37
	goto l00110FA2
	// succ:  l00110FA2
l00110F61:
	v37 = loc27
	v37 = Mem0[v37:word32]
	loc18 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = loc18
	v38 = loc5
	invoke_vi(v37, v38)
	v37 = Mem0[0x00140048<p32>:word32]
	loc19 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = loc19
	v38 = 1<32>
	v37 = v37 & v38
	loc20 = v37
	v37 = loc20
	branch !v37 l00110F94
	// succ:  l00110F85 l00110F94
l00110F85:
	v37 = 0<32>
	v37 = ___cxa_find_matching_catch_3(v37)
	loc21 = v37
	v37 = Mem0[0x00140094<p32>:word32]
	loc22 = v37
	v37 = loc21
	fn000D0E65(v37)
	goto l00110FA1
	// succ:  l00110FA1
l00110F94:
	v37 = arg0
	v37 = Mem0[v37:word32]
	loc6 = v37
	v37 = loc6
	loc25 = v37
	goto l00110FA4
	// succ:  l00110FA4
l00110FA1:
	// succ:  l00110FA2
l00110FA2:
	// succ:  l00110FA3
l00110FA3:
	// succ:  l00110FA4
l00110FA4:
	v37 = loc27
	v38 = 0x1AD<32>
	Mem0[v37:word32] = v38
	v37 = loc3
	v38 = 2<32>
	v37 = v37 >>u v38
	loc23 = v37
	v37 = loc25
	v38 = loc11
	v40 = 2<32>
	v38 = v38 << v40
	v37 = v37 + v38
	loc24 = v37
	v37 = arg1
	v38 = loc24
	Mem0[v37:word32] = v38
	v37 = arg0
	v37 = Mem0[v37:word32]
	loc26 = v37
	v37 = loc26
	v38 = loc23
	v40 = 2<32>
	v38 = v38 << v40
	v37 = v37 + v38
	loc28 = v37
	v37 = arg2
	v38 = loc28
	Mem0[v37:word32] = v38
	return
	// succ:  fn00110E8A_exit
l00110FDE:
	return
	// succ:  fn00110E8A_exit
fn00110E8A_exit:


// fn00110FE0
// Return size: 0
void fn00110FE0(word32 arg0)
fn00110FE0_entry:
	// succ:  l00110FE0
l00110FE0:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn00110FE0_exit
l00110FE7:
	return
	// succ:  fn00110FE0_exit
fn00110FE0_exit:


// fn00110FE9
// Return size: 0
void fn00110FE9(word32 arg0)
fn00110FE9_entry:
	// succ:  l00110FE9
l00110FE9:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn00110FE9_exit
l00110FF5:
	return
	// succ:  fn00110FE9_exit
fn00110FE9_exit:


// fn00110FF7
// Return size: 0
word32 fn00110FF7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, real64 arg5)
fn00110FF7_entry:
	// succ:  l00110FF7
l00110FF7:
	v180 = Mem0[0x00140030<p32>:word32]
	loc183 = v180
	v180 = Mem0[0x00140030<p32>:word32]
	v181 = 0x190<32>
	v180 = v180 + v181
	Mem0[0x00140030<p32>:word32] = v180
	v180 = Mem0[0x00140030<p32>:word32]
	v181 = Mem0[0x00140034<p32>:word32]
	v182 = v180 >= v181
	branch !v182 l00111013
	// succ:  l0011100D l00111013
l0011100D:
	v180 = 0x190<32>
	abortStackOverflow(v180)
	// succ:  l00111013
l00111013:
	v180 = loc183
	v181 = 0x4C<32>
	v180 = v180 + v181
	loc20 = v180
	v180 = loc183
	v181 = 8<32>
	v180 = v180 + v181
	loc181 = v180
	v180 = loc183
	loc180 = v180
	v180 = loc183
	v181 = 0x120<32>
	v180 = v180 + v181
	loc133 = v180
	v180 = loc183
	v181 = 0x48<32>
	v180 = v180 + v181
	loc144 = v180
	v180 = loc183
	v181 = 0xBC<32>
	v180 = v180 + v181
	loc155 = v180
	v180 = loc183
	v181 = 0x44<32>
	v180 = v180 + v181
	loc166 = v180
	v180 = loc183
	v181 = 0xB8<32>
	v180 = v180 + v181
	loc33 = v180
	v180 = loc183
	v181 = 0xB5<32>
	v180 = v180 + v181
	loc44 = v180
	v180 = loc183
	v181 = 0xB4<32>
	v180 = v180 + v181
	loc55 = v180
	v180 = loc183
	v181 = 0x38<32>
	v180 = v180 + v181
	loc66 = v180
	v180 = loc183
	v181 = 0x2C<32>
	v180 = v180 + v181
	loc77 = v180
	v180 = loc183
	v181 = 0x20<32>
	v180 = v180 + v181
	loc88 = v180
	v180 = loc183
	v181 = 0x1C<32>
	v180 = v180 + v181
	loc89 = v180
	v180 = loc183
	v181 = 0x50<32>
	v180 = v180 + v181
	loc90 = v180
	v180 = loc183
	v181 = 0x18<32>
	v180 = v180 + v181
	loc91 = v180
	v180 = loc183
	v181 = 0x14<32>
	v180 = v180 + v181
	loc92 = v180
	v180 = loc183
	v181 = 0x10<32>
	v180 = v180 + v181
	loc93 = v180
	v180 = loc144
	v181 = loc133
	Mem0[v180:word32] = v181
	v180 = loc180
	v183 = arg5
	Mem0[v180:real64] = v183
	v180 = loc133
	v181 = 0x64<32>
	v184 = 0x3DC0<32>
	v185 = loc180
	v180 = fn000DB3DF(v180, v181, v184, v185)
	loc94 = v180
	v180 = loc94
	v181 = 0x63<32>
	v182 = v180 >u v181
	loc95 = v182
	// succ:  l001110DA
l001110DA:
	v180 = loc95
	branch !v180 l00111211
	// succ:  l001110E0 l00111211
l001110E0:
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = 0x17B<32>
	v180 = invoke_i(v180)
	loc96 = v180
	v180 = Mem0[0x00140048<p32>:word32]
	loc97 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc97
	v181 = 1<32>
	v180 = v180 & v181
	loc98 = v180
	v180 = loc98
	branch !v180 l0011110C
	// succ:  l001110FE l0011110C
l001110FE:
	v180 = 0<32>
	loc27 = v180
	v180 = 0<32>
	loc30 = v180
	v180 = 8<32>
	loc182 = v180
	goto l0011120F
	// succ:  l0011120F
l0011110C:
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc181
	v183 = arg5
	Mem0[v180:real64] = v183
	v180 = 0x18D<32>
	v181 = loc144
	v184 = loc96
	v185 = 0x3DC0<32>
	v186 = loc181
	v180 = invoke_iiiii(v180, v181, v184, v185, v186)
	loc99 = v180
	v180 = Mem0[0x00140048<p32>:word32]
	loc100 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc100
	v181 = 1<32>
	v180 = v180 & v181
	loc101 = v180
	v180 = loc101
	branch !v180 l0011114C
	// succ:  l0011113E l0011114C
l0011113E:
	v180 = 0<32>
	loc27 = v180
	v180 = 0<32>
	loc30 = v180
	v180 = 8<32>
	loc182 = v180
	goto l0011120E
	// succ:  l0011120E
l0011114C:
	v180 = loc144
	v180 = Mem0[v180:word32]
	loc102 = v180
	v180 = loc102
	v181 = 0<32>
	v182 = v180 == v181
	loc103 = v182
	v180 = loc103
	branch !v180 l00111198
	// succ:  l0011115F l00111198
l0011115F:
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = 0x18A<32>
	invoke_v(v180)
	v180 = Mem0[0x00140048<p32>:word32]
	loc105 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc105
	v181 = 1<32>
	v180 = v180 & v181
	loc106 = v180
	v180 = loc106
	branch !v180 l0011118B
	// succ:  l0011117B l0011118B
l0011117B:
	v180 = 0<32>
	loc27 = v180
	v180 = 0<32>
	loc30 = v180
	v180 = 8<32>
	loc182 = v180
	goto l00111228
	// succ:  l00111228
l0011118B:
	v180 = loc144
	v180 = Mem0[v180:word32]
	loc22 = v180
	v180 = loc22
	loc87 = v180
	goto l001111A0
	// succ:  l001111A0
l00111198:
	v180 = loc102
	loc104 = v180
	v180 = loc104
	loc87 = v180
	// succ:  l001111A0
l001111A0:
	v180 = loc99
	v180 = _malloc(v180)
	loc109 = v180
	v180 = loc109
	loc110 = v180
	v180 = loc109
	v181 = 0<32>
	v182 = v180 == v181
	loc111 = v182
	v180 = loc111
	branch !v180 l001111F8
	// succ:  l001111B7 l001111F8
l001111B7:
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = 0x18A<32>
	invoke_v(v180)
	v180 = Mem0[0x00140048<p32>:word32]
	loc112 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc112
	v181 = 1<32>
	v180 = v180 & v181
	loc113 = v180
	v180 = loc113
	branch !v180 l001111E1
	// succ:  l001111D3 l001111E1
l001111D3:
	v180 = loc110
	loc27 = v180
	v180 = loc87
	loc30 = v180
	v180 = 8<32>
	loc182 = v180
	goto l001111F6
	// succ:  l001111F6
l001111E1:
	v180 = 0<32>
	loc6 = v180
	v180 = loc99
	loc11 = v180
	v180 = loc110
	loc28 = v180
	v180 = loc87
	loc31 = v180
	v180 = 0xB<32>
	loc182 = v180
	// succ:  l001111F6
l001111F6:
	goto l0011120D
	// succ:  l0011120D
l001111F8:
	v180 = loc109
	loc6 = v180
	v180 = loc99
	loc11 = v180
	v180 = loc110
	loc28 = v180
	v180 = loc87
	loc31 = v180
	v180 = 0xB<32>
	loc182 = v180
	// succ:  l0011120D
l0011120D:
	// succ:  l0011120E
l0011120E:
	// succ:  l0011120F
l0011120F:
	goto l00111227
	// succ:  l00111227
l00111211:
	v180 = loc155
	loc6 = v180
	v180 = loc94
	loc11 = v180
	v180 = 0<32>
	loc28 = v180
	v180 = 0<32>
	loc31 = v180
	v180 = 0xB<32>
	loc182 = v180
	// succ:  l00111227
l00111227:
	// succ:  l00111228
l00111228:
	v180 = loc182
	v181 = 0xB<32>
	v182 = v180 == v181
	branch !v182 l00111826
	// succ:  l00111231 l00111826
l00111231:
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = 0x167<32>
	v181 = arg3
	v180 = invoke_ii(v180, v181)
	loc114 = v180
	v180 = Mem0[0x00140048<p32>:word32]
	loc115 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc115
	v181 = 1<32>
	v180 = v180 & v181
	loc116 = v180
	v180 = loc116
	branch !v180 l0011125F
	// succ:  l00111251 l0011125F
l00111251:
	v180 = loc28
	loc27 = v180
	v180 = loc31
	loc30 = v180
	v180 = 8<32>
	loc182 = v180
	goto l00111824
	// succ:  l00111824
l0011125F:
	v180 = loc166
	v181 = loc114
	Mem0[v180:word32] = v181
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = 0x164<32>
	v181 = loc166
	v184 = 0x4C70<32>
	v180 = invoke_iii(v180, v181, v184)
	loc117 = v180
	v180 = Mem0[0x00140048<p32>:word32]
	loc118 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc118
	v181 = 1<32>
	v180 = v180 & v181
	loc119 = v180
	// succ:  l00111288
l00111288:
	v180 = loc119
	branch !v180 l001112A3
	// succ:  l0011128E l001112A3
l0011128E:
	v180 = ___cxa_find_matching_catch_2()
	loc46 = v180
	v180 = Mem0[0x00140094<p32>:word32]
	loc47 = v180
	v180 = loc46
	loc16 = v180
	v180 = loc47
	loc17 = v180
	v180 = loc114
	loc82 = v180
	goto l0011180C
	// succ:  l0011180C
l001112A3:
	v180 = loc144
	v180 = Mem0[v180:word32]
	loc120 = v180
	v180 = loc120
	v181 = loc11
	v180 = v180 + v181
	loc121 = v180
	v180 = loc117
	v180 = Mem0[v180:word32]
	loc122 = v180
	v180 = loc122
	v181 = 0x20<32>
	v180 = v180 + v181
	loc123 = v180
	v180 = loc123
	v180 = Mem0[v180:word32]
	loc124 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc124
	v181 = loc117
	v184 = loc120
	v185 = loc121
	v186 = loc6
	v180 = invoke_iiiii(v180, v181, v184, v185, v186)
	v180 = Mem0[0x00140048<p32>:word32]
	loc125 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc125
	v181 = 1<32>
	v180 = v180 & v181
	loc126 = v180
	v180 = loc126
	branch !v180 l00111302
	// succ:  l001112EB l00111302
l001112EB:
	v180 = ___cxa_find_matching_catch_2()
	loc48 = v180
	v180 = Mem0[0x00140094<p32>:word32]
	loc49 = v180
	v180 = loc48
	loc16 = v180
	v180 = loc49
	loc17 = v180
	v180 = loc114
	loc82 = v180
	goto l0011180D
	// succ:  l0011180D
l00111302:
	v180 = loc11
	v181 = 0<32>
	v182 = v180 == v181
	loc127 = v182
	v180 = loc127
	branch !v180 l00111313
	// succ:  l0011130D l00111313
l0011130D:
	v180 = 0<32>
	loc138 = v180
	goto l0011133A
	// succ:  l0011133A
l00111313:
	v180 = loc144
	v180 = Mem0[v180:word32]
	loc128 = v180
	v180 = loc128
	v187 = Mem0[v180:int8]
	v180 = CONVERT(v187, int8, word32)
	loc129 = v180
	v180 = loc129
	v181 = 0x18<32>
	v180 = v180 << v181
	v181 = 0x18<32>
	v180 = v180 >> v181
	v181 = 0x2D<32>
	v182 = v180 == v181
	loc130 = v182
	v180 = loc130
	loc138 = v180
	// succ:  l0011133A
l0011133A:
	v180 = loc66
	v188 = 0<64>
	Mem0[v180:word64] = v188
	v180 = loc66
	v181 = 8<32>
	v180 = v180 + v181
	v181 = 0<32>
	Mem0[v180:word32] = v181
	v180 = 0<32>
	loc7 = v180
	// succ:  l00111352
l00111352:
	v180 = loc7
	v181 = 3<32>
	v182 = v180 == v181
	loc177 = v182
	v180 = loc177
	branch !v180 l00111364
	// succ:  l00111361 l00111364
l00111361:
	goto l00111386
	// succ:  l00111386
l00111364:
	v180 = loc66
	v181 = loc7
	v184 = 2<32>
	v181 = v181 << v184
	v180 = v180 + v181
	loc131 = v180
	v180 = loc131
	v181 = 0<32>
	Mem0[v180:word32] = v181
	v180 = loc7
	v181 = 1<32>
	v180 = v180 + v181
	loc132 = v180
	v180 = loc132
	loc7 = v180
	goto l0011133A
	// succ:  l0011133A
l00111386:
	v180 = loc77
	v188 = 0<64>
	Mem0[v180:word64] = v188
	v180 = loc77
	v181 = 8<32>
	v180 = v180 + v181
	v181 = 0<32>
	Mem0[v180:word32] = v181
	v180 = 0<32>
	loc8 = v180
	// succ:  l0011139F
l0011139F:
	v180 = loc8
	v181 = 3<32>
	v182 = v180 == v181
	loc178 = v182
	v180 = loc178
	branch !v180 l001113B1
	// succ:  l001113AE l001113B1
l001113AE:
	goto l001113D3
	// succ:  l001113D3
l001113B1:
	v180 = loc77
	v181 = loc8
	v184 = 2<32>
	v181 = v181 << v184
	v180 = v180 + v181
	loc134 = v180
	v180 = loc134
	v181 = 0<32>
	Mem0[v180:word32] = v181
	v180 = loc8
	v181 = 1<32>
	v180 = v180 + v181
	loc135 = v180
	v180 = loc135
	loc8 = v180
	goto l00111386
	// succ:  l00111386
l001113D3:
	v180 = loc88
	v188 = 0<64>
	Mem0[v180:word64] = v188
	v180 = loc88
	v181 = 8<32>
	v180 = v180 + v181
	v181 = 0<32>
	Mem0[v180:word32] = v181
	v180 = 0<32>
	loc9 = v180
	// succ:  l001113EC
l001113EC:
	v180 = loc9
	v181 = 3<32>
	v182 = v180 == v181
	loc179 = v182
	v180 = loc179
	branch !v180 l001113FE
	// succ:  l001113FB l001113FE
l001113FB:
	goto l00111420
	// succ:  l00111420
l001113FE:
	v180 = loc88
	v181 = loc9
	v184 = 2<32>
	v181 = v181 << v184
	v180 = v180 + v181
	loc136 = v180
	v180 = loc136
	v181 = 0<32>
	Mem0[v180:word32] = v181
	v180 = loc9
	v181 = 1<32>
	v180 = v180 + v181
	loc137 = v180
	v180 = loc137
	loc9 = v180
	goto l001113D3
	// succ:  l001113D3
l00111420:
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = 0x1B4<32>
	v181 = arg2
	v184 = loc138
	v185 = loc166
	v186 = loc33
	v189 = loc44
	v190 = loc55
	v191 = loc66
	v192 = loc77
	v193 = loc88
	v194 = loc89
	invoke_viiiiiiiiii(v180, v181, v184, v185, v186, v189, v190, v191, v192, v193, v194)
	v180 = Mem0[0x00140048<p32>:word32]
	loc139 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc139
	v181 = 1<32>
	v180 = v180 & v181
	loc140 = v180
	v180 = loc140
	branch !v180 l00111469
	// succ:  l00111458 l00111469
l00111458:
	v180 = ___cxa_find_matching_catch_2()
	loc50 = v180
	v180 = Mem0[0x00140094<p32>:word32]
	loc51 = v180
	v180 = loc50
	loc14 = v180
	v180 = loc51
	loc15 = v180
	goto l001117E8
	// succ:  l001117E8
l00111469:
	v180 = loc89
	v180 = Mem0[v180:word32]
	loc141 = v180
	v180 = loc11
	v181 = loc141
	v182 = v180 > v181
	loc142 = v182
	v180 = loc142
	branch !v180 l0011154A
	// succ:  l0011147F l0011154A
l0011147F:
	v180 = loc11
	v181 = loc141
	v180 = v180 - v181
	loc143 = v180
	v180 = loc143
	v181 = 1<32>
	v180 = v180 << v181
	loc145 = v180
	v180 = loc88
	v181 = 0xB<32>
	v180 = v180 + v181
	loc146 = v180
	v180 = loc146
	v195 = Mem0[v180:int8]
	v180 = CONVERT(v195, int8, word32)
	loc147 = v180
	v180 = loc147
	v181 = 0x18<32>
	v180 = v180 << v181
	v181 = 0x18<32>
	v180 = v180 >> v181
	v181 = 0<32>
	v182 = v180 < v181
	loc148 = v182
	v180 = loc88
	v181 = 4<32>
	v180 = v180 + v181
	loc149 = v180
	v180 = loc149
	v180 = Mem0[v180:word32]
	loc150 = v180
	v180 = loc147
	v181 = 0xFF<32>
	v180 = v180 & v181
	loc151 = v180
	v180 = loc148
	branch !v180 l001114D5
	// succ:  l001114D1 l001114D5
l001114D1:
	v180 = loc150
	goto l001114D8
	// succ:  l001114D8
l001114D5:
	v180 = loc151
	// succ:  l001114D8
l001114D8:
	loc152 = v180
	v180 = loc77
	v181 = 0xB<32>
	v180 = v180 + v181
	loc153 = v180
	v180 = loc153
	v196 = Mem0[v180:int8]
	v180 = CONVERT(v196, int8, word32)
	loc154 = v180
	v180 = loc154
	v181 = 0x18<32>
	v180 = v180 << v181
	v181 = 0x18<32>
	v180 = v180 >> v181
	v181 = 0<32>
	v182 = v180 < v181
	loc156 = v182
	v180 = loc77
	v181 = 4<32>
	v180 = v180 + v181
	loc157 = v180
	v180 = loc157
	v180 = Mem0[v180:word32]
	loc158 = v180
	v180 = loc154
	v181 = 0xFF<32>
	v180 = v180 & v181
	loc159 = v180
	v180 = loc156
	branch !v180 l00111520
	// succ:  l0011151C l00111520
l0011151C:
	v180 = loc158
	goto l00111523
	// succ:  l00111523
l00111520:
	v180 = loc159
	// succ:  l00111523
l00111523:
	loc160 = v180
	v180 = loc145
	v181 = 1<32>
	v180 = v180 | v181
	loc161 = v180
	v180 = loc152
	v181 = loc161
	v180 = v180 + v181
	loc162 = v180
	v180 = loc162
	v181 = loc160
	v180 = v180 + v181
	loc163 = v180
	v180 = loc163
	loc21 = v180
	goto l001115F0
	// succ:  l001115F0
l0011154A:
	v180 = loc88
	v181 = 0xB<32>
	v180 = v180 + v181
	loc164 = v180
	v180 = loc164
	v197 = Mem0[v180:int8]
	v180 = CONVERT(v197, int8, word32)
	loc165 = v180
	v180 = loc165
	v181 = 0x18<32>
	v180 = v180 << v181
	v181 = 0x18<32>
	v180 = v180 >> v181
	v181 = 0<32>
	v182 = v180 < v181
	loc167 = v182
	v180 = loc88
	v181 = 4<32>
	v180 = v180 + v181
	loc168 = v180
	v180 = loc168
	v180 = Mem0[v180:word32]
	loc169 = v180
	v180 = loc165
	v181 = 0xFF<32>
	v180 = v180 & v181
	loc170 = v180
	v180 = loc167
	branch !v180 l0011158E
	// succ:  l0011158A l0011158E
l0011158A:
	v180 = loc169
	goto l00111591
	// succ:  l00111591
l0011158E:
	v180 = loc170
	// succ:  l00111591
l00111591:
	loc171 = v180
	v180 = loc77
	v181 = 0xB<32>
	v180 = v180 + v181
	loc172 = v180
	v180 = loc172
	v198 = Mem0[v180:int8]
	v180 = CONVERT(v198, int8, word32)
	loc173 = v180
	v180 = loc173
	v181 = 0x18<32>
	v180 = v180 << v181
	v181 = 0x18<32>
	v180 = v180 >> v181
	v181 = 0<32>
	v182 = v180 < v181
	loc174 = v182
	v180 = loc77
	v181 = 4<32>
	v180 = v180 + v181
	loc175 = v180
	v180 = loc175
	v180 = Mem0[v180:word32]
	loc176 = v180
	v180 = loc173
	v181 = 0xFF<32>
	v180 = v180 & v181
	loc34 = v180
	v180 = loc174
	branch !v180 l001115D8
	// succ:  l001115D4 l001115D8
l001115D4:
	v180 = loc176
	goto l001115DA
	// succ:  l001115DA
l001115D8:
	v180 = loc34
	// succ:  l001115DA
l001115DA:
	loc35 = v180
	v180 = loc171
	v181 = 2<32>
	v180 = v180 + v181
	loc36 = v180
	v180 = loc36
	v181 = loc35
	v180 = v180 + v181
	loc37 = v180
	v180 = loc37
	loc21 = v180
	// succ:  l001115F0
l001115F0:
	v180 = loc21
	v181 = loc141
	v180 = v180 + v181
	loc38 = v180
	v180 = loc38
	v181 = 0x64<32>
	v182 = v180 >u v181
	loc39 = v182
	// succ:  l00111601
l00111601:
	v180 = loc39
	branch !v180 l00111680
	// succ:  l00111607 l00111680
l00111607:
	v180 = loc38
	v180 = _malloc(v180)
	loc40 = v180
	v180 = loc40
	loc41 = v180
	v180 = loc40
	v181 = 0<32>
	v182 = v180 == v181
	loc42 = v182
	v180 = loc42
	branch !v180 l0011166C
	// succ:  l0011161D l0011166C
l0011161D:
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = 0x18A<32>
	invoke_v(v180)
	v180 = Mem0[0x00140048<p32>:word32]
	loc43 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc43
	v181 = 1<32>
	v180 = v180 & v181
	loc45 = v180
	v180 = loc45
	branch !v180 l00111650
	// succ:  l00111639 l00111650
l00111639:
	v180 = ___cxa_find_matching_catch_2()
	loc52 = v180
	v180 = Mem0[0x00140094<p32>:word32]
	loc53 = v180
	v180 = loc52
	loc12 = v180
	v180 = loc53
	loc13 = v180
	v180 = loc41
	loc26 = v180
	goto l00111693
	// succ:  l00111693
l00111650:
	v180 = loc89
	v180 = Mem0[v180:word32]
	loc23 = v180
	v180 = 0<32>
	loc10 = v180
	v180 = loc41
	loc25 = v180
	v180 = loc23
	loc60 = v180
	v180 = 0x25<32>
	loc182 = v180
	goto l00111693
	// succ:  l00111693
l0011166A:
	goto l0011167E
	// succ:  l0011167E
l0011166C:
	v180 = loc40
	loc10 = v180
	v180 = loc41
	loc25 = v180
	v180 = loc141
	loc60 = v180
	v180 = 0x25<32>
	loc182 = v180
	// succ:  l0011167E
l0011167E:
	goto l00111692
	// succ:  l00111692
l00111680:
	v180 = loc90
	loc10 = v180
	v180 = 0<32>
	loc25 = v180
	v180 = loc141
	loc60 = v180
	v180 = 0x25<32>
	loc182 = v180
	// succ:  l00111692
l00111692:
	// succ:  l00111693
l00111693:
	v180 = loc182
	v181 = 0x25<32>
	v182 = v180 == v181
	branch !v182 l001117CA
	// succ:  l0011169C l001117CA
l0011169C:
	v180 = arg3
	v181 = 4<32>
	v180 = v180 + v181
	loc54 = v180
	v180 = loc54
	v180 = Mem0[v180:word32]
	loc56 = v180
	v180 = loc6
	v181 = loc11
	v180 = v180 + v181
	loc57 = v180
	v180 = loc44
	v199 = Mem0[v180:int8]
	v180 = CONVERT(v199, int8, word32)
	loc58 = v180
	v180 = loc55
	v200 = Mem0[v180:int8]
	v180 = CONVERT(v200, int8, word32)
	loc59 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = 0x1B5<32>
	v181 = loc10
	v184 = loc91
	v185 = loc92
	v186 = loc56
	v189 = loc6
	v190 = loc57
	v191 = loc117
	v192 = loc138
	v193 = loc33
	v194 = loc58
	v201 = loc59
	v202 = loc66
	v203 = loc77
	v204 = loc88
	v205 = loc60
	invoke_viiiiiiiiiiiiiii(v180, v181, v184, v185, v186, v189, v190, v191, v192, v193, v194, v201, v202, v203, v204, v205)
	v180 = Mem0[0x00140048<p32>:word32]
	loc61 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc61
	v181 = 1<32>
	v180 = v180 & v181
	loc62 = v180
	v180 = loc62
	v182 = v180 == 0<32>
	branch !v182 l001117B5
	// succ:  l001116FB l001117B5
l001116FB:
	v180 = arg1
	v180 = Mem0[v180:word32]
	loc63 = v180
	v180 = loc93
	v181 = loc63
	Mem0[v180:word32] = v181
	v180 = loc91
	v180 = Mem0[v180:word32]
	loc64 = v180
	v180 = loc92
	v180 = Mem0[v180:word32]
	loc65 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc20
	v181 = loc93
	v181 = Mem0[v181:word32]
	Mem0[v180:word32] = v181
	v180 = 0x168<32>
	v181 = loc20
	v184 = loc10
	v185 = loc64
	v186 = loc65
	v189 = arg3
	v190 = arg4
	v180 = invoke_iiiiiii(v180, v181, v184, v185, v186, v189, v190)
	loc67 = v180
	v180 = Mem0[0x00140048<p32>:word32]
	loc68 = v180
	v180 = 0<32>
	Mem0[0x00140048<p32>:word32] = v180
	v180 = loc68
	v181 = 1<32>
	v180 = v180 & v181
	loc69 = v180
	v180 = loc69
	v182 = v180 == 0<32>
	branch !v182 l001117B4
	// succ:  l0011174C l001117B4
l0011174C:
	v180 = loc25
	v181 = 0<32>
	v182 = v180 == v181
	loc70 = v182
	v180 = loc70
	v182 = v180 == 0<32>
	branch !v182 l00111762
	// succ:  l00111758 l00111762
l00111758:
	v180 = loc25
	loc71 = v180
	v180 = loc71
	_free(v180)
	// succ:  l00111762
l00111762:
	v180 = loc88
	fn0011BAF7(v180)
	v180 = loc77
	fn0011BAF7(v180)
	v180 = loc66
	fn0011BAF7(v180)
	v180 = loc166
	v180 = Mem0[v180:word32]
	loc72 = v180
	v180 = loc72
	v180 = fn0011B43F(v180)
	v180 = loc28
	v181 = 0<32>
	v182 = v180 == v181
	loc73 = v182
	v180 = loc73
	v182 = v180 == 0<32>
	branch !v182 l00111795
	// succ:  l0011178B l00111795
l0011178B:
	v180 = loc28
	loc74 = v180
	v180 = loc74
	_free(v180)
	// succ:  l00111795
l00111795:
	v180 = loc31
	v181 = 0<32>
	v182 = v180 == v181
	loc75 = v182
	v180 = loc75
	v182 = v180 == 0<32>
	branch !v182 l001117AB
	// succ:  l001117A1 l001117AB
l001117A1:
	v180 = loc31
	loc76 = v180
	v180 = loc76
	_free(v180)
	// succ:  l001117AB
l001117AB:
	v180 = loc183
	Mem0[0x00140030<p32>:word32] = v180
	v180 = loc67
	return v180
	// succ:  fn00110FF7_exit
l001117B4:
	// succ:  l001117B5
l001117B5:
	v180 = ___cxa_find_matching_catch_2()
	loc78 = v180
	v180 = Mem0[0x00140094<p32>:word32]
	loc79 = v180
	v180 = loc78
	loc12 = v180
	v180 = loc79
	loc13 = v180
	v180 = loc25
	loc26 = v180
	// succ:  l001117CA
l001117CA:
	v180 = loc26
	v181 = 0<32>
	v182 = v180 == v181
	loc80 = v182
	v180 = loc80
	v182 = v180 == 0<32>
	branch !v182 l001117E0
	// succ:  l001117D6 l001117E0
l001117D6:
	v180 = loc26
	loc81 = v180
	v180 = loc81
	_free(v180)
	// succ:  l001117E0
l001117E0:
	v180 = loc12
	loc14 = v180
	v180 = loc13
	loc15 = v180
	// succ:  l001117E8
l001117E8:
	v180 = loc88
	fn0011BAF7(v180)
	v180 = loc77
	fn0011BAF7(v180)
	v180 = loc66
	fn0011BAF7(v180)
	v180 = loc166
	v180 = Mem0[v180:word32]
	loc24 = v180
	v180 = loc14
	loc16 = v180
	v180 = loc15
	loc17 = v180
	v180 = loc24
	loc82 = v180
	// succ:  l0011180C
l0011180C:
	// succ:  l0011180D
l0011180D:
	v180 = loc82
	v180 = fn0011B43F(v180)
	v180 = loc16
	loc18 = v180
	v180 = loc17
	loc19 = v180
	v180 = loc28
	loc29 = v180
	v180 = loc31
	loc32 = v180
	// succ:  l00111824
l00111824:
	// succ:  l00111826
l00111826:
	v180 = loc182
	v181 = 8<32>
	v182 = v180 == v181
	branch !v182 l00111847
	// succ:  l0011182E l00111847
l0011182E:
	v180 = ___cxa_find_matching_catch_2()
	loc107 = v180
	v180 = Mem0[0x00140094<p32>:word32]
	loc108 = v180
	v180 = loc107
	loc18 = v180
	v180 = loc108
	loc19 = v180
	v180 = loc27
	loc29 = v180
	v180 = loc30
	loc32 = v180
	// succ:  l00111847
l00111847:
	v180 = loc29
	v181 = 0<32>
	v182 = v180 == v181
	loc83 = v182
	v180 = loc83
	v182 = v180 == 0<32>
	branch !v182 l0011185D
	// succ:  l00111853 l0011185D
l00111853:
	v180 = loc29
	loc84 = v180
	v180 = loc84
	_free(v180)
	// succ:  l0011185D
l0011185D:
	v180 = loc32
	v181 = 0<32>
	v182 = v180 == v181
	loc85 = v182
	v180 = loc85
	v182 = v180 == 0<32>
	branch !v182 l00111873
	// succ:  l00111869 l00111873
l00111869:
	v180 = loc32
	loc86 = v180
	v180 = loc86
	_free(v180)
	// succ:  l00111873
l00111873:
	v180 = loc18
	___resumeException(v180)
	v180 = 0<32>
	return v180
	// succ:  fn00110FF7_exit
l0011187A:
	return v180
	// succ:  fn00110FF7_exit
fn00110FF7_exit:


// fn0011187C
// Return size: 0
word32 fn0011187C(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0011187C_entry:
	// succ:  l0011187C
l0011187C:
	v153 = Mem0[0x00140030<p32>:word32]
	loc156 = v153
	v153 = Mem0[0x00140030<p32>:word32]
	v154 = 0xB0<32>
	v153 = v153 + v154
	Mem0[0x00140030<p32>:word32] = v153
	v153 = Mem0[0x00140030<p32>:word32]
	v154 = Mem0[0x00140034<p32>:word32]
	v155 = v153 >= v154
	branch !v155 l00111898
	// succ:  l00111892 l00111898
l00111892:
	v153 = 0xB0<32>
	abortStackOverflow(v153)
	// succ:  l00111898
l00111898:
	v153 = loc156
	v154 = 0x38<32>
	v153 = v153 + v154
	loc16 = v153
	v153 = loc156
	v154 = 0x34<32>
	v153 = v153 + v154
	loc108 = v153
	v153 = loc156
	v154 = 0xA4<32>
	v153 = v153 + v154
	loc119 = v153
	v153 = loc156
	v154 = 0xA1<32>
	v153 = v153 + v154
	loc130 = v153
	v153 = loc156
	v154 = 0xA0<32>
	v153 = v153 + v154
	loc141 = v153
	v153 = loc156
	v154 = 0x28<32>
	v153 = v153 + v154
	loc23 = v153
	v153 = loc156
	v154 = 0x1C<32>
	v153 = v153 + v154
	loc34 = v153
	v153 = loc156
	v154 = 0x10<32>
	v153 = v153 + v154
	loc45 = v153
	v153 = loc156
	v154 = 0xC<32>
	v153 = v153 + v154
	loc56 = v153
	v153 = loc156
	v154 = 0x3C<32>
	v153 = v153 + v154
	loc62 = v153
	v153 = loc156
	v154 = 8<32>
	v153 = v153 + v154
	loc63 = v153
	v153 = loc156
	v154 = 4<32>
	v153 = v153 + v154
	loc64 = v153
	v153 = loc156
	loc65 = v153
	v153 = arg3
	v153 = fn000E64CA(v153)
	loc66 = v153
	v153 = loc108
	v154 = loc66
	Mem0[v153:word32] = v154
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = 0x164<32>
	v154 = loc108
	v156 = 0x4C70<32>
	v153 = invoke_iii(v153, v154, v156)
	loc67 = v153
	v153 = Mem0[0x00140048<p32>:word32]
	loc68 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = loc68
	v154 = 1<32>
	v153 = v153 & v154
	loc69 = v153
	// succ:  l00111930
l00111930:
	v153 = loc69
	branch !v153 l0011194B
	// succ:  l00111936 l0011194B
l00111936:
	v153 = ___cxa_find_matching_catch_2()
	loc150 = v153
	v153 = Mem0[0x00140094<p32>:word32]
	loc151 = v153
	v153 = loc150
	loc14 = v153
	v153 = loc151
	loc15 = v153
	goto l00111F0F
	// succ:  l00111F0F
l0011194B:
	v153 = arg5
	v154 = 0xB<32>
	v153 = v153 + v154
	loc70 = v153
	v153 = loc70
	v157 = Mem0[v153:int8]
	v153 = CONVERT(v157, int8, word32)
	loc71 = v153
	v153 = loc71
	v154 = 0x18<32>
	v153 = v153 << v154
	v154 = 0x18<32>
	v153 = v153 >> v154
	v154 = 0<32>
	v155 = v153 < v154
	loc72 = v155
	v153 = arg5
	v154 = 4<32>
	v153 = v153 + v154
	loc73 = v153
	v153 = loc73
	v153 = Mem0[v153:word32]
	loc74 = v153
	v153 = loc71
	v154 = 0xFF<32>
	v153 = v153 & v154
	loc75 = v153
	v153 = loc72
	branch !v153 l00111983
	// succ:  l00111980 l00111983
l00111980:
	v153 = loc74
	goto l00111985
	// succ:  l00111985
l00111983:
	v153 = loc75
	// succ:  l00111985
l00111985:
	loc76 = v153
	v153 = loc76
	v154 = 0<32>
	v155 = v153 == v154
	loc77 = v155
	// succ:  l0011198F
l0011198F:
	v153 = loc77
	branch !v153 l0011199A
	// succ:  l00111995 l0011199A
l00111995:
	v153 = 0<32>
	loc94 = v153
	goto l00111A17
	// succ:  l00111A17
l0011199A:
	v153 = arg5
	v153 = Mem0[v153:word32]
	loc78 = v153
	v153 = loc72
	branch !v153 l001119A8
	// succ:  l001119A5 l001119A8
l001119A5:
	v153 = loc78
	goto l001119AA
	// succ:  l001119AA
l001119A8:
	v153 = arg5
	// succ:  l001119AA
l001119AA:
	loc79 = v153
	v153 = loc79
	v158 = Mem0[v153:int8]
	v153 = CONVERT(v158, int8, word32)
	loc80 = v153
	v153 = loc67
	v153 = Mem0[v153:word32]
	loc81 = v153
	v153 = loc81
	v154 = 0x1C<32>
	v153 = v153 + v154
	loc82 = v153
	v153 = loc82
	v153 = Mem0[v153:word32]
	loc83 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = loc83
	v154 = loc67
	v156 = 0x2D<32>
	v153 = invoke_iii(v153, v154, v156)
	loc84 = v153
	v153 = Mem0[0x00140048<p32>:word32]
	loc85 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = loc85
	v154 = 1<32>
	v153 = v153 & v154
	loc86 = v153
	v153 = loc86
	branch !v153 l001119FD
	// succ:  l001119EA l001119FD
l001119EA:
	v153 = ___cxa_find_matching_catch_2()
	loc24 = v153
	v153 = Mem0[0x00140094<p32>:word32]
	loc25 = v153
	v153 = loc24
	loc14 = v153
	v153 = loc25
	loc15 = v153
	goto l00111F10
	// succ:  l00111F10
l001119FD:
	v153 = loc80
	v154 = 0x18<32>
	v153 = v153 << v154
	v154 = 0x18<32>
	v153 = v153 >> v154
	v154 = loc84
	v156 = 0x18<32>
	v154 = v154 << v156
	v156 = 0x18<32>
	v154 = v154 >> v156
	v155 = v153 == v154
	loc87 = v155
	v153 = loc87
	loc94 = v153
	goto l00111A18
	// succ:  l00111A18
l00111A16:
	// succ:  l00111A17
l00111A17:
	// succ:  l00111A18
l00111A18:
	v153 = loc23
	v159 = 0<64>
	Mem0[v153:word64] = v159
	v153 = loc23
	v154 = 8<32>
	v153 = v153 + v154
	v154 = 0<32>
	Mem0[v153:word32] = v154
	v153 = 0<32>
	loc7 = v153
	// succ:  l00111A30
l00111A30:
	v153 = loc7
	v154 = 3<32>
	v155 = v153 == v154
	loc152 = v155
	v153 = loc152
	branch !v153 l00111A42
	// succ:  l00111A3F l00111A42
l00111A3F:
	goto l00111A60
	// succ:  l00111A60
l00111A42:
	v153 = loc23
	v154 = loc7
	v156 = 2<32>
	v154 = v154 << v156
	v153 = v153 + v154
	loc88 = v153
	v153 = loc88
	v154 = 0<32>
	Mem0[v153:word32] = v154
	v153 = loc7
	v154 = 1<32>
	v153 = v153 + v154
	loc89 = v153
	v153 = loc89
	loc7 = v153
	goto l00111A18
	// succ:  l00111A18
l00111A60:
	v153 = loc34
	v159 = 0<64>
	Mem0[v153:word64] = v159
	v153 = loc34
	v154 = 8<32>
	v153 = v153 + v154
	v154 = 0<32>
	Mem0[v153:word32] = v154
	v153 = 0<32>
	loc8 = v153
	// succ:  l00111A79
l00111A79:
	v153 = loc8
	v154 = 3<32>
	v155 = v153 == v154
	loc153 = v155
	v153 = loc153
	branch !v153 l00111A8B
	// succ:  l00111A88 l00111A8B
l00111A88:
	goto l00111AA9
	// succ:  l00111AA9
l00111A8B:
	v153 = loc34
	v154 = loc8
	v156 = 2<32>
	v154 = v154 << v156
	v153 = v153 + v154
	loc90 = v153
	v153 = loc90
	v154 = 0<32>
	Mem0[v153:word32] = v154
	v153 = loc8
	v154 = 1<32>
	v153 = v153 + v154
	loc91 = v153
	v153 = loc91
	loc8 = v153
	goto l00111A60
	// succ:  l00111A60
l00111AA9:
	v153 = loc45
	v159 = 0<64>
	Mem0[v153:word64] = v159
	v153 = loc45
	v154 = 8<32>
	v153 = v153 + v154
	v154 = 0<32>
	Mem0[v153:word32] = v154
	v153 = 0<32>
	loc9 = v153
	// succ:  l00111AC2
l00111AC2:
	v153 = loc9
	v154 = 3<32>
	v155 = v153 == v154
	loc154 = v155
	v153 = loc154
	branch !v153 l00111AD4
	// succ:  l00111AD1 l00111AD4
l00111AD1:
	goto l00111AF2
	// succ:  l00111AF2
l00111AD4:
	v153 = loc45
	v154 = loc9
	v156 = 2<32>
	v154 = v154 << v156
	v153 = v153 + v154
	loc92 = v153
	v153 = loc92
	v154 = 0<32>
	Mem0[v153:word32] = v154
	v153 = loc9
	v154 = 1<32>
	v153 = v153 + v154
	loc93 = v153
	v153 = loc93
	loc9 = v153
	goto l00111AA9
	// succ:  l00111AA9
l00111AF2:
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = 0x1B4<32>
	v154 = arg2
	v156 = loc94
	v160 = loc108
	v161 = loc119
	v162 = loc130
	v163 = loc141
	v164 = loc23
	v165 = loc34
	v166 = loc45
	v167 = loc56
	invoke_viiiiiiiiii(v153, v154, v156, v160, v161, v162, v163, v164, v165, v166, v167)
	v153 = Mem0[0x00140048<p32>:word32]
	loc95 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = loc95
	v154 = 1<32>
	v153 = v153 & v154
	loc96 = v153
	v153 = loc96
	branch !v153 l00111B37
	// succ:  l00111B26 l00111B37
l00111B26:
	v153 = ___cxa_find_matching_catch_2()
	loc26 = v153
	v153 = Mem0[0x00140094<p32>:word32]
	loc27 = v153
	v153 = loc26
	loc12 = v153
	v153 = loc27
	loc13 = v153
	goto l00111EF7
	// succ:  l00111EF7
l00111B37:
	v153 = loc70
	v168 = Mem0[v153:int8]
	v153 = CONVERT(v168, int8, word32)
	loc97 = v153
	v153 = loc97
	v154 = 0x18<32>
	v153 = v153 << v154
	v154 = 0x18<32>
	v153 = v153 >> v154
	v154 = 0<32>
	v155 = v153 < v154
	loc98 = v155
	v153 = loc73
	v153 = Mem0[v153:word32]
	loc99 = v153
	v153 = loc97
	v154 = 0xFF<32>
	v153 = v153 & v154
	loc100 = v153
	v153 = loc98
	branch !v153 l00111B61
	// succ:  l00111B5E l00111B61
l00111B5E:
	v153 = loc99
	goto l00111B63
	// succ:  l00111B63
l00111B61:
	v153 = loc100
	// succ:  l00111B63
l00111B63:
	loc101 = v153
	v153 = loc56
	v153 = Mem0[v153:word32]
	loc102 = v153
	v153 = loc101
	v154 = loc102
	v155 = v153 > v154
	loc103 = v155
	v153 = loc103
	branch !v153 l00111C1A
	// succ:  l00111B78 l00111C1A
l00111B78:
	v153 = loc101
	v154 = loc102
	v153 = v153 - v154
	loc104 = v153
	v153 = loc104
	v154 = 1<32>
	v153 = v153 << v154
	loc105 = v153
	v153 = loc45
	v154 = 0xB<32>
	v153 = v153 + v154
	loc106 = v153
	v153 = loc106
	v169 = Mem0[v153:int8]
	v153 = CONVERT(v169, int8, word32)
	loc107 = v153
	v153 = loc107
	v154 = 0x18<32>
	v153 = v153 << v154
	v154 = 0x18<32>
	v153 = v153 >> v154
	v154 = 0<32>
	v155 = v153 < v154
	loc109 = v155
	v153 = loc45
	v154 = 4<32>
	v153 = v153 + v154
	loc110 = v153
	v153 = loc110
	v153 = Mem0[v153:word32]
	loc111 = v153
	v153 = loc107
	v154 = 0xFF<32>
	v153 = v153 & v154
	loc112 = v153
	v153 = loc109
	branch !v153 l00111BBE
	// succ:  l00111BBB l00111BBE
l00111BBB:
	v153 = loc111
	goto l00111BC0
	// succ:  l00111BC0
l00111BBE:
	v153 = loc112
	// succ:  l00111BC0
l00111BC0:
	loc113 = v153
	v153 = loc34
	v154 = 0xB<32>
	v153 = v153 + v154
	loc114 = v153
	v153 = loc114
	v170 = Mem0[v153:int8]
	v153 = CONVERT(v170, int8, word32)
	loc115 = v153
	v153 = loc115
	v154 = 0x18<32>
	v153 = v153 << v154
	v154 = 0x18<32>
	v153 = v153 >> v154
	v154 = 0<32>
	v155 = v153 < v154
	loc116 = v155
	v153 = loc34
	v154 = 4<32>
	v153 = v153 + v154
	loc117 = v153
	v153 = loc117
	v153 = Mem0[v153:word32]
	loc118 = v153
	v153 = loc115
	v154 = 0xFF<32>
	v153 = v153 & v154
	loc120 = v153
	v153 = loc116
	branch !v153 l00111BFB
	// succ:  l00111BF8 l00111BFB
l00111BF8:
	v153 = loc118
	goto l00111BFD
	// succ:  l00111BFD
l00111BFB:
	v153 = loc120
	// succ:  l00111BFD
l00111BFD:
	loc121 = v153
	v153 = loc105
	v154 = 1<32>
	v153 = v153 | v154
	loc122 = v153
	v153 = loc113
	v154 = loc122
	v153 = v153 + v154
	loc123 = v153
	v153 = loc123
	v154 = loc121
	v153 = v153 + v154
	loc124 = v153
	v153 = loc124
	loc17 = v153
	goto l00111CC1
	// succ:  l00111CC1
l00111C1A:
	v153 = loc45
	v154 = 0xB<32>
	v153 = v153 + v154
	loc125 = v153
	v153 = loc125
	v171 = Mem0[v153:int8]
	v153 = CONVERT(v171, int8, word32)
	loc126 = v153
	v153 = loc126
	v154 = 0x18<32>
	v153 = v153 << v154
	v154 = 0x18<32>
	v153 = v153 >> v154
	v154 = 0<32>
	v155 = v153 < v154
	loc127 = v155
	v153 = loc45
	v154 = 4<32>
	v153 = v153 + v154
	loc128 = v153
	v153 = loc128
	v153 = Mem0[v153:word32]
	loc129 = v153
	v153 = loc126
	v154 = 0xFF<32>
	v153 = v153 & v154
	loc131 = v153
	v153 = loc127
	branch !v153 l00111C57
	// succ:  l00111C53 l00111C57
l00111C53:
	v153 = loc129
	goto l00111C5A
	// succ:  l00111C5A
l00111C57:
	v153 = loc131
	// succ:  l00111C5A
l00111C5A:
	loc132 = v153
	v153 = loc34
	v154 = 0xB<32>
	v153 = v153 + v154
	loc133 = v153
	v153 = loc133
	v172 = Mem0[v153:int8]
	v153 = CONVERT(v172, int8, word32)
	loc134 = v153
	v153 = loc134
	v154 = 0x18<32>
	v153 = v153 << v154
	v154 = 0x18<32>
	v153 = v153 >> v154
	v154 = 0<32>
	v155 = v153 < v154
	loc135 = v155
	v153 = loc34
	v154 = 4<32>
	v153 = v153 + v154
	loc136 = v153
	v153 = loc136
	v153 = Mem0[v153:word32]
	loc137 = v153
	v153 = loc134
	v154 = 0xFF<32>
	v153 = v153 & v154
	loc138 = v153
	v153 = loc135
	branch !v153 l00111CA2
	// succ:  l00111C9E l00111CA2
l00111C9E:
	v153 = loc137
	goto l00111CA5
	// succ:  l00111CA5
l00111CA2:
	v153 = loc138
	// succ:  l00111CA5
l00111CA5:
	loc139 = v153
	v153 = loc132
	v154 = 2<32>
	v153 = v153 + v154
	loc140 = v153
	v153 = loc140
	v154 = loc139
	v153 = v153 + v154
	loc142 = v153
	v153 = loc142
	loc17 = v153
	// succ:  l00111CC1
l00111CC1:
	v153 = loc17
	v154 = loc102
	v153 = v153 + v154
	loc143 = v153
	v153 = loc143
	v154 = 0x64<32>
	v155 = v153 >u v154
	loc144 = v155
	// succ:  l00111CD4
l00111CD4:
	v153 = loc144
	branch !v153 l00111D80
	// succ:  l00111CDB l00111D80
l00111CDB:
	v153 = loc143
	v153 = _malloc(v153)
	loc145 = v153
	v153 = loc145
	loc146 = v153
	v153 = loc145
	v154 = 0<32>
	v155 = v153 == v154
	loc147 = v155
	v153 = loc147
	branch !v153 l00111D63
	// succ:  l00111CF8 l00111D63
l00111CF8:
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = 0x18A<32>
	invoke_v(v153)
	v153 = Mem0[0x00140048<p32>:word32]
	loc148 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = loc148
	v154 = 1<32>
	v153 = v153 & v154
	loc149 = v153
	v153 = loc149
	branch !v153 l00111D30
	// succ:  l00111D18 l00111D30
l00111D18:
	v153 = ___cxa_find_matching_catch_2()
	loc28 = v153
	v153 = Mem0[0x00140094<p32>:word32]
	loc29 = v153
	v153 = loc28
	loc6 = v153
	v153 = loc29
	loc11 = v153
	v153 = loc146
	loc22 = v153
	goto l00111D9A
	// succ:  l00111D9A
l00111D30:
	v153 = loc70
	v173 = Mem0[v153:int8]
	v153 = CONVERT(v173, int8, word32)
	loc18 = v153
	v153 = loc73
	v153 = Mem0[v153:word32]
	loc19 = v153
	v153 = loc56
	v153 = Mem0[v153:word32]
	loc20 = v153
	v153 = 0<32>
	loc10 = v153
	v153 = loc146
	loc21 = v153
	v153 = loc18
	loc33 = v153
	v153 = loc19
	loc39 = v153
	v153 = loc20
	loc43 = v153
	v153 = 0x1A<32>
	loc155 = v153
	goto l00111D9A
	// succ:  l00111D9A
l00111D61:
	goto l00111D7E
	// succ:  l00111D7E
l00111D63:
	v153 = loc145
	loc10 = v153
	v153 = loc146
	loc21 = v153
	v153 = loc97
	loc33 = v153
	v153 = loc99
	loc39 = v153
	v153 = loc102
	loc43 = v153
	v153 = 0x1A<32>
	loc155 = v153
	// succ:  l00111D7E
l00111D7E:
	goto l00111D99
	// succ:  l00111D99
l00111D80:
	v153 = loc62
	loc10 = v153
	v153 = 0<32>
	loc21 = v153
	v153 = loc97
	loc33 = v153
	v153 = loc99
	loc39 = v153
	v153 = loc102
	loc43 = v153
	v153 = 0x1A<32>
	loc155 = v153
	// succ:  l00111D99
l00111D99:
	// succ:  l00111D9A
l00111D9A:
	v153 = loc155
	v154 = 0x1A<32>
	v155 = v153 == v154
	branch !v155 l00111ED9
	// succ:  l00111DA3 l00111ED9
l00111DA3:
	v153 = arg3
	v154 = 4<32>
	v153 = v153 + v154
	loc30 = v153
	v153 = loc30
	v153 = Mem0[v153:word32]
	loc31 = v153
	v153 = loc33
	v154 = 0x18<32>
	v153 = v153 << v154
	v154 = 0x18<32>
	v153 = v153 >> v154
	v154 = 0<32>
	v155 = v153 < v154
	loc32 = v155
	v153 = arg5
	v153 = Mem0[v153:word32]
	loc35 = v153
	v153 = loc32
	branch !v153 l00111DCC
	// succ:  l00111DC9 l00111DCC
l00111DC9:
	v153 = loc35
	goto l00111DCE
	// succ:  l00111DCE
l00111DCC:
	v153 = arg5
	// succ:  l00111DCE
l00111DCE:
	loc36 = v153
	v153 = loc33
	v154 = 0xFF<32>
	v153 = v153 & v154
	loc37 = v153
	v153 = loc32
	branch !v153 l00111DE0
	// succ:  l00111DDD l00111DE0
l00111DDD:
	v153 = loc39
	goto l00111DE2
	// succ:  l00111DE2
l00111DE0:
	v153 = loc37
	// succ:  l00111DE2
l00111DE2:
	loc38 = v153
	v153 = loc36
	v154 = loc38
	v153 = v153 + v154
	loc40 = v153
	v153 = loc130
	v174 = Mem0[v153:int8]
	v153 = CONVERT(v174, int8, word32)
	loc41 = v153
	v153 = loc141
	v175 = Mem0[v153:int8]
	v153 = CONVERT(v175, int8, word32)
	loc42 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = 0x1B5<32>
	v154 = loc10
	v156 = loc63
	v160 = loc64
	v161 = loc31
	v162 = loc36
	v163 = loc40
	v164 = loc67
	v165 = loc94
	v166 = loc119
	v167 = loc41
	v176 = loc42
	v177 = loc23
	v178 = loc34
	v179 = loc45
	v180 = loc43
	invoke_viiiiiiiiiiiiiii(v153, v154, v156, v160, v161, v162, v163, v164, v165, v166, v167, v176, v177, v178, v179, v180)
	v153 = Mem0[0x00140048<p32>:word32]
	loc44 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = loc44
	v154 = 1<32>
	v153 = v153 & v154
	loc46 = v153
	v153 = loc46
	v155 = v153 == 0<32>
	branch !v155 l00111EC4
	// succ:  l00111E37 l00111EC4
l00111E37:
	v153 = arg1
	v153 = Mem0[v153:word32]
	loc47 = v153
	v153 = loc65
	v154 = loc47
	Mem0[v153:word32] = v154
	v153 = loc63
	v153 = Mem0[v153:word32]
	loc48 = v153
	v153 = loc64
	v153 = Mem0[v153:word32]
	loc49 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = loc16
	v154 = loc65
	v154 = Mem0[v154:word32]
	Mem0[v153:word32] = v154
	v153 = 0x168<32>
	v154 = loc16
	v156 = loc10
	v160 = loc48
	v161 = loc49
	v162 = arg3
	v163 = arg4
	v153 = invoke_iiiiiii(v153, v154, v156, v160, v161, v162, v163)
	loc50 = v153
	v153 = Mem0[0x00140048<p32>:word32]
	loc51 = v153
	v153 = 0<32>
	Mem0[0x00140048<p32>:word32] = v153
	v153 = loc51
	v154 = 1<32>
	v153 = v153 & v154
	loc52 = v153
	v153 = loc52
	v155 = v153 == 0<32>
	branch !v155 l00111EC3
	// succ:  l00111E88 l00111EC3
l00111E88:
	v153 = loc21
	v154 = 0<32>
	v155 = v153 == v154
	loc53 = v155
	v153 = loc53
	v155 = v153 == 0<32>
	branch !v155 l00111E9E
	// succ:  l00111E94 l00111E9E
l00111E94:
	v153 = loc21
	loc54 = v153
	v153 = loc54
	_free(v153)
	// succ:  l00111E9E
l00111E9E:
	v153 = loc45
	fn0011BAF7(v153)
	v153 = loc34
	fn0011BAF7(v153)
	v153 = loc23
	fn0011BAF7(v153)
	v153 = loc108
	v153 = Mem0[v153:word32]
	loc55 = v153
	v153 = loc55
	v153 = fn0011B43F(v153)
	v153 = loc156
	Mem0[0x00140030<p32>:word32] = v153
	v153 = loc50
	return v153
	// succ:  fn0011187C_exit
l00111EC3:
	// succ:  l00111EC4
l00111EC4:
	v153 = ___cxa_find_matching_catch_2()
	loc57 = v153
	v153 = Mem0[0x00140094<p32>:word32]
	loc58 = v153
	v153 = loc57
	loc6 = v153
	v153 = loc58
	loc11 = v153
	v153 = loc21
	loc22 = v153
	// succ:  l00111ED9
l00111ED9:
	v153 = loc22
	v154 = 0<32>
	v155 = v153 == v154
	loc59 = v155
	v153 = loc59
	v155 = v153 == 0<32>
	branch !v155 l00111EEF
	// succ:  l00111EE5 l00111EEF
l00111EE5:
	v153 = loc22
	loc60 = v153
	v153 = loc60
	_free(v153)
	// succ:  l00111EEF
l00111EEF:
	v153 = loc6
	loc12 = v153
	v153 = loc11
	loc13 = v153
	// succ:  l00111EF7
l00111EF7:
	v153 = loc45
	fn0011BAF7(v153)
	v153 = loc34
	fn0011BAF7(v153)
	v153 = loc23
	fn0011BAF7(v153)
	v153 = loc12
	loc14 = v153
	v153 = loc13
	loc15 = v153
	// succ:  l00111F0F
l00111F0F:
	// succ:  l00111F10
l00111F10:
	v153 = loc108
	v153 = Mem0[v153:word32]
	loc61 = v153
	v153 = loc61
	v153 = fn0011B43F(v153)
	v153 = loc14
	___resumeException(v153)
	v153 = 0<32>
	return v153
	// succ:  fn0011187C_exit
l00111F25:
	return v153
	// succ:  fn0011187C_exit
fn0011187C_exit:


// fn00111F27
// Return size: 0
void fn00111F27(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
fn00111F27_entry:
	// succ:  l00111F27
l00111F27:
	v189 = Mem0[0x00140030<p32>:word32]
	loc196 = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = 0x70<32>
	v189 = v189 + v190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = Mem0[0x00140034<p32>:word32]
	v191 = v189 >= v190
	branch !v191 l00111F43
	// succ:  l00111F3D l00111F43
l00111F3D:
	v189 = 0x70<32>
	abortStackOverflow(v189)
	// succ:  l00111F43
l00111F43:
	v189 = loc196
	v190 = 0x6C<32>
	v189 = v189 + v190
	loc20 = v189
	v189 = loc196
	v190 = 0x60<32>
	v189 = v189 + v190
	loc31 = v189
	v189 = loc196
	v190 = 0x5C<32>
	v189 = v189 + v190
	loc42 = v189
	v189 = loc196
	v190 = 0x50<32>
	v189 = v189 + v190
	loc53 = v189
	v189 = loc196
	v190 = 0x44<32>
	v189 = v189 + v190
	loc64 = v189
	v189 = loc196
	v190 = 0x38<32>
	v189 = v189 + v190
	loc75 = v189
	v189 = loc196
	v190 = 0x34<32>
	v189 = v189 + v190
	loc86 = v189
	v189 = loc196
	v190 = 0x28<32>
	v189 = v189 + v190
	loc97 = v189
	v189 = loc196
	v190 = 0x24<32>
	v189 = v189 + v190
	loc104 = v189
	v189 = loc196
	v190 = 0x18<32>
	v189 = v189 + v190
	loc105 = v189
	v189 = loc196
	v190 = 0xC<32>
	v189 = v189 + v190
	loc106 = v189
	v189 = loc196
	loc107 = v189
	v189 = arg0
	v189 = v189
	// succ:  l00111FA9
l00111FA9:
	v189 = arg2
	v190 = 0x5328<32>
	v189 = fn000EA9F7(v189, v190)
	loc108 = v189
	v189 = arg1
	v189 = v189
	// succ:  l00111FB8
l00111FB8:
	v189 = loc108
	v189 = Mem0[v189:word32]
	loc109 = v189
	v189 = loc109
	v190 = 0x2C<32>
	v189 = v189 + v190
	loc110 = v189
	v189 = loc110
	v189 = Mem0[v189:word32]
	loc111 = v189
	v189 = loc20
	v190 = loc108
	v192 = loc111
	v193 = 0x1FF<32>
	v192 = v192 & v193
	v193 = 0x700<32>
	v192 = v192 + v193
fn00111F27_exit:


// fn00112A04
// Return size: 0
void fn00112A04(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11, word32 arg12, word32 arg13, word32 arg14)
fn00112A04_entry:
	// succ:  l00112A04
l00112A04:
	v168 = Mem0[0x00140030<p32>:word32]
	loc180 = v168
	v168 = arg2
	v169 = arg0
	Mem0[v168:word32] = v169
	v168 = arg13
	v169 = 0xB<32>
	v168 = v168 + v169
	loc89 = v168
	v168 = arg13
	v169 = 4<32>
	v168 = v168 + v169
	loc91 = v168
	v168 = arg12
	v169 = 0xB<32>
	v168 = v168 + v169
	loc92 = v168
	v168 = arg12
	v169 = 4<32>
	v168 = v168 + v169
	loc93 = v168
	v168 = arg3
	v169 = 0x200<32>
	v168 = v168 & v169
	loc94 = v168
	v168 = loc94
	v169 = 0<32>
	v170 = v168 == v169
	loc95 = v170
	v168 = arg6
	v169 = 8<32>
	v168 = v168 + v169
	loc96 = v168
	v168 = arg14
	v169 = 0<32>
	v170 = v168 > v169
	loc97 = v170
	v168 = arg11
	v169 = 0xB<32>
	v168 = v168 + v169
	loc98 = v168
	v168 = arg11
	v169 = 4<32>
	v168 = v168 + v169
	loc99 = v168
	v168 = 0<32>
	loc22 = v168
	v168 = arg4
	loc26 = v168
	// succ:  l00112A63
l00112A63:
	v168 = loc22
	v169 = 4<32>
	v170 = v168 == v169
	loc175 = v170
	v168 = loc175
	branch !v168 l00112A75
	// succ:  l00112A72 l00112A75
l00112A72:
l00112A75:
	v168 = arg8
	v169 = loc22
	v168 = v168 + v169
	loc106 = v168
	v168 = loc106
	v171 = Mem0[v168:int8]
	v168 = CONVERT(v171, int8, word32)
	loc107 = v168
	v168 = loc107
	v169 = 0x18<32>
	v168 = v168 << v169
	v169 = 0x18<32>
	v168 = v168 >> v169
	loc108 = v168
	// succ:  l00112A8D
l00112A8D:
	v168 = loc108
	v169 = 0<32>
	v168 = v168 - v169
	switch (v168) { l00112AAA l00112AC2 <null> <null> <null> }
	// succ:  l00112AAA l00112AC2
l00112AAA:
	v168 = arg2
	v168 = Mem0[v168:word32]
	loc109 = v168
	v168 = arg1
	v169 = loc109
	Mem0[v168:word32] = v169
	v168 = loc26
	loc33 = v168
l00112AC1:
	// succ:  l00112AC2
l00112AC2:
	v168 = arg2
	v168 = Mem0[v168:word32]
	loc110 = v168
	v168 = arg1
	v169 = loc110
	Mem0[v168:word32] = v169
	v168 = arg6
	v168 = Mem0[v168:word32]
	loc111 = v168
	v168 = loc111
	v169 = 0x1C<32>
	v168 = v168 + v169
	loc112 = v168
	v168 = loc112
	v168 = Mem0[v168:word32]
	loc113 = v168
	v168 = arg6
	v169 = 0x20<32>
	v172 = loc113
	v173 = 0x1FF<32>
	v172 = v172 & v173
	v173 = 0x1B20<32>
	v172 = v172 + v173
fn00112A04_exit:


// fn001131DC
// Return size: 0
void fn001131DC(word32 arg0)
fn001131DC_entry:
	// succ:  l001131DC
l001131DC:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn001131DC_exit
l001131E3:
	return
	// succ:  fn001131DC_exit
fn001131DC_exit:


// fn001131E5
// Return size: 0
void fn001131E5(word32 arg0)
fn001131E5_entry:
	// succ:  l001131E5
l001131E5:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn001131E5_exit
l001131F1:
	return
	// succ:  fn001131E5_exit
fn001131E5_exit:


// fn001131F3
// Return size: 0
word32 fn001131F3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, real64 arg5)
fn001131F3_entry:
	// succ:  l001131F3
l001131F3:
	v186 = Mem0[0x00140030<p32>:word32]
	loc189 = v186
	v186 = Mem0[0x00140030<p32>:word32]
	v187 = 0x3F0<32>
	v186 = v186 + v187
	Mem0[0x00140030<p32>:word32] = v186
	v186 = Mem0[0x00140030<p32>:word32]
	v187 = Mem0[0x00140034<p32>:word32]
	v188 = v186 >= v187
	branch !v188 l0011320F
	// succ:  l00113209 l0011320F
l00113209:
	v186 = 0x3F0<32>
	abortStackOverflow(v186)
	// succ:  l0011320F
l0011320F:
	v186 = loc189
	v187 = 0x37C<32>
	v186 = v186 + v187
	loc20 = v186
	v186 = loc189
	v187 = 8<32>
	v186 = v186 + v187
	loc187 = v186
	v186 = loc189
	loc186 = v186
	v186 = loc189
	v187 = 0x384<32>
	v186 = v186 + v187
	loc139 = v186
	v186 = loc189
	v187 = 0x378<32>
	v186 = v186 + v187
	loc150 = v186
	v186 = loc189
	v187 = 0x1E8<32>
	v186 = v186 + v187
	loc161 = v186
	v186 = loc189
	v187 = 0x1E0<32>
	v186 = v186 + v187
	loc172 = v186
	v186 = loc189
	v187 = 0x380<32>
	v186 = v186 + v187
	loc33 = v186
	v186 = loc189
	v187 = 0x1DC<32>
	v186 = v186 + v187
	loc44 = v186
	v186 = loc189
	v187 = 0x1D8<32>
	v186 = v186 + v187
	loc55 = v186
	v186 = loc189
	v187 = 0x1CC<32>
	v186 = v186 + v187
	loc66 = v186
	v186 = loc189
	v187 = 0x1C0<32>
	v186 = v186 + v187
	loc77 = v186
	v186 = loc189
	v187 = 0x1B4<32>
	v186 = v186 + v187
	loc88 = v186
	v186 = loc189
	v187 = 0x1B0<32>
	v186 = v186 + v187
	loc95 = v186
	v186 = loc189
	v187 = 0x20<32>
	v186 = v186 + v187
	loc96 = v186
	v186 = loc189
	v187 = 0x18<32>
	v186 = v186 + v187
	loc97 = v186
	v186 = loc189
	v187 = 0x14<32>
	v186 = v186 + v187
	loc98 = v186
	v186 = loc189
	v187 = 0x10<32>
	v186 = v186 + v187
	loc99 = v186
	v186 = loc150
	v187 = loc139
	Mem0[v186:word32] = v187
	v186 = loc186
	v189 = arg5
	Mem0[v186:real64] = v189
	v186 = loc139
	v187 = 0x64<32>
	v190 = 0x3DC0<32>
	v191 = loc186
	v186 = fn000DB3DF(v186, v187, v190, v191)
	loc100 = v186
	v186 = loc100
	v187 = 0x63<32>
	v188 = v186 >u v187
	loc101 = v188
	// succ:  l001132D9
l001132D9:
	v186 = loc101
	branch !v186 l00113417
	// succ:  l001132DF l00113417
l001132DF:
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = 0x17B<32>
	v186 = invoke_i(v186)
	loc102 = v186
	v186 = Mem0[0x00140048<p32>:word32]
	loc103 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc103
	v187 = 1<32>
	v186 = v186 & v187
	loc104 = v186
	v186 = loc104
	branch !v186 l0011330B
	// succ:  l001132FD l0011330B
l001132FD:
	v186 = 0<32>
	loc27 = v186
	v186 = 0<32>
	loc30 = v186
	v186 = 8<32>
	loc188 = v186
	goto l00113415
	// succ:  l00113415
l0011330B:
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc187
	v189 = arg5
	Mem0[v186:real64] = v189
	v186 = 0x18D<32>
	v187 = loc150
	v190 = loc102
	v191 = 0x3DC0<32>
	v192 = loc187
	v186 = invoke_iiiii(v186, v187, v190, v191, v192)
	loc105 = v186
	v186 = Mem0[0x00140048<p32>:word32]
	loc106 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc106
	v187 = 1<32>
	v186 = v186 & v187
	loc107 = v186
	v186 = loc107
	branch !v186 l0011334B
	// succ:  l0011333D l0011334B
l0011333D:
	v186 = 0<32>
	loc27 = v186
	v186 = 0<32>
	loc30 = v186
	v186 = 8<32>
	loc188 = v186
	goto l00113414
	// succ:  l00113414
l0011334B:
	v186 = loc150
	v186 = Mem0[v186:word32]
	loc108 = v186
	v186 = loc108
	v187 = 0<32>
	v188 = v186 == v187
	loc109 = v188
	v186 = loc109
	branch !v186 l00113397
	// succ:  l0011335E l00113397
l0011335E:
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = 0x18A<32>
	invoke_v(v186)
	v186 = Mem0[0x00140048<p32>:word32]
	loc111 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc111
	v187 = 1<32>
	v186 = v186 & v187
	loc112 = v186
	v186 = loc112
	branch !v186 l0011338A
	// succ:  l0011337A l0011338A
l0011337A:
	v186 = 0<32>
	loc27 = v186
	v186 = 0<32>
	loc30 = v186
	v186 = 8<32>
	loc188 = v186
	goto l0011342E
	// succ:  l0011342E
l0011338A:
	v186 = loc150
	v186 = Mem0[v186:word32]
	loc22 = v186
	v186 = loc22
	loc94 = v186
	goto l0011339F
	// succ:  l0011339F
l00113397:
	v186 = loc108
	loc110 = v186
	v186 = loc110
	loc94 = v186
	// succ:  l0011339F
l0011339F:
	v186 = loc105
	v187 = 2<32>
	v186 = v186 << v187
	loc115 = v186
	v186 = loc115
	v186 = _malloc(v186)
	loc116 = v186
	v186 = loc116
	loc117 = v186
	v186 = loc116
	v187 = 0<32>
	v188 = v186 == v187
	loc118 = v188
	v186 = loc118
	branch !v186 l001133FE
	// succ:  l001133BD l001133FE
l001133BD:
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = 0x18A<32>
	invoke_v(v186)
	v186 = Mem0[0x00140048<p32>:word32]
	loc119 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc119
	v187 = 1<32>
	v186 = v186 & v187
	loc120 = v186
	v186 = loc120
	branch !v186 l001133E7
	// succ:  l001133D9 l001133E7
l001133D9:
	v186 = loc117
	loc27 = v186
	v186 = loc94
	loc30 = v186
	v186 = 8<32>
	loc188 = v186
	goto l001133FC
	// succ:  l001133FC
l001133E7:
	v186 = 0<32>
	loc6 = v186
	v186 = loc105
	loc11 = v186
	v186 = loc117
	loc28 = v186
	v186 = loc94
	loc31 = v186
	v186 = 0xB<32>
	loc188 = v186
	// succ:  l001133FC
l001133FC:
	goto l00113413
	// succ:  l00113413
l001133FE:
	v186 = loc116
	loc6 = v186
	v186 = loc105
	loc11 = v186
	v186 = loc117
	loc28 = v186
	v186 = loc94
	loc31 = v186
	v186 = 0xB<32>
	loc188 = v186
	// succ:  l00113413
l00113413:
	// succ:  l00113414
l00113414:
	// succ:  l00113415
l00113415:
	goto l0011342D
	// succ:  l0011342D
l00113417:
	v186 = loc161
	loc6 = v186
	v186 = loc100
	loc11 = v186
	v186 = 0<32>
	loc28 = v186
	v186 = 0<32>
	loc31 = v186
	v186 = 0xB<32>
	loc188 = v186
	// succ:  l0011342D
l0011342D:
	// succ:  l0011342E
l0011342E:
	v186 = loc188
	v187 = 0xB<32>
	v188 = v186 == v187
	branch !v188 l00113A5D
	// succ:  l00113437 l00113A5D
l00113437:
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = 0x167<32>
	v187 = arg3
	v186 = invoke_ii(v186, v187)
	loc121 = v186
	v186 = Mem0[0x00140048<p32>:word32]
	loc122 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc122
	v187 = 1<32>
	v186 = v186 & v187
	loc123 = v186
	v186 = loc123
	branch !v186 l00113465
	// succ:  l00113457 l00113465
l00113457:
	v186 = loc28
	loc27 = v186
	v186 = loc31
	loc30 = v186
	v186 = 8<32>
	loc188 = v186
	goto l00113A5B
	// succ:  l00113A5B
l00113465:
	v186 = loc172
	v187 = loc121
	Mem0[v186:word32] = v187
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = 0x164<32>
	v187 = loc172
	v190 = 0x4C90<32>
	v186 = invoke_iii(v186, v187, v190)
	loc124 = v186
	v186 = Mem0[0x00140048<p32>:word32]
	loc125 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc125
	v187 = 1<32>
	v186 = v186 & v187
	loc126 = v186
	// succ:  l0011348E
l0011348E:
	v186 = loc126
	branch !v186 l001134A9
	// succ:  l00113494 l001134A9
l00113494:
	v186 = ___cxa_find_matching_catch_2()
	loc52 = v186
	v186 = Mem0[0x00140094<p32>:word32]
	loc53 = v186
	v186 = loc52
	loc16 = v186
	v186 = loc53
	loc17 = v186
	v186 = loc121
	loc89 = v186
	goto l00113A43
	// succ:  l00113A43
l001134A9:
	v186 = loc150
	v186 = Mem0[v186:word32]
	loc127 = v186
	v186 = loc127
	v187 = loc11
	v186 = v186 + v187
	loc128 = v186
	v186 = loc124
	v186 = Mem0[v186:word32]
	loc129 = v186
	v186 = loc129
	v187 = 0x30<32>
	v186 = v186 + v187
	loc130 = v186
	v186 = loc130
	v186 = Mem0[v186:word32]
	loc131 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc131
	v187 = loc124
	v190 = loc127
	v191 = loc128
	v192 = loc6
	v186 = invoke_iiiii(v186, v187, v190, v191, v192)
	v186 = Mem0[0x00140048<p32>:word32]
	loc132 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc132
	v187 = 1<32>
	v186 = v186 & v187
	loc133 = v186
	v186 = loc133
	branch !v186 l00113514
	// succ:  l001134FD l00113514
l001134FD:
	v186 = ___cxa_find_matching_catch_2()
	loc54 = v186
	v186 = Mem0[0x00140094<p32>:word32]
	loc56 = v186
	v186 = loc54
	loc16 = v186
	v186 = loc56
	loc17 = v186
	v186 = loc121
	loc89 = v186
	goto l00113A44
	// succ:  l00113A44
l00113514:
	v186 = loc11
	v187 = 0<32>
	v188 = v186 == v187
	loc134 = v188
	v186 = loc134
	branch !v186 l00113527
	// succ:  l00113521 l00113527
l00113521:
	v186 = 0<32>
	loc145 = v186
	goto l0011354E
	// succ:  l0011354E
l00113527:
	v186 = loc150
	v186 = Mem0[v186:word32]
	loc135 = v186
	v186 = loc135
	v193 = Mem0[v186:int8]
	v186 = CONVERT(v193, int8, word32)
	loc136 = v186
	v186 = loc136
	v187 = 0x18<32>
	v186 = v186 << v187
	v187 = 0x18<32>
	v186 = v186 >> v187
	v187 = 0x2D<32>
	v188 = v186 == v187
	loc137 = v188
	v186 = loc137
	loc145 = v186
	// succ:  l0011354E
l0011354E:
	v186 = loc66
	v194 = 0<64>
	Mem0[v186:word64] = v194
	v186 = loc66
	v187 = 8<32>
	v186 = v186 + v187
	v187 = 0<32>
	Mem0[v186:word32] = v187
	v186 = 0<32>
	loc7 = v186
	// succ:  l00113566
l00113566:
	v186 = loc7
	v187 = 3<32>
	v188 = v186 == v187
	loc183 = v188
	v186 = loc183
	branch !v186 l00113578
	// succ:  l00113575 l00113578
l00113575:
	goto l0011359A
	// succ:  l0011359A
l00113578:
	v186 = loc66
	v187 = loc7
	v190 = 2<32>
	v187 = v187 << v190
	v186 = v186 + v187
	loc138 = v186
	v186 = loc138
	v187 = 0<32>
	Mem0[v186:word32] = v187
	v186 = loc7
	v187 = 1<32>
	v186 = v186 + v187
	loc140 = v186
	v186 = loc140
	loc7 = v186
	goto l0011354E
	// succ:  l0011354E
l0011359A:
	v186 = loc77
	v194 = 0<64>
	Mem0[v186:word64] = v194
	v186 = loc77
	v187 = 8<32>
	v186 = v186 + v187
	v187 = 0<32>
	Mem0[v186:word32] = v187
	v186 = 0<32>
	loc8 = v186
	// succ:  l001135B3
l001135B3:
	v186 = loc8
	v187 = 3<32>
	v188 = v186 == v187
	loc184 = v188
	v186 = loc184
	branch !v186 l001135C5
	// succ:  l001135C2 l001135C5
l001135C2:
	goto l001135E7
	// succ:  l001135E7
l001135C5:
	v186 = loc77
	v187 = loc8
	v190 = 2<32>
	v187 = v187 << v190
	v186 = v186 + v187
	loc141 = v186
	v186 = loc141
	v187 = 0<32>
	Mem0[v186:word32] = v187
	v186 = loc8
	v187 = 1<32>
	v186 = v186 + v187
	loc142 = v186
	v186 = loc142
	loc8 = v186
	goto l0011359A
	// succ:  l0011359A
l001135E7:
	v186 = loc88
	v194 = 0<64>
	Mem0[v186:word64] = v194
	v186 = loc88
	v187 = 8<32>
	v186 = v186 + v187
	v187 = 0<32>
	Mem0[v186:word32] = v187
	v186 = 0<32>
	loc9 = v186
	// succ:  l00113600
l00113600:
	v186 = loc9
	v187 = 3<32>
	v188 = v186 == v187
	loc185 = v188
	v186 = loc185
	branch !v186 l00113612
	// succ:  l0011360F l00113612
l0011360F:
	goto l00113634
	// succ:  l00113634
l00113612:
	v186 = loc88
	v187 = loc9
	v190 = 2<32>
	v187 = v187 << v190
	v186 = v186 + v187
	loc143 = v186
	v186 = loc143
	v187 = 0<32>
	Mem0[v186:word32] = v187
	v186 = loc9
	v187 = 1<32>
	v186 = v186 + v187
	loc144 = v186
	v186 = loc144
	loc9 = v186
	goto l001135E7
	// succ:  l001135E7
l00113634:
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = 0x1B6<32>
	v187 = arg2
	v190 = loc145
	v191 = loc172
	v192 = loc33
	v195 = loc44
	v196 = loc55
	v197 = loc66
	v198 = loc77
	v199 = loc88
	v200 = loc95
	invoke_viiiiiiiiii(v186, v187, v190, v191, v192, v195, v196, v197, v198, v199, v200)
	v186 = Mem0[0x00140048<p32>:word32]
	loc146 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc146
	v187 = 1<32>
	v186 = v186 & v187
	loc147 = v186
	v186 = loc147
	branch !v186 l0011367D
	// succ:  l0011366C l0011367D
l0011366C:
	v186 = ___cxa_find_matching_catch_2()
	loc57 = v186
	v186 = Mem0[0x00140094<p32>:word32]
	loc58 = v186
	v186 = loc57
	loc14 = v186
	v186 = loc58
	loc15 = v186
	goto l00113A1F
	// succ:  l00113A1F
l0011367D:
	v186 = loc95
	v186 = Mem0[v186:word32]
	loc148 = v186
	v186 = loc11
	v187 = loc148
	v188 = v186 > v187
	loc149 = v188
	v186 = loc149
	branch !v186 l00113770
	// succ:  l00113693 l00113770
l00113693:
	v186 = loc11
	v187 = loc148
	v186 = v186 - v187
	loc151 = v186
	v186 = loc151
	v187 = 1<32>
	v186 = v186 << v187
	loc152 = v186
	v186 = loc88
	v187 = 8<32>
	v186 = v186 + v187
	loc153 = v186
	v186 = loc153
	v187 = 3<32>
	v186 = v186 + v187
	loc154 = v186
	v186 = loc154
	v201 = Mem0[v186:int8]
	v186 = CONVERT(v201, int8, word32)
	loc155 = v186
	v186 = loc155
	v187 = 0x18<32>
	v186 = v186 << v187
	v187 = 0x18<32>
	v186 = v186 >> v187
	v187 = 0<32>
	v188 = v186 < v187
	loc156 = v188
	v186 = loc88
	v187 = 4<32>
	v186 = v186 + v187
	loc157 = v186
	v186 = loc157
	v186 = Mem0[v186:word32]
	loc158 = v186
	v186 = loc155
	v187 = 0xFF<32>
	v186 = v186 & v187
	loc159 = v186
	v186 = loc156
	branch !v186 l001136F2
	// succ:  l001136EE l001136F2
l001136EE:
	v186 = loc158
	goto l001136F5
	// succ:  l001136F5
l001136F2:
	v186 = loc159
	// succ:  l001136F5
l001136F5:
	loc160 = v186
	v186 = loc77
	v187 = 8<32>
	v186 = v186 + v187
	loc162 = v186
	v186 = loc162
	v187 = 3<32>
	v186 = v186 + v187
	loc163 = v186
	v186 = loc163
	v202 = Mem0[v186:int8]
	v186 = CONVERT(v202, int8, word32)
	loc164 = v186
	v186 = loc164
	v187 = 0x18<32>
	v186 = v186 << v187
	v187 = 0x18<32>
	v186 = v186 >> v187
	v187 = 0<32>
	v188 = v186 < v187
	loc165 = v188
	v186 = loc77
	v187 = 4<32>
	v186 = v186 + v187
	loc166 = v186
	v186 = loc166
	v186 = Mem0[v186:word32]
	loc167 = v186
	v186 = loc164
	v187 = 0xFF<32>
	v186 = v186 & v187
	loc168 = v186
	v186 = loc165
	branch !v186 l00113746
	// succ:  l00113742 l00113746
l00113742:
	v186 = loc167
	goto l00113749
	// succ:  l00113749
l00113746:
	v186 = loc168
	// succ:  l00113749
l00113749:
	loc169 = v186
	v186 = loc152
	v187 = 1<32>
	v186 = v186 | v187
	loc170 = v186
	v186 = loc160
	v187 = loc170
	v186 = v186 + v187
	loc171 = v186
	v186 = loc171
	v187 = loc169
	v186 = v186 + v187
	loc173 = v186
	v186 = loc173
	loc21 = v186
	goto l0011381D
	// succ:  l0011381D
l00113770:
	v186 = loc88
	v187 = 8<32>
	v186 = v186 + v187
	loc174 = v186
	v186 = loc174
	v187 = 3<32>
	v186 = v186 + v187
	loc175 = v186
	v186 = loc175
	v203 = Mem0[v186:int8]
	v186 = CONVERT(v203, int8, word32)
	loc176 = v186
	v186 = loc176
	v187 = 0x18<32>
	v186 = v186 << v187
	v187 = 0x18<32>
	v186 = v186 >> v187
	v187 = 0<32>
	v188 = v186 < v187
	loc177 = v188
	v186 = loc88
	v187 = 4<32>
	v186 = v186 + v187
	loc178 = v186
	v186 = loc178
	v186 = Mem0[v186:word32]
	loc179 = v186
	v186 = loc176
	v187 = 0xFF<32>
	v186 = v186 & v187
	loc180 = v186
	v186 = loc177
	branch !v186 l001137BD
	// succ:  l001137B9 l001137BD
l001137B9:
	v186 = loc179
	goto l001137C0
	// succ:  l001137C0
l001137BD:
	v186 = loc180
	// succ:  l001137C0
l001137C0:
	loc181 = v186
	v186 = loc77
	v187 = 8<32>
	v186 = v186 + v187
	loc182 = v186
	v186 = loc182
	v187 = 3<32>
	v186 = v186 + v187
	loc34 = v186
	v186 = loc34
	v204 = Mem0[v186:int8]
	v186 = CONVERT(v204, int8, word32)
	loc35 = v186
	v186 = loc35
	v187 = 0x18<32>
	v186 = v186 << v187
	v187 = 0x18<32>
	v186 = v186 >> v187
	v187 = 0<32>
	v188 = v186 < v187
	loc36 = v188
	v186 = loc77
	v187 = 4<32>
	v186 = v186 + v187
	loc37 = v186
	v186 = loc37
	v186 = Mem0[v186:word32]
	loc38 = v186
	v186 = loc35
	v187 = 0xFF<32>
	v186 = v186 & v187
	loc39 = v186
	v186 = loc36
	branch !v186 l00113805
	// succ:  l00113802 l00113805
l00113802:
	v186 = loc38
	goto l00113807
	// succ:  l00113807
l00113805:
	v186 = loc39
	// succ:  l00113807
l00113807:
	loc40 = v186
	v186 = loc181
	v187 = 2<32>
	v186 = v186 + v187
	loc41 = v186
	v186 = loc41
	v187 = loc40
	v186 = v186 + v187
	loc42 = v186
	v186 = loc42
	loc21 = v186
	// succ:  l0011381D
l0011381D:
	v186 = loc21
	v187 = loc148
	v186 = v186 + v187
	loc43 = v186
	v186 = loc43
	v187 = 0x64<32>
	v188 = v186 >u v187
	loc45 = v188
	// succ:  l0011382E
l0011382E:
	v186 = loc45
	branch !v186 l001138B4
	// succ:  l00113834 l001138B4
l00113834:
	v186 = loc43
	v187 = 2<32>
	v186 = v186 << v187
	loc46 = v186
	v186 = loc46
	v186 = _malloc(v186)
	loc47 = v186
	v186 = loc47
	loc48 = v186
	v186 = loc47
	v187 = 0<32>
	v188 = v186 == v187
	loc49 = v188
	v186 = loc49
	branch !v186 l001138A0
	// succ:  l00113851 l001138A0
l00113851:
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = 0x18A<32>
	invoke_v(v186)
	v186 = Mem0[0x00140048<p32>:word32]
	loc50 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc50
	v187 = 1<32>
	v186 = v186 & v187
	loc51 = v186
	v186 = loc51
	branch !v186 l00113884
	// succ:  l0011386D l00113884
l0011386D:
	v186 = ___cxa_find_matching_catch_2()
	loc59 = v186
	v186 = Mem0[0x00140094<p32>:word32]
	loc60 = v186
	v186 = loc59
	loc12 = v186
	v186 = loc60
	loc13 = v186
	v186 = loc48
	loc26 = v186
	goto l001138C7
	// succ:  l001138C7
l00113884:
	v186 = loc95
	v186 = Mem0[v186:word32]
	loc23 = v186
	v186 = 0<32>
	loc10 = v186
	v186 = loc48
	loc25 = v186
	v186 = loc23
	loc67 = v186
	v186 = 0x25<32>
	loc188 = v186
	goto l001138C7
	// succ:  l001138C7
l0011389E:
	goto l001138B2
	// succ:  l001138B2
l001138A0:
	v186 = loc47
	loc10 = v186
	v186 = loc48
	loc25 = v186
	v186 = loc148
	loc67 = v186
	v186 = 0x25<32>
	loc188 = v186
	// succ:  l001138B2
l001138B2:
	goto l001138C6
	// succ:  l001138C6
l001138B4:
	v186 = loc96
	loc10 = v186
	v186 = 0<32>
	loc25 = v186
	v186 = loc148
	loc67 = v186
	v186 = 0x25<32>
	loc188 = v186
	// succ:  l001138C6
l001138C6:
	// succ:  l001138C7
l001138C7:
	v186 = loc188
	v187 = 0x25<32>
	v188 = v186 == v187
	branch !v188 l00113A01
	// succ:  l001138D0 l00113A01
l001138D0:
	v186 = arg3
	v187 = 4<32>
	v186 = v186 + v187
	loc61 = v186
	v186 = loc61
	v186 = Mem0[v186:word32]
	loc62 = v186
	v186 = loc6
	v187 = loc11
	v190 = 2<32>
	v187 = v187 << v190
	v186 = v186 + v187
	loc63 = v186
	v186 = loc44
	v186 = Mem0[v186:word32]
	loc64 = v186
	v186 = loc55
	v186 = Mem0[v186:word32]
	loc65 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = 0x1B7<32>
	v187 = loc10
	v190 = loc97
	v191 = loc98
	v192 = loc62
	v195 = loc6
	v196 = loc63
	v197 = loc124
	v198 = loc145
	v199 = loc33
	v200 = loc64
	v205 = loc65
	v206 = loc66
	v207 = loc77
	v208 = loc88
	v209 = loc67
	invoke_viiiiiiiiiiiiiii(v186, v187, v190, v191, v192, v195, v196, v197, v198, v199, v200, v205, v206, v207, v208, v209)
	v186 = Mem0[0x00140048<p32>:word32]
	loc68 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc68
	v187 = 1<32>
	v186 = v186 & v187
	loc69 = v186
	v186 = loc69
	v188 = v186 == 0<32>
	branch !v188 l001139EC
	// succ:  l00113932 l001139EC
l00113932:
	v186 = arg1
	v186 = Mem0[v186:word32]
	loc70 = v186
	v186 = loc99
	v187 = loc70
	Mem0[v186:word32] = v187
	v186 = loc97
	v186 = Mem0[v186:word32]
	loc71 = v186
	v186 = loc98
	v186 = Mem0[v186:word32]
	loc72 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc20
	v187 = loc99
	v187 = Mem0[v187:word32]
	Mem0[v186:word32] = v187
	v186 = 0x194<32>
	v187 = loc20
	v190 = loc10
	v191 = loc71
	v192 = loc72
	v195 = arg3
	v196 = arg4
	v186 = invoke_iiiiiii(v186, v187, v190, v191, v192, v195, v196)
	loc73 = v186
	v186 = Mem0[0x00140048<p32>:word32]
	loc74 = v186
	v186 = 0<32>
	Mem0[0x00140048<p32>:word32] = v186
	v186 = loc74
	v187 = 1<32>
	v186 = v186 & v187
	loc75 = v186
	v186 = loc75
	v188 = v186 == 0<32>
	branch !v188 l001139EB
	// succ:  l00113983 l001139EB
l00113983:
	v186 = loc25
	v187 = 0<32>
	v188 = v186 == v187
	loc76 = v188
	v186 = loc76
	v188 = v186 == 0<32>
	branch !v188 l00113999
	// succ:  l0011398F l00113999
l0011398F:
	v186 = loc25
	loc78 = v186
	v186 = loc78
	_free(v186)
	// succ:  l00113999
l00113999:
	v186 = loc88
	fn0011C7BA(v186)
	v186 = loc77
	fn0011C7BA(v186)
	v186 = loc66
	fn0011BAF7(v186)
	v186 = loc172
	v186 = Mem0[v186:word32]
	loc79 = v186
	v186 = loc79
	v186 = fn0011B43F(v186)
	v186 = loc28
	v187 = 0<32>
	v188 = v186 == v187
	loc80 = v188
	v186 = loc80
	v188 = v186 == 0<32>
	branch !v188 l001139CC
	// succ:  l001139C2 l001139CC
l001139C2:
	v186 = loc28
	loc81 = v186
	v186 = loc81
	_free(v186)
	// succ:  l001139CC
l001139CC:
	v186 = loc31
	v187 = 0<32>
	v188 = v186 == v187
	loc82 = v188
	v186 = loc82
	v188 = v186 == 0<32>
	branch !v188 l001139E2
	// succ:  l001139D8 l001139E2
l001139D8:
	v186 = loc31
	loc83 = v186
	v186 = loc83
	_free(v186)
	// succ:  l001139E2
l001139E2:
	v186 = loc189
	Mem0[0x00140030<p32>:word32] = v186
	v186 = loc73
	return v186
	// succ:  fn001131F3_exit
l001139EB:
	// succ:  l001139EC
l001139EC:
	v186 = ___cxa_find_matching_catch_2()
	loc84 = v186
	v186 = Mem0[0x00140094<p32>:word32]
	loc85 = v186
	v186 = loc84
	loc12 = v186
	v186 = loc85
	loc13 = v186
	v186 = loc25
	loc26 = v186
	// succ:  l00113A01
l00113A01:
	v186 = loc26
	v187 = 0<32>
	v188 = v186 == v187
	loc86 = v188
	v186 = loc86
	v188 = v186 == 0<32>
	branch !v188 l00113A17
	// succ:  l00113A0D l00113A17
l00113A0D:
	v186 = loc26
	loc87 = v186
	v186 = loc87
	_free(v186)
	// succ:  l00113A17
l00113A17:
	v186 = loc12
	loc14 = v186
	v186 = loc13
	loc15 = v186
	// succ:  l00113A1F
l00113A1F:
	v186 = loc88
	fn0011C7BA(v186)
	v186 = loc77
	fn0011C7BA(v186)
	v186 = loc66
	fn0011BAF7(v186)
	v186 = loc172
	v186 = Mem0[v186:word32]
	loc24 = v186
	v186 = loc14
	loc16 = v186
	v186 = loc15
	loc17 = v186
	v186 = loc24
	loc89 = v186
	// succ:  l00113A43
l00113A43:
	// succ:  l00113A44
l00113A44:
	v186 = loc89
	v186 = fn0011B43F(v186)
	v186 = loc16
	loc18 = v186
	v186 = loc17
	loc19 = v186
	v186 = loc28
	loc29 = v186
	v186 = loc31
	loc32 = v186
	// succ:  l00113A5B
l00113A5B:
	// succ:  l00113A5D
l00113A5D:
	v186 = loc188
	v187 = 8<32>
	v188 = v186 == v187
	branch !v188 l00113A7E
	// succ:  l00113A65 l00113A7E
l00113A65:
	v186 = ___cxa_find_matching_catch_2()
	loc113 = v186
	v186 = Mem0[0x00140094<p32>:word32]
	loc114 = v186
	v186 = loc113
	loc18 = v186
	v186 = loc114
	loc19 = v186
	v186 = loc27
	loc29 = v186
	v186 = loc30
	loc32 = v186
	// succ:  l00113A7E
l00113A7E:
	v186 = loc29
	v187 = 0<32>
	v188 = v186 == v187
	loc90 = v188
	v186 = loc90
	v188 = v186 == 0<32>
	branch !v188 l00113A94
	// succ:  l00113A8A l00113A94
l00113A8A:
	v186 = loc29
	loc91 = v186
	v186 = loc91
	_free(v186)
	// succ:  l00113A94
l00113A94:
	v186 = loc32
	v187 = 0<32>
	v188 = v186 == v187
	loc92 = v188
	v186 = loc92
	v188 = v186 == 0<32>
	branch !v188 l00113AAA
	// succ:  l00113AA0 l00113AAA
l00113AA0:
	v186 = loc32
	loc93 = v186
	v186 = loc93
	_free(v186)
	// succ:  l00113AAA
l00113AAA:
	v186 = loc18
	___resumeException(v186)
	v186 = 0<32>
	return v186
	// succ:  fn001131F3_exit
l00113AB1:
	return v186
	// succ:  fn001131F3_exit
fn001131F3_exit:


// fn00113AB3
// Return size: 0
word32 fn00113AB3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00113AB3_entry:
	// succ:  l00113AB3
l00113AB3:
	v159 = Mem0[0x00140030<p32>:word32]
	loc162 = v159
	v159 = Mem0[0x00140030<p32>:word32]
	v160 = 0x1E0<32>
	v159 = v159 + v160
	Mem0[0x00140030<p32>:word32] = v159
	v159 = Mem0[0x00140030<p32>:word32]
	v160 = Mem0[0x00140034<p32>:word32]
	v161 = v159 >= v160
	branch !v161 l00113ACF
	// succ:  l00113AC9 l00113ACF
l00113AC9:
	v159 = 0x1E0<32>
	abortStackOverflow(v159)
	// succ:  l00113ACF
l00113ACF:
	v159 = loc162
	v160 = 0x1D4<32>
	v159 = v159 + v160
	loc16 = v159
	v159 = loc162
	v160 = 0x1D0<32>
	v159 = v159 + v160
	loc114 = v159
	v159 = loc162
	v160 = 0x1D8<32>
	v159 = v159 + v160
	loc125 = v159
	v159 = loc162
	v160 = 0x1CC<32>
	v159 = v159 + v160
	loc136 = v159
	v159 = loc162
	v160 = 0x1C8<32>
	v159 = v159 + v160
	loc147 = v159
	v159 = loc162
	v160 = 0x1BC<32>
	v159 = v159 + v160
	loc23 = v159
	v159 = loc162
	v160 = 0x1B0<32>
	v159 = v159 + v160
	loc34 = v159
	v159 = loc162
	v160 = 0x1A4<32>
	v159 = v159 + v160
	loc45 = v159
	v159 = loc162
	v160 = 0x1A0<32>
	v159 = v159 + v160
	loc56 = v159
	v159 = loc162
	v160 = 0x10<32>
	v159 = v159 + v160
	loc67 = v159
	v159 = loc162
	v160 = 8<32>
	v159 = v159 + v160
	loc69 = v159
	v159 = loc162
	v160 = 4<32>
	v159 = v159 + v160
	loc70 = v159
	v159 = loc162
	loc71 = v159
	v159 = arg3
	v159 = fn000E64CA(v159)
	loc72 = v159
	v159 = loc114
	v160 = loc72
	Mem0[v159:word32] = v160
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = 0x164<32>
	v160 = loc114
	v162 = 0x4C90<32>
	v159 = invoke_iii(v159, v160, v162)
	loc73 = v159
	v159 = Mem0[0x00140048<p32>:word32]
	loc74 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = loc74
	v160 = 1<32>
	v159 = v159 & v160
	loc75 = v159
	// succ:  l00113B6D
l00113B6D:
	v159 = loc75
	branch !v159 l00113B84
	// succ:  l00113B73 l00113B84
l00113B73:
	v159 = ___cxa_find_matching_catch_2()
	loc28 = v159
	v159 = Mem0[0x00140094<p32>:word32]
	loc29 = v159
	v159 = loc28
	loc14 = v159
	v159 = loc29
	loc15 = v159
	goto l00114178
	// succ:  l00114178
l00113B84:
	v159 = arg5
	v160 = 8<32>
	v159 = v159 + v160
	loc76 = v159
	v159 = loc76
	v160 = 3<32>
	v159 = v159 + v160
	loc77 = v159
	v159 = loc77
	v163 = Mem0[v159:int8]
	v159 = CONVERT(v163, int8, word32)
	loc78 = v159
	v159 = loc78
	v160 = 0x18<32>
	v159 = v159 << v160
	v160 = 0x18<32>
	v159 = v159 >> v160
	v160 = 0<32>
	v161 = v159 < v160
	loc79 = v161
	v159 = arg5
	v160 = 4<32>
	v159 = v159 + v160
	loc80 = v159
	v159 = loc80
	v159 = Mem0[v159:word32]
	loc81 = v159
	v159 = loc78
	v160 = 0xFF<32>
	v159 = v159 & v160
	loc82 = v159
	v159 = loc79
	branch !v159 l00113BC3
	// succ:  l00113BC0 l00113BC3
l00113BC0:
	v159 = loc81
	goto l00113BC5
	// succ:  l00113BC5
l00113BC3:
	v159 = loc82
	// succ:  l00113BC5
l00113BC5:
	loc83 = v159
	v159 = loc83
	v160 = 0<32>
	v161 = v159 == v160
	loc84 = v161
	// succ:  l00113BCF
l00113BCF:
	v159 = loc84
	branch !v159 l00113BDA
	// succ:  l00113BD5 l00113BDA
l00113BD5:
	v159 = 0<32>
	loc101 = v159
	goto l00113C4B
	// succ:  l00113C4B
l00113BDA:
	v159 = arg5
	v159 = Mem0[v159:word32]
	loc85 = v159
	v159 = loc79
	branch !v159 l00113BE8
	// succ:  l00113BE5 l00113BE8
l00113BE5:
	v159 = loc85
	goto l00113BEA
	// succ:  l00113BEA
l00113BE8:
	v159 = arg5
	// succ:  l00113BEA
l00113BEA:
	loc86 = v159
	v159 = loc86
	v159 = Mem0[v159:word32]
	loc87 = v159
	v159 = loc73
	v159 = Mem0[v159:word32]
	loc88 = v159
	v159 = loc88
	v160 = 0x2C<32>
	v159 = v159 + v160
	loc89 = v159
	v159 = loc89
	v159 = Mem0[v159:word32]
	loc90 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = loc90
	v160 = loc73
	v162 = 0x2D<32>
	v159 = invoke_iii(v159, v160, v162)
	loc91 = v159
	v159 = Mem0[0x00140048<p32>:word32]
	loc92 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = loc92
	v160 = 1<32>
	v159 = v159 & v160
	loc93 = v159
	v159 = loc93
	branch !v159 l00113C3D
	// succ:  l00113C2A l00113C3D
l00113C2A:
	v159 = ___cxa_find_matching_catch_2()
	loc30 = v159
	v159 = Mem0[0x00140094<p32>:word32]
	loc31 = v159
	v159 = loc30
	loc14 = v159
	v159 = loc31
	loc15 = v159
	goto l00114179
	// succ:  l00114179
l00113C3D:
	v159 = loc87
	v160 = loc91
	v161 = v159 == v160
	loc94 = v161
	v159 = loc94
	loc101 = v159
	goto l00113C4C
	// succ:  l00113C4C
l00113C4A:
	// succ:  l00113C4B
l00113C4B:
	// succ:  l00113C4C
l00113C4C:
	v159 = loc23
	v164 = 0<64>
	Mem0[v159:word64] = v164
	v159 = loc23
	v160 = 8<32>
	v159 = v159 + v160
	v160 = 0<32>
	Mem0[v159:word32] = v160
	v159 = 0<32>
	loc7 = v159
	// succ:  l00113C64
l00113C64:
	v159 = loc7
	v160 = 3<32>
	v161 = v159 == v160
	loc158 = v161
	v159 = loc158
	branch !v159 l00113C76
	// succ:  l00113C73 l00113C76
l00113C73:
	goto l00113C94
	// succ:  l00113C94
l00113C76:
	v159 = loc23
	v160 = loc7
	v162 = 2<32>
	v160 = v160 << v162
	v159 = v159 + v160
	loc95 = v159
	v159 = loc95
	v160 = 0<32>
	Mem0[v159:word32] = v160
	v159 = loc7
	v160 = 1<32>
	v159 = v159 + v160
	loc96 = v159
	v159 = loc96
	loc7 = v159
	goto l00113C4C
	// succ:  l00113C4C
l00113C94:
	v159 = loc34
	v164 = 0<64>
	Mem0[v159:word64] = v164
	v159 = loc34
	v160 = 8<32>
	v159 = v159 + v160
	v160 = 0<32>
	Mem0[v159:word32] = v160
	v159 = 0<32>
	loc8 = v159
	// succ:  l00113CAD
l00113CAD:
	v159 = loc8
	v160 = 3<32>
	v161 = v159 == v160
	loc159 = v161
	v159 = loc159
	branch !v159 l00113CBF
	// succ:  l00113CBC l00113CBF
l00113CBC:
	goto l00113CDD
	// succ:  l00113CDD
l00113CBF:
	v159 = loc34
	v160 = loc8
	v162 = 2<32>
	v160 = v160 << v162
	v159 = v159 + v160
	loc97 = v159
	v159 = loc97
	v160 = 0<32>
	Mem0[v159:word32] = v160
	v159 = loc8
	v160 = 1<32>
	v159 = v159 + v160
	loc98 = v159
	v159 = loc98
	loc8 = v159
	goto l00113C94
	// succ:  l00113C94
l00113CDD:
	v159 = loc45
	v164 = 0<64>
	Mem0[v159:word64] = v164
	v159 = loc45
	v160 = 8<32>
	v159 = v159 + v160
	v160 = 0<32>
	Mem0[v159:word32] = v160
	v159 = 0<32>
	loc9 = v159
	// succ:  l00113CF6
l00113CF6:
	v159 = loc9
	v160 = 3<32>
	v161 = v159 == v160
	loc160 = v161
	v159 = loc160
	branch !v159 l00113D08
	// succ:  l00113D05 l00113D08
l00113D05:
	goto l00113D26
	// succ:  l00113D26
l00113D08:
	v159 = loc45
	v160 = loc9
	v162 = 2<32>
	v160 = v160 << v162
	v159 = v159 + v160
	loc99 = v159
	v159 = loc99
	v160 = 0<32>
	Mem0[v159:word32] = v160
	v159 = loc9
	v160 = 1<32>
	v159 = v159 + v160
	loc100 = v159
	v159 = loc100
	loc9 = v159
	goto l00113CDD
	// succ:  l00113CDD
l00113D26:
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = 0x1B6<32>
	v160 = arg2
	v162 = loc101
	v165 = loc114
	v166 = loc125
	v167 = loc136
	v168 = loc147
	v169 = loc23
	v170 = loc34
	v171 = loc45
	v172 = loc56
	invoke_viiiiiiiiii(v159, v160, v162, v165, v166, v167, v168, v169, v170, v171, v172)
	v159 = Mem0[0x00140048<p32>:word32]
	loc102 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = loc102
	v160 = 1<32>
	v159 = v159 & v160
	loc103 = v159
	v159 = loc103
	branch !v159 l00113D6B
	// succ:  l00113D5A l00113D6B
l00113D5A:
	v159 = ___cxa_find_matching_catch_2()
	loc32 = v159
	v159 = Mem0[0x00140094<p32>:word32]
	loc33 = v159
	v159 = loc32
	loc12 = v159
	v159 = loc33
	loc13 = v159
	goto l00114160
	// succ:  l00114160
l00113D6B:
	v159 = loc77
	v173 = Mem0[v159:int8]
	v159 = CONVERT(v173, int8, word32)
	loc104 = v159
	v159 = loc104
	v160 = 0x18<32>
	v159 = v159 << v160
	v160 = 0x18<32>
	v159 = v159 >> v160
	v160 = 0<32>
	v161 = v159 < v160
	loc105 = v161
	v159 = loc80
	v159 = Mem0[v159:word32]
	loc106 = v159
	v159 = loc104
	v160 = 0xFF<32>
	v159 = v159 & v160
	loc107 = v159
	v159 = loc105
	branch !v159 l00113D95
	// succ:  l00113D92 l00113D95
l00113D92:
	v159 = loc106
	goto l00113D97
	// succ:  l00113D97
l00113D95:
	v159 = loc107
	// succ:  l00113D97
l00113D97:
	loc108 = v159
	v159 = loc56
	v159 = Mem0[v159:word32]
	loc109 = v159
	v159 = loc108
	v160 = loc109
	v161 = v159 > v160
	loc110 = v161
	v159 = loc110
	branch !v159 l00113E68
	// succ:  l00113DAC l00113E68
l00113DAC:
	v159 = loc108
	v160 = loc109
	v159 = v159 - v160
	loc111 = v159
	v159 = loc111
	v160 = 1<32>
	v159 = v159 << v160
	loc112 = v159
	v159 = loc45
	v160 = 8<32>
	v159 = v159 + v160
	loc113 = v159
	v159 = loc113
	v160 = 3<32>
	v159 = v159 + v160
	loc115 = v159
	v159 = loc115
	v174 = Mem0[v159:int8]
	v159 = CONVERT(v174, int8, word32)
	loc116 = v159
	v159 = loc116
	v160 = 0x18<32>
	v159 = v159 << v160
	v160 = 0x18<32>
	v159 = v159 >> v160
	v160 = 0<32>
	v161 = v159 < v160
	loc117 = v161
	v159 = loc45
	v160 = 4<32>
	v159 = v159 + v160
	loc118 = v159
	v159 = loc118
	v159 = Mem0[v159:word32]
	loc119 = v159
	v159 = loc116
	v160 = 0xFF<32>
	v159 = v159 & v160
	loc120 = v159
	v159 = loc117
	branch !v159 l00113DF9
	// succ:  l00113DF6 l00113DF9
l00113DF6:
	v159 = loc119
	goto l00113DFB
	// succ:  l00113DFB
l00113DF9:
	v159 = loc120
	// succ:  l00113DFB
l00113DFB:
	loc121 = v159
	v159 = loc34
	v160 = 8<32>
	v159 = v159 + v160
	loc122 = v159
	v159 = loc122
	v160 = 3<32>
	v159 = v159 + v160
	loc123 = v159
	v159 = loc123
	v175 = Mem0[v159:int8]
	v159 = CONVERT(v175, int8, word32)
	loc124 = v159
	v159 = loc124
	v160 = 0x18<32>
	v159 = v159 << v160
	v160 = 0x18<32>
	v159 = v159 >> v160
	v160 = 0<32>
	v161 = v159 < v160
	loc126 = v161
	v159 = loc34
	v160 = 4<32>
	v159 = v159 + v160
	loc127 = v159
	v159 = loc127
	v159 = Mem0[v159:word32]
	loc128 = v159
	v159 = loc124
	v160 = 0xFF<32>
	v159 = v159 & v160
	loc129 = v159
	v159 = loc126
	branch !v159 l00113E40
	// succ:  l00113E3C l00113E40
l00113E3C:
	v159 = loc128
	goto l00113E43
	// succ:  l00113E43
l00113E40:
	v159 = loc129
	// succ:  l00113E43
l00113E43:
	loc130 = v159
	v159 = loc112
	v160 = 1<32>
	v159 = v159 | v160
	loc131 = v159
	v159 = loc121
	v160 = loc131
	v159 = v159 + v160
	loc132 = v159
	v159 = loc132
	v160 = loc130
	v159 = v159 + v160
	loc133 = v159
	v159 = loc133
	loc17 = v159
	goto l00113F28
	// succ:  l00113F28
l00113E68:
	v159 = loc45
	v160 = 8<32>
	v159 = v159 + v160
	loc134 = v159
	v159 = loc134
	v160 = 3<32>
	v159 = v159 + v160
	loc135 = v159
	v159 = loc135
	v176 = Mem0[v159:int8]
	v159 = CONVERT(v176, int8, word32)
	loc137 = v159
	v159 = loc137
	v160 = 0x18<32>
	v159 = v159 << v160
	v160 = 0x18<32>
	v159 = v159 >> v160
	v160 = 0<32>
	v161 = v159 < v160
	loc138 = v161
	v159 = loc45
	v160 = 4<32>
	v159 = v159 + v160
	loc139 = v159
	v159 = loc139
	v159 = Mem0[v159:word32]
	loc140 = v159
	v159 = loc137
	v160 = 0xFF<32>
	v159 = v159 & v160
	loc141 = v159
	v159 = loc138
	branch !v159 l00113EB5
	// succ:  l00113EB1 l00113EB5
l00113EB1:
	v159 = loc140
	goto l00113EB8
	// succ:  l00113EB8
l00113EB5:
	v159 = loc141
	// succ:  l00113EB8
l00113EB8:
	loc142 = v159
	v159 = loc34
	v160 = 8<32>
	v159 = v159 + v160
	loc143 = v159
	v159 = loc143
	v160 = 3<32>
	v159 = v159 + v160
	loc144 = v159
	v159 = loc144
	v177 = Mem0[v159:int8]
	v159 = CONVERT(v177, int8, word32)
	loc145 = v159
	v159 = loc145
	v160 = 0x18<32>
	v159 = v159 << v160
	v160 = 0x18<32>
	v159 = v159 >> v160
	v160 = 0<32>
	v161 = v159 < v160
	loc146 = v161
	v159 = loc34
	v160 = 4<32>
	v159 = v159 + v160
	loc148 = v159
	v159 = loc148
	v159 = Mem0[v159:word32]
	loc149 = v159
	v159 = loc145
	v160 = 0xFF<32>
	v159 = v159 & v160
	loc150 = v159
	v159 = loc146
	branch !v159 l00113F09
	// succ:  l00113F05 l00113F09
l00113F05:
	v159 = loc149
	goto l00113F0C
	// succ:  l00113F0C
l00113F09:
	v159 = loc150
	// succ:  l00113F0C
l00113F0C:
	loc151 = v159
	v159 = loc142
	v160 = 2<32>
	v159 = v159 + v160
	loc152 = v159
	v159 = loc152
	v160 = loc151
	v159 = v159 + v160
	loc153 = v159
	v159 = loc153
	loc17 = v159
	// succ:  l00113F28
l00113F28:
	v159 = loc17
	v160 = loc109
	v159 = v159 + v160
	loc154 = v159
	v159 = loc154
	v160 = 0x64<32>
	v161 = v159 >u v160
	loc155 = v161
	// succ:  l00113F3B
l00113F3B:
	v159 = loc155
	branch !v159 l00113FE6
	// succ:  l00113F42 l00113FE6
l00113F42:
	v159 = loc154
	v160 = 2<32>
	v159 = v159 << v160
	loc156 = v159
	v159 = loc156
	v159 = _malloc(v159)
	loc157 = v159
	v159 = loc157
	loc24 = v159
	v159 = loc157
	v160 = 0<32>
	v161 = v159 == v160
	loc25 = v161
	v159 = loc25
	branch !v159 l00113FCA
	// succ:  l00113F65 l00113FCA
l00113F65:
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = 0x18A<32>
	invoke_v(v159)
	v159 = Mem0[0x00140048<p32>:word32]
	loc26 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = loc26
	v160 = 1<32>
	v159 = v159 & v160
	loc27 = v159
	v159 = loc27
	branch !v159 l00113F98
	// succ:  l00113F81 l00113F98
l00113F81:
	v159 = ___cxa_find_matching_catch_2()
	loc35 = v159
	v159 = Mem0[0x00140094<p32>:word32]
	loc36 = v159
	v159 = loc35
	loc6 = v159
	v159 = loc36
	loc11 = v159
	v159 = loc24
	loc22 = v159
	goto l00114000
	// succ:  l00114000
l00113F98:
	v159 = loc77
	v178 = Mem0[v159:int8]
	v159 = CONVERT(v178, int8, word32)
	loc18 = v159
	v159 = loc80
	v159 = Mem0[v159:word32]
	loc19 = v159
	v159 = loc56
	v159 = Mem0[v159:word32]
	loc20 = v159
	v159 = 0<32>
	loc10 = v159
	v159 = loc24
	loc21 = v159
	v159 = loc18
	loc40 = v159
	v159 = loc19
	loc46 = v159
	v159 = loc20
	loc50 = v159
	v159 = 0x1A<32>
	loc161 = v159
	goto l00114000
	// succ:  l00114000
l00113FC8:
	goto l00113FE4
	// succ:  l00113FE4
l00113FCA:
	v159 = loc157
	loc10 = v159
	v159 = loc24
	loc21 = v159
	v159 = loc104
	loc40 = v159
	v159 = loc106
	loc46 = v159
	v159 = loc109
	loc50 = v159
	v159 = 0x1A<32>
	loc161 = v159
	// succ:  l00113FE4
l00113FE4:
	goto l00113FFF
	// succ:  l00113FFF
l00113FE6:
	v159 = loc67
	loc10 = v159
	v159 = 0<32>
	loc21 = v159
	v159 = loc104
	loc40 = v159
	v159 = loc106
	loc46 = v159
	v159 = loc109
	loc50 = v159
	v159 = 0x1A<32>
	loc161 = v159
	// succ:  l00113FFF
l00113FFF:
	// succ:  l00114000
l00114000:
	v159 = loc161
	v160 = 0x1A<32>
	v161 = v159 == v160
	branch !v161 l00114142
	// succ:  l00114009 l00114142
l00114009:
	v159 = arg3
	v160 = 4<32>
	v159 = v159 + v160
	loc37 = v159
	v159 = loc37
	v159 = Mem0[v159:word32]
	loc38 = v159
	v159 = loc40
	v160 = 0x18<32>
	v159 = v159 << v160
	v160 = 0x18<32>
	v159 = v159 >> v160
	v160 = 0<32>
	v161 = v159 < v160
	loc39 = v161
	v159 = arg5
	v159 = Mem0[v159:word32]
	loc41 = v159
	v159 = loc39
	branch !v159 l00114032
	// succ:  l0011402F l00114032
l0011402F:
	v159 = loc41
	goto l00114034
	// succ:  l00114034
l00114032:
	v159 = arg5
	// succ:  l00114034
l00114034:
	loc42 = v159
	v159 = loc40
	v160 = 0xFF<32>
	v159 = v159 & v160
	loc43 = v159
	v159 = loc39
	branch !v159 l00114046
	// succ:  l00114043 l00114046
l00114043:
	v159 = loc46
	goto l00114048
	// succ:  l00114048
l00114046:
	v159 = loc43
	// succ:  l00114048
l00114048:
	loc44 = v159
	v159 = loc42
	v160 = loc44
	v162 = 2<32>
	v160 = v160 << v162
	v159 = v159 + v160
	loc47 = v159
	v159 = loc136
	v159 = Mem0[v159:word32]
	loc48 = v159
	v159 = loc147
	v159 = Mem0[v159:word32]
	loc49 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = 0x1B7<32>
	v160 = loc10
	v162 = loc69
	v165 = loc70
	v166 = loc38
	v167 = loc42
	v168 = loc47
	v169 = loc73
	v170 = loc101
	v171 = loc125
	v172 = loc48
	v179 = loc49
	v180 = loc23
	v181 = loc34
	v182 = loc45
	v183 = loc50
	invoke_viiiiiiiiiiiiiii(v159, v160, v162, v165, v166, v167, v168, v169, v170, v171, v172, v179, v180, v181, v182, v183)
	v159 = Mem0[0x00140048<p32>:word32]
	loc51 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = loc51
	v160 = 1<32>
	v159 = v159 & v160
	loc52 = v159
	v159 = loc52
	v161 = v159 == 0<32>
	branch !v161 l0011412D
	// succ:  l001140A0 l0011412D
l001140A0:
	v159 = arg1
	v159 = Mem0[v159:word32]
	loc53 = v159
	v159 = loc71
	v160 = loc53
	Mem0[v159:word32] = v160
	v159 = loc69
	v159 = Mem0[v159:word32]
	loc54 = v159
	v159 = loc70
	v159 = Mem0[v159:word32]
	loc55 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = loc16
	v160 = loc71
	v160 = Mem0[v160:word32]
	Mem0[v159:word32] = v160
	v159 = 0x194<32>
	v160 = loc16
	v162 = loc10
	v165 = loc54
	v166 = loc55
	v167 = arg3
	v168 = arg4
	v159 = invoke_iiiiiii(v159, v160, v162, v165, v166, v167, v168)
	loc57 = v159
	v159 = Mem0[0x00140048<p32>:word32]
	loc58 = v159
	v159 = 0<32>
	Mem0[0x00140048<p32>:word32] = v159
	v159 = loc58
	v160 = 1<32>
	v159 = v159 & v160
	loc59 = v159
	v159 = loc59
	v161 = v159 == 0<32>
	branch !v161 l0011412C
	// succ:  l001140F1 l0011412C
l001140F1:
	v159 = loc21
	v160 = 0<32>
	v161 = v159 == v160
	loc60 = v161
	v159 = loc60
	v161 = v159 == 0<32>
	branch !v161 l00114107
	// succ:  l001140FD l00114107
l001140FD:
	v159 = loc21
	loc61 = v159
	v159 = loc61
	_free(v159)
	// succ:  l00114107
l00114107:
	v159 = loc45
	fn0011C7BA(v159)
	v159 = loc34
	fn0011C7BA(v159)
	v159 = loc23
	fn0011BAF7(v159)
	v159 = loc114
	v159 = Mem0[v159:word32]
	loc62 = v159
	v159 = loc62
	v159 = fn0011B43F(v159)
	v159 = loc162
	Mem0[0x00140030<p32>:word32] = v159
	v159 = loc57
	return v159
	// succ:  fn00113AB3_exit
l0011412C:
	// succ:  l0011412D
l0011412D:
	v159 = ___cxa_find_matching_catch_2()
	loc63 = v159
	v159 = Mem0[0x00140094<p32>:word32]
	loc64 = v159
	v159 = loc63
	loc6 = v159
	v159 = loc64
	loc11 = v159
	v159 = loc21
	loc22 = v159
	// succ:  l00114142
l00114142:
	v159 = loc22
	v160 = 0<32>
	v161 = v159 == v160
	loc65 = v161
	v159 = loc65
	v161 = v159 == 0<32>
	branch !v161 l00114158
	// succ:  l0011414E l00114158
l0011414E:
	v159 = loc22
	loc66 = v159
	v159 = loc66
	_free(v159)
	// succ:  l00114158
l00114158:
	v159 = loc6
	loc12 = v159
	v159 = loc11
	loc13 = v159
	// succ:  l00114160
l00114160:
	v159 = loc45
	fn0011C7BA(v159)
	v159 = loc34
	fn0011C7BA(v159)
	v159 = loc23
	fn0011BAF7(v159)
	v159 = loc12
	loc14 = v159
	v159 = loc13
	loc15 = v159
	// succ:  l00114178
l00114178:
	// succ:  l00114179
l00114179:
	v159 = loc114
	v159 = Mem0[v159:word32]
	loc68 = v159
	v159 = loc68
	v159 = fn0011B43F(v159)
	v159 = loc14
	___resumeException(v159)
	v159 = 0<32>
	return v159
	// succ:  fn00113AB3_exit
l0011418E:
	return v159
	// succ:  fn00113AB3_exit
fn00113AB3_exit:


// fn00114190
// Return size: 0
void fn00114190(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
fn00114190_entry:
	// succ:  l00114190
l00114190:
	v193 = Mem0[0x00140030<p32>:word32]
	loc200 = v193
	v193 = Mem0[0x00140030<p32>:word32]
	v194 = 0x70<32>
	v193 = v193 + v194
	Mem0[0x00140030<p32>:word32] = v193
	v193 = Mem0[0x00140030<p32>:word32]
	v194 = Mem0[0x00140034<p32>:word32]
	v195 = v193 >= v194
	branch !v195 l001141AC
	// succ:  l001141A6 l001141AC
l001141A6:
	v193 = 0x70<32>
	abortStackOverflow(v193)
	// succ:  l001141AC
l001141AC:
	v193 = loc200
	v194 = 0x6C<32>
	v193 = v193 + v194
	loc18 = v193
	v193 = loc200
	v194 = 0x60<32>
	v193 = v193 + v194
	loc29 = v193
	v193 = loc200
	v194 = 0x5C<32>
	v193 = v193 + v194
	loc40 = v193
	v193 = loc200
	v194 = 0x50<32>
	v193 = v193 + v194
	loc51 = v193
	v193 = loc200
	v194 = 0x44<32>
	v193 = v193 + v194
	loc62 = v193
	v193 = loc200
	v194 = 0x38<32>
	v193 = v193 + v194
	loc73 = v193
	v193 = loc200
	v194 = 0x34<32>
	v193 = v193 + v194
	loc84 = v193
	v193 = loc200
	v194 = 0x28<32>
	v193 = v193 + v194
	loc95 = v193
	v193 = loc200
	v194 = 0x24<32>
	v193 = v193 + v194
	loc106 = v193
	v193 = loc200
	v194 = 0x18<32>
	v193 = v193 + v194
	loc109 = v193
	v193 = loc200
	v194 = 0xC<32>
	v193 = v193 + v194
	loc110 = v193
	v193 = loc200
	loc111 = v193
	v193 = arg0
	v193 = v193
	// succ:  l00114212
l00114212:
	v193 = arg2
	v194 = 0x5338<32>
	v193 = fn000EA9F7(v193, v194)
	loc112 = v193
	v193 = arg1
	v193 = v193
	// succ:  l00114221
l00114221:
	v193 = loc112
	v193 = Mem0[v193:word32]
	loc113 = v193
	v193 = loc113
	v194 = 0x2C<32>
	v193 = v193 + v194
	loc114 = v193
	v193 = loc114
	v193 = Mem0[v193:word32]
	loc115 = v193
	v193 = loc18
	v194 = loc112
	v196 = loc115
	v197 = 0x1FF<32>
	v196 = v196 & v197
	v197 = 0x700<32>
	v196 = v196 + v197
fn00114190_exit:


// fn00114C7D
// Return size: 0
void fn00114C7D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11, word32 arg12, word32 arg13, word32 arg14)
fn00114C7D_entry:
	// succ:  l00114C7D
l00114C7D:
	v170 = Mem0[0x00140030<p32>:word32]
	loc182 = v170
	v170 = arg2
	v171 = arg0
	Mem0[v170:word32] = v171
	v170 = arg13
	v171 = 8<32>
	v170 = v170 + v171
	loc88 = v170
	v170 = loc88
	v171 = 3<32>
	v170 = v170 + v171
	loc92 = v170
	v170 = arg13
	v171 = 4<32>
	v170 = v170 + v171
	loc93 = v170
	v170 = arg12
	v171 = 8<32>
	v170 = v170 + v171
	loc94 = v170
	v170 = loc94
	v171 = 3<32>
	v170 = v170 + v171
	loc95 = v170
	v170 = arg12
	v171 = 4<32>
	v170 = v170 + v171
	loc96 = v170
	v170 = arg3
	v171 = 0x200<32>
	v170 = v170 & v171
	loc97 = v170
	v170 = loc97
	v171 = 0<32>
	v172 = v170 == v171
	loc98 = v172
	v170 = arg14
	v171 = 0<32>
	v172 = v170 > v171
	loc99 = v172
	v170 = arg11
	v171 = 0xB<32>
	v170 = v170 + v171
	loc100 = v170
	v170 = arg11
	v171 = 4<32>
	v170 = v170 + v171
	loc101 = v170
	v170 = 0<32>
	loc23 = v170
	v170 = arg4
	loc27 = v170
	// succ:  l00114CE3
l00114CE3:
	v170 = loc23
	v171 = 4<32>
	v172 = v170 == v171
	loc176 = v172
	v170 = loc176
	branch !v170 l00114CF5
	// succ:  l00114CF2 l00114CF5
l00114CF2:
l00114CF5:
	v170 = arg8
	v171 = loc23
	v170 = v170 + v171
	loc108 = v170
	v170 = loc108
	v173 = Mem0[v170:int8]
	v170 = CONVERT(v173, int8, word32)
	loc109 = v170
	v170 = loc109
	v171 = 0x18<32>
	v170 = v170 << v171
	v171 = 0x18<32>
	v170 = v170 >> v171
	loc110 = v170
	// succ:  l00114D0D
l00114D0D:
	v170 = loc110
	v171 = 0<32>
	v170 = v170 - v171
	switch (v170) { l00114D2A l00114D42 <null> <null> <null> }
	// succ:  l00114D2A l00114D42
l00114D2A:
	v170 = arg2
	v170 = Mem0[v170:word32]
	loc111 = v170
	v170 = arg1
	v171 = loc111
	Mem0[v170:word32] = v171
	v170 = loc27
	loc33 = v170
l00114D41:
	// succ:  l00114D42
l00114D42:
	v170 = arg2
	v170 = Mem0[v170:word32]
	loc112 = v170
	v170 = arg1
	v171 = loc112
	Mem0[v170:word32] = v171
	v170 = arg6
	v170 = Mem0[v170:word32]
	loc113 = v170
	v170 = loc113
	v171 = 0x2C<32>
	v170 = v170 + v171
	loc114 = v170
	v170 = loc114
	v170 = Mem0[v170:word32]
	loc115 = v170
	v170 = arg6
	v171 = 0x20<32>
	v174 = loc115
	v175 = 0x1FF<32>
	v174 = v174 & v175
	v175 = 0x1B20<32>
	v174 = v174 + v175
fn00114C7D_exit:


// fn00115464
// Return size: 0
void fn00115464(word32 arg0)
fn00115464_entry:
	// succ:  l00115464
l00115464:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn00115464_exit
l0011546B:
	return
	// succ:  fn00115464_exit
fn00115464_exit:


// fn0011546D
// Return size: 0
void fn0011546D(word32 arg0)
fn0011546D_entry:
	// succ:  l0011546D
l0011546D:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011546D_exit
l00115479:
	return
	// succ:  fn0011546D_exit
fn0011546D_exit:


// fn0011547B
// Return size: 0
word32 fn0011547B(word32 arg0, word32 arg1, word32 arg2)
fn0011547B_entry:
	// succ:  l0011547B
l0011547B:
	v14 = Mem0[0x00140030<p32>:word32]
	loc14 = v14
	v14 = arg1
	v15 = 0xB<32>
	v14 = v14 + v15
	loc5 = v14
	v14 = loc5
	v16 = Mem0[v14:int8]
	v14 = CONVERT(v16, int8, word32)
	loc6 = v14
	v14 = loc6
	v15 = 0x18<32>
	v14 = v14 << v15
	v15 = 0x18<32>
	v14 = v14 >> v15
	v15 = 0<32>
	v17 = v14 < v15
	loc7 = v17
	v14 = arg1
	v14 = Mem0[v14:word32]
	loc8 = v14
	v14 = loc7
	branch !v14 l001154AA
	// succ:  l001154A7 l001154AA
l001154A7:
	v14 = loc8
	goto l001154AC
	// succ:  l001154AC
l001154AA:
	v14 = arg1
	// succ:  l001154AC
l001154AC:
	loc9 = v14
	v14 = loc9
	v15 = 1<32>
	v14 = fn000DAF17(v14, v15)
	loc10 = v14
	v14 = loc10
	loc11 = v14
	v14 = loc10
	v15 = 0xFFFFFFFF<32>
	v17 = v14 != v15
	loc12 = v17
	v14 = loc12
	v15 = 1<32>
	v14 = v14 & v15
	loc4 = v14
	v14 = loc11
	v15 = loc4
	v14 = v14 >>u v15
	loc3 = v14
	v14 = loc3
	return v14
	// succ:  fn0011547B_exit
l001154D4:
	return v14
	// succ:  fn0011547B_exit
fn0011547B_exit:


// fn001154D6
// Return size: 0
void fn001154D6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001154D6_entry:
	// succ:  l001154D6
l001154D6:
	v57 = Mem0[0x00140030<p32>:word32]
	loc60 = v57
	v57 = Mem0[0x00140030<p32>:word32]
	v58 = 0x10<32>
	v57 = v57 + v58
	Mem0[0x00140030<p32>:word32] = v57
	v57 = Mem0[0x00140030<p32>:word32]
	v58 = Mem0[0x00140034<p32>:word32]
	v59 = v57 >= v58
	branch !v59 l001154EF
	// succ:  l001154EA l001154EF
l001154EA:
	v57 = 0x10<32>
	abortStackOverflow(v57)
	// succ:  l001154EF
l001154EF:
	v57 = loc60
	loc53 = v57
	v57 = loc53
	v60 = 0<64>
	Mem0[v57:word64] = v60
	v57 = loc53
	v58 = 8<32>
	v57 = v57 + v58
	v58 = 0<32>
	Mem0[v57:word32] = v58
	v57 = 0<32>
	loc7 = v57
	// succ:  l0011550A
l0011550A:
	v57 = loc7
	v58 = 3<32>
	v59 = v57 == v58
	loc57 = v59
	v57 = loc57
	branch !v57 l0011551A
	// succ:  l00115517 l0011551A
l00115517:
	goto l00115538
	// succ:  l00115538
l0011551A:
	v57 = loc53
	v58 = loc7
	v61 = 2<32>
	v58 = v58 << v61
	v57 = v57 + v58
	loc54 = v57
	v57 = loc54
	v58 = 0<32>
	Mem0[v57:word32] = v58
	v57 = loc7
	v58 = 1<32>
	v57 = v57 + v58
	loc55 = v57
	v57 = loc55
	loc7 = v57
	goto l001154EF
	// succ:  l001154EF
l00115538:
	v57 = arg5
	v58 = 0xB<32>
	v57 = v57 + v58
	loc56 = v57
	v57 = loc56
	v62 = Mem0[v57:int8]
	v57 = CONVERT(v62, int8, word32)
	loc12 = v57
	v57 = loc12
	v58 = 0x18<32>
	v57 = v57 << v58
	v58 = 0x18<32>
	v57 = v57 >> v58
	v58 = 0<32>
	v59 = v57 < v58
	loc13 = v59
	v57 = arg5
	v57 = Mem0[v57:word32]
	loc14 = v57
	v57 = loc13
	branch !v57 l00115563
	// succ:  l00115560 l00115563
l00115560:
	v57 = loc14
	goto l00115565
	// succ:  l00115565
l00115563:
	v57 = arg5
	// succ:  l00115565
l00115565:
	loc15 = v57
	v57 = arg5
	v58 = 4<32>
	v57 = v57 + v58
	loc16 = v57
	v57 = loc16
	v57 = Mem0[v57:word32]
	loc17 = v57
	v57 = loc12
	v58 = 0xFF<32>
	v57 = v57 & v58
	loc18 = v57
	v57 = loc13
	branch !v57 l00115585
	// succ:  l00115582 l00115585
l00115582:
	v57 = loc17
	goto l00115587
	// succ:  l00115587
l00115585:
	v57 = loc18
	// succ:  l00115587
l00115587:
	loc19 = v57
	v57 = loc15
	v58 = loc19
	v57 = v57 + v58
	loc20 = v57
	v57 = loc15
	loc9 = v57
	// succ:  l00115597
l00115597:
	v57 = loc9
	v58 = loc20
	v59 = v57 <u v58
	loc21 = v59
	v57 = loc21
	v59 = v57 == 0<32>
	branch !v59 l001155AC
	// succ:  l001155A5 l001155AC
l001155A5:
	v57 = 8<32>
	loc59 = v57
	goto l001155E7
	// succ:  l001155E7
l001155AC:
	v57 = loc9
	v63 = Mem0[v57:int8]
	v57 = CONVERT(v63, int8, word32)
	loc22 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = 0x1A7<32>
	v58 = loc53
	v61 = loc22
	invoke_vii(v57, v58, v61)
	v57 = Mem0[0x00140048<p32>:word32]
	loc23 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = loc23
	v58 = 1<32>
	v57 = v57 & v58
	loc24 = v57
	v57 = loc24
	branch !v57 l001155DA
	// succ:  l001155D3 l001155DA
l001155D3:
	v57 = 9<32>
	loc59 = v57
	goto l001155E7
	// succ:  l001155E7
l001155DA:
	v57 = loc9
	v58 = 1<32>
	v57 = v57 + v58
	loc25 = v57
	v57 = loc25
	loc9 = v57
	goto l00115587
	// succ:  l00115587
l001155E7:
	v57 = loc59
	v58 = 8<32>
	v59 = v57 == v58
	branch !v59 l00115757
	// succ:  l001155F2 l00115757
l001155F2:
	v57 = arg2
	v58 = 0xFFFFFFFF<32>
	v59 = v57 == v58
	loc26 = v59
	v57 = arg2
	v58 = 1<32>
	v57 = v57 << v58
	loc27 = v57
	v57 = loc27
	loc28 = v57
	v57 = loc26
	branch !v57 l0011560B
	// succ:  l00115608 l0011560B
l00115608:
	v57 = 0xFFFFFFFF<32>
	goto l0011560D
	// succ:  l0011560D
l0011560B:
	v57 = loc28
	// succ:  l0011560D
l0011560D:
	loc29 = v57
	v57 = loc53
	v58 = 0xB<32>
	v57 = v57 + v58
	loc30 = v57
	v57 = loc30
	v64 = Mem0[v57:int8]
	v57 = CONVERT(v64, int8, word32)
	loc31 = v57
	v57 = loc31
	v58 = 0x18<32>
	v57 = v57 << v58
	v58 = 0x18<32>
	v57 = v57 >> v58
	v58 = 0<32>
	v59 = v57 < v58
	loc32 = v59
	v57 = loc53
	v57 = Mem0[v57:word32]
	loc33 = v57
	v57 = loc32
	branch !v57 l00115639
	// succ:  l00115636 l00115639
l00115636:
	v57 = loc33
	goto l0011563B
	// succ:  l0011563B
l00115639:
	v57 = loc53
	// succ:  l0011563B
l0011563B:
	loc34 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = 0x1B8<32>
	v58 = loc29
	v61 = arg3
	v65 = arg4
	v66 = loc34
	v57 = invoke_iiiii(v57, v58, v61, v65, v66)
	loc35 = v57
	v57 = Mem0[0x00140048<p32>:word32]
	loc36 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = loc36
	v58 = 1<32>
	v57 = v57 & v58
	loc37 = v57
	v57 = loc37
	branch !v57 l00115677
	// succ:  l00115664 l00115677
l00115664:
	v57 = ___cxa_find_matching_catch_2()
	loc49 = v57
	v57 = Mem0[0x00140094<p32>:word32]
	loc50 = v57
	v57 = loc49
	loc10 = v57
	v57 = loc50
	loc11 = v57
	goto l00115770
	// succ:  l00115770
l00115677:
	v57 = arg0
	v60 = 0<64>
	Mem0[v57:word64] = v60
	v57 = arg0
	v58 = 8<32>
	v57 = v57 + v58
	v58 = 0<32>
	Mem0[v57:word32] = v58
	v57 = 0<32>
	loc8 = v57
	// succ:  l0011568E
l0011568E:
	v57 = loc8
	v58 = 3<32>
	v59 = v57 == v58
	loc58 = v59
	v57 = loc58
	branch !v57 l0011569E
	// succ:  l0011569B l0011569E
l0011569B:
	goto l001156BC
	// succ:  l001156BC
l0011569E:
	v57 = arg0
	v58 = loc8
	v61 = 2<32>
	v58 = v58 << v61
	v57 = v57 + v58
	loc40 = v57
	v57 = loc40
	v58 = 0<32>
	Mem0[v57:word32] = v58
	v57 = loc8
	v58 = 1<32>
	v57 = v57 + v58
	loc41 = v57
	v57 = loc41
	loc8 = v57
	goto l00115677
	// succ:  l00115677
l001156BC:
	v57 = loc35
	v57 = fn000DAF30(v57)
	loc42 = v57
	v57 = loc35
	v58 = loc42
	v57 = v57 + v58
	loc43 = v57
	v57 = loc35
	loc6 = v57
	// succ:  l001156D2
l001156D2:
	v57 = loc6
	v58 = loc43
	v59 = v57 <u v58
	loc44 = v59
	v57 = loc44
	v59 = v57 == 0<32>
	branch !v59 l001156E7
	// succ:  l001156E0 l001156E7
l001156E0:
	v57 = 0x13<32>
	loc59 = v57
	goto l00115722
	// succ:  l00115722
l001156E7:
	v57 = loc6
	v67 = Mem0[v57:int8]
	v57 = CONVERT(v67, int8, word32)
	loc45 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = 0x1A7<32>
	v58 = arg0
	v61 = loc45
	invoke_vii(v57, v58, v61)
	v57 = Mem0[0x00140048<p32>:word32]
	loc46 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = loc46
	v58 = 1<32>
	v57 = v57 & v58
	loc47 = v57
	v57 = loc47
	branch !v57 l00115715
	// succ:  l0011570E l00115715
l0011570E:
	v57 = 0x12<32>
	loc59 = v57
	goto l00115722
	// succ:  l00115722
l00115715:
	v57 = loc6
	v58 = 1<32>
	v57 = v57 + v58
	loc48 = v57
	v57 = loc48
	loc6 = v57
	goto l001156BC
	// succ:  l001156BC
l00115722:
	v57 = loc59
	v58 = 0x12<32>
	v59 = v57 == v58
	branch !v59 l00115743
	// succ:  l0011572B l00115743
l0011572B:
	v57 = ___cxa_find_matching_catch_2()
	loc51 = v57
	v57 = Mem0[0x00140094<p32>:word32]
	loc52 = v57
	v57 = arg0
	fn0011BAF7(v57)
	v57 = loc51
	loc10 = v57
	v57 = loc52
	loc11 = v57
	goto l00115770
	// succ:  l00115770
l00115743:
	v57 = loc59
	v58 = 0x13<32>
	v59 = v57 == v58
	branch !v59 l00115755
	// succ:  l0011574A l00115755
l0011574A:
	v57 = loc53
	fn0011BAF7(v57)
	v57 = loc60
	Mem0[0x00140030<p32>:word32] = v57
	return
	// succ:  fn001154D6_exit
l00115755:
	// succ:  l00115755
l00115755:
	goto l0011576F
	// succ:  l0011576F
l00115757:
	v57 = loc59
	v58 = 9<32>
	v59 = v57 == v58
	branch !v59 l0011576F
	// succ:  l0011575E l0011576F
l0011575E:
	v57 = ___cxa_find_matching_catch_2()
	loc38 = v57
	v57 = Mem0[0x00140094<p32>:word32]
	loc39 = v57
	v57 = loc38
	loc10 = v57
	v57 = loc39
	loc11 = v57
	// succ:  l0011576F
l0011576F:
	// succ:  l0011576F
l0011576F:
	// succ:  l00115770
l00115770:
	v57 = loc53
	fn0011BAF7(v57)
	v57 = loc10
	___resumeException(v57)
	// succ:  l0011577A
l0011577A:
	return
	// succ:  fn001154D6_exit
fn001154D6_exit:


// fn0011577C
// Return size: 0
void fn0011577C(word32 arg0, word32 arg1)
fn0011577C_entry:
	// succ:  l0011577C
l0011577C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	return
	// succ:  fn0011577C_exit
l00115783:
	return
	// succ:  fn0011577C_exit
fn0011577C_exit:


// fn00115785
// Return size: 0
void fn00115785(word32 arg0)
fn00115785_entry:
	// succ:  l00115785
l00115785:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn00115785_exit
l0011578C:
	return
	// succ:  fn00115785_exit
fn00115785_exit:


// fn0011578E
// Return size: 0
void fn0011578E(word32 arg0)
fn0011578E_entry:
	// succ:  l0011578E
l0011578E:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011578E_exit
l0011579A:
	return
	// succ:  fn0011578E_exit
fn0011578E_exit:


// fn0011579C
// Return size: 0
word32 fn0011579C(word32 arg0, word32 arg1, word32 arg2)
fn0011579C_entry:
	// succ:  l0011579C
l0011579C:
	v14 = Mem0[0x00140030<p32>:word32]
	loc14 = v14
	v14 = arg1
	v15 = 0xB<32>
	v14 = v14 + v15
	loc5 = v14
	v14 = loc5
	v16 = Mem0[v14:int8]
	v14 = CONVERT(v16, int8, word32)
	loc6 = v14
	v14 = loc6
	v15 = 0x18<32>
	v14 = v14 << v15
	v15 = 0x18<32>
	v14 = v14 >> v15
	v15 = 0<32>
	v17 = v14 < v15
	loc7 = v17
	v14 = arg1
	v14 = Mem0[v14:word32]
	loc8 = v14
	v14 = loc7
	branch !v14 l001157CB
	// succ:  l001157C8 l001157CB
l001157C8:
	v14 = loc8
	goto l001157CD
	// succ:  l001157CD
l001157CB:
	v14 = arg1
	// succ:  l001157CD
l001157CD:
	loc9 = v14
	v14 = loc9
	v15 = 1<32>
	v14 = fn000DAF17(v14, v15)
	loc10 = v14
	v14 = loc10
	loc11 = v14
	v14 = loc10
	v15 = 0xFFFFFFFF<32>
	v17 = v14 != v15
	loc12 = v17
	v14 = loc12
	v15 = 1<32>
	v14 = v14 & v15
	loc4 = v14
	v14 = loc11
	v15 = loc4
	v14 = v14 >>u v15
	loc3 = v14
	v14 = loc3
	return v14
	// succ:  fn0011579C_exit
l001157F5:
	return v14
	// succ:  fn0011579C_exit
fn0011579C_exit:


// fn001157F7
// Return size: 0
void fn001157F7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001157F7_entry:
	// succ:  l001157F7
l001157F7:
	v126 = Mem0[0x00140030<p32>:word32]
	loc129 = v126
	v126 = Mem0[0x00140030<p32>:word32]
	v127 = 0xE0<32>
	v126 = v126 + v127
	Mem0[0x00140030<p32>:word32] = v126
	v126 = Mem0[0x00140030<p32>:word32]
	v127 = Mem0[0x00140034<p32>:word32]
	v128 = v126 >= v127
	branch !v128 l00115813
	// succ:  l0011580D l00115813
l0011580D:
	v126 = 0xE0<32>
	abortStackOverflow(v126)
	// succ:  l00115813
l00115813:
	v126 = loc129
	v127 = 0xB8<32>
	v126 = v126 + v127
	loc76 = v126
	v126 = loc129
	v127 = 0xC0<32>
	v126 = v126 + v127
	loc87 = v126
	v126 = loc129
	v127 = 0xB4<32>
	v126 = v126 + v127
	loc98 = v126
	v126 = loc129
	v127 = 0xB0<32>
	v126 = v126 + v127
	loc109 = v126
	v126 = loc129
	v127 = 0xA8<32>
	v126 = v126 + v127
	loc16 = v126
	v126 = loc129
	v127 = 0x28<32>
	v126 = v126 + v127
	loc27 = v126
	v126 = loc129
	v127 = 0x20<32>
	v126 = v126 + v127
	loc28 = v126
	v126 = loc129
	v127 = 0x1C<32>
	v126 = v126 + v127
	loc29 = v126
	v126 = loc129
	v127 = 0x10<32>
	v126 = v126 + v127
	loc30 = v126
	v126 = loc129
	v127 = 8<32>
	v126 = v126 + v127
	loc31 = v126
	v126 = loc129
	loc32 = v126
	v126 = loc30
	v129 = 0<64>
	Mem0[v126:word64] = v129
	v126 = loc30
	v127 = 8<32>
	v126 = v126 + v127
	v127 = 0<32>
	Mem0[v126:word32] = v127
	v126 = 0<32>
	loc7 = v126
	// succ:  l00115884
l00115884:
	v126 = loc7
	v127 = 3<32>
	v128 = v126 == v127
	loc120 = v128
	v126 = loc120
	branch !v126 l00115894
	// succ:  l00115891 l00115894
l00115891:
	goto l001158B2
	// succ:  l001158B2
l00115894:
	v126 = loc30
	v127 = loc7
	v130 = 2<32>
	v127 = v127 << v130
	v126 = v126 + v127
	loc33 = v126
	v126 = loc33
	v127 = 0<32>
	Mem0[v126:word32] = v127
	v126 = loc7
	v127 = 1<32>
	v126 = v126 + v127
	loc34 = v126
	v126 = loc34
	loc7 = v126
	goto l00115813
	// succ:  l00115813
l001158B2:
	v126 = loc31
	v127 = 4<32>
	v126 = v126 + v127
	loc35 = v126
	v126 = loc35
	v127 = 0<32>
	Mem0[v126:word32] = v127
	v126 = loc31
	v127 = 0x2418<32>
	Mem0[v126:word32] = v127
	v126 = arg5
	v127 = 8<32>
	v126 = v126 + v127
	loc36 = v126
	v126 = loc36
	v127 = 3<32>
	v126 = v126 + v127
	loc37 = v126
	v126 = loc37
	v131 = Mem0[v126:int8]
	v126 = CONVERT(v131, int8, word32)
	loc38 = v126
	v126 = loc38
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0<32>
	v128 = v126 < v127
	loc39 = v128
	v126 = arg5
	v126 = Mem0[v126:word32]
	loc40 = v126
	v126 = loc39
	branch !v126 l001158FB
	// succ:  l001158F8 l001158FB
l001158F8:
	v126 = loc40
	goto l001158FD
	// succ:  l001158FD
l001158FB:
	v126 = arg5
	// succ:  l001158FD
l001158FD:
	loc41 = v126
	v126 = arg5
	v127 = 4<32>
	v126 = v126 + v127
	loc42 = v126
	v126 = loc42
	v126 = Mem0[v126:word32]
	loc43 = v126
	v126 = loc38
	v127 = 0xFF<32>
	v126 = v126 & v127
	loc44 = v126
	v126 = loc39
	branch !v126 l0011591D
	// succ:  l0011591A l0011591D
l0011591A:
	v126 = loc43
	goto l0011591F
	// succ:  l0011591F
l0011591D:
	v126 = loc44
	// succ:  l0011591F
l0011591F:
	loc45 = v126
	v126 = loc41
	v127 = loc45
	v130 = 2<32>
	v127 = v127 << v130
	v126 = v126 + v127
	loc46 = v126
	v126 = loc87
	v127 = 0x20<32>
	v126 = v126 + v127
	loc47 = v126
	v126 = loc41
	loc10 = v126
	v126 = 0<32>
	loc11 = v126
	// succ:  l0011593D
l0011593D:
	v126 = loc10
	v127 = loc46
	v128 = v126 <u v127
	loc48 = v128
	v126 = loc11
	v127 = 2<32>
	v128 = v126 != v127
	loc49 = v128
	v126 = loc49
	v127 = loc48
	v126 = v126 & v127
	loc50 = v126
	v126 = loc50
	v128 = v126 == 0<32>
	branch !v128 l00115961
	// succ:  l00115959 l00115961
l00115959:
	v126 = 0xD<32>
	loc128 = v126
	goto l00115A48
	// succ:  l00115A48
l00115961:
	v126 = loc109
	v127 = loc10
	Mem0[v126:word32] = v127
	v126 = loc31
	v126 = Mem0[v126:word32]
	loc51 = v126
	v126 = loc51
	v127 = 0xC<32>
	v126 = v126 + v127
	loc52 = v126
	v126 = loc52
	v126 = Mem0[v126:word32]
	loc53 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = loc53
	v127 = loc31
	v130 = loc76
	v132 = loc10
	v133 = loc46
	v134 = loc109
	v135 = loc87
	v136 = loc47
	v137 = loc98
	v126 = invoke_iiiiiiiii(v126, v127, v130, v132, v133, v134, v135, v136, v137)
	loc54 = v126
	v126 = Mem0[0x00140048<p32>:word32]
	loc55 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = loc55
	v127 = 1<32>
	v126 = v126 & v127
	loc56 = v126
	v126 = loc56
	branch !v126 l001159B2
	// succ:  l001159AA l001159B2
l001159AA:
	v126 = 0xF<32>
	loc128 = v126
	goto l00115A48
	// succ:  l00115A48
l001159B2:
	v126 = loc54
	v127 = 2<32>
	v128 = v126 == v127
	loc57 = v128
	v126 = loc109
	v126 = Mem0[v126:word32]
	loc58 = v126
	v126 = loc58
	v127 = loc10
	v128 = v126 == v127
	loc59 = v128
	v126 = loc57
	v127 = loc59
	v126 = v126 | v127
	loc127 = v126
	v126 = loc127
	branch !v126 l001159DA
	// succ:  l001159D2 l001159DA
l001159D2:
	v126 = 8<32>
	loc128 = v126
	goto l00115A48
	// succ:  l00115A48
l001159DA:
	v126 = loc87
	loc9 = v126
	// succ:  l001159DE
l001159DE:
	v126 = loc98
	v126 = Mem0[v126:word32]
	loc63 = v126
	v126 = loc9
	v127 = loc63
	v128 = v126 <u v127
	loc64 = v128
	v126 = loc64
	v128 = v126 == 0<32>
	branch !v128 l001159F9
	// succ:  l001159F6 l001159F9
l001159F6:
	goto l00115A35
	// succ:  l00115A35
l001159F9:
	v126 = loc9
	v138 = Mem0[v126:int8]
	v126 = CONVERT(v138, int8, word32)
	loc66 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = 0x1A7<32>
	v127 = loc30
	v130 = loc66
	invoke_vii(v126, v127, v130)
	v126 = Mem0[0x00140048<p32>:word32]
	loc67 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = loc67
	v127 = 1<32>
	v126 = v126 & v127
	loc68 = v126
	v126 = loc68
	branch !v126 l00115A28
	// succ:  l00115A20 l00115A28
l00115A20:
	v126 = 0xE<32>
	loc128 = v126
	goto l00115A48
	// succ:  l00115A48
l00115A28:
	v126 = loc9
	v127 = 1<32>
	v126 = v126 + v127
	loc69 = v126
	v126 = loc69
	loc9 = v126
	goto l001159DE
	// succ:  l001159DE
l00115A35:
	v126 = loc109
	v126 = Mem0[v126:word32]
	loc65 = v126
	v126 = loc65
	loc10 = v126
	v126 = loc54
	loc11 = v126
	goto l0011591F
	// succ:  l0011591F
l00115A48:
	v126 = loc128
	v127 = 8<32>
	v128 = v126 == v127
	branch !v128 l00115A7F
	// succ:  l00115A54 l00115A7F
l00115A54:
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = 0x1A6<32>
	v127 = 0x3BF9<32>
	invoke_vi(v126, v127)
	v126 = Mem0[0x00140048<p32>:word32]
	loc60 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = ___cxa_find_matching_catch_2()
	loc61 = v126
	v126 = Mem0[0x00140094<p32>:word32]
	loc62 = v126
	v126 = loc61
	loc124 = v126
	v126 = loc62
	loc125 = v126
	v126 = 0x10<32>
	loc128 = v126
	goto l00115D83
	// succ:  l00115D83
l00115A7F:
	v126 = loc128
	v127 = 0xD<32>
	v128 = v126 == v127
	branch !v128 l00115D45
	// succ:  l00115A87 l00115D45
l00115A87:
	v126 = arg2
	v127 = 0xFFFFFFFF<32>
	v128 = v126 == v127
	loc70 = v128
	v126 = arg2
	v127 = 1<32>
	v126 = v126 << v127
	loc71 = v126
	v126 = loc71
	loc72 = v126
	v126 = loc70
	branch !v126 l00115AA0
	// succ:  l00115A9D l00115AA0
l00115A9D:
	v126 = 0xFFFFFFFF<32>
	goto l00115AA2
	// succ:  l00115AA2
l00115AA0:
	v126 = loc72
	// succ:  l00115AA2
l00115AA2:
	loc73 = v126
	v126 = loc30
	v127 = 0xB<32>
	v126 = v126 + v127
	loc74 = v126
	v126 = loc74
	v139 = Mem0[v126:int8]
	v126 = CONVERT(v139, int8, word32)
	loc75 = v126
	v126 = loc75
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0<32>
	v128 = v126 < v127
	loc77 = v128
	v126 = loc30
	v126 = Mem0[v126:word32]
	loc78 = v126
	v126 = loc77
	branch !v126 l00115ACE
	// succ:  l00115ACB l00115ACE
l00115ACB:
	v126 = loc78
	goto l00115AD0
	// succ:  l00115AD0
l00115ACE:
	v126 = loc30
	// succ:  l00115AD0
l00115AD0:
	loc79 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = 0x1B8<32>
	v127 = loc73
	v130 = arg3
	v132 = arg4
	v133 = loc79
	v126 = invoke_iiiii(v126, v127, v130, v132, v133)
	loc80 = v126
	v126 = Mem0[0x00140048<p32>:word32]
	loc81 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = loc81
	v127 = 1<32>
	v126 = v126 & v127
	loc82 = v126
	v126 = loc82
	branch !v126 l00115B0C
	// succ:  l00115AF9 l00115B0C
l00115AF9:
	v126 = ___cxa_find_matching_catch_2()
	loc21 = v126
	v126 = Mem0[0x00140094<p32>:word32]
	loc22 = v126
	v126 = loc21
	loc14 = v126
	v126 = loc22
	loc15 = v126
	goto l00115D84
	// succ:  l00115D84
l00115B0C:
	v126 = arg0
	v129 = 0<64>
	Mem0[v126:word64] = v129
	v126 = arg0
	v127 = 8<32>
	v126 = v126 + v127
	v127 = 0<32>
	Mem0[v126:word32] = v127
	v126 = 0<32>
	loc8 = v126
	// succ:  l00115B23
l00115B23:
	v126 = loc8
	v127 = 3<32>
	v128 = v126 == v127
	loc121 = v128
	v126 = loc121
	branch !v126 l00115B33
	// succ:  l00115B30 l00115B33
l00115B30:
	goto l00115B51
	// succ:  l00115B51
l00115B33:
	v126 = arg0
	v127 = loc8
	v130 = 2<32>
	v127 = v127 << v130
	v126 = v126 + v127
	loc88 = v126
	v126 = loc88
	v127 = 0<32>
	Mem0[v126:word32] = v127
	v126 = loc8
	v127 = 1<32>
	v126 = v126 + v127
	loc89 = v126
	v126 = loc89
	loc8 = v126
	goto l00115B0C
	// succ:  l00115B0C
l00115B51:
	v126 = loc32
	v127 = 4<32>
	v126 = v126 + v127
	loc90 = v126
	v126 = loc90
	v127 = 0<32>
	Mem0[v126:word32] = v127
	v126 = loc32
	v127 = 0x2448<32>
	Mem0[v126:word32] = v127
	v126 = loc80
	v126 = fn000DAF30(v126)
	loc91 = v126
	v126 = loc80
	v127 = loc91
	v126 = v126 + v127
	loc92 = v126
	v126 = loc92
	loc93 = v126
	v126 = loc27
	v127 = 0x80<32>
	v126 = v126 + v127
	loc94 = v126
	v126 = loc80
	loc12 = v126
	v126 = 0<32>
	loc13 = v126
	// succ:  l00115B8E
l00115B8E:
	v126 = loc12
	v127 = loc92
	v128 = v126 <u v127
	loc95 = v128
	v126 = loc13
	v127 = 2<32>
	v128 = v126 != v127
	loc96 = v128
	v126 = loc96
	v127 = loc95
	v126 = v126 & v127
	loc97 = v126
	v126 = loc97
	v128 = v126 == 0<32>
	branch !v128 l00115BB2
	// succ:  l00115BAA l00115BB2
l00115BAA:
	v126 = 0x1D<32>
	loc128 = v126
	goto l00115CBE
	// succ:  l00115CBE
l00115BB2:
	v126 = loc29
	v127 = loc12
	Mem0[v126:word32] = v127
	v126 = loc32
	v126 = Mem0[v126:word32]
	loc99 = v126
	v126 = loc99
	v127 = 0x10<32>
	v126 = v126 + v127
	loc100 = v126
	v126 = loc100
	v126 = Mem0[v126:word32]
	loc101 = v126
	v126 = loc12
	loc102 = v126
	v126 = loc93
	v127 = loc102
	v126 = v126 - v127
	loc103 = v126
	v126 = loc103
	v127 = 0x20<32>
	v128 = v126 > v127
	loc104 = v128
	v126 = loc12
	v127 = 0x20<32>
	v126 = v126 + v127
	loc105 = v126
	v126 = loc104
	branch !v126 l00115BEE
	// succ:  l00115BEB l00115BEE
l00115BEB:
	v126 = loc105
	goto l00115BF0
	// succ:  l00115BF0
l00115BEE:
	v126 = loc92
	// succ:  l00115BF0
l00115BF0:
	loc106 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = loc101
	v127 = loc32
	v130 = loc16
	v132 = loc12
	v133 = loc106
	v134 = loc29
	v135 = loc27
	v136 = loc94
	v137 = loc28
	v126 = invoke_iiiiiiiii(v126, v127, v130, v132, v133, v134, v135, v136, v137)
	loc107 = v126
	v126 = Mem0[0x00140048<p32>:word32]
	loc108 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = loc108
	v127 = 1<32>
	v126 = v126 & v127
	loc110 = v126
	v126 = loc110
	branch !v126 l00115C28
	// succ:  l00115C20 l00115C28
l00115C20:
	v126 = 0x20<32>
	loc128 = v126
	goto l00115CBE
	// succ:  l00115CBE
l00115C28:
	v126 = loc107
	v127 = 2<32>
	v128 = v126 == v127
	loc111 = v128
	v126 = loc29
	v126 = Mem0[v126:word32]
	loc112 = v126
	v126 = loc112
	v127 = loc12
	v128 = v126 == v127
	loc113 = v128
	v126 = loc111
	v127 = loc113
	v126 = v126 | v127
	loc126 = v126
	v126 = loc126
	branch !v126 l00115C50
	// succ:  l00115C48 l00115C50
l00115C48:
	v126 = 0x18<32>
	loc128 = v126
	goto l00115CBE
	// succ:  l00115CBE
l00115C50:
	v126 = loc27
	loc6 = v126
	// succ:  l00115C54
l00115C54:
	v126 = loc28
	v126 = Mem0[v126:word32]
	loc117 = v126
	v126 = loc6
	v127 = loc117
	v128 = v126 <u v127
	loc118 = v128
	v126 = loc118
	v128 = v126 == 0<32>
	branch !v128 l00115C6F
	// succ:  l00115C6C l00115C6F
l00115C6C:
	goto l00115CAB
	// succ:  l00115CAB
l00115C6F:
	v126 = loc6
	v126 = Mem0[v126:word32]
	loc17 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = 0x1AF<32>
	v127 = arg0
	v130 = loc17
	invoke_vii(v126, v127, v130)
	v126 = Mem0[0x00140048<p32>:word32]
	loc18 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = loc18
	v127 = 1<32>
	v126 = v126 & v127
	loc19 = v126
	v126 = loc19
	branch !v126 l00115C9E
	// succ:  l00115C96 l00115C9E
l00115C96:
	v126 = 0x1F<32>
	loc128 = v126
	goto l00115CBE
	// succ:  l00115CBE
l00115C9E:
	v126 = loc6
	v127 = 4<32>
	v126 = v126 + v127
	loc20 = v126
	v126 = loc20
	loc6 = v126
	goto l00115C54
	// succ:  l00115C54
l00115CAB:
	v126 = loc29
	v126 = Mem0[v126:word32]
	loc119 = v126
	v126 = loc119
	loc12 = v126
	v126 = loc107
	loc13 = v126
	goto l00115B51
	// succ:  l00115B51
l00115CBE:
	v126 = loc128
	v127 = 0x18<32>
	v128 = v126 == v127
	branch !v128 l00115CEE
	// succ:  l00115CC8 l00115CEE
l00115CC8:
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = 0x1A6<32>
	v127 = 0x3BF9<32>
	invoke_vi(v126, v127)
	v126 = Mem0[0x00140048<p32>:word32]
	loc114 = v126
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v126 = ___cxa_find_matching_catch_2()
	loc115 = v126
	v126 = Mem0[0x00140094<p32>:word32]
	loc116 = v126
	v126 = loc115
	loc122 = v126
	v126 = loc116
	loc123 = v126
	goto l00115D36
	// succ:  l00115D36
l00115CEE:
	v126 = loc128
	v127 = 0x1D<32>
	v128 = v126 == v127
	branch !v128 l00115D02
	// succ:  l00115CF6 l00115D02
l00115CF6:
	v126 = loc30
	fn0011BAF7(v126)
	v126 = loc129
	Mem0[0x00140030<p32>:word32] = v126
	return
	// succ:  fn001157F7_exit
l00115D02:
	v126 = loc128
	v127 = 0x1F<32>
	v128 = v126 == v127
	branch !v128 l00115D1B
	// succ:  l00115D0A l00115D1B
l00115D0A:
	v126 = ___cxa_find_matching_catch_2()
	loc23 = v126
	v126 = Mem0[0x00140094<p32>:word32]
	loc24 = v126
	v126 = loc23
	loc122 = v126
	v126 = loc24
	loc123 = v126
	goto l00115D34
	// succ:  l00115D34
l00115D1B:
	v126 = loc128
	v127 = 0x20<32>
	v128 = v126 == v127
	branch !v128 l00115D34
	// succ:  l00115D23 l00115D34
l00115D23:
	v126 = ___cxa_find_matching_catch_2()
	loc25 = v126
	v126 = Mem0[0x00140094<p32>:word32]
	loc26 = v126
	v126 = loc25
	loc122 = v126
	v126 = loc26
	loc123 = v126
	// succ:  l00115D34
l00115D34:
	// succ:  l00115D34
l00115D34:
	// succ:  l00115D35
l00115D35:
	// succ:  l00115D36
l00115D36:
	v126 = arg0
	fn0011C7BA(v126)
	v126 = loc122
	loc14 = v126
	v126 = loc123
	loc15 = v126
	goto l00115D82
	// succ:  l00115D82
l00115D45:
	v126 = loc128
	v127 = 0xE<32>
	v128 = v126 == v127
	branch !v128 l00115D63
	// succ:  l00115D4D l00115D63
l00115D4D:
	v126 = ___cxa_find_matching_catch_2()
	loc83 = v126
	v126 = Mem0[0x00140094<p32>:word32]
	loc84 = v126
	v126 = loc83
	loc124 = v126
	v126 = loc84
	loc125 = v126
	v126 = 0x10<32>
	loc128 = v126
	goto l00115D81
	// succ:  l00115D81
l00115D63:
	v126 = loc128
	v127 = 0xF<32>
	v128 = v126 == v127
	branch !v128 l00115D81
	// succ:  l00115D6B l00115D81
l00115D6B:
	v126 = ___cxa_find_matching_catch_2()
	loc85 = v126
	v126 = Mem0[0x00140094<p32>:word32]
	loc86 = v126
	v126 = loc85
	loc124 = v126
	v126 = loc86
	loc125 = v126
	v126 = 0x10<32>
	loc128 = v126
	// succ:  l00115D81
l00115D81:
	// succ:  l00115D81
l00115D81:
	// succ:  l00115D82
l00115D82:
	// succ:  l00115D83
l00115D83:
	// succ:  l00115D84
l00115D84:
	v126 = loc128
	v127 = 0x10<32>
	v128 = v126 == v127
	branch !v128 l00115D96
	// succ:  l00115D8D l00115D96
l00115D8D:
	v126 = loc124
	loc14 = v126
	v126 = loc125
	loc15 = v126
	// succ:  l00115D96
l00115D96:
	v126 = loc30
	fn0011BAF7(v126)
	v126 = loc14
	___resumeException(v126)
	// succ:  l00115D9F
l00115D9F:
	return
	// succ:  fn001157F7_exit
fn001157F7_exit:


// fn00115DA1
// Return size: 0
void fn00115DA1(word32 arg0, word32 arg1)
fn00115DA1_entry:
	// succ:  l00115DA1
l00115DA1:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	return
	// succ:  fn00115DA1_exit
l00115DA8:
	return
	// succ:  fn00115DA1_exit
fn00115DA1_exit:


// fn00115DAA
// Return size: 0
void fn00115DAA(word32 arg0)
fn00115DAA_entry:
	// succ:  l00115DAA
l00115DAA:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn00115DAA_exit
l00115DB1:
	return
	// succ:  fn00115DAA_exit
fn00115DAA_exit:


// fn00115DB3
// Return size: 0
void fn00115DB3(word32 arg0)
fn00115DB3_entry:
	// succ:  l00115DB3
l00115DB3:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn00115DB3_exit
l00115DBF:
	return
	// succ:  fn00115DB3_exit
fn00115DB3_exit:


// fn00115DC1
// Return size: 0
word32 fn00115DC1(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00115DC1_entry:
	// succ:  l00115DC1
l00115DC1:
	v9 = Mem0[0x00140030<p32>:word32]
	loc14 = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = 0x10<32>
	v9 = v9 + v10
	Mem0[0x00140030<p32>:word32] = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = Mem0[0x00140034<p32>:word32]
	v11 = v9 >= v10
	branch !v11 l00115DDA
	// succ:  l00115DD5 l00115DDA
l00115DD5:
	v9 = 0x10<32>
	abortStackOverflow(v9)
	// succ:  l00115DDA
l00115DDA:
	v9 = loc14
	v10 = 4<32>
	v9 = v9 + v10
	loc11 = v9
	v9 = loc14
	loc12 = v9
	v9 = loc11
	v10 = arg2
	Mem0[v9:word32] = v10
	v9 = loc12
	v10 = arg5
	Mem0[v9:word32] = v10
	v9 = arg2
	v10 = arg3
	v12 = loc11
	v13 = arg5
	v14 = arg6
	v15 = loc12
	v16 = 0x10FFFF<32>
	v17 = 0<32>
	v9 = fn00116A09(v9, v10, v12, v13, v14, v15, v16, v17)
	loc8 = v9
	v9 = loc11
	v9 = Mem0[v9:word32]
	loc9 = v9
	v9 = arg4
	v10 = loc9
	Mem0[v9:word32] = v10
	v9 = loc12
	v9 = Mem0[v9:word32]
	loc10 = v9
	v9 = arg7
	v10 = loc10
	Mem0[v9:word32] = v10
	v9 = loc14
	Mem0[0x00140030<p32>:word32] = v9
	v9 = loc8
	return v9
	// succ:  fn00115DC1_exit
l00115E2E:
	return v9
	// succ:  fn00115DC1_exit
fn00115DC1_exit:


// fn00115E30
// Return size: 0
word32 fn00115E30(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00115E30_entry:
	// succ:  l00115E30
l00115E30:
	v9 = Mem0[0x00140030<p32>:word32]
	loc14 = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = 0x10<32>
	v9 = v9 + v10
	Mem0[0x00140030<p32>:word32] = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = Mem0[0x00140034<p32>:word32]
	v11 = v9 >= v10
	branch !v11 l00115E49
	// succ:  l00115E44 l00115E49
l00115E44:
	v9 = 0x10<32>
	abortStackOverflow(v9)
	// succ:  l00115E49
l00115E49:
	v9 = loc14
	v10 = 4<32>
	v9 = v9 + v10
	loc11 = v9
	v9 = loc14
	loc12 = v9
	v9 = loc11
	v10 = arg2
	Mem0[v9:word32] = v10
	v9 = loc12
	v10 = arg5
	Mem0[v9:word32] = v10
	v9 = arg2
	v10 = arg3
	v12 = loc11
	v13 = arg5
	v14 = arg6
	v15 = loc12
	v16 = 0x10FFFF<32>
	v17 = 0<32>
	v9 = fn001164A4(v9, v10, v12, v13, v14, v15, v16, v17)
	loc8 = v9
	v9 = loc11
	v9 = Mem0[v9:word32]
	loc9 = v9
	v9 = arg4
	v10 = loc9
	Mem0[v9:word32] = v10
	v9 = loc12
	v9 = Mem0[v9:word32]
	loc10 = v9
	v9 = arg7
	v10 = loc10
	Mem0[v9:word32] = v10
	v9 = loc14
	Mem0[0x00140030<p32>:word32] = v9
	v9 = loc8
	return v9
	// succ:  fn00115E30_exit
l00115E9D:
	return v9
	// succ:  fn00115E30_exit
fn00115E30_exit:


// fn00115E9F
// Return size: 0
word32 fn00115E9F(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00115E9F_entry:
	// succ:  l00115E9F
l00115E9F:
	v4 = Mem0[0x00140030<p32>:word32]
	loc6 = v4
	v4 = arg4
	v5 = arg2
	Mem0[v4:word32] = v5
	v4 = 3<32>
	return v4
	// succ:  fn00115E9F_exit
l00115EAF:
	return v4
	// succ:  fn00115E9F_exit
fn00115E9F_exit:


// fn00115EB1
// Return size: 0
word32 fn00115EB1(word32 arg0)
fn00115EB1_entry:
	// succ:  l00115EB1
l00115EB1:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 0<32>
	return v4
	// succ:  fn00115EB1_exit
l00115EBA:
	return v4
	// succ:  fn00115EB1_exit
fn00115EB1_exit:


// fn00115EBC
// Return size: 0
word32 fn00115EBC(word32 arg0)
fn00115EBC_entry:
	// succ:  l00115EBC
l00115EBC:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 0<32>
	return v4
	// succ:  fn00115EBC_exit
l00115EC5:
	return v4
	// succ:  fn00115EBC_exit
fn00115EBC_exit:


// fn00115EC7
// Return size: 0
word32 fn00115EC7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00115EC7_entry:
	// succ:  l00115EC7
l00115EC7:
	v5 = Mem0[0x00140030<p32>:word32]
	loc7 = v5
	v5 = arg2
	v6 = arg3
	v7 = arg4
	v8 = 0x10FFFF<32>
	v9 = 0<32>
	v5 = fn00115EEF(v5, v6, v7, v8, v9)
	loc5 = v5
	v5 = loc5
	return v5
	// succ:  fn00115EC7_exit
l00115EE2:
	return v5
	// succ:  fn00115EC7_exit
fn00115EC7_exit:


// fn00115EE4
// Return size: 0
word32 fn00115EE4(word32 arg0)
fn00115EE4_entry:
	// succ:  l00115EE4
l00115EE4:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 4<32>
	return v4
	// succ:  fn00115EE4_exit
l00115EED:
	return v4
	// succ:  fn00115EE4_exit
fn00115EE4_exit:


// fn00115EEF
// Return size: 0
word32 fn00115EEF(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00115EEF_entry:
	// succ:  l00115EEF
l00115EEF:
	v126 = Mem0[0x00140030<p32>:word32]
	loc128 = v126
	v126 = arg4
	v127 = 4<32>
	v126 = v126 & v127
	loc71 = v126
	v126 = loc71
	v127 = 0<32>
	v128 = v126 == v127
	loc82 = v128
	v126 = arg1
	loc14 = v126
	v126 = loc82
	branch !v126 l00115F15
	// succ:  l00115F0C l00115F15
l00115F0C:
	v126 = 0<32>
	loc6 = v126
	v126 = arg0
	loc7 = v126
	goto l00115FB8
	// succ:  l00115FB8
l00115F15:
	v126 = arg0
	loc93 = v126
	v126 = loc14
	v127 = loc93
	v126 = v126 - v127
	loc104 = v126
	v126 = loc104
	v127 = 2<32>
	v128 = v126 > v127
	loc115 = v128
	v126 = loc115
	branch !v126 l00115FAF
	// succ:  l00115F2B l00115FAF
l00115F2B:
	v126 = arg0
	v129 = Mem0[v126:int8]
	v126 = CONVERT(v129, int8, word32)
	loc15 = v126
	v126 = loc15
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFFEF<32>
	v128 = v126 == v127
	loc26 = v128
	v126 = loc26
	branch !v126 l00115FA5
	// succ:  l00115F43 l00115FA5
l00115F43:
	v126 = arg0
	v127 = 1<32>
	v126 = v126 + v127
	loc33 = v126
	v126 = loc33
	v130 = Mem0[v126:int8]
	v126 = CONVERT(v130, int8, word32)
	loc34 = v126
	v126 = loc34
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFFBB<32>
	v128 = v126 == v127
	loc35 = v128
	v126 = loc35
	branch !v126 l00115F9B
	// succ:  l00115F63 l00115F9B
l00115F63:
	v126 = arg0
	v127 = 2<32>
	v126 = v126 + v127
	loc36 = v126
	v126 = loc36
	v131 = Mem0[v126:int8]
	v126 = CONVERT(v131, int8, word32)
	loc37 = v126
	v126 = loc37
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFFBF<32>
	v128 = v126 == v127
	loc38 = v128
	v126 = arg0
	v127 = 3<32>
	v126 = v126 + v127
	loc39 = v126
	v126 = loc38
	branch !v126 l00115F8D
	// succ:  l00115F8A l00115F8D
l00115F8A:
	v126 = loc39
	goto l00115F8F
	// succ:  l00115F8F
l00115F8D:
	v126 = arg0
	// succ:  l00115F8F
l00115F8F:
	loc5 = v126
	v126 = 0<32>
	loc6 = v126
	v126 = loc5
	loc7 = v126
	goto l00115FA3
	// succ:  l00115FA3
l00115F9B:
	v126 = 0<32>
	loc6 = v126
	v126 = arg0
	loc7 = v126
	// succ:  l00115FA3
l00115FA3:
	goto l00115FAD
	// succ:  l00115FAD
l00115FA5:
	v126 = 0<32>
	loc6 = v126
	v126 = arg0
	loc7 = v126
	// succ:  l00115FAD
l00115FAD:
	goto l00115FB7
	// succ:  l00115FB7
l00115FAF:
	v126 = 0<32>
	loc6 = v126
	v126 = arg0
	loc7 = v126
	// succ:  l00115FB7
l00115FB7:
	// succ:  l00115FB8
l00115FB8:
	v126 = loc7
	v127 = arg1
	v128 = v126 <u v127
	loc40 = v128
	v126 = loc6
	v127 = arg2
	v128 = v126 <u v127
	loc41 = v128
	v126 = loc41
	v127 = loc40
	v126 = v126 & v127
	loc126 = v126
	v126 = loc126
	v128 = v126 == 0<32>
	branch !v128 l00115FDE
	// succ:  l00115FD7 l00115FDE
l00115FD7:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00115FDE:
	v126 = loc7
	v132 = Mem0[v126:int8]
	v126 = CONVERT(v132, int8, word32)
	loc42 = v126
	v126 = loc42
	v127 = 0xFF<32>
	v126 = v126 & v127
	loc43 = v126
	v126 = loc42
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFFFF<32>
	v128 = v126 > v127
	loc44 = v128
	// succ:  l00115FFA
l00115FFA:
	v126 = loc44
	branch !v126 l0011601E
	// succ:  l00116000 l0011601E
l00116000:
	v126 = loc43
	v127 = arg3
	v128 = v126 >u v127
	loc45 = v128
	v126 = loc45
	branch !v126 l00116012
	// succ:  l0011600B l00116012
l0011600B:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116012:
	v126 = loc7
	v127 = 1<32>
	v126 = v126 + v127
	loc46 = v126
	v126 = loc46
	loc9 = v126
	goto l001163DF
	// succ:  l001163DF
l0011601E:
	v126 = loc42
	v127 = 0xFF<32>
	v126 = v126 & v127
	v127 = 0xC2<32>
	v128 = v126 < v127
	loc47 = v128
	v126 = loc47
	branch !v126 l00116035
	// succ:  l0011602E l00116035
l0011602E:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116035:
	v126 = loc42
	v127 = 0xFF<32>
	v126 = v126 & v127
	v127 = 0xE0<32>
	v128 = v126 < v127
	loc48 = v128
	v126 = loc48
	branch !v126 l001160D1
	// succ:  l00116045 l001160D1
l00116045:
	v126 = loc7
	loc49 = v126
	v126 = loc14
	v127 = loc49
	v126 = v126 - v127
	loc50 = v126
	v126 = loc50
	v127 = 2<32>
	v128 = v126 < v127
	loc51 = v128
	v126 = loc51
	branch !v126 l00116062
	// succ:  l0011605B l00116062
l0011605B:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116062:
	v126 = loc7
	v127 = 1<32>
	v126 = v126 + v127
	loc52 = v126
	v126 = loc52
	v133 = Mem0[v126:int8]
	v126 = CONVERT(v133, int8, word32)
	loc53 = v126
	v126 = loc53
	v127 = 0xFF<32>
	v126 = v126 & v127
	loc54 = v126
	v126 = loc54
	v127 = 0xC0<32>
	v126 = v126 & v127
	loc55 = v126
	v126 = loc55
	v127 = 0x80<32>
	v128 = v126 == v127
	loc56 = v128
	v126 = loc56
	v128 = v126 == 0<32>
	branch !v128 l00116094
	// succ:  l0011608D l00116094
l0011608D:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116094:
	v126 = loc43
	v127 = 6<32>
	v126 = v126 << v127
	loc57 = v126
	v126 = loc57
	v127 = 0x7C0<32>
	v126 = v126 & v127
	loc58 = v126
	v126 = loc54
	v127 = 0x3F<32>
	v126 = v126 & v127
	loc59 = v126
	v126 = loc59
	v127 = loc58
	v126 = v126 | v127
	loc60 = v126
	v126 = loc60
	v127 = arg3
	v128 = v126 >u v127
	loc61 = v128
	v126 = loc61
	branch !v126 l001160C3
	// succ:  l001160BC l001160C3
l001160BC:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l001160C3:
	v126 = loc7
	v127 = 2<32>
	v126 = v126 + v127
	loc62 = v126
	v126 = loc62
	loc9 = v126
	goto l001163E0
	// succ:  l001163E0
l001160D1:
	v126 = loc42
	v127 = 0xFF<32>
	v126 = v126 & v127
	v127 = 0xF0<32>
	v128 = v126 < v127
	loc63 = v128
	v126 = loc63
	branch !v126 l00116233
	// succ:  l001160E1 l00116233
l001160E1:
	v126 = loc7
	loc64 = v126
	v126 = loc14
	v127 = loc64
	v126 = v126 - v127
	loc65 = v126
	v126 = loc65
	v127 = 3<32>
	v128 = v126 < v127
	loc66 = v128
	v126 = loc66
	branch !v126 l001160FE
	// succ:  l001160F7 l001160FE
l001160F7:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l001160FE:
	v126 = loc7
	v127 = 1<32>
	v126 = v126 + v127
	loc67 = v126
	v126 = loc67
	v134 = Mem0[v126:int8]
	v126 = CONVERT(v134, int8, word32)
	loc68 = v126
	v126 = loc7
	v127 = 2<32>
	v126 = v126 + v127
	loc69 = v126
	v126 = loc69
	v135 = Mem0[v126:int8]
	v126 = CONVERT(v135, int8, word32)
	loc70 = v126
	// succ:  l0011611A
l0011611A:
	v126 = loc42
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFFE0<32>
	v126 = v126 - v127
	switch (v126) { l0011613E l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l00116165 }
	// succ:  l0011613E l00116165 l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C
l0011613E:
	v126 = loc68
	v127 = 0xFFFFFFE0<32>
	v126 = v126 & v127
	loc72 = v126
	v126 = loc72
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFFA0<32>
	v128 = v126 == v127
	loc73 = v128
	v126 = loc73
	v128 = v126 == 0<32>
	branch !v128 l00116162
	// succ:  l0011615B l00116162
l0011615B:
	v126 = 0x14<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116162:
	goto l001161B1
	// succ:  l001161B1
l00116164:
	// succ:  l00116165
l00116165:
	v126 = loc68
	v127 = 0xFFFFFFE0<32>
	v126 = v126 & v127
	loc76 = v126
	v126 = loc76
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFF80<32>
	v128 = v126 == v127
	loc77 = v128
	v126 = loc77
	v128 = v126 == 0<32>
	branch !v128 l00116189
	// succ:  l00116182 l00116189
l00116182:
	v126 = 0x16<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116189:
	goto l001161B1
	// succ:  l001161B1
l0011618B:
	// succ:  l0011618C
l0011618C:
	v126 = loc68
	v127 = 0xFFFFFFC0<32>
	v126 = v126 & v127
	loc80 = v126
	v126 = loc80
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFF80<32>
	v128 = v126 == v127
	loc81 = v128
	v126 = loc81
	v128 = v126 == 0<32>
	branch !v128 l001161B0
	// succ:  l001161A9 l001161B0
l001161A9:
	v126 = 0x18<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l001161B0:
	// succ:  l001161B0
l001161B0:
	// succ:  l001161B1
l001161B1:
	v126 = loc70
	v127 = 0xFF<32>
	v126 = v126 & v127
	loc85 = v126
	v126 = loc85
	v127 = 0xC0<32>
	v126 = v126 & v127
	loc86 = v126
	v126 = loc86
	v127 = 0x80<32>
	v128 = v126 == v127
	loc87 = v128
	v126 = loc87
	v128 = v126 == 0<32>
	branch !v128 l001161D6
	// succ:  l001161CF l001161D6
l001161CF:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l001161D6:
	v126 = loc43
	v127 = 0xC<32>
	v126 = v126 << v127
	loc88 = v126
	v126 = loc88
	v127 = 0xF000<32>
	v126 = v126 & v127
	loc89 = v126
	v126 = loc68
	v127 = 0xFF<32>
	v126 = v126 & v127
	loc90 = v126
	v126 = loc90
	v127 = 6<32>
	v126 = v126 << v127
	loc91 = v126
	v126 = loc91
	v127 = 0xFC0<32>
	v126 = v126 & v127
	loc92 = v126
	v126 = loc92
	v127 = loc89
	v126 = v126 | v127
	loc94 = v126
	v126 = loc85
	v127 = 0x3F<32>
	v126 = v126 & v127
	loc95 = v126
	v126 = loc94
	v127 = loc95
	v126 = v126 | v127
	loc96 = v126
	v126 = loc96
	v127 = arg3
	v128 = v126 >u v127
	loc97 = v128
	v126 = loc7
	v127 = 3<32>
	v126 = v126 + v127
	loc98 = v126
	v126 = loc97
	branch !v126 l0011622B
	// succ:  l00116224 l0011622B
l00116224:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l0011622B:
	v126 = loc98
	loc9 = v126
	goto l001163E0
	// succ:  l001163E0
l00116231:
	// succ:  l00116233
l00116233:
	v126 = loc42
	v127 = 0xFF<32>
	v126 = v126 & v127
	v127 = 0xF5<32>
	v128 = v126 < v127
	loc99 = v128
	v126 = loc99
	v128 = v126 == 0<32>
	branch !v128 l0011624B
	// succ:  l00116244 l0011624B
l00116244:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l0011624B:
	v126 = loc7
	loc100 = v126
	v126 = loc14
	v127 = loc100
	v126 = v126 - v127
	loc101 = v126
	v126 = loc101
	v127 = 4<32>
	v128 = v126 < v127
	loc102 = v128
	v126 = loc102
	branch !v126 l00116268
	// succ:  l00116261 l00116268
l00116261:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116268:
	v126 = loc7
	v127 = 1<32>
	v126 = v126 + v127
	loc103 = v126
	v126 = loc103
	v136 = Mem0[v126:int8]
	v126 = CONVERT(v136, int8, word32)
	loc105 = v126
	v126 = loc7
	v127 = 2<32>
	v126 = v126 + v127
	loc106 = v126
	v126 = loc106
	v137 = Mem0[v126:int8]
	v126 = CONVERT(v137, int8, word32)
	loc107 = v126
	v126 = loc7
	v127 = 3<32>
	v126 = v126 + v127
	loc108 = v126
	v126 = loc108
	v138 = Mem0[v126:int8]
	v126 = CONVERT(v138, int8, word32)
	loc109 = v126
	// succ:  l00116292
l00116292:
	v126 = loc42
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFFF0<32>
	v126 = v126 - v127
	switch (v126) { l001162AD l001162FF l001162FF l001162FF l001162D8 }
	// succ:  l001162AD l001162D8 l001162FF l001162FF l001162FF
l001162AD:
	v126 = loc105
	v127 = 0x70<32>
	v126 = v126 + v127
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	loc10 = v126
	v126 = loc10
	v127 = 0xFF<32>
	v126 = v126 & v127
	v127 = 0x30<32>
	v128 = v126 < v127
	loc110 = v128
	v126 = loc110
	v128 = v126 == 0<32>
	branch !v128 l001162D5
	// succ:  l001162CE l001162D5
l001162CE:
	v126 = 0x1F<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l001162D5:
	goto l00116324
	// succ:  l00116324
l001162D7:
	// succ:  l001162D8
l001162D8:
	v126 = loc105
	v127 = 0xFFFFFFF0<32>
	v126 = v126 & v127
	loc113 = v126
	v126 = loc113
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFF80<32>
	v128 = v126 == v127
	loc114 = v128
	v126 = loc114
	v128 = v126 == 0<32>
	branch !v128 l001162FC
	// succ:  l001162F5 l001162FC
l001162F5:
	v126 = 0x21<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l001162FC:
	goto l00116324
	// succ:  l00116324
l001162FE:
	// succ:  l001162FF
l001162FF:
	v126 = loc105
	v127 = 0xFFFFFFC0<32>
	v126 = v126 & v127
	loc118 = v126
	v126 = loc118
	v127 = 0x18<32>
	v126 = v126 << v127
	v127 = 0x18<32>
	v126 = v126 >> v127
	v127 = 0xFFFFFF80<32>
	v128 = v126 == v127
	loc119 = v128
	v126 = loc119
	v128 = v126 == 0<32>
	branch !v128 l00116323
	// succ:  l0011631C l00116323
l0011631C:
	v126 = 0x23<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116323:
	// succ:  l00116323
l00116323:
	// succ:  l00116324
l00116324:
	v126 = loc107
	v127 = 0xFF<32>
	v126 = v126 & v127
	loc122 = v126
	v126 = loc122
	v127 = 0xC0<32>
	v126 = v126 & v127
	loc123 = v126
	v126 = loc123
	v127 = 0x80<32>
	v128 = v126 == v127
	loc124 = v128
	v126 = loc124
	v128 = v126 == 0<32>
	branch !v128 l00116349
	// succ:  l00116342 l00116349
l00116342:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l00116349:
	v126 = loc109
	v127 = 0xFF<32>
	v126 = v126 & v127
	loc125 = v126
	v126 = loc125
	v127 = 0xC0<32>
	v126 = v126 & v127
	loc16 = v126
	v126 = loc16
	v127 = 0x80<32>
	v128 = v126 == v127
	loc17 = v128
	v126 = loc17
	v128 = v126 == 0<32>
	branch !v128 l0011636D
	// succ:  l00116366 l0011636D
l00116366:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l0011636D:
	v126 = loc43
	v127 = 0x12<32>
	v126 = v126 << v127
	loc18 = v126
	v126 = loc18
	v127 = 0x1C0000<32>
	v126 = v126 & v127
	loc19 = v126
	v126 = loc105
	v127 = 0xFF<32>
	v126 = v126 & v127
	loc20 = v126
	v126 = loc20
	v127 = 0xC<32>
	v126 = v126 << v127
	loc21 = v126
	v126 = loc21
	v127 = 0x3F000<32>
	v126 = v126 & v127
	loc22 = v126
	v126 = loc22
	v127 = loc19
	v126 = v126 | v127
	loc23 = v126
	v126 = loc122
	v127 = 6<32>
	v126 = v126 << v127
	loc24 = v126
	v126 = loc24
	v127 = 0xFC0<32>
	v126 = v126 & v127
	loc25 = v126
	v126 = loc23
	v127 = loc25
	v126 = v126 | v127
	loc27 = v126
	v126 = loc125
	v127 = 0x3F<32>
	v126 = v126 & v127
	loc28 = v126
	v126 = loc27
	v127 = loc28
	v126 = v126 | v127
	loc29 = v126
	v126 = loc29
	v127 = arg3
	v128 = v126 >u v127
	loc30 = v128
	v126 = loc7
	v127 = 4<32>
	v126 = v126 + v127
	loc31 = v126
	v126 = loc30
	branch !v126 l001163DA
	// succ:  l001163D3 l001163DA
l001163D3:
	v126 = 0x28<32>
	loc127 = v126
	goto l001163F2
	// succ:  l001163F2
l001163DA:
	v126 = loc31
	loc9 = v126
	// succ:  l001163DE
l001163DE:
	// succ:  l001163DF
l001163DF:
	// succ:  l001163E0
l001163E0:
	v126 = loc6
	v127 = 1<32>
	v126 = v126 + v127
	loc32 = v126
	v126 = loc32
	loc6 = v126
	v126 = loc9
	loc7 = v126
	goto l00115FB8
	// succ:  l00115FB8
l001163F2:
	v126 = loc127
	v127 = 0x14<32>
	v128 = v126 == v127
	branch !v128 l0011640B
	// succ:  l001163FB l0011640B
l001163FB:
	v126 = arg0
	loc74 = v126
	v126 = loc64
	v127 = loc74
	v126 = v126 - v127
	loc75 = v126
	v126 = loc75
	loc8 = v126
	goto l0011649E
	// succ:  l0011649E
l0011640B:
	v126 = loc127
	v127 = 0x16<32>
	v128 = v126 == v127
	branch !v128 l00116422
	// succ:  l00116412 l00116422
l00116412:
	v126 = arg0
	loc78 = v126
	v126 = loc64
	v127 = loc78
	v126 = v126 - v127
	loc79 = v126
	v126 = loc79
	loc8 = v126
	goto l0011649D
	// succ:  l0011649D
l00116422:
	v126 = loc127
	v127 = 0x18<32>
	v128 = v126 == v127
	branch !v128 l00116439
	// succ:  l00116429 l00116439
l00116429:
	v126 = arg0
	loc83 = v126
	v126 = loc64
	v127 = loc83
	v126 = v126 - v127
	loc84 = v126
	v126 = loc84
	loc8 = v126
	goto l0011649C
	// succ:  l0011649C
l00116439:
	v126 = loc127
	v127 = 0x1F<32>
	v128 = v126 == v127
	branch !v128 l00116450
	// succ:  l00116440 l00116450
l00116440:
	v126 = arg0
	loc111 = v126
	v126 = loc100
	v127 = loc111
	v126 = v126 - v127
	loc112 = v126
	v126 = loc112
	loc8 = v126
	goto l0011649B
	// succ:  l0011649B
l00116450:
	v126 = loc127
	v127 = 0x21<32>
	v128 = v126 == v127
	branch !v128 l00116467
	// succ:  l00116457 l00116467
l00116457:
	v126 = arg0
	loc116 = v126
	v126 = loc100
	v127 = loc116
	v126 = v126 - v127
	loc117 = v126
	v126 = loc117
	loc8 = v126
	goto l0011649A
	// succ:  l0011649A
l00116467:
	v126 = loc127
	v127 = 0x23<32>
	v128 = v126 == v127
	branch !v128 l0011647E
	// succ:  l0011646E l0011647E
l0011646E:
	v126 = arg0
	loc120 = v126
	v126 = loc100
	v127 = loc120
	v126 = v126 - v127
	loc121 = v126
	v126 = loc121
	loc8 = v126
	goto l00116499
	// succ:  l00116499
l0011647E:
	v126 = loc127
	v127 = 0x28<32>
	v128 = v126 == v127
	branch !v128 l00116499
	// succ:  l00116485 l00116499
l00116485:
	v126 = loc7
	loc11 = v126
	v126 = arg0
	loc12 = v126
	v126 = loc11
	v127 = loc12
	v126 = v126 - v127
	loc13 = v126
	v126 = loc13
	loc8 = v126
	// succ:  l00116499
l00116499:
	// succ:  l00116499
l00116499:
	// succ:  l0011649A
l0011649A:
	// succ:  l0011649B
l0011649B:
	// succ:  l0011649C
l0011649C:
	// succ:  l0011649D
l0011649D:
	// succ:  l0011649E
l0011649E:
	v126 = loc8
	return v126
	// succ:  fn00115EEF_exit
l001164A2:
	return v126
	// succ:  fn00115EEF_exit
fn00115EEF_exit:


// fn001164A4
// Return size: 0
word32 fn001164A4(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn001164A4_entry:
	// succ:  l001164A4
l001164A4:
	v113 = Mem0[0x00140030<p32>:word32]
	loc118 = v113
	v113 = arg2
	v114 = arg0
	Mem0[v113:word32] = v114
	v113 = arg5
	v114 = arg3
	Mem0[v113:word32] = v114
	v113 = arg7
	v114 = 4<32>
	v113 = v113 & v114
	loc95 = v113
	v113 = loc95
	v114 = 0<32>
	v115 = v113 == v114
	loc106 = v115
	v113 = loc106
	branch !v113 l001164D3
	// succ:  l001164CA l001164D3
l001164CA:
	v113 = arg1
	loc10 = v113
	v113 = loc10
	loc11 = v113
	goto l00116576
	// succ:  l00116576
l001164D3:
	v113 = arg2
	v113 = Mem0[v113:word32]
	loc12 = v113
	v113 = arg1
	loc23 = v113
	v113 = loc12
	loc27 = v113
	v113 = loc23
	v114 = loc27
	v113 = v113 - v114
	loc28 = v113
	v113 = loc28
	v114 = 2<32>
	v115 = v113 > v114
	loc29 = v115
	v113 = loc29
	branch !v113 l00116571
	// succ:  l001164F4 l00116571
l001164F4:
	v113 = loc12
	v116 = Mem0[v113:int8]
	v113 = CONVERT(v116, int8, word32)
	loc30 = v113
	v113 = loc30
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFFEF<32>
	v115 = v113 == v114
	loc31 = v115
	v113 = loc31
	branch !v113 l0011656B
	// succ:  l0011650C l0011656B
l0011650C:
	v113 = loc12
	v114 = 1<32>
	v113 = v113 + v114
	loc32 = v113
	v113 = loc32
	v117 = Mem0[v113:int8]
	v113 = CONVERT(v117, int8, word32)
	loc33 = v113
	v113 = loc33
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFFBB<32>
	v115 = v113 == v114
	loc34 = v115
	v113 = loc34
	branch !v113 l00116565
	// succ:  l0011652C l00116565
l0011652C:
	v113 = loc12
	v114 = 2<32>
	v113 = v113 + v114
	loc35 = v113
	v113 = loc35
	v118 = Mem0[v113:int8]
	v113 = CONVERT(v118, int8, word32)
	loc36 = v113
	v113 = loc36
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFFBF<32>
	v115 = v113 == v114
	loc37 = v115
	v113 = loc37
	branch !v113 l0011655F
	// succ:  l0011654C l0011655F
l0011654C:
	v113 = loc12
	v114 = 3<32>
	v113 = v113 + v114
	loc38 = v113
	v113 = arg2
	v114 = loc38
	Mem0[v113:word32] = v114
	v113 = loc23
	loc11 = v113
	goto l00116563
	// succ:  l00116563
l0011655F:
	v113 = loc23
	loc11 = v113
	// succ:  l00116563
l00116563:
	goto l00116569
	// succ:  l00116569
l00116565:
	v113 = loc23
	loc11 = v113
	// succ:  l00116569
l00116569:
	goto l0011656F
	// succ:  l0011656F
l0011656B:
	v113 = loc23
	loc11 = v113
	// succ:  l0011656F
l0011656F:
	goto l00116575
	// succ:  l00116575
l00116571:
	v113 = loc23
	loc11 = v113
	// succ:  l00116575
l00116575:
	// succ:  l00116576
l00116576:
	v113 = arg2
	v113 = Mem0[v113:word32]
	loc39 = v113
	v113 = loc39
	v114 = arg1
	v115 = v113 <u v114
	loc40 = v115
	v113 = loc40
	v115 = v113 == 0<32>
	branch !v115 l00116595
	// succ:  l0011658E l00116595
l0011658E:
	v113 = 0x28<32>
	loc117 = v113
	goto l001169EF
	// succ:  l001169EF
l00116595:
	v113 = arg5
	v113 = Mem0[v113:word32]
	loc41 = v113
	v113 = loc41
	v114 = arg4
	v115 = v113 <u v114
	loc42 = v115
	v113 = loc42
	v115 = v113 == 0<32>
	branch !v115 l001165AF
	// succ:  l001165A8 l001165AF
l001165A8:
	v113 = 0x28<32>
	loc117 = v113
	goto l001169EF
	// succ:  l001169EF
l001165AF:
	v113 = loc39
	v119 = Mem0[v113:int8]
	v113 = CONVERT(v119, int8, word32)
	loc43 = v113
	v113 = loc43
	v114 = 0xFF<32>
	v113 = v113 & v114
	loc44 = v113
	v113 = loc43
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFFFF<32>
	v115 = v113 > v114
	loc45 = v115
	// succ:  l001165CB
l001165CB:
	v113 = loc45
	branch !v113 l001165F9
	// succ:  l001165D1 l001165F9
l001165D1:
	v113 = loc44
	v114 = arg6
	v115 = v113 >u v114
	loc46 = v115
	v113 = loc46
	branch !v113 l001165E3
	// succ:  l001165DC l001165E3
l001165DC:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l001165E3:
	v113 = loc41
	v114 = loc44
	Mem0[v113:word32] = v114
	v113 = loc39
	v114 = 1<32>
	v113 = v113 + v114
	loc47 = v113
	v113 = arg2
	v114 = loc47
	Mem0[v113:word32] = v114
	goto l001169D6
	// succ:  l001169D6
l001165F9:
	v113 = loc43
	v114 = 0xFF<32>
	v113 = v113 & v114
	v114 = 0xC2<32>
	v115 = v113 < v114
	loc48 = v115
	v113 = loc48
	branch !v113 l00116610
	// succ:  l00116609 l00116610
l00116609:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l00116610:
	v113 = loc43
	v114 = 0xFF<32>
	v113 = v113 & v114
	v114 = 0xE0<32>
	v115 = v113 < v114
	loc49 = v115
	v113 = loc49
	branch !v113 l001166B6
	// succ:  l00116620 l001166B6
l00116620:
	v113 = loc39
	loc50 = v113
	v113 = loc11
	v114 = loc50
	v113 = v113 - v114
	loc51 = v113
	v113 = loc51
	v114 = 2<32>
	v115 = v113 < v114
	loc52 = v115
	v113 = loc52
	branch !v113 l0011663D
	// succ:  l00116636 l0011663D
l00116636:
	v113 = 1<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l0011663D:
	v113 = loc39
	v114 = 1<32>
	v113 = v113 + v114
	loc53 = v113
	v113 = loc53
	v120 = Mem0[v113:int8]
	v113 = CONVERT(v120, int8, word32)
	loc54 = v113
	v113 = loc54
	v114 = 0xFF<32>
	v113 = v113 & v114
	loc55 = v113
	v113 = loc55
	v114 = 0xC0<32>
	v113 = v113 & v114
	loc56 = v113
	v113 = loc56
	v114 = 0x80<32>
	v115 = v113 == v114
	loc57 = v115
	v113 = loc57
	v115 = v113 == 0<32>
	branch !v115 l0011666F
	// succ:  l00116668 l0011666F
l00116668:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l0011666F:
	v113 = loc44
	v114 = 6<32>
	v113 = v113 << v114
	loc58 = v113
	v113 = loc58
	v114 = 0x7C0<32>
	v113 = v113 & v114
	loc59 = v113
	v113 = loc55
	v114 = 0x3F<32>
	v113 = v113 & v114
	loc60 = v113
	v113 = loc60
	v114 = loc59
	v113 = v113 | v114
	loc61 = v113
	v113 = loc61
	v114 = arg6
	v115 = v113 >u v114
	loc62 = v115
	v113 = loc62
	branch !v113 l0011669E
	// succ:  l00116697 l0011669E
l00116697:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l0011669E:
	v113 = loc41
	v114 = loc61
	Mem0[v113:word32] = v114
	v113 = loc39
	v114 = 2<32>
	v113 = v113 + v114
	loc63 = v113
	v113 = arg2
	v114 = loc63
	Mem0[v113:word32] = v114
	goto l001169D7
	// succ:  l001169D7
l001166B6:
	v113 = loc43
	v114 = 0xFF<32>
	v113 = v113 & v114
	v114 = 0xF0<32>
	v115 = v113 < v114
	loc64 = v115
	v113 = loc64
	branch !v113 l00116821
	// succ:  l001166C6 l00116821
l001166C6:
	v113 = loc39
	loc65 = v113
	v113 = loc11
	v114 = loc65
	v113 = v113 - v114
	loc66 = v113
	v113 = loc66
	v114 = 3<32>
	v115 = v113 < v114
	loc67 = v115
	v113 = loc67
	branch !v113 l001166E3
	// succ:  l001166DC l001166E3
l001166DC:
	v113 = 1<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l001166E3:
	v113 = loc39
	v114 = 1<32>
	v113 = v113 + v114
	loc68 = v113
	v113 = loc68
	v121 = Mem0[v113:int8]
	v113 = CONVERT(v121, int8, word32)
	loc69 = v113
	v113 = loc39
	v114 = 2<32>
	v113 = v113 + v114
	loc70 = v113
	v113 = loc70
	v122 = Mem0[v113:int8]
	v113 = CONVERT(v122, int8, word32)
	loc71 = v113
	// succ:  l001166FF
l001166FF:
	v113 = loc43
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFFE0<32>
	v113 = v113 - v114
	switch (v113) { l00116723 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l0011674A }
	// succ:  l00116723 l0011674A l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771
l00116723:
	v113 = loc69
	v114 = 0xFFFFFFE0<32>
	v113 = v113 & v114
	loc72 = v113
	v113 = loc72
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFFA0<32>
	v115 = v113 == v114
	loc73 = v115
	v113 = loc73
	v115 = v113 == 0<32>
	branch !v115 l00116747
	// succ:  l00116740 l00116747
l00116740:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l00116747:
	goto l00116796
	// succ:  l00116796
l00116749:
	// succ:  l0011674A
l0011674A:
	v113 = loc69
	v114 = 0xFFFFFFE0<32>
	v113 = v113 & v114
	loc74 = v113
	v113 = loc74
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFF80<32>
	v115 = v113 == v114
	loc75 = v115
	v113 = loc75
	v115 = v113 == 0<32>
	branch !v115 l0011676E
	// succ:  l00116767 l0011676E
l00116767:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l0011676E:
	goto l00116796
	// succ:  l00116796
l00116770:
	// succ:  l00116771
l00116771:
	v113 = loc69
	v114 = 0xFFFFFFC0<32>
	v113 = v113 & v114
	loc76 = v113
	v113 = loc76
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFF80<32>
	v115 = v113 == v114
	loc77 = v115
	v113 = loc77
	v115 = v113 == 0<32>
	branch !v115 l00116795
	// succ:  l0011678E l00116795
l0011678E:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l00116795:
	// succ:  l00116795
l00116795:
	// succ:  l00116796
l00116796:
	v113 = loc71
	v114 = 0xFF<32>
	v113 = v113 & v114
	loc78 = v113
	v113 = loc78
	v114 = 0xC0<32>
	v113 = v113 & v114
	loc79 = v113
	v113 = loc79
	v114 = 0x80<32>
	v115 = v113 == v114
	loc80 = v115
	v113 = loc80
	v115 = v113 == 0<32>
	branch !v115 l001167BB
	// succ:  l001167B4 l001167BB
l001167B4:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l001167BB:
	v113 = loc44
	v114 = 0xC<32>
	v113 = v113 << v114
	loc81 = v113
	v113 = loc81
	v114 = 0xF000<32>
	v113 = v113 & v114
	loc82 = v113
	v113 = loc69
	v114 = 0xFF<32>
	v113 = v113 & v114
	loc83 = v113
	v113 = loc83
	v114 = 6<32>
	v113 = v113 << v114
	loc84 = v113
	v113 = loc84
	v114 = 0xFC0<32>
	v113 = v113 & v114
	loc85 = v113
	v113 = loc85
	v114 = loc82
	v113 = v113 | v114
	loc86 = v113
	v113 = loc78
	v114 = 0x3F<32>
	v113 = v113 & v114
	loc87 = v113
	v113 = loc86
	v114 = loc87
	v113 = v113 | v114
	loc88 = v113
	v113 = loc88
	v114 = arg6
	v115 = v113 >u v114
	loc89 = v115
	v113 = loc89
	branch !v113 l00116809
	// succ:  l00116802 l00116809
l00116802:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l00116809:
	v113 = loc41
	v114 = loc88
	Mem0[v113:word32] = v114
	v113 = loc39
	v114 = 3<32>
	v113 = v113 + v114
	loc90 = v113
	v113 = arg2
	v114 = loc90
	Mem0[v113:word32] = v114
	goto l001169D7
	// succ:  l001169D7
l00116821:
	v113 = loc43
	v114 = 0xFF<32>
	v113 = v113 & v114
	v114 = 0xF5<32>
	v115 = v113 < v114
	loc91 = v115
	v113 = loc91
	v115 = v113 == 0<32>
	branch !v115 l00116839
	// succ:  l00116832 l00116839
l00116832:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l00116839:
	v113 = loc39
	loc92 = v113
	v113 = loc11
	v114 = loc92
	v113 = v113 - v114
	loc93 = v113
	v113 = loc93
	v114 = 4<32>
	v115 = v113 < v114
	loc94 = v115
	v113 = loc94
	branch !v113 l00116856
	// succ:  l0011684F l00116856
l0011684F:
	v113 = 1<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l00116856:
	v113 = loc39
	v114 = 1<32>
	v113 = v113 + v114
	loc96 = v113
	v113 = loc96
	v123 = Mem0[v113:int8]
	v113 = CONVERT(v123, int8, word32)
	loc97 = v113
	v113 = loc39
	v114 = 2<32>
	v113 = v113 + v114
	loc98 = v113
	v113 = loc98
	v124 = Mem0[v113:int8]
	v113 = CONVERT(v124, int8, word32)
	loc99 = v113
	v113 = loc39
	v114 = 3<32>
	v113 = v113 + v114
	loc100 = v113
	v113 = loc100
	v125 = Mem0[v113:int8]
	v113 = CONVERT(v125, int8, word32)
	loc101 = v113
	// succ:  l00116880
l00116880:
	v113 = loc43
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFFF0<32>
	v113 = v113 - v114
	switch (v113) { l0011689B l001168ED l001168ED l001168ED l001168C6 }
	// succ:  l0011689B l001168C6 l001168ED l001168ED l001168ED
l0011689B:
	v113 = loc97
	v114 = 0x70<32>
	v113 = v113 + v114
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	loc9 = v113
	v113 = loc9
	v114 = 0xFF<32>
	v113 = v113 & v114
	v114 = 0x30<32>
	v115 = v113 < v114
	loc102 = v115
	v113 = loc102
	v115 = v113 == 0<32>
	branch !v115 l001168C3
	// succ:  l001168BC l001168C3
l001168BC:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l001168C3:
	goto l00116912
	// succ:  l00116912
l001168C5:
	// succ:  l001168C6
l001168C6:
	v113 = loc97
	v114 = 0xFFFFFFF0<32>
	v113 = v113 & v114
	loc103 = v113
	v113 = loc103
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFF80<32>
	v115 = v113 == v114
	loc104 = v115
	v113 = loc104
	v115 = v113 == 0<32>
	branch !v115 l001168EA
	// succ:  l001168E3 l001168EA
l001168E3:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l001168EA:
	goto l00116912
	// succ:  l00116912
l001168EC:
	// succ:  l001168ED
l001168ED:
	v113 = loc97
	v114 = 0xFFFFFFC0<32>
	v113 = v113 & v114
	loc105 = v113
	v113 = loc105
	v114 = 0x18<32>
	v113 = v113 << v114
	v114 = 0x18<32>
	v113 = v113 >> v114
	v114 = 0xFFFFFF80<32>
	v115 = v113 == v114
	loc107 = v115
	v113 = loc107
	v115 = v113 == 0<32>
	branch !v115 l00116911
	// succ:  l0011690A l00116911
l0011690A:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l00116911:
	// succ:  l00116911
l00116911:
	// succ:  l00116912
l00116912:
	v113 = loc99
	v114 = 0xFF<32>
	v113 = v113 & v114
	loc108 = v113
	v113 = loc108
	v114 = 0xC0<32>
	v113 = v113 & v114
	loc109 = v113
	v113 = loc109
	v114 = 0x80<32>
	v115 = v113 == v114
	loc110 = v115
	v113 = loc110
	v115 = v113 == 0<32>
	branch !v115 l00116937
	// succ:  l00116930 l00116937
l00116930:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l00116937:
	v113 = loc101
	v114 = 0xFF<32>
	v113 = v113 & v114
	loc111 = v113
	v113 = loc111
	v114 = 0xC0<32>
	v113 = v113 & v114
	loc112 = v113
	v113 = loc112
	v114 = 0x80<32>
	v115 = v113 == v114
	loc113 = v115
	v113 = loc113
	v115 = v113 == 0<32>
	branch !v115 l0011695B
	// succ:  l00116954 l0011695B
l00116954:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l0011695B:
	v113 = loc44
	v114 = 0x12<32>
	v113 = v113 << v114
	loc114 = v113
	v113 = loc114
	v114 = 0x1C0000<32>
	v113 = v113 & v114
	loc115 = v113
	v113 = loc97
	v114 = 0xFF<32>
	v113 = v113 & v114
	loc116 = v113
	v113 = loc116
	v114 = 0xC<32>
	v113 = v113 << v114
	loc13 = v113
	v113 = loc13
	v114 = 0x3F000<32>
	v113 = v113 & v114
	loc14 = v113
	v113 = loc14
	v114 = loc115
	v113 = v113 | v114
	loc15 = v113
	v113 = loc108
	v114 = 6<32>
	v113 = v113 << v114
	loc16 = v113
	v113 = loc16
	v114 = 0xFC0<32>
	v113 = v113 & v114
	loc17 = v113
	v113 = loc15
	v114 = loc17
	v113 = v113 | v114
	loc18 = v113
	v113 = loc111
	v114 = 0x3F<32>
	v113 = v113 & v114
	loc19 = v113
	v113 = loc18
	v114 = loc19
	v113 = v113 | v114
	loc20 = v113
	v113 = loc20
	v114 = arg6
	v115 = v113 >u v114
	loc21 = v115
	v113 = loc21
	branch !v113 l001169C1
	// succ:  l001169BA l001169C1
l001169BA:
	v113 = 2<32>
	loc8 = v113
	goto l001169EF
	// succ:  l001169EF
l001169C1:
	v113 = loc41
	v114 = loc20
	Mem0[v113:word32] = v114
	v113 = loc39
	v114 = 4<32>
	v113 = v113 + v114
	loc22 = v113
	v113 = arg2
	v114 = loc22
	Mem0[v113:word32] = v114
	// succ:  l001169D6
l001169D6:
	// succ:  l001169D7
l001169D7:
	v113 = arg5
	v113 = Mem0[v113:word32]
	loc24 = v113
	v113 = loc24
	v114 = 4<32>
	v113 = v113 + v114
	loc25 = v113
	v113 = arg5
	v114 = loc25
	Mem0[v113:word32] = v114
	goto l00116576
	// succ:  l00116576
l001169EF:
	v113 = loc117
	v114 = 0x28<32>
	v115 = v113 == v114
	branch !v115 l00116A04
	// succ:  l001169F8 l00116A04
l001169F8:
	v113 = loc40
	v114 = 1<32>
	v113 = v113 & v114
	loc26 = v113
	v113 = loc26
	loc8 = v113
	// succ:  l00116A04
l00116A04:
	v113 = loc8
	return v113
	// succ:  fn001164A4_exit
l00116A07:
	return v113
	// succ:  fn001164A4_exit
fn001164A4_exit:


// fn00116A09
// Return size: 0
word32 fn00116A09(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00116A09_entry:
	// succ:  l00116A09
l00116A09:
	v89 = Mem0[0x00140030<p32>:word32]
	loc94 = v89
	v89 = arg2
	v90 = arg0
	Mem0[v89:word32] = v90
	v89 = arg5
	v90 = arg3
	Mem0[v89:word32] = v90
	v89 = arg7
	v90 = 2<32>
	v89 = v89 & v90
	loc81 = v89
	v89 = loc81
	v90 = 0<32>
	v91 = v89 == v90
	loc91 = v91
	v89 = arg4
	loc10 = v89
	v89 = loc91
	branch !v89 l00116A38
	// succ:  l00116A33 l00116A38
l00116A33:
	v89 = 4<32>
	loc93 = v89
	goto l00116AA7
	// succ:  l00116AA7
l00116A38:
	v89 = arg3
	loc11 = v89
	v89 = loc10
	v90 = loc11
	v89 = v89 - v90
	loc12 = v89
	v89 = loc12
	v90 = 3<32>
	v91 = v89 < v90
	loc13 = v91
	v89 = loc13
	branch !v89 l00116A53
	// succ:  l00116A4E l00116A53
l00116A4E:
	v89 = 1<32>
	loc8 = v89
	goto l00116AA6
	// succ:  l00116AA6
l00116A53:
	v89 = arg3
	v90 = 1<32>
	v89 = v89 + v90
	loc14 = v89
	v89 = arg5
	v90 = loc14
	Mem0[v89:word32] = v90
	v89 = arg3
	v90 = 0xFFFFFFEF<32>
	v92 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v92
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc15 = v89
	v89 = loc15
	v90 = 1<32>
	v89 = v89 + v90
	loc16 = v89
	v89 = arg5
	v90 = loc16
	Mem0[v89:word32] = v90
	v89 = loc15
	v90 = 0xFFFFFFBB<32>
	v93 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v93
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc17 = v89
	v89 = loc17
	v90 = 1<32>
	v89 = v89 + v90
	loc18 = v89
	v89 = arg5
	v90 = loc18
	Mem0[v89:word32] = v90
	v89 = loc17
	v90 = 0xFFFFFFBF<32>
	v94 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v94
	v89 = 4<32>
	loc93 = v89
	// succ:  l00116AA6
l00116AA6:
	// succ:  l00116AA7
l00116AA7:
	v89 = loc93
	v90 = 4<32>
	v91 = v89 == v90
	branch !v91 l00116DB8
	// succ:  l00116AB1 l00116DB8
l00116AB1:
	v89 = arg2
	v89 = Mem0[v89:word32]
	loc9 = v89
	v89 = loc9
	loc20 = v89
	v89 = loc20
	v90 = arg1
	v91 = v89 <u v90
	loc19 = v91
	v89 = loc19
	v91 = v89 == 0<32>
	branch !v91 l00116AD1
	// succ:  l00116ACA l00116AD1
l00116ACA:
	v89 = 0<32>
	loc8 = v89
	goto l00116DB8
	// succ:  l00116DB8
l00116AD1:
	v89 = loc20
	v89 = Mem0[v89:word32]
	loc21 = v89
	v89 = loc21
	v90 = 0xFFFFF800<32>
	v89 = v89 & v90
	loc22 = v89
	v89 = loc22
	v90 = 0xD800<32>
	v91 = v89 == v90
	loc23 = v91
	v89 = loc21
	v90 = arg6
	v91 = v89 >u v90
	loc24 = v91
	v89 = loc24
	v90 = loc23
	v89 = v89 | v90
	loc92 = v89
	v89 = loc92
	branch !v89 l00116B02
	// succ:  l00116AFB l00116B02
l00116AFB:
	v89 = 2<32>
	loc8 = v89
	goto l00116DB8
	// succ:  l00116DB8
l00116B02:
	v89 = loc21
	v90 = 0x80<32>
	v91 = v89 <u v90
	loc25 = v91
	// succ:  l00116B0A
l00116B0A:
	v89 = loc25
	branch !v89 l00116B52
	// succ:  l00116B10 l00116B52
l00116B10:
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc26 = v89
	v89 = loc26
	loc27 = v89
	v89 = loc10
	v90 = loc27
	v89 = v89 - v90
	loc28 = v89
	v89 = loc28
	v90 = 1<32>
	v91 = v89 < v90
	loc29 = v91
	v89 = loc29
	branch !v89 l00116B34
	// succ:  l00116B2D l00116B34
l00116B2D:
	v89 = 1<32>
	loc8 = v89
	goto l00116DB8
	// succ:  l00116DB8
l00116B34:
	v89 = loc21
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc30 = v89
	v89 = loc26
	v90 = 1<32>
	v89 = v89 + v90
	loc31 = v89
	v89 = arg5
	v90 = loc31
	Mem0[v89:word32] = v90
	v89 = loc26
	v90 = loc30
	v95 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v95
	goto l00116D99
	// succ:  l00116D99
l00116B52:
	v89 = loc21
	v90 = 0x800<32>
	v91 = v89 <u v90
	loc32 = v91
	v89 = loc32
	branch !v89 l00116BE4
	// succ:  l00116B5E l00116BE4
l00116B5E:
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc33 = v89
	v89 = loc33
	loc34 = v89
	v89 = loc10
	v90 = loc34
	v89 = v89 - v90
	loc35 = v89
	v89 = loc35
	v90 = 2<32>
	v91 = v89 < v90
	loc36 = v91
	v89 = loc36
	branch !v89 l00116B82
	// succ:  l00116B7B l00116B82
l00116B7B:
	v89 = 1<32>
	loc8 = v89
	goto l00116DB8
	// succ:  l00116DB8
l00116B82:
	v89 = loc21
	v90 = 6<32>
	v89 = v89 >>u v90
	loc37 = v89
	v89 = loc37
	v90 = 0xC0<32>
	v89 = v89 | v90
	loc38 = v89
	v89 = loc38
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc39 = v89
	v89 = loc33
	v90 = 1<32>
	v89 = v89 + v90
	loc40 = v89
	v89 = arg5
	v90 = loc40
	Mem0[v89:word32] = v90
	v89 = loc33
	v90 = loc39
	v96 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v96
	v89 = loc21
	v90 = 0x3F<32>
	v89 = v89 & v90
	loc41 = v89
	v89 = loc41
	v90 = 0x80<32>
	v89 = v89 | v90
	loc42 = v89
	v89 = loc42
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc43 = v89
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc44 = v89
	v89 = loc44
	v90 = 1<32>
	v89 = v89 + v90
	loc45 = v89
	v89 = arg5
	v90 = loc45
	Mem0[v89:word32] = v90
	v89 = loc44
	v90 = loc43
	v97 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v97
	goto l00116D9A
	// succ:  l00116D9A
l00116BE4:
	v89 = loc21
	v90 = 0x10000<32>
	v91 = v89 <u v90
	loc46 = v91
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc47 = v89
	v89 = loc47
	loc48 = v89
	v89 = loc10
	v90 = loc48
	v89 = v89 - v90
	loc49 = v89
	v89 = loc46
	branch !v89 l00116CB1
	// succ:  l00116C03 l00116CB1
l00116C03:
	v89 = loc49
	v90 = 3<32>
	v91 = v89 < v90
	loc50 = v91
	v89 = loc50
	branch !v89 l00116C15
	// succ:  l00116C0E l00116C15
l00116C0E:
	v89 = 1<32>
	loc8 = v89
	goto l00116DB8
	// succ:  l00116DB8
l00116C15:
	v89 = loc21
	v90 = 0xC<32>
	v89 = v89 >>u v90
	loc51 = v89
	v89 = loc51
	v90 = 0xE0<32>
	v89 = v89 | v90
	loc52 = v89
	v89 = loc52
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc53 = v89
	v89 = loc47
	v90 = 1<32>
	v89 = v89 + v90
	loc54 = v89
	v89 = arg5
	v90 = loc54
	Mem0[v89:word32] = v90
	v89 = loc47
	v90 = loc53
	v98 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v98
	v89 = loc21
	v90 = 6<32>
	v89 = v89 >>u v90
	loc55 = v89
	v89 = loc55
	v90 = 0x3F<32>
	v89 = v89 & v90
	loc56 = v89
	v89 = loc56
	v90 = 0x80<32>
	v89 = v89 | v90
	loc57 = v89
	v89 = loc57
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc58 = v89
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc59 = v89
	v89 = loc59
	v90 = 1<32>
	v89 = v89 + v90
	loc60 = v89
	v89 = arg5
	v90 = loc60
	Mem0[v89:word32] = v90
	v89 = loc59
	v90 = loc58
	v99 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v99
	v89 = loc21
	v90 = 0x3F<32>
	v89 = v89 & v90
	loc61 = v89
	v89 = loc61
	v90 = 0x80<32>
	v89 = v89 | v90
	loc62 = v89
	v89 = loc62
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc63 = v89
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc64 = v89
	v89 = loc64
	v90 = 1<32>
	v89 = v89 + v90
	loc65 = v89
	v89 = arg5
	v90 = loc65
	Mem0[v89:word32] = v90
	v89 = loc64
	v90 = loc63
	v100 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v100
	goto l00116D9A
	// succ:  l00116D9A
l00116CB1:
	v89 = loc49
	v90 = 4<32>
	v91 = v89 < v90
	loc66 = v91
	v89 = loc66
	branch !v89 l00116CC3
	// succ:  l00116CBC l00116CC3
l00116CBC:
	v89 = 1<32>
	loc8 = v89
	goto l00116DB8
	// succ:  l00116DB8
l00116CC3:
	v89 = loc21
	v90 = 0x12<32>
	v89 = v89 >>u v90
	loc67 = v89
	v89 = loc67
	v90 = 0xF0<32>
	v89 = v89 | v90
	loc68 = v89
	v89 = loc68
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc69 = v89
	v89 = loc47
	v90 = 1<32>
	v89 = v89 + v90
	loc70 = v89
	v89 = arg5
	v90 = loc70
	Mem0[v89:word32] = v90
	v89 = loc47
	v90 = loc69
	v101 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v101
	v89 = loc21
	v90 = 0xC<32>
	v89 = v89 >>u v90
	loc71 = v89
	v89 = loc71
	v90 = 0x3F<32>
	v89 = v89 & v90
	loc72 = v89
	v89 = loc72
	v90 = 0x80<32>
	v89 = v89 | v90
	loc73 = v89
	v89 = loc73
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc74 = v89
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc75 = v89
	v89 = loc75
	v90 = 1<32>
	v89 = v89 + v90
	loc76 = v89
	v89 = arg5
	v90 = loc76
	Mem0[v89:word32] = v90
	v89 = loc75
	v90 = loc74
	v102 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v102
	v89 = loc21
	v90 = 6<32>
	v89 = v89 >>u v90
	loc77 = v89
	v89 = loc77
	v90 = 0x3F<32>
	v89 = v89 & v90
	loc78 = v89
	v89 = loc78
	v90 = 0x80<32>
	v89 = v89 | v90
	loc79 = v89
	v89 = loc79
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc80 = v89
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc82 = v89
	v89 = loc82
	v90 = 1<32>
	v89 = v89 + v90
	loc83 = v89
	v89 = arg5
	v90 = loc83
	Mem0[v89:word32] = v90
	v89 = loc82
	v90 = loc80
	v103 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v103
	v89 = loc21
	v90 = 0x3F<32>
	v89 = v89 & v90
	loc84 = v89
	v89 = loc84
	v90 = 0x80<32>
	v89 = v89 | v90
	loc85 = v89
	v89 = loc85
	v90 = 0xFF<32>
	v89 = v89 & v90
	loc86 = v89
	v89 = arg5
	v89 = Mem0[v89:word32]
	loc87 = v89
	v89 = loc87
	v90 = 1<32>
	v89 = v89 + v90
	loc88 = v89
	v89 = arg5
	v90 = loc88
	Mem0[v89:word32] = v90
	v89 = loc87
	v90 = loc86
	v104 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v104
	goto l00116D9A
	// succ:  l00116D9A
l00116D98:
	// succ:  l00116D99
l00116D99:
	// succ:  l00116D9A
l00116D9A:
	v89 = arg2
	v89 = Mem0[v89:word32]
	loc89 = v89
	v89 = loc89
	v90 = 4<32>
	v89 = v89 + v90
	loc90 = v89
	v89 = arg2
	v90 = loc90
	Mem0[v89:word32] = v90
	v89 = loc90
	loc20 = v89
	goto l00116AB1
	// succ:  l00116AB1
l00116DB8:
	// succ:  l00116DB8
l00116DB8:
	v89 = loc8
	return v89
	// succ:  fn00116A09_exit
l00116DBC:
	return v89
	// succ:  fn00116A09_exit
fn00116A09_exit:


// fn00116DBE
// Return size: 0
void fn00116DBE(word32 arg0)
fn00116DBE_entry:
	// succ:  l00116DBE
l00116DBE:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn00116DBE_exit
l00116DCA:
	return
	// succ:  fn00116DBE_exit
fn00116DBE_exit:


// fn00116DCC
// Return size: 0
word32 fn00116DCC(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00116DCC_entry:
	// succ:  l00116DCC
l00116DCC:
	v4 = Mem0[0x00140030<p32>:word32]
	loc9 = v4
	v4 = arg4
	v5 = arg2
	Mem0[v4:word32] = v5
	v4 = arg7
	v5 = arg5
	Mem0[v4:word32] = v5
	v4 = 3<32>
	return v4
	// succ:  fn00116DCC_exit
l00116DE3:
	return v4
	// succ:  fn00116DCC_exit
fn00116DCC_exit:


// fn00116DE5
// Return size: 0
word32 fn00116DE5(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00116DE5_entry:
	// succ:  l00116DE5
l00116DE5:
	v4 = Mem0[0x00140030<p32>:word32]
	loc9 = v4
	v4 = arg4
	v5 = arg2
	Mem0[v4:word32] = v5
	v4 = arg7
	v5 = arg5
	Mem0[v4:word32] = v5
	v4 = 3<32>
	return v4
	// succ:  fn00116DE5_exit
l00116DFC:
	return v4
	// succ:  fn00116DE5_exit
fn00116DE5_exit:


// fn00116DFE
// Return size: 0
word32 fn00116DFE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00116DFE_entry:
	// succ:  l00116DFE
l00116DFE:
	v4 = Mem0[0x00140030<p32>:word32]
	loc6 = v4
	v4 = arg4
	v5 = arg2
	Mem0[v4:word32] = v5
	v4 = 3<32>
	return v4
	// succ:  fn00116DFE_exit
l00116E0E:
	return v4
	// succ:  fn00116DFE_exit
fn00116DFE_exit:


// fn00116E10
// Return size: 0
word32 fn00116E10(word32 arg0)
fn00116E10_entry:
	// succ:  l00116E10
l00116E10:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 1<32>
	return v4
	// succ:  fn00116E10_exit
l00116E19:
	return v4
	// succ:  fn00116E10_exit
fn00116E10_exit:


// fn00116E1B
// Return size: 0
word32 fn00116E1B(word32 arg0)
fn00116E1B_entry:
	// succ:  l00116E1B
l00116E1B:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 1<32>
	return v4
	// succ:  fn00116E1B_exit
l00116E24:
	return v4
	// succ:  fn00116E1B_exit
fn00116E1B_exit:


// fn00116E26
// Return size: 0
word32 fn00116E26(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00116E26_entry:
	// succ:  l00116E26
l00116E26:
	v9 = Mem0[0x00140030<p32>:word32]
	loc11 = v9
	v9 = arg3
	loc6 = v9
	v9 = arg2
	loc7 = v9
	v9 = loc6
	v10 = loc7
	v9 = v9 - v10
	loc8 = v9
	v9 = loc8
	v10 = arg4
	v11 = v9 <u v10
	loc9 = v11
	v9 = loc9
	branch !v9 l00116E49
	// succ:  l00116E46 l00116E49
l00116E46:
	v9 = loc8
	goto l00116E4B
	// succ:  l00116E4B
l00116E49:
	v9 = arg4
	// succ:  l00116E4B
l00116E4B:
	loc5 = v9
	v9 = loc5
	return v9
	// succ:  fn00116E26_exit
l00116E51:
	return v9
	// succ:  fn00116E26_exit
fn00116E26_exit:


// fn00116E53
// Return size: 0
word32 fn00116E53(word32 arg0)
fn00116E53_entry:
	// succ:  l00116E53
l00116E53:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 1<32>
	return v4
	// succ:  fn00116E53_exit
l00116E5C:
	return v4
	// succ:  fn00116E53_exit
fn00116E53_exit:


// fn00116E5E
// Return size: 0
word32 fn00116E5E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00116E5E_entry:
	// succ:  l00116E5E
l00116E5E:
	v123 = Mem0[0x00140030<p32>:word32]
	loc127 = v123
	v123 = Mem0[0x00140030<p32>:word32]
	v124 = 0x10<32>
	v123 = v123 + v124
	Mem0[0x00140030<p32>:word32] = v123
	v123 = Mem0[0x00140030<p32>:word32]
	v124 = Mem0[0x00140034<p32>:word32]
	v125 = v123 >= v124
	branch !v125 l00116E77
	// succ:  l00116E72 l00116E77
l00116E72:
	v123 = 0x10<32>
	abortStackOverflow(v123)
	// succ:  l00116E77
l00116E77:
	v123 = loc127
	loc102 = v123
	v123 = loc127
	v124 = 8<32>
	v123 = v123 + v124
	loc113 = v123
	v123 = arg2
	loc10 = v123
	// succ:  l00116E88
l00116E88:
	v123 = loc10
	v124 = arg3
	v125 = v123 == v124
	loc25 = v125
	v123 = loc25
	branch !v123 l00116E9C
	// succ:  l00116E95 l00116E9C
l00116E95:
	v123 = arg3
	loc11 = v123
	goto l00116EC2
	// succ:  l00116EC2
l00116E9C:
	v123 = loc10
	v123 = Mem0[v123:word32]
	loc34 = v123
	v123 = loc34
	v124 = 0<32>
	v125 = v123 == v124
	loc35 = v125
	v123 = loc35
	branch !v123 l00116EB5
	// succ:  l00116EAE l00116EB5
l00116EAE:
	v123 = loc10
	loc11 = v123
	goto l00116EC2
	// succ:  l00116EC2
l00116EB5:
	v123 = loc10
	v124 = 4<32>
	v123 = v123 + v124
	loc36 = v123
	v123 = loc36
	loc10 = v123
	goto l00116E77
	// succ:  l00116E77
l00116EC2:
	v123 = arg7
	v124 = arg5
	Mem0[v123:word32] = v124
	v123 = arg4
	v124 = arg2
	Mem0[v123:word32] = v124
	v123 = arg6
	loc37 = v123
	v123 = arg0
	v124 = 8<32>
	v123 = v123 + v124
	loc38 = v123
	v123 = arg2
	loc12 = v123
	v123 = arg5
	loc13 = v123
	v123 = loc11
	loc14 = v123
	// succ:  l00116EEB
l00116EEB:
	v123 = loc12
	v124 = arg3
	v125 = v123 == v124
	loc39 = v125
	v123 = loc13
	v124 = arg6
	v125 = v123 == v124
	loc40 = v125
	v123 = loc40
	v124 = loc39
	v123 = v123 | v124
	loc125 = v123
	v123 = loc125
	branch !v123 l00116F11
	// succ:  l00116F06 l00116F11
l00116F06:
	v123 = loc12
	loc30 = v123
	v123 = 0x35<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l00116F11:
	v123 = arg1
	v126 = Mem0[v123:word64]
	loc128 = v126
	v123 = loc102
	v127 = loc128
	Mem0[v123:word64] = v127
	v123 = loc14
	loc41 = v123
	v123 = loc12
	loc42 = v123
	v123 = loc41
	v124 = loc42
	v123 = v123 - v124
	loc43 = v123
	v123 = loc43
	v124 = 2<32>
	v123 = v123 >> v124
	loc44 = v123
	v123 = loc13
	loc45 = v123
	v123 = loc37
	v124 = loc45
	v123 = v123 - v124
	loc46 = v123
	v123 = loc38
	v123 = Mem0[v123:word32]
	loc47 = v123
	v123 = loc47
	v123 = fn000DB419(v123)
	loc48 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x1B9<32>
	v124 = loc13
	v128 = arg4
	v129 = loc44
	v130 = loc46
	v131 = arg1
	v123 = invoke_iiiiii(v123, v124, v128, v129, v130, v131)
	loc49 = v123
	v123 = Mem0[0x00140048<p32>:word32]
	loc50 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc50
	v124 = 1<32>
	v123 = v123 & v124
	loc51 = v123
	v123 = loc51
	branch !v123 l00116F7F
	// succ:  l00116F78 l00116F7F
l00116F78:
	v123 = 0xB<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l00116F7F:
	v123 = loc48
	v124 = 0<32>
	v125 = v123 == v124
	loc52 = v125
	v123 = loc52
	v125 = v123 == 0<32>
	branch !v125 l00116FB2
	// succ:  l00116F8B l00116FB2
l00116F8B:
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x17E<32>
	v124 = loc48
	v123 = invoke_ii(v123, v124)
	v123 = Mem0[0x00140048<p32>:word32]
	loc53 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc53
	v124 = 1<32>
	v123 = v123 & v124
	loc54 = v123
	v123 = loc54
	branch !v123 l00116FB1
	// succ:  l00116FAA l00116FB1
l00116FAA:
	v123 = 0xA<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l00116FB1:
	// succ:  l00116FB2
l00116FB2:
	v123 = loc49
	v124 = 0xFFFFFFFF<32>
	v123 = v123 - v124
	switch (v123) { l00116FC4 l00116FD0 }
	// succ:  l00116FC4 l00116FD0
l00116FC4:
	v123 = 0x10<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l00116FCF:
	// succ:  l00116FD0
l00116FD0:
	v123 = 1<32>
	loc19 = v123
	v123 = 0x32<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l00116FDF:
	// succ:  l00116FE0
l00116FE0:
	// succ:  l00116FE2
l00116FE2:
	v123 = arg7
	v123 = Mem0[v123:word32]
	loc89 = v123
	v123 = loc89
	v124 = loc49
	v123 = v123 + v124
	loc90 = v123
	v123 = arg7
	v124 = loc90
	Mem0[v123:word32] = v124
	v123 = loc90
	v124 = arg6
	v125 = v123 == v124
	loc91 = v125
	v123 = loc91
	branch !v123 l0011700A
	// succ:  l00117003 l0011700A
l00117003:
	v123 = 0x33<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l0011700A:
	v123 = loc14
	v124 = arg3
	v125 = v123 == v124
	loc92 = v125
	v123 = loc92
	branch !v123 l00117029
	// succ:  l00117015 l00117029
l00117015:
	v123 = arg4
	v123 = Mem0[v123:word32]
	loc22 = v123
	v123 = arg3
	loc21 = v123
	v123 = loc90
	loc32 = v123
	v123 = loc22
	loc33 = v123
	goto l00117191
	// succ:  l00117191
l00117029:
	v123 = loc38
	v123 = Mem0[v123:word32]
	loc93 = v123
	v123 = loc93
	v123 = fn000DB419(v123)
	loc94 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x1BA<32>
	v124 = loc113
	v128 = 0<32>
	v129 = arg1
	v123 = invoke_iiii(v123, v124, v128, v129)
	loc95 = v123
	v123 = Mem0[0x00140048<p32>:word32]
	loc96 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc96
	v124 = 1<32>
	v123 = v123 & v124
	loc97 = v123
	v123 = loc97
	branch !v123 l00117062
	// succ:  l0011705B l00117062
l0011705B:
	v123 = 0x24<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l00117062:
	v123 = loc94
	v124 = 0<32>
	v125 = v123 == v124
	loc98 = v125
	v123 = loc98
	v125 = v123 == 0<32>
	branch !v125 l00117095
	// succ:  l0011706E l00117095
l0011706E:
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x17E<32>
	v124 = loc94
	v123 = invoke_ii(v123, v124)
	v123 = Mem0[0x00140048<p32>:word32]
	loc99 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc99
	v124 = 1<32>
	v123 = v123 & v124
	loc100 = v123
	v123 = loc100
	branch !v123 l00117094
	// succ:  l0011708D l00117094
l0011708D:
	v123 = 0x23<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l00117094:
	// succ:  l00117095
l00117095:
	v123 = loc95
	v124 = 0xFFFFFFFF<32>
	v125 = v123 == v124
	loc111 = v125
	v123 = loc111
	branch !v123 l001170AB
	// succ:  l001170A0 l001170AB
l001170A0:
	v123 = 2<32>
	loc15 = v123
	v123 = 0x31<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l001170AB:
	v123 = arg7
	v123 = Mem0[v123:word32]
	loc112 = v123
	v123 = loc37
	v124 = loc112
	v123 = v123 - v124
	loc114 = v123
	v123 = loc95
	v124 = loc114
	v125 = v123 >u v124
	loc115 = v125
	v123 = loc115
	branch !v123 l001170CF
	// succ:  l001170C4 l001170CF
l001170C4:
	v123 = 1<32>
	loc15 = v123
	v123 = 0x31<32>
	loc126 = v123
	goto l001171A0
	// succ:  l001171A0
l001170CF:
	v123 = loc113
	loc8 = v123
	v123 = loc95
	loc9 = v123
	// succ:  l001170D7
l001170D7:
	v123 = loc9
	v124 = 0<32>
	v125 = v123 == v124
	loc116 = v125
	v123 = loc116
	branch !v123 l001170EA
	// succ:  l001170E7 l001170EA
l001170E7:
	goto l00117125
	// succ:  l00117125
l001170EA:
	v123 = loc8
	v124 = 1<32>
	v123 = v123 + v124
	loc119 = v123
	v123 = loc8
	v132 = Mem0[v123:int8]
	v123 = CONVERT(v132, int8, word32)
	loc120 = v123
	v123 = arg7
	v123 = Mem0[v123:word32]
	loc121 = v123
	v123 = loc121
	v124 = 1<32>
	v123 = v123 + v124
	loc122 = v123
	v123 = arg7
	v124 = loc122
	Mem0[v123:word32] = v124
	v123 = loc121
	v124 = loc120
	v133 = SLICE(v124, byte, 0)
	Mem0[v123:byte] = v133
	v123 = loc9
	v124 = 0xFFFFFFFF<32>
	v123 = v123 + v124
	loc123 = v123
	v123 = loc119
	loc8 = v123
	v123 = loc123
	loc9 = v123
	goto l001170D7
	// succ:  l001170D7
l00117125:
	v123 = arg4
	v123 = Mem0[v123:word32]
	loc117 = v123
	v123 = loc117
	v124 = 4<32>
	v123 = v123 + v124
	loc118 = v123
	v123 = arg4
	v124 = loc118
	Mem0[v123:word32] = v124
	v123 = loc118
	loc17 = v123
	// succ:  l00117142
l00117142:
	v123 = loc17
	v124 = arg3
	v125 = v123 == v124
	loc26 = v125
	v123 = loc26
	branch !v123 l00117156
	// succ:  l0011714F l00117156
l0011714F:
	v123 = arg3
	loc18 = v123
	goto l0011717C
	// succ:  l0011717C
l00117156:
	v123 = loc17
	v123 = Mem0[v123:word32]
	loc27 = v123
	v123 = loc27
	v124 = 0<32>
	v125 = v123 == v124
	loc28 = v125
	v123 = loc28
	branch !v123 l0011716F
	// succ:  l00117168 l0011716F
l00117168:
	v123 = loc17
	loc18 = v123
	goto l0011717C
	// succ:  l0011717C
l0011716F:
	v123 = loc17
	v124 = 4<32>
	v123 = v123 + v124
	loc29 = v123
	v123 = loc29
	loc17 = v123
	goto l00117125
	// succ:  l00117125
l0011717C:
	v123 = arg7
	v123 = Mem0[v123:word32]
	loc23 = v123
	v123 = loc18
	loc21 = v123
	v123 = loc23
	loc32 = v123
	v123 = loc118
	loc33 = v123
	// succ:  l00117191
l00117191:
	v123 = loc33
	loc12 = v123
	v123 = loc32
	loc13 = v123
	v123 = loc21
	loc14 = v123
	goto l00116EC2
	// succ:  l00116EC2
l001171A0:
	v123 = loc126
	v124 = 0xA<32>
	v125 = v123 == v124
	branch !v125 l001171BA
	// succ:  l001171AB l001171BA
l001171AB:
	v123 = 0<32>
	v123 = ___cxa_find_matching_catch_3(v123)
	loc55 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc56 = v123
	v123 = loc55
	fn000D0E65(v123)
	goto l001173FB
	// succ:  l001173FB
l001171BA:
	v123 = loc126
	v124 = 0xB<32>
	v125 = v123 == v124
	branch !v125 l00117209
	// succ:  l001171C1 l00117209
l001171C1:
	v123 = ___cxa_find_matching_catch_2()
	loc57 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc58 = v123
	v123 = loc48
	v124 = 0<32>
	v125 = v123 == v124
	loc59 = v125
	v123 = loc59
	v125 = v123 == 0<32>
	branch !v125 l00117204
	// succ:  l001171D5 l00117204
l001171D5:
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x17E<32>
	v124 = loc48
	v123 = invoke_ii(v123, v124)
	v123 = Mem0[0x00140048<p32>:word32]
	loc60 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc60
	v124 = 1<32>
	v123 = v123 & v124
	loc61 = v123
	v123 = loc61
	branch !v123 l00117203
	// succ:  l001171F4 l00117203
l001171F4:
	v123 = 0<32>
	v123 = ___cxa_find_matching_catch_3(v123)
	loc62 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc63 = v123
	v123 = loc62
	fn000D0E65(v123)
	// succ:  l00117203
l00117203:
	// succ:  l00117204
l00117204:
	v123 = loc57
	___resumeException(v123)
	goto l001173FA
	// succ:  l001173FA
l00117209:
	v123 = loc126
	v124 = 0x10<32>
	v125 = v123 == v124
	branch !v125 l0011736A
	// succ:  l00117210 l0011736A
l00117210:
	v123 = arg7
	v124 = loc13
	Mem0[v123:word32] = v124
	v123 = loc12
	loc16 = v123
	v123 = loc13
	loc69 = v123
	// succ:  l00117221
l00117221:
	v123 = arg4
	v123 = Mem0[v123:word32]
	loc64 = v123
	v123 = loc16
	v124 = loc64
	v125 = v123 == v124
	loc65 = v125
	v123 = loc65
	branch !v123 l0011723C
	// succ:  l00117235 l0011723C
l00117235:
	v123 = 0x1C<32>
	loc126 = v123
	goto l001172E7
	// succ:  l001172E7
l0011723C:
	v123 = loc16
	v123 = Mem0[v123:word32]
	loc66 = v123
	v123 = loc38
	v123 = Mem0[v123:word32]
	loc67 = v123
	v123 = loc67
	v123 = fn000DB419(v123)
	loc68 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x1BA<32>
	v124 = loc69
	v128 = loc66
	v129 = loc102
	v123 = invoke_iiii(v123, v124, v128, v129)
	loc70 = v123
	v123 = Mem0[0x00140048<p32>:word32]
	loc71 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc71
	v124 = 1<32>
	v123 = v123 & v124
	loc72 = v123
	v123 = loc72
	branch !v123 l0011727C
	// succ:  l00117275 l0011727C
l00117275:
	v123 = 0x16<32>
	loc126 = v123
	goto l001172E7
	// succ:  l001172E7
l0011727C:
	v123 = loc68
	v124 = 0<32>
	v125 = v123 == v124
	loc73 = v125
	v123 = loc73
	v125 = v123 == 0<32>
	branch !v125 l001172AF
	// succ:  l00117288 l001172AF
l00117288:
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x17E<32>
	v124 = loc68
	v123 = invoke_ii(v123, v124)
	v123 = Mem0[0x00140048<p32>:word32]
	loc74 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc74
	v124 = 1<32>
	v123 = v123 & v124
	loc75 = v123
	v123 = loc75
	branch !v123 l001172AE
	// succ:  l001172A7 l001172AE
l001172A7:
	v123 = 0x15<32>
	loc126 = v123
	goto l001172E7
	// succ:  l001172E7
l001172AE:
	// succ:  l001172AF
l001172AF:
	v123 = loc70
	v124 = 0xFFFFFFFF<32>
	v125 = v123 == v124
	loc85 = v125
	v123 = loc85
	branch !v123 l001172C1
	// succ:  l001172BA l001172C1
l001172BA:
	v123 = 0x1C<32>
	loc126 = v123
	goto l001172E7
	// succ:  l001172E7
l001172C1:
	v123 = arg7
	v123 = Mem0[v123:word32]
	loc86 = v123
	v123 = loc86
	v124 = loc70
	v123 = v123 + v124
	loc87 = v123
	v123 = arg7
	v124 = loc87
	Mem0[v123:word32] = v124
	v123 = loc16
	v124 = 4<32>
	v123 = v123 + v124
	loc88 = v123
	v123 = loc88
	loc16 = v123
	v123 = loc87
	loc69 = v123
	goto l00117210
	// succ:  l00117210
l001172E7:
	v123 = loc126
	v124 = 0x15<32>
	v125 = v123 == v124
	branch !v125 l001172FF
	// succ:  l001172F0 l001172FF
l001172F0:
	v123 = 0<32>
	v123 = ___cxa_find_matching_catch_3(v123)
	loc76 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc77 = v123
	v123 = loc76
	fn000D0E65(v123)
	goto l00117368
	// succ:  l00117368
l001172FF:
	v123 = loc126
	v124 = 0x16<32>
	v125 = v123 == v124
	branch !v125 l0011734E
	// succ:  l00117306 l0011734E
l00117306:
	v123 = ___cxa_find_matching_catch_2()
	loc78 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc79 = v123
	v123 = loc68
	v124 = 0<32>
	v125 = v123 == v124
	loc80 = v125
	v123 = loc80
	v125 = v123 == 0<32>
	branch !v125 l00117349
	// succ:  l0011731A l00117349
l0011731A:
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x17E<32>
	v124 = loc68
	v123 = invoke_ii(v123, v124)
	v123 = Mem0[0x00140048<p32>:word32]
	loc81 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc81
	v124 = 1<32>
	v123 = v123 & v124
	loc82 = v123
	v123 = loc82
	branch !v123 l00117348
	// succ:  l00117339 l00117348
l00117339:
	v123 = 0<32>
	v123 = ___cxa_find_matching_catch_3(v123)
	loc83 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc84 = v123
	v123 = loc83
	fn000D0E65(v123)
	// succ:  l00117348
l00117348:
	// succ:  l00117349
l00117349:
	v123 = loc78
	___resumeException(v123)
	goto l00117367
	// succ:  l00117367
l0011734E:
	v123 = loc126
	v124 = 0x1C<32>
	v125 = v123 == v124
	branch !v125 l00117367
	// succ:  l00117355 l00117367
l00117355:
	v123 = arg4
	v124 = loc16
	Mem0[v123:word32] = v124
	v123 = 2<32>
	loc19 = v123
	v123 = 0x32<32>
	loc126 = v123
	goto l001173FC
	// succ:  l001173FC
l00117367:
	// succ:  l00117367
l00117367:
	// succ:  l00117368
l00117368:
	goto l001173F9
	// succ:  l001173F9
l0011736A:
	v123 = loc126
	v124 = 0x23<32>
	v125 = v123 == v124
	branch !v125 l00117380
	// succ:  l00117371 l00117380
l00117371:
	v123 = 0<32>
	v123 = ___cxa_find_matching_catch_3(v123)
	loc101 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc103 = v123
	v123 = loc101
	fn000D0E65(v123)
	goto l001173F8
	// succ:  l001173F8
l00117380:
	v123 = loc126
	v124 = 0x24<32>
	v125 = v123 == v124
	branch !v125 l001173CF
	// succ:  l00117387 l001173CF
l00117387:
	v123 = ___cxa_find_matching_catch_2()
	loc104 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc105 = v123
	v123 = loc94
	v124 = 0<32>
	v125 = v123 == v124
	loc106 = v125
	v123 = loc106
	v125 = v123 == 0<32>
	branch !v125 l001173CA
	// succ:  l0011739B l001173CA
l0011739B:
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = 0x17E<32>
	v124 = loc94
	v123 = invoke_ii(v123, v124)
	v123 = Mem0[0x00140048<p32>:word32]
	loc107 = v123
	v123 = 0<32>
	Mem0[0x00140048<p32>:word32] = v123
	v123 = loc107
	v124 = 1<32>
	v123 = v123 & v124
	loc108 = v123
	v123 = loc108
	branch !v123 l001173C9
	// succ:  l001173BA l001173C9
l001173BA:
	v123 = 0<32>
	v123 = ___cxa_find_matching_catch_3(v123)
	loc109 = v123
	v123 = Mem0[0x00140094<p32>:word32]
	loc110 = v123
	v123 = loc109
	fn000D0E65(v123)
	// succ:  l001173C9
l001173C9:
	// succ:  l001173CA
l001173CA:
	v123 = loc104
	___resumeException(v123)
	goto l001173F7
	// succ:  l001173F7
l001173CF:
	v123 = loc126
	v124 = 0x31<32>
	v125 = v123 == v124
	branch !v125 l001173DF
	// succ:  l001173D6 l001173DF
l001173D6:
	v123 = loc15
	loc19 = v123
	v123 = 0x32<32>
	loc126 = v123
	goto l001173F6
	// succ:  l001173F6
l001173DF:
	v123 = loc126
	v124 = 0x33<32>
	v125 = v123 == v124
	branch !v125 l001173F6
	// succ:  l001173E6 l001173F6
l001173E6:
	v123 = arg4
	v123 = Mem0[v123:word32]
	loc24 = v123
	v123 = loc24
	loc30 = v123
	v123 = 0x35<32>
	loc126 = v123
	// succ:  l001173F6
l001173F6:
	// succ:  l001173F6
l001173F6:
	// succ:  l001173F7
l001173F7:
	// succ:  l001173F8
l001173F8:
	// succ:  l001173F9
l001173F9:
	// succ:  l001173FA
l001173FA:
	// succ:  l001173FB
l001173FB:
	// succ:  l001173FC
l001173FC:
	v123 = loc126
	v124 = 0x32<32>
	v125 = v123 == v124
	branch !v125 l00117409
	// succ:  l00117404 l00117409
l00117404:
	v123 = loc19
	loc20 = v123
	goto l00117423
	// succ:  l00117423
l00117409:
	v123 = loc126
	v124 = 0x35<32>
	v125 = v123 == v124
	branch !v125 l00117423
	// succ:  l00117410 l00117423
l00117410:
	v123 = loc30
	v124 = arg3
	v125 = v123 != v124
	loc124 = v125
	v123 = loc124
	v124 = 1<32>
	v123 = v123 & v124
	loc31 = v123
	v123 = loc31
	loc20 = v123
	// succ:  l00117423
l00117423:
	// succ:  l00117423
l00117423:
	v123 = loc127
	Mem0[0x00140030<p32>:word32] = v123
	v123 = loc20
	return v123
	// succ:  fn00116E5E_exit
l0011742B:
	return v123
	// succ:  fn00116E5E_exit
fn00116E5E_exit:


// fn0011742D
// Return size: 0
word32 fn0011742D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn0011742D_entry:
	// succ:  l0011742D
l0011742D:
	v117 = Mem0[0x00140030<p32>:word32]
	loc121 = v117
	v117 = Mem0[0x00140030<p32>:word32]
	v118 = 0x10<32>
	v117 = v117 + v118
	Mem0[0x00140030<p32>:word32] = v117
	v117 = Mem0[0x00140030<p32>:word32]
	v118 = Mem0[0x00140034<p32>:word32]
	v119 = v117 >= v118
	branch !v119 l00117446
	// succ:  l00117441 l00117446
l00117441:
	v117 = 0x10<32>
	abortStackOverflow(v117)
	// succ:  l00117446
l00117446:
	v117 = loc121
	loc94 = v117
	v117 = arg2
	loc8 = v117
	// succ:  l00117450
l00117450:
	v117 = loc8
	v118 = arg3
	v119 = v117 == v118
	loc105 = v119
	v117 = loc105
	branch !v117 l00117464
	// succ:  l0011745D l00117464
l0011745D:
	v117 = arg3
	loc9 = v117
	goto l00117490
	// succ:  l00117490
l00117464:
	v117 = loc8
	v120 = Mem0[v117:int8]
	v117 = CONVERT(v120, int8, word32)
	loc23 = v117
	v117 = loc23
	v118 = 0x18<32>
	v117 = v117 << v118
	v118 = 0x18<32>
	v117 = v117 >> v118
	v118 = 0<32>
	v119 = v117 == v118
	loc26 = v119
	v117 = loc26
	branch !v117 l00117483
	// succ:  l0011747C l00117483
l0011747C:
	v117 = loc8
	loc9 = v117
	goto l00117490
	// succ:  l00117490
l00117483:
	v117 = loc8
	v118 = 1<32>
	v117 = v117 + v118
	loc27 = v117
	v117 = loc27
	loc8 = v117
	goto l00117446
	// succ:  l00117446
l00117490:
	v117 = arg7
	v118 = arg5
	Mem0[v117:word32] = v118
	v117 = arg4
	v118 = arg2
	Mem0[v117:word32] = v118
	v117 = arg6
	loc28 = v117
	v117 = arg0
	v118 = 8<32>
	v117 = v117 + v118
	loc29 = v117
	v117 = arg2
	loc10 = v117
	v117 = arg5
	loc11 = v117
	v117 = loc9
	loc12 = v117
	// succ:  l001174B9
l001174B9:
	v117 = loc10
	v118 = arg3
	v119 = v117 == v118
	loc30 = v119
	v117 = loc11
	v118 = arg6
	v119 = v117 == v118
	loc31 = v119
	v117 = loc31
	v118 = loc30
	v117 = v117 | v118
	loc118 = v117
	v117 = loc118
	branch !v117 l001174DF
	// succ:  l001174D4 l001174DF
l001174D4:
	v117 = loc10
	loc114 = v117
	v117 = 0x33<32>
	loc120 = v117
	goto l001176FA
	// succ:  l001176FA
l001174DF:
	v117 = arg1
	v121 = Mem0[v117:word64]
	loc122 = v121
	v117 = loc94
	v122 = loc122
	Mem0[v117:word64] = v122
	v117 = loc12
	loc32 = v117
	v117 = loc10
	loc33 = v117
	v117 = loc32
	v118 = loc33
	v117 = v117 - v118
	loc34 = v117
	v117 = loc11
	loc35 = v117
	v117 = loc28
	v118 = loc35
	v117 = v117 - v118
	loc36 = v117
	v117 = loc36
	v118 = 2<32>
	v117 = v117 >> v118
	loc37 = v117
	v117 = loc29
	v117 = Mem0[v117:word32]
	loc38 = v117
	v117 = loc38
	v117 = fn000DB419(v117)
	loc39 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x1BB<32>
	v118 = loc11
	v123 = arg4
	v124 = loc34
	v125 = loc37
	v126 = arg1
	v117 = invoke_iiiiii(v117, v118, v123, v124, v125, v126)
	loc40 = v117
	v117 = Mem0[0x00140048<p32>:word32]
	loc41 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc41
	v118 = 1<32>
	v117 = v117 & v118
	loc42 = v117
	v117 = loc42
	branch !v117 l0011754B
	// succ:  l00117544 l0011754B
l00117544:
	v117 = 0xB<32>
	loc120 = v117
	goto l001176FA
	// succ:  l001176FA
l0011754B:
	v117 = loc39
	v118 = 0<32>
	v119 = v117 == v118
	loc43 = v119
	v117 = loc43
	v119 = v117 == 0<32>
	branch !v119 l0011757E
	// succ:  l00117557 l0011757E
l00117557:
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x17E<32>
	v118 = loc39
	v117 = invoke_ii(v117, v118)
	v117 = Mem0[0x00140048<p32>:word32]
	loc44 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc44
	v118 = 1<32>
	v117 = v117 & v118
	loc45 = v117
	v117 = loc45
	branch !v117 l0011757D
	// succ:  l00117576 l0011757D
l00117576:
	v117 = 0xA<32>
	loc120 = v117
	goto l001176FA
	// succ:  l001176FA
l0011757D:
	// succ:  l0011757E
l0011757E:
	v117 = loc40
	v118 = 0xFFFFFFFF<32>
	v119 = v117 == v118
	loc55 = v119
	v117 = loc55
	branch !v117 l00117598
	// succ:  l00117589 l00117598
l00117589:
	v117 = loc10
	loc14 = v117
	v117 = loc11
	loc119 = v117
	v117 = 0x10<32>
	loc120 = v117
	goto l001176FA
	// succ:  l001176FA
l00117598:
	v117 = arg7
	v117 = Mem0[v117:word32]
	loc82 = v117
	v117 = loc82
	v118 = loc40
	v123 = 2<32>
	v118 = v118 << v123
	v117 = v117 + v118
	loc83 = v117
	v117 = arg7
	v118 = loc83
	Mem0[v117:word32] = v118
	v117 = loc83
	v118 = arg6
	v119 = v117 == v118
	loc84 = v119
	v117 = loc84
	branch !v117 l001175C2
	// succ:  l001175BB l001175C2
l001175BB:
	v117 = 0x30<32>
	loc120 = v117
	goto l001176FA
	// succ:  l001176FA
l001175C2:
	v117 = loc12
	v118 = arg3
	v119 = v117 == v118
	loc85 = v119
	v117 = arg4
	v117 = Mem0[v117:word32]
	loc20 = v117
	v117 = loc85
	branch !v117 l001175E1
	// succ:  l001175D4 l001175E1
l001175D4:
	v117 = arg3
	loc19 = v117
	v117 = loc83
	loc24 = v117
	v117 = loc20
	loc25 = v117
	goto l001176EB
	// succ:  l001176EB
l001175E1:
	v117 = loc29
	v117 = Mem0[v117:word32]
	loc86 = v117
	v117 = loc86
	v117 = fn000DB419(v117)
	loc87 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x1BC<32>
	v118 = loc83
	v123 = loc20
	v124 = 1<32>
	v125 = arg1
	v117 = invoke_iiiii(v117, v118, v123, v124, v125)
	loc88 = v117
	v117 = Mem0[0x00140048<p32>:word32]
	loc89 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc89
	v118 = 1<32>
	v117 = v117 & v118
	loc90 = v117
	v117 = loc90
	branch !v117 l0011761C
	// succ:  l00117615 l0011761C
l00117615:
	v117 = 0x26<32>
	loc120 = v117
	goto l001176FA
	// succ:  l001176FA
l0011761C:
	v117 = loc87
	v118 = 0<32>
	v119 = v117 == v118
	loc91 = v119
	v117 = loc91
	v119 = v117 == 0<32>
	branch !v119 l0011764F
	// succ:  l00117628 l0011764F
l00117628:
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x17E<32>
	v118 = loc87
	v117 = invoke_ii(v117, v118)
	v117 = Mem0[0x00140048<p32>:word32]
	loc92 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc92
	v118 = 1<32>
	v117 = v117 & v118
	loc93 = v117
	v117 = loc93
	branch !v117 l0011764E
	// succ:  l00117647 l0011764E
l00117647:
	v117 = 0x25<32>
	loc120 = v117
	goto l001176FA
	// succ:  l001176FA
l0011764E:
	// succ:  l0011764F
l0011764F:
	v117 = loc88
	v118 = 0<32>
	v119 = v117 == v118
	loc104 = v119
	v117 = loc104
	v119 = v117 == 0<32>
	branch !v119 l00117666
	// succ:  l0011765B l00117666
l0011765B:
	v117 = 2<32>
	loc13 = v117
	v117 = 0x2F<32>
	loc120 = v117
	goto l001176FA
	// succ:  l001176FA
l00117666:
	v117 = arg7
	v117 = Mem0[v117:word32]
	loc106 = v117
	v117 = loc106
	v118 = 4<32>
	v117 = v117 + v118
	loc107 = v117
	v117 = arg7
	v118 = loc107
	Mem0[v117:word32] = v118
	v117 = arg4
	v117 = Mem0[v117:word32]
	loc108 = v117
	v117 = loc108
	v118 = 1<32>
	v117 = v117 + v118
	loc109 = v117
	v117 = arg4
	v118 = loc109
	Mem0[v117:word32] = v118
	v117 = loc109
	loc15 = v117
	// succ:  l00117696
l00117696:
	v117 = loc15
	v118 = arg3
	v119 = v117 == v118
	loc110 = v119
	v117 = loc110
	branch !v117 l001176AA
	// succ:  l001176A3 l001176AA
l001176A3:
	v117 = arg3
	loc16 = v117
	goto l001176D6
	// succ:  l001176D6
l001176AA:
	v117 = loc15
	v127 = Mem0[v117:int8]
	v117 = CONVERT(v127, int8, word32)
	loc111 = v117
	v117 = loc111
	v118 = 0x18<32>
	v117 = v117 << v118
	v118 = 0x18<32>
	v117 = v117 >> v118
	v118 = 0<32>
	v119 = v117 == v118
	loc112 = v119
	v117 = loc112
	branch !v117 l001176C9
	// succ:  l001176C2 l001176C9
l001176C2:
	v117 = loc15
	loc16 = v117
	goto l001176D6
	// succ:  l001176D6
l001176C9:
	v117 = loc15
	v118 = 1<32>
	v117 = v117 + v118
	loc113 = v117
	v117 = loc113
	loc15 = v117
	goto l00117666
	// succ:  l00117666
l001176D6:
	v117 = arg7
	v117 = Mem0[v117:word32]
	loc21 = v117
	v117 = loc16
	loc19 = v117
	v117 = loc21
	loc24 = v117
	v117 = loc109
	loc25 = v117
	// succ:  l001176EB
l001176EB:
	v117 = loc25
	loc10 = v117
	v117 = loc24
	loc11 = v117
	v117 = loc19
	loc12 = v117
	goto l00117490
	// succ:  l00117490
l001176FA:
	v117 = loc120
	v118 = 0xA<32>
	v119 = v117 == v118
	branch !v119 l00117714
	// succ:  l00117705 l00117714
l00117705:
	v117 = 0<32>
	v117 = ___cxa_find_matching_catch_3(v117)
	loc46 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc47 = v117
	v117 = loc46
	fn000D0E65(v117)
	goto l001179BA
	// succ:  l001179BA
l00117714:
	v117 = loc120
	v118 = 0xB<32>
	v119 = v117 == v118
	branch !v119 l00117763
	// succ:  l0011771B l00117763
l0011771B:
	v117 = ___cxa_find_matching_catch_2()
	loc48 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc49 = v117
	v117 = loc39
	v118 = 0<32>
	v119 = v117 == v118
	loc50 = v119
	v117 = loc50
	v119 = v117 == 0<32>
	branch !v119 l0011775E
	// succ:  l0011772F l0011775E
l0011772F:
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x17E<32>
	v118 = loc39
	v117 = invoke_ii(v117, v118)
	v117 = Mem0[0x00140048<p32>:word32]
	loc51 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc51
	v118 = 1<32>
	v117 = v117 & v118
	loc52 = v117
	v117 = loc52
	branch !v117 l0011775D
	// succ:  l0011774E l0011775D
l0011774E:
	v117 = 0<32>
	v117 = ___cxa_find_matching_catch_3(v117)
	loc53 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc54 = v117
	v117 = loc53
	fn000D0E65(v117)
	// succ:  l0011775D
l0011775D:
	// succ:  l0011775E
l0011775E:
	v117 = loc48
	___resumeException(v117)
	goto l001179B9
	// succ:  l001179B9
l00117763:
	v117 = loc120
	v118 = 0x10<32>
	v119 = v117 == v118
	branch !v119 l0011793A
	// succ:  l0011776A l0011793A
l0011776A:
	v117 = 0<32>
	loc120 = v117
	v117 = arg7
	v118 = loc119
	Mem0[v117:word32] = v118
	v117 = arg4
	v117 = Mem0[v117:word32]
	loc56 = v117
	v117 = loc14
	v118 = loc56
	v119 = v117 == v118
	loc57 = v119
	v117 = loc57
	branch !v117 l00117792
	// succ:  l0011778B l00117792
l0011778B:
	v117 = 0x1F<32>
	loc120 = v117
	goto l00117875
	// succ:  l00117875
l00117792:
	v117 = loc14
	loc58 = v117
	v117 = loc32
	v118 = loc58
	v117 = v117 - v118
	loc59 = v117
	v117 = loc29
	v117 = Mem0[v117:word32]
	loc60 = v117
	v117 = loc60
	v117 = fn000DB419(v117)
	loc61 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x1BC<32>
	v118 = loc119
	v123 = loc14
	v124 = loc59
	v125 = loc94
	v117 = invoke_iiiii(v117, v118, v123, v124, v125)
	loc62 = v117
	v117 = Mem0[0x00140048<p32>:word32]
	loc63 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc63
	v118 = 1<32>
	v117 = v117 & v118
	loc64 = v117
	v117 = loc64
	branch !v117 l001177D8
	// succ:  l001177D1 l001177D8
l001177D1:
	v117 = 0x15<32>
	loc120 = v117
	goto l00117875
	// succ:  l00117875
l001177D8:
	v117 = loc61
	v118 = 0<32>
	v119 = v117 == v118
	loc65 = v119
	v117 = loc65
	v119 = v117 == 0<32>
	branch !v119 l0011780B
	// succ:  l001177E4 l0011780B
l001177E4:
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x17E<32>
	v118 = loc61
	v117 = invoke_ii(v117, v118)
	v117 = Mem0[0x00140048<p32>:word32]
	loc66 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc66
	v118 = 1<32>
	v117 = v117 & v118
	loc67 = v117
	v117 = loc67
	branch !v117 l0011780A
	// succ:  l00117803 l0011780A
l00117803:
	v117 = 0x14<32>
	loc120 = v117
	goto l00117875
	// succ:  l00117875
l0011780A:
	// succ:  l0011780B
l0011780B:
	v117 = loc62
	v118 = 0xFFFFFFFE<32>
	v117 = v117 - v118
	switch (v117) { l0011782C l00117820 l00117838 }
	// succ:  l00117820 l0011782C l00117838
l00117820:
	v117 = 0x1B<32>
	loc120 = v117
	goto l00117875
	// succ:  l00117875
l0011782B:
	// succ:  l0011782C
l0011782C:
	v117 = 0x1C<32>
	loc120 = v117
	goto l00117875
	// succ:  l00117875
l00117837:
	// succ:  l00117838
l00117838:
	v117 = loc14
	v118 = 1<32>
	v117 = v117 + v118
	loc77 = v117
	v117 = loc77
	loc18 = v117
	goto l00117858
	// succ:  l00117858
l00117848:
	// succ:  l00117849
l00117849:
	v117 = loc14
	v118 = loc62
	v117 = v117 + v118
	loc78 = v117
	v117 = loc78
	loc18 = v117
	// succ:  l00117857
l00117857:
	// succ:  l00117858
l00117858:
	v117 = arg7
	v117 = Mem0[v117:word32]
	loc79 = v117
	v117 = loc79
	v118 = 4<32>
	v117 = v117 + v118
	loc80 = v117
	v117 = loc18
	loc14 = v117
	v117 = loc80
	loc119 = v117
	v117 = 0x10<32>
	loc120 = v117
	goto l0011776A
	// succ:  l0011776A
l00117875:
	v117 = loc120
	v118 = 0x14<32>
	v119 = v117 == v118
	branch !v119 l0011788D
	// succ:  l0011787E l0011788D
l0011787E:
	v117 = 0<32>
	v117 = ___cxa_find_matching_catch_3(v117)
	loc68 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc69 = v117
	v117 = loc68
	fn000D0E65(v117)
	goto l00117938
	// succ:  l00117938
l0011788D:
	v117 = loc120
	v118 = 0x15<32>
	v119 = v117 == v118
	branch !v119 l001178DC
	// succ:  l00117894 l001178DC
l00117894:
	v117 = ___cxa_find_matching_catch_2()
	loc70 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc71 = v117
	v117 = loc61
	v118 = 0<32>
	v119 = v117 == v118
	loc72 = v119
	v117 = loc72
	v119 = v117 == 0<32>
	branch !v119 l001178D7
	// succ:  l001178A8 l001178D7
l001178A8:
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x17E<32>
	v118 = loc61
	v117 = invoke_ii(v117, v118)
	v117 = Mem0[0x00140048<p32>:word32]
	loc73 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc73
	v118 = 1<32>
	v117 = v117 & v118
	loc74 = v117
	v117 = loc74
	branch !v117 l001178D6
	// succ:  l001178C7 l001178D6
l001178C7:
	v117 = 0<32>
	v117 = ___cxa_find_matching_catch_3(v117)
	loc75 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc76 = v117
	v117 = loc75
	fn000D0E65(v117)
	// succ:  l001178D6
l001178D6:
	// succ:  l001178D7
l001178D7:
	v117 = loc70
	___resumeException(v117)
	goto l00117937
	// succ:  l00117937
l001178DC:
	v117 = loc120
	v118 = 0x1B<32>
	v119 = v117 == v118
	branch !v119 l001178F5
	// succ:  l001178E3 l001178F5
l001178E3:
	v117 = arg4
	v118 = loc14
	Mem0[v117:word32] = v118
	v117 = 2<32>
	loc13 = v117
	v117 = 0x2F<32>
	loc120 = v117
	goto l001179BB
	// succ:  l001179BB
l001178F5:
	v117 = loc120
	v118 = 0x1C<32>
	v119 = v117 == v118
	branch !v119 l0011790E
	// succ:  l001178FC l0011790E
l001178FC:
	v117 = arg4
	v118 = loc14
	Mem0[v117:word32] = v118
	v117 = 1<32>
	loc13 = v117
	v117 = 0x2F<32>
	loc120 = v117
	goto l001179BB
	// succ:  l001179BB
l0011790E:
	v117 = loc120
	v118 = 0x1F<32>
	v119 = v117 == v118
	branch !v119 l00117935
	// succ:  l00117915 l00117935
l00117915:
	v117 = arg4
	v118 = loc14
	Mem0[v117:word32] = v118
	v117 = loc14
	v118 = arg3
	v119 = v117 != v118
	loc117 = v119
	v117 = loc117
	v118 = 1<32>
	v117 = v117 & v118
	loc81 = v117
	v117 = loc81
	loc13 = v117
	v117 = 0x2F<32>
	loc120 = v117
	goto l001179BB
	// succ:  l001179BB
l00117935:
	// succ:  l00117935
l00117935:
	// succ:  l00117936
l00117936:
	// succ:  l00117937
l00117937:
	// succ:  l00117938
l00117938:
	goto l001179B8
	// succ:  l001179B8
l0011793A:
	v117 = loc120
	v118 = 0x25<32>
	v119 = v117 == v118
	branch !v119 l00117950
	// succ:  l00117941 l00117950
l00117941:
	v117 = 0<32>
	v117 = ___cxa_find_matching_catch_3(v117)
	loc95 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc96 = v117
	v117 = loc95
	fn000D0E65(v117)
	goto l001179B7
	// succ:  l001179B7
l00117950:
	v117 = loc120
	v118 = 0x26<32>
	v119 = v117 == v118
	branch !v119 l0011799F
	// succ:  l00117957 l0011799F
l00117957:
	v117 = ___cxa_find_matching_catch_2()
	loc97 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc98 = v117
	v117 = loc87
	v118 = 0<32>
	v119 = v117 == v118
	loc99 = v119
	v117 = loc99
	v119 = v117 == 0<32>
	branch !v119 l0011799A
	// succ:  l0011796B l0011799A
l0011796B:
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = 0x17E<32>
	v118 = loc87
	v117 = invoke_ii(v117, v118)
	v117 = Mem0[0x00140048<p32>:word32]
	loc100 = v117
	v117 = 0<32>
	Mem0[0x00140048<p32>:word32] = v117
	v117 = loc100
	v118 = 1<32>
	v117 = v117 & v118
	loc101 = v117
	v117 = loc101
	branch !v117 l00117999
	// succ:  l0011798A l00117999
l0011798A:
	v117 = 0<32>
	v117 = ___cxa_find_matching_catch_3(v117)
	loc102 = v117
	v117 = Mem0[0x00140094<p32>:word32]
	loc103 = v117
	v117 = loc102
	fn000D0E65(v117)
	// succ:  l00117999
l00117999:
	// succ:  l0011799A
l0011799A:
	v117 = loc97
	___resumeException(v117)
	goto l001179B6
	// succ:  l001179B6
l0011799F:
	v117 = loc120
	v118 = 0x30<32>
	v119 = v117 == v118
	branch !v119 l001179B6
	// succ:  l001179A6 l001179B6
l001179A6:
	v117 = arg4
	v117 = Mem0[v117:word32]
	loc22 = v117
	v117 = loc22
	loc114 = v117
	v117 = 0x33<32>
	loc120 = v117
	// succ:  l001179B6
l001179B6:
	// succ:  l001179B6
l001179B6:
	// succ:  l001179B7
l001179B7:
	// succ:  l001179B8
l001179B8:
	// succ:  l001179B9
l001179B9:
	// succ:  l001179BA
l001179BA:
	// succ:  l001179BB
l001179BB:
	v117 = loc120
	v118 = 0x2F<32>
	v119 = v117 == v118
	branch !v119 l001179C8
	// succ:  l001179C3 l001179C8
l001179C3:
	v117 = loc13
	loc17 = v117
	goto l001179E2
	// succ:  l001179E2
l001179C8:
	v117 = loc120
	v118 = 0x33<32>
	v119 = v117 == v118
	branch !v119 l001179E2
	// succ:  l001179CF l001179E2
l001179CF:
	v117 = loc114
	v118 = arg3
	v119 = v117 != v118
	loc116 = v119
	v117 = loc116
	v118 = 1<32>
	v117 = v117 & v118
	loc115 = v117
	v117 = loc115
	loc17 = v117
	// succ:  l001179E2
l001179E2:
	// succ:  l001179E2
l001179E2:
	v117 = loc121
	Mem0[0x00140030<p32>:word32] = v117
	v117 = loc17
	return v117
	// succ:  fn0011742D_exit
l001179EA:
	return v117
	// succ:  fn0011742D_exit
fn0011742D_exit:


// fn001179EC
// Return size: 0
word32 fn001179EC(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn001179EC_entry:
	// succ:  l001179EC
l001179EC:
	v37 = Mem0[0x00140030<p32>:word32]
	loc39 = v37
	v37 = Mem0[0x00140030<p32>:word32]
	v38 = 0x10<32>
	v37 = v37 + v38
	Mem0[0x00140030<p32>:word32] = v37
	v37 = Mem0[0x00140030<p32>:word32]
	v38 = Mem0[0x00140034<p32>:word32]
	v39 = v37 >= v38
	branch !v39 l00117A05
	// succ:  l00117A00 l00117A05
l00117A00:
	v37 = 0x10<32>
	abortStackOverflow(v37)
	// succ:  l00117A05
l00117A05:
	v37 = loc39
	loc33 = v37
	v37 = arg4
	v38 = arg2
	Mem0[v37:word32] = v38
	v37 = arg0
	v38 = 8<32>
	v37 = v37 + v38
	loc34 = v37
	v37 = loc34
	v37 = Mem0[v37:word32]
	loc35 = v37
	v37 = loc35
	v37 = fn000DB419(v37)
	loc36 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = 0x1BA<32>
	v38 = loc33
	v40 = 0<32>
	v41 = arg1
	v37 = invoke_iiii(v37, v38, v40, v41)
	loc37 = v37
	v37 = Mem0[0x00140048<p32>:word32]
	loc8 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = loc8
	v38 = 1<32>
	v37 = v37 & v38
	loc9 = v37
	v37 = loc9
	branch !v37 l00117A91
	// succ:  l00117A49 l00117A91
l00117A49:
	v37 = ___cxa_find_matching_catch_2()
	loc15 = v37
	v37 = Mem0[0x00140094<p32>:word32]
	loc16 = v37
	v37 = loc36
	v38 = 0<32>
	v39 = v37 == v38
	loc17 = v39
	v37 = loc17
	v39 = v37 == 0<32>
	branch !v39 l00117A8C
	// succ:  l00117A5D l00117A8C
l00117A5D:
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = 0x17E<32>
	v38 = loc36
	v37 = invoke_ii(v37, v38)
	v37 = Mem0[0x00140048<p32>:word32]
	loc18 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = loc18
	v38 = 1<32>
	v37 = v37 & v38
	loc19 = v37
	v37 = loc19
	branch !v37 l00117A8B
	// succ:  l00117A7C l00117A8B
l00117A7C:
	v37 = 0<32>
	v37 = ___cxa_find_matching_catch_3(v37)
	loc20 = v37
	v37 = Mem0[0x00140094<p32>:word32]
	loc21 = v37
	v37 = loc20
	fn000D0E65(v37)
	// succ:  l00117A8B
l00117A8B:
	// succ:  l00117A8C
l00117A8C:
	v37 = loc15
	___resumeException(v37)
	// succ:  l00117A91
l00117A91:
	v37 = loc36
	v38 = 0<32>
	v39 = v37 == v38
	loc10 = v39
	v37 = loc10
	v39 = v37 == 0<32>
	branch !v39 l00117ACC
	// succ:  l00117A9D l00117ACC
l00117A9D:
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = 0x17E<32>
	v38 = loc36
	v37 = invoke_ii(v37, v38)
	v37 = Mem0[0x00140048<p32>:word32]
	loc11 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = loc11
	v38 = 1<32>
	v37 = v37 & v38
	loc12 = v37
	v37 = loc12
	branch !v37 l00117ACB
	// succ:  l00117ABC l00117ACB
l00117ABC:
	v37 = 0<32>
	v37 = ___cxa_find_matching_catch_3(v37)
	loc13 = v37
	v37 = Mem0[0x00140094<p32>:word32]
	loc14 = v37
	v37 = loc13
	fn000D0E65(v37)
	// succ:  l00117ACB
l00117ACB:
	// succ:  l00117ACC
l00117ACC:
	v37 = loc37
	v38 = 0xFFFFFFFF<32>
	v37 = v37 - v38
	switch (v37) { l00117AE2 l00117AE0 }
	// succ:  l00117AE0 l00117AE2
l00117AE0:
	// succ:  l00117AE2
l00117AE2:
	v37 = 2<32>
	loc7 = v37
	goto l00117B72
	// succ:  l00117B72
l00117AEB:
	// succ:  l00117AEC
l00117AEC:
	v37 = loc37
	v38 = 0xFFFFFFFF<32>
	v37 = v37 + v38
	loc22 = v37
	v37 = arg4
	v37 = Mem0[v37:word32]
	loc23 = v37
	v37 = arg3
	loc24 = v37
	v37 = loc24
	v38 = loc23
	v37 = v37 - v38
	loc25 = v37
	v37 = loc22
	v38 = loc25
	v39 = v37 >u v38
	loc26 = v39
	v37 = loc26
	branch !v37 l00117B18
	// succ:  l00117B13 l00117B18
l00117B13:
	v37 = 1<32>
	loc7 = v37
	goto l00117B70
	// succ:  l00117B70
l00117B18:
	v37 = loc33
	loc5 = v37
	v37 = loc22
	loc6 = v37
	v37 = loc6
	v38 = 0<32>
	v39 = v37 == v38
	loc27 = v39
	v37 = loc27
	branch !v37 l00117B34
	// succ:  l00117B2D l00117B34
l00117B2D:
	v37 = 0<32>
	loc7 = v37
	goto l00117B73
	// succ:  l00117B73
l00117B34:
	v37 = loc5
	v38 = 1<32>
	v37 = v37 + v38
	loc28 = v37
	v37 = loc5
	v42 = Mem0[v37:int8]
	v37 = CONVERT(v42, int8, word32)
	loc29 = v37
	v37 = arg4
	v37 = Mem0[v37:word32]
	loc30 = v37
	v37 = loc30
	v38 = 1<32>
	v37 = v37 + v38
	loc31 = v37
	v37 = arg4
	v38 = loc31
	Mem0[v37:word32] = v38
	v37 = loc30
	v38 = loc29
	v43 = SLICE(v38, byte, 0)
	Mem0[v37:byte] = v43
	v37 = loc6
	v38 = 0xFFFFFFFF<32>
	v37 = v37 + v38
	loc32 = v37
	v37 = loc28
	loc5 = v37
	v37 = loc32
	loc6 = v37
	goto l00117B18
	// succ:  l00117B18
l00117B70:
	// succ:  l00117B71
l00117B71:
	// succ:  l00117B72
l00117B72:
	// succ:  l00117B73
l00117B73:
	v37 = loc39
	Mem0[0x00140030<p32>:word32] = v37
	v37 = loc7
	return v37
	// succ:  fn001179EC_exit
l00117B7B:
	return v37
	// succ:  fn001179EC_exit
fn001179EC_exit:


// fn00117B7D
// Return size: 0
word32 fn00117B7D(word32 arg0)
fn00117B7D_entry:
	// succ:  l00117B7D
l00117B7D:
	v39 = Mem0[0x00140030<p32>:word32]
	loc37 = v39
	v39 = arg0
	v40 = 8<32>
	v39 = v39 + v40
	loc1 = v39
	v39 = loc1
	v39 = Mem0[v39:word32]
	loc12 = v39
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = 0x17E<32>
	v40 = loc12
	v39 = invoke_ii(v39, v40)
	loc23 = v39
	v39 = Mem0[0x00140048<p32>:word32]
	loc28 = v39
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = loc28
	v40 = 1<32>
	v39 = v39 & v40
	loc29 = v39
	// succ:  l00117BAD
l00117BAD:
	v39 = loc29
	branch !v39 l00117BB8
	// succ:  l00117BB3 l00117BB8
l00117BB3:
	v39 = 0x10<32>
	loc36 = v39
	goto l00117D00
	// succ:  l00117D00
l00117BB8:
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = 0x1BD<32>
	v40 = 0<32>
	v41 = 0<32>
	v42 = 4<32>
	v39 = invoke_iiii(v39, v40, v41, v42)
	loc30 = v39
	v39 = Mem0[0x00140048<p32>:word32]
	loc31 = v39
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = loc31
	v40 = 1<32>
	v39 = v39 & v40
	loc32 = v39
	v39 = loc32
	branch !v39 l00117C2E
	// succ:  l00117BDC l00117C2E
l00117BDC:
	v39 = 0<32>
	v39 = ___cxa_find_matching_catch_3(v39)
	loc6 = v39
	v39 = Mem0[0x00140094<p32>:word32]
	loc7 = v39
	v39 = loc23
	v40 = 0<32>
	v43 = v39 == v40
	loc8 = v43
	v39 = loc8
	branch !v39 l00117BF8
	// succ:  l00117BF1 l00117BF8
l00117BF1:
	v39 = loc6
	loc34 = v39
	goto l00117D01
	// succ:  l00117D01
l00117BF8:
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = 0x17E<32>
	v40 = loc23
	v39 = invoke_ii(v39, v40)
	v39 = Mem0[0x00140048<p32>:word32]
	loc9 = v39
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = loc9
	v40 = 1<32>
	v39 = v39 & v40
	loc10 = v39
	v39 = loc10
	v43 = v39 == 0<32>
	branch !v43 l00117C1F
	// succ:  l00117C18 l00117C1F
l00117C18:
	v39 = loc6
	loc34 = v39
	goto l00117D01
	// succ:  l00117D01
l00117C1F:
	v39 = 0<32>
	v39 = ___cxa_find_matching_catch_3(v39)
	loc11 = v39
	v39 = Mem0[0x00140094<p32>:word32]
	loc13 = v39
	v39 = loc11
	fn000D0E65(v39)
	// succ:  l00117C2E
l00117C2E:
	v39 = loc23
	v40 = 0<32>
	v43 = v39 == v40
	loc33 = v43
	v39 = loc33
	v43 = v39 == 0<32>
	branch !v43 l00117C69
	// succ:  l00117C3A l00117C69
l00117C3A:
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = 0x17E<32>
	v40 = loc23
	v39 = invoke_ii(v39, v40)
	v39 = Mem0[0x00140048<p32>:word32]
	loc2 = v39
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = loc2
	v40 = 1<32>
	v39 = v39 & v40
	loc3 = v39
	v39 = loc3
	branch !v39 l00117C68
	// succ:  l00117C59 l00117C68
l00117C59:
	v39 = 0<32>
	v39 = ___cxa_find_matching_catch_3(v39)
	loc4 = v39
	v39 = Mem0[0x00140094<p32>:word32]
	loc5 = v39
	v39 = loc4
	fn000D0E65(v39)
	// succ:  l00117C68
l00117C68:
	// succ:  l00117C69
l00117C69:
	v39 = loc30
	v40 = 0<32>
	v43 = v39 == v40
	loc14 = v43
	v39 = loc14
	branch !v39 l00117CF8
	// succ:  l00117C74 l00117CF8
l00117C74:
	v39 = loc1
	v39 = Mem0[v39:word32]
	loc15 = v39
	v39 = loc15
	v40 = 0<32>
	v43 = v39 == v40
	loc16 = v43
	v39 = loc16
	branch !v39 l00117C8B
	// succ:  l00117C86 l00117C8B
l00117C86:
	v39 = 1<32>
	loc35 = v39
	goto l00117CF6
	// succ:  l00117CF6
l00117C8B:
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = 0x17E<32>
	v40 = loc15
	v39 = invoke_ii(v39, v40)
	loc17 = v39
	v39 = Mem0[0x00140048<p32>:word32]
	loc18 = v39
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = loc18
	v40 = 1<32>
	v39 = v39 & v40
	loc19 = v39
	v39 = loc19
	branch !v39 l00117CB2
	// succ:  l00117CAB l00117CB2
l00117CAB:
	v39 = 0x10<32>
	loc36 = v39
	goto l00117D01
	// succ:  l00117D01
l00117CB2:
	v39 = loc17
	v40 = 0<32>
	v43 = v39 == v40
	loc20 = v43
	v39 = loc20
	branch !v39 l00117CC2
	// succ:  l00117CBD l00117CC2
l00117CBD:
	v39 = 0<32>
	loc35 = v39
	goto l00117CF5
	// succ:  l00117CF5
l00117CC2:
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = 0x17E<32>
	v40 = loc17
	v39 = invoke_ii(v39, v40)
	v39 = Mem0[0x00140048<p32>:word32]
	loc21 = v39
	v39 = 0<32>
	Mem0[0x00140048<p32>:word32] = v39
	v39 = loc21
	v40 = 1<32>
	v39 = v39 & v40
	loc22 = v39
	v39 = loc22
	branch !v39 l00117CF0
	// succ:  l00117CE1 l00117CF0
l00117CE1:
	v39 = 0<32>
	v39 = ___cxa_find_matching_catch_3(v39)
	loc24 = v39
	v39 = Mem0[0x00140094<p32>:word32]
	loc25 = v39
	v39 = loc24
	fn000D0E65(v39)
	goto l00117CF4
	// succ:  l00117CF4
l00117CF0:
	v39 = 0<32>
	loc35 = v39
	// succ:  l00117CF4
l00117CF4:
	// succ:  l00117CF5
l00117CF5:
	// succ:  l00117CF6
l00117CF6:
	goto l00117CFC
	// succ:  l00117CFC
l00117CF8:
	v39 = 0xFFFFFFFF<32>
	loc35 = v39
	// succ:  l00117CFC
l00117CFC:
	v39 = loc35
	return v39
	// succ:  fn00117B7D_exit
l00117D00:
	// succ:  l00117D01
l00117D01:
	v39 = loc36
	v40 = 0x10<32>
	v43 = v39 == v40
	branch !v43 l00117D18
	// succ:  l00117D09 l00117D18
l00117D09:
	v39 = 0<32>
	v39 = ___cxa_find_matching_catch_3(v39)
	loc26 = v39
	v39 = Mem0[0x00140094<p32>:word32]
	loc27 = v39
	v39 = loc26
	loc34 = v39
	// succ:  l00117D18
l00117D18:
	v39 = loc34
	fn000D0E65(v39)
	v39 = 0<32>
	return v39
	// succ:  fn00117B7D_exit
l00117D1F:
	return v39
	// succ:  fn00117B7D_exit
fn00117B7D_exit:


// fn00117D21
// Return size: 0
word32 fn00117D21(word32 arg0)
fn00117D21_entry:
	// succ:  l00117D21
l00117D21:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 0<32>
	return v4
	// succ:  fn00117D21_exit
l00117D2A:
	return v4
	// succ:  fn00117D21_exit
fn00117D21_exit:


// fn00117D2C
// Return size: 0
word32 fn00117D2C(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00117D2C_entry:
	// succ:  l00117D2C
l00117D2C:
	v37 = Mem0[0x00140030<p32>:word32]
	loc39 = v37
	v37 = arg3
	loc32 = v37
	v37 = arg0
	v38 = 8<32>
	v37 = v37 + v38
	loc33 = v37
	v37 = 0<32>
	loc5 = v37
	v37 = 0<32>
	loc6 = v37
	v37 = arg2
	loc7 = v37
	// succ:  l00117D4B
l00117D4B:
	v37 = loc5
	v38 = arg4
	v39 = v37 >=u v38
	loc34 = v39
	v37 = loc7
	v38 = arg3
	v39 = v37 == v38
	loc35 = v39
	v37 = loc35
	v38 = loc34
	v37 = v37 | v38
	loc37 = v37
	v37 = loc37
	branch !v37 l00117D6D
	// succ:  l00117D66 l00117D6D
l00117D66:
	v37 = 0xF<32>
	loc38 = v37
	goto l00117E4C
	// succ:  l00117E4C
l00117D6D:
	v37 = loc7
	loc36 = v37
	v37 = loc32
	v38 = loc36
	v37 = v37 - v38
	loc11 = v37
	v37 = loc33
	v37 = Mem0[v37:word32]
	loc12 = v37
	v37 = loc12
	v37 = fn000DB419(v37)
	loc13 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = 0x1BE<32>
	v38 = loc7
	v40 = loc11
	v41 = arg1
	v37 = invoke_iiii(v37, v38, v40, v41)
	loc14 = v37
	v37 = Mem0[0x00140048<p32>:word32]
	loc15 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = loc15
	v38 = 1<32>
	v37 = v37 & v38
	loc16 = v37
	v37 = loc16
	branch !v37 l00117DB1
	// succ:  l00117DAA l00117DB1
l00117DAA:
	v37 = 7<32>
	loc38 = v37
	goto l00117E4C
	// succ:  l00117E4C
l00117DB1:
	v37 = loc13
	v38 = 0<32>
	v39 = v37 == v38
	loc17 = v39
	v37 = loc17
	v39 = v37 == 0<32>
	branch !v39 l00117DE4
	// succ:  l00117DBD l00117DE4
l00117DBD:
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = 0x17E<32>
	v38 = loc13
	v37 = invoke_ii(v37, v38)
	v37 = Mem0[0x00140048<p32>:word32]
	loc18 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = loc18
	v38 = 1<32>
	v37 = v37 & v38
	loc19 = v37
	v37 = loc19
	branch !v37 l00117DE3
	// succ:  l00117DDC l00117DE3
l00117DDC:
	v37 = 6<32>
	loc38 = v37
	goto l00117E4C
	// succ:  l00117E4C
l00117DE3:
	// succ:  l00117DE4
l00117DE4:
	v37 = loc14
	v38 = 0xFFFFFFFE<32>
	v37 = v37 - v38
	switch (v37) { l00117DF9 l00117DFB l00117E07 }
	// succ:  l00117DF9 l00117DFB l00117E07
l00117DF9:
	// succ:  l00117DFB
l00117DFB:
	v37 = 0xF<32>
	loc38 = v37
	goto l00117E4C
	// succ:  l00117E4C
l00117E06:
	// succ:  l00117E07
l00117E07:
	v37 = loc7
	v38 = 1<32>
	v37 = v37 + v38
	loc29 = v37
	v37 = loc29
	loc9 = v37
	v37 = 1<32>
	loc10 = v37
	goto l00117E2F
	// succ:  l00117E2F
l00117E1B:
	// succ:  l00117E1C
l00117E1C:
	v37 = loc7
	v38 = loc14
	v37 = v37 + v38
	loc30 = v37
	v37 = loc30
	loc9 = v37
	v37 = loc14
	loc10 = v37
	// succ:  l00117E2E
l00117E2E:
	// succ:  l00117E2F
l00117E2F:
	v37 = loc10
	v38 = loc6
	v37 = v37 + v38
	loc8 = v37
	v37 = loc5
	v38 = 1<32>
	v37 = v37 + v38
	loc31 = v37
	v37 = loc31
	loc5 = v37
	v37 = loc8
	loc6 = v37
	v37 = loc9
	loc7 = v37
	goto l00117D2C
	// succ:  l00117D2C
l00117E4C:
	v37 = loc38
	v38 = 6<32>
	v39 = v37 == v38
	branch !v39 l00117E64
	// succ:  l00117E55 l00117E64
l00117E55:
	v37 = 0<32>
	v37 = ___cxa_find_matching_catch_3(v37)
	loc20 = v37
	v37 = Mem0[0x00140094<p32>:word32]
	loc21 = v37
	v37 = loc20
	fn000D0E65(v37)
	goto l00117EBF
	// succ:  l00117EBF
l00117E64:
	v37 = loc38
	v38 = 7<32>
	v39 = v37 == v38
	branch !v39 l00117EB3
	// succ:  l00117E6B l00117EB3
l00117E6B:
	v37 = ___cxa_find_matching_catch_2()
	loc22 = v37
	v37 = Mem0[0x00140094<p32>:word32]
	loc23 = v37
	v37 = loc13
	v38 = 0<32>
	v39 = v37 == v38
	loc24 = v39
	v37 = loc24
	v39 = v37 == 0<32>
	branch !v39 l00117EAE
	// succ:  l00117E7F l00117EAE
l00117E7F:
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = 0x17E<32>
	v38 = loc13
	v37 = invoke_ii(v37, v38)
	v37 = Mem0[0x00140048<p32>:word32]
	loc25 = v37
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v37 = loc25
	v38 = 1<32>
	v37 = v37 & v38
	loc26 = v37
	v37 = loc26
	branch !v37 l00117EAD
	// succ:  l00117E9E l00117EAD
l00117E9E:
	v37 = 0<32>
	v37 = ___cxa_find_matching_catch_3(v37)
	loc27 = v37
	v37 = Mem0[0x00140094<p32>:word32]
	loc28 = v37
	v37 = loc27
	fn000D0E65(v37)
	// succ:  l00117EAD
l00117EAD:
	// succ:  l00117EAE
l00117EAE:
	v37 = loc22
	___resumeException(v37)
	goto l00117EBE
	// succ:  l00117EBE
l00117EB3:
	v37 = loc38
	v38 = 0xF<32>
	v39 = v37 == v38
	branch !v39 l00117EBE
	// succ:  l00117EBA l00117EBE
l00117EBA:
	v37 = loc6
	return v37
	// succ:  fn00117D2C_exit
l00117EBE:
	// succ:  l00117EBE
l00117EBE:
	// succ:  l00117EBF
l00117EBF:
	v37 = 0<32>
	return v37
	// succ:  fn00117D2C_exit
l00117EC3:
	return v37
	// succ:  fn00117D2C_exit
fn00117D2C_exit:


// fn00117EC5
// Return size: 0
word32 fn00117EC5(word32 arg0)
fn00117EC5_entry:
	// succ:  l00117EC5
l00117EC5:
	v18 = Mem0[0x00140030<p32>:word32]
	loc16 = v18
	v18 = arg0
	v19 = 8<32>
	v18 = v18 + v19
	loc1 = v18
	v18 = loc1
	v18 = Mem0[v18:word32]
	loc7 = v18
	v18 = loc7
	v19 = 0<32>
	v20 = v18 == v19
	loc8 = v20
	v18 = loc8
	branch !v18 l00117EE9
	// succ:  l00117EE4 l00117EE9
l00117EE4:
	v18 = 1<32>
	loc4 = v18
	goto l00117F5C
	// succ:  l00117F5C
l00117EE9:
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = 0x17E<32>
	v19 = loc7
	v18 = invoke_ii(v18, v19)
	loc9 = v18
	v18 = Mem0[0x00140048<p32>:word32]
	loc10 = v18
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = loc10
	v19 = 1<32>
	v18 = v18 & v19
	loc11 = v18
	v18 = loc11
	branch !v18 l00117F18
	// succ:  l00117F09 l00117F18
l00117F09:
	v18 = 0<32>
	v18 = ___cxa_find_matching_catch_3(v18)
	loc5 = v18
	v18 = Mem0[0x00140094<p32>:word32]
	loc6 = v18
	v18 = loc5
	fn000D0E65(v18)
	// succ:  l00117F18
l00117F18:
	v18 = loc9
	v19 = 0<32>
	v20 = v18 == v19
	loc12 = v20
	v18 = loc12
	branch !v18 l00117F28
	// succ:  l00117F23 l00117F28
l00117F23:
	v18 = 4<32>
	loc4 = v18
	goto l00117F5B
	// succ:  l00117F5B
l00117F28:
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = 0x17E<32>
	v19 = loc9
	v18 = invoke_ii(v18, v19)
	v18 = Mem0[0x00140048<p32>:word32]
	loc13 = v18
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = loc13
	v19 = 1<32>
	v18 = v18 & v19
	loc14 = v18
	v18 = loc14
	branch !v18 l00117F56
	// succ:  l00117F47 l00117F56
l00117F47:
	v18 = 0<32>
	v18 = ___cxa_find_matching_catch_3(v18)
	loc2 = v18
	v18 = Mem0[0x00140094<p32>:word32]
	loc3 = v18
	v18 = loc2
	fn000D0E65(v18)
	goto l00117F5A
	// succ:  l00117F5A
l00117F56:
	v18 = 4<32>
	loc4 = v18
	// succ:  l00117F5A
l00117F5A:
	// succ:  l00117F5B
l00117F5B:
	// succ:  l00117F5C
l00117F5C:
	v18 = loc4
	return v18
	// succ:  fn00117EC5_exit
l00117F60:
	return v18
	// succ:  fn00117EC5_exit
fn00117EC5_exit:


// fn00117F62
// Return size: 0
void fn00117F62(word32 arg0)
fn00117F62_entry:
	// succ:  l00117F62
l00117F62:
	v15 = Mem0[0x00140030<p32>:word32]
	loc13 = v15
	v15 = arg0
	v16 = 0x2478<32>
	Mem0[v15:word32] = v16
	v15 = arg0
	v16 = 8<32>
	v15 = v15 + v16
	loc1 = v15
	v15 = loc1
	v15 = Mem0[v15:word32]
	loc4 = v15
	v15 = 0<32>
	Mem0[0x00140048<p32>:word32] = v15
	v15 = 0x17B<32>
	v15 = invoke_i(v15)
	loc5 = v15
	v15 = Mem0[0x00140048<p32>:word32]
	loc6 = v15
	v15 = 0<32>
	Mem0[0x00140048<p32>:word32] = v15
	v15 = loc6
	v16 = 1<32>
	v15 = v15 & v16
	loc7 = v15
	// succ:  l00117F99
l00117F99:
	v15 = loc7
	v17 = v15 == 0<32>
	branch !v17 l00117FD7
	// succ:  l00117FA0 l00117FD7
l00117FA0:
	v15 = loc4
	v16 = loc5
	v17 = v15 == v16
	loc8 = v17
	v15 = loc8
	v17 = v15 == 0<32>
	branch !v17 l00117FD5
	// succ:  l00117FAC l00117FD5
l00117FAC:
	v15 = loc1
	v15 = Mem0[v15:word32]
	loc9 = v15
	v15 = 0<32>
	Mem0[0x00140048<p32>:word32] = v15
	v15 = 0x1A1<32>
	v16 = loc9
	invoke_vi(v15, v16)
	v15 = Mem0[0x00140048<p32>:word32]
	loc10 = v15
	v15 = 0<32>
	Mem0[0x00140048<p32>:word32] = v15
	v15 = loc10
	v16 = 1<32>
	v15 = v15 & v16
	loc11 = v15
	v15 = loc11
	branch !v15 l00117FD4
	// succ:  l00117FD1 l00117FD4
l00117FD1:
	goto l00117FD7
	// succ:  l00117FD7
l00117FD4:
	// succ:  l00117FD5
l00117FD5:
	return
	// succ:  fn00117F62_exit
l00117FD7:
	// succ:  l00117FD7
l00117FD7:
	v15 = 0<32>
	v15 = ___cxa_find_matching_catch_3(v15)
	loc2 = v15
	v15 = Mem0[0x00140094<p32>:word32]
	loc3 = v15
	v15 = arg0
	fn00115DAA(v15)
	v15 = loc2
	fn000D0E65(v15)
	// succ:  l00117FEB
l00117FEB:
	return
	// succ:  fn00117F62_exit
fn00117F62_exit:


// fn00117FED
// Return size: 0
void fn00117FED(word32 arg0)
fn00117FED_entry:
	// succ:  l00117FED
l00117FED:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn00117F62(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn00117FED_exit
l00117FFE:
	return
	// succ:  fn00117FED_exit
fn00117FED_exit:


// fn00118000
// Return size: 0
word32 fn00118000(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00118000_entry:
	// succ:  l00118000
l00118000:
	v9 = Mem0[0x00140030<p32>:word32]
	loc14 = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = 0x10<32>
	v9 = v9 + v10
	Mem0[0x00140030<p32>:word32] = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = Mem0[0x00140034<p32>:word32]
	v11 = v9 >= v10
	branch !v11 l00118019
	// succ:  l00118014 l00118019
l00118014:
	v9 = 0x10<32>
	abortStackOverflow(v9)
	// succ:  l00118019
l00118019:
	v9 = loc14
	v10 = 4<32>
	v9 = v9 + v10
	loc11 = v9
	v9 = loc14
	loc12 = v9
	v9 = loc11
	v10 = arg2
	Mem0[v9:word32] = v10
	v9 = loc12
	v10 = arg5
	Mem0[v9:word32] = v10
	v9 = arg2
	v10 = arg3
	v12 = loc11
	v13 = arg5
	v14 = arg6
	v15 = loc12
	v16 = 0x10FFFF<32>
	v17 = 0<32>
	v9 = fn00118DA0(v9, v10, v12, v13, v14, v15, v16, v17)
	loc8 = v9
	v9 = loc11
	v9 = Mem0[v9:word32]
	loc9 = v9
	v9 = arg4
	v10 = loc9
	Mem0[v9:word32] = v10
	v9 = loc12
	v9 = Mem0[v9:word32]
	loc10 = v9
	v9 = arg7
	v10 = loc10
	Mem0[v9:word32] = v10
	v9 = loc14
	Mem0[0x00140030<p32>:word32] = v9
	v9 = loc8
	return v9
	// succ:  fn00118000_exit
l0011806D:
	return v9
	// succ:  fn00118000_exit
fn00118000_exit:


// fn0011806F
// Return size: 0
word32 fn0011806F(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn0011806F_entry:
	// succ:  l0011806F
l0011806F:
	v9 = Mem0[0x00140030<p32>:word32]
	loc14 = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = 0x10<32>
	v9 = v9 + v10
	Mem0[0x00140030<p32>:word32] = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = Mem0[0x00140034<p32>:word32]
	v11 = v9 >= v10
	branch !v11 l00118088
	// succ:  l00118083 l00118088
l00118083:
	v9 = 0x10<32>
	abortStackOverflow(v9)
	// succ:  l00118088
l00118088:
	v9 = loc14
	v10 = 4<32>
	v9 = v9 + v10
	loc11 = v9
	v9 = loc14
	loc12 = v9
	v9 = loc11
	v10 = arg2
	Mem0[v9:word32] = v10
	v9 = loc12
	v10 = arg5
	Mem0[v9:word32] = v10
	v9 = arg2
	v10 = arg3
	v12 = loc11
	v13 = arg5
	v14 = arg6
	v15 = loc12
	v16 = 0x10FFFF<32>
	v17 = 0<32>
	v9 = fn00118734(v9, v10, v12, v13, v14, v15, v16, v17)
	loc8 = v9
	v9 = loc11
	v9 = Mem0[v9:word32]
	loc9 = v9
	v9 = arg4
	v10 = loc9
	Mem0[v9:word32] = v10
	v9 = loc12
	v9 = Mem0[v9:word32]
	loc10 = v9
	v9 = arg7
	v10 = loc10
	Mem0[v9:word32] = v10
	v9 = loc14
	Mem0[0x00140030<p32>:word32] = v9
	v9 = loc8
	return v9
	// succ:  fn0011806F_exit
l001180DC:
	return v9
	// succ:  fn0011806F_exit
fn0011806F_exit:


// fn001180DE
// Return size: 0
word32 fn001180DE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn001180DE_entry:
	// succ:  l001180DE
l001180DE:
	v4 = Mem0[0x00140030<p32>:word32]
	loc6 = v4
	v4 = arg4
	v5 = arg2
	Mem0[v4:word32] = v5
	v4 = 3<32>
	return v4
	// succ:  fn001180DE_exit
l001180EE:
	return v4
	// succ:  fn001180DE_exit
fn001180DE_exit:


// fn001180F0
// Return size: 0
word32 fn001180F0(word32 arg0)
fn001180F0_entry:
	// succ:  l001180F0
l001180F0:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 0<32>
	return v4
	// succ:  fn001180F0_exit
l001180F9:
	return v4
	// succ:  fn001180F0_exit
fn001180F0_exit:


// fn001180FB
// Return size: 0
word32 fn001180FB(word32 arg0)
fn001180FB_entry:
	// succ:  l001180FB
l001180FB:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 0<32>
	return v4
	// succ:  fn001180FB_exit
l00118104:
	return v4
	// succ:  fn001180FB_exit
fn001180FB_exit:


// fn00118106
// Return size: 0
word32 fn00118106(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00118106_entry:
	// succ:  l00118106
l00118106:
	v5 = Mem0[0x00140030<p32>:word32]
	loc7 = v5
	v5 = arg2
	v6 = arg3
	v7 = arg4
	v8 = 0x10FFFF<32>
	v9 = 0<32>
	v5 = fn0011812E(v5, v6, v7, v8, v9)
	loc5 = v5
	v5 = loc5
	return v5
	// succ:  fn00118106_exit
l00118121:
	return v5
	// succ:  fn00118106_exit
fn00118106_exit:


// fn00118123
// Return size: 0
word32 fn00118123(word32 arg0)
fn00118123_entry:
	// succ:  l00118123
l00118123:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 4<32>
	return v4
	// succ:  fn00118123_exit
l0011812C:
	return v4
	// succ:  fn00118123_exit
fn00118123_exit:


// fn0011812E
// Return size: 0
word32 fn0011812E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011812E_entry:
	// succ:  l0011812E
l0011812E:
	v131 = Mem0[0x00140030<p32>:word32]
	loc133 = v131
	v131 = arg4
	v132 = 4<32>
	v131 = v131 & v132
	loc75 = v131
	v131 = loc75
	v132 = 0<32>
	v133 = v131 == v132
	loc86 = v133
	v131 = arg1
	loc12 = v131
	v131 = loc86
	branch !v131 l00118154
	// succ:  l0011814B l00118154
l0011814B:
	v131 = 0<32>
	loc6 = v131
	v131 = arg0
	loc7 = v131
	goto l001181F7
	// succ:  l001181F7
l00118154:
	v131 = arg0
	loc97 = v131
	v131 = loc12
	v132 = loc97
	v131 = v131 - v132
	loc108 = v131
	v131 = loc108
	v132 = 2<32>
	v133 = v131 > v132
	loc119 = v133
	v131 = loc119
	branch !v131 l001181EE
	// succ:  l0011816A l001181EE
l0011816A:
	v131 = arg0
	v134 = Mem0[v131:int8]
	v131 = CONVERT(v134, int8, word32)
	loc13 = v131
	v131 = loc13
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFFEF<32>
	v133 = v131 == v132
	loc24 = v133
	v131 = loc24
	branch !v131 l001181E4
	// succ:  l00118182 l001181E4
l00118182:
	v131 = arg0
	v132 = 1<32>
	v131 = v131 + v132
	loc35 = v131
	v131 = loc35
	v135 = Mem0[v131:int8]
	v131 = CONVERT(v135, int8, word32)
	loc38 = v131
	v131 = loc38
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFFBB<32>
	v133 = v131 == v132
	loc39 = v133
	v131 = loc39
	branch !v131 l001181DA
	// succ:  l001181A2 l001181DA
l001181A2:
	v131 = arg0
	v132 = 2<32>
	v131 = v131 + v132
	loc40 = v131
	v131 = loc40
	v136 = Mem0[v131:int8]
	v131 = CONVERT(v136, int8, word32)
	loc41 = v131
	v131 = loc41
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFFBF<32>
	v133 = v131 == v132
	loc42 = v133
	v131 = arg0
	v132 = 3<32>
	v131 = v131 + v132
	loc43 = v131
	v131 = loc42
	branch !v131 l001181CC
	// succ:  l001181C9 l001181CC
l001181C9:
	v131 = loc43
	goto l001181CE
	// succ:  l001181CE
l001181CC:
	v131 = arg0
	// succ:  l001181CE
l001181CE:
	loc5 = v131
	v131 = 0<32>
	loc6 = v131
	v131 = loc5
	loc7 = v131
	goto l001181E2
	// succ:  l001181E2
l001181DA:
	v131 = 0<32>
	loc6 = v131
	v131 = arg0
	loc7 = v131
	// succ:  l001181E2
l001181E2:
	goto l001181EC
	// succ:  l001181EC
l001181E4:
	v131 = 0<32>
	loc6 = v131
	v131 = arg0
	loc7 = v131
	// succ:  l001181EC
l001181EC:
	goto l001181F6
	// succ:  l001181F6
l001181EE:
	v131 = 0<32>
	loc6 = v131
	v131 = arg0
	loc7 = v131
	// succ:  l001181F6
l001181F6:
	// succ:  l001181F7
l001181F7:
	v131 = loc7
	v132 = arg1
	v133 = v131 <u v132
	loc44 = v133
	v131 = loc6
	v132 = arg2
	v133 = v131 <u v132
	loc45 = v133
	v131 = loc45
	v132 = loc44
	v131 = v131 & v132
	loc130 = v131
	v131 = loc130
	v133 = v131 == 0<32>
	branch !v133 l00118220
	// succ:  l00118218 l00118220
l00118218:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l00118220:
	v131 = loc7
	v137 = Mem0[v131:int8]
	v131 = CONVERT(v137, int8, word32)
	loc46 = v131
	v131 = loc46
	v132 = 0xFF<32>
	v131 = v131 & v132
	loc47 = v131
	v131 = loc47
	v132 = arg3
	v133 = v131 >u v132
	loc48 = v133
	v131 = loc48
	branch !v131 l00118242
	// succ:  l0011823A l00118242
l0011823A:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l00118242:
	v131 = loc46
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFFFF<32>
	v133 = v131 > v132
	loc49 = v133
	// succ:  l0011824F
l0011824F:
	v131 = loc49
	branch !v131 l00118265
	// succ:  l00118255 l00118265
l00118255:
	v131 = loc7
	v132 = 1<32>
	v131 = v131 + v132
	loc50 = v131
	v131 = loc6
	loc8 = v131
	v131 = loc50
	loc9 = v131
	goto l00118668
	// succ:  l00118668
l00118265:
	v131 = loc46
	v132 = 0xFF<32>
	v131 = v131 & v132
	v132 = 0xC2<32>
	v133 = v131 < v132
	loc51 = v133
	v131 = loc51
	branch !v131 l0011827D
	// succ:  l00118275 l0011827D
l00118275:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l0011827D:
	v131 = loc46
	v132 = 0xFF<32>
	v131 = v131 & v132
	v132 = 0xE0<32>
	v133 = v131 < v132
	loc52 = v133
	v131 = loc52
	branch !v131 l00118321
	// succ:  l0011828D l00118321
l0011828D:
	v131 = loc7
	loc53 = v131
	v131 = loc12
	v132 = loc53
	v131 = v131 - v132
	loc54 = v131
	v131 = loc54
	v132 = 2<32>
	v133 = v131 < v132
	loc55 = v133
	v131 = loc55
	branch !v131 l001182AB
	// succ:  l001182A3 l001182AB
l001182A3:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l001182AB:
	v131 = loc7
	v132 = 1<32>
	v131 = v131 + v132
	loc56 = v131
	v131 = loc56
	v138 = Mem0[v131:int8]
	v131 = CONVERT(v138, int8, word32)
	loc57 = v131
	v131 = loc57
	v132 = 0xFF<32>
	v131 = v131 & v132
	loc58 = v131
	v131 = loc58
	v132 = 0xC0<32>
	v131 = v131 & v132
	loc59 = v131
	v131 = loc59
	v132 = 0x80<32>
	v133 = v131 == v132
	loc60 = v133
	v131 = loc60
	v133 = v131 == 0<32>
	branch !v133 l001182DE
	// succ:  l001182D6 l001182DE
l001182D6:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l001182DE:
	v131 = loc47
	v132 = 6<32>
	v131 = v131 << v132
	loc61 = v131
	v131 = loc61
	v132 = 0x7C0<32>
	v131 = v131 & v132
	loc62 = v131
	v131 = loc58
	v132 = 0x3F<32>
	v131 = v131 & v132
	loc63 = v131
	v131 = loc63
	v132 = loc62
	v131 = v131 | v132
	loc64 = v131
	v131 = loc64
	v132 = arg3
	v133 = v131 >u v132
	loc65 = v133
	v131 = loc7
	v132 = 2<32>
	v131 = v131 + v132
	loc66 = v131
	v131 = loc65
	branch !v131 l00118315
	// succ:  l0011830D l00118315
l0011830D:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l00118315:
	v131 = loc6
	loc8 = v131
	v131 = loc66
	loc9 = v131
	goto l00118669
	// succ:  l00118669
l0011831F:
	// succ:  l00118321
l00118321:
	v131 = loc46
	v132 = 0xFF<32>
	v131 = v131 & v132
	v132 = 0xF0<32>
	v133 = v131 < v132
	loc67 = v133
	v131 = loc67
	branch !v131 l0011848D
	// succ:  l00118331 l0011848D
l00118331:
	v131 = loc7
	loc68 = v131
	v131 = loc12
	v132 = loc68
	v131 = v131 - v132
	loc69 = v131
	v131 = loc69
	v132 = 3<32>
	v133 = v131 < v132
	loc70 = v133
	v131 = loc70
	branch !v131 l0011834F
	// succ:  l00118347 l0011834F
l00118347:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l0011834F:
	v131 = loc7
	v132 = 1<32>
	v131 = v131 + v132
	loc71 = v131
	v131 = loc71
	v139 = Mem0[v131:int8]
	v131 = CONVERT(v139, int8, word32)
	loc72 = v131
	v131 = loc7
	v132 = 2<32>
	v131 = v131 + v132
	loc73 = v131
	v131 = loc73
	v140 = Mem0[v131:int8]
	v131 = CONVERT(v140, int8, word32)
	loc74 = v131
	// succ:  l0011836B
l0011836B:
	v131 = loc46
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFFE0<32>
	v131 = v131 - v132
	switch (v131) { l0011838F l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183B7 }
	// succ:  l0011838F l001183B7 l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF
l0011838F:
	v131 = loc72
	v132 = 0xFFFFFFE0<32>
	v131 = v131 & v132
	loc76 = v131
	v131 = loc76
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFFA0<32>
	v133 = v131 == v132
	loc77 = v133
	v131 = loc77
	v133 = v131 == 0<32>
	branch !v133 l001183B4
	// succ:  l001183AC l001183B4
l001183AC:
	v131 = 0x13<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l001183B4:
	goto l00118405
	// succ:  l00118405
l001183B6:
	// succ:  l001183B7
l001183B7:
	v131 = loc72
	v132 = 0xFFFFFFE0<32>
	v131 = v131 & v132
	loc80 = v131
	v131 = loc80
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFF80<32>
	v133 = v131 == v132
	loc81 = v133
	v131 = loc81
	v133 = v131 == 0<32>
	branch !v133 l001183DC
	// succ:  l001183D4 l001183DC
l001183D4:
	v131 = 0x15<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l001183DC:
	goto l00118405
	// succ:  l00118405
l001183DE:
	// succ:  l001183DF
l001183DF:
	v131 = loc72
	v132 = 0xFFFFFFC0<32>
	v131 = v131 & v132
	loc84 = v131
	v131 = loc84
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFF80<32>
	v133 = v131 == v132
	loc85 = v133
	v131 = loc85
	v133 = v131 == 0<32>
	branch !v133 l00118404
	// succ:  l001183FC l00118404
l001183FC:
	v131 = 0x17<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l00118404:
	// succ:  l00118404
l00118404:
	// succ:  l00118405
l00118405:
	v131 = loc74
	v132 = 0xFF<32>
	v131 = v131 & v132
	loc89 = v131
	v131 = loc89
	v132 = 0xC0<32>
	v131 = v131 & v132
	loc90 = v131
	v131 = loc90
	v132 = 0x80<32>
	v133 = v131 == v132
	loc91 = v133
	v131 = loc91
	v133 = v131 == 0<32>
	branch !v133 l0011842B
	// succ:  l00118423 l0011842B
l00118423:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l0011842B:
	v131 = loc47
	v132 = 0xC<32>
	v131 = v131 << v132
	loc92 = v131
	v131 = loc92
	v132 = 0xF000<32>
	v131 = v131 & v132
	loc93 = v131
	v131 = loc72
	v132 = 0xFF<32>
	v131 = v131 & v132
	loc94 = v131
	v131 = loc94
	v132 = 6<32>
	v131 = v131 << v132
	loc95 = v131
	v131 = loc95
	v132 = 0xFC0<32>
	v131 = v131 & v132
	loc96 = v131
	v131 = loc96
	v132 = loc93
	v131 = v131 | v132
	loc98 = v131
	v131 = loc89
	v132 = 0x3F<32>
	v131 = v131 & v132
	loc99 = v131
	v131 = loc98
	v132 = loc99
	v131 = v131 | v132
	loc100 = v131
	v131 = loc100
	v132 = arg3
	v133 = v131 >u v132
	loc101 = v133
	v131 = loc7
	v132 = 3<32>
	v131 = v131 + v132
	loc102 = v131
	v131 = loc101
	branch !v131 l00118481
	// succ:  l00118479 l00118481
l00118479:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l00118481:
	v131 = loc6
	loc8 = v131
	v131 = loc102
	loc9 = v131
	goto l00118669
	// succ:  l00118669
l0011848B:
	// succ:  l0011848D
l0011848D:
	v131 = loc46
	v132 = 0xFF<32>
	v131 = v131 & v132
	v132 = 0xF5<32>
	v133 = v131 < v132
	loc103 = v133
	v131 = loc103
	v133 = v131 == 0<32>
	branch !v133 l001184A6
	// succ:  l0011849E l001184A6
l0011849E:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l001184A6:
	v131 = loc7
	loc104 = v131
	v131 = loc12
	v132 = loc104
	v131 = v131 - v132
	loc105 = v131
	v131 = loc105
	v132 = 4<32>
	v133 = v131 < v132
	loc106 = v133
	v131 = arg2
	v132 = loc6
	v131 = v131 - v132
	loc107 = v131
	v131 = loc107
	v132 = 2<32>
	v133 = v131 <u v132
	loc109 = v133
	v131 = loc109
	v132 = loc106
	v131 = v131 | v132
	loc131 = v131
	v131 = loc131
	branch !v131 l001184DB
	// succ:  l001184D3 l001184DB
l001184D3:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l001184DB:
	v131 = loc7
	v132 = 1<32>
	v131 = v131 + v132
	loc110 = v131
	v131 = loc110
	v141 = Mem0[v131:int8]
	v131 = CONVERT(v141, int8, word32)
	loc111 = v131
	v131 = loc7
	v132 = 2<32>
	v131 = v131 + v132
	loc112 = v131
	v131 = loc112
	v142 = Mem0[v131:int8]
	v131 = CONVERT(v142, int8, word32)
	loc113 = v131
	v131 = loc7
	v132 = 3<32>
	v131 = v131 + v132
	loc114 = v131
	v131 = loc114
	v143 = Mem0[v131:int8]
	v131 = CONVERT(v143, int8, word32)
	loc115 = v131
	// succ:  l00118505
l00118505:
	v131 = loc46
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFFF0<32>
	v131 = v131 - v132
	switch (v131) { l00118520 l00118574 l00118574 l00118574 l0011854C }
	// succ:  l00118520 l0011854C l00118574 l00118574 l00118574
l00118520:
	v131 = loc111
	v132 = 0x70<32>
	v131 = v131 + v132
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	loc10 = v131
	v131 = loc10
	v132 = 0xFF<32>
	v131 = v131 & v132
	v132 = 0x30<32>
	v133 = v131 < v132
	loc116 = v133
	v131 = loc116
	v133 = v131 == 0<32>
	branch !v133 l00118549
	// succ:  l00118541 l00118549
l00118541:
	v131 = 0x1E<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l00118549:
	goto l0011859A
	// succ:  l0011859A
l0011854B:
	// succ:  l0011854C
l0011854C:
	v131 = loc111
	v132 = 0xFFFFFFF0<32>
	v131 = v131 & v132
	loc120 = v131
	v131 = loc120
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFF80<32>
	v133 = v131 == v132
	loc121 = v133
	v131 = loc121
	v133 = v131 == 0<32>
	branch !v133 l00118571
	// succ:  l00118569 l00118571
l00118569:
	v131 = 0x20<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l00118571:
	goto l0011859A
	// succ:  l0011859A
l00118573:
	// succ:  l00118574
l00118574:
	v131 = loc111
	v132 = 0xFFFFFFC0<32>
	v131 = v131 & v132
	loc124 = v131
	v131 = loc124
	v132 = 0x18<32>
	v131 = v131 << v132
	v132 = 0x18<32>
	v131 = v131 >> v132
	v132 = 0xFFFFFF80<32>
	v133 = v131 == v132
	loc125 = v133
	v131 = loc125
	v133 = v131 == 0<32>
	branch !v133 l00118599
	// succ:  l00118591 l00118599
l00118591:
	v131 = 0x22<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l00118599:
	// succ:  l00118599
l00118599:
	// succ:  l0011859A
l0011859A:
	v131 = loc113
	v132 = 0xFF<32>
	v131 = v131 & v132
	loc128 = v131
	v131 = loc128
	v132 = 0xC0<32>
	v131 = v131 & v132
	loc129 = v131
	v131 = loc129
	v132 = 0x80<32>
	v133 = v131 == v132
	loc14 = v133
	v131 = loc14
	v133 = v131 == 0<32>
	branch !v133 l001185C4
	// succ:  l001185BC l001185C4
l001185BC:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l001185C4:
	v131 = loc115
	v132 = 0xFF<32>
	v131 = v131 & v132
	loc15 = v131
	v131 = loc15
	v132 = 0xC0<32>
	v131 = v131 & v132
	loc16 = v131
	v131 = loc16
	v132 = 0x80<32>
	v133 = v131 == v132
	loc17 = v133
	v131 = loc17
	v133 = v131 == 0<32>
	branch !v133 l001185E9
	// succ:  l001185E1 l001185E9
l001185E1:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l001185E9:
	v131 = loc47
	v132 = 0x12<32>
	v131 = v131 << v132
	loc18 = v131
	v131 = loc18
	v132 = 0x1C0000<32>
	v131 = v131 & v132
	loc19 = v131
	v131 = loc111
	v132 = 0xFF<32>
	v131 = v131 & v132
	loc20 = v131
	v131 = loc20
	v132 = 0xC<32>
	v131 = v131 << v132
	loc21 = v131
	v131 = loc21
	v132 = 0x3F000<32>
	v131 = v131 & v132
	loc22 = v131
	v131 = loc22
	v132 = loc19
	v131 = v131 | v132
	loc23 = v131
	v131 = loc128
	v132 = 6<32>
	v131 = v131 << v132
	loc25 = v131
	v131 = loc25
	v132 = 0xFC0<32>
	v131 = v131 & v132
	loc26 = v131
	v131 = loc23
	v132 = loc26
	v131 = v131 | v132
	loc27 = v131
	v131 = loc15
	v132 = 0x3F<32>
	v131 = v131 & v132
	loc28 = v131
	v131 = loc27
	v132 = loc28
	v131 = v131 | v132
	loc29 = v131
	v131 = loc29
	v132 = arg3
	v133 = v131 >u v132
	loc30 = v133
	v131 = loc6
	v132 = 1<32>
	v131 = v131 + v132
	loc31 = v131
	v131 = loc7
	v132 = 4<32>
	v131 = v131 + v132
	loc32 = v131
	v131 = loc30
	branch !v131 l0011865F
	// succ:  l00118657 l0011865F
l00118657:
	v131 = 0x27<32>
	loc132 = v131
	goto l0011867B
	// succ:  l0011867B
l0011865F:
	v131 = loc31
	loc8 = v131
	v131 = loc32
	loc9 = v131
	// succ:  l00118667
l00118667:
	// succ:  l00118668
l00118668:
	// succ:  l00118669
l00118669:
	v131 = loc8
	v132 = 1<32>
	v131 = v131 + v132
	loc33 = v131
	v131 = loc33
	loc6 = v131
	v131 = loc9
	loc7 = v131
	goto l001181F7
	// succ:  l001181F7
l0011867B:
	v131 = loc132
	v132 = 0x13<32>
	v133 = v131 == v132
	branch !v133 l00118695
	// succ:  l00118685 l00118695
l00118685:
	v131 = arg0
	loc78 = v131
	v131 = loc68
	v132 = loc78
	v131 = v131 - v132
	loc79 = v131
	v131 = loc79
	loc37 = v131
	goto l0011872E
	// succ:  l0011872E
l00118695:
	v131 = loc132
	v132 = 0x15<32>
	v133 = v131 == v132
	branch !v133 l001186AD
	// succ:  l0011869D l001186AD
l0011869D:
	v131 = arg0
	loc82 = v131
	v131 = loc68
	v132 = loc82
	v131 = v131 - v132
	loc83 = v131
	v131 = loc83
	loc37 = v131
	goto l0011872D
	// succ:  l0011872D
l001186AD:
	v131 = loc132
	v132 = 0x17<32>
	v133 = v131 == v132
	branch !v133 l001186C5
	// succ:  l001186B5 l001186C5
l001186B5:
	v131 = arg0
	loc87 = v131
	v131 = loc68
	v132 = loc87
	v131 = v131 - v132
	loc88 = v131
	v131 = loc88
	loc37 = v131
	goto l0011872C
	// succ:  l0011872C
l001186C5:
	v131 = loc132
	v132 = 0x1E<32>
	v133 = v131 == v132
	branch !v133 l001186DD
	// succ:  l001186CD l001186DD
l001186CD:
	v131 = arg0
	loc117 = v131
	v131 = loc104
	v132 = loc117
	v131 = v131 - v132
	loc118 = v131
	v131 = loc118
	loc37 = v131
	goto l0011872B
	// succ:  l0011872B
l001186DD:
	v131 = loc132
	v132 = 0x20<32>
	v133 = v131 == v132
	branch !v133 l001186F5
	// succ:  l001186E5 l001186F5
l001186E5:
	v131 = arg0
	loc122 = v131
	v131 = loc104
	v132 = loc122
	v131 = v131 - v132
	loc123 = v131
	v131 = loc123
	loc37 = v131
	goto l0011872A
	// succ:  l0011872A
l001186F5:
	v131 = loc132
	v132 = 0x22<32>
	v133 = v131 == v132
	branch !v133 l0011870D
	// succ:  l001186FD l0011870D
l001186FD:
	v131 = arg0
	loc126 = v131
	v131 = loc104
	v132 = loc126
	v131 = v131 - v132
	loc127 = v131
	v131 = loc127
	loc37 = v131
	goto l00118729
	// succ:  l00118729
l0011870D:
	v131 = loc132
	v132 = 0x27<32>
	v133 = v131 == v132
	branch !v133 l00118729
	// succ:  l00118715 l00118729
l00118715:
	v131 = arg0
	loc11 = v131
	v131 = loc7
	loc34 = v131
	v131 = loc34
	v132 = loc11
	v131 = v131 - v132
	loc36 = v131
	v131 = loc36
	loc37 = v131
	// succ:  l00118729
l00118729:
	// succ:  l00118729
l00118729:
	// succ:  l0011872A
l0011872A:
	// succ:  l0011872B
l0011872B:
	// succ:  l0011872C
l0011872C:
	// succ:  l0011872D
l0011872D:
	// succ:  l0011872E
l0011872E:
	v131 = loc37
	return v131
	// succ:  fn0011812E_exit
l00118732:
	return v131
	// succ:  fn0011812E_exit
fn0011812E_exit:


// fn00118734
// Return size: 0
word32 fn00118734(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00118734_entry:
	// succ:  l00118734
l00118734:
	v140 = Mem0[0x00140030<p32>:word32]
	loc145 = v140
	v140 = arg2
	v141 = arg0
	Mem0[v140:word32] = v141
	v140 = arg5
	v141 = arg3
	Mem0[v140:word32] = v141
	v140 = arg7
	v141 = 4<32>
	v140 = v140 & v141
	loc122 = v140
	v140 = loc122
	v141 = 0<32>
	v142 = v140 == v141
	loc133 = v142
	v140 = loc133
	branch !v140 l00118766
	// succ:  l0011875D l00118766
l0011875D:
	v140 = arg1
	loc10 = v140
	v140 = loc10
	loc11 = v140
	goto l00118809
	// succ:  l00118809
l00118766:
	v140 = arg2
	v140 = Mem0[v140:word32]
	loc12 = v140
	v140 = arg1
	loc23 = v140
	v140 = loc12
	loc34 = v140
	v140 = loc23
	v141 = loc34
	v140 = v140 - v141
	loc45 = v140
	v140 = loc45
	v141 = 2<32>
	v142 = v140 > v141
	loc56 = v142
	v140 = loc56
	branch !v140 l00118804
	// succ:  l00118787 l00118804
l00118787:
	v140 = loc12
	v143 = Mem0[v140:int8]
	v140 = CONVERT(v143, int8, word32)
	loc57 = v140
	v140 = loc57
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFFEF<32>
	v142 = v140 == v141
	loc58 = v142
	v140 = loc58
	branch !v140 l001187FE
	// succ:  l0011879F l001187FE
l0011879F:
	v140 = loc12
	v141 = 1<32>
	v140 = v140 + v141
	loc59 = v140
	v140 = loc59
	v144 = Mem0[v140:int8]
	v140 = CONVERT(v144, int8, word32)
	loc60 = v140
	v140 = loc60
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFFBB<32>
	v142 = v140 == v141
	loc61 = v142
	v140 = loc61
	branch !v140 l001187F8
	// succ:  l001187BF l001187F8
l001187BF:
	v140 = loc12
	v141 = 2<32>
	v140 = v140 + v141
	loc62 = v140
	v140 = loc62
	v145 = Mem0[v140:int8]
	v140 = CONVERT(v145, int8, word32)
	loc63 = v140
	v140 = loc63
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFFBF<32>
	v142 = v140 == v141
	loc64 = v142
	v140 = loc64
	branch !v140 l001187F2
	// succ:  l001187DF l001187F2
l001187DF:
	v140 = loc12
	v141 = 3<32>
	v140 = v140 + v141
	loc65 = v140
	v140 = arg2
	v141 = loc65
	Mem0[v140:word32] = v141
	v140 = loc23
	loc11 = v140
	goto l001187F6
	// succ:  l001187F6
l001187F2:
	v140 = loc23
	loc11 = v140
	// succ:  l001187F6
l001187F6:
	goto l001187FC
	// succ:  l001187FC
l001187F8:
	v140 = loc23
	loc11 = v140
	// succ:  l001187FC
l001187FC:
	goto l00118802
	// succ:  l00118802
l001187FE:
	v140 = loc23
	loc11 = v140
	// succ:  l00118802
l00118802:
	goto l00118808
	// succ:  l00118808
l00118804:
	v140 = loc23
	loc11 = v140
	// succ:  l00118808
l00118808:
	// succ:  l00118809
l00118809:
	v140 = arg4
	loc66 = v140
	// succ:  l00118810
l00118810:
	v140 = arg2
	v140 = Mem0[v140:word32]
	loc67 = v140
	v140 = loc67
	v141 = arg1
	v142 = v140 <u v141
	loc68 = v142
	v140 = loc68
	v142 = v140 == 0<32>
	branch !v142 l0011882D
	// succ:  l00118825 l0011882D
l00118825:
	v140 = 0x29<32>
	loc144 = v140
	goto l00118D85
	// succ:  l00118D85
l0011882D:
	v140 = arg5
	v140 = Mem0[v140:word32]
	loc69 = v140
	v140 = loc69
	v141 = arg4
	v142 = v140 <u v141
	loc70 = v142
	v140 = loc70
	v142 = v140 == 0<32>
	branch !v142 l00118848
	// succ:  l00118840 l00118848
l00118840:
	v140 = 0x29<32>
	loc144 = v140
	goto l00118D85
	// succ:  l00118D85
l00118848:
	v140 = loc67
	v146 = Mem0[v140:int8]
	v140 = CONVERT(v146, int8, word32)
	loc71 = v140
	v140 = loc71
	v141 = 0xFF<32>
	v140 = v140 & v141
	loc72 = v140
	v140 = loc72
	v141 = arg6
	v142 = v140 >u v141
	loc73 = v142
	v140 = loc73
	branch !v140 l00118869
	// succ:  l00118862 l00118869
l00118862:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118869:
	v140 = loc71
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFFFF<32>
	v142 = v140 > v141
	loc74 = v142
	// succ:  l00118876
l00118876:
	v140 = loc74
	branch !v140 l0011889A
	// succ:  l0011887C l0011889A
l0011887C:
	v140 = loc71
	v141 = 0xFF<32>
	v140 = v140 & v141
	loc75 = v140
	v140 = loc69
	v141 = loc75
	v147 = SLICE(v141, word16, 0)
	Mem0[v140:word16] = v147
	v140 = loc67
	v141 = 1<32>
	v140 = v140 + v141
	loc76 = v140
	v140 = arg2
	v141 = loc76
	Mem0[v140:word32] = v141
	goto l00118D6C
	// succ:  l00118D6C
l0011889A:
	v140 = loc71
	v141 = 0xFF<32>
	v140 = v140 & v141
	v141 = 0xC2<32>
	v142 = v140 < v141
	loc77 = v142
	v140 = loc77
	branch !v140 l001188B1
	// succ:  l001188AA l001188B1
l001188AA:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l001188B1:
	v140 = loc71
	v141 = 0xFF<32>
	v140 = v140 & v141
	v141 = 0xE0<32>
	v142 = v140 < v141
	loc78 = v142
	v140 = loc78
	branch !v140 l00118960
	// succ:  l001188C1 l00118960
l001188C1:
	v140 = loc67
	loc79 = v140
	v140 = loc11
	v141 = loc79
	v140 = v140 - v141
	loc80 = v140
	v140 = loc80
	v141 = 2<32>
	v142 = v140 < v141
	loc81 = v142
	v140 = loc81
	branch !v140 l001188DE
	// succ:  l001188D7 l001188DE
l001188D7:
	v140 = 1<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l001188DE:
	v140 = loc67
	v141 = 1<32>
	v140 = v140 + v141
	loc82 = v140
	v140 = loc82
	v148 = Mem0[v140:int8]
	v140 = CONVERT(v148, int8, word32)
	loc83 = v140
	v140 = loc83
	v141 = 0xFF<32>
	v140 = v140 & v141
	loc84 = v140
	v140 = loc84
	v141 = 0xC0<32>
	v140 = v140 & v141
	loc85 = v140
	v140 = loc85
	v141 = 0x80<32>
	v142 = v140 == v141
	loc86 = v142
	v140 = loc86
	v142 = v140 == 0<32>
	branch !v142 l00118910
	// succ:  l00118909 l00118910
l00118909:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118910:
	v140 = loc72
	v141 = 6<32>
	v140 = v140 << v141
	loc87 = v140
	v140 = loc87
	v141 = 0x7C0<32>
	v140 = v140 & v141
	loc88 = v140
	v140 = loc84
	v141 = 0x3F<32>
	v140 = v140 & v141
	loc89 = v140
	v140 = loc89
	v141 = loc88
	v140 = v140 | v141
	loc90 = v140
	v140 = loc90
	v141 = arg6
	v142 = v140 >u v141
	loc91 = v142
	v140 = loc91
	branch !v140 l0011893F
	// succ:  l00118938 l0011893F
l00118938:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l0011893F:
	v140 = loc90
	v141 = 0xFFFF<32>
	v140 = v140 & v141
	loc92 = v140
	v140 = loc69
	v141 = loc92
	v149 = SLICE(v141, word16, 0)
	Mem0[v140:word16] = v149
	v140 = loc67
	v141 = 2<32>
	v140 = v140 + v141
	loc93 = v140
	v140 = arg2
	v141 = loc93
	Mem0[v140:word32] = v141
	goto l00118D6D
	// succ:  l00118D6D
l00118960:
	v140 = loc71
	v141 = 0xFF<32>
	v140 = v140 & v141
	v141 = 0xF0<32>
	v142 = v140 < v141
	loc94 = v142
	v140 = loc94
	branch !v140 l00118AD4
	// succ:  l00118970 l00118AD4
l00118970:
	v140 = loc67
	loc95 = v140
	v140 = loc11
	v141 = loc95
	v140 = v140 - v141
	loc96 = v140
	v140 = loc96
	v141 = 3<32>
	v142 = v140 < v141
	loc97 = v142
	v140 = loc97
	branch !v140 l0011898D
	// succ:  l00118986 l0011898D
l00118986:
	v140 = 1<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l0011898D:
	v140 = loc67
	v141 = 1<32>
	v140 = v140 + v141
	loc98 = v140
	v140 = loc98
	v150 = Mem0[v140:int8]
	v140 = CONVERT(v150, int8, word32)
	loc99 = v140
	v140 = loc67
	v141 = 2<32>
	v140 = v140 + v141
	loc100 = v140
	v140 = loc100
	v151 = Mem0[v140:int8]
	v140 = CONVERT(v151, int8, word32)
	loc101 = v140
	// succ:  l001189A9
l001189A9:
	v140 = loc71
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFFE0<32>
	v140 = v140 - v141
	switch (v140) { l001189CD l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l001189F4 }
	// succ:  l001189CD l001189F4 l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B
l001189CD:
	v140 = loc99
	v141 = 0xFFFFFFE0<32>
	v140 = v140 & v141
	loc102 = v140
	v140 = loc102
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFFA0<32>
	v142 = v140 == v141
	loc103 = v142
	v140 = loc103
	v142 = v140 == 0<32>
	branch !v142 l001189F1
	// succ:  l001189EA l001189F1
l001189EA:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l001189F1:
	goto l00118A40
	// succ:  l00118A40
l001189F3:
	// succ:  l001189F4
l001189F4:
	v140 = loc99
	v141 = 0xFFFFFFE0<32>
	v140 = v140 & v141
	loc104 = v140
	v140 = loc104
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFF80<32>
	v142 = v140 == v141
	loc105 = v142
	v140 = loc105
	v142 = v140 == 0<32>
	branch !v142 l00118A18
	// succ:  l00118A11 l00118A18
l00118A11:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118A18:
	goto l00118A40
	// succ:  l00118A40
l00118A1A:
	// succ:  l00118A1B
l00118A1B:
	v140 = loc99
	v141 = 0xFFFFFFC0<32>
	v140 = v140 & v141
	loc106 = v140
	v140 = loc106
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFF80<32>
	v142 = v140 == v141
	loc107 = v142
	v140 = loc107
	v142 = v140 == 0<32>
	branch !v142 l00118A3F
	// succ:  l00118A38 l00118A3F
l00118A38:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118A3F:
	// succ:  l00118A3F
l00118A3F:
	// succ:  l00118A40
l00118A40:
	v140 = loc101
	v141 = 0xFF<32>
	v140 = v140 & v141
	loc108 = v140
	v140 = loc108
	v141 = 0xC0<32>
	v140 = v140 & v141
	loc109 = v140
	v140 = loc109
	v141 = 0x80<32>
	v142 = v140 == v141
	loc110 = v142
	v140 = loc110
	v142 = v140 == 0<32>
	branch !v142 l00118A65
	// succ:  l00118A5E l00118A65
l00118A5E:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118A65:
	v140 = loc72
	v141 = 0xC<32>
	v140 = v140 << v141
	loc111 = v140
	v140 = loc99
	v141 = 0xFF<32>
	v140 = v140 & v141
	loc112 = v140
	v140 = loc112
	v141 = 6<32>
	v140 = v140 << v141
	loc113 = v140
	v140 = loc113
	v141 = 0xFC0<32>
	v140 = v140 & v141
	loc114 = v140
	v140 = loc114
	v141 = loc111
	v140 = v140 | v141
	loc115 = v140
	v140 = loc108
	v141 = 0x3F<32>
	v140 = v140 & v141
	loc116 = v140
	v140 = loc115
	v141 = loc116
	v140 = v140 | v141
	loc117 = v140
	v140 = loc117
	v141 = 0xFFFF<32>
	v140 = v140 & v141
	loc118 = v140
	v140 = loc118
	v141 = arg6
	v142 = v140 >u v141
	loc119 = v142
	v140 = loc119
	branch !v140 l00118AB3
	// succ:  l00118AAC l00118AB3
l00118AAC:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118AB3:
	v140 = loc117
	v141 = 0xFFFF<32>
	v140 = v140 & v141
	loc120 = v140
	v140 = loc69
	v141 = loc120
	v152 = SLICE(v141, word16, 0)
	Mem0[v140:word16] = v152
	v140 = loc67
	v141 = 3<32>
	v140 = v140 + v141
	loc121 = v140
	v140 = arg2
	v141 = loc121
	Mem0[v140:word32] = v141
	goto l00118D6D
	// succ:  l00118D6D
l00118AD4:
	v140 = loc71
	v141 = 0xFF<32>
	v140 = v140 & v141
	v141 = 0xF5<32>
	v142 = v140 < v141
	loc123 = v142
	v140 = loc123
	v142 = v140 == 0<32>
	branch !v142 l00118AEC
	// succ:  l00118AE5 l00118AEC
l00118AE5:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118AEC:
	v140 = loc67
	loc124 = v140
	v140 = loc11
	v141 = loc124
	v140 = v140 - v141
	loc125 = v140
	v140 = loc125
	v141 = 4<32>
	v142 = v140 < v141
	loc126 = v142
	v140 = loc126
	branch !v140 l00118B09
	// succ:  l00118B02 l00118B09
l00118B02:
	v140 = 1<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118B09:
	v140 = loc67
	v141 = 1<32>
	v140 = v140 + v141
	loc127 = v140
	v140 = loc127
	v153 = Mem0[v140:int8]
	v140 = CONVERT(v153, int8, word32)
	loc128 = v140
	v140 = loc67
	v141 = 2<32>
	v140 = v140 + v141
	loc129 = v140
	v140 = loc129
	v154 = Mem0[v140:int8]
	v140 = CONVERT(v154, int8, word32)
	loc130 = v140
	v140 = loc67
	v141 = 3<32>
	v140 = v140 + v141
	loc131 = v140
	v140 = loc131
	v155 = Mem0[v140:int8]
	v140 = CONVERT(v155, int8, word32)
	loc132 = v140
	// succ:  l00118B3A
l00118B3A:
	v140 = loc71
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFFF0<32>
	v140 = v140 - v141
	switch (v140) { l00118B55 l00118BAF l00118BAF l00118BAF l00118B83 }
	// succ:  l00118B55 l00118B83 l00118BAF l00118BAF l00118BAF
l00118B55:
	v140 = loc128
	v141 = 0x70<32>
	v140 = v140 + v141
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	loc9 = v140
	v140 = loc9
	v141 = 0xFF<32>
	v140 = v140 & v141
	v141 = 0x30<32>
	v142 = v140 < v141
	loc134 = v142
	v140 = loc134
	v142 = v140 == 0<32>
	branch !v142 l00118B80
	// succ:  l00118B79 l00118B80
l00118B79:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118B80:
	goto l00118BD9
	// succ:  l00118BD9
l00118B82:
	// succ:  l00118B83
l00118B83:
	v140 = loc128
	v141 = 0xFFFFFFF0<32>
	v140 = v140 & v141
	loc135 = v140
	v140 = loc135
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFF80<32>
	v142 = v140 == v141
	loc136 = v142
	v140 = loc136
	v142 = v140 == 0<32>
	branch !v142 l00118BAC
	// succ:  l00118BA5 l00118BAC
l00118BA5:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118BAC:
	goto l00118BD9
	// succ:  l00118BD9
l00118BAE:
	// succ:  l00118BAF
l00118BAF:
	v140 = loc128
	v141 = 0xFFFFFFC0<32>
	v140 = v140 & v141
	loc137 = v140
	v140 = loc137
	v141 = 0x18<32>
	v140 = v140 << v141
	v141 = 0x18<32>
	v140 = v140 >> v141
	v141 = 0xFFFFFF80<32>
	v142 = v140 == v141
	loc138 = v142
	v140 = loc138
	v142 = v140 == 0<32>
	branch !v142 l00118BD8
	// succ:  l00118BD1 l00118BD8
l00118BD1:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118BD8:
	// succ:  l00118BD8
l00118BD8:
	// succ:  l00118BD9
l00118BD9:
	v140 = loc130
	v141 = 0xFF<32>
	v140 = v140 & v141
	loc139 = v140
	v140 = loc139
	v141 = 0xC0<32>
	v140 = v140 & v141
	loc140 = v140
	v140 = loc140
	v141 = 0x80<32>
	v142 = v140 == v141
	loc141 = v142
	v140 = loc141
	v142 = v140 == 0<32>
	branch !v142 l00118C05
	// succ:  l00118BFE l00118C05
l00118BFE:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118C05:
	v140 = loc132
	v141 = 0xFF<32>
	v140 = v140 & v141
	loc142 = v140
	v140 = loc142
	v141 = 0xC0<32>
	v140 = v140 & v141
	loc143 = v140
	v140 = loc143
	v141 = 0x80<32>
	v142 = v140 == v141
	loc13 = v142
	v140 = loc13
	v142 = v140 == 0<32>
	branch !v142 l00118C2E
	// succ:  l00118C27 l00118C2E
l00118C27:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118C2E:
	v140 = loc69
	loc14 = v140
	v140 = loc66
	v141 = loc14
	v140 = v140 - v141
	loc15 = v140
	v140 = loc15
	v141 = 4<32>
	v142 = v140 < v141
	loc16 = v142
	v140 = loc16
	branch !v140 l00118C4B
	// succ:  l00118C44 l00118C4B
l00118C44:
	v140 = 1<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118C4B:
	v140 = loc72
	v141 = 7<32>
	v140 = v140 & v141
	loc17 = v140
	v140 = loc17
	v141 = 0x12<32>
	v140 = v140 << v141
	loc18 = v140
	v140 = loc128
	v141 = 0xFF<32>
	v140 = v140 & v141
	loc19 = v140
	v140 = loc19
	v141 = 0xC<32>
	v140 = v140 << v141
	loc20 = v140
	v140 = loc20
	v141 = 0x3F000<32>
	v140 = v140 & v141
	loc21 = v140
	v140 = loc21
	v141 = loc18
	v140 = v140 | v141
	loc22 = v140
	v140 = loc139
	v141 = 6<32>
	v140 = v140 << v141
	loc24 = v140
	v140 = loc24
	v141 = 0xFC0<32>
	v140 = v140 & v141
	loc25 = v140
	v140 = loc22
	v141 = loc25
	v140 = v140 | v141
	loc26 = v140
	v140 = loc142
	v141 = 0x3F<32>
	v140 = v140 & v141
	loc27 = v140
	v140 = loc26
	v141 = loc27
	v140 = v140 | v141
	loc28 = v140
	v140 = loc28
	v141 = arg6
	v142 = v140 >u v141
	loc29 = v142
	v140 = loc29
	branch !v140 l00118CB1
	// succ:  l00118CAA l00118CB1
l00118CAA:
	v140 = 2<32>
	loc8 = v140
	goto l00118D85
	// succ:  l00118D85
l00118CB1:
	v140 = loc17
	v141 = 2<32>
	v140 = v140 << v141
	loc30 = v140
	v140 = loc19
	v141 = 4<32>
	v140 = v140 >>u v141
	loc31 = v140
	v140 = loc31
	v141 = 3<32>
	v140 = v140 & v141
	loc32 = v140
	v140 = loc32
	v141 = loc30
	v140 = v140 | v141
	loc33 = v140
	v140 = loc33
	v141 = 6<32>
	v140 = v140 << v141
	loc35 = v140
	v140 = loc35
	v141 = 0x3FC0<32>
	v140 = v140 + v141
	loc36 = v140
	v140 = loc19
	v141 = 2<32>
	v140 = v140 << v141
	loc37 = v140
	v140 = loc37
	v141 = 0x3C<32>
	v140 = v140 & v141
	loc38 = v140
	v140 = loc139
	v141 = 4<32>
	v140 = v140 >>u v141
	loc39 = v140
	v140 = loc39
	v141 = 3<32>
	v140 = v140 & v141
	loc40 = v140
	v140 = loc38
	v141 = loc40
	v140 = v140 | v141
	loc41 = v140
	v140 = loc41
	v141 = loc36
	v140 = v140 | v141
	loc42 = v140
	v140 = loc42
	v141 = 0xD800<32>
	v140 = v140 | v141
	loc43 = v140
	v140 = loc43
	v141 = 0xFFFF<32>
	v140 = v140 & v141
	loc44 = v140
	v140 = loc69
	v141 = loc44
	v156 = SLICE(v141, word16, 0)
	Mem0[v140:word16] = v156
	v140 = loc24
	v141 = 0x3C0<32>
	v140 = v140 & v141
	loc46 = v140
	v140 = loc27
	v141 = loc46
	v140 = v140 | v141
	loc47 = v140
	v140 = loc47
	v141 = 0xDC00<32>
	v140 = v140 | v141
	loc48 = v140
	v140 = loc48
	v141 = 0xFFFF<32>
	v140 = v140 & v141
	loc49 = v140
	v140 = loc69
	v141 = 2<32>
	v140 = v140 + v141
	loc50 = v140
	v140 = arg5
	v141 = loc50
	Mem0[v140:word32] = v141
	v140 = loc50
	v141 = loc49
	v157 = SLICE(v141, word16, 0)
	Mem0[v140:word16] = v157
	v140 = arg2
	v140 = Mem0[v140:word32]
	loc51 = v140
	v140 = loc51
	v141 = 4<32>
	v140 = v140 + v141
	loc52 = v140
	v140 = arg2
	v141 = loc52
	Mem0[v140:word32] = v141
	// succ:  l00118D6C
l00118D6C:
	// succ:  l00118D6D
l00118D6D:
	v140 = arg5
	v140 = Mem0[v140:word32]
	loc53 = v140
	v140 = loc53
	v141 = 2<32>
	v140 = v140 + v141
	loc54 = v140
	v140 = arg5
	v141 = loc54
	Mem0[v140:word32] = v141
	goto l00118809
	// succ:  l00118809
l00118D85:
	v140 = loc144
	v141 = 0x29<32>
	v142 = v140 == v141
	branch !v142 l00118D9B
	// succ:  l00118D8F l00118D9B
l00118D8F:
	v140 = loc68
	v141 = 1<32>
	v140 = v140 & v141
	loc55 = v140
	v140 = loc55
	loc8 = v140
	// succ:  l00118D9B
l00118D9B:
	v140 = loc8
	return v140
	// succ:  fn00118734_exit
l00118D9E:
	return v140
	// succ:  fn00118734_exit
fn00118734_exit:


// fn00118DA0
// Return size: 0
word32 fn00118DA0(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00118DA0_entry:
	// succ:  l00118DA0
l00118DA0:
	v137 = Mem0[0x00140030<p32>:word32]
	loc142 = v137
	v137 = arg2
	v138 = arg0
	Mem0[v137:word32] = v138
	v137 = arg5
	v138 = arg3
	Mem0[v137:word32] = v138
	v137 = arg7
	v138 = 2<32>
	v137 = v137 & v138
	loc119 = v137
	v137 = loc119
	v138 = 0<32>
	v139 = v137 == v138
	loc130 = v139
	v137 = arg4
	loc10 = v137
	v137 = loc130
	branch !v137 l00118DD3
	// succ:  l00118DCD l00118DD3
l00118DCD:
	v137 = 4<32>
	loc141 = v137
	goto l00118E43
	// succ:  l00118E43
l00118DD3:
	v137 = arg3
	loc11 = v137
	v137 = loc10
	v138 = loc11
	v137 = v137 - v138
	loc22 = v137
	v137 = loc22
	v138 = 3<32>
	v139 = v137 < v138
	loc33 = v139
	v137 = loc33
	branch !v137 l00118DEE
	// succ:  l00118DE9 l00118DEE
l00118DE9:
	v137 = 1<32>
	loc8 = v137
	goto l00118E42
	// succ:  l00118E42
l00118DEE:
	v137 = arg3
	v138 = 1<32>
	v137 = v137 + v138
	loc44 = v137
	v137 = arg5
	v138 = loc44
	Mem0[v137:word32] = v138
	v137 = arg3
	v138 = 0xFFFFFFEF<32>
	v140 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v140
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc53 = v137
	v137 = loc53
	v138 = 1<32>
	v137 = v137 + v138
	loc54 = v137
	v137 = arg5
	v138 = loc54
	Mem0[v137:word32] = v138
	v137 = loc53
	v138 = 0xFFFFFFBB<32>
	v141 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v141
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc55 = v137
	v137 = loc55
	v138 = 1<32>
	v137 = v137 + v138
	loc56 = v137
	v137 = arg5
	v138 = loc56
	Mem0[v137:word32] = v138
	v137 = loc55
	v138 = 0xFFFFFFBF<32>
	v142 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v142
	v137 = 4<32>
	loc141 = v137
	// succ:  l00118E42
l00118E42:
	// succ:  l00118E43
l00118E43:
	v137 = loc141
	v138 = 4<32>
	v139 = v137 == v138
	branch !v139 l00119351
	// succ:  l00118E4E l00119351
l00118E4E:
	v137 = arg1
	loc57 = v137
	v137 = arg2
	v137 = Mem0[v137:word32]
	loc9 = v137
	v137 = loc9
	loc59 = v137
	v137 = loc59
	v138 = arg1
	v139 = v137 <u v138
	loc58 = v139
	v137 = loc58
	v139 = v137 == 0<32>
	branch !v139 l00118E72
	// succ:  l00118E6B l00118E72
l00118E6B:
	v137 = 0<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l00118E72:
	v137 = loc59
	v143 = Mem0[v137:int16]
	v137 = CONVERT(v143, int16, word32)
	loc60 = v137
	v137 = loc60
	v138 = 0xFFFF<32>
	v137 = v137 & v138
	loc61 = v137
	v137 = loc61
	v138 = arg6
	v139 = v137 >u v138
	loc62 = v139
	v137 = loc62
	branch !v137 l00118E94
	// succ:  l00118E8D l00118E94
l00118E8D:
	v137 = 2<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l00118E94:
	v137 = loc60
	v138 = 0xFFFF<32>
	v137 = v137 & v138
	v138 = 0x80<32>
	v139 = v137 < v138
	loc63 = v139
	// succ:  l00118EA1
l00118EA1:
	v137 = loc63
	branch !v137 l00118EE9
	// succ:  l00118EA7 l00118EE9
l00118EA7:
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc64 = v137
	v137 = loc64
	loc65 = v137
	v137 = loc10
	v138 = loc65
	v137 = v137 - v138
	loc66 = v137
	v137 = loc66
	v138 = 1<32>
	v139 = v137 < v138
	loc67 = v139
	v137 = loc67
	branch !v137 l00118ECB
	// succ:  l00118EC4 l00118ECB
l00118EC4:
	v137 = 1<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l00118ECB:
	v137 = loc60
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc68 = v137
	v137 = loc64
	v138 = 1<32>
	v137 = v137 + v138
	loc69 = v137
	v137 = arg5
	v138 = loc69
	Mem0[v137:word32] = v138
	v137 = loc64
	v138 = loc68
	v144 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v144
	goto l00119332
	// succ:  l00119332
l00118EE9:
	v137 = loc60
	v138 = 0xFFFF<32>
	v137 = v137 & v138
	v138 = 0x800<32>
	v139 = v137 < v138
	loc70 = v139
	v137 = loc70
	branch !v137 l00118F80
	// succ:  l00118EFA l00118F80
l00118EFA:
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc71 = v137
	v137 = loc71
	loc72 = v137
	v137 = loc10
	v138 = loc72
	v137 = v137 - v138
	loc73 = v137
	v137 = loc73
	v138 = 2<32>
	v139 = v137 < v138
	loc74 = v139
	v137 = loc74
	branch !v137 l00118F1E
	// succ:  l00118F17 l00118F1E
l00118F17:
	v137 = 1<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l00118F1E:
	v137 = loc61
	v138 = 6<32>
	v137 = v137 >>u v138
	loc75 = v137
	v137 = loc75
	v138 = 0xC0<32>
	v137 = v137 | v138
	loc76 = v137
	v137 = loc76
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc77 = v137
	v137 = loc71
	v138 = 1<32>
	v137 = v137 + v138
	loc78 = v137
	v137 = arg5
	v138 = loc78
	Mem0[v137:word32] = v138
	v137 = loc71
	v138 = loc77
	v145 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v145
	v137 = loc61
	v138 = 0x3F<32>
	v137 = v137 & v138
	loc79 = v137
	v137 = loc79
	v138 = 0x80<32>
	v137 = v137 | v138
	loc80 = v137
	v137 = loc80
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc81 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc82 = v137
	v137 = loc82
	v138 = 1<32>
	v137 = v137 + v138
	loc83 = v137
	v137 = arg5
	v138 = loc83
	Mem0[v137:word32] = v138
	v137 = loc82
	v138 = loc81
	v146 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v146
	goto l00119333
	// succ:  l00119333
l00118F80:
	v137 = loc60
	v138 = 0xFFFF<32>
	v137 = v137 & v138
	v138 = 0xD800<32>
	v139 = v137 < v138
	loc84 = v139
	v137 = loc84
	branch !v137 l00119052
	// succ:  l00118F92 l00119052
l00118F92:
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc85 = v137
	v137 = loc85
	loc86 = v137
	v137 = loc10
	v138 = loc86
	v137 = v137 - v138
	loc87 = v137
	v137 = loc87
	v138 = 3<32>
	v139 = v137 < v138
	loc88 = v139
	v137 = loc88
	branch !v137 l00118FB6
	// succ:  l00118FAF l00118FB6
l00118FAF:
	v137 = 1<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l00118FB6:
	v137 = loc61
	v138 = 0xC<32>
	v137 = v137 >>u v138
	loc89 = v137
	v137 = loc89
	v138 = 0xE0<32>
	v137 = v137 | v138
	loc90 = v137
	v137 = loc90
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc91 = v137
	v137 = loc85
	v138 = 1<32>
	v137 = v137 + v138
	loc92 = v137
	v137 = arg5
	v138 = loc92
	Mem0[v137:word32] = v138
	v137 = loc85
	v138 = loc91
	v147 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v147
	v137 = loc61
	v138 = 6<32>
	v137 = v137 >>u v138
	loc93 = v137
	v137 = loc93
	v138 = 0x3F<32>
	v137 = v137 & v138
	loc94 = v137
	v137 = loc94
	v138 = 0x80<32>
	v137 = v137 | v138
	loc95 = v137
	v137 = loc95
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc96 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc97 = v137
	v137 = loc97
	v138 = 1<32>
	v137 = v137 + v138
	loc98 = v137
	v137 = arg5
	v138 = loc98
	Mem0[v137:word32] = v138
	v137 = loc97
	v138 = loc96
	v148 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v148
	v137 = loc61
	v138 = 0x3F<32>
	v137 = v137 & v138
	loc99 = v137
	v137 = loc99
	v138 = 0x80<32>
	v137 = v137 | v138
	loc100 = v137
	v137 = loc100
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc101 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc102 = v137
	v137 = loc102
	v138 = 1<32>
	v137 = v137 + v138
	loc103 = v137
	v137 = arg5
	v138 = loc103
	Mem0[v137:word32] = v138
	v137 = loc102
	v138 = loc101
	v149 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v149
	goto l00119333
	// succ:  l00119333
l00119052:
	v137 = loc60
	v138 = 0xFFFF<32>
	v137 = v137 & v138
	v138 = 0xDC00<32>
	v139 = v137 < v138
	loc104 = v139
	v137 = loc104
	v139 = v137 == 0<32>
	branch !v139 l0011913E
	// succ:  l00119065 l0011913E
l00119065:
	v137 = loc60
	v138 = 0xFFFF<32>
	v137 = v137 & v138
	v138 = 0xE000<32>
	v139 = v137 < v138
	loc29 = v139
	v137 = loc29
	branch !v137 l0011907E
	// succ:  l00119077 l0011907E
l00119077:
	v137 = 2<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l0011907E:
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc30 = v137
	v137 = loc30
	loc31 = v137
	v137 = loc10
	v138 = loc31
	v137 = v137 - v138
	loc32 = v137
	v137 = loc32
	v138 = 3<32>
	v139 = v137 < v138
	loc34 = v139
	v137 = loc34
	branch !v137 l001190A2
	// succ:  l0011909B l001190A2
l0011909B:
	v137 = 1<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l001190A2:
	v137 = loc61
	v138 = 0xC<32>
	v137 = v137 >>u v138
	loc35 = v137
	v137 = loc35
	v138 = 0xE0<32>
	v137 = v137 | v138
	loc36 = v137
	v137 = loc36
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc37 = v137
	v137 = loc30
	v138 = 1<32>
	v137 = v137 + v138
	loc38 = v137
	v137 = arg5
	v138 = loc38
	Mem0[v137:word32] = v138
	v137 = loc30
	v138 = loc37
	v150 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v150
	v137 = loc61
	v138 = 6<32>
	v137 = v137 >>u v138
	loc39 = v137
	v137 = loc39
	v138 = 0x3F<32>
	v137 = v137 & v138
	loc40 = v137
	v137 = loc40
	v138 = 0x80<32>
	v137 = v137 | v138
	loc41 = v137
	v137 = loc41
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc42 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc43 = v137
	v137 = loc43
	v138 = 1<32>
	v137 = v137 + v138
	loc45 = v137
	v137 = arg5
	v138 = loc45
	Mem0[v137:word32] = v138
	v137 = loc43
	v138 = loc42
	v151 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v151
	v137 = loc61
	v138 = 0x3F<32>
	v137 = v137 & v138
	loc46 = v137
	v137 = loc46
	v138 = 0x80<32>
	v137 = v137 | v138
	loc47 = v137
	v137 = loc47
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc48 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc49 = v137
	v137 = loc49
	v138 = 1<32>
	v137 = v137 + v138
	loc50 = v137
	v137 = arg5
	v138 = loc50
	Mem0[v137:word32] = v138
	v137 = loc49
	v138 = loc48
	v152 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v152
	goto l00119333
	// succ:  l00119333
l0011913E:
	v137 = loc59
	loc105 = v137
	v137 = loc57
	v138 = loc105
	v137 = v137 - v138
	loc106 = v137
	v137 = loc106
	v138 = 4<32>
	v139 = v137 < v138
	loc107 = v139
	v137 = loc107
	branch !v137 l0011915B
	// succ:  l00119154 l0011915B
l00119154:
	v137 = 1<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l0011915B:
	v137 = loc59
	v138 = 2<32>
	v137 = v137 + v138
	loc108 = v137
	v137 = loc108
	v153 = Mem0[v137:int16]
	v137 = CONVERT(v153, int16, word32)
	loc109 = v137
	v137 = loc109
	v138 = 0xFFFF<32>
	v137 = v137 & v138
	loc110 = v137
	v137 = loc110
	v138 = 0xFC00<32>
	v137 = v137 & v138
	loc111 = v137
	v137 = loc111
	v138 = 0xDC00<32>
	v139 = v137 == v138
	loc112 = v139
	v137 = loc112
	v139 = v137 == 0<32>
	branch !v139 l00119190
	// succ:  l00119189 l00119190
l00119189:
	v137 = 2<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l00119190:
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc113 = v137
	v137 = loc10
	v138 = loc113
	v137 = v137 - v138
	loc114 = v137
	v137 = loc114
	v138 = 4<32>
	v139 = v137 < v138
	loc115 = v139
	v137 = loc115
	branch !v137 l001191B0
	// succ:  l001191A9 l001191B0
l001191A9:
	v137 = 1<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l001191B0:
	v137 = loc61
	v138 = 0x3C0<32>
	v137 = v137 & v138
	loc116 = v137
	v137 = loc116
	v138 = 0xA<32>
	v137 = v137 << v138
	loc117 = v137
	v137 = loc117
	v138 = 0x10000<32>
	v137 = v137 + v138
	loc118 = v137
	v137 = loc61
	v138 = 0xA<32>
	v137 = v137 << v138
	loc120 = v137
	v137 = loc120
	v138 = 0xFC00<32>
	v137 = v137 & v138
	loc121 = v137
	v137 = loc118
	v138 = loc121
	v137 = v137 | v138
	loc122 = v137
	v137 = loc110
	v138 = 0x3FF<32>
	v137 = v137 & v138
	loc123 = v137
	v137 = loc122
	v138 = loc123
	v137 = v137 | v138
	loc124 = v137
	v137 = loc124
	v138 = arg6
	v139 = v137 >u v138
	loc125 = v139
	v137 = loc125
	branch !v137 l00119200
	// succ:  l001191F9 l00119200
l001191F9:
	v137 = 2<32>
	loc8 = v137
	goto l00119351
	// succ:  l00119351
l00119200:
	v137 = arg2
	v138 = loc108
	Mem0[v137:word32] = v138
	v137 = loc116
	v138 = 6<32>
	v137 = v137 >>u v138
	loc126 = v137
	v137 = loc126
	v138 = 1<32>
	v137 = v137 + v138
	loc127 = v137
	v137 = loc127
	v138 = 2<32>
	v137 = v137 >>u v138
	loc128 = v137
	v137 = loc128
	v138 = 0xF0<32>
	v137 = v137 | v138
	loc129 = v137
	v137 = loc129
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc131 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc132 = v137
	v137 = loc132
	v138 = 1<32>
	v137 = v137 + v138
	loc133 = v137
	v137 = arg5
	v138 = loc133
	Mem0[v137:word32] = v138
	v137 = loc132
	v138 = loc131
	v154 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v154
	v137 = loc127
	v138 = 4<32>
	v137 = v137 << v138
	loc134 = v137
	v137 = loc134
	v138 = 0x30<32>
	v137 = v137 & v138
	loc135 = v137
	v137 = loc61
	v138 = 2<32>
	v137 = v137 >>u v138
	loc136 = v137
	v137 = loc136
	v138 = 0xF<32>
	v137 = v137 & v138
	loc137 = v137
	v137 = loc137
	v138 = loc135
	v137 = v137 | v138
	loc138 = v137
	v137 = loc138
	v138 = 0x80<32>
	v137 = v137 | v138
	loc139 = v137
	v137 = loc139
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc140 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc12 = v137
	v137 = loc12
	v138 = 1<32>
	v137 = v137 + v138
	loc13 = v137
	v137 = arg5
	v138 = loc13
	Mem0[v137:word32] = v138
	v137 = loc12
	v138 = loc140
	v155 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v155
	v137 = loc61
	v138 = 4<32>
	v137 = v137 << v138
	loc14 = v137
	v137 = loc14
	v138 = 0x30<32>
	v137 = v137 & v138
	loc15 = v137
	v137 = loc110
	v138 = 6<32>
	v137 = v137 >>u v138
	loc16 = v137
	v137 = loc16
	v138 = 0xF<32>
	v137 = v137 & v138
	loc17 = v137
	v137 = loc15
	v138 = loc17
	v137 = v137 | v138
	loc18 = v137
	v137 = loc18
	v138 = 0x80<32>
	v137 = v137 | v138
	loc19 = v137
	v137 = loc19
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc20 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc21 = v137
	v137 = loc21
	v138 = 1<32>
	v137 = v137 + v138
	loc23 = v137
	v137 = arg5
	v138 = loc23
	Mem0[v137:word32] = v138
	v137 = loc21
	v138 = loc20
	v156 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v156
	v137 = loc110
	v138 = 0x3F<32>
	v137 = v137 & v138
	loc24 = v137
	v137 = loc24
	v138 = 0x80<32>
	v137 = v137 | v138
	loc25 = v137
	v137 = loc25
	v138 = 0xFF<32>
	v137 = v137 & v138
	loc26 = v137
	v137 = arg5
	v137 = Mem0[v137:word32]
	loc27 = v137
	v137 = loc27
	v138 = 1<32>
	v137 = v137 + v138
	loc28 = v137
	v137 = arg5
	v138 = loc28
	Mem0[v137:word32] = v138
	v137 = loc27
	v138 = loc26
	v157 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v157
	// succ:  l00119332
l00119332:
	// succ:  l00119333
l00119333:
	v137 = arg2
	v137 = Mem0[v137:word32]
	loc51 = v137
	v137 = loc51
	v138 = 2<32>
	v137 = v137 + v138
	loc52 = v137
	v137 = arg2
	v138 = loc52
	Mem0[v137:word32] = v138
	v137 = loc52
	loc59 = v137
	goto l00118E4E
	// succ:  l00118E4E
l00119351:
	// succ:  l00119351
l00119351:
	v137 = loc8
	return v137
	// succ:  fn00118DA0_exit
l00119355:
	return v137
	// succ:  fn00118DA0_exit
fn00118DA0_exit:


// fn00119357
// Return size: 0
void fn00119357(word32 arg0)
fn00119357_entry:
	// succ:  l00119357
l00119357:
	v18 = Mem0[0x00140030<p32>:word32]
	loc16 = v18
	v18 = arg0
	v19 = 0x24A8<32>
	Mem0[v18:word32] = v19
	v18 = arg0
	v19 = 8<32>
	v18 = v18 + v19
	loc2 = v18
	v18 = arg0
	v19 = 0xC<32>
	v18 = v18 + v19
	loc7 = v18
	v18 = 0<32>
	loc1 = v18
	// succ:  l0011937A
l0011937A:
	v18 = loc7
	v18 = Mem0[v18:word32]
	loc8 = v18
	v18 = loc2
	v18 = Mem0[v18:word32]
	loc9 = v18
	v18 = loc8
	v19 = loc9
	v18 = v18 - v19
	loc10 = v18
	v18 = loc10
	v19 = 2<32>
	v18 = v18 >> v19
	loc11 = v18
	v18 = loc1
	v19 = loc11
	v20 = v18 <u v19
	loc12 = v20
	v18 = loc12
	v20 = v18 == 0<32>
	branch !v20 l001193A7
	// succ:  l001193A4 l001193A7
l001193A4:
	goto l001193DC
	// succ:  l001193DC
l001193A7:
	v18 = loc9
	loc14 = v18
	v18 = loc14
	v19 = loc1
	v21 = 2<32>
	v19 = v19 << v21
	v18 = v18 + v19
	loc3 = v18
	v18 = loc3
	v18 = Mem0[v18:word32]
	loc4 = v18
	v18 = loc4
	v19 = 0<32>
	v20 = v18 == v19
	loc5 = v20
	v18 = loc5
	v20 = v18 == 0<32>
	branch !v20 l001193CF
	// succ:  l001193C8 l001193CF
l001193C8:
	v18 = loc4
	v18 = fn0011B43F(v18)
	// succ:  l001193CF
l001193CF:
	v18 = loc1
	v19 = 1<32>
	v18 = v18 + v19
	loc6 = v18
	v18 = loc6
	loc1 = v18
	goto l00119357
	// succ:  l00119357
l001193DC:
	v18 = arg0
	v19 = 0x90<32>
	v18 = v18 + v19
	loc13 = v18
	v18 = loc13
	fn0011BAF7(v18)
	v18 = loc2
	fn00119406(v18)
	return
	// succ:  fn00119357_exit
l001193F1:
	return
	// succ:  fn00119357_exit
fn00119357_exit:


// fn001193F3
// Return size: 0
void fn001193F3(word32 arg0)
fn001193F3_entry:
	// succ:  l001193F3
l001193F3:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn00119357(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn001193F3_exit
l00119404:
	return
	// succ:  fn001193F3_exit
fn001193F3_exit:


// fn00119406
// Return size: 0
void fn00119406(word32 arg0)
fn00119406_entry:
	// succ:  l00119406
l00119406:
	v14 = Mem0[0x00140030<p32>:word32]
	loc12 = v14
	v14 = arg0
	v14 = Mem0[v14:word32]
	loc2 = v14
	v14 = loc2
	v15 = 0<32>
	v16 = v14 == v15
	loc3 = v16
	// succ:  l0011941A
l0011941A:
	v14 = loc3
	v16 = v14 == 0<32>
	branch !v16 l00119488
	// succ:  l00119421 l00119488
l00119421:
	v14 = arg0
	v15 = 4<32>
	v14 = v14 + v15
	loc4 = v14
	v14 = loc4
	v14 = Mem0[v14:word32]
	loc1 = v14
	v14 = loc1
	loc6 = v14
	// succ:  l00119435
l00119435:
	v14 = loc6
	v15 = loc2
	v16 = v14 == v15
	loc5 = v16
	v14 = loc5
	branch !v14 l00119445
	// succ:  l00119442 l00119445
l00119442:
	goto l00119459
	// succ:  l00119459
l00119445:
	v14 = loc6
	v15 = 0xFFFFFFFC<32>
	v14 = v14 + v15
	loc7 = v14
	v14 = loc4
	v15 = loc7
	Mem0[v14:word32] = v15
	v14 = loc7
	loc6 = v14
	goto l00119421
	// succ:  l00119421
l00119459:
	v14 = arg0
	v15 = 0x10<32>
	v14 = v14 + v15
	loc8 = v14
	v14 = loc8
	v15 = loc2
	v16 = v14 == v15
	loc9 = v16
	v14 = loc9
	branch !v14 l0011947F
	// succ:  l0011946D l0011947F
l0011946D:
	v14 = arg0
	v15 = 0x80<32>
	v14 = v14 + v15
	loc10 = v14
	v14 = loc10
	v15 = 0<32>
	v17 = SLICE(v15, byte, 0)
	Mem0[v14:byte] = v17
	goto l00119488
	// succ:  l00119488
l0011947F:
	v14 = loc2
	fn0011B709(v14)
	goto l00119488
	// succ:  l00119488
l00119486:
	// succ:  l00119488
l00119488:
	// succ:  l00119488
l00119488:
	return
	// succ:  fn00119406_exit
l0011948A:
	return
	// succ:  fn00119406_exit
fn00119406_exit:


// fn0011948C
// Return size: 0
void fn0011948C(word32 arg0)
fn0011948C_entry:
	// succ:  l0011948C
l0011948C:
	v10 = Mem0[0x00140030<p32>:word32]
	loc8 = v10
	v10 = arg0
	v11 = 0x24BC<32>
	Mem0[v10:word32] = v11
	v10 = arg0
	v11 = 8<32>
	v10 = v10 + v11
	loc1 = v10
	v10 = loc1
	v10 = Mem0[v10:word32]
	loc2 = v10
	v10 = loc2
	v11 = 0<32>
	v12 = v10 == v11
	loc3 = v12
	v10 = loc3
	v12 = v10 == 0<32>
	branch !v12 l001194DC
	// succ:  l001194B5 l001194DC
l001194B5:
	v10 = arg0
	v11 = 0xC<32>
	v10 = v10 + v11
	loc4 = v10
	v10 = loc4
	v13 = Mem0[v10:int8]
	v10 = CONVERT(v13, int8, word32)
	loc5 = v10
	v10 = loc5
	v11 = 0x18<32>
	v10 = v10 << v11
	v11 = 0x18<32>
	v10 = v10 >> v11
	v11 = 0<32>
	v12 = v10 == v11
	loc6 = v12
	v10 = loc6
	v12 = v10 == 0<32>
	branch !v12 l001194DB
	// succ:  l001194D5 l001194DB
l001194D5:
	v10 = loc2
	fn0011B717(v10)
	// succ:  l001194DB
l001194DB:
	// succ:  l001194DC
l001194DC:
	return
	// succ:  fn0011948C_exit
l001194DD:
	return
	// succ:  fn0011948C_exit
fn0011948C_exit:


// fn001194DF
// Return size: 0
void fn001194DF(word32 arg0)
fn001194DF_entry:
	// succ:  l001194DF
l001194DF:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011948C(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn001194DF_exit
l001194F0:
	return
	// succ:  fn001194DF_exit
fn001194DF_exit:


// fn001194F2
// Return size: 0
word32 fn001194F2(word32 arg0, word32 arg1)
fn001194F2_entry:
	// succ:  l001194F2
l001194F2:
	v11 = Mem0[0x00140030<p32>:word32]
	loc10 = v11
	v11 = arg1
	v12 = 0x18<32>
	v11 = v11 << v12
	v12 = 0x18<32>
	v11 = v11 >> v12
	v12 = 0xFFFFFFFF<32>
	v13 = v11 > v12
	loc8 = v13
	v11 = loc8
	branch !v11 l00119534
	// succ:  l00119509 l00119534
l00119509:
	v11 = arg1
	v12 = 0xFF<32>
	v11 = v11 & v12
	loc2 = v11
	v11 = fn001197B3()
	loc3 = v11
	v11 = loc3
	v12 = loc2
	v14 = 2<32>
	v12 = v12 << v14
	v11 = v11 + v12
	loc4 = v11
	v11 = loc4
	v11 = Mem0[v11:word32]
	loc5 = v11
	v11 = loc5
	v12 = 0xFF<32>
	v11 = v11 & v12
	loc6 = v11
	v11 = loc6
	loc7 = v11
	goto l00119538
	// succ:  l00119538
l00119534:
	v11 = arg1
	loc7 = v11
	// succ:  l00119538
l00119538:
	v11 = loc7
	return v11
	// succ:  fn001194F2_exit
l0011953C:
	return v11
	// succ:  fn001194F2_exit
fn001194F2_exit:


// fn0011953E
// Return size: 0
word32 fn0011953E(word32 arg0, word32 arg1, word32 arg2)
fn0011953E_entry:
	// succ:  l0011953E
l0011953E:
	v15 = Mem0[0x00140030<p32>:word32]
	loc15 = v15
	v15 = arg1
	loc3 = v15
	// succ:  l0011954A
l0011954A:
	v15 = loc3
	v16 = arg2
	v17 = v15 == v16
	loc6 = v17
	v15 = loc6
	branch !v15 l0011955A
	// succ:  l00119557 l0011955A
l00119557:
	goto l001195B8
	// succ:  l001195B8
l0011955A:
	v15 = loc3
	v18 = Mem0[v15:int8]
	v15 = CONVERT(v18, int8, word32)
	loc7 = v15
	v15 = loc7
	v16 = 0x18<32>
	v15 = v15 << v16
	v16 = 0x18<32>
	v15 = v15 >> v16
	v16 = 0xFFFFFFFF<32>
	v17 = v15 > v16
	loc13 = v17
	v15 = loc13
	branch !v15 l0011959F
	// succ:  l00119572 l0011959F
l00119572:
	v15 = loc7
	v16 = 0x18<32>
	v15 = v15 << v16
	v16 = 0x18<32>
	v15 = v15 >> v16
	loc8 = v15
	v15 = fn001197B3()
	loc9 = v15
	v15 = loc9
	v16 = loc8
	v19 = 2<32>
	v16 = v16 << v19
	v15 = v15 + v16
	loc10 = v15
	v15 = loc10
	v15 = Mem0[v15:word32]
	loc11 = v15
	v15 = loc11
	v16 = 0xFF<32>
	v15 = v15 & v16
	loc12 = v15
	v15 = loc12
	loc4 = v15
	goto l001195A3
	// succ:  l001195A3
l0011959F:
	v15 = loc7
	loc4 = v15
	// succ:  l001195A3
l001195A3:
	v15 = loc3
	v16 = loc4
	v20 = SLICE(v16, byte, 0)
	Mem0[v15:byte] = v20
	v15 = loc3
	v16 = 1<32>
	v15 = v15 + v16
	loc5 = v15
	v15 = loc5
	loc3 = v15
	goto l0011953E
	// succ:  l0011953E
l001195B8:
	v15 = arg2
	return v15
	// succ:  fn0011953E_exit
l001195BD:
	return v15
	// succ:  fn0011953E_exit
fn0011953E_exit:


// fn001195BF
// Return size: 0
word32 fn001195BF(word32 arg0, word32 arg1)
fn001195BF_entry:
	// succ:  l001195BF
l001195BF:
	v11 = Mem0[0x00140030<p32>:word32]
	loc10 = v11
	v11 = arg1
	v12 = 0x18<32>
	v11 = v11 << v12
	v12 = 0x18<32>
	v11 = v11 >> v12
	v12 = 0xFFFFFFFF<32>
	v13 = v11 > v12
	loc8 = v13
	v11 = loc8
	branch !v11 l00119603
	// succ:  l001195D6 l00119603
l001195D6:
	v11 = arg1
	v12 = 0x18<32>
	v11 = v11 << v12
	v12 = 0x18<32>
	v11 = v11 >> v12
	loc2 = v11
	v11 = fn00119770()
	loc3 = v11
	v11 = loc3
	v12 = loc2
	v14 = 2<32>
	v12 = v12 << v14
	v11 = v11 + v12
	loc4 = v11
	v11 = loc4
	v11 = Mem0[v11:word32]
	loc5 = v11
	v11 = loc5
	v12 = 0xFF<32>
	v11 = v11 & v12
	loc6 = v11
	v11 = loc6
	loc7 = v11
	goto l00119607
	// succ:  l00119607
l00119603:
	v11 = arg1
	loc7 = v11
	// succ:  l00119607
l00119607:
	v11 = loc7
	return v11
	// succ:  fn001195BF_exit
l0011960B:
	return v11
	// succ:  fn001195BF_exit
fn001195BF_exit:


// fn0011960D
// Return size: 0
word32 fn0011960D(word32 arg0, word32 arg1, word32 arg2)
fn0011960D_entry:
	// succ:  l0011960D
l0011960D:
	v15 = Mem0[0x00140030<p32>:word32]
	loc15 = v15
	v15 = arg1
	loc3 = v15
	// succ:  l00119619
l00119619:
	v15 = loc3
	v16 = arg2
	v17 = v15 == v16
	loc6 = v17
	v15 = loc6
	branch !v15 l00119629
	// succ:  l00119626 l00119629
l00119626:
	goto l00119687
	// succ:  l00119687
l00119629:
	v15 = loc3
	v18 = Mem0[v15:int8]
	v15 = CONVERT(v18, int8, word32)
	loc7 = v15
	v15 = loc7
	v16 = 0x18<32>
	v15 = v15 << v16
	v16 = 0x18<32>
	v15 = v15 >> v16
	v16 = 0xFFFFFFFF<32>
	v17 = v15 > v16
	loc13 = v17
	v15 = loc13
	branch !v15 l0011966E
	// succ:  l00119641 l0011966E
l00119641:
	v15 = loc7
	v16 = 0x18<32>
	v15 = v15 << v16
	v16 = 0x18<32>
	v15 = v15 >> v16
	loc8 = v15
	v15 = fn00119770()
	loc9 = v15
	v15 = loc9
	v16 = loc8
	v19 = 2<32>
	v16 = v16 << v19
	v15 = v15 + v16
	loc10 = v15
	v15 = loc10
	v15 = Mem0[v15:word32]
	loc11 = v15
	v15 = loc11
	v16 = 0xFF<32>
	v15 = v15 & v16
	loc12 = v15
	v15 = loc12
	loc4 = v15
	goto l00119672
	// succ:  l00119672
l0011966E:
	v15 = loc7
	loc4 = v15
	// succ:  l00119672
l00119672:
	v15 = loc3
	v16 = loc4
	v20 = SLICE(v16, byte, 0)
	Mem0[v15:byte] = v20
	v15 = loc3
	v16 = 1<32>
	v15 = v15 + v16
	loc5 = v15
	v15 = loc5
	loc3 = v15
	goto l0011960D
	// succ:  l0011960D
l00119687:
	v15 = arg2
	return v15
	// succ:  fn0011960D_exit
l0011968C:
	return v15
	// succ:  fn0011960D_exit
fn0011960D_exit:


// fn0011968E
// Return size: 0
word32 fn0011968E(word32 arg0, word32 arg1)
fn0011968E_entry:
	// succ:  l0011968E
l0011968E:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v4 = arg1
	return v4
	// succ:  fn0011968E_exit
l00119697:
	return v4
	// succ:  fn0011968E_exit
fn0011968E_exit:


// fn00119699
// Return size: 0
word32 fn00119699(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn00119699_entry:
	// succ:  l00119699
l00119699:
	v10 = Mem0[0x00140030<p32>:word32]
	loc11 = v10
	v10 = arg3
	loc4 = v10
	v10 = arg1
	loc5 = v10
	// succ:  l001196A9
l001196A9:
	v10 = loc5
	v11 = arg2
	v12 = v10 == v11
	loc6 = v12
	v10 = loc6
	branch !v10 l001196B9
	// succ:  l001196B6 l001196B9
l001196B6:
	goto l001196DF
	// succ:  l001196DF
l001196B9:
	v10 = loc5
	v13 = Mem0[v10:int8]
	v10 = CONVERT(v13, int8, word32)
	loc7 = v10
	v10 = loc4
	v11 = loc7
	v14 = SLICE(v11, byte, 0)
	Mem0[v10:byte] = v14
	v10 = loc5
	v11 = 1<32>
	v10 = v10 + v11
	loc8 = v10
	v10 = loc4
	v11 = 1<32>
	v10 = v10 + v11
	loc9 = v10
	v10 = loc9
	loc4 = v10
	v10 = loc8
	loc5 = v10
	goto l00119699
	// succ:  l00119699
l001196DF:
	v10 = arg2
	return v10
	// succ:  fn00119699_exit
l001196E4:
	return v10
	// succ:  fn00119699_exit
fn00119699_exit:


// fn001196E6
// Return size: 0
word32 fn001196E6(word32 arg0, word32 arg1, word32 arg2)
fn001196E6_entry:
	// succ:  l001196E6
l001196E6:
	v6 = Mem0[0x00140030<p32>:word32]
	loc6 = v6
	v6 = arg1
	v7 = 0x18<32>
	v6 = v6 << v7
	v7 = 0x18<32>
	v6 = v6 >> v7
	v7 = 0xFFFFFFFF<32>
	v8 = v6 > v7
	loc4 = v8
	v6 = loc4
	branch !v6 l00119700
	// succ:  l001196FD l00119700
l001196FD:
	v6 = arg1
	goto l00119702
	// succ:  l00119702
l00119700:
	v6 = arg2
	// succ:  l00119702
l00119702:
	loc3 = v6
	v6 = loc3
	return v6
	// succ:  fn001196E6_exit
l00119708:
	return v6
	// succ:  fn001196E6_exit
fn001196E6_exit:


// fn0011970A
// Return size: 0
word32 fn0011970A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011970A_entry:
	// succ:  l0011970A
l0011970A:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = arg4
	loc6 = v12
	v12 = arg1
	loc7 = v12
	// succ:  l0011971A
l0011971A:
	v12 = loc7
	v13 = arg2
	v14 = v12 == v13
	loc8 = v14
	v12 = loc8
	branch !v12 l0011972A
	// succ:  l00119727 l0011972A
l00119727:
	goto l00119769
	// succ:  l00119769
l0011972A:
	v12 = loc7
	v15 = Mem0[v12:int8]
	v12 = CONVERT(v15, int8, word32)
	loc9 = v12
	v12 = loc9
	v13 = 0x18<32>
	v12 = v12 << v13
	v13 = 0x18<32>
	v12 = v12 >> v13
	v13 = 0xFFFFFFFF<32>
	v14 = v12 > v13
	loc12 = v14
	v12 = loc12
	branch !v12 l00119745
	// succ:  l00119742 l00119745
l00119742:
	v12 = loc9
	goto l00119747
	// succ:  l00119747
l00119745:
	v12 = arg3
	// succ:  l00119747
l00119747:
	loc5 = v12
	v12 = loc6
	v13 = loc5
	v16 = SLICE(v13, byte, 0)
	Mem0[v12:byte] = v16
	v12 = loc7
	v13 = 1<32>
	v12 = v12 + v13
	loc10 = v12
	v12 = loc6
	v13 = 1<32>
	v12 = v12 + v13
	loc11 = v12
	v12 = loc11
	loc6 = v12
	v12 = loc10
	loc7 = v12
	goto l0011970A
	// succ:  l0011970A
l00119769:
	v12 = arg2
	return v12
	// succ:  fn0011970A_exit
l0011976E:
	return v12
	// succ:  fn0011970A_exit
fn0011970A_exit:


// fn00119770
// Return size: 0
word32 fn00119770()
fn00119770_entry:
	// succ:  l00119770
l00119770:
	v10 = Mem0[0x00140030<p32>:word32]
	loc7 = v10
	v10 = 0<32>
	Mem0[0x00140048<p32>:word32] = v10
	v10 = 0x1BF<32>
	v10 = invoke_i(v10)
	loc0 = v10
	v10 = Mem0[0x00140048<p32>:word32]
	loc1 = v10
	v10 = 0<32>
	Mem0[0x00140048<p32>:word32] = v10
	v10 = loc1
	v11 = 1<32>
	v10 = v10 & v11
	loc2 = v10
	v10 = loc2
	branch !v10 l001197A3
	// succ:  l00119794 l001197A3
l00119794:
	v10 = 0<32>
	v10 = ___cxa_find_matching_catch_3(v10)
	loc4 = v10
	v10 = Mem0[0x00140094<p32>:word32]
	loc5 = v10
	v10 = loc4
	fn000D0E65(v10)
	goto l001197AD
	// succ:  l001197AD
l001197A3:
	v10 = loc0
	v10 = Mem0[v10:word32]
	loc3 = v10
	v10 = loc3
	return v10
	// succ:  fn00119770_exit
l001197AD:
	v10 = 0<32>
	return v10
	// succ:  fn00119770_exit
l001197B1:
	return v10
	// succ:  fn00119770_exit
fn00119770_exit:


// fn001197B3
// Return size: 0
word32 fn001197B3()
fn001197B3_entry:
	// succ:  l001197B3
l001197B3:
	v10 = Mem0[0x00140030<p32>:word32]
	loc7 = v10
	v10 = 0<32>
	Mem0[0x00140048<p32>:word32] = v10
	v10 = 0x1C0<32>
	v10 = invoke_i(v10)
	loc0 = v10
	v10 = Mem0[0x00140048<p32>:word32]
	loc1 = v10
	v10 = 0<32>
	Mem0[0x00140048<p32>:word32] = v10
	v10 = loc1
	v11 = 1<32>
	v10 = v10 & v11
	loc2 = v10
	v10 = loc2
	branch !v10 l001197E6
	// succ:  l001197D7 l001197E6
l001197D7:
	v10 = 0<32>
	v10 = ___cxa_find_matching_catch_3(v10)
	loc4 = v10
	v10 = Mem0[0x00140094<p32>:word32]
	loc5 = v10
	v10 = loc4
	fn000D0E65(v10)
	goto l001197F0
	// succ:  l001197F0
l001197E6:
	v10 = loc0
	v10 = Mem0[v10:word32]
	loc3 = v10
	v10 = loc3
	return v10
	// succ:  fn001197B3_exit
l001197F0:
	v10 = 0<32>
	return v10
	// succ:  fn001197B3_exit
l001197F4:
	return v10
	// succ:  fn001197B3_exit
fn001197B3_exit:


// fn001197F6
// Return size: 0
word32 fn001197F6()
fn001197F6_entry:
	// succ:  l001197F6
l001197F6:
	v10 = Mem0[0x00140030<p32>:word32]
	loc7 = v10
	v10 = 0<32>
	Mem0[0x00140048<p32>:word32] = v10
	v10 = 0x1C1<32>
	v10 = invoke_i(v10)
	loc0 = v10
	v10 = Mem0[0x00140048<p32>:word32]
	loc1 = v10
	v10 = 0<32>
	Mem0[0x00140048<p32>:word32] = v10
	v10 = loc1
	v11 = 1<32>
	v10 = v10 & v11
	loc2 = v10
	v10 = loc2
	branch !v10 l00119829
	// succ:  l0011981A l00119829
l0011981A:
	v10 = 0<32>
	v10 = ___cxa_find_matching_catch_3(v10)
	loc4 = v10
	v10 = Mem0[0x00140094<p32>:word32]
	loc5 = v10
	v10 = loc4
	fn000D0E65(v10)
	goto l00119833
	// succ:  l00119833
l00119829:
	v10 = loc0
	v10 = Mem0[v10:word32]
	loc3 = v10
	v10 = loc3
	return v10
	// succ:  fn001197F6_exit
l00119833:
	v10 = 0<32>
	return v10
	// succ:  fn001197F6_exit
l00119837:
	return v10
	// succ:  fn001197F6_exit
fn001197F6_exit:


// fn00119839
// Return size: 0
void fn00119839(word32 arg0)
fn00119839_entry:
	// succ:  l00119839
l00119839:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v5 = arg0
	v6 = 0x24F0<32>
	Mem0[v5:word32] = v6
	v5 = arg0
	v6 = 0xC<32>
	v5 = v5 + v6
	loc1 = v5
	v5 = loc1
	fn0011BAF7(v5)
	return
	// succ:  fn00119839_exit
l00119855:
	return
	// succ:  fn00119839_exit
fn00119839_exit:


// fn00119857
// Return size: 0
void fn00119857(word32 arg0)
fn00119857_entry:
	// succ:  l00119857
l00119857:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn00119839(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn00119857_exit
l00119868:
	return
	// succ:  fn00119857_exit
fn00119857_exit:


// fn0011986A
// Return size: 0
word32 fn0011986A(word32 arg0)
fn0011986A_entry:
	// succ:  l0011986A
l0011986A:
	v6 = Mem0[0x00140030<p32>:word32]
	loc4 = v6
	v6 = arg0
	v7 = 8<32>
	v6 = v6 + v7
	loc1 = v6
	v6 = loc1
	v8 = Mem0[v6:int8]
	v6 = CONVERT(v8, int8, word32)
	loc2 = v6
	v6 = loc2
	return v6
	// succ:  fn0011986A_exit
l00119881:
	return v6
	// succ:  fn0011986A_exit
fn0011986A_exit:


// fn00119883
// Return size: 0
word32 fn00119883(word32 arg0)
fn00119883_entry:
	// succ:  l00119883
l00119883:
	v6 = Mem0[0x00140030<p32>:word32]
	loc4 = v6
	v6 = arg0
	v7 = 9<32>
	v6 = v6 + v7
	loc1 = v6
	v6 = loc1
	v8 = Mem0[v6:int8]
	v6 = CONVERT(v8, int8, word32)
	loc2 = v6
	v6 = loc2
	return v6
	// succ:  fn00119883_exit
l0011989A:
	return v6
	// succ:  fn00119883_exit
fn00119883_exit:


// fn0011989C
// Return size: 0
void fn0011989C(word32 arg0, word32 arg1)
fn0011989C_entry:
	// succ:  l0011989C
l0011989C:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = arg1
	v6 = 0xC<32>
	v5 = v5 + v6
	loc2 = v5
	v5 = arg0
	v6 = loc2
	fn0011B8FA(v5, v6)
	return
	// succ:  fn0011989C_exit
l001198B1:
	return
	// succ:  fn0011989C_exit
fn0011989C_exit:


// fn001198B3
// Return size: 0
void fn001198B3(word32 arg0, word32 arg1)
fn001198B3_entry:
	// succ:  l001198B3
l001198B3:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v4 = arg0
	v5 = 0<64>
	Mem0[v4:word64] = v5
	v4 = arg0
	v6 = 8<32>
	v4 = v4 + v6
	v6 = 0<32>
	Mem0[v4:word32] = v6
	v4 = arg0
	v6 = 0x4001<32>
	v7 = 4<32>
	fn0011B96D(v4, v6, v7)
	return
	// succ:  fn001198B3_exit
l001198D6:
	return
	// succ:  fn001198B3_exit
fn001198B3_exit:


// fn001198D8
// Return size: 0
void fn001198D8(word32 arg0, word32 arg1)
fn001198D8_entry:
	// succ:  l001198D8
l001198D8:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v4 = arg0
	v5 = 0<64>
	Mem0[v4:word64] = v5
	v4 = arg0
	v6 = 8<32>
	v4 = v4 + v6
	v6 = 0<32>
	Mem0[v4:word32] = v6
	v4 = arg0
	v6 = 0x3FFB<32>
	v7 = 5<32>
	fn0011B96D(v4, v6, v7)
	return
	// succ:  fn001198D8_exit
l001198FB:
	return
	// succ:  fn001198D8_exit
fn001198D8_exit:


// fn001198FD
// Return size: 0
void fn001198FD(word32 arg0)
fn001198FD_entry:
	// succ:  l001198FD
l001198FD:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v5 = arg0
	v6 = 0x2518<32>
	Mem0[v5:word32] = v6
	v5 = arg0
	v6 = 0x10<32>
	v5 = v5 + v6
	loc1 = v5
	v5 = loc1
	fn0011BAF7(v5)
	return
	// succ:  fn001198FD_exit
l00119919:
	return
	// succ:  fn001198FD_exit
fn001198FD_exit:


// fn0011991B
// Return size: 0
void fn0011991B(word32 arg0)
fn0011991B_entry:
	// succ:  l0011991B
l0011991B:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn001198FD(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011991B_exit
l0011992C:
	return
	// succ:  fn0011991B_exit
fn0011991B_exit:


// fn0011992E
// Return size: 0
word32 fn0011992E(word32 arg0)
fn0011992E_entry:
	// succ:  l0011992E
l0011992E:
	v6 = Mem0[0x00140030<p32>:word32]
	loc4 = v6
	v6 = arg0
	v7 = 8<32>
	v6 = v6 + v7
	loc1 = v6
	v6 = loc1
	v6 = Mem0[v6:word32]
	loc2 = v6
	v6 = loc2
	return v6
	// succ:  fn0011992E_exit
l00119945:
	return v6
	// succ:  fn0011992E_exit
fn0011992E_exit:


// fn00119947
// Return size: 0
word32 fn00119947(word32 arg0)
fn00119947_entry:
	// succ:  l00119947
l00119947:
	v6 = Mem0[0x00140030<p32>:word32]
	loc4 = v6
	v6 = arg0
	v7 = 0xC<32>
	v6 = v6 + v7
	loc1 = v6
	v6 = loc1
	v6 = Mem0[v6:word32]
	loc2 = v6
	v6 = loc2
	return v6
	// succ:  fn00119947_exit
l0011995E:
	return v6
	// succ:  fn00119947_exit
fn00119947_exit:


// fn00119960
// Return size: 0
void fn00119960(word32 arg0, word32 arg1)
fn00119960_entry:
	// succ:  l00119960
l00119960:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = arg1
	v6 = 0x10<32>
	v5 = v5 + v6
	loc2 = v5
	v5 = arg0
	v6 = loc2
	fn0011B8FA(v5, v6)
	return
	// succ:  fn00119960_exit
l00119975:
	return
	// succ:  fn00119960_exit
fn00119960_exit:


// fn00119977
// Return size: 0
void fn00119977(word32 arg0, word32 arg1)
fn00119977_entry:
	// succ:  l00119977
l00119977:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = arg0
	v6 = 0<64>
	Mem0[v5:word64] = v6
	v5 = arg0
	v7 = 8<32>
	v5 = v5 + v7
	v7 = 0<32>
	Mem0[v5:word32] = v7
	v5 = 0x2550<32>
	v5 = fn000D7B05(v5)
	loc2 = v5
	v5 = arg0
	v7 = 0x2550<32>
	v8 = loc2
	fn0011C5CF(v5, v7, v8)
	return
	// succ:  fn00119977_exit
l001199A3:
	return
	// succ:  fn00119977_exit
fn00119977_exit:


// fn001199A5
// Return size: 0
void fn001199A5(word32 arg0, word32 arg1)
fn001199A5_entry:
	// succ:  l001199A5
l001199A5:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = arg0
	v6 = 0<64>
	Mem0[v5:word64] = v6
	v5 = arg0
	v7 = 8<32>
	v5 = v5 + v7
	v7 = 0<32>
	Mem0[v5:word32] = v7
	v5 = 0x2538<32>
	v5 = fn000D7B05(v5)
	loc2 = v5
	v5 = arg0
	v7 = 0x2538<32>
	v8 = loc2
	fn0011C5CF(v5, v7, v8)
	return
	// succ:  fn001199A5_exit
l001199D1:
	return
	// succ:  fn001199A5_exit
fn001199A5_exit:


// fn001199D3
// Return size: 0
void fn001199D3(word32 arg0)
fn001199D3_entry:
	// succ:  l001199D3
l001199D3:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn001199D3_exit
l001199DF:
	return
	// succ:  fn001199D3_exit
fn001199D3_exit:


// fn001199E1
// Return size: 0
void fn001199E1(word32 arg0)
fn001199E1_entry:
	// succ:  l001199E1
l001199E1:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn001199E1_exit
l001199ED:
	return
	// succ:  fn001199E1_exit
fn001199E1_exit:


// fn001199EF
// Return size: 0
word32 fn001199EF(word32 arg0, word32 arg1, word32 arg2)
fn001199EF_entry:
	// succ:  l001199EF
l001199EF:
	v11 = Mem0[0x00140030<p32>:word32]
	loc11 = v11
	v11 = arg2
	v12 = 0x80<32>
	v13 = v11 <u v12
	loc9 = v13
	v11 = loc9
	branch !v11 l00119A30
	// succ:  l00119A01 l00119A30
l00119A01:
	v11 = fn001197F6()
	loc3 = v11
	v11 = loc3
	v12 = arg2
	v14 = 1<32>
	v12 = v12 << v14
	v11 = v11 + v12
	loc4 = v11
	v11 = loc4
	v15 = Mem0[v11:int16]
	v11 = CONVERT(v15, int16, word32)
	loc5 = v11
	v11 = loc5
	v12 = arg1
	v11 = v11 & v12
	loc6 = v11
	v11 = loc6
	v12 = 0x10<32>
	v11 = v11 << v12
	v12 = 0x10<32>
	v11 = v11 >> v12
	v12 = 0<32>
	v13 = v11 != v12
	loc7 = v13
	v11 = loc7
	loc8 = v11
	goto l00119A34
	// succ:  l00119A34
l00119A30:
	v11 = 0<32>
	loc8 = v11
	// succ:  l00119A34
l00119A34:
	v11 = loc8
	return v11
	// succ:  fn001199EF_exit
l00119A38:
	return v11
	// succ:  fn001199EF_exit
fn001199EF_exit:


// fn00119A3A
// Return size: 0
word32 fn00119A3A(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn00119A3A_entry:
	// succ:  l00119A3A
l00119A3A:
	v17 = Mem0[0x00140030<p32>:word32]
	loc18 = v17
	v17 = arg3
	loc4 = v17
	v17 = arg1
	loc5 = v17
	// succ:  l00119A4A
l00119A4A:
	v17 = loc5
	v18 = arg2
	v19 = v17 == v18
	loc10 = v19
	v17 = loc10
	branch !v17 l00119A5A
	// succ:  l00119A57 l00119A5A
l00119A57:
	goto l00119ABE
	// succ:  l00119ABE
l00119A5A:
	v17 = loc5
	v17 = Mem0[v17:word32]
	loc11 = v17
	v17 = loc11
	v18 = 0x80<32>
	v19 = v17 <u v18
	loc16 = v19
	v17 = loc16
	branch !v17 l00119A91
	// succ:  l00119A6D l00119A91
l00119A6D:
	v17 = fn001197F6()
	loc12 = v17
	v17 = loc12
	v18 = loc11
	v20 = 1<32>
	v18 = v18 << v20
	v17 = v17 + v18
	loc13 = v17
	v17 = loc13
	v21 = Mem0[v17:int16]
	v17 = CONVERT(v21, int16, word32)
	loc14 = v17
	v17 = loc14
	v18 = 0xFFFF<32>
	v17 = v17 & v18
	loc15 = v17
	v17 = loc15
	loc7 = v17
	goto l00119A95
	// succ:  l00119A95
l00119A91:
	v17 = 0<32>
	loc7 = v17
	// succ:  l00119A95
l00119A95:
	v17 = loc7
	v18 = 0xFFFF<32>
	v17 = v17 & v18
	loc6 = v17
	v17 = loc4
	v18 = loc6
	v22 = SLICE(v18, word16, 0)
	Mem0[v17:word16] = v22
	v17 = loc5
	v18 = 4<32>
	v17 = v17 + v18
	loc8 = v17
	v17 = loc4
	v18 = 2<32>
	v17 = v17 + v18
	loc9 = v17
	v17 = loc9
	loc4 = v17
	v17 = loc8
	loc5 = v17
	goto l00119A3A
	// succ:  l00119A3A
l00119ABE:
	v17 = arg2
	return v17
	// succ:  fn00119A3A_exit
l00119AC3:
	return v17
	// succ:  fn00119A3A_exit
fn00119A3A_exit:


// fn00119AC5
// Return size: 0
word32 fn00119AC5(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn00119AC5_entry:
	// succ:  l00119AC5
l00119AC5:
	v15 = Mem0[0x00140030<p32>:word32]
	loc16 = v15
	v15 = arg2
	loc4 = v15
	// succ:  l00119AD1
l00119AD1:
	v15 = loc4
	v16 = arg3
	v17 = v15 == v16
	loc8 = v17
	v15 = loc8
	branch !v15 l00119AE5
	// succ:  l00119ADE l00119AE5
l00119ADE:
	v15 = arg3
	loc5 = v15
	goto l00119B3C
	// succ:  l00119B3C
l00119AE5:
	v15 = loc4
	v15 = Mem0[v15:word32]
	loc9 = v15
	v15 = loc9
	v16 = 0x80<32>
	v17 = v15 <u v16
	loc14 = v17
	v15 = loc14
	branch !v15 l00119B2F
	// succ:  l00119AF8 l00119B2F
l00119AF8:
	v15 = fn001197F6()
	loc10 = v15
	v15 = loc10
	v16 = loc9
	v18 = 1<32>
	v16 = v16 << v18
	v15 = v15 + v16
	loc11 = v15
	v15 = loc11
	v19 = Mem0[v15:int16]
	v15 = CONVERT(v19, int16, word32)
	loc12 = v15
	v15 = loc12
	v16 = arg1
	v15 = v15 & v16
	loc13 = v15
	v15 = loc13
	v16 = 0x10<32>
	v15 = v15 << v16
	v16 = 0x10<32>
	v15 = v15 >> v16
	v16 = 0<32>
	v17 = v15 == v16
	loc6 = v17
	v15 = loc6
	v17 = v15 == 0<32>
	branch !v17 l00119B2E
	// succ:  l00119B27 l00119B2E
l00119B27:
	v15 = loc4
	loc5 = v15
	goto l00119B3C
	// succ:  l00119B3C
l00119B2E:
	// succ:  l00119B2F
l00119B2F:
	v15 = loc4
	v16 = 4<32>
	v15 = v15 + v16
	loc7 = v15
	v15 = loc7
	loc4 = v15
	goto l00119AC5
	// succ:  l00119AC5
l00119B3C:
	v15 = loc5
	return v15
	// succ:  fn00119AC5_exit
l00119B41:
	return v15
	// succ:  fn00119AC5_exit
fn00119AC5_exit:


// fn00119B43
// Return size: 0
word32 fn00119B43(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn00119B43_entry:
	// succ:  l00119B43
l00119B43:
	v15 = Mem0[0x00140030<p32>:word32]
	loc16 = v15
	v15 = arg2
	loc4 = v15
	// succ:  l00119B4F
l00119B4F:
	v15 = loc4
	v16 = arg3
	v17 = v15 == v16
	loc8 = v17
	v15 = loc8
	branch !v15 l00119B63
	// succ:  l00119B5C l00119B63
l00119B5C:
	v15 = arg3
	loc5 = v15
	goto l00119BC0
	// succ:  l00119BC0
l00119B63:
	v15 = loc4
	v15 = Mem0[v15:word32]
	loc9 = v15
	v15 = loc9
	v16 = 0x80<32>
	v17 = v15 <u v16
	loc14 = v17
	v15 = loc14
	v17 = v15 == 0<32>
	branch !v17 l00119B7E
	// succ:  l00119B77 l00119B7E
l00119B77:
	v15 = loc4
	loc5 = v15
	goto l00119BC0
	// succ:  l00119BC0
l00119B7E:
	v15 = fn001197F6()
	loc10 = v15
	v15 = loc10
	v16 = loc9
	v18 = 1<32>
	v16 = v16 << v18
	v15 = v15 + v16
	loc11 = v15
	v15 = loc11
	v19 = Mem0[v15:int16]
	v15 = CONVERT(v19, int16, word32)
	loc12 = v15
	v15 = loc12
	v16 = arg1
	v15 = v15 & v16
	loc13 = v15
	v15 = loc13
	v16 = 0x10<32>
	v15 = v15 << v16
	v16 = 0x10<32>
	v15 = v15 >> v16
	v16 = 0<32>
	v17 = v15 == v16
	loc6 = v17
	v15 = loc6
	branch !v15 l00119BB3
	// succ:  l00119BAC l00119BB3
l00119BAC:
	v15 = loc4
	loc5 = v15
	goto l00119BC0
	// succ:  l00119BC0
l00119BB3:
	v15 = loc4
	v16 = 4<32>
	v15 = v15 + v16
	loc7 = v15
	v15 = loc7
	loc4 = v15
	goto l00119B43
	// succ:  l00119B43
l00119BC0:
	v15 = loc5
	return v15
	// succ:  fn00119B43_exit
l00119BC5:
	return v15
	// succ:  fn00119B43_exit
fn00119B43_exit:


// fn00119BC7
// Return size: 0
word32 fn00119BC7(word32 arg0, word32 arg1)
fn00119BC7_entry:
	// succ:  l00119BC7
l00119BC7:
	v9 = Mem0[0x00140030<p32>:word32]
	loc8 = v9
	v9 = arg1
	v10 = 0x80<32>
	v11 = v9 <u v10
	loc6 = v11
	v9 = loc6
	branch !v9 l00119BF4
	// succ:  l00119BD9 l00119BF4
l00119BD9:
	v9 = fn001197B3()
	loc2 = v9
	v9 = loc2
	v10 = arg1
	v12 = 2<32>
	v10 = v10 << v12
	v9 = v9 + v10
	loc3 = v9
	v9 = loc3
	v9 = Mem0[v9:word32]
	loc4 = v9
	v9 = loc4
	loc5 = v9
	goto l00119BF8
	// succ:  l00119BF8
l00119BF4:
	v9 = arg1
	loc5 = v9
	// succ:  l00119BF8
l00119BF8:
	v9 = loc5
	return v9
	// succ:  fn00119BC7_exit
l00119BFC:
	return v9
	// succ:  fn00119BC7_exit
fn00119BC7_exit:


// fn00119BFE
// Return size: 0
word32 fn00119BFE(word32 arg0, word32 arg1, word32 arg2)
fn00119BFE_entry:
	// succ:  l00119BFE
l00119BFE:
	v13 = Mem0[0x00140030<p32>:word32]
	loc13 = v13
	v13 = arg1
	loc3 = v13
	// succ:  l00119C0A
l00119C0A:
	v13 = loc3
	v14 = arg2
	v15 = v13 == v14
	loc4 = v15
	v13 = loc4
	branch !v13 l00119C1A
	// succ:  l00119C17 l00119C1A
l00119C17:
	goto l00119C61
	// succ:  l00119C61
l00119C1A:
	v13 = loc3
	v13 = Mem0[v13:word32]
	loc5 = v13
	v13 = loc5
	v14 = 0x80<32>
	v15 = v13 <u v14
	loc11 = v15
	v13 = loc11
	branch !v13 l00119C48
	// succ:  l00119C2D l00119C48
l00119C2D:
	v13 = fn001197B3()
	loc6 = v13
	v13 = loc6
	v14 = loc5
	v16 = 2<32>
	v14 = v14 << v16
	v13 = v13 + v14
	loc7 = v13
	v13 = loc7
	v13 = Mem0[v13:word32]
	loc8 = v13
	v13 = loc8
	loc9 = v13
	goto l00119C4C
	// succ:  l00119C4C
l00119C48:
	v13 = loc5
	loc9 = v13
	// succ:  l00119C4C
l00119C4C:
	v13 = loc3
	v14 = loc9
	Mem0[v13:word32] = v14
	v13 = loc3
	v14 = 4<32>
	v13 = v13 + v14
	loc10 = v13
	v13 = loc10
	loc3 = v13
	goto l00119BFE
	// succ:  l00119BFE
l00119C61:
	v13 = arg2
	return v13
	// succ:  fn00119BFE_exit
l00119C66:
	return v13
	// succ:  fn00119BFE_exit
fn00119BFE_exit:


// fn00119C68
// Return size: 0
word32 fn00119C68(word32 arg0, word32 arg1)
fn00119C68_entry:
	// succ:  l00119C68
l00119C68:
	v9 = Mem0[0x00140030<p32>:word32]
	loc8 = v9
	v9 = arg1
	v10 = 0x80<32>
	v11 = v9 <u v10
	loc6 = v11
	v9 = loc6
	branch !v9 l00119C95
	// succ:  l00119C7A l00119C95
l00119C7A:
	v9 = fn00119770()
	loc2 = v9
	v9 = loc2
	v10 = arg1
	v12 = 2<32>
	v10 = v10 << v12
	v9 = v9 + v10
	loc3 = v9
	v9 = loc3
	v9 = Mem0[v9:word32]
	loc4 = v9
	v9 = loc4
	loc5 = v9
	goto l00119C99
	// succ:  l00119C99
l00119C95:
	v9 = arg1
	loc5 = v9
	// succ:  l00119C99
l00119C99:
	v9 = loc5
	return v9
	// succ:  fn00119C68_exit
l00119C9D:
	return v9
	// succ:  fn00119C68_exit
fn00119C68_exit:


// fn00119C9F
// Return size: 0
word32 fn00119C9F(word32 arg0, word32 arg1, word32 arg2)
fn00119C9F_entry:
	// succ:  l00119C9F
l00119C9F:
	v13 = Mem0[0x00140030<p32>:word32]
	loc13 = v13
	v13 = arg1
	loc3 = v13
	// succ:  l00119CAB
l00119CAB:
	v13 = loc3
	v14 = arg2
	v15 = v13 == v14
	loc4 = v15
	v13 = loc4
	branch !v13 l00119CBB
	// succ:  l00119CB8 l00119CBB
l00119CB8:
	goto l00119D02
	// succ:  l00119D02
l00119CBB:
	v13 = loc3
	v13 = Mem0[v13:word32]
	loc5 = v13
	v13 = loc5
	v14 = 0x80<32>
	v15 = v13 <u v14
	loc11 = v15
	v13 = loc11
	branch !v13 l00119CE9
	// succ:  l00119CCE l00119CE9
l00119CCE:
	v13 = fn00119770()
	loc6 = v13
	v13 = loc6
	v14 = loc5
	v16 = 2<32>
	v14 = v14 << v16
	v13 = v13 + v14
	loc7 = v13
	v13 = loc7
	v13 = Mem0[v13:word32]
	loc8 = v13
	v13 = loc8
	loc9 = v13
	goto l00119CED
	// succ:  l00119CED
l00119CE9:
	v13 = loc5
	loc9 = v13
	// succ:  l00119CED
l00119CED:
	v13 = loc3
	v14 = loc9
	Mem0[v13:word32] = v14
	v13 = loc3
	v14 = 4<32>
	v13 = v13 + v14
	loc10 = v13
	v13 = loc10
	loc3 = v13
	goto l00119C9F
	// succ:  l00119C9F
l00119D02:
	v13 = arg2
	return v13
	// succ:  fn00119C9F_exit
l00119D07:
	return v13
	// succ:  fn00119C9F_exit
fn00119C9F_exit:


// fn00119D09
// Return size: 0
word32 fn00119D09(word32 arg0, word32 arg1)
fn00119D09_entry:
	// succ:  l00119D09
l00119D09:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = arg1
	v6 = 0x18<32>
	v5 = v5 << v6
	v6 = 0x18<32>
	v5 = v5 >> v6
	loc2 = v5
	v5 = loc2
	return v5
	// succ:  fn00119D09_exit
l00119D1C:
	return v5
	// succ:  fn00119D09_exit
fn00119D09_exit:


// fn00119D1E
// Return size: 0
word32 fn00119D1E(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn00119D1E_entry:
	// succ:  l00119D1E
l00119D1E:
	v11 = Mem0[0x00140030<p32>:word32]
	loc12 = v11
	v11 = arg3
	loc4 = v11
	v11 = arg1
	loc5 = v11
	// succ:  l00119D2E
l00119D2E:
	v11 = loc5
	v12 = arg2
	v13 = v11 == v12
	loc6 = v13
	v11 = loc6
	branch !v11 l00119D3E
	// succ:  l00119D3B l00119D3E
l00119D3B:
	goto l00119D6E
	// succ:  l00119D6E
l00119D3E:
	v11 = loc5
	v14 = Mem0[v11:int8]
	v11 = CONVERT(v14, int8, word32)
	loc7 = v11
	v11 = loc7
	v12 = 0x18<32>
	v11 = v11 << v12
	v12 = 0x18<32>
	v11 = v11 >> v12
	loc8 = v11
	v11 = loc4
	v12 = loc8
	Mem0[v11:word32] = v12
	v11 = loc5
	v12 = 1<32>
	v11 = v11 + v12
	loc9 = v11
	v11 = loc4
	v12 = 4<32>
	v11 = v11 + v12
	loc10 = v11
	v11 = loc10
	loc4 = v11
	v11 = loc9
	loc5 = v11
	goto l00119D1E
	// succ:  l00119D1E
l00119D6E:
	v11 = arg2
	return v11
	// succ:  fn00119D1E_exit
l00119D73:
	return v11
	// succ:  fn00119D1E_exit
fn00119D1E_exit:


// fn00119D75
// Return size: 0
word32 fn00119D75(word32 arg0, word32 arg1, word32 arg2)
fn00119D75_entry:
	// succ:  l00119D75
l00119D75:
	v7 = Mem0[0x00140030<p32>:word32]
	loc7 = v7
	v7 = arg1
	v8 = 0x80<32>
	v9 = v7 <u v8
	loc5 = v9
	v7 = arg1
	v8 = 0xFF<32>
	v7 = v7 & v8
	loc4 = v7
	v7 = loc5
	branch !v7 l00119D92
	// succ:  l00119D8F l00119D92
l00119D8F:
	v7 = loc4
	goto l00119D94
	// succ:  l00119D94
l00119D92:
	v7 = arg2
	// succ:  l00119D94
l00119D94:
	loc3 = v7
	v7 = loc3
	return v7
	// succ:  fn00119D75_exit
l00119D9A:
	return v7
	// succ:  fn00119D75_exit
fn00119D75_exit:


// fn00119D9C
// Return size: 0
word32 fn00119D9C(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00119D9C_entry:
	// succ:  l00119D9C
l00119D9C:
	v18 = Mem0[0x00140030<p32>:word32]
	loc20 = v18
	v18 = arg1
	loc12 = v18
	v18 = arg2
	loc13 = v18
	v18 = loc13
	v19 = loc12
	v18 = v18 - v19
	loc14 = v18
	v18 = loc14
	v19 = 2<32>
	v18 = v18 >>u v19
	loc15 = v18
	v18 = arg4
	loc6 = v18
	v18 = arg1
	loc7 = v18
	// succ:  l00119DC2
l00119DC2:
	v18 = loc7
	v19 = arg2
	v20 = v18 == v19
	loc16 = v20
	v18 = loc16
	branch !v18 l00119DD2
	// succ:  l00119DCF l00119DD2
l00119DCF:
	goto l00119E14
	// succ:  l00119E14
l00119DD2:
	v18 = loc7
	v18 = Mem0[v18:word32]
	loc8 = v18
	v18 = loc8
	v19 = 0x80<32>
	v20 = v18 <u v19
	loc17 = v20
	v18 = loc8
	v19 = 0xFF<32>
	v18 = v18 & v19
	loc9 = v18
	v18 = loc17
	branch !v18 l00119DF0
	// succ:  l00119DED l00119DF0
l00119DED:
	v18 = loc9
	goto l00119DF2
	// succ:  l00119DF2
l00119DF0:
	v18 = arg3
	// succ:  l00119DF2
l00119DF2:
	loc5 = v18
	v18 = loc6
	v19 = loc5
	v21 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v21
	v18 = loc7
	v19 = 4<32>
	v18 = v18 + v19
	loc10 = v18
	v18 = loc6
	v19 = 1<32>
	v18 = v18 + v19
	loc11 = v18
	v18 = loc11
	loc6 = v18
	v18 = loc10
	loc7 = v18
	goto l00119D9C
	// succ:  l00119D9C
l00119E14:
	v18 = arg1
	v19 = loc15
	v22 = 2<32>
	v19 = v19 << v22
	v18 = v18 + v19
	loc18 = v18
	v18 = loc18
	return v18
	// succ:  fn00119D9C_exit
l00119E23:
	return v18
	// succ:  fn00119D9C_exit
fn00119D9C_exit:


// fn00119E25
// Return size: 0
void fn00119E25(word32 arg0)
fn00119E25_entry:
	// succ:  l00119E25
l00119E25:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn00119E25_exit
l00119E31:
	return
	// succ:  fn00119E25_exit
fn00119E25_exit:


// fn00119E33
// Return size: 0
void fn00119E33(word32 arg0)
fn00119E33_entry:
	// succ:  l00119E33
l00119E33:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn00119E33_exit
l00119E3F:
	return
	// succ:  fn00119E33_exit
fn00119E33_exit:


// fn00119E41
// Return size: 0
void fn00119E41(word32 arg0)
fn00119E41_entry:
	// succ:  l00119E41
l00119E41:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn00119E41_exit
l00119E4D:
	return
	// succ:  fn00119E41_exit
fn00119E41_exit:


// fn00119E4F
// Return size: 0
void fn00119E4F(word32 arg0)
fn00119E4F_entry:
	// succ:  l00119E4F
l00119E4F:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v9 = 8<32>
	v9 = ___cxa_allocate_exception(v9)
	loc1 = v9
	v9 = 0<32>
	Mem0[0x00140048<p32>:word32] = v9
	v9 = 0x1C2<32>
	v10 = loc1
	v11 = 0x4030<32>
	invoke_vii(v9, v10, v11)
	v9 = Mem0[0x00140048<p32>:word32]
	loc2 = v9
	v9 = 0<32>
	Mem0[0x00140048<p32>:word32] = v9
	v9 = loc2
	v10 = 1<32>
	v9 = v9 & v10
	loc3 = v9
	v9 = loc3
	branch !v9 l00119E8E
	// succ:  l00119E7D l00119E8E
l00119E7D:
	v9 = ___cxa_find_matching_catch_2()
	loc4 = v9
	v9 = Mem0[0x00140094<p32>:word32]
	loc5 = v9
	v9 = loc1
	___cxa_free_exception(v9)
	v9 = loc4
	___resumeException(v9)
	goto l00119EA1
	// succ:  l00119EA1
l00119E8E:
	v9 = loc1
	v10 = 0x26FC<32>
	Mem0[v9:word32] = v10
	v9 = loc1
	v10 = 0x9F8<32>
	v11 = 0x156<32>
	___cxa_throw(v9, v10, v11)
	// succ:  l00119EA1
l00119EA1:
	// succ:  l00119EA2
l00119EA2:
	return
	// succ:  fn00119E4F_exit
fn00119E4F_exit:


// fn00119EA4
// Return size: 0
void fn00119EA4(word32 arg0, word32 arg1)
fn00119EA4_entry:
	// succ:  l00119EA4
l00119EA4:
	v99 = Mem0[0x00140030<p32>:word32]
	loc98 = v99
	v99 = arg1
	v100 = 0xFFFFFFFF<32>
	v99 = v99 + v100
	loc17 = v99
	v99 = arg0
	v100 = 4<32>
	v99 = v99 + v100
	loc28 = v99
	v99 = loc28
	v100 = loc17
	Mem0[v99:word32] = v100
	v99 = arg0
	v100 = 0x24A8<32>
	Mem0[v99:word32] = v100
	v99 = arg0
	v100 = 8<32>
	v99 = v99 + v100
	loc39 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1C3<32>
	v100 = loc39
	v101 = 0x1C<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc50 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc50
	v100 = 1<32>
	v99 = v99 & v100
	loc61 = v99
	v99 = loc61
	branch !v99 l00119F00
	// succ:  l00119EEF l00119F00
l00119EEF:
	v99 = ___cxa_find_matching_catch_2()
	loc88 = v99
	v99 = Mem0[0x00140094<p32>:word32]
	loc89 = v99
	v99 = loc89
	loc4 = v99
	v99 = loc88
	loc5 = v99
	goto l0011A718
	// succ:  l0011A718
l00119F00:
	v99 = arg0
	v100 = 0x90<32>
	v99 = v99 + v100
	loc72 = v99
	v99 = loc72
	v102 = 0<64>
	Mem0[v99:word64] = v102
	v99 = loc72
	v100 = 8<32>
	v99 = v99 + v100
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x199<32>
	v100 = loc72
	v101 = 0x37CF<32>
	v103 = 1<32>
	invoke_viii(v99, v100, v101, v103)
	v99 = Mem0[0x00140048<p32>:word32]
	loc83 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc83
	v100 = 1<32>
	v99 = v99 & v100
	loc94 = v99
	v99 = loc94
	branch !v99 l00119F4E
	// succ:  l00119F3D l00119F4E
l00119F3D:
	v99 = ___cxa_find_matching_catch_2()
	loc90 = v99
	v99 = Mem0[0x00140094<p32>:word32]
	loc91 = v99
	v99 = loc91
	loc2 = v99
	v99 = loc90
	loc3 = v99
	goto l0011A70A
	// succ:  l0011A70A
l00119F4E:
	v99 = loc39
	v99 = Mem0[v99:word32]
	loc7 = v99
	v99 = arg0
	v100 = 0xC<32>
	v99 = v99 + v100
	loc8 = v99
	v99 = loc8
	v99 = Mem0[v99:word32]
	loc6 = v99
	v99 = loc6
	loc10 = v99
	// succ:  l00119F69
l00119F69:
	v99 = loc10
	v100 = loc7
	v104 = v99 == v100
	loc9 = v104
	v99 = loc9
	branch !v99 l00119F79
	// succ:  l00119F76 l00119F79
l00119F76:
	goto l00119F8D
	// succ:  l00119F8D
l00119F79:
	v99 = loc10
	v100 = 0xFFFFFFFC<32>
	v99 = v99 + v100
	loc11 = v99
	v99 = loc8
	v100 = loc11
	Mem0[v99:word32] = v100
	v99 = loc11
	loc10 = v99
	goto l00119F4E
	// succ:  l00119F4E
l00119F8D:
	v99 = 0x443C<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4438<32>
	v100 = 0x1B88<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1C4<32>
	v100 = arg0
	v101 = 0x4438<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc12 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc12
	v100 = 1<32>
	v99 = v99 & v100
	loc13 = v99
	// succ:  l00119FC0
l00119FC0:
	v99 = loc13
	branch !v99 l00119FCB
	// succ:  l00119FC6 l00119FCB
l00119FC6:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E3
	// succ:  l0011A6E3
l00119FCB:
	v99 = 0x4444<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4440<32>
	v100 = 0x1BA8<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1C5<32>
	v100 = arg0
	v101 = 0x4440<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc14 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc14
	v100 = 1<32>
	v99 = v99 & v100
	loc15 = v99
	v99 = loc15
	branch !v99 l0011A005
	// succ:  l0011A000 l0011A005
l0011A000:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E2
	// succ:  l0011A6E2
l0011A005:
	v99 = 0x444C<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4448<32>
	v100 = 0x24BC<32>
	Mem0[v99:word32] = v100
	v99 = 0x4450<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4454<32>
	v100 = 0<32>
	v105 = SLICE(v100, byte, 0)
	Mem0[v99:byte] = v105
	v99 = fn001197F6()
	loc16 = v99
	v99 = 0x4450<32>
	v100 = loc16
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1C6<32>
	v100 = arg0
	v101 = 0x4448<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc18 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc18
	v100 = 1<32>
	v99 = v99 & v100
	loc19 = v99
	v99 = loc19
	branch !v99 l0011A060
	// succ:  l0011A05B l0011A060
l0011A05B:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E1
	// succ:  l0011A6E1
l0011A060:
	v99 = 0x445C<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4458<32>
	v100 = 0x2580<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1C7<32>
	v100 = arg0
	v101 = 0x4458<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc20 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc20
	v100 = 1<32>
	v99 = v99 & v100
	loc21 = v99
	v99 = loc21
	branch !v99 l0011A09B
	// succ:  l0011A096 l0011A09B
l0011A096:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E0
	// succ:  l0011A6E0
l0011A09B:
	v99 = 0x4464<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4460<32>
	v100 = 0x25C4<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1C8<32>
	v100 = arg0
	v101 = 0x4460<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc22 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc22
	v100 = 1<32>
	v99 = v99 & v100
	loc23 = v99
	v99 = loc23
	branch !v99 l0011A0D6
	// succ:  l0011A0D1 l0011A0D6
l0011A0D1:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6DF
	// succ:  l0011A6DF
l0011A0D6:
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1C9<32>
	v100 = 0x4468<32>
	v101 = 1<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc24 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc24
	v100 = 1<32>
	v99 = v99 & v100
	loc25 = v99
	v99 = loc25
	branch !v99 l0011A0FD
	// succ:  l0011A0F8 l0011A0FD
l0011A0F8:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6DE
	// succ:  l0011A6DE
l0011A0FD:
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1CA<32>
	v100 = arg0
	v101 = 0x4468<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc26 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc26
	v100 = 1<32>
	v99 = v99 & v100
	loc27 = v99
	v99 = loc27
	branch !v99 l0011A124
	// succ:  l0011A11F l0011A124
l0011A11F:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6DD
	// succ:  l0011A6DD
l0011A124:
	v99 = 0x447C<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4478<32>
	v100 = 0x25F4<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1CB<32>
	v100 = arg0
	v101 = 0x4478<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc29 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc29
	v100 = 1<32>
	v99 = v99 & v100
	loc30 = v99
	v99 = loc30
	branch !v99 l0011A15F
	// succ:  l0011A15A l0011A15F
l0011A15A:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6DC
	// succ:  l0011A6DC
l0011A15F:
	v99 = 0x4484<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4480<32>
	v100 = 0x2624<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1CC<32>
	v100 = arg0
	v101 = 0x4480<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc31 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc31
	v100 = 1<32>
	v99 = v99 & v100
	loc32 = v99
	v99 = loc32
	branch !v99 l0011A19A
	// succ:  l0011A195 l0011A19A
l0011A195:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6DB
	// succ:  l0011A6DB
l0011A19A:
	v99 = 0x4488<32>
	v100 = 1<32>
	fn0011A8DF(v99, v100)
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1CD<32>
	v100 = arg0
	v101 = 0x4488<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc33 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc33
	v100 = 1<32>
	v99 = v99 & v100
	loc34 = v99
	v99 = loc34
	branch !v99 l0011A1CA
	// succ:  l0011A1C5 l0011A1CA
l0011A1C5:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6DA
	// succ:  l0011A6DA
l0011A1CA:
	v99 = 0x44A0<32>
	v100 = 1<32>
	fn0011A98B(v99, v100)
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1CE<32>
	v100 = arg0
	v101 = 0x44A0<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc35 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc35
	v100 = 1<32>
	v99 = v99 & v100
	loc36 = v99
	v99 = loc36
	branch !v99 l0011A1FA
	// succ:  l0011A1F5 l0011A1FA
l0011A1F5:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6D9
	// succ:  l0011A6D9
l0011A1FA:
	v99 = 0x44C4<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x44C0<32>
	v100 = 0x1BC8<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1CF<32>
	v100 = arg0
	v101 = 0x44C0<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc37 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc37
	v100 = 1<32>
	v99 = v99 & v100
	loc38 = v99
	v99 = loc38
	branch !v99 l0011A234
	// succ:  l0011A22F l0011A234
l0011A22F:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6D8
	// succ:  l0011A6D8
l0011A234:
	v99 = 0x44CC<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x44C8<32>
	v100 = 0x1C08<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D0<32>
	v100 = arg0
	v101 = 0x44C8<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc40 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc40
	v100 = 1<32>
	v99 = v99 & v100
	loc41 = v99
	v99 = loc41
	branch !v99 l0011A26E
	// succ:  l0011A269 l0011A26E
l0011A269:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6D7
	// succ:  l0011A6D7
l0011A26E:
	v99 = 0x44D4<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x44D0<32>
	v100 = 0x1C48<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D1<32>
	v100 = arg0
	v101 = 0x44D0<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc42 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc42
	v100 = 1<32>
	v99 = v99 & v100
	loc43 = v99
	v99 = loc43
	branch !v99 l0011A2A8
	// succ:  l0011A2A3 l0011A2A8
l0011A2A3:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6D6
	// succ:  l0011A6D6
l0011A2A8:
	v99 = 0x44DC<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x44D8<32>
	v100 = 0x1C7C<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D2<32>
	v100 = arg0
	v101 = 0x44D8<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc44 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc44
	v100 = 1<32>
	v99 = v99 & v100
	loc45 = v99
	v99 = loc45
	branch !v99 l0011A2E2
	// succ:  l0011A2DD l0011A2E2
l0011A2DD:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6D5
	// succ:  l0011A6D5
l0011A2E2:
	v99 = 0x44E4<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x44E0<32>
	v100 = 0x2288<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D3<32>
	v100 = arg0
	v101 = 0x44E0<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc46 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc46
	v100 = 1<32>
	v99 = v99 & v100
	loc47 = v99
	v99 = loc47
	branch !v99 l0011A31F
	// succ:  l0011A318 l0011A31F
l0011A318:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A31F:
	v99 = 0x44EC<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x44E8<32>
	v100 = 0x22C0<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D4<32>
	v100 = arg0
	v101 = 0x44E8<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc48 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc48
	v100 = 1<32>
	v99 = v99 & v100
	loc49 = v99
	v99 = loc49
	branch !v99 l0011A35C
	// succ:  l0011A355 l0011A35C
l0011A355:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A35C:
	v99 = 0x44F4<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x44F0<32>
	v100 = 0x22F8<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D5<32>
	v100 = arg0
	v101 = 0x44F0<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc51 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc51
	v100 = 1<32>
	v99 = v99 & v100
	loc52 = v99
	v99 = loc52
	branch !v99 l0011A399
	// succ:  l0011A392 l0011A399
l0011A392:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A399:
	v99 = 0x44FC<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x44F8<32>
	v100 = 0x2330<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D6<32>
	v100 = arg0
	v101 = 0x44F8<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc53 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc53
	v100 = 1<32>
	v99 = v99 & v100
	loc54 = v99
	v99 = loc54
	branch !v99 l0011A3D6
	// succ:  l0011A3CF l0011A3D6
l0011A3CF:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A3D6:
	v99 = 0x4504<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4500<32>
	v100 = 0x2368<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D7<32>
	v100 = arg0
	v101 = 0x4500<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc55 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc55
	v100 = 1<32>
	v99 = v99 & v100
	loc56 = v99
	v99 = loc56
	branch !v99 l0011A413
	// succ:  l0011A40C l0011A413
l0011A40C:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A413:
	v99 = 0x450C<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4508<32>
	v100 = 0x2384<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D8<32>
	v100 = arg0
	v101 = 0x4508<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc57 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc57
	v100 = 1<32>
	v99 = v99 & v100
	loc58 = v99
	v99 = loc58
	branch !v99 l0011A450
	// succ:  l0011A449 l0011A450
l0011A449:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A450:
	v99 = 0x4514<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4510<32>
	v100 = 0x23A0<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1D9<32>
	v100 = arg0
	v101 = 0x4510<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc59 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc59
	v100 = 1<32>
	v99 = v99 & v100
	loc60 = v99
	v99 = loc60
	branch !v99 l0011A48D
	// succ:  l0011A486 l0011A48D
l0011A486:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A48D:
	v99 = 0x451C<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4518<32>
	v100 = 0x23BC<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1DA<32>
	v100 = arg0
	v101 = 0x4518<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc62 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc62
	v100 = 1<32>
	v99 = v99 & v100
	loc63 = v99
	v99 = loc63
	branch !v99 l0011A4CA
	// succ:  l0011A4C3 l0011A4CA
l0011A4C3:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A4CA:
	v99 = 0x4524<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4520<32>
	v100 = 0x1CB0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4528<32>
	v100 = 0x1CE0<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1DB<32>
	v100 = arg0
	v101 = 0x4520<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc64 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc64
	v100 = 1<32>
	v99 = v99 & v100
	loc65 = v99
	v99 = loc65
	branch !v99 l0011A510
	// succ:  l0011A509 l0011A510
l0011A509:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A510:
	v99 = 0x4534<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4530<32>
	v100 = 0x1D04<32>
	Mem0[v99:word32] = v100
	v99 = 0x4538<32>
	v100 = 0x1D34<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1DC<32>
	v100 = arg0
	v101 = 0x4530<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc66 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc66
	v100 = 1<32>
	v99 = v99 & v100
	loc67 = v99
	v99 = loc67
	branch !v99 l0011A556
	// succ:  l0011A54F l0011A556
l0011A54F:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A556:
	v99 = 0x4544<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4540<32>
	v100 = 0x256C<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x17B<32>
	v99 = invoke_i(v99)
	loc68 = v99
	v99 = Mem0[0x00140048<p32>:word32]
	loc69 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc69
	v100 = 1<32>
	v99 = v99 & v100
	loc70 = v99
	v99 = loc70
	branch !v99 l0011A59B
	// succ:  l0011A588 l0011A59B
l0011A588:
	v99 = ___cxa_find_matching_catch_2()
	loc71 = v99
	v99 = Mem0[0x00140094<p32>:word32]
	loc73 = v99
	v99 = loc73
	loc95 = v99
	v99 = loc71
	loc96 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A59B:
	v99 = 0x4548<32>
	v100 = loc68
	Mem0[v99:word32] = v100
	v99 = 0x4540<32>
	v100 = 0x2258<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1DD<32>
	v100 = arg0
	v101 = 0x4540<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc74 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc74
	v100 = 1<32>
	v99 = v99 & v100
	loc75 = v99
	v99 = loc75
	branch !v99 l0011A5D8
	// succ:  l0011A5D1 l0011A5D8
l0011A5D1:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A5D8:
	v99 = 0x4554<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4550<32>
	v100 = 0x256C<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x17B<32>
	v99 = invoke_i(v99)
	loc76 = v99
	v99 = Mem0[0x00140048<p32>:word32]
	loc77 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc77
	v100 = 1<32>
	v99 = v99 & v100
	loc78 = v99
	v99 = loc78
	branch !v99 l0011A61D
	// succ:  l0011A60A l0011A61D
l0011A60A:
	v99 = ___cxa_find_matching_catch_2()
	loc79 = v99
	v99 = Mem0[0x00140094<p32>:word32]
	loc80 = v99
	v99 = loc80
	loc95 = v99
	v99 = loc79
	loc96 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A61D:
	v99 = 0x4558<32>
	v100 = loc76
	Mem0[v99:word32] = v100
	v99 = 0x4550<32>
	v100 = 0x2270<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1DE<32>
	v100 = arg0
	v101 = 0x4550<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc81 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc81
	v100 = 1<32>
	v99 = v99 & v100
	loc82 = v99
	v99 = loc82
	branch !v99 l0011A65A
	// succ:  l0011A653 l0011A65A
l0011A653:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A65A:
	v99 = 0x4564<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4560<32>
	v100 = 0x23D8<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1DF<32>
	v100 = arg0
	v101 = 0x4560<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc84 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc84
	v100 = 1<32>
	v99 = v99 & v100
	loc85 = v99
	v99 = loc85
	branch !v99 l0011A697
	// succ:  l0011A690 l0011A697
l0011A690:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A697:
	v99 = 0x456C<32>
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0x4568<32>
	v100 = 0x23F8<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = 0x1E0<32>
	v100 = arg0
	v101 = 0x4568<32>
	invoke_vii(v99, v100, v101)
	v99 = Mem0[0x00140048<p32>:word32]
	loc86 = v99
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v99 = loc86
	v100 = 1<32>
	v99 = v99 & v100
	loc87 = v99
	v99 = loc87
	branch !v99 l0011A6D4
	// succ:  l0011A6CD l0011A6D4
l0011A6CD:
	v99 = 0x2A<32>
	loc97 = v99
	goto l0011A6E4
	// succ:  l0011A6E4
l0011A6D4:
	return
	// succ:  fn00119EA4_exit
l0011A6D5:
	// succ:  l0011A6D6
l0011A6D6:
	// succ:  l0011A6D7
l0011A6D7:
	// succ:  l0011A6D8
l0011A6D8:
	// succ:  l0011A6D9
l0011A6D9:
	// succ:  l0011A6DA
l0011A6DA:
	// succ:  l0011A6DB
l0011A6DB:
	// succ:  l0011A6DC
l0011A6DC:
	// succ:  l0011A6DD
l0011A6DD:
	// succ:  l0011A6DE
l0011A6DE:
	// succ:  l0011A6DF
l0011A6DF:
	// succ:  l0011A6E0
l0011A6E0:
	// succ:  l0011A6E1
l0011A6E1:
	// succ:  l0011A6E2
l0011A6E2:
	// succ:  l0011A6E3
l0011A6E3:
	// succ:  l0011A6E4
l0011A6E4:
	v99 = loc97
	v100 = 0x2A<32>
	v104 = v99 == v100
	branch !v104 l0011A6FD
	// succ:  l0011A6EC l0011A6FD
l0011A6EC:
	v99 = ___cxa_find_matching_catch_2()
	loc92 = v99
	v99 = Mem0[0x00140094<p32>:word32]
	loc93 = v99
	v99 = loc93
	loc95 = v99
	v99 = loc92
	loc96 = v99
	// succ:  l0011A6FD
l0011A6FD:
	v99 = loc72
	fn0011BAF7(v99)
	v99 = loc95
	loc2 = v99
	v99 = loc96
	loc3 = v99
	// succ:  l0011A70A
l0011A70A:
	v99 = loc39
	fn00119406(v99)
	v99 = loc2
	loc4 = v99
	v99 = loc3
	loc5 = v99
	// succ:  l0011A718
l0011A718:
	v99 = loc5
	___resumeException(v99)
	// succ:  l0011A71D
l0011A71D:
	return
	// succ:  fn00119EA4_exit
fn00119EA4_exit:


// fn0011A71F
// Return size: 0
void fn0011A71F(word32 arg0, word32 arg1)
fn0011A71F_entry:
	// succ:  l0011A71F
l0011A71F:
	v12 = Mem0[0x00140030<p32>:word32]
	loc11 = v12
	v12 = arg0
	v13 = 0<32>
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = 4<32>
	v12 = v12 + v13
	loc2 = v12
	v12 = loc2
	v13 = 0<32>
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = 8<32>
	v12 = v12 + v13
	loc3 = v12
	v12 = loc3
	v13 = 0<32>
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = 0x80<32>
	v12 = v12 + v13
	loc4 = v12
	v12 = loc4
	v13 = 0<32>
	v14 = SLICE(v13, byte, 0)
	Mem0[v12:byte] = v14
	v12 = arg1
	v13 = 0<32>
	v15 = v12 == v13
	loc5 = v15
	// succ:  l0011A75E
l0011A75E:
	v12 = loc5
	v15 = v12 == 0<32>
	branch !v15 l0011A7A2
	// succ:  l0011A765 l0011A7A2
l0011A765:
	v12 = 0<32>
	Mem0[0x00140048<p32>:word32] = v12
	v12 = 0x1E1<32>
	v13 = arg0
	v16 = arg1
	invoke_vii(v12, v13, v16)
	v12 = Mem0[0x00140048<p32>:word32]
	loc6 = v12
	v12 = 0<32>
	Mem0[0x00140048<p32>:word32] = v12
	v12 = loc6
	v13 = 1<32>
	v12 = v12 & v13
	loc7 = v12
	v12 = loc7
	branch !v12 l0011A797
	// succ:  l0011A785 l0011A797
l0011A785:
	v12 = ___cxa_find_matching_catch_2()
	loc8 = v12
	v12 = Mem0[0x00140094<p32>:word32]
	loc9 = v12
	v12 = arg0
	fn00119406(v12)
	v12 = loc8
	___resumeException(v12)
	goto l0011A7A0
	// succ:  l0011A7A0
l0011A797:
	v12 = arg0
	v13 = arg1
	fn0011AEEB(v12, v13)
	goto l0011A7A2
	// succ:  l0011A7A2
l0011A7A0:
	// succ:  l0011A7A2
l0011A7A2:
	// succ:  l0011A7A2
l0011A7A2:
	return
	// succ:  fn0011A71F_exit
l0011A7A4:
	return
	// succ:  fn0011A71F_exit
fn0011A71F_exit:


// fn0011A7A6
// Return size: 0
void fn0011A7A6(word32 arg0, word32 arg1)
fn0011A7A6_entry:
	// succ:  l0011A7A6
l0011A7A6:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4C60<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A7A6_exit
l0011A7BF:
	return
	// succ:  fn0011A7A6_exit
fn0011A7A6_exit:


// fn0011A7C1
// Return size: 0
void fn0011A7C1(word32 arg0, word32 arg1)
fn0011A7C1_entry:
	// succ:  l0011A7C1
l0011A7C1:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4C68<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A7C1_exit
l0011A7DA:
	return
	// succ:  fn0011A7C1_exit
fn0011A7C1_exit:


// fn0011A7DC
// Return size: 0
void fn0011A7DC(word32 arg0, word32 arg1)
fn0011A7DC_entry:
	// succ:  l0011A7DC
l0011A7DC:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4C70<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A7DC_exit
l0011A7F5:
	return
	// succ:  fn0011A7DC_exit
fn0011A7DC_exit:


// fn0011A7F7
// Return size: 0
void fn0011A7F7(word32 arg0, word32 arg1)
fn0011A7F7_entry:
	// succ:  l0011A7F7
l0011A7F7:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4C90<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A7F7_exit
l0011A810:
	return
	// succ:  fn0011A7F7_exit
fn0011A7F7_exit:


// fn0011A812
// Return size: 0
void fn0011A812(word32 arg0, word32 arg1)
fn0011A812_entry:
	// succ:  l0011A812
l0011A812:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5370<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A812_exit
l0011A82B:
	return
	// succ:  fn0011A812_exit
fn0011A812_exit:


// fn0011A82D
// Return size: 0
void fn0011A82D(word32 arg0, word32 arg1)
fn0011A82D_entry:
	// succ:  l0011A82D
l0011A82D:
	v12 = Mem0[0x00140030<p32>:word32]
	loc11 = v12
	v12 = arg1
	v13 = 0xFFFFFFFF<32>
	v12 = v12 + v13
	loc2 = v12
	v12 = arg0
	v13 = 4<32>
	v12 = v12 + v13
	loc3 = v12
	v12 = loc3
	v13 = loc2
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = 0x2478<32>
	Mem0[v12:word32] = v13
	v12 = 0<32>
	Mem0[0x00140048<p32>:word32] = v12
	v12 = 0x17B<32>
	v12 = invoke_i(v12)
	loc4 = v12
	v12 = Mem0[0x00140048<p32>:word32]
	loc5 = v12
	v12 = 0<32>
	Mem0[0x00140048<p32>:word32] = v12
	v12 = loc5
	v13 = 1<32>
	v12 = v12 & v13
	loc6 = v12
	v12 = loc6
	branch !v12 l0011A87C
	// succ:  l0011A86F l0011A87C
l0011A86F:
	v12 = ___cxa_find_matching_catch_2()
	loc8 = v12
	v12 = Mem0[0x00140094<p32>:word32]
	loc9 = v12
	v12 = loc8
	___resumeException(v12)
	goto l0011A88B
	// succ:  l0011A88B
l0011A87C:
	v12 = arg0
	v13 = 8<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc7
	v13 = loc4
	Mem0[v12:word32] = v13
	return
	// succ:  fn0011A82D_exit
l0011A88B:
	// succ:  l0011A88C
l0011A88C:
	return
	// succ:  fn0011A82D_exit
fn0011A82D_exit:


// fn0011A88E
// Return size: 0
void fn0011A88E(word32 arg0, word32 arg1)
fn0011A88E_entry:
	// succ:  l0011A88E
l0011A88E:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5378<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A88E_exit
l0011A8A7:
	return
	// succ:  fn0011A88E_exit
fn0011A88E_exit:


// fn0011A8A9
// Return size: 0
void fn0011A8A9(word32 arg0, word32 arg1)
fn0011A8A9_entry:
	// succ:  l0011A8A9
l0011A8A9:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5380<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A8A9_exit
l0011A8C2:
	return
	// succ:  fn0011A8A9_exit
fn0011A8A9_exit:


// fn0011A8C4
// Return size: 0
void fn0011A8C4(word32 arg0, word32 arg1)
fn0011A8C4_entry:
	// succ:  l0011A8C4
l0011A8C4:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5388<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A8C4_exit
l0011A8DD:
	return
	// succ:  fn0011A8C4_exit
fn0011A8C4_exit:


// fn0011A8DF
// Return size: 0
void fn0011A8DF(word32 arg0, word32 arg1)
fn0011A8DF_entry:
	// succ:  l0011A8DF
l0011A8DF:
	v13 = Mem0[0x00140030<p32>:word32]
	loc12 = v13
	v13 = arg1
	v14 = 0xFFFFFFFF<32>
	v13 = v13 + v14
	loc3 = v13
	v13 = arg0
	v14 = 4<32>
	v13 = v13 + v14
	loc4 = v13
	v13 = loc4
	v14 = loc3
	Mem0[v13:word32] = v14
	v13 = arg0
	v14 = 0x24F0<32>
	Mem0[v13:word32] = v14
	v13 = arg0
	v14 = 8<32>
	v13 = v13 + v14
	loc5 = v13
	v13 = loc5
	v14 = 0x2E<32>
	v15 = SLICE(v14, byte, 0)
	Mem0[v13:byte] = v15
	v13 = arg0
	v14 = 9<32>
	v13 = v13 + v14
	loc6 = v13
	v13 = loc6
	v14 = 0x2C<32>
	v16 = SLICE(v14, byte, 0)
	Mem0[v13:byte] = v16
	v13 = arg0
	v14 = 0xC<32>
	v13 = v13 + v14
	loc7 = v13
	v13 = loc7
	v17 = 0<64>
	Mem0[v13:word64] = v17
	v13 = loc7
	v14 = 8<32>
	v13 = v13 + v14
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v13 = 0<32>
	loc2 = v13
	// succ:  l0011A93D
l0011A93D:
	v13 = loc2
	v14 = 3<32>
	v18 = v13 == v14
	loc10 = v18
	v13 = loc10
	branch !v13 l0011A94D
	// succ:  l0011A94A l0011A94D
l0011A94A:
	goto l0011A96B
	// succ:  l0011A96B
l0011A94D:
	v13 = loc7
	v14 = loc2
	v19 = 2<32>
	v14 = v14 << v19
	v13 = v13 + v14
	loc8 = v13
	v13 = loc8
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v13 = loc2
	v14 = 1<32>
	v13 = v13 + v14
	loc9 = v13
	v13 = loc9
	loc2 = v13
	goto l0011A8DF
	// succ:  l0011A8DF
l0011A96B:
	return
	// succ:  fn0011A8DF_exit
l0011A96E:
	return
	// succ:  fn0011A8DF_exit
fn0011A8DF_exit:


// fn0011A970
// Return size: 0
void fn0011A970(word32 arg0, word32 arg1)
fn0011A970_entry:
	// succ:  l0011A970
l0011A970:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4C80<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011A970_exit
l0011A989:
	return
	// succ:  fn0011A970_exit
fn0011A970_exit:


// fn0011A98B
// Return size: 0
void fn0011A98B(word32 arg0, word32 arg1)
fn0011A98B_entry:
	// succ:  l0011A98B
l0011A98B:
	v13 = Mem0[0x00140030<p32>:word32]
	loc12 = v13
	v13 = arg1
	v14 = 0xFFFFFFFF<32>
	v13 = v13 + v14
	loc3 = v13
	v13 = arg0
	v14 = 4<32>
	v13 = v13 + v14
	loc4 = v13
	v13 = loc4
	v14 = loc3
	Mem0[v13:word32] = v14
	v13 = arg0
	v14 = 0x2518<32>
	Mem0[v13:word32] = v14
	v13 = arg0
	v14 = 8<32>
	v13 = v13 + v14
	loc5 = v13
	v13 = loc5
	v14 = 0x2E<32>
	Mem0[v13:word32] = v14
	v13 = arg0
	v14 = 0xC<32>
	v13 = v13 + v14
	loc6 = v13
	v13 = loc6
	v14 = 0x2C<32>
	Mem0[v13:word32] = v14
	v13 = arg0
	v14 = 0x10<32>
	v13 = v13 + v14
	loc7 = v13
	v13 = loc7
	v15 = 0<64>
	Mem0[v13:word64] = v15
	v13 = loc7
	v14 = 8<32>
	v13 = v13 + v14
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v13 = 0<32>
	loc2 = v13
	// succ:  l0011A9E9
l0011A9E9:
	v13 = loc2
	v14 = 3<32>
	v16 = v13 == v14
	loc10 = v16
	v13 = loc10
	branch !v13 l0011A9F9
	// succ:  l0011A9F6 l0011A9F9
l0011A9F6:
	goto l0011AA17
	// succ:  l0011AA17
l0011A9F9:
	v13 = loc7
	v14 = loc2
	v17 = 2<32>
	v14 = v14 << v17
	v13 = v13 + v14
	loc8 = v13
	v13 = loc8
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v13 = loc2
	v14 = 1<32>
	v13 = v13 + v14
	loc9 = v13
	v13 = loc9
	loc2 = v13
	goto l0011A98B
	// succ:  l0011A98B
l0011AA17:
	return
	// succ:  fn0011A98B_exit
l0011AA1A:
	return
	// succ:  fn0011A98B_exit
fn0011A98B_exit:


// fn0011AA1C
// Return size: 0
void fn0011AA1C(word32 arg0, word32 arg1)
fn0011AA1C_entry:
	// succ:  l0011AA1C
l0011AA1C:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4C98<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AA1C_exit
l0011AA35:
	return
	// succ:  fn0011AA1C_exit
fn0011AA1C_exit:


// fn0011AA37
// Return size: 0
void fn0011AA37(word32 arg0, word32 arg1)
fn0011AA37_entry:
	// succ:  l0011AA37
l0011AA37:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4C88<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AA37_exit
l0011AA50:
	return
	// succ:  fn0011AA37_exit
fn0011AA37_exit:


// fn0011AA52
// Return size: 0
void fn0011AA52(word32 arg0, word32 arg1)
fn0011AA52_entry:
	// succ:  l0011AA52
l0011AA52:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4CA0<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AA52_exit
l0011AA6B:
	return
	// succ:  fn0011AA52_exit
fn0011AA52_exit:


// fn0011AA6D
// Return size: 0
void fn0011AA6D(word32 arg0, word32 arg1)
fn0011AA6D_entry:
	// succ:  l0011AA6D
l0011AA6D:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4CA8<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AA6D_exit
l0011AA86:
	return
	// succ:  fn0011AA6D_exit
fn0011AA6D_exit:


// fn0011AA88
// Return size: 0
void fn0011AA88(word32 arg0, word32 arg1)
fn0011AA88_entry:
	// succ:  l0011AA88
l0011AA88:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4CB0<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AA88_exit
l0011AAA1:
	return
	// succ:  fn0011AA88_exit
fn0011AA88_exit:


// fn0011AAA3
// Return size: 0
void fn0011AAA3(word32 arg0, word32 arg1)
fn0011AAA3_entry:
	// succ:  l0011AAA3
l0011AAA3:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5320<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AAA3_exit
l0011AABC:
	return
	// succ:  fn0011AAA3_exit
fn0011AAA3_exit:


// fn0011AABE
// Return size: 0
void fn0011AABE(word32 arg0, word32 arg1)
fn0011AABE_entry:
	// succ:  l0011AABE
l0011AABE:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5328<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AABE_exit
l0011AAD7:
	return
	// succ:  fn0011AABE_exit
fn0011AABE_exit:


// fn0011AAD9
// Return size: 0
void fn0011AAD9(word32 arg0, word32 arg1)
fn0011AAD9_entry:
	// succ:  l0011AAD9
l0011AAD9:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5330<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AAD9_exit
l0011AAF2:
	return
	// succ:  fn0011AAD9_exit
fn0011AAD9_exit:


// fn0011AAF4
// Return size: 0
void fn0011AAF4(word32 arg0, word32 arg1)
fn0011AAF4_entry:
	// succ:  l0011AAF4
l0011AAF4:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5338<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AAF4_exit
l0011AB0D:
	return
	// succ:  fn0011AAF4_exit
fn0011AAF4_exit:


// fn0011AB0F
// Return size: 0
void fn0011AB0F(word32 arg0, word32 arg1)
fn0011AB0F_entry:
	// succ:  l0011AB0F
l0011AB0F:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5340<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AB0F_exit
l0011AB28:
	return
	// succ:  fn0011AB0F_exit
fn0011AB0F_exit:


// fn0011AB2A
// Return size: 0
void fn0011AB2A(word32 arg0, word32 arg1)
fn0011AB2A_entry:
	// succ:  l0011AB2A
l0011AB2A:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5348<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AB2A_exit
l0011AB43:
	return
	// succ:  fn0011AB2A_exit
fn0011AB2A_exit:


// fn0011AB45
// Return size: 0
void fn0011AB45(word32 arg0, word32 arg1)
fn0011AB45_entry:
	// succ:  l0011AB45
l0011AB45:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5350<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AB45_exit
l0011AB5E:
	return
	// succ:  fn0011AB45_exit
fn0011AB45_exit:


// fn0011AB60
// Return size: 0
void fn0011AB60(word32 arg0, word32 arg1)
fn0011AB60_entry:
	// succ:  l0011AB60
l0011AB60:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5358<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AB60_exit
l0011AB79:
	return
	// succ:  fn0011AB60_exit
fn0011AB60_exit:


// fn0011AB7B
// Return size: 0
void fn0011AB7B(word32 arg0, word32 arg1)
fn0011AB7B_entry:
	// succ:  l0011AB7B
l0011AB7B:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x4FDC<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AB7B_exit
l0011AB94:
	return
	// succ:  fn0011AB7B_exit
fn0011AB7B_exit:


// fn0011AB96
// Return size: 0
void fn0011AB96(word32 arg0, word32 arg1)
fn0011AB96_entry:
	// succ:  l0011AB96
l0011AB96:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5308<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AB96_exit
l0011ABAF:
	return
	// succ:  fn0011AB96_exit
fn0011AB96_exit:


// fn0011ABB1
// Return size: 0
void fn0011ABB1(word32 arg0, word32 arg1)
fn0011ABB1_entry:
	// succ:  l0011ABB1
l0011ABB1:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5310<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011ABB1_exit
l0011ABCA:
	return
	// succ:  fn0011ABB1_exit
fn0011ABB1_exit:


// fn0011ABCC
// Return size: 0
void fn0011ABCC(word32 arg0, word32 arg1)
fn0011ABCC_entry:
	// succ:  l0011ABCC
l0011ABCC:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5318<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011ABCC_exit
l0011ABE5:
	return
	// succ:  fn0011ABCC_exit
fn0011ABCC_exit:


// fn0011ABE7
// Return size: 0
void fn0011ABE7(word32 arg0, word32 arg1)
fn0011ABE7_entry:
	// succ:  l0011ABE7
l0011ABE7:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5360<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011ABE7_exit
l0011AC00:
	return
	// succ:  fn0011ABE7_exit
fn0011ABE7_exit:


// fn0011AC02
// Return size: 0
void fn0011AC02(word32 arg0, word32 arg1)
fn0011AC02_entry:
	// succ:  l0011AC02
l0011AC02:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = 0x5368<32>
	v5 = fn000EAE12(v5)
	loc2 = v5
	v5 = arg0
	v6 = arg1
	v7 = loc2
	fn0011AC1D(v5, v6, v7)
	return
	// succ:  fn0011AC02_exit
l0011AC1B:
	return
	// succ:  fn0011AC02_exit
fn0011AC02_exit:


// fn0011AC1D
// Return size: 0
void fn0011AC1D(word32 arg0, word32 arg1, word32 arg2)
fn0011AC1D_entry:
	// succ:  l0011AC1D
l0011AC1D:
	v27 = Mem0[0x00140030<p32>:word32]
	loc27 = v27
	v27 = arg1
	fn0011B41A(v27)
	v27 = arg0
	v28 = 8<32>
	v27 = v27 + v28
	loc19 = v27
	v27 = arg0
	v28 = 0xC<32>
	v27 = v27 + v28
	loc20 = v27
	v27 = loc20
	v27 = Mem0[v27:word32]
	loc21 = v27
	v27 = loc19
	v27 = Mem0[v27:word32]
	loc22 = v27
	v27 = loc21
	v28 = loc22
	v27 = v27 - v28
	loc23 = v27
	v27 = loc23
	v28 = 2<32>
	v27 = v27 >> v28
	loc24 = v27
	v27 = loc24
	v28 = arg2
	v29 = v27 >u v28
	loc25 = v29
	// succ:  l0011AC59
l0011AC59:
	v27 = loc25
	branch !v27 l0011AC6C
	// succ:  l0011AC5F l0011AC6C
l0011AC5F:
	v27 = loc22
	loc6 = v27
	v27 = loc19
	loc4 = v27
	v27 = loc6
	loc14 = v27
	goto l0011ACC5
	// succ:  l0011ACC5
l0011AC6C:
	v27 = arg2
	v28 = 1<32>
	v27 = v27 + v28
	loc7 = v27
	v27 = 0<32>
	Mem0[0x00140048<p32>:word32] = v27
	v27 = 0x1E2<32>
	v28 = loc19
	v30 = loc7
	invoke_vii(v27, v28, v30)
	v27 = Mem0[0x00140048<p32>:word32]
	loc8 = v27
	v27 = 0<32>
	Mem0[0x00140048<p32>:word32] = v27
	v27 = loc8
	v28 = 1<32>
	v27 = v27 & v28
	loc9 = v27
	v27 = loc9
	v29 = v27 == 0<32>
	branch !v29 l0011ACA6
	// succ:  l0011AC94 l0011ACA6
l0011AC94:
	v27 = loc19
	v27 = Mem0[v27:word32]
	loc3 = v27
	v27 = loc19
	loc4 = v27
	v27 = loc3
	loc14 = v27
	goto l0011ACC6
	// succ:  l0011ACC6
l0011ACA6:
	v27 = ___cxa_find_matching_catch_2()
	loc10 = v27
	v27 = Mem0[0x00140094<p32>:word32]
	loc11 = v27
	v27 = arg1
	v28 = 0<32>
	v29 = v27 == v28
	loc12 = v29
	v27 = loc12
	v29 = v27 == 0<32>
	branch !v29 l0011ACC1
	// succ:  l0011ACBA l0011ACC1
l0011ACBA:
	v27 = arg1
	v27 = fn0011B43F(v27)
	// succ:  l0011ACC1
l0011ACC1:
	v27 = loc10
	___resumeException(v27)
	// succ:  l0011ACC5
l0011ACC5:
	// succ:  l0011ACC6
l0011ACC6:
	v27 = loc14
	v28 = arg2
	v30 = 2<32>
	v28 = v28 << v30
	v27 = v27 + v28
	loc13 = v27
	v27 = loc13
	v27 = Mem0[v27:word32]
	loc15 = v27
	v27 = loc15
	v28 = 0<32>
	v29 = v27 == v28
	loc16 = v29
	v27 = loc16
	branch !v27 l0011ACE8
	// succ:  l0011ACE3 l0011ACE8
l0011ACE3:
	v27 = loc14
	loc18 = v27
	goto l0011ACF9
	// succ:  l0011ACF9
l0011ACE8:
	v27 = loc15
	v27 = fn0011B43F(v27)
	v27 = loc4
	v27 = Mem0[v27:word32]
	loc5 = v27
	v27 = loc5
	loc18 = v27
	// succ:  l0011ACF9
l0011ACF9:
	v27 = loc18
	v28 = arg2
	v30 = 2<32>
	v28 = v28 << v30
	v27 = v27 + v28
	loc17 = v27
	v27 = loc17
	v28 = arg1
	Mem0[v27:word32] = v28
	return
	// succ:  fn0011AC1D_exit
l0011AD0C:
	return
	// succ:  fn0011AC1D_exit
fn0011AC1D_exit:


// fn0011AD0E
// Return size: 0
void fn0011AD0E(word32 arg0, word32 arg1)
fn0011AD0E_entry:
	// succ:  l0011AD0E
l0011AD0E:
	v18 = Mem0[0x00140030<p32>:word32]
	loc17 = v18
	v18 = arg0
	v19 = 4<32>
	v18 = v18 + v19
	loc8 = v18
	v18 = loc8
	v18 = Mem0[v18:word32]
	loc9 = v18
	v18 = arg0
	v18 = Mem0[v18:word32]
	loc10 = v18
	v18 = loc9
	v19 = loc10
	v18 = v18 - v19
	loc11 = v18
	v18 = loc11
	v19 = 2<32>
	v18 = v18 >> v19
	loc12 = v18
	v18 = loc12
	v19 = arg1
	v20 = v18 <u v19
	loc13 = v20
	v18 = loc10
	loc14 = v18
	v18 = loc9
	loc15 = v18
	// succ:  l0011AD46
l0011AD46:
	v18 = loc13
	branch !v18 l0011AD5B
	// succ:  l0011AD4C l0011AD5B
l0011AD4C:
	v18 = arg1
	v19 = loc12
	v18 = v18 - v19
	loc2 = v18
	v18 = arg0
	v19 = loc2
	fn0011AD9F(v18, v19)
	goto l0011AD9A
	// succ:  l0011AD9A
l0011AD5B:
	v18 = loc12
	v19 = arg1
	v20 = v18 >u v19
	loc3 = v20
	v18 = loc3
	branch !v18 l0011AD9A
	// succ:  l0011AD66 l0011AD9A
l0011AD66:
	v18 = loc14
	v19 = arg1
	v21 = 2<32>
	v19 = v19 << v21
	v18 = v18 + v19
	loc4 = v18
	v18 = loc15
	loc6 = v18
	v18 = loc6
	v19 = loc4
	v20 = v18 == v19
	loc5 = v20
	v18 = loc5
	branch !v18 l0011AD84
	// succ:  l0011AD81 l0011AD84
l0011AD81:
	goto l0011AD9B
	// succ:  l0011AD9B
l0011AD84:
	v18 = loc6
	v19 = 0xFFFFFFFC<32>
	v18 = v18 + v19
	loc7 = v18
	v18 = loc8
	v19 = loc7
	Mem0[v18:word32] = v19
	v18 = loc7
	loc6 = v18
	goto l0011AD66
	// succ:  l0011AD66
l0011AD9A:
	// succ:  l0011AD9A
l0011AD9A:
	// succ:  l0011AD9B
l0011AD9B:
	return
	// succ:  fn0011AD0E_exit
l0011AD9D:
	return
	// succ:  fn0011AD0E_exit
fn0011AD0E_exit:


// fn0011AD9F
// Return size: 0
void fn0011AD9F(word32 arg0, word32 arg1)
fn0011AD9F_entry:
	// succ:  l0011AD9F
l0011AD9F:
	v33 = Mem0[0x00140030<p32>:word32]
	loc32 = v33
	v33 = Mem0[0x00140030<p32>:word32]
	v34 = 0x20<32>
	v33 = v33 + v34
	Mem0[0x00140030<p32>:word32] = v33
	v33 = Mem0[0x00140030<p32>:word32]
	v34 = Mem0[0x00140034<p32>:word32]
	v35 = v33 >= v34
	branch !v35 l0011ADB8
	// succ:  l0011ADB3 l0011ADB8
l0011ADB3:
	v33 = 0x20<32>
	abortStackOverflow(v33)
	// succ:  l0011ADB8
l0011ADB8:
	v33 = loc32
	loc16 = v33
	v33 = arg0
	v34 = 8<32>
	v33 = v33 + v34
	loc24 = v33
	v33 = loc24
	v33 = Mem0[v33:word32]
	loc25 = v33
	v33 = arg0
	v34 = 4<32>
	v33 = v33 + v34
	loc26 = v33
	v33 = loc26
	v33 = Mem0[v33:word32]
	loc27 = v33
	v33 = loc25
	v34 = loc27
	v33 = v33 - v34
	loc28 = v33
	v33 = loc28
	v34 = 2<32>
	v33 = v33 >> v34
	loc29 = v33
	v33 = loc29
	v34 = arg1
	v35 = v33 <u v34
	loc30 = v35
	v33 = loc30
	branch !v33 l0011AEDC
	// succ:  l0011ADF1 l0011AEDC
l0011ADF1:
	v33 = arg0
	v33 = Mem0[v33:word32]
	loc6 = v33
	v33 = loc27
	v34 = loc6
	v33 = v33 - v34
	loc7 = v33
	v33 = loc7
	v34 = 2<32>
	v33 = v33 >> v34
	loc8 = v33
	v33 = loc8
	v34 = arg1
	v33 = v33 + v34
	loc9 = v33
	v33 = loc9
	v34 = 0x3FFFFFFF<32>
	v35 = v33 >u v34
	loc10 = v35
	v33 = loc10
	branch !v33 l0011AE22
	// succ:  l0011AE1C l0011AE22
l0011AE1C:
	v33 = arg0
	fn00119E4F(v33)
	// succ:  l0011AE22
l0011AE22:
	v33 = arg0
	v34 = 0x10<32>
	v33 = v33 + v34
	loc11 = v33
	v33 = loc25
	v34 = loc6
	v33 = v33 - v34
	loc12 = v33
	v33 = loc12
	v34 = 2<32>
	v33 = v33 >> v34
	loc13 = v33
	v33 = loc13
	v34 = 0x1FFFFFFF<32>
	v35 = v33 <u v34
	loc14 = v35
	v33 = loc12
	v34 = 1<32>
	v33 = v33 >> v34
	loc15 = v33
	v33 = loc15
	v34 = loc9
	v35 = v33 <u v34
	loc17 = v35
	v33 = loc17
	branch !v33 l0011AE57
	// succ:  l0011AE54 l0011AE57
l0011AE54:
	v33 = loc9
	goto l0011AE59
	// succ:  l0011AE59
l0011AE57:
	v33 = loc15
	// succ:  l0011AE59
l0011AE59:
	loc5 = v33
	v33 = loc14
	branch !v33 l0011AE63
	// succ:  l0011AE60 l0011AE63
l0011AE60:
	v33 = loc5
	goto l0011AE69
	// succ:  l0011AE69
l0011AE63:
	v33 = 0x3FFFFFFF<32>
	// succ:  l0011AE69
l0011AE69:
	loc3 = v33
	v33 = loc16
	v34 = loc3
	v36 = loc8
	v37 = loc11
	fn0011AF4C(v33, v34, v36, v37)
	v33 = loc16
	v34 = 8<32>
	v33 = v33 + v34
	loc18 = v33
	v33 = loc18
	v33 = Mem0[v33:word32]
	loc4 = v33
	v33 = arg1
	loc2 = v33
	v33 = loc4
	loc19 = v33
	// succ:  l0011AE8F
l0011AE8F:
	v33 = loc19
	v34 = 0<32>
	Mem0[v33:word32] = v34
	v33 = loc18
	v33 = Mem0[v33:word32]
	loc20 = v33
	v33 = loc20
	v34 = 4<32>
	v33 = v33 + v34
	loc21 = v33
	v33 = loc18
	v34 = loc21
	Mem0[v33:word32] = v34
	v33 = loc2
	v34 = 0xFFFFFFFF<32>
	v33 = v33 + v34
	loc22 = v33
	v33 = loc22
	v34 = 0<32>
	v35 = v33 == v34
	loc23 = v35
	v33 = loc23
	branch !v33 l0011AEC2
	// succ:  l0011AEBF l0011AEC2
l0011AEBF:
	goto l0011AECD
	// succ:  l0011AECD
l0011AEC2:
	v33 = loc22
	loc2 = v33
	v33 = loc21
	loc19 = v33
	// succ:  l0011AECA
l0011AECA:
	goto l0011AE69
	// succ:  l0011AE69
l0011AECD:
	v33 = arg0
	v34 = loc16
	fn0011B01B(v33, v34)
	v33 = loc16
	fn0011B113(v33)
	goto l0011AEE3
	// succ:  l0011AEE3
l0011AEDC:
	v33 = arg0
	v34 = arg1
	fn0011AEEB(v33, v34)
	// succ:  l0011AEE3
l0011AEE3:
	v33 = loc32
	Mem0[0x00140030<p32>:word32] = v33
	return
	// succ:  fn0011AD9F_exit
l0011AEE9:
	return
	// succ:  fn0011AD9F_exit
fn0011AD9F_exit:


// fn0011AEEB
// Return size: 0
void fn0011AEEB(word32 arg0, word32 arg1)
fn0011AEEB_entry:
	// succ:  l0011AEEB
l0011AEEB:
	v12 = Mem0[0x00140030<p32>:word32]
	loc11 = v12
	v12 = arg0
	v13 = 4<32>
	v12 = v12 + v13
	loc4 = v12
	v12 = loc4
	v12 = Mem0[v12:word32]
	loc3 = v12
	v12 = arg1
	loc2 = v12
	v12 = loc3
	loc5 = v12
	// succ:  l0011AF09
l0011AF09:
	v12 = loc5
	v13 = 0<32>
	Mem0[v12:word32] = v13
	v12 = loc4
	v12 = Mem0[v12:word32]
	loc6 = v12
	v12 = loc6
	v13 = 4<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc4
	v13 = loc7
	Mem0[v12:word32] = v13
	v12 = loc2
	v13 = 0xFFFFFFFF<32>
	v12 = v12 + v13
	loc8 = v12
	v12 = loc8
	v13 = 0<32>
	v14 = v12 == v13
	loc9 = v14
	v12 = loc9
	branch !v12 l0011AF3C
	// succ:  l0011AF39 l0011AF3C
l0011AF39:
	goto l0011AF47
	// succ:  l0011AF47
l0011AF3C:
	v12 = loc8
	loc2 = v12
	v12 = loc7
	loc5 = v12
	// succ:  l0011AF44
l0011AF44:
	goto l0011AEEB
	// succ:  l0011AEEB
l0011AF47:
	return
	// succ:  fn0011AEEB_exit
l0011AF4A:
	return
	// succ:  fn0011AEEB_exit
fn0011AEEB_exit:


// fn0011AF4C
// Return size: 0
void fn0011AF4C(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011AF4C_entry:
	// succ:  l0011AF4C
l0011AF4C:
	v20 = Mem0[0x00140030<p32>:word32]
	loc21 = v20
	v20 = arg0
	v21 = 0xC<32>
	v20 = v20 + v21
	loc13 = v20
	v20 = loc13
	v21 = 0<32>
	Mem0[v20:word32] = v21
	v20 = arg0
	v21 = 0x10<32>
	v20 = v20 + v21
	loc14 = v20
	v20 = loc14
	v21 = arg3
	Mem0[v20:word32] = v21
	v20 = arg1
	v21 = 0<32>
	v22 = v20 == v21
	loc15 = v22
	// succ:  l0011AF75
l0011AF75:
	v20 = loc15
	branch !v20 l0011AF80
	// succ:  l0011AF7B l0011AF80
l0011AF7B:
	v20 = 0<32>
	loc7 = v20
	goto l0011AFD1
	// succ:  l0011AFD1
l0011AF80:
	v20 = arg3
	v21 = 0x70<32>
	v20 = v20 + v21
	loc16 = v20
	v20 = loc16
	v23 = Mem0[v20:int8]
	v20 = CONVERT(v23, int8, word32)
	loc17 = v20
	v20 = loc17
	v21 = 0x18<32>
	v20 = v20 << v21
	v21 = 0x18<32>
	v20 = v20 >> v21
	v21 = 0<32>
	v22 = v20 == v21
	loc4 = v22
	v20 = arg1
	v21 = 0x1D<32>
	v22 = v20 <u v21
	loc18 = v22
	v20 = loc18
	v21 = loc4
	v20 = v20 & v21
	loc19 = v20
	v20 = loc19
	branch !v20 l0011AFBC
	// succ:  l0011AFAE l0011AFBC
l0011AFAE:
	v20 = loc16
	v21 = 1<32>
	v24 = SLICE(v21, byte, 0)
	Mem0[v20:byte] = v24
	v20 = arg3
	loc7 = v20
	goto l0011AFD2
	// succ:  l0011AFD2
l0011AFBC:
	v20 = arg1
	v21 = 2<32>
	v20 = v20 << v21
	loc5 = v20
	v20 = loc5
	v20 = fn0011B67B(v20)
	loc6 = v20
	v20 = loc6
	loc7 = v20
	goto l0011AFD2
	// succ:  l0011AFD2
l0011AFD0:
	// succ:  l0011AFD1
l0011AFD1:
	// succ:  l0011AFD2
l0011AFD2:
	v20 = arg0
	v21 = loc7
	Mem0[v20:word32] = v21
	v20 = loc7
	v21 = arg2
	v25 = 2<32>
	v21 = v21 << v25
	v20 = v20 + v21
	loc8 = v20
	v20 = arg0
	v21 = 8<32>
	v20 = v20 + v21
	loc9 = v20
	v20 = loc9
	v21 = loc8
	Mem0[v20:word32] = v21
	v20 = arg0
	v21 = 4<32>
	v20 = v20 + v21
	loc10 = v20
	v20 = loc10
	v21 = loc8
	Mem0[v20:word32] = v21
	v20 = loc7
	v21 = arg1
	v25 = 2<32>
	v21 = v21 << v25
	v20 = v20 + v21
	loc11 = v20
	v20 = arg0
	v21 = 0xC<32>
	v20 = v20 + v21
	loc12 = v20
	v20 = loc12
	v21 = loc11
	Mem0[v20:word32] = v21
	return
	// succ:  fn0011AF4C_exit
l0011B019:
	return
	// succ:  fn0011AF4C_exit
fn0011AF4C_exit:


// fn0011B01B
// Return size: 0
void fn0011B01B(word32 arg0, word32 arg1)
fn0011B01B_entry:
	// succ:  l0011B01B
l0011B01B:
	v28 = Mem0[0x00140030<p32>:word32]
	loc27 = v28
	v28 = arg0
	v28 = Mem0[v28:word32]
	loc14 = v28
	v28 = arg0
	v29 = 4<32>
	v28 = v28 + v29
	loc19 = v28
	v28 = loc19
	v28 = Mem0[v28:word32]
	loc20 = v28
	v28 = arg1
	v29 = 4<32>
	v28 = v28 + v29
	loc21 = v28
	v28 = loc14
	loc22 = v28
	v28 = loc20
	v29 = loc22
	v28 = v28 - v29
	loc23 = v28
	v28 = loc23
	v29 = 2<32>
	v28 = v28 >> v29
	loc24 = v28
	v28 = loc21
	v28 = Mem0[v28:word32]
	loc25 = v28
	v28 = 0<32>
	v29 = loc24
	v28 = v28 - v29
	loc4 = v28
	v28 = loc25
	v29 = loc4
	v30 = 2<32>
	v29 = v29 << v30
	v28 = v28 + v29
	loc5 = v28
	v28 = loc21
	v29 = loc5
	Mem0[v28:word32] = v29
	v28 = loc23
	v29 = 0<32>
	v31 = v28 > v29
	loc6 = v31
	v28 = loc6
	branch !v28 l0011B093
	// succ:  l0011B079 l0011B093
l0011B079:
	v28 = loc5
	v29 = loc14
	v30 = loc23
	v28 = _memcpy(v28, v29, v30)
	v28 = loc21
	v28 = Mem0[v28:word32]
	loc2 = v28
	v28 = loc21
	loc3 = v28
	v28 = loc2
	loc9 = v28
	goto l0011B09F
	// succ:  l0011B09F
l0011B093:
	v28 = loc5
	loc7 = v28
	v28 = loc21
	loc3 = v28
	v28 = loc7
	loc9 = v28
	// succ:  l0011B09F
l0011B09F:
	v28 = arg0
	v28 = Mem0[v28:word32]
	loc8 = v28
	v28 = arg0
	v29 = loc9
	Mem0[v28:word32] = v29
	v28 = loc3
	v29 = loc8
	Mem0[v28:word32] = v29
	v28 = arg1
	v29 = 8<32>
	v28 = v28 + v29
	loc10 = v28
	v28 = loc19
	v28 = Mem0[v28:word32]
	loc11 = v28
	v28 = loc10
	v28 = Mem0[v28:word32]
	loc12 = v28
	v28 = loc19
	v29 = loc12
	Mem0[v28:word32] = v29
	v28 = loc10
	v29 = loc11
	Mem0[v28:word32] = v29
	v28 = arg0
	v29 = 8<32>
	v28 = v28 + v29
	loc13 = v28
	v28 = arg1
	v29 = 0xC<32>
	v28 = v28 + v29
	loc15 = v28
	v28 = loc13
	v28 = Mem0[v28:word32]
	loc16 = v28
	v28 = loc15
	v28 = Mem0[v28:word32]
	loc17 = v28
	v28 = loc13
	v29 = loc17
	Mem0[v28:word32] = v29
	v28 = loc15
	v29 = loc16
	Mem0[v28:word32] = v29
	v28 = loc3
	v28 = Mem0[v28:word32]
	loc18 = v28
	v28 = arg1
	v29 = loc18
	Mem0[v28:word32] = v29
	return
	// succ:  fn0011B01B_exit
l0011B111:
	return
	// succ:  fn0011B01B_exit
fn0011B01B_exit:


// fn0011B113
// Return size: 0
void fn0011B113(word32 arg0)
fn0011B113_entry:
	// succ:  l0011B113
l0011B113:
	v17 = Mem0[0x00140030<p32>:word32]
	loc15 = v17
	v17 = arg0
	v18 = 4<32>
	v17 = v17 + v18
	loc2 = v17
	v17 = loc2
	v17 = Mem0[v17:word32]
	loc6 = v17
	v17 = arg0
	v18 = 8<32>
	v17 = v17 + v18
	loc7 = v17
	v17 = loc7
	v17 = Mem0[v17:word32]
	loc1 = v17
	v17 = loc1
	loc9 = v17
	// succ:  l0011B13B
l0011B13B:
	v17 = loc9
	v18 = loc6
	v19 = v17 == v18
	loc8 = v19
	v17 = loc8
	branch !v17 l0011B14B
	// succ:  l0011B148 l0011B14B
l0011B148:
	goto l0011B15F
	// succ:  l0011B15F
l0011B14B:
	v17 = loc9
	v18 = 0xFFFFFFFC<32>
	v17 = v17 + v18
	loc10 = v17
	v17 = loc7
	v18 = loc10
	Mem0[v17:word32] = v18
	v17 = loc10
	loc9 = v17
	goto l0011B113
	// succ:  l0011B113
l0011B15F:
	v17 = arg0
	v17 = Mem0[v17:word32]
	loc11 = v17
	v17 = loc11
	v18 = 0<32>
	v19 = v17 == v18
	loc12 = v19
	// succ:  l0011B16F
l0011B16F:
	v17 = loc12
	v19 = v17 == 0<32>
	branch !v19 l0011B1AA
	// succ:  l0011B176 l0011B1AA
l0011B176:
	v17 = arg0
	v18 = 0x10<32>
	v17 = v17 + v18
	loc13 = v17
	v17 = loc13
	v17 = Mem0[v17:word32]
	loc3 = v17
	v17 = loc3
	v18 = loc11
	v19 = v17 == v18
	loc4 = v19
	v17 = loc4
	branch !v17 l0011B1A1
	// succ:  l0011B18F l0011B1A1
l0011B18F:
	v17 = loc3
	v18 = 0x70<32>
	v17 = v17 + v18
	loc5 = v17
	v17 = loc5
	v18 = 0<32>
	v20 = SLICE(v18, byte, 0)
	Mem0[v17:byte] = v20
	goto l0011B1AA
	// succ:  l0011B1AA
l0011B1A1:
	v17 = loc11
	fn0011B709(v17)
	goto l0011B1AA
	// succ:  l0011B1AA
l0011B1A8:
	// succ:  l0011B1AA
l0011B1AA:
	// succ:  l0011B1AA
l0011B1AA:
	return
	// succ:  fn0011B113_exit
l0011B1AC:
	return
	// succ:  fn0011B113_exit
fn0011B113_exit:


// fn0011B1AE
// Return size: 0
void fn0011B1AE(word32 arg0, word32 arg1)
fn0011B1AE_entry:
	// succ:  l0011B1AE
l0011B1AE:
	v17 = Mem0[0x00140030<p32>:word32]
	loc16 = v17
	v17 = arg1
	v18 = 0x3FFFFFFF<32>
	v19 = v17 >u v18
	loc6 = v19
	v17 = loc6
	branch !v17 l0011B1C9
	// succ:  l0011B1C3 l0011B1C9
l0011B1C3:
	v17 = arg0
	fn00119E4F(v17)
	// succ:  l0011B1C9
l0011B1C9:
	v17 = arg0
	v18 = 0x80<32>
	v17 = v17 + v18
	loc7 = v17
	v17 = loc7
	v20 = Mem0[v17:int8]
	v17 = CONVERT(v20, int8, word32)
	loc8 = v17
	v17 = loc8
	v18 = 0x18<32>
	v17 = v17 << v18
	v18 = 0x18<32>
	v17 = v17 >> v18
	v18 = 0<32>
	v19 = v17 == v18
	loc3 = v19
	v17 = arg1
	v18 = 0x1D<32>
	v19 = v17 <u v18
	loc9 = v19
	v17 = loc9
	v18 = loc3
	v17 = v17 & v18
	loc14 = v17
	v17 = loc14
	branch !v17 l0011B20A
	// succ:  l0011B1F7 l0011B20A
l0011B1F7:
	v17 = arg0
	v18 = 0x10<32>
	v17 = v17 + v18
	loc10 = v17
	v17 = loc7
	v18 = 1<32>
	v21 = SLICE(v18, byte, 0)
	Mem0[v17:byte] = v21
	v17 = loc10
	loc2 = v17
	goto l0011B21C
	// succ:  l0011B21C
l0011B20A:
	v17 = arg1
	v18 = 2<32>
	v17 = v17 << v18
	loc11 = v17
	v17 = loc11
	v17 = fn0011B67B(v17)
	loc12 = v17
	v17 = loc12
	loc2 = v17
	// succ:  l0011B21C
l0011B21C:
	v17 = arg0
	v18 = 4<32>
	v17 = v17 + v18
	loc13 = v17
	v17 = loc13
	v18 = loc2
	Mem0[v17:word32] = v18
	v17 = arg0
	v18 = loc2
	Mem0[v17:word32] = v18
	v17 = loc2
	v18 = arg1
	v22 = 2<32>
	v18 = v18 << v22
	v17 = v17 + v18
	loc4 = v17
	v17 = arg0
	v18 = 8<32>
	v17 = v17 + v18
	loc5 = v17
	v17 = loc5
	v18 = loc4
	Mem0[v17:word32] = v18
	return
	// succ:  fn0011B1AE_exit
l0011B24B:
	return
	// succ:  fn0011B1AE_exit
fn0011B1AE_exit:


// fn0011B24D
// Return size: 0
word32 fn0011B24D()
fn0011B24D_entry:
	// succ:  l0011B24D
l0011B24D:
	v13 = Mem0[0x00140030<p32>:word32]
	loc10 = v13
	v13 = 0x4570<32>
	v14 = Mem0[v13:int8]
	v13 = CONVERT(v14, int8, word32)
	loc0 = v13
	v13 = loc0
	v15 = 0x18<32>
	v13 = v13 << v15
	v15 = 0x18<32>
	v13 = v13 >> v15
	v15 = 0<32>
	v16 = v13 == v15
	loc1 = v16
	// succ:  l0011B269
l0011B269:
	v13 = loc1
	branch !v13 l0011B2BE
	// succ:  l0011B26F l0011B2BE
l0011B26F:
	v13 = 0x4570<32>
	v13 = fn0011EE46(v13)
	loc2 = v13
	v13 = loc2
	v15 = 0<32>
	v16 = v13 == v15
	loc3 = v16
	v13 = loc3
	v16 = v13 == 0<32>
	branch !v16 l0011B2BD
	// succ:  l0011B284 l0011B2BD
l0011B284:
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = 0x1E3<32>
	v13 = invoke_i(v13)
	v13 = Mem0[0x00140048<p32>:word32]
	loc4 = v13
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = loc4
	v15 = 1<32>
	v13 = v13 & v15
	loc5 = v13
	v13 = loc5
	branch !v13 l0011B2AE
	// succ:  l0011B2A1 l0011B2AE
l0011B2A1:
	v13 = ___cxa_find_matching_catch_2()
	loc7 = v13
	v13 = Mem0[0x00140094<p32>:word32]
	loc8 = v13
	v13 = loc7
	___resumeException(v13)
	goto l0011B2BB
	// succ:  l0011B2BB
l0011B2AE:
	v13 = 0x5394<32>
	v15 = 0x5390<32>
	Mem0[v13:word32] = v15
	goto l0011B2BE
	// succ:  l0011B2BE
l0011B2BB:
	// succ:  l0011B2BD
l0011B2BD:
	// succ:  l0011B2BE
l0011B2BE:
	// succ:  l0011B2BE
l0011B2BE:
	v13 = 0x5394<32>
	v13 = Mem0[v13:word32]
	loc6 = v13
	v13 = loc6
	return v13
	// succ:  fn0011B24D_exit
l0011B2CB:
	return v13
	// succ:  fn0011B24D_exit
fn0011B24D_exit:


// fn0011B2CD
// Return size: 0
word32 fn0011B2CD()
fn0011B2CD_entry:
	// succ:  l0011B2CD
l0011B2CD:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	v4 = 0x4578<32>
	v5 = 1<32>
	fn00119EA4(v4, v5)
	v4 = 0x5390<32>
	v5 = 0x4578<32>
	Mem0[v4:word32] = v5
	v4 = 0x5390<32>
	return v4
	// succ:  fn0011B2CD_exit
l0011B2EC:
	return v4
	// succ:  fn0011B2CD_exit
fn0011B2CD_exit:


// fn0011B2EE
// Return size: 0
word32 fn0011B2EE()
fn0011B2EE_entry:
	// succ:  l0011B2EE
l0011B2EE:
	v6 = Mem0[0x00140030<p32>:word32]
	loc3 = v6
	v6 = fn0011B24D()
	loc0 = v6
	v6 = loc0
	v6 = Mem0[v6:word32]
	loc1 = v6
	v6 = 0x5398<32>
	v7 = loc1
	Mem0[v6:word32] = v7
	v6 = loc1
	fn0011B41A(v6)
	v6 = 0x5398<32>
	return v6
	// succ:  fn0011B2EE_exit
l0011B313:
	return v6
	// succ:  fn0011B2EE_exit
fn0011B2EE_exit:


// fn0011B315
// Return size: 0
word32 fn0011B315()
fn0011B315_entry:
	// succ:  l0011B315
l0011B315:
	v13 = Mem0[0x00140030<p32>:word32]
	loc10 = v13
	v13 = 0x4618<32>
	v14 = Mem0[v13:int8]
	v13 = CONVERT(v14, int8, word32)
	loc0 = v13
	v13 = loc0
	v15 = 0x18<32>
	v13 = v13 << v15
	v15 = 0x18<32>
	v13 = v13 >> v15
	v15 = 0<32>
	v16 = v13 == v15
	loc1 = v16
	// succ:  l0011B331
l0011B331:
	v13 = loc1
	branch !v13 l0011B386
	// succ:  l0011B337 l0011B386
l0011B337:
	v13 = 0x4618<32>
	v13 = fn0011EE46(v13)
	loc2 = v13
	v13 = loc2
	v15 = 0<32>
	v16 = v13 == v15
	loc3 = v16
	v13 = loc3
	v16 = v13 == 0<32>
	branch !v16 l0011B385
	// succ:  l0011B34C l0011B385
l0011B34C:
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = 0x1E4<32>
	v13 = invoke_i(v13)
	v13 = Mem0[0x00140048<p32>:word32]
	loc4 = v13
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = loc4
	v15 = 1<32>
	v13 = v13 & v15
	loc5 = v13
	v13 = loc5
	branch !v13 l0011B376
	// succ:  l0011B369 l0011B376
l0011B369:
	v13 = ___cxa_find_matching_catch_2()
	loc7 = v13
	v13 = Mem0[0x00140094<p32>:word32]
	loc8 = v13
	v13 = loc7
	___resumeException(v13)
	goto l0011B383
	// succ:  l0011B383
l0011B376:
	v13 = 0x539C<32>
	v15 = 0x5398<32>
	Mem0[v13:word32] = v15
	goto l0011B386
	// succ:  l0011B386
l0011B383:
	// succ:  l0011B385
l0011B385:
	// succ:  l0011B386
l0011B386:
	// succ:  l0011B386
l0011B386:
	v13 = 0x539C<32>
	v13 = Mem0[v13:word32]
	loc6 = v13
	v13 = loc6
	return v13
	// succ:  fn0011B315_exit
l0011B393:
	return v13
	// succ:  fn0011B315_exit
fn0011B315_exit:


// fn0011B395
// Return size: 0
void fn0011B395(word32 arg0)
fn0011B395_entry:
	// succ:  l0011B395
l0011B395:
	v10 = Mem0[0x00140030<p32>:word32]
	loc8 = v10
	v10 = 0<32>
	Mem0[0x00140048<p32>:word32] = v10
	v10 = 0x1E5<32>
	v10 = invoke_i(v10)
	loc1 = v10
	v10 = Mem0[0x00140048<p32>:word32]
	loc2 = v10
	v10 = 0<32>
	Mem0[0x00140048<p32>:word32] = v10
	v10 = loc2
	v11 = 1<32>
	v10 = v10 & v11
	loc3 = v10
	v10 = loc3
	branch !v10 l0011B3C8
	// succ:  l0011B3B9 l0011B3C8
l0011B3B9:
	v10 = 0<32>
	v10 = ___cxa_find_matching_catch_3(v10)
	loc5 = v10
	v10 = Mem0[0x00140094<p32>:word32]
	loc6 = v10
	v10 = loc5
	fn000D0E65(v10)
	goto l0011B3DC
	// succ:  l0011B3DC
l0011B3C8:
	v10 = loc1
	v10 = Mem0[v10:word32]
	loc4 = v10
	v10 = arg0
	v11 = loc4
	Mem0[v10:word32] = v11
	v10 = loc4
	fn0011B41A(v10)
	return
	// succ:  fn0011B395_exit
l0011B3DC:
	// succ:  l0011B3DD
l0011B3DD:
	return
	// succ:  fn0011B395_exit
fn0011B395_exit:


// fn0011B3DF
// Return size: 0
void fn0011B3DF(word32 arg0, word32 arg1)
fn0011B3DF_entry:
	// succ:  l0011B3DF
l0011B3DF:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v5 = arg1
	v5 = Mem0[v5:word32]
	loc2 = v5
	v5 = arg0
	v6 = loc2
	Mem0[v5:word32] = v6
	v5 = loc2
	fn0011B41A(v5)
	return
	// succ:  fn0011B3DF_exit
l0011B3F9:
	return
	// succ:  fn0011B3DF_exit
fn0011B3DF_exit:


// fn0011B3FB
// Return size: 0
void fn0011B3FB(word32 arg0)
fn0011B3FB_entry:
	// succ:  l0011B3FB
l0011B3FB:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v5 = arg0
	v5 = Mem0[v5:word32]
	loc1 = v5
	v5 = loc1
	v5 = fn0011B43F(v5)
	return
	// succ:  fn0011B3FB_exit
l0011B40F:
	return
	// succ:  fn0011B3FB_exit
fn0011B3FB_exit:


// fn0011B411
// Return size: 0
void fn0011B411(word32 arg0)
fn0011B411_entry:
	// succ:  l0011B411
l0011B411:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011B411_exit
l0011B418:
	return
	// succ:  fn0011B411_exit
fn0011B411_exit:


// fn0011B41A
// Return size: 0
void fn0011B41A(word32 arg0)
fn0011B41A_entry:
	// succ:  l0011B41A
l0011B41A:
	v7 = Mem0[0x00140030<p32>:word32]
	loc5 = v7
	v7 = arg0
	v8 = 4<32>
	v7 = v7 + v8
	loc1 = v7
	v7 = loc1
	v7 = Mem0[v7:word32]
	loc2 = v7
	v7 = loc2
	v8 = 1<32>
	v7 = v7 + v8
	loc3 = v7
	v7 = loc1
	v8 = loc3
	Mem0[v7:word32] = v8
	return
	// succ:  fn0011B41A_exit
l0011B43D:
	return
	// succ:  fn0011B41A_exit
fn0011B41A_exit:


// fn0011B43F
// Return size: 0
word32 fn0011B43F(word32 arg0)
fn0011B43F_entry:
	// succ:  l0011B43F
l0011B43F:
	v12 = Mem0[0x00140030<p32>:word32]
	loc10 = v12
	v12 = arg0
	v13 = 4<32>
	v12 = v12 + v13
	loc2 = v12
	v12 = loc2
	v12 = Mem0[v12:word32]
	loc3 = v12
	v12 = loc3
	v13 = 0xFFFFFFFF<32>
	v12 = v12 + v13
	loc4 = v12
	v12 = loc2
	v13 = loc4
	Mem0[v12:word32] = v13
	v12 = loc3
	v13 = 0<32>
	v14 = v12 == v13
	loc5 = v14
	v12 = loc5
	v12 = v12
	// succ:  l0011B46C
l0011B46C:
	v12 = arg0
	v12 = Mem0[v12:word32]
	loc6 = v12
	v12 = loc6
	v13 = 8<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc7
	v12 = Mem0[v12:word32]
	loc8 = v12
	v12 = arg0
	v13 = loc8
	v15 = 0x1FF<32>
	v13 = v13 & v15
	v15 = 0x500<32>
	v13 = v13 + v15
fn0011B43F_exit:


// fn0011B49F
// Return size: 0
void fn0011B49F(word32 arg0, word32 arg1, word32 arg2)
fn0011B49F_entry:
	// succ:  l0011B49F
l0011B49F:
	v33 = Mem0[0x00140030<p32>:word32]
	loc33 = v33
	v33 = 0x53A0<32>
	v33 = _pthread_mutex_lock(v33)
	// succ:  l0011B4AF
l0011B4AF:
	v33 = arg0
	v33 = Mem0[v33:word32]
	loc23 = v33
	v33 = loc23
	v34 = 1<32>
	v35 = v33 == v34
	loc26 = v35
	v33 = loc26
	v35 = v33 == 0<32>
	branch !v35 l0011B4C7
	// succ:  l0011B4C4 l0011B4C7
l0011B4C4:
	goto l0011B4D4
	// succ:  l0011B4D4
l0011B4C7:
	v33 = 0x53BC<32>
	v34 = 0x53A0<32>
	v33 = _pthread_cond_wait(v33, v34)
	goto l0011B49F
	// succ:  l0011B49F
l0011B4D4:
	v33 = arg0
	v33 = Mem0[v33:word32]
	loc27 = v33
	v33 = loc27
	v34 = 0<32>
	v35 = v33 == v34
	loc28 = v35
	// succ:  l0011B4E4
l0011B4E4:
	v33 = loc28
	branch !v33 l0011B66E
	// succ:  l0011B4EA l0011B66E
l0011B4EA:
	v33 = arg0
	v34 = 1<32>
	Mem0[v33:word32] = v34
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x1E6<32>
	v34 = 0x53A0<32>
	v33 = invoke_ii(v33, v34)
	v33 = Mem0[0x00140048<p32>:word32]
	loc29 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc29
	v34 = 1<32>
	v33 = v33 & v34
	loc30 = v33
	v33 = loc30
	v35 = v33 == 0<32>
	branch !v35 l0011B5A5
	// succ:  l0011B513 l0011B5A5
l0011B513:
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = arg2
	v34 = arg1
	invoke_vi(v33, v34)
	v33 = Mem0[0x00140048<p32>:word32]
	loc31 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc31
	v34 = 1<32>
	v33 = v33 & v34
	loc3 = v33
	v33 = loc3
	v35 = v33 == 0<32>
	branch !v35 l0011B5A4
	// succ:  l0011B531 l0011B5A4
l0011B531:
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x1E7<32>
	v34 = 0x53A0<32>
	v33 = invoke_ii(v33, v34)
	v33 = Mem0[0x00140048<p32>:word32]
	loc4 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc4
	v34 = 1<32>
	v33 = v33 & v34
	loc5 = v33
	v33 = loc5
	v35 = v33 == 0<32>
	branch !v35 l0011B5A3
	// succ:  l0011B553 l0011B5A3
l0011B553:
	v33 = arg0
	v34 = 0xFFFFFFFF<32>
	Mem0[v33:word32] = v34
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x1E6<32>
	v34 = 0x53A0<32>
	v33 = invoke_ii(v33, v34)
	v33 = Mem0[0x00140048<p32>:word32]
	loc6 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc6
	v34 = 1<32>
	v33 = v33 & v34
	loc7 = v33
	v33 = loc7
	v35 = v33 == 0<32>
	branch !v35 l0011B5A2
	// succ:  l0011B57C l0011B5A2
l0011B57C:
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x1E8<32>
	v34 = 0x53BC<32>
	v33 = invoke_ii(v33, v34)
	v33 = Mem0[0x00140048<p32>:word32]
	loc8 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc8
	v34 = 1<32>
	v33 = v33 & v34
	loc9 = v33
	v33 = loc9
	v35 = v33 == 0<32>
	branch !v35 l0011B5A1
	// succ:  l0011B59E l0011B5A1
l0011B59E:
	goto l0011B677
	// succ:  l0011B677
l0011B5A1:
	// succ:  l0011B5A2
l0011B5A2:
	// succ:  l0011B5A3
l0011B5A3:
	// succ:  l0011B5A4
l0011B5A4:
	// succ:  l0011B5A5
l0011B5A5:
	v33 = 0<32>
	v33 = ___cxa_find_matching_catch_3(v33)
	loc10 = v33
	v33 = Mem0[0x00140094<p32>:word32]
	loc11 = v33
	v33 = loc10
	v33 = ___cxa_begin_catch(v33)
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x1E7<32>
	v34 = 0x53A0<32>
	v33 = invoke_ii(v33, v34)
	v33 = Mem0[0x00140048<p32>:word32]
	loc12 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc12
	v34 = 1<32>
	v33 = v33 & v34
	loc13 = v33
	v33 = loc13
	v35 = v33 == 0<32>
	branch !v35 l0011B635
	// succ:  l0011B5D6 l0011B635
l0011B5D6:
	v33 = arg0
	v34 = 0<32>
	Mem0[v33:word32] = v34
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x1E6<32>
	v34 = 0x53A0<32>
	v33 = invoke_ii(v33, v34)
	v33 = Mem0[0x00140048<p32>:word32]
	loc14 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc14
	v34 = 1<32>
	v33 = v33 & v34
	loc15 = v33
	v33 = loc15
	v35 = v33 == 0<32>
	branch !v35 l0011B634
	// succ:  l0011B5FF l0011B634
l0011B5FF:
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x1E8<32>
	v34 = 0x53BC<32>
	v33 = invoke_ii(v33, v34)
	v33 = Mem0[0x00140048<p32>:word32]
	loc16 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc16
	v34 = 1<32>
	v33 = v33 & v34
	loc17 = v33
	v33 = loc17
	v35 = v33 == 0<32>
	branch !v35 l0011B633
	// succ:  l0011B621 l0011B633
l0011B621:
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x1E9<32>
	invoke_v(v33)
	v33 = Mem0[0x00140048<p32>:word32]
	loc18 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	// succ:  l0011B633
l0011B633:
	// succ:  l0011B634
l0011B634:
	// succ:  l0011B635
l0011B635:
	v33 = ___cxa_find_matching_catch_2()
	loc19 = v33
	v33 = Mem0[0x00140094<p32>:word32]
	loc20 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = 0x16C<32>
	invoke_v(v33)
	v33 = Mem0[0x00140048<p32>:word32]
	loc21 = v33
	v33 = 0<32>
	Mem0[0x00140048<p32>:word32] = v33
	v33 = loc21
	v34 = 1<32>
	v33 = v33 & v34
	loc22 = v33
	v33 = loc22
	branch !v33 l0011B668
	// succ:  l0011B659 l0011B668
l0011B659:
	v33 = 0<32>
	v33 = ___cxa_find_matching_catch_3(v33)
	loc24 = v33
	v33 = Mem0[0x00140094<p32>:word32]
	loc25 = v33
	v33 = loc24
	fn000D0E65(v33)
	goto l0011B66C
	// succ:  l0011B66C
l0011B668:
	v33 = loc19
	___resumeException(v33)
	// succ:  l0011B66C
l0011B66C:
	goto l0011B676
	// succ:  l0011B676
l0011B66E:
	v33 = 0x53A0<32>
	v33 = _pthread_mutex_unlock(v33)
	// succ:  l0011B676
l0011B676:
	// succ:  l0011B677
l0011B677:
	return
	// succ:  fn0011B49F_exit
l0011B679:
	return
	// succ:  fn0011B49F_exit
fn0011B49F_exit:


// fn0011B67B
// Return size: 0
word32 fn0011B67B(word32 arg0)
fn0011B67B_entry:
	// succ:  l0011B67B
l0011B67B:
	v11 = Mem0[0x00140030<p32>:word32]
	loc9 = v11
	v11 = arg0
	v12 = 0<32>
	v13 = v11 == v12
	loc2 = v13
	v11 = loc2
	branch !v11 l0011B68F
	// succ:  l0011B68C l0011B68F
l0011B68C:
	v11 = 1<32>
	goto l0011B691
	// succ:  l0011B691
l0011B68F:
	v11 = arg0
	// succ:  l0011B691
l0011B691:
	loc1 = v11
	// succ:  l0011B696
l0011B696:
	v11 = loc1
	v11 = _malloc(v11)
	loc3 = v11
	v11 = loc3
	v12 = 0<32>
	v13 = v11 == v12
	loc4 = v13
	v11 = loc4
	v13 = v11 == 0<32>
	branch !v13 l0011B6B2
	// succ:  l0011B6AB l0011B6B2
l0011B6AB:
	v11 = 6<32>
	loc8 = v11
l0011B6B2:
	v11 = fn0011EE9E()
	loc5 = v11
	v11 = loc5
	v12 = 0<32>
	v13 = v11 == v12
	loc6 = v13
	v11 = loc6
	branch !v11 l0011B6C9
	// succ:  l0011B6C2 l0011B6C9
l0011B6C2:
	v11 = 5<32>
	loc8 = v11
l0011B6C9:
	v11 = loc5
	v12 = 0x1FF<32>
	v11 = v11 & v12
	v12 = 0x2A20<32>
	v11 = v11 + v12
fn0011B67B_exit:


// fn0011B709
// Return size: 0
void fn0011B709(word32 arg0)
fn0011B709_entry:
	// succ:  l0011B709
l0011B709:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	_free(v4)
	return
	// succ:  fn0011B709_exit
l0011B715:
	return
	// succ:  fn0011B709_exit
fn0011B709_exit:


// fn0011B717
// Return size: 0
void fn0011B717(word32 arg0)
fn0011B717_entry:
	// succ:  l0011B717
l0011B717:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011B717_exit
l0011B723:
	return
	// succ:  fn0011B717_exit
fn0011B717_exit:


// fn0011B725
// Return size: 0
void fn0011B725()
fn0011B725_entry:
	// succ:  l0011B725
l0011B725:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	v5 = 4<32>
	v5 = ___cxa_allocate_exception(v5)
	loc0 = v5
	v5 = loc0
	fn0011EE8C(v5)
	v5 = loc0
	v6 = 0x9C8<32>
	v7 = 0x153<32>
	___cxa_throw(v5, v6, v7)
	// succ:  l0011B740
l0011B740:
	return
	// succ:  fn0011B725_exit
fn0011B725_exit:


// fn0011B742
// Return size: 0
void fn0011B742(word32 arg0, word32 arg1)
fn0011B742_entry:
	// succ:  l0011B742
l0011B742:
	v11 = Mem0[0x00140030<p32>:word32]
	loc10 = v11
	v11 = arg1
	v11 = fn000DAF30(v11)
	loc2 = v11
	v11 = loc2
	v12 = 0xD<32>
	v11 = v11 + v12
	loc3 = v11
	v11 = loc3
	v11 = fn0011B67B(v11)
	loc4 = v11
	v11 = loc4
	v12 = loc2
	Mem0[v11:word32] = v12
	v11 = loc4
	v12 = 4<32>
	v11 = v11 + v12
	loc5 = v11
	v11 = loc5
	v12 = loc2
	Mem0[v11:word32] = v12
	v11 = loc4
	v12 = 8<32>
	v11 = v11 + v12
	loc6 = v11
	v11 = loc6
	v12 = 0<32>
	Mem0[v11:word32] = v12
	v11 = loc4
	v12 = 0xC<32>
	v11 = v11 + v12
	loc7 = v11
	v11 = loc2
	v12 = 1<32>
	v11 = v11 + v12
	loc8 = v11
	v11 = loc7
	v12 = arg1
	v13 = loc8
	v11 = _memcpy(v11, v12, v13)
	v11 = arg0
	v12 = loc7
	Mem0[v11:word32] = v12
	return
	// succ:  fn0011B742_exit
l0011B7A0:
	return
	// succ:  fn0011B742_exit
fn0011B742_exit:


// fn0011B7A2
// Return size: 0
void fn0011B7A2(word32 arg0, word32 arg1)
fn0011B7A2_entry:
	// succ:  l0011B7A2
l0011B7A2:
	v9 = Mem0[0x00140030<p32>:word32]
	loc8 = v9
	v9 = arg0
	v10 = 0x26D4<32>
	Mem0[v9:word32] = v10
	v9 = arg0
	v10 = 4<32>
	v9 = v9 + v10
	loc2 = v9
	v9 = 0<32>
	Mem0[0x00140048<p32>:word32] = v9
	v9 = 0x1EA<32>
	v10 = loc2
	v11 = arg1
	invoke_vii(v9, v10, v11)
	v9 = Mem0[0x00140048<p32>:word32]
	loc3 = v9
	v9 = 0<32>
	Mem0[0x00140048<p32>:word32] = v9
	v9 = loc3
	v10 = 1<32>
	v9 = v9 & v10
	loc4 = v9
	v9 = loc4
	branch !v9 l0011B7E5
	// succ:  l0011B7D8 l0011B7E5
l0011B7D8:
	v9 = ___cxa_find_matching_catch_2()
	loc5 = v9
	v9 = Mem0[0x00140094<p32>:word32]
	loc6 = v9
	v9 = loc5
	___resumeException(v9)
	goto l0011B7E6
	// succ:  l0011B7E6
l0011B7E5:
	return
	// succ:  fn0011B7A2_exit
l0011B7E6:
	// succ:  l0011B7E7
l0011B7E7:
	return
	// succ:  fn0011B7A2_exit
fn0011B7A2_exit:


// fn0011B7E9
// Return size: 0
void fn0011B7E9(word32 arg0, word32 arg1)
fn0011B7E9_entry:
	// succ:  l0011B7E9
l0011B7E9:
	v14 = Mem0[0x00140030<p32>:word32]
	loc13 = v14
	v14 = arg0
	v15 = 0x26E8<32>
	Mem0[v14:word32] = v15
	v14 = arg0
	v15 = 4<32>
	v14 = v14 + v15
	loc4 = v14
	v14 = arg1
	v15 = 0xB<32>
	v14 = v14 + v15
	loc5 = v14
	v14 = loc5
	v16 = Mem0[v14:int8]
	v14 = CONVERT(v16, int8, word32)
	loc6 = v14
	v14 = loc6
	v15 = 0x18<32>
	v14 = v14 << v15
	v15 = 0x18<32>
	v14 = v14 >> v15
	v15 = 0<32>
	v17 = v14 < v15
	loc7 = v17
	v14 = arg1
	v14 = Mem0[v14:word32]
	loc8 = v14
	v14 = loc7
	branch !v14 l0011B828
	// succ:  l0011B825 l0011B828
l0011B825:
	v14 = loc8
	goto l0011B82A
	// succ:  l0011B82A
l0011B828:
	v14 = arg1
	// succ:  l0011B82A
l0011B82A:
	loc9 = v14
	v14 = 0<32>
	Mem0[0x00140048<p32>:word32] = v14
	v14 = 0x1EA<32>
	v15 = loc4
	v18 = loc9
	invoke_vii(v14, v15, v18)
	v14 = Mem0[0x00140048<p32>:word32]
	loc10 = v14
	v14 = 0<32>
	Mem0[0x00140048<p32>:word32] = v14
	v14 = loc10
	v15 = 1<32>
	v14 = v14 & v15
	loc11 = v14
	v14 = loc11
	branch !v14 l0011B85A
	// succ:  l0011B84D l0011B85A
l0011B84D:
	v14 = ___cxa_find_matching_catch_2()
	loc2 = v14
	v14 = Mem0[0x00140094<p32>:word32]
	loc3 = v14
	v14 = loc2
	___resumeException(v14)
	goto l0011B85B
	// succ:  l0011B85B
l0011B85A:
	return
	// succ:  fn0011B7E9_exit
l0011B85B:
	// succ:  l0011B85C
l0011B85C:
	return
	// succ:  fn0011B7E9_exit
fn0011B7E9_exit:


// fn0011B85E
// Return size: 0
void fn0011B85E(word32 arg0, word32 arg1)
fn0011B85E_entry:
	// succ:  l0011B85E
l0011B85E:
	v9 = Mem0[0x00140030<p32>:word32]
	loc8 = v9
	v9 = arg0
	v10 = 0x26E8<32>
	Mem0[v9:word32] = v10
	v9 = arg0
	v10 = 4<32>
	v9 = v9 + v10
	loc2 = v9
	v9 = 0<32>
	Mem0[0x00140048<p32>:word32] = v9
	v9 = 0x1EA<32>
	v10 = loc2
	v11 = arg1
	invoke_vii(v9, v10, v11)
	v9 = Mem0[0x00140048<p32>:word32]
	loc3 = v9
	v9 = 0<32>
	Mem0[0x00140048<p32>:word32] = v9
	v9 = loc3
	v10 = 1<32>
	v9 = v9 & v10
	loc4 = v9
	v9 = loc4
	branch !v9 l0011B8A1
	// succ:  l0011B894 l0011B8A1
l0011B894:
	v9 = ___cxa_find_matching_catch_2()
	loc5 = v9
	v9 = Mem0[0x00140094<p32>:word32]
	loc6 = v9
	v9 = loc5
	___resumeException(v9)
	goto l0011B8A2
	// succ:  l0011B8A2
l0011B8A1:
	return
	// succ:  fn0011B85E_exit
l0011B8A2:
	// succ:  l0011B8A3
l0011B8A3:
	return
	// succ:  fn0011B85E_exit
fn0011B85E_exit:


// fn0011B8A5
// Return size: 0
void fn0011B8A5(word32 arg0)
fn0011B8A5_entry:
	// succ:  l0011B8A5
l0011B8A5:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v9 = 8<32>
	v9 = ___cxa_allocate_exception(v9)
	loc1 = v9
	v9 = 0<32>
	Mem0[0x00140048<p32>:word32] = v9
	v9 = 0x1C2<32>
	v10 = loc1
	v11 = 0x4050<32>
	invoke_vii(v9, v10, v11)
	v9 = Mem0[0x00140048<p32>:word32]
	loc2 = v9
	v9 = 0<32>
	Mem0[0x00140048<p32>:word32] = v9
	v9 = loc2
	v10 = 1<32>
	v9 = v9 & v10
	loc3 = v9
	v9 = loc3
	branch !v9 l0011B8E4
	// succ:  l0011B8D3 l0011B8E4
l0011B8D3:
	v9 = ___cxa_find_matching_catch_2()
	loc4 = v9
	v9 = Mem0[0x00140094<p32>:word32]
	loc5 = v9
	v9 = loc1
	___cxa_free_exception(v9)
	v9 = loc4
	___resumeException(v9)
	goto l0011B8F7
	// succ:  l0011B8F7
l0011B8E4:
	v9 = loc1
	v10 = 0x26FC<32>
	Mem0[v9:word32] = v10
	v9 = loc1
	v10 = 0x9F8<32>
	v11 = 0x156<32>
	___cxa_throw(v9, v10, v11)
	// succ:  l0011B8F7
l0011B8F7:
	// succ:  l0011B8F8
l0011B8F8:
	return
	// succ:  fn0011B8A5_exit
fn0011B8A5_exit:


// fn0011B8FA
// Return size: 0
void fn0011B8FA(word32 arg0, word32 arg1)
fn0011B8FA_entry:
	// succ:  l0011B8FA
l0011B8FA:
	v10 = Mem0[0x00140030<p32>:word32]
	loc9 = v10
	v10 = arg0
	v11 = 0<64>
	Mem0[v10:word64] = v11
	v10 = arg0
	v12 = 8<32>
	v10 = v10 + v12
	v12 = 0<32>
	Mem0[v10:word32] = v12
	v10 = arg1
	v12 = 0xB<32>
	v10 = v10 + v12
	loc2 = v10
	v10 = loc2
	v13 = Mem0[v10:int8]
	v10 = CONVERT(v13, int8, word32)
	loc3 = v10
	v10 = loc3
	v12 = 0x18<32>
	v10 = v10 << v12
	v12 = 0x18<32>
	v10 = v10 >> v12
	v12 = 0<32>
	v14 = v10 < v12
	loc4 = v14
	v10 = loc4
	branch !v10 l0011B94F
	// succ:  l0011B930 l0011B94F
l0011B930:
	v10 = arg1
	v10 = Mem0[v10:word32]
	loc5 = v10
	v10 = arg1
	v12 = 4<32>
	v10 = v10 + v12
	loc6 = v10
	v10 = loc6
	v10 = Mem0[v10:word32]
	loc7 = v10
	v10 = arg0
	v12 = loc5
	v15 = loc7
	fn0011B96D(v10, v12, v15)
	goto l0011B969
	// succ:  l0011B969
l0011B94F:
	v10 = arg0
	v12 = arg1
	v11 = Mem0[v12:word64]
	Mem0[v10:word64] = v11
	v10 = arg0
	v12 = 8<32>
	v10 = v10 + v12
	v12 = arg1
	v15 = 8<32>
	v12 = v12 + v15
	v12 = Mem0[v12:word32]
	Mem0[v10:word32] = v12
	// succ:  l0011B969
l0011B969:
	return
	// succ:  fn0011B8FA_exit
l0011B96B:
	return
	// succ:  fn0011B8FA_exit
fn0011B8FA_exit:


// fn0011B96D
// Return size: 0
void fn0011B96D(word32 arg0, word32 arg1, word32 arg2)
fn0011B96D_entry:
	// succ:  l0011B96D
l0011B96D:
	v18 = Mem0[0x00140030<p32>:word32]
	loc18 = v18
	v18 = arg2
	v19 = 0xFFFFFFEF<32>
	v20 = v18 >u v19
	loc10 = v20
	v18 = loc10
	branch !v18 l0011B984
	// succ:  l0011B97E l0011B984
l0011B97E:
	v18 = arg0
	fn0011B8A5(v18)
	// succ:  l0011B984
l0011B984:
	v18 = arg2
	v19 = 0xB<32>
	v20 = v18 <u v19
	loc11 = v20
	v18 = loc11
	branch !v18 l0011B9BF
	// succ:  l0011B98F l0011B9BF
l0011B98F:
	v18 = arg2
	v19 = 0xFF<32>
	v18 = v18 & v19
	loc6 = v18
	v18 = arg0
	v19 = 0xB<32>
	v18 = v18 + v19
	loc7 = v18
	v18 = loc7
	v19 = loc6
	v21 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v21
	v18 = arg2
	v19 = 0<32>
	v20 = v18 == v19
	loc8 = v20
	v18 = loc8
	branch !v18 l0011B9B5
	// succ:  l0011B9B0 l0011B9B5
l0011B9B0:
	v18 = arg0
	loc4 = v18
	goto l0011B9BD
	// succ:  l0011B9BD
l0011B9B5:
	v18 = arg0
	loc3 = v18
	v18 = 6<32>
	loc17 = v18
	// succ:  l0011B9BD
l0011B9BD:
	goto l0011BA0A
	// succ:  l0011BA0A
l0011B9BF:
	v18 = arg2
	v19 = 0x10<32>
	v18 = v18 + v19
	loc12 = v18
	v18 = loc12
	v19 = 0xFFFFFFF0<32>
	v18 = v18 & v19
	loc13 = v18
	v18 = loc13
	v18 = fn0011B67B(v18)
	loc14 = v18
	v18 = arg0
	v19 = loc14
	Mem0[v18:word32] = v19
	v18 = loc13
	v19 = 0x80000000<32>
	v18 = v18 | v19
	loc15 = v18
	v18 = arg0
	v19 = 8<32>
	v18 = v18 + v19
	loc16 = v18
	v18 = loc16
	v19 = loc15
	Mem0[v18:word32] = v19
	v18 = arg0
	v19 = 4<32>
	v18 = v18 + v19
	loc5 = v18
	v18 = loc5
	v19 = arg2
	Mem0[v18:word32] = v19
	v18 = loc14
	loc3 = v18
	v18 = 6<32>
	loc17 = v18
	// succ:  l0011BA0A
l0011BA0A:
	v18 = loc17
	v19 = 6<32>
	v20 = v18 == v19
	branch !v20 l0011BA21
	// succ:  l0011BA12 l0011BA21
l0011BA12:
	v18 = loc3
	v19 = arg1
	v22 = arg2
	v18 = _memcpy(v18, v19, v22)
	v18 = loc3
	loc4 = v18
	// succ:  l0011BA21
l0011BA21:
	v18 = loc4
	v19 = arg2
	v18 = v18 + v19
	loc9 = v18
	v18 = loc9
	v19 = 0<32>
	v23 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v23
	return
	// succ:  fn0011B96D_exit
l0011BA30:
	return
	// succ:  fn0011B96D_exit
fn0011B96D_exit:


// fn0011BA32
// Return size: 0
void fn0011BA32(word32 arg0, word32 arg1, word32 arg2)
fn0011BA32_entry:
	// succ:  l0011BA32
l0011BA32:
	v18 = Mem0[0x00140030<p32>:word32]
	loc18 = v18
	v18 = arg1
	v19 = 0xFFFFFFEF<32>
	v20 = v18 >u v19
	loc10 = v20
	v18 = loc10
	branch !v18 l0011BA49
	// succ:  l0011BA43 l0011BA49
l0011BA43:
	v18 = arg0
	fn0011B8A5(v18)
	// succ:  l0011BA49
l0011BA49:
	v18 = arg1
	v19 = 0xB<32>
	v20 = v18 <u v19
	loc11 = v20
	v18 = loc11
	branch !v18 l0011BA84
	// succ:  l0011BA54 l0011BA84
l0011BA54:
	v18 = arg1
	v19 = 0xFF<32>
	v18 = v18 & v19
	loc6 = v18
	v18 = arg0
	v19 = 0xB<32>
	v18 = v18 + v19
	loc7 = v18
	v18 = loc7
	v19 = loc6
	v21 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v21
	v18 = arg1
	v19 = 0<32>
	v20 = v18 == v19
	loc8 = v20
	v18 = loc8
	branch !v18 l0011BA7A
	// succ:  l0011BA75 l0011BA7A
l0011BA75:
	v18 = arg0
	loc4 = v18
	goto l0011BA82
	// succ:  l0011BA82
l0011BA7A:
	v18 = arg0
	loc3 = v18
	v18 = 6<32>
	loc17 = v18
	// succ:  l0011BA82
l0011BA82:
	goto l0011BACF
	// succ:  l0011BACF
l0011BA84:
	v18 = arg1
	v19 = 0x10<32>
	v18 = v18 + v19
	loc12 = v18
	v18 = loc12
	v19 = 0xFFFFFFF0<32>
	v18 = v18 & v19
	loc13 = v18
	v18 = loc13
	v18 = fn0011B67B(v18)
	loc14 = v18
	v18 = arg0
	v19 = loc14
	Mem0[v18:word32] = v19
	v18 = loc13
	v19 = 0x80000000<32>
	v18 = v18 | v19
	loc15 = v18
	v18 = arg0
	v19 = 8<32>
	v18 = v18 + v19
	loc16 = v18
	v18 = loc16
	v19 = loc15
	Mem0[v18:word32] = v19
	v18 = arg0
	v19 = 4<32>
	v18 = v18 + v19
	loc5 = v18
	v18 = loc5
	v19 = arg1
	Mem0[v18:word32] = v19
	v18 = loc14
	loc3 = v18
	v18 = 6<32>
	loc17 = v18
	// succ:  l0011BACF
l0011BACF:
	v18 = loc17
	v19 = 6<32>
	v20 = v18 == v19
	branch !v20 l0011BAE6
	// succ:  l0011BAD7 l0011BAE6
l0011BAD7:
	v18 = loc3
	v19 = arg2
	v22 = arg1
	v18 = _memset(v18, v19, v22)
	v18 = loc3
	loc4 = v18
	// succ:  l0011BAE6
l0011BAE6:
	v18 = loc4
	v19 = arg1
	v18 = v18 + v19
	loc9 = v18
	v18 = loc9
	v19 = 0<32>
	v23 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v23
	return
	// succ:  fn0011BA32_exit
l0011BAF5:
	return
	// succ:  fn0011BA32_exit
fn0011BA32_exit:


// fn0011BAF7
// Return size: 0
void fn0011BAF7(word32 arg0)
fn0011BAF7_entry:
	// succ:  l0011BAF7
l0011BAF7:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v8 = arg0
	v9 = 0xB<32>
	v8 = v8 + v9
	loc1 = v8
	v8 = loc1
	v10 = Mem0[v8:int8]
	v8 = CONVERT(v10, int8, word32)
	loc2 = v8
	v8 = loc2
	v9 = 0x18<32>
	v8 = v8 << v9
	v9 = 0x18<32>
	v8 = v8 >> v9
	v9 = 0<32>
	v11 = v8 < v9
	loc3 = v11
	v8 = loc3
	branch !v8 l0011BB29
	// succ:  l0011BB1C l0011BB29
l0011BB1C:
	v8 = arg0
	v8 = Mem0[v8:word32]
	loc4 = v8
	v8 = loc4
	fn0011B709(v8)
	// succ:  l0011BB29
l0011BB29:
	return
	// succ:  fn0011BAF7_exit
l0011BB2A:
	return
	// succ:  fn0011BAF7_exit
fn0011BAF7_exit:


// fn0011BB2C
// Return size: 0
word32 fn0011BB2C(word32 arg0, word32 arg1, word32 arg2)
fn0011BB2C_entry:
	// succ:  l0011BB2C
l0011BB2C:
	v26 = Mem0[0x00140030<p32>:word32]
	loc26 = v26
	v26 = arg0
	v27 = 0xB<32>
	v26 = v26 + v27
	loc17 = v26
	v26 = loc17
	v28 = Mem0[v26:int8]
	v26 = CONVERT(v28, int8, word32)
	loc18 = v26
	v26 = loc18
	v27 = 0x18<32>
	v26 = v26 << v27
	v27 = 0x18<32>
	v26 = v26 >> v27
	v27 = 0<32>
	v29 = v26 < v27
	loc19 = v29
	v26 = loc19
	branch !v26 l0011BB76
	// succ:  l0011BB51 l0011BB76
l0011BB51:
	v26 = arg0
	v27 = 8<32>
	v26 = v26 + v27
	loc20 = v26
	v26 = loc20
	v26 = Mem0[v26:word32]
	loc21 = v26
	v26 = loc21
	v27 = 0x7FFFFFFF<32>
	v26 = v26 & v27
	loc22 = v26
	v26 = loc22
	v27 = 0xFFFFFFFF<32>
	v26 = v26 + v27
	loc24 = v26
	v26 = loc24
	loc3 = v26
	goto l0011BB7A
	// succ:  l0011BB7A
l0011BB76:
	v26 = 0xA<32>
	loc3 = v26
	// succ:  l0011BB7A
l0011BB7A:
	v26 = loc3
	v27 = arg2
	v29 = v26 <u v27
	loc23 = v29
	// succ:  l0011BB82
l0011BB82:
	v26 = loc23
	branch !v26 l0011BBC7
	// succ:  l0011BB88 l0011BBC7
l0011BB88:
	v26 = loc19
	branch !v26 l0011BB9F
	// succ:  l0011BB8C l0011BB9F
l0011BB8C:
	v26 = arg0
	v27 = 4<32>
	v26 = v26 + v27
	loc12 = v26
	v26 = loc12
	v26 = Mem0[v26:word32]
	loc13 = v26
	v26 = loc13
	loc16 = v26
	goto l0011BBAB
	// succ:  l0011BBAB
l0011BB9F:
	v26 = loc18
	v27 = 0xFF<32>
	v26 = v26 & v27
	loc14 = v26
	v26 = loc14
	loc16 = v26
	// succ:  l0011BBAB
l0011BBAB:
	v26 = arg2
	v27 = loc3
	v26 = v26 - v27
	loc15 = v26
	v26 = arg0
	v27 = loc3
	v30 = loc15
	v31 = loc16
	v32 = 0<32>
	v33 = loc16
	v34 = arg2
	v35 = arg1
	fn0011BC43(v26, v27, v30, v31, v32, v33, v34, v35)
	goto l0011BC3C
	// succ:  l0011BC3C
l0011BBC7:
	v26 = loc19
	branch !v26 l0011BBD7
	// succ:  l0011BBCB l0011BBD7
l0011BBCB:
	v26 = arg0
	v26 = Mem0[v26:word32]
	loc4 = v26
	v26 = loc4
	loc6 = v26
	goto l0011BBDB
	// succ:  l0011BBDB
l0011BBD7:
	v26 = arg0
	loc6 = v26
	// succ:  l0011BBDB
l0011BBDB:
	v26 = arg2
	v27 = 0<32>
	v29 = v26 == v27
	loc5 = v29
	v26 = loc5
	v29 = v26 == 0<32>
	branch !v29 l0011BBF3
	// succ:  l0011BBE8 l0011BBF3
l0011BBE8:
	v26 = loc6
	v27 = arg1
	v30 = arg2
	v26 = _memmove(v26, v27, v30)
	// succ:  l0011BBF3
l0011BBF3:
	v26 = loc6
	v27 = arg2
	v26 = v26 + v27
	loc7 = v26
	v26 = loc7
	v27 = 0<32>
	v36 = SLICE(v27, byte, 0)
	Mem0[v26:byte] = v36
	v26 = loc17
	v37 = Mem0[v26:int8]
	v26 = CONVERT(v37, int8, word32)
	loc8 = v26
	v26 = loc8
	v27 = 0x18<32>
	v26 = v26 << v27
	v27 = 0x18<32>
	v26 = v26 >> v27
	v27 = 0<32>
	v29 = v26 < v27
	loc9 = v29
	v26 = loc9
	branch !v26 l0011BC2A
	// succ:  l0011BC19 l0011BC2A
l0011BC19:
	v26 = arg0
	v27 = 4<32>
	v26 = v26 + v27
	loc10 = v26
	v26 = loc10
	v27 = arg2
	Mem0[v26:word32] = v27
	goto l0011BC3D
	// succ:  l0011BC3D
l0011BC2A:
	v26 = arg2
	v27 = 0xFF<32>
	v26 = v26 & v27
	loc11 = v26
	v26 = loc17
	v27 = loc11
	v38 = SLICE(v27, byte, 0)
	Mem0[v26:byte] = v38
	goto l0011BC3D
	// succ:  l0011BC3D
l0011BC3B:
	// succ:  l0011BC3C
l0011BC3C:
	// succ:  l0011BC3D
l0011BC3D:
	v26 = arg0
	return v26
	// succ:  fn0011BB2C_exit
l0011BC41:
	return v26
	// succ:  fn0011BB2C_exit
fn0011BB2C_exit:


// fn0011BC43
// Return size: 0
void fn0011BC43(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn0011BC43_entry:
	// succ:  l0011BC43
l0011BC43:
	v38 = Mem0[0x00140030<p32>:word32]
	loc43 = v38
	v38 = 0xFFFFFFEE<32>
	v39 = arg1
	v38 = v38 - v39
	loc39 = v38
	v38 = loc39
	v39 = arg2
	v40 = v38 <u v39
	loc40 = v40
	v38 = loc40
	branch !v38 l0011BC61
	// succ:  l0011BC5B l0011BC61
l0011BC5B:
	v38 = arg0
	fn0011B8A5(v38)
	// succ:  l0011BC61
l0011BC61:
	v38 = arg0
	v39 = 0xB<32>
	v38 = v38 + v39
	loc9 = v38
	v38 = loc9
	v41 = Mem0[v38:int8]
	v38 = CONVERT(v41, int8, word32)
	loc10 = v38
	v38 = loc10
	v39 = 0x18<32>
	v38 = v38 << v39
	v39 = 0x18<32>
	v38 = v38 >> v39
	v39 = 0<32>
	v40 = v38 < v39
	loc11 = v40
	v38 = loc11
	branch !v38 l0011BC8C
	// succ:  l0011BC80 l0011BC8C
l0011BC80:
	v38 = arg0
	v38 = Mem0[v38:word32]
	loc12 = v38
	v38 = loc12
	loc23 = v38
	goto l0011BC90
	// succ:  l0011BC90
l0011BC8C:
	v38 = arg0
	loc23 = v38
	// succ:  l0011BC90
l0011BC90:
	v38 = arg1
	v39 = 0x7FFFFFE7<32>
	v40 = v38 <u v39
	loc13 = v40
	v38 = loc13
	branch !v38 l0011BCE7
	// succ:  l0011BCA0 l0011BCE7
l0011BCA0:
	v38 = arg2
	v39 = arg1
	v38 = v38 + v39
	loc14 = v38
	v38 = arg1
	v39 = 1<32>
	v38 = v38 << v39
	loc15 = v38
	v38 = loc14
	v39 = loc15
	v40 = v38 <u v39
	loc16 = v40
	v38 = loc16
	branch !v38 l0011BCBC
	// succ:  l0011BCB9 l0011BCBC
l0011BCB9:
	v38 = loc15
	goto l0011BCBE
	// succ:  l0011BCBE
l0011BCBC:
	v38 = loc14
	// succ:  l0011BCBE
l0011BCBE:
	loc8 = v38
	v38 = loc8
	v39 = 0xB<32>
	v40 = v38 <u v39
	loc17 = v40
	v38 = loc8
	v39 = 0x10<32>
	v38 = v38 + v39
	loc18 = v38
	v38 = loc18
	v39 = 0xFFFFFFF0<32>
	v38 = v38 & v39
	loc19 = v38
	v38 = loc17
	branch !v38 l0011BCDD
	// succ:  l0011BCDA l0011BCDD
l0011BCDA:
	v38 = 0xB<32>
	goto l0011BCDF
	// succ:  l0011BCDF
l0011BCDD:
	v38 = loc19
	// succ:  l0011BCDF
l0011BCDF:
	loc41 = v38
	v38 = loc41
	loc20 = v38
	goto l0011BCEB
	// succ:  l0011BCEB
l0011BCE7:
	v38 = 0xFFFFFFEF<32>
	loc20 = v38
	// succ:  l0011BCEB
l0011BCEB:
	v38 = loc20
	v38 = fn0011B67B(v38)
	loc21 = v38
	v38 = arg4
	v39 = 0<32>
	v40 = v38 == v39
	loc22 = v40
	v38 = loc22
	v40 = v38 == 0<32>
	branch !v40 l0011BD0A
	// succ:  l0011BCFF l0011BD0A
l0011BCFF:
	v38 = loc21
	v39 = loc23
	v42 = arg4
	v38 = _memcpy(v38, v39, v42)
	// succ:  l0011BD0A
l0011BD0A:
	v38 = arg6
	v39 = 0<32>
	v40 = v38 == v39
	loc24 = v40
	v38 = loc24
	v40 = v38 == 0<32>
	branch !v40 l0011BD28
	// succ:  l0011BD16 l0011BD28
l0011BD16:
	v38 = loc21
	v39 = arg4
	v38 = v38 + v39
	loc25 = v38
	v38 = loc25
	v39 = arg7
	v42 = arg6
	v38 = _memcpy(v38, v39, v42)
	// succ:  l0011BD28
l0011BD28:
	v38 = arg3
	v39 = arg5
	v38 = v38 - v39
	loc26 = v38
	v38 = loc26
	v39 = arg4
	v38 = v38 - v39
	loc27 = v38
	v38 = loc27
	v39 = 0<32>
	v40 = v38 == v39
	loc28 = v40
	v38 = loc28
	v40 = v38 == 0<32>
	branch !v40 l0011BD69
	// succ:  l0011BD42 l0011BD69
l0011BD42:
	v38 = loc21
	v39 = arg4
	v38 = v38 + v39
	loc29 = v38
	v38 = loc29
	v39 = arg6
	v38 = v38 + v39
	loc30 = v38
	v38 = loc23
	v39 = arg4
	v38 = v38 + v39
	loc31 = v38
	v38 = loc31
	v39 = arg5
	v38 = v38 + v39
	loc32 = v38
	v38 = loc30
	v39 = loc32
	v42 = loc27
	v38 = _memcpy(v38, v39, v42)
	// succ:  l0011BD69
l0011BD69:
	v38 = arg1
	v39 = 0xA<32>
	v40 = v38 == v39
	loc33 = v40
	v38 = loc33
	v40 = v38 == 0<32>
	branch !v40 l0011BD7B
	// succ:  l0011BD75 l0011BD7B
l0011BD75:
	v38 = loc23
	fn0011B709(v38)
	// succ:  l0011BD7B
l0011BD7B:
	v38 = arg0
	v39 = loc21
	Mem0[v38:word32] = v39
	v38 = loc20
	v39 = 0x80000000<32>
	v38 = v38 | v39
	loc34 = v38
	v38 = arg0
	v39 = 8<32>
	v38 = v38 + v39
	loc35 = v38
	v38 = loc35
	v39 = loc34
	Mem0[v38:word32] = v39
	v38 = loc26
	v39 = arg6
	v38 = v38 + v39
	loc36 = v38
	v38 = arg0
	v39 = 4<32>
	v38 = v38 + v39
	loc37 = v38
	v38 = loc37
	v39 = loc36
	Mem0[v38:word32] = v39
	v38 = loc21
	v39 = loc36
	v38 = v38 + v39
	loc38 = v38
	v38 = loc38
	v39 = 0<32>
	v43 = SLICE(v39, byte, 0)
	Mem0[v38:byte] = v43
	return
	// succ:  fn0011BC43_exit
l0011BDBF:
	return
	// succ:  fn0011BC43_exit
fn0011BC43_exit:


// fn0011BDC1
// Return size: 0
void fn0011BDC1(word32 arg0, word32 arg1)
fn0011BDC1_entry:
	// succ:  l0011BDC1
l0011BDC1:
	v58 = Mem0[0x00140030<p32>:word32]
	loc57 = v58
	v58 = arg1
	v59 = 0xFFFFFFEF<32>
	v60 = v58 >u v59
	loc26 = v60
	v58 = loc26
	branch !v58 l0011BDD8
	// succ:  l0011BDD2 l0011BDD8
l0011BDD2:
	v58 = arg0
	fn0011B8A5(v58)
	// succ:  l0011BDD8
l0011BDD8:
	v58 = arg0
	v59 = 0xB<32>
	v58 = v58 + v59
	loc37 = v58
	v58 = loc37
	v61 = Mem0[v58:int8]
	v58 = CONVERT(v61, int8, word32)
	loc48 = v58
	v58 = loc48
	v59 = 0x18<32>
	v58 = v58 << v59
	v59 = 0x18<32>
	v58 = v58 >> v59
	v59 = 0<32>
	v60 = v58 < v59
	loc49 = v60
	v58 = loc49
	branch !v58 l0011BE2E
	// succ:  l0011BDF7 l0011BE2E
l0011BDF7:
	v58 = arg0
	v59 = 8<32>
	v58 = v58 + v59
	loc50 = v58
	v58 = loc50
	v58 = Mem0[v58:word32]
	loc51 = v58
	v58 = loc51
	v59 = 0x7FFFFFFF<32>
	v58 = v58 & v59
	loc52 = v58
	v58 = loc52
	v59 = 0xFFFFFFFF<32>
	v58 = v58 + v59
	loc54 = v58
	v58 = arg0
	v59 = 4<32>
	v58 = v58 + v59
	loc53 = v58
	v58 = loc53
	v58 = Mem0[v58:word32]
	loc16 = v58
	v58 = loc16
	loc19 = v58
	v58 = loc54
	loc24 = v58
	goto l0011BE3E
	// succ:  l0011BE3E
l0011BE2E:
	v58 = loc48
	v59 = 0xFF<32>
	v58 = v58 & v59
	loc17 = v58
	v58 = loc17
	loc19 = v58
	v58 = 0xA<32>
	loc24 = v58
	// succ:  l0011BE3E
l0011BE3E:
	v58 = loc19
	v59 = arg1
	v60 = v58 >u v59
	loc18 = v60
	v58 = loc18
	branch !v58 l0011BE4D
	// succ:  l0011BE4A l0011BE4D
l0011BE4A:
	v58 = loc19
	goto l0011BE4F
	// succ:  l0011BE4F
l0011BE4D:
	v58 = arg1
	// succ:  l0011BE4F
l0011BE4F:
	loc15 = v58
	v58 = loc15
	v59 = 0xB<32>
	v60 = v58 <u v59
	loc20 = v60
	v58 = loc15
	v59 = 0x10<32>
	v58 = v58 + v59
	loc21 = v58
	v58 = loc21
	v59 = 0xFFFFFFF0<32>
	v58 = v58 & v59
	loc22 = v58
	v58 = loc22
	v59 = 0xFFFFFFFF<32>
	v58 = v58 + v59
	loc55 = v58
	v58 = loc20
	branch !v58 l0011BE75
	// succ:  l0011BE72 l0011BE75
l0011BE72:
	v58 = 0xA<32>
	goto l0011BE77
	// succ:  l0011BE77
l0011BE75:
	v58 = loc55
	// succ:  l0011BE77
l0011BE77:
	loc14 = v58
	v58 = loc14
	v59 = loc24
	v60 = v58 == v59
	loc23 = v60
	// succ:  l0011BE81
l0011BE81:
	v58 = loc23
	v60 = v58 == 0<32>
	branch !v60 l0011C015
	// succ:  l0011BE88 l0011C015
l0011BE88:
	v58 = loc20
	branch !v58 l0011BEC0
	// succ:  l0011BE8E l0011BEC0
l0011BE8E:
	v58 = arg0
	v58 = Mem0[v58:word32]
	loc35 = v58
	v58 = loc49
	branch !v58 l0011BEAA
	// succ:  l0011BE99 l0011BEAA
l0011BE99:
	v58 = loc35
	loc4 = v58
	v58 = 0<32>
	loc7 = v58
	v58 = arg0
	loc12 = v58
	v58 = 0x10<32>
	loc56 = v58
	goto l0011BEBE
	// succ:  l0011BEBE
l0011BEAA:
	v58 = loc35
	loc5 = v58
	v58 = 0<32>
	loc8 = v58
	v58 = 1<32>
	loc10 = v58
	v58 = arg0
	loc13 = v58
	v58 = 0x11<32>
	loc56 = v58
	// succ:  l0011BEBE
l0011BEBE:
	goto l0011BF4D
	// succ:  l0011BF4D
l0011BEC0:
	v58 = loc14
	v59 = loc24
	v60 = v58 >u v59
	loc25 = v60
	v58 = loc14
	v59 = 1<32>
	v58 = v58 + v59
	loc27 = v58
	v58 = loc25
	branch !v58 l0011BEDE
	// succ:  l0011BED2 l0011BEDE
l0011BED2:
	v58 = loc27
	v58 = fn0011B67B(v58)
	loc28 = v58
	v58 = loc28
	loc2 = v58
	goto l0011BF17
	// succ:  l0011BF17
l0011BEDE:
	v58 = 0<32>
	Mem0[0x00140048<p32>:word32] = v58
	v58 = 0x1EB<32>
	v59 = loc27
	v58 = invoke_ii(v58, v59)
	loc29 = v58
	v58 = Mem0[0x00140048<p32>:word32]
	loc30 = v58
	v58 = 0<32>
	Mem0[0x00140048<p32>:word32] = v58
	v58 = loc30
	v59 = 1<32>
	v58 = v58 & v59
	loc31 = v58
	v58 = loc31
	branch !v58 l0011BF12
	// succ:  l0011BEFE l0011BF12
l0011BEFE:
	v58 = 0<32>
	v58 = ___cxa_find_matching_catch_3(v58)
	loc32 = v58
	v58 = Mem0[0x00140094<p32>:word32]
	loc33 = v58
	v58 = loc32
	v58 = ___cxa_begin_catch(v58)
	___cxa_end_catch()
	goto l0011C015
	// succ:  l0011C015
l0011BF12:
	v58 = loc29
	loc2 = v58
	// succ:  l0011BF16
l0011BF16:
	// succ:  l0011BF17
l0011BF17:
	v58 = loc49
	branch !v58 l0011BF36
	// succ:  l0011BF1C l0011BF36
l0011BF1C:
	v58 = arg0
	v58 = Mem0[v58:word32]
	loc34 = v58
	v58 = loc34
	loc4 = v58
	v58 = 1<32>
	loc7 = v58
	v58 = loc2
	loc12 = v58
	v58 = 0x10<32>
	loc56 = v58
	goto l0011BF4E
	// succ:  l0011BF4E
l0011BF36:
	v58 = arg0
	loc5 = v58
	v58 = 1<32>
	loc8 = v58
	v58 = 0<32>
	loc10 = v58
	v58 = loc2
	loc13 = v58
	v58 = 0x11<32>
	loc56 = v58
	goto l0011BF4E
	// succ:  l0011BF4E
l0011BF4C:
	// succ:  l0011BF4D
l0011BF4D:
	// succ:  l0011BF4E
l0011BF4E:
	v58 = loc56
	v59 = 0x10<32>
	v60 = v58 == v59
	branch !v60 l0011BF79
	// succ:  l0011BF56 l0011BF79
l0011BF56:
	v58 = arg0
	v59 = 4<32>
	v58 = v58 + v59
	loc36 = v58
	v58 = loc36
	v58 = Mem0[v58:word32]
	loc38 = v58
	v58 = loc4
	loc3 = v58
	v58 = loc7
	loc6 = v58
	v58 = 1<32>
	loc9 = v58
	v58 = loc12
	loc11 = v58
	v58 = loc38
	loc41 = v58
	goto l0011BF9D
	// succ:  l0011BF9D
l0011BF79:
	v58 = loc56
	v59 = 0x11<32>
	v60 = v58 == v59
	branch !v60 l0011BF9D
	// succ:  l0011BF80 l0011BF9D
l0011BF80:
	v58 = loc48
	v59 = 0xFF<32>
	v58 = v58 & v59
	loc39 = v58
	v58 = loc5
	loc3 = v58
	v58 = loc8
	loc6 = v58
	v58 = loc10
	loc9 = v58
	v58 = loc13
	loc11 = v58
	v58 = loc39
	loc41 = v58
	// succ:  l0011BF9D
l0011BF9D:
	// succ:  l0011BF9D
l0011BF9D:
	v58 = loc41
	v59 = 1<32>
	v58 = v58 + v59
	loc40 = v58
	v58 = loc40
	v59 = 0<32>
	v60 = v58 == v59
	loc42 = v60
	v58 = loc42
	v60 = v58 == 0<32>
	branch !v60 l0011BFBC
	// succ:  l0011BFB1 l0011BFBC
l0011BFB1:
	v58 = loc11
	v59 = loc3
	v62 = loc40
	v58 = _memcpy(v58, v59, v62)
	// succ:  l0011BFBC
l0011BFBC:
	v58 = loc9
	branch !v58 l0011BFC6
	// succ:  l0011BFC0 l0011BFC6
l0011BFC0:
	v58 = loc3
	fn0011B709(v58)
	// succ:  l0011BFC6
l0011BFC6:
	v58 = loc6
	branch !v58 l0011C002
	// succ:  l0011BFCA l0011C002
l0011BFCA:
	v58 = loc14
	v59 = 1<32>
	v58 = v58 + v59
	loc43 = v58
	v58 = loc43
	v59 = 0x80000000<32>
	v58 = v58 | v59
	loc44 = v58
	v58 = arg0
	v59 = 8<32>
	v58 = v58 + v59
	loc45 = v58
	v58 = loc45
	v59 = loc44
	Mem0[v58:word32] = v59
	v58 = arg0
	v59 = 4<32>
	v58 = v58 + v59
	loc46 = v58
	v58 = loc46
	v59 = loc19
	Mem0[v58:word32] = v59
	v58 = arg0
	v59 = loc11
	Mem0[v58:word32] = v59
	goto l0011C015
	// succ:  l0011C015
l0011C002:
	v58 = loc19
	v59 = 0xFF<32>
	v58 = v58 & v59
	loc47 = v58
	v58 = loc37
	v59 = loc47
	v63 = SLICE(v59, byte, 0)
	Mem0[v58:byte] = v63
	goto l0011C015
	// succ:  l0011C015
l0011C013:
	// succ:  l0011C015
l0011C015:
	// succ:  l0011C015
l0011C015:
	return
	// succ:  fn0011BDC1_exit
l0011C017:
	return
	// succ:  fn0011BDC1_exit
fn0011BDC1_exit:


// fn0011C019
// Return size: 0
word32 fn0011C019(word32 arg0, word32 arg1)
fn0011C019_entry:
	// succ:  l0011C019
l0011C019:
	v6 = Mem0[0x00140030<p32>:word32]
	loc5 = v6
	v6 = arg1
	v6 = fn000DAF30(v6)
	loc2 = v6
	v6 = arg0
	v7 = arg1
	v8 = loc2
	v6 = fn0011BB2C(v6, v7, v8)
	loc3 = v6
	v6 = loc3
	return v6
	// succ:  fn0011C019_exit
l0011C034:
	return v6
	// succ:  fn0011C019_exit
fn0011C019_exit:


// fn0011C036
// Return size: 0
void fn0011C036(word32 arg0, word32 arg1, word32 arg2)
fn0011C036_entry:
	// succ:  l0011C036
l0011C036:
	v18 = Mem0[0x00140030<p32>:word32]
	loc18 = v18
	v18 = arg0
	v19 = 0xB<32>
	v18 = v18 + v19
	loc10 = v18
	v18 = loc10
	v20 = Mem0[v18:int8]
	v18 = CONVERT(v20, int8, word32)
	loc11 = v18
	v18 = loc11
	v19 = 0x18<32>
	v18 = v18 << v19
	v19 = 0x18<32>
	v18 = v18 >> v19
	v19 = 0<32>
	v21 = v18 < v19
	loc12 = v21
	v18 = loc12
	branch !v18 l0011C06E
	// succ:  l0011C05B l0011C06E
l0011C05B:
	v18 = arg0
	v19 = 4<32>
	v18 = v18 + v19
	loc13 = v18
	v18 = loc13
	v18 = Mem0[v18:word32]
	loc14 = v18
	v18 = loc14
	loc3 = v18
	goto l0011C07A
	// succ:  l0011C07A
l0011C06E:
	v18 = loc11
	v19 = 0xFF<32>
	v18 = v18 & v19
	loc15 = v18
	v18 = loc15
	loc3 = v18
	// succ:  l0011C07A
l0011C07A:
	v18 = loc3
	v19 = arg1
	v21 = v18 <u v19
	loc16 = v21
	// succ:  l0011C082
l0011C082:
	v18 = loc16
	branch !v18 l0011C09A
	// succ:  l0011C088 l0011C09A
l0011C088:
	v18 = arg1
	v19 = loc3
	v18 = v18 - v19
	loc4 = v18
	v18 = arg0
	v19 = loc4
	v22 = arg2
	v18 = fn0011C0EA(v18, v19, v22)
	goto l0011C0E4
	// succ:  l0011C0E4
l0011C09A:
	v18 = loc12
	branch !v18 l0011C0C4
	// succ:  l0011C09E l0011C0C4
l0011C09E:
	v18 = arg0
	v18 = Mem0[v18:word32]
	loc5 = v18
	v18 = loc5
	v19 = arg1
	v18 = v18 + v19
	loc6 = v18
	v18 = loc6
	v19 = 0<32>
	v23 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v23
	v18 = arg0
	v19 = 4<32>
	v18 = v18 + v19
	loc7 = v18
	v18 = loc7
	v19 = arg1
	Mem0[v18:word32] = v19
	goto l0011C0E6
	// succ:  l0011C0E6
l0011C0C4:
	v18 = arg0
	v19 = arg1
	v18 = v18 + v19
	loc8 = v18
	v18 = loc8
	v19 = 0<32>
	v24 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v24
	v18 = arg1
	v19 = 0xFF<32>
	v18 = v18 & v19
	loc9 = v18
	v18 = loc10
	v19 = loc9
	v25 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v25
	goto l0011C0E6
	// succ:  l0011C0E6
l0011C0E3:
	// succ:  l0011C0E4
l0011C0E4:
	// succ:  l0011C0E6
l0011C0E6:
	return
	// succ:  fn0011C036_exit
l0011C0E8:
	return
	// succ:  fn0011C036_exit
fn0011C036_exit:


// fn0011C0EA
// Return size: 0
word32 fn0011C0EA(word32 arg0, word32 arg1, word32 arg2)
fn0011C0EA_entry:
	// succ:  l0011C0EA
l0011C0EA:
	v33 = Mem0[0x00140030<p32>:word32]
	loc33 = v33
	v33 = arg1
	v34 = 0<32>
	v35 = v33 == v34
	loc24 = v35
	v33 = loc24
	v35 = v33 == 0<32>
	branch !v35 l0011C225
	// succ:  l0011C0FC l0011C225
l0011C0FC:
	v33 = arg0
	v34 = 0xB<32>
	v33 = v33 + v34
	loc25 = v33
	v33 = loc25
	v36 = Mem0[v33:int8]
	v33 = CONVERT(v36, int8, word32)
	loc26 = v33
	v33 = loc26
	v34 = 0x18<32>
	v33 = v33 << v34
	v34 = 0x18<32>
	v33 = v33 >> v34
	v34 = 0<32>
	v35 = v33 < v34
	loc27 = v35
	v33 = loc27
	branch !v33 l0011C152
	// succ:  l0011C11B l0011C152
l0011C11B:
	v33 = arg0
	v34 = 8<32>
	v33 = v33 + v34
	loc28 = v33
	v33 = loc28
	v33 = Mem0[v33:word32]
	loc29 = v33
	v33 = loc29
	v34 = 0x7FFFFFFF<32>
	v33 = v33 & v34
	loc30 = v33
	v33 = loc30
	v34 = 0xFFFFFFFF<32>
	v33 = v33 + v34
	loc31 = v33
	v33 = arg0
	v34 = 4<32>
	v33 = v33 + v34
	loc4 = v33
	v33 = loc4
	v33 = Mem0[v33:word32]
	loc5 = v33
	v33 = loc31
	loc8 = v33
	v33 = loc5
	loc9 = v33
	goto l0011C162
	// succ:  l0011C162
l0011C152:
	v33 = loc26
	v34 = 0xFF<32>
	v33 = v33 & v34
	loc6 = v33
	v33 = 0xA<32>
	loc8 = v33
	v33 = loc6
	loc9 = v33
	// succ:  l0011C162
l0011C162:
	v33 = loc8
	v34 = loc9
	v33 = v33 - v34
	loc7 = v33
	v33 = loc7
	v34 = arg1
	v35 = v33 <u v34
	loc10 = v35
	v33 = loc10
	branch !v33 l0011C1A0
	// succ:  l0011C175 l0011C1A0
l0011C175:
	v33 = arg1
	v34 = loc8
	v33 = v33 - v34
	loc11 = v33
	v33 = loc11
	v34 = loc9
	v33 = v33 + v34
	loc12 = v33
	v33 = arg0
	v34 = loc8
	v37 = loc12
	v38 = loc9
	v39 = loc9
	v40 = 0<32>
	v41 = 0<32>
	fn0011C22A(v33, v34, v37, v38, v39, v40, v41)
	v33 = loc25
	v42 = Mem0[v33:int8]
	v33 = CONVERT(v42, int8, word32)
	loc3 = v33
	v33 = loc3
	loc14 = v33
	goto l0011C1A4
	// succ:  l0011C1A4
l0011C1A0:
	v33 = loc26
	loc14 = v33
	// succ:  l0011C1A4
l0011C1A4:
	v33 = loc14
	v34 = 0x18<32>
	v33 = v33 << v34
	v34 = 0x18<32>
	v33 = v33 >> v34
	v34 = 0<32>
	v35 = v33 < v34
	loc13 = v35
	v33 = loc13
	branch !v33 l0011C1C2
	// succ:  l0011C1B6 l0011C1C2
l0011C1B6:
	v33 = arg0
	v33 = Mem0[v33:word32]
	loc15 = v33
	v33 = loc15
	loc17 = v33
	goto l0011C1C6
	// succ:  l0011C1C6
l0011C1C2:
	v33 = arg0
	loc17 = v33
	// succ:  l0011C1C6
l0011C1C6:
	v33 = loc17
	v34 = loc9
	v33 = v33 + v34
	loc16 = v33
	v33 = loc16
	v34 = arg2
	v37 = arg1
	v33 = _memset(v33, v34, v37)
	v33 = loc9
	v34 = arg1
	v33 = v33 + v34
	loc18 = v33
	v33 = loc25
	v43 = Mem0[v33:int8]
	v33 = CONVERT(v43, int8, word32)
	loc19 = v33
	v33 = loc19
	v34 = 0x18<32>
	v33 = v33 << v34
	v34 = 0x18<32>
	v33 = v33 >> v34
	v34 = 0<32>
	v35 = v33 < v34
	loc20 = v35
	v33 = loc20
	branch !v33 l0011C206
	// succ:  l0011C1F7 l0011C206
l0011C1F7:
	v33 = arg0
	v34 = 4<32>
	v33 = v33 + v34
	loc21 = v33
	v33 = loc21
	v34 = loc18
	Mem0[v33:word32] = v34
	goto l0011C215
	// succ:  l0011C215
l0011C206:
	v33 = loc18
	v34 = 0xFF<32>
	v33 = v33 & v34
	loc22 = v33
	v33 = loc25
	v34 = loc22
	v44 = SLICE(v34, byte, 0)
	Mem0[v33:byte] = v44
	// succ:  l0011C215
l0011C215:
	v33 = loc17
	v34 = loc18
	v33 = v33 + v34
	loc23 = v33
	v33 = loc23
	v34 = 0<32>
	v45 = SLICE(v34, byte, 0)
	Mem0[v33:byte] = v45
	// succ:  l0011C225
l0011C225:
	v33 = arg0
	return v33
	// succ:  fn0011C0EA_exit
l0011C228:
	return v33
	// succ:  fn0011C0EA_exit
fn0011C0EA_exit:


// fn0011C22A
// Return size: 0
void fn0011C22A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn0011C22A_entry:
	// succ:  l0011C22A
l0011C22A:
	v33 = Mem0[0x00140030<p32>:word32]
	loc37 = v33
	v33 = 0xFFFFFFEF<32>
	v34 = arg1
	v33 = v33 - v34
	loc32 = v33
	v33 = loc32
	v34 = arg2
	v35 = v33 <u v34
	loc33 = v35
	v33 = loc33
	branch !v33 l0011C248
	// succ:  l0011C242 l0011C248
l0011C242:
	v33 = arg0
	fn0011B8A5(v33)
	// succ:  l0011C248
l0011C248:
	v33 = arg0
	v34 = 0xB<32>
	v33 = v33 + v34
	loc34 = v33
	v33 = loc34
	v36 = Mem0[v33:int8]
	v33 = CONVERT(v36, int8, word32)
	loc8 = v33
	v33 = loc8
	v34 = 0x18<32>
	v33 = v33 << v34
	v34 = 0x18<32>
	v33 = v33 >> v34
	v34 = 0<32>
	v35 = v33 < v34
	loc9 = v35
	v33 = loc9
	branch !v33 l0011C273
	// succ:  l0011C267 l0011C273
l0011C267:
	v33 = arg0
	v33 = Mem0[v33:word32]
	loc10 = v33
	v33 = loc10
	loc21 = v33
	goto l0011C277
	// succ:  l0011C277
l0011C273:
	v33 = arg0
	loc21 = v33
	// succ:  l0011C277
l0011C277:
	v33 = arg1
	v34 = 0x7FFFFFE7<32>
	v35 = v33 <u v34
	loc11 = v35
	v33 = loc11
	branch !v33 l0011C2CE
	// succ:  l0011C287 l0011C2CE
l0011C287:
	v33 = arg2
	v34 = arg1
	v33 = v33 + v34
	loc12 = v33
	v33 = arg1
	v34 = 1<32>
	v33 = v33 << v34
	loc13 = v33
	v33 = loc12
	v34 = loc13
	v35 = v33 <u v34
	loc14 = v35
	v33 = loc14
	branch !v33 l0011C2A3
	// succ:  l0011C2A0 l0011C2A3
l0011C2A0:
	v33 = loc13
	goto l0011C2A5
	// succ:  l0011C2A5
l0011C2A3:
	v33 = loc12
	// succ:  l0011C2A5
l0011C2A5:
	loc7 = v33
	v33 = loc7
	v34 = 0xB<32>
	v35 = v33 <u v34
	loc15 = v35
	v33 = loc7
	v34 = 0x10<32>
	v33 = v33 + v34
	loc16 = v33
	v33 = loc16
	v34 = 0xFFFFFFF0<32>
	v33 = v33 & v34
	loc17 = v33
	v33 = loc15
	branch !v33 l0011C2C4
	// succ:  l0011C2C1 l0011C2C4
l0011C2C1:
	v33 = 0xB<32>
	goto l0011C2C6
	// succ:  l0011C2C6
l0011C2C4:
	v33 = loc17
	// succ:  l0011C2C6
l0011C2C6:
	loc35 = v33
	v33 = loc35
	loc18 = v33
	goto l0011C2D2
	// succ:  l0011C2D2
l0011C2CE:
	v33 = 0xFFFFFFEF<32>
	loc18 = v33
	// succ:  l0011C2D2
l0011C2D2:
	v33 = loc18
	v33 = fn0011B67B(v33)
	loc19 = v33
	v33 = arg4
	v34 = 0<32>
	v35 = v33 == v34
	loc20 = v35
	v33 = loc20
	v35 = v33 == 0<32>
	branch !v35 l0011C2F1
	// succ:  l0011C2E6 l0011C2F1
l0011C2E6:
	v33 = loc19
	v34 = loc21
	v37 = arg4
	v33 = _memcpy(v33, v34, v37)
	// succ:  l0011C2F1
l0011C2F1:
	v33 = arg3
	v34 = arg5
	v33 = v33 - v34
	loc22 = v33
	v33 = loc22
	v34 = arg4
	v33 = v33 - v34
	loc23 = v33
	v33 = loc23
	v34 = 0<32>
	v35 = v33 == v34
	loc24 = v35
	v33 = loc24
	v35 = v33 == 0<32>
	branch !v35 l0011C332
	// succ:  l0011C30B l0011C332
l0011C30B:
	v33 = loc19
	v34 = arg4
	v33 = v33 + v34
	loc25 = v33
	v33 = loc25
	v34 = arg6
	v33 = v33 + v34
	loc26 = v33
	v33 = loc21
	v34 = arg4
	v33 = v33 + v34
	loc27 = v33
	v33 = loc27
	v34 = arg5
	v33 = v33 + v34
	loc28 = v33
	v33 = loc26
	v34 = loc28
	v37 = loc23
	v33 = _memcpy(v33, v34, v37)
	// succ:  l0011C332
l0011C332:
	v33 = arg1
	v34 = 0xA<32>
	v35 = v33 == v34
	loc29 = v35
	v33 = loc29
	v35 = v33 == 0<32>
	branch !v35 l0011C344
	// succ:  l0011C33E l0011C344
l0011C33E:
	v33 = loc21
	fn0011B709(v33)
	// succ:  l0011C344
l0011C344:
	v33 = arg0
	v34 = loc19
	Mem0[v33:word32] = v34
	v33 = loc18
	v34 = 0x80000000<32>
	v33 = v33 | v34
	loc30 = v33
	v33 = arg0
	v34 = 8<32>
	v33 = v33 + v34
	loc31 = v33
	v33 = loc31
	v34 = loc30
	Mem0[v33:word32] = v34
	return
	// succ:  fn0011C22A_exit
l0011C365:
	return
	// succ:  fn0011C22A_exit
fn0011C22A_exit:


// fn0011C367
// Return size: 0
word32 fn0011C367(word32 arg0, word32 arg1, word32 arg2)
fn0011C367_entry:
	// succ:  l0011C367
l0011C367:
	v30 = Mem0[0x00140030<p32>:word32]
	loc30 = v30
	v30 = arg0
	v31 = 0xB<32>
	v30 = v30 + v31
	loc21 = v30
	v30 = loc21
	v32 = Mem0[v30:int8]
	v30 = CONVERT(v32, int8, word32)
	loc22 = v30
	v30 = loc22
	v31 = 0x18<32>
	v30 = v30 << v31
	v31 = 0x18<32>
	v30 = v30 >> v31
	v31 = 0<32>
	v33 = v30 < v31
	loc23 = v33
	v30 = loc23
	branch !v30 l0011C3C3
	// succ:  l0011C38C l0011C3C3
l0011C38C:
	v30 = arg0
	v31 = 8<32>
	v30 = v30 + v31
	loc24 = v30
	v30 = loc24
	v30 = Mem0[v30:word32]
	loc25 = v30
	v30 = loc25
	v31 = 0x7FFFFFFF<32>
	v30 = v30 & v31
	loc26 = v30
	v30 = loc26
	v31 = 0xFFFFFFFF<32>
	v30 = v30 + v31
	loc28 = v30
	v30 = arg0
	v31 = 4<32>
	v30 = v30 + v31
	loc27 = v30
	v30 = loc27
	v30 = Mem0[v30:word32]
	loc3 = v30
	v30 = loc28
	loc6 = v30
	v30 = loc3
	loc7 = v30
	goto l0011C3D3
	// succ:  l0011C3D3
l0011C3C3:
	v30 = loc22
	v31 = 0xFF<32>
	v30 = v30 & v31
	loc4 = v30
	v30 = 0xA<32>
	loc6 = v30
	v30 = loc4
	loc7 = v30
	// succ:  l0011C3D3
l0011C3D3:
	v30 = loc6
	v31 = loc7
	v30 = v30 - v31
	loc5 = v30
	v30 = loc5
	v31 = arg2
	v33 = v30 <u v31
	loc8 = v33
	v30 = loc8
	branch !v30 l0011C408
	// succ:  l0011C3E6 l0011C408
l0011C3E6:
	v30 = arg2
	v31 = loc6
	v30 = v30 - v31
	loc19 = v30
	v30 = loc19
	v31 = loc7
	v30 = v30 + v31
	loc20 = v30
	v30 = arg0
	v31 = loc6
	v34 = loc20
	v35 = loc7
	v36 = loc7
	v37 = 0<32>
	v38 = arg2
	v39 = arg1
	fn0011BC43(v30, v31, v34, v35, v36, v37, v38, v39)
	goto l0011C487
	// succ:  l0011C487
l0011C408:
	v30 = arg2
	v31 = 0<32>
	v33 = v30 == v31
	loc9 = v33
	v30 = loc9
	v33 = v30 == 0<32>
	branch !v33 l0011C487
	// succ:  l0011C414 l0011C487
l0011C414:
	v30 = loc23
	branch !v30 l0011C424
	// succ:  l0011C418 l0011C424
l0011C418:
	v30 = arg0
	v30 = Mem0[v30:word32]
	loc10 = v30
	v30 = loc10
	loc12 = v30
	goto l0011C428
	// succ:  l0011C428
l0011C424:
	v30 = arg0
	loc12 = v30
	// succ:  l0011C428
l0011C428:
	v30 = loc12
	v31 = loc7
	v30 = v30 + v31
	loc11 = v30
	v30 = loc11
	v31 = arg1
	v34 = arg2
	v30 = _memcpy(v30, v31, v34)
	v30 = loc7
	v31 = arg2
	v30 = v30 + v31
	loc13 = v30
	v30 = loc21
	v40 = Mem0[v30:int8]
	v30 = CONVERT(v40, int8, word32)
	loc14 = v30
	v30 = loc14
	v31 = 0x18<32>
	v30 = v30 << v31
	v31 = 0x18<32>
	v30 = v30 >> v31
	v31 = 0<32>
	v33 = v30 < v31
	loc15 = v33
	v30 = loc15
	branch !v30 l0011C468
	// succ:  l0011C459 l0011C468
l0011C459:
	v30 = arg0
	v31 = 4<32>
	v30 = v30 + v31
	loc16 = v30
	v30 = loc16
	v31 = loc13
	Mem0[v30:word32] = v31
	goto l0011C477
	// succ:  l0011C477
l0011C468:
	v30 = loc13
	v31 = 0xFF<32>
	v30 = v30 & v31
	loc17 = v30
	v30 = loc21
	v31 = loc17
	v41 = SLICE(v31, byte, 0)
	Mem0[v30:byte] = v41
	// succ:  l0011C477
l0011C477:
	v30 = loc12
	v31 = loc13
	v30 = v30 + v31
	loc18 = v30
	v30 = loc18
	v31 = 0<32>
	v42 = SLICE(v31, byte, 0)
	Mem0[v30:byte] = v42
	// succ:  l0011C487
l0011C487:
	// succ:  l0011C487
l0011C487:
	v30 = arg0
	return v30
	// succ:  fn0011C367_exit
l0011C48B:
	return v30
	// succ:  fn0011C367_exit
fn0011C367_exit:


// fn0011C48D
// Return size: 0
word32 fn0011C48D(word32 arg0, word32 arg1)
fn0011C48D_entry:
	// succ:  l0011C48D
l0011C48D:
	v6 = Mem0[0x00140030<p32>:word32]
	loc5 = v6
	v6 = arg1
	v6 = fn000DAF30(v6)
	loc2 = v6
	v6 = arg0
	v7 = arg1
	v8 = loc2
	v6 = fn0011C367(v6, v7, v8)
	loc3 = v6
	v6 = loc3
	return v6
	// succ:  fn0011C48D_exit
l0011C4A8:
	return v6
	// succ:  fn0011C48D_exit
fn0011C48D_exit:


// fn0011C4AA
// Return size: 0
void fn0011C4AA(word32 arg0, word32 arg1)
fn0011C4AA_entry:
	// succ:  l0011C4AA
l0011C4AA:
	v27 = Mem0[0x00140030<p32>:word32]
	loc26 = v27
	v27 = arg0
	v28 = 0xB<32>
	v27 = v27 + v28
	loc16 = v27
	v27 = loc16
	v29 = Mem0[v27:int8]
	v27 = CONVERT(v29, int8, word32)
	loc18 = v27
	v27 = loc18
	v28 = 0x18<32>
	v27 = v27 << v28
	v28 = 0x18<32>
	v27 = v27 >> v28
	v28 = 0<32>
	v30 = v27 < v28
	loc19 = v30
	v27 = loc19
	branch !v27 l0011C506
	// succ:  l0011C4CF l0011C506
l0011C4CF:
	v27 = arg0
	v28 = 8<32>
	v27 = v27 + v28
	loc21 = v27
	v27 = loc21
	v27 = Mem0[v27:word32]
	loc22 = v27
	v27 = loc22
	v28 = 0x7FFFFFFF<32>
	v27 = v27 & v28
	loc23 = v27
	v27 = loc23
	v28 = 0xFFFFFFFF<32>
	v27 = v27 + v28
	loc24 = v27
	v27 = arg0
	v28 = 4<32>
	v27 = v27 + v28
	loc6 = v27
	v27 = loc6
	v27 = Mem0[v27:word32]
	loc7 = v27
	v27 = loc7
	loc3 = v27
	v27 = loc24
	loc4 = v27
	goto l0011C516
	// succ:  l0011C516
l0011C506:
	v27 = loc18
	v28 = 0xFF<32>
	v27 = v27 & v28
	loc20 = v27
	v27 = loc20
	loc3 = v27
	v27 = 0xA<32>
	loc4 = v27
	// succ:  l0011C516
l0011C516:
	v27 = loc3
	v28 = loc4
	v30 = v27 == v28
	loc8 = v30
	v27 = loc8
	branch !v27 l0011C556
	// succ:  l0011C522 l0011C556
l0011C522:
	v27 = arg0
	v28 = loc4
	v31 = 1<32>
	v32 = loc4
	v33 = loc4
	v34 = 0<32>
	v35 = 0<32>
	fn0011C22A(v27, v28, v31, v32, v33, v34, v35)
	v27 = loc16
	v36 = Mem0[v27:int8]
	v27 = CONVERT(v36, int8, word32)
	loc9 = v27
	v27 = loc9
	v28 = 0x18<32>
	v27 = v27 << v28
	v28 = 0x18<32>
	v27 = v27 >> v28
	v28 = 0xFFFFFFFF<32>
	v30 = v27 > v28
	loc10 = v30
	v27 = loc10
	branch !v27 l0011C550
	// succ:  l0011C54B l0011C550
l0011C54B:
	v27 = 7<32>
	loc25 = v27
	goto l0011C554
	// succ:  l0011C554
l0011C550:
	v27 = 8<32>
	loc25 = v27
	// succ:  l0011C554
l0011C554:
	goto l0011C564
	// succ:  l0011C564
l0011C556:
	v27 = loc19
	branch !v27 l0011C55F
	// succ:  l0011C55A l0011C55F
l0011C55A:
	v27 = 8<32>
	loc25 = v27
	goto l0011C563
	// succ:  l0011C563
l0011C55F:
	v27 = 7<32>
	loc25 = v27
	// succ:  l0011C563
l0011C563:
	// succ:  l0011C564
l0011C564:
	v27 = loc25
	v28 = 7<32>
	v30 = v27 == v28
	branch !v30 l0011C587
	// succ:  l0011C56C l0011C587
l0011C56C:
	v27 = loc3
	v28 = 1<32>
	v27 = v27 + v28
	loc11 = v27
	v27 = loc11
	v28 = 0xFF<32>
	v27 = v27 & v28
	loc12 = v27
	v27 = loc16
	v28 = loc12
	v37 = SLICE(v28, byte, 0)
	Mem0[v27:byte] = v37
	v27 = arg0
	loc5 = v27
	goto l0011C5AF
	// succ:  l0011C5AF
l0011C587:
	v27 = loc25
	v28 = 8<32>
	v30 = v27 == v28
	branch !v30 l0011C5AF
	// succ:  l0011C58E l0011C5AF
l0011C58E:
	v27 = arg0
	v27 = Mem0[v27:word32]
	loc13 = v27
	v27 = loc3
	v28 = 1<32>
	v27 = v27 + v28
	loc14 = v27
	v27 = arg0
	v28 = 4<32>
	v27 = v27 + v28
	loc15 = v27
	v27 = loc15
	v28 = loc14
	Mem0[v27:word32] = v28
	v27 = loc13
	loc5 = v27
	// succ:  l0011C5AF
l0011C5AF:
	// succ:  l0011C5AF
l0011C5AF:
	v27 = loc5
	v28 = loc3
	v27 = v27 + v28
	loc2 = v27
	v27 = loc2
	v28 = arg1
	v38 = SLICE(v28, byte, 0)
	Mem0[v27:byte] = v38
	v27 = loc2
	v28 = 1<32>
	v27 = v27 + v28
	loc17 = v27
	v27 = loc17
	v28 = 0<32>
	v39 = SLICE(v28, byte, 0)
	Mem0[v27:byte] = v39
	return
	// succ:  fn0011C4AA_exit
l0011C5CD:
	return
	// succ:  fn0011C4AA_exit
fn0011C4AA_exit:


// fn0011C5CF
// Return size: 0
void fn0011C5CF(word32 arg0, word32 arg1, word32 arg2)
fn0011C5CF_entry:
	// succ:  l0011C5CF
l0011C5CF:
	v20 = Mem0[0x00140030<p32>:word32]
	loc20 = v20
	v20 = arg2
	v21 = 0x3FFFFFEF<32>
	v22 = v20 >u v21
	loc12 = v22
	v20 = loc12
	branch !v20 l0011C5EA
	// succ:  l0011C5E4 l0011C5EA
l0011C5E4:
	v20 = arg0
	fn0011B8A5(v20)
	// succ:  l0011C5EA
l0011C5EA:
	v20 = arg2
	v21 = 2<32>
	v22 = v20 <u v21
	loc13 = v22
	// succ:  l0011C5F1
l0011C5F1:
	v20 = loc13
	branch !v20 l0011C619
	// succ:  l0011C5F7 l0011C619
l0011C5F7:
	v20 = arg2
	v21 = 0xFF<32>
	v20 = v20 & v21
	loc14 = v20
	v20 = arg0
	v21 = 8<32>
	v20 = v20 + v21
	loc15 = v20
	v20 = loc15
	v21 = 3<32>
	v20 = v20 + v21
	loc16 = v20
	v20 = loc16
	v21 = loc14
	v23 = SLICE(v21, byte, 0)
	Mem0[v20:byte] = v23
	v20 = arg0
	loc3 = v20
	goto l0011C68F
	// succ:  l0011C68F
l0011C619:
	v20 = arg2
	v21 = 4<32>
	v20 = v20 + v21
	loc17 = v20
	v20 = loc17
	v21 = 0xFFFFFFFC<32>
	v20 = v20 & v21
	loc18 = v20
	v20 = loc18
	v21 = 0x3FFFFFFF<32>
	v22 = v20 >u v21
	loc4 = v22
	v20 = loc4
	branch !v20 l0011C64C
	// succ:  l0011C636 l0011C64C
l0011C636:
	v20 = 4<32>
	v20 = ___cxa_allocate_exception(v20)
	loc5 = v20
	v20 = loc5
	fn0011EE8C(v20)
	v20 = loc5
	v21 = 0x9C8<32>
	v24 = 0x153<32>
	___cxa_throw(v20, v21, v24)
	goto l0011C68E
	// succ:  l0011C68E
l0011C64C:
	v20 = loc18
	v21 = 2<32>
	v20 = v20 << v21
	loc6 = v20
	v20 = loc6
	v20 = fn0011B67B(v20)
	loc7 = v20
	v20 = arg0
	v21 = loc7
	Mem0[v20:word32] = v21
	v20 = loc18
	v21 = 0x80000000<32>
	v20 = v20 | v21
	loc8 = v20
	v20 = arg0
	v21 = 8<32>
	v20 = v20 + v21
	loc9 = v20
	v20 = loc9
	v21 = loc8
	Mem0[v20:word32] = v21
	v20 = arg0
	v21 = 4<32>
	v20 = v20 + v21
	loc10 = v20
	v20 = loc10
	v21 = arg2
	Mem0[v20:word32] = v21
	v20 = loc7
	loc3 = v20
	goto l0011C690
	// succ:  l0011C690
l0011C68E:
	// succ:  l0011C68F
l0011C68F:
	// succ:  l0011C690
l0011C690:
	v20 = loc3
	v21 = arg1
	v24 = arg2
	v20 = fn000E5F91(v20, v21, v24)
	v20 = loc3
	v21 = arg2
	v24 = 2<32>
	v21 = v21 << v24
	v20 = v20 + v21
	loc11 = v20
	v20 = loc11
	v21 = 0<32>
	Mem0[v20:word32] = v21
	return
	// succ:  fn0011C5CF_exit
l0011C6AD:
	return
	// succ:  fn0011C5CF_exit
fn0011C5CF_exit:


// fn0011C6AF
// Return size: 0
void fn0011C6AF(word32 arg0, word32 arg1, word32 arg2)
fn0011C6AF_entry:
	// succ:  l0011C6AF
l0011C6AF:
	v20 = Mem0[0x00140030<p32>:word32]
	loc20 = v20
	v20 = arg1
	v21 = 0x3FFFFFEF<32>
	v22 = v20 >u v21
	loc12 = v22
	v20 = loc12
	branch !v20 l0011C6CA
	// succ:  l0011C6C4 l0011C6CA
l0011C6C4:
	v20 = arg0
	fn0011B8A5(v20)
	// succ:  l0011C6CA
l0011C6CA:
	v20 = arg1
	v21 = 2<32>
	v22 = v20 <u v21
	loc13 = v22
	// succ:  l0011C6D1
l0011C6D1:
	v20 = loc13
	branch !v20 l0011C6F9
	// succ:  l0011C6D7 l0011C6F9
l0011C6D7:
	v20 = arg1
	v21 = 0xFF<32>
	v20 = v20 & v21
	loc14 = v20
	v20 = arg0
	v21 = 8<32>
	v20 = v20 + v21
	loc15 = v20
	v20 = loc15
	v21 = 3<32>
	v20 = v20 + v21
	loc16 = v20
	v20 = loc16
	v21 = loc14
	v23 = SLICE(v21, byte, 0)
	Mem0[v20:byte] = v23
	v20 = arg0
	loc3 = v20
	goto l0011C76F
	// succ:  l0011C76F
l0011C6F9:
	v20 = arg1
	v21 = 4<32>
	v20 = v20 + v21
	loc17 = v20
	v20 = loc17
	v21 = 0xFFFFFFFC<32>
	v20 = v20 & v21
	loc18 = v20
	v20 = loc18
	v21 = 0x3FFFFFFF<32>
	v22 = v20 >u v21
	loc4 = v22
	v20 = loc4
	branch !v20 l0011C72C
	// succ:  l0011C716 l0011C72C
l0011C716:
	v20 = 4<32>
	v20 = ___cxa_allocate_exception(v20)
	loc5 = v20
	v20 = loc5
	fn0011EE8C(v20)
	v20 = loc5
	v21 = 0x9C8<32>
	v24 = 0x153<32>
	___cxa_throw(v20, v21, v24)
	goto l0011C76E
	// succ:  l0011C76E
l0011C72C:
	v20 = loc18
	v21 = 2<32>
	v20 = v20 << v21
	loc6 = v20
	v20 = loc6
	v20 = fn0011B67B(v20)
	loc7 = v20
	v20 = arg0
	v21 = loc7
	Mem0[v20:word32] = v21
	v20 = loc18
	v21 = 0x80000000<32>
	v20 = v20 | v21
	loc8 = v20
	v20 = arg0
	v21 = 8<32>
	v20 = v20 + v21
	loc9 = v20
	v20 = loc9
	v21 = loc8
	Mem0[v20:word32] = v21
	v20 = arg0
	v21 = 4<32>
	v20 = v20 + v21
	loc10 = v20
	v20 = loc10
	v21 = arg1
	Mem0[v20:word32] = v21
	v20 = loc7
	loc3 = v20
	goto l0011C770
	// succ:  l0011C770
l0011C76E:
	// succ:  l0011C76F
l0011C76F:
	// succ:  l0011C770
l0011C770:
	v20 = loc3
	v21 = arg1
	v24 = arg2
	v20 = fn0011C78F(v20, v21, v24)
	v20 = loc3
	v21 = arg1
	v24 = 2<32>
	v21 = v21 << v24
	v20 = v20 + v21
	loc11 = v20
	v20 = loc11
	v21 = 0<32>
	Mem0[v20:word32] = v21
	return
	// succ:  fn0011C6AF_exit
l0011C78D:
	return
	// succ:  fn0011C6AF_exit
fn0011C6AF_exit:


// fn0011C78F
// Return size: 0
word32 fn0011C78F(word32 arg0, word32 arg1, word32 arg2)
fn0011C78F_entry:
	// succ:  l0011C78F
l0011C78F:
	v7 = Mem0[0x00140030<p32>:word32]
	loc7 = v7
	v7 = arg1
	v8 = 0<32>
	v9 = v7 == v8
	loc3 = v9
	v7 = loc3
	branch !v7 l0011C7A5
	// succ:  l0011C7A0 l0011C7A5
l0011C7A0:
	v7 = arg0
	loc5 = v7
	goto l0011C7B4
	// succ:  l0011C7B4
l0011C7A5:
	v7 = arg0
	v8 = arg2
	v10 = arg1
	v7 = fn000DF09C(v7, v8, v10)
	loc4 = v7
	v7 = loc4
	loc5 = v7
	// succ:  l0011C7B4
l0011C7B4:
	v7 = loc5
	return v7
	// succ:  fn0011C78F_exit
l0011C7B8:
	return v7
	// succ:  fn0011C78F_exit
fn0011C78F_exit:


// fn0011C7BA
// Return size: 0
void fn0011C7BA(word32 arg0)
fn0011C7BA_entry:
	// succ:  l0011C7BA
l0011C7BA:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v9 = arg0
	v10 = 8<32>
	v9 = v9 + v10
	loc1 = v9
	v9 = loc1
	v10 = 3<32>
	v9 = v9 + v10
	loc2 = v9
	v9 = loc2
	v11 = Mem0[v9:int8]
	v9 = CONVERT(v11, int8, word32)
	loc3 = v9
	v9 = loc3
	v10 = 0x18<32>
	v9 = v9 << v10
	v10 = 0x18<32>
	v9 = v9 >> v10
	v10 = 0<32>
	v12 = v9 < v10
	loc4 = v12
	v9 = loc4
	branch !v9 l0011C7F3
	// succ:  l0011C7E6 l0011C7F3
l0011C7E6:
	v9 = arg0
	v9 = Mem0[v9:word32]
	loc5 = v9
	v9 = loc5
	fn0011B709(v9)
	// succ:  l0011C7F3
l0011C7F3:
	return
	// succ:  fn0011C7BA_exit
l0011C7F4:
	return
	// succ:  fn0011C7BA_exit
fn0011C7BA_exit:


// fn0011C7F6
// Return size: 0
word32 fn0011C7F6(word32 arg0, word32 arg1, word32 arg2)
fn0011C7F6_entry:
	// succ:  l0011C7F6
l0011C7F6:
	v25 = Mem0[0x00140030<p32>:word32]
	loc25 = v25
	v25 = arg0
	v26 = 8<32>
	v25 = v25 + v26
	loc16 = v25
	v25 = loc16
	v26 = 3<32>
	v25 = v25 + v26
	loc17 = v25
	v25 = loc17
	v27 = Mem0[v25:int8]
	v25 = CONVERT(v27, int8, word32)
	loc18 = v25
	v25 = loc18
	v26 = 0x18<32>
	v25 = v25 << v26
	v26 = 0x18<32>
	v25 = v25 >> v26
	v26 = 0<32>
	v28 = v25 < v26
	loc19 = v28
	v25 = loc19
	branch !v25 l0011C840
	// succ:  l0011C822 l0011C840
l0011C822:
	v25 = loc16
	v25 = Mem0[v25:word32]
	loc20 = v25
	v25 = loc20
	v26 = 0x7FFFFFFF<32>
	v25 = v25 & v26
	loc21 = v25
	v25 = loc21
	v26 = 0xFFFFFFFF<32>
	v25 = v25 + v26
	loc23 = v25
	v25 = loc23
	loc3 = v25
	goto l0011C844
	// succ:  l0011C844
l0011C840:
	v25 = 1<32>
	loc3 = v25
	// succ:  l0011C844
l0011C844:
	v25 = loc3
	v26 = arg2
	v28 = v25 <u v26
	loc22 = v28
	// succ:  l0011C84C
l0011C84C:
	v25 = loc22
	branch !v25 l0011C891
	// succ:  l0011C852 l0011C891
l0011C852:
	v25 = loc19
	branch !v25 l0011C869
	// succ:  l0011C856 l0011C869
l0011C856:
	v25 = arg0
	v26 = 4<32>
	v25 = v25 + v26
	loc11 = v25
	v25 = loc11
	v25 = Mem0[v25:word32]
	loc12 = v25
	v25 = loc12
	loc15 = v25
	goto l0011C875
	// succ:  l0011C875
l0011C869:
	v25 = loc18
	v26 = 0xFF<32>
	v25 = v25 & v26
	loc13 = v25
	v25 = loc13
	loc15 = v25
	// succ:  l0011C875
l0011C875:
	v25 = arg2
	v26 = loc3
	v25 = v25 - v26
	loc14 = v25
	v25 = arg0
	v26 = loc3
	v29 = loc14
	v30 = loc15
	v31 = 0<32>
	v32 = loc15
	v33 = arg2
	v34 = arg1
	fn0011C92E(v25, v26, v29, v30, v31, v32, v33, v34)
	goto l0011C8FC
	// succ:  l0011C8FC
l0011C891:
	v25 = loc19
	branch !v25 l0011C8A1
	// succ:  l0011C895 l0011C8A1
l0011C895:
	v25 = arg0
	v25 = Mem0[v25:word32]
	loc4 = v25
	v25 = loc4
	loc5 = v25
	goto l0011C8A5
	// succ:  l0011C8A5
l0011C8A1:
	v25 = arg0
	loc5 = v25
	// succ:  l0011C8A5
l0011C8A5:
	v25 = loc5
	v26 = arg1
	v29 = arg2
	v25 = fn0011C903(v25, v26, v29)
	v25 = loc5
	v26 = arg2
	v29 = 2<32>
	v26 = v26 << v29
	v25 = v25 + v26
	loc6 = v25
	v25 = loc6
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v25 = loc17
	v35 = Mem0[v25:int8]
	v25 = CONVERT(v35, int8, word32)
	loc7 = v25
	v25 = loc7
	v26 = 0x18<32>
	v25 = v25 << v26
	v26 = 0x18<32>
	v25 = v25 >> v26
	v26 = 0<32>
	v28 = v25 < v26
	loc8 = v28
	v25 = loc8
	branch !v25 l0011C8EA
	// succ:  l0011C8D9 l0011C8EA
l0011C8D9:
	v25 = arg0
	v26 = 4<32>
	v25 = v25 + v26
	loc9 = v25
	v25 = loc9
	v26 = arg2
	Mem0[v25:word32] = v26
	goto l0011C8FD
	// succ:  l0011C8FD
l0011C8EA:
	v25 = arg2
	v26 = 0xFF<32>
	v25 = v25 & v26
	loc10 = v25
	v25 = loc17
	v26 = loc10
	v36 = SLICE(v26, byte, 0)
	Mem0[v25:byte] = v36
	goto l0011C8FD
	// succ:  l0011C8FD
l0011C8FB:
	// succ:  l0011C8FC
l0011C8FC:
	// succ:  l0011C8FD
l0011C8FD:
	v25 = arg0
	return v25
	// succ:  fn0011C7F6_exit
l0011C901:
	return v25
	// succ:  fn0011C7F6_exit
fn0011C7F6_exit:


// fn0011C903
// Return size: 0
word32 fn0011C903(word32 arg0, word32 arg1, word32 arg2)
fn0011C903_entry:
	// succ:  l0011C903
l0011C903:
	v7 = Mem0[0x00140030<p32>:word32]
	loc7 = v7
	v7 = arg2
	v8 = 0<32>
	v9 = v7 == v8
	loc3 = v9
	v7 = loc3
	branch !v7 l0011C919
	// succ:  l0011C914 l0011C919
l0011C914:
	v7 = arg0
	loc5 = v7
	goto l0011C928
	// succ:  l0011C928
l0011C919:
	v7 = arg0
	v8 = arg1
	v10 = arg2
	v7 = fn000DF0F0(v7, v8, v10)
	loc4 = v7
	v7 = loc4
	loc5 = v7
	// succ:  l0011C928
l0011C928:
	v7 = loc5
	return v7
	// succ:  fn0011C903_exit
l0011C92C:
	return v7
	// succ:  fn0011C903_exit
fn0011C903_exit:


// fn0011C92E
// Return size: 0
void fn0011C92E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn0011C92E_entry:
	// succ:  l0011C92E
l0011C92E:
	v41 = Mem0[0x00140030<p32>:word32]
	loc46 = v41
	v41 = 0x3FFFFFEE<32>
	v42 = arg1
	v41 = v41 - v42
	loc43 = v41
	v41 = loc43
	v42 = arg2
	v43 = v41 <u v42
	loc44 = v43
	v41 = loc44
	branch !v41 l0011C950
	// succ:  l0011C94A l0011C950
l0011C94A:
	v41 = arg0
	fn0011B8A5(v41)
	// succ:  l0011C950
l0011C950:
	v41 = arg0
	v42 = 8<32>
	v41 = v41 + v42
	loc9 = v41
	v41 = loc9
	v42 = 3<32>
	v41 = v41 + v42
	loc10 = v41
	v41 = loc10
	v44 = Mem0[v41:int8]
	v41 = CONVERT(v44, int8, word32)
	loc11 = v41
	v41 = loc11
	v42 = 0x18<32>
	v41 = v41 << v42
	v42 = 0x18<32>
	v41 = v41 >> v42
	v42 = 0<32>
	v43 = v41 < v42
	loc12 = v43
	v41 = loc12
	branch !v41 l0011C982
	// succ:  l0011C976 l0011C982
l0011C976:
	v41 = arg0
	v41 = Mem0[v41:word32]
	loc13 = v41
	v41 = loc13
	loc28 = v41
	goto l0011C986
	// succ:  l0011C986
l0011C982:
	v41 = arg0
	loc28 = v41
	// succ:  l0011C986
l0011C986:
	v41 = arg1
	v42 = 0x1FFFFFE7<32>
	v43 = v41 <u v42
	loc14 = v43
	v41 = loc14
	branch !v41 l0011CA03
	// succ:  l0011C996 l0011CA03
l0011C996:
	v41 = arg2
	v42 = arg1
	v41 = v41 + v42
	loc15 = v41
	v41 = arg1
	v42 = 1<32>
	v41 = v41 << v42
	loc16 = v41
	v41 = loc15
	v42 = loc16
	v43 = v41 <u v42
	loc17 = v43
	v41 = loc17
	branch !v41 l0011C9B2
	// succ:  l0011C9AF l0011C9B2
l0011C9AF:
	v41 = loc16
	goto l0011C9B4
	// succ:  l0011C9B4
l0011C9B2:
	v41 = loc15
	// succ:  l0011C9B4
l0011C9B4:
	loc8 = v41
	v41 = loc8
	v42 = 2<32>
	v43 = v41 <u v42
	loc18 = v43
	v41 = loc8
	v42 = 4<32>
	v41 = v41 + v42
	loc19 = v41
	v41 = loc19
	v42 = 0xFFFFFFFC<32>
	v41 = v41 & v42
	loc20 = v41
	v41 = loc18
	branch !v41 l0011C9D3
	// succ:  l0011C9D0 l0011C9D3
l0011C9D0:
	v41 = 2<32>
	goto l0011C9D5
	// succ:  l0011C9D5
l0011C9D3:
	v41 = loc20
	// succ:  l0011C9D5
l0011C9D5:
	loc21 = v41
	v41 = loc21
	v42 = 0x3FFFFFFF<32>
	v43 = v41 >u v42
	loc22 = v43
	v41 = loc22
	branch !v41 l0011C9FD
	// succ:  l0011C9E7 l0011C9FD
l0011C9E7:
	v41 = 4<32>
	v41 = ___cxa_allocate_exception(v41)
	loc23 = v41
	v41 = loc23
	fn0011EE8C(v41)
	v41 = loc23
	v42 = 0x9C8<32>
	v45 = 0x153<32>
	___cxa_throw(v41, v42, v45)
	goto l0011CA01
	// succ:  l0011CA01
l0011C9FD:
	v41 = loc21
	loc25 = v41
	// succ:  l0011CA01
l0011CA01:
	goto l0011CA0B
	// succ:  l0011CA0B
l0011CA03:
	v41 = 0x3FFFFFEF<32>
	loc25 = v41
	// succ:  l0011CA0B
l0011CA0B:
	v41 = loc25
	v42 = 2<32>
	v41 = v41 << v42
	loc24 = v41
	v41 = loc24
	v41 = fn0011B67B(v41)
	loc26 = v41
	v41 = arg4
	v42 = 0<32>
	v43 = v41 == v42
	loc27 = v43
	v41 = loc27
	v43 = v41 == 0<32>
	branch !v43 l0011CA31
	// succ:  l0011CA26 l0011CA31
l0011CA26:
	v41 = loc26
	v42 = loc28
	v45 = arg4
	v41 = fn000E5F91(v41, v42, v45)
	// succ:  l0011CA31
l0011CA31:
	v41 = arg6
	v42 = 0<32>
	v43 = v41 == v42
	loc29 = v43
	v41 = loc29
	v43 = v41 == 0<32>
	branch !v43 l0011CA52
	// succ:  l0011CA3D l0011CA52
l0011CA3D:
	v41 = loc26
	v42 = arg4
	v45 = 2<32>
	v42 = v42 << v45
	v41 = v41 + v42
	loc30 = v41
	v41 = loc30
	v42 = arg7
	v45 = arg6
	v41 = fn000E5F91(v41, v42, v45)
	// succ:  l0011CA52
l0011CA52:
	v41 = arg3
	v42 = arg5
	v41 = v41 - v42
	loc31 = v41
	v41 = loc31
	v42 = arg4
	v41 = v41 - v42
	loc32 = v41
	v41 = loc32
	v42 = 0<32>
	v43 = v41 == v42
	loc33 = v43
	v41 = loc33
	v43 = v41 == 0<32>
	branch !v43 l0011CA9F
	// succ:  l0011CA6C l0011CA9F
l0011CA6C:
	v41 = loc28
	v42 = arg4
	v45 = 2<32>
	v42 = v42 << v45
	v41 = v41 + v42
	loc34 = v41
	v41 = loc34
	v42 = arg5
	v45 = 2<32>
	v42 = v42 << v45
	v41 = v41 + v42
	loc35 = v41
	v41 = loc26
	v42 = arg4
	v45 = 2<32>
	v42 = v42 << v45
	v41 = v41 + v42
	loc36 = v41
	v41 = loc36
	v42 = arg6
	v45 = 2<32>
	v42 = v42 << v45
	v41 = v41 + v42
	loc37 = v41
	v41 = loc37
	v42 = loc35
	v45 = loc32
	v41 = fn000E5F91(v41, v42, v45)
	// succ:  l0011CA9F
l0011CA9F:
	v41 = arg1
	v42 = 1<32>
	v43 = v41 == v42
	loc38 = v43
	v41 = loc38
	v43 = v41 == 0<32>
	branch !v43 l0011CAB1
	// succ:  l0011CAAB l0011CAB1
l0011CAAB:
	v41 = loc28
	fn0011B709(v41)
	// succ:  l0011CAB1
l0011CAB1:
	v41 = arg0
	v42 = loc26
	Mem0[v41:word32] = v42
	v41 = loc25
	v42 = 0x80000000<32>
	v41 = v41 | v42
	loc39 = v41
	v41 = loc9
	v42 = loc39
	Mem0[v41:word32] = v42
	v41 = loc31
	v42 = arg6
	v41 = v41 + v42
	loc40 = v41
	v41 = arg0
	v42 = 4<32>
	v41 = v41 + v42
	loc41 = v41
	v41 = loc41
	v42 = loc40
	Mem0[v41:word32] = v42
	v41 = loc26
	v42 = loc40
	v45 = 2<32>
	v42 = v42 << v45
	v41 = v41 + v42
	loc42 = v41
	v41 = loc42
	v42 = 0<32>
	Mem0[v41:word32] = v42
	return
	// succ:  fn0011C92E_exit
l0011CAF1:
	return
	// succ:  fn0011C92E_exit
fn0011C92E_exit:


// fn0011CAF3
// Return size: 0
void fn0011CAF3(word32 arg0, word32 arg1)
fn0011CAF3_entry:
	// succ:  l0011CAF3
l0011CAF3:
	v57 = Mem0[0x00140030<p32>:word32]
	loc56 = v57
	v57 = arg1
	v58 = 0x3FFFFFEF<32>
	v59 = v57 >u v58
	loc19 = v59
	v57 = loc19
	branch !v57 l0011CB0E
	// succ:  l0011CB08 l0011CB0E
l0011CB08:
	v57 = arg0
	fn0011B8A5(v57)
	// succ:  l0011CB0E
l0011CB0E:
	v57 = arg0
	v58 = 8<32>
	v57 = v57 + v58
	loc30 = v57
	v57 = loc30
	v58 = 3<32>
	v57 = v57 + v58
	loc41 = v57
	v57 = loc41
	v60 = Mem0[v57:int8]
	v57 = CONVERT(v60, int8, word32)
	loc48 = v57
	v57 = loc48
	v58 = 0x18<32>
	v57 = v57 << v58
	v58 = 0x18<32>
	v57 = v57 >> v58
	v58 = 0<32>
	v59 = v57 < v58
	loc49 = v59
	v57 = loc49
	branch !v57 l0011CB64
	// succ:  l0011CB34 l0011CB64
l0011CB34:
	v57 = loc30
	v57 = Mem0[v57:word32]
	loc50 = v57
	v57 = loc50
	v58 = 0x7FFFFFFF<32>
	v57 = v57 & v58
	loc51 = v57
	v57 = loc51
	v58 = 0xFFFFFFFF<32>
	v57 = v57 + v58
	loc53 = v57
	v57 = arg0
	v58 = 4<32>
	v57 = v57 + v58
	loc52 = v57
	v57 = loc52
	v57 = Mem0[v57:word32]
	loc9 = v57
	v57 = loc9
	loc12 = v57
	v57 = loc53
	loc17 = v57
	goto l0011CB74
	// succ:  l0011CB74
l0011CB64:
	v57 = loc48
	v58 = 0xFF<32>
	v57 = v57 & v58
	loc10 = v57
	v57 = loc10
	loc12 = v57
	v57 = 1<32>
	loc17 = v57
	// succ:  l0011CB74
l0011CB74:
	v57 = loc12
	v58 = arg1
	v59 = v57 >u v58
	loc11 = v59
	v57 = loc11
	branch !v57 l0011CB83
	// succ:  l0011CB80 l0011CB83
l0011CB80:
	v57 = loc12
	goto l0011CB85
	// succ:  l0011CB85
l0011CB83:
	v57 = arg1
	// succ:  l0011CB85
l0011CB85:
	loc8 = v57
	v57 = loc8
	v58 = 2<32>
	v59 = v57 <u v58
	loc13 = v59
	v57 = loc8
	v58 = 4<32>
	v57 = v57 + v58
	loc14 = v57
	v57 = loc14
	v58 = 0xFFFFFFFC<32>
	v57 = v57 & v58
	loc15 = v57
	v57 = loc15
	v58 = 0xFFFFFFFF<32>
	v57 = v57 + v58
	loc54 = v57
	v57 = loc13
	branch !v57 l0011CBAB
	// succ:  l0011CBA8 l0011CBAB
l0011CBA8:
	v57 = 1<32>
	goto l0011CBAD
	// succ:  l0011CBAD
l0011CBAB:
	v57 = loc54
	// succ:  l0011CBAD
l0011CBAD:
	loc6 = v57
	v57 = loc6
	v58 = loc17
	v59 = v57 == v58
	loc16 = v59
	// succ:  l0011CBB7
l0011CBB7:
	v57 = loc16
	v59 = v57 == 0<32>
	branch !v59 l0011CD96
	// succ:  l0011CBBE l0011CD96
l0011CBBE:
	v57 = loc13
	branch !v57 l0011CC04
	// succ:  l0011CBC4 l0011CC04
l0011CBC4:
	v57 = arg0
	v57 = Mem0[v57:word32]
	loc35 = v57
	v57 = loc49
	branch !v57 l0011CBE0
	// succ:  l0011CBCF l0011CBE0
l0011CBCF:
	v57 = loc35
	loc2 = v57
	v57 = 0<32>
	loc3 = v57
	v57 = arg0
	loc5 = v57
	v57 = 0x15<32>
	loc55 = v57
	goto l0011CC02
	// succ:  l0011CC02
l0011CBE0:
	v57 = loc48
	v58 = 0xFF<32>
	v57 = v57 & v58
	loc36 = v57
	v57 = loc36
	v58 = 1<32>
	v57 = v57 + v58
	loc37 = v57
	v57 = arg0
	v58 = loc35
	v61 = loc37
	v57 = fn000E5F91(v57, v58, v61)
	v57 = loc35
	fn0011B709(v57)
	v57 = 0x17<32>
	loc55 = v57
	// succ:  l0011CC02
l0011CC02:
	goto l0011CD03
	// succ:  l0011CD03
l0011CC04:
	v57 = loc6
	v58 = loc17
	v59 = v57 >u v58
	loc18 = v59
	v57 = loc6
	v58 = 1<32>
	v57 = v57 + v58
	loc20 = v57
	v57 = loc20
	v58 = 0x3FFFFFFF<32>
	v59 = v57 >u v58
	loc21 = v59
	// succ:  l0011CC1D
l0011CC1D:
	v57 = loc18
	branch !v57 l0011CC53
	// succ:  l0011CC23 l0011CC53
l0011CC23:
	v57 = loc21
	branch !v57 l0011CC3D
	// succ:  l0011CC27 l0011CC3D
l0011CC27:
	v57 = 4<32>
	v57 = ___cxa_allocate_exception(v57)
	loc22 = v57
	v57 = loc22
	fn0011EE8C(v57)
	v57 = loc22
	v58 = 0x9C8<32>
	v61 = 0x153<32>
	___cxa_throw(v57, v58, v61)
	goto l0011CC51
	// succ:  l0011CC51
l0011CC3D:
	v57 = loc20
	v58 = 2<32>
	v57 = v57 << v58
	loc23 = v57
	v57 = loc23
	v57 = fn0011B67B(v57)
	loc24 = v57
	v57 = loc24
	loc7 = v57
	goto l0011CCC0
	// succ:  l0011CCC0
l0011CC51:
	goto l0011CCBF
	// succ:  l0011CCBF
l0011CC53:
	v57 = loc21
	branch !v57 l0011CC7C
	// succ:  l0011CC57 l0011CC7C
l0011CC57:
	v57 = 4<32>
	v57 = ___cxa_allocate_exception(v57)
	loc25 = v57
	v57 = loc25
	fn0011EE8C(v57)
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = 0x173<32>
	v58 = loc25
	v61 = 0x9C8<32>
	v62 = 0x153<32>
	invoke_viii(v57, v58, v61, v62)
	v57 = Mem0[0x00140048<p32>:word32]
	loc26 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	goto l0011CCAB
	// succ:  l0011CCAB
l0011CC7C:
	v57 = loc20
	v58 = 2<32>
	v57 = v57 << v58
	loc27 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = 0x1EB<32>
	v58 = loc27
	v57 = invoke_ii(v57, v58)
	loc28 = v57
	v57 = Mem0[0x00140048<p32>:word32]
	loc29 = v57
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v57 = loc29
	v58 = 1<32>
	v57 = v57 & v58
	loc31 = v57
	v57 = loc31
	v59 = v57 == 0<32>
	branch !v59 l0011CCAB
	// succ:  l0011CCA4 l0011CCAB
l0011CCA4:
	v57 = loc28
	loc7 = v57
	goto l0011CCC0
	// succ:  l0011CCC0
l0011CCAB:
	// succ:  l0011CCAB
l0011CCAB:
	v57 = 0<32>
	v57 = ___cxa_find_matching_catch_3(v57)
	loc32 = v57
	v57 = Mem0[0x00140094<p32>:word32]
	loc33 = v57
	v57 = loc32
	v57 = ___cxa_begin_catch(v57)
	___cxa_end_catch()
	goto l0011CD96
	// succ:  l0011CD96
l0011CCBF:
	// succ:  l0011CCC0
l0011CCC0:
	v57 = loc49
	branch !v57 l0011CCDF
	// succ:  l0011CCC5 l0011CCDF
l0011CCC5:
	v57 = arg0
	v57 = Mem0[v57:word32]
	loc34 = v57
	v57 = loc34
	loc2 = v57
	v57 = 1<32>
	loc3 = v57
	v57 = loc7
	loc5 = v57
	v57 = 0x15<32>
	loc55 = v57
	goto l0011CD04
	// succ:  l0011CD04
l0011CCDF:
	v57 = loc48
	v58 = 0xFF<32>
	v57 = v57 & v58
	loc38 = v57
	v57 = loc38
	v58 = 1<32>
	v57 = v57 + v58
	loc39 = v57
	v57 = loc7
	v58 = arg0
	v61 = loc39
	v57 = fn000E5F91(v57, v58, v61)
	v57 = loc7
	loc4 = v57
	v57 = 0x16<32>
	loc55 = v57
	goto l0011CD04
	// succ:  l0011CD04
l0011CD02:
	// succ:  l0011CD03
l0011CD03:
	// succ:  l0011CD04
l0011CD04:
	v57 = loc55
	v58 = 0x15<32>
	v59 = v57 == v58
	branch !v59 l0011CD43
	// succ:  l0011CD0C l0011CD43
l0011CD0C:
	v57 = arg0
	v58 = 4<32>
	v57 = v57 + v58
	loc40 = v57
	v57 = loc40
	v57 = Mem0[v57:word32]
	loc42 = v57
	v57 = loc42
	v58 = 1<32>
	v57 = v57 + v58
	loc43 = v57
	v57 = loc5
	v58 = loc2
	v61 = loc43
	v57 = fn000E5F91(v57, v58, v61)
	v57 = loc2
	fn0011B709(v57)
	v57 = loc3
	branch !v57 l0011CD3D
	// succ:  l0011CD34 l0011CD3D
l0011CD34:
	v57 = loc5
	loc4 = v57
	v57 = 0x16<32>
	loc55 = v57
	goto l0011CD41
	// succ:  l0011CD41
l0011CD3D:
	v57 = 0x17<32>
	loc55 = v57
	// succ:  l0011CD41
l0011CD41:
	// succ:  l0011CD43
l0011CD43:
	v57 = loc55
	v58 = 0x16<32>
	v59 = v57 == v58
	branch !v59 l0011CD7B
	// succ:  l0011CD4A l0011CD7B
l0011CD4A:
	v57 = loc6
	v58 = 1<32>
	v57 = v57 + v58
	loc44 = v57
	v57 = loc44
	v58 = 0x80000000<32>
	v57 = v57 | v58
	loc45 = v57
	v57 = loc30
	v58 = loc45
	Mem0[v57:word32] = v58
	v57 = arg0
	v58 = 4<32>
	v57 = v57 + v58
	loc46 = v57
	v57 = loc46
	v58 = loc12
	Mem0[v57:word32] = v58
	v57 = arg0
	v58 = loc4
	Mem0[v57:word32] = v58
	goto l0011CD96
	// succ:  l0011CD96
l0011CD7B:
	v57 = loc55
	v58 = 0x17<32>
	v59 = v57 == v58
	branch !v59 l0011CD94
	// succ:  l0011CD82 l0011CD94
l0011CD82:
	v57 = loc12
	v58 = 0xFF<32>
	v57 = v57 & v58
	loc47 = v57
	v57 = loc41
	v58 = loc47
	v63 = SLICE(v58, byte, 0)
	Mem0[v57:byte] = v63
	goto l0011CD96
	// succ:  l0011CD96
l0011CD94:
	// succ:  l0011CD94
l0011CD94:
	// succ:  l0011CD96
l0011CD96:
	// succ:  l0011CD96
l0011CD96:
	return
	// succ:  fn0011CAF3_exit
l0011CD98:
	return
	// succ:  fn0011CAF3_exit
fn0011CAF3_exit:


// fn0011CD9A
// Return size: 0
word32 fn0011CD9A(word32 arg0, word32 arg1)
fn0011CD9A_entry:
	// succ:  l0011CD9A
l0011CD9A:
	v6 = Mem0[0x00140030<p32>:word32]
	loc5 = v6
	v6 = arg1
	v6 = fn000D7B05(v6)
	loc2 = v6
	v6 = arg0
	v7 = arg1
	v8 = loc2
	v6 = fn0011C7F6(v6, v7, v8)
	loc3 = v6
	v6 = loc3
	return v6
	// succ:  fn0011CD9A_exit
l0011CDB5:
	return v6
	// succ:  fn0011CD9A_exit
fn0011CD9A_exit:


// fn0011CDB7
// Return size: 0
void fn0011CDB7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn0011CDB7_entry:
	// succ:  l0011CDB7
l0011CDB7:
	v36 = Mem0[0x00140030<p32>:word32]
	loc40 = v36
	v36 = 0x3FFFFFEF<32>
	v37 = arg1
	v36 = v36 - v37
	loc36 = v36
	v36 = loc36
	v37 = arg2
	v38 = v36 <u v37
	loc37 = v38
	v36 = loc37
	branch !v36 l0011CDD9
	// succ:  l0011CDD3 l0011CDD9
l0011CDD3:
	v36 = arg0
	fn0011B8A5(v36)
	// succ:  l0011CDD9
l0011CDD9:
	v36 = arg0
	v37 = 8<32>
	v36 = v36 + v37
	loc38 = v36
	v36 = loc38
	v37 = 3<32>
	v36 = v36 + v37
	loc8 = v36
	v36 = loc8
	v39 = Mem0[v36:int8]
	v36 = CONVERT(v39, int8, word32)
	loc9 = v36
	v36 = loc9
	v37 = 0x18<32>
	v36 = v36 << v37
	v37 = 0x18<32>
	v36 = v36 >> v37
	v37 = 0<32>
	v38 = v36 < v37
	loc10 = v38
	v36 = loc10
	branch !v36 l0011CE0B
	// succ:  l0011CDFF l0011CE0B
l0011CDFF:
	v36 = arg0
	v36 = Mem0[v36:word32]
	loc11 = v36
	v36 = loc11
	loc26 = v36
	goto l0011CE0F
	// succ:  l0011CE0F
l0011CE0B:
	v36 = arg0
	loc26 = v36
	// succ:  l0011CE0F
l0011CE0F:
	v36 = arg1
	v37 = 0x1FFFFFE7<32>
	v38 = v36 <u v37
	loc12 = v38
	v36 = loc12
	branch !v36 l0011CE8C
	// succ:  l0011CE1F l0011CE8C
l0011CE1F:
	v36 = arg2
	v37 = arg1
	v36 = v36 + v37
	loc13 = v36
	v36 = arg1
	v37 = 1<32>
	v36 = v36 << v37
	loc14 = v36
	v36 = loc13
	v37 = loc14
	v38 = v36 <u v37
	loc15 = v38
	v36 = loc15
	branch !v36 l0011CE3B
	// succ:  l0011CE38 l0011CE3B
l0011CE38:
	v36 = loc14
	goto l0011CE3D
	// succ:  l0011CE3D
l0011CE3B:
	v36 = loc13
	// succ:  l0011CE3D
l0011CE3D:
	loc7 = v36
	v36 = loc7
	v37 = 2<32>
	v38 = v36 <u v37
	loc16 = v38
	v36 = loc7
	v37 = 4<32>
	v36 = v36 + v37
	loc17 = v36
	v36 = loc17
	v37 = 0xFFFFFFFC<32>
	v36 = v36 & v37
	loc18 = v36
	v36 = loc16
	branch !v36 l0011CE5C
	// succ:  l0011CE59 l0011CE5C
l0011CE59:
	v36 = 2<32>
	goto l0011CE5E
	// succ:  l0011CE5E
l0011CE5C:
	v36 = loc18
	// succ:  l0011CE5E
l0011CE5E:
	loc19 = v36
	v36 = loc19
	v37 = 0x3FFFFFFF<32>
	v38 = v36 >u v37
	loc20 = v38
	v36 = loc20
	branch !v36 l0011CE86
	// succ:  l0011CE70 l0011CE86
l0011CE70:
	v36 = 4<32>
	v36 = ___cxa_allocate_exception(v36)
	loc21 = v36
	v36 = loc21
	fn0011EE8C(v36)
	v36 = loc21
	v37 = 0x9C8<32>
	v40 = 0x153<32>
	___cxa_throw(v36, v37, v40)
	goto l0011CE8A
	// succ:  l0011CE8A
l0011CE86:
	v36 = loc19
	loc23 = v36
	// succ:  l0011CE8A
l0011CE8A:
	goto l0011CE94
	// succ:  l0011CE94
l0011CE8C:
	v36 = 0x3FFFFFEF<32>
	loc23 = v36
	// succ:  l0011CE94
l0011CE94:
	v36 = loc23
	v37 = 2<32>
	v36 = v36 << v37
	loc22 = v36
	v36 = loc22
	v36 = fn0011B67B(v36)
	loc24 = v36
	v36 = arg4
	v37 = 0<32>
	v38 = v36 == v37
	loc25 = v38
	v36 = loc25
	v38 = v36 == 0<32>
	branch !v38 l0011CEBA
	// succ:  l0011CEAF l0011CEBA
l0011CEAF:
	v36 = loc24
	v37 = loc26
	v40 = arg4
	v36 = fn000E5F91(v36, v37, v40)
	// succ:  l0011CEBA
l0011CEBA:
	v36 = arg3
	v37 = arg5
	v36 = v36 - v37
	loc27 = v36
	v36 = loc27
	v37 = arg4
	v36 = v36 - v37
	loc28 = v36
	v36 = loc28
	v37 = 0<32>
	v38 = v36 == v37
	loc29 = v38
	v36 = loc29
	v38 = v36 == 0<32>
	branch !v38 l0011CF07
	// succ:  l0011CED4 l0011CF07
l0011CED4:
	v36 = loc26
	v37 = arg4
	v40 = 2<32>
	v37 = v37 << v40
	v36 = v36 + v37
	loc30 = v36
	v36 = loc30
	v37 = arg5
	v40 = 2<32>
	v37 = v37 << v40
	v36 = v36 + v37
	loc31 = v36
	v36 = loc24
	v37 = arg4
	v40 = 2<32>
	v37 = v37 << v40
	v36 = v36 + v37
	loc32 = v36
	v36 = loc32
	v37 = arg6
	v40 = 2<32>
	v37 = v37 << v40
	v36 = v36 + v37
	loc33 = v36
	v36 = loc33
	v37 = loc31
	v40 = loc28
	v36 = fn000E5F91(v36, v37, v40)
	// succ:  l0011CF07
l0011CF07:
	v36 = arg1
	v37 = 1<32>
	v38 = v36 == v37
	loc34 = v38
	v36 = loc34
	v38 = v36 == 0<32>
	branch !v38 l0011CF19
	// succ:  l0011CF13 l0011CF19
l0011CF13:
	v36 = loc26
	fn0011B709(v36)
	// succ:  l0011CF19
l0011CF19:
	v36 = arg0
	v37 = loc24
	Mem0[v36:word32] = v37
	v36 = loc23
	v37 = 0x80000000<32>
	v36 = v36 | v37
	loc35 = v36
	v36 = loc38
	v37 = loc35
	Mem0[v36:word32] = v37
	return
	// succ:  fn0011CDB7_exit
l0011CF33:
	return
	// succ:  fn0011CDB7_exit
fn0011CDB7_exit:


// fn0011CF35
// Return size: 0
void fn0011CF35(word32 arg0, word32 arg1)
fn0011CF35_entry:
	// succ:  l0011CF35
l0011CF35:
	v27 = Mem0[0x00140030<p32>:word32]
	loc26 = v27
	v27 = arg0
	v28 = 8<32>
	v27 = v27 + v28
	loc16 = v27
	v27 = loc16
	v28 = 3<32>
	v27 = v27 + v28
	loc18 = v27
	v27 = loc18
	v29 = Mem0[v27:int8]
	v27 = CONVERT(v29, int8, word32)
	loc19 = v27
	v27 = loc19
	v28 = 0x18<32>
	v27 = v27 << v28
	v28 = 0x18<32>
	v27 = v27 >> v28
	v28 = 0<32>
	v30 = v27 < v28
	loc20 = v30
	v27 = loc20
	branch !v27 l0011CF91
	// succ:  l0011CF61 l0011CF91
l0011CF61:
	v27 = loc16
	v27 = Mem0[v27:word32]
	loc22 = v27
	v27 = loc22
	v28 = 0x7FFFFFFF<32>
	v27 = v27 & v28
	loc23 = v27
	v27 = loc23
	v28 = 0xFFFFFFFF<32>
	v27 = v27 + v28
	loc24 = v27
	v27 = arg0
	v28 = 4<32>
	v27 = v27 + v28
	loc6 = v27
	v27 = loc6
	v27 = Mem0[v27:word32]
	loc7 = v27
	v27 = loc7
	loc3 = v27
	v27 = loc24
	loc4 = v27
	goto l0011CFA1
	// succ:  l0011CFA1
l0011CF91:
	v27 = loc19
	v28 = 0xFF<32>
	v27 = v27 & v28
	loc21 = v27
	v27 = loc21
	loc3 = v27
	v27 = 1<32>
	loc4 = v27
	// succ:  l0011CFA1
l0011CFA1:
	v27 = loc3
	v28 = loc4
	v30 = v27 == v28
	loc8 = v30
	v27 = loc8
	branch !v27 l0011CFE1
	// succ:  l0011CFAD l0011CFE1
l0011CFAD:
	v27 = arg0
	v28 = loc4
	v31 = 1<32>
	v32 = loc4
	v33 = loc4
	v34 = 0<32>
	v35 = 0<32>
	fn0011CDB7(v27, v28, v31, v32, v33, v34, v35)
	v27 = loc18
	v36 = Mem0[v27:int8]
	v27 = CONVERT(v36, int8, word32)
	loc9 = v27
	v27 = loc9
	v28 = 0x18<32>
	v27 = v27 << v28
	v28 = 0x18<32>
	v27 = v27 >> v28
	v28 = 0xFFFFFFFF<32>
	v30 = v27 > v28
	loc10 = v30
	v27 = loc10
	branch !v27 l0011CFDB
	// succ:  l0011CFD6 l0011CFDB
l0011CFD6:
	v27 = 7<32>
	loc25 = v27
	goto l0011CFDF
	// succ:  l0011CFDF
l0011CFDB:
	v27 = 8<32>
	loc25 = v27
	// succ:  l0011CFDF
l0011CFDF:
	goto l0011CFEF
	// succ:  l0011CFEF
l0011CFE1:
	v27 = loc20
	branch !v27 l0011CFEA
	// succ:  l0011CFE5 l0011CFEA
l0011CFE5:
	v27 = 8<32>
	loc25 = v27
	goto l0011CFEE
	// succ:  l0011CFEE
l0011CFEA:
	v27 = 7<32>
	loc25 = v27
	// succ:  l0011CFEE
l0011CFEE:
	// succ:  l0011CFEF
l0011CFEF:
	v27 = loc25
	v28 = 7<32>
	v30 = v27 == v28
	branch !v30 l0011D012
	// succ:  l0011CFF7 l0011D012
l0011CFF7:
	v27 = loc3
	v28 = 1<32>
	v27 = v27 + v28
	loc11 = v27
	v27 = loc11
	v28 = 0xFF<32>
	v27 = v27 & v28
	loc12 = v27
	v27 = loc18
	v28 = loc12
	v37 = SLICE(v28, byte, 0)
	Mem0[v27:byte] = v37
	v27 = arg0
	loc5 = v27
	goto l0011D03A
	// succ:  l0011D03A
l0011D012:
	v27 = loc25
	v28 = 8<32>
	v30 = v27 == v28
	branch !v30 l0011D03A
	// succ:  l0011D019 l0011D03A
l0011D019:
	v27 = arg0
	v27 = Mem0[v27:word32]
	loc13 = v27
	v27 = loc3
	v28 = 1<32>
	v27 = v27 + v28
	loc14 = v27
	v27 = arg0
	v28 = 4<32>
	v27 = v27 + v28
	loc15 = v27
	v27 = loc15
	v28 = loc14
	Mem0[v27:word32] = v28
	v27 = loc13
	loc5 = v27
	// succ:  l0011D03A
l0011D03A:
	// succ:  l0011D03A
l0011D03A:
	v27 = loc5
	v28 = loc3
	v31 = 2<32>
	v28 = v28 << v31
	v27 = v27 + v28
	loc2 = v27
	v27 = loc2
	v28 = arg1
	Mem0[v27:word32] = v28
	v27 = loc2
	v28 = 4<32>
	v27 = v27 + v28
	loc17 = v27
	v27 = loc17
	v28 = 0<32>
	Mem0[v27:word32] = v28
	return
	// succ:  fn0011CF35_exit
l0011D05B:
	return
	// succ:  fn0011CF35_exit
fn0011CF35_exit:


// fn0011D05D
// Return size: 0
void fn0011D05D(word32 arg0)
fn0011D05D_entry:
	// succ:  l0011D05D
l0011D05D:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011D05D_exit
l0011D064:
	return
	// succ:  fn0011D05D_exit
fn0011D05D_exit:


// fn0011D066
// Return size: 0
void fn0011D066(word32 arg0, word32 arg1, word32 arg2)
fn0011D066_entry:
	// succ:  l0011D066
l0011D066:
	v5 = Mem0[0x00140030<p32>:word32]
	loc5 = v5
	v5 = arg0
	v6 = arg2
	Mem0[v5:word32] = v6
	v5 = arg0
	v6 = 4<32>
	v5 = v5 + v6
	loc3 = v5
	v5 = loc3
	v6 = arg1
	Mem0[v5:word32] = v6
	return
	// succ:  fn0011D066_exit
l0011D082:
	return
	// succ:  fn0011D066_exit
fn0011D066_exit:


// fn0011D084
// Return size: 0
word32 fn0011D084(word32 arg0, word32 arg1, word32 arg2)
fn0011D084_entry:
	// succ:  l0011D084
l0011D084:
	v17 = Mem0[0x00140030<p32>:word32]
	loc17 = v17
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v17 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v17
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = Mem0[0x00140034<p32>:word32]
	v19 = v17 >= v18
	branch !v19 l0011D09D
	// succ:  l0011D098 l0011D09D
l0011D098:
	v17 = 0x10<32>
	abortStackOverflow(v17)
	// succ:  l0011D09D
l0011D09D:
	v17 = loc17
	loc9 = v17
	v17 = arg0
	v17 = Mem0[v17:word32]
	loc10 = v17
	v17 = loc10
	v18 = 0xC<32>
	v17 = v17 + v18
	loc11 = v17
	v17 = loc11
	v17 = Mem0[v17:word32]
	loc12 = v17
	v17 = loc9
	v18 = arg0
	v20 = arg1
	v21 = loc12
	v22 = 0x1FF<32>
	v21 = v21 & v22
	v22 = 0x2820<32>
	v21 = v21 + v22
fn0011D084_exit:


// fn0011D119
// Return size: 0
word32 fn0011D119(word32 arg0, word32 arg1, word32 arg2)
fn0011D119_entry:
	// succ:  l0011D119
l0011D119:
	v10 = Mem0[0x00140030<p32>:word32]
	loc10 = v10
	v10 = arg1
	v11 = 4<32>
	v10 = v10 + v11
	loc3 = v10
	v10 = loc3
	v10 = Mem0[v10:word32]
	loc4 = v10
	v10 = loc4
	v11 = arg0
	v12 = v10 == v11
	loc5 = v12
	v10 = arg1
	v10 = Mem0[v10:word32]
	loc6 = v10
	v10 = loc6
	v11 = arg2
	v12 = v10 == v11
	loc7 = v12
	v10 = loc5
	v11 = loc7
	v10 = v10 & v11
	loc8 = v10
	v10 = loc8
	return v10
	// succ:  fn0011D119_exit
l0011D14C:
	return v10
	// succ:  fn0011D119_exit
fn0011D119_exit:


// fn0011D14E
// Return size: 0
void fn0011D14E(word32 arg0)
fn0011D14E_entry:
	// succ:  l0011D14E
l0011D14E:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011E468(v4)
	return
	// succ:  fn0011D14E_exit
l0011D15A:
	return
	// succ:  fn0011D14E_exit
fn0011D14E_exit:


// fn0011D15C
// Return size: 0
void fn0011D15C(word32 arg0)
fn0011D15C_entry:
	// succ:  l0011D15C
l0011D15C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011E468(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011D15C_exit
l0011D16D:
	return
	// succ:  fn0011D15C_exit
fn0011D15C_exit:


// fn0011D16F
// Return size: 0
void fn0011D16F(word32 arg0, word32 arg1, word32 arg2)
fn0011D16F_entry:
	// succ:  l0011D16F
l0011D16F:
	v6 = Mem0[0x00140030<p32>:word32]
	loc6 = v6
	v6 = arg2
	v6 = fn000D69BF(v6)
	loc3 = v6
	v6 = arg0
	v7 = 0<64>
	Mem0[v6:word64] = v7
	v6 = arg0
	v8 = 8<32>
	v6 = v6 + v8
	v8 = 0<32>
	Mem0[v6:word32] = v8
	v6 = loc3
	v6 = fn000DAF30(v6)
	loc4 = v6
	v6 = arg0
	v8 = loc3
	v9 = loc4
	fn0011B96D(v6, v8, v9)
	return
	// succ:  fn0011D16F_exit
l0011D19E:
	return
	// succ:  fn0011D16F_exit
fn0011D16F_exit:


// fn0011D1A0
// Return size: 0
void fn0011D1A0(word32 arg0, word32 arg1, word32 arg2)
fn0011D1A0_entry:
	// succ:  l0011D1A0
l0011D1A0:
	v39 = Mem0[0x00140030<p32>:word32]
	loc39 = v39
	v39 = Mem0[0x00140030<p32>:word32]
	v40 = 0x10<32>
	v39 = v39 + v40
	Mem0[0x00140030<p32>:word32] = v39
	v39 = Mem0[0x00140030<p32>:word32]
	v40 = Mem0[0x00140034<p32>:word32]
	v41 = v39 >= v40
	branch !v41 l0011D1B9
	// succ:  l0011D1B4 l0011D1B9
l0011D1B4:
	v39 = 0x10<32>
	abortStackOverflow(v39)
	// succ:  l0011D1B9
l0011D1B9:
	v39 = loc39
	loc25 = v39
	v39 = arg1
	v39 = Mem0[v39:word32]
	loc31 = v39
	v39 = loc31
	v40 = 0<32>
	v41 = v39 == v40
	loc32 = v41
	// succ:  l0011D1CB
l0011D1CB:
	v39 = loc32
	v41 = v39 == 0<32>
	v41 = v41
	// succ:  l0011D1D2
l0011D1D2:
	v39 = arg2
	v40 = 0xB<32>
	v39 = v39 + v40
	loc33 = v39
	v39 = loc33
	v42 = Mem0[v39:int8]
	v39 = CONVERT(v42, int8, word32)
	loc34 = v39
	v39 = loc34
	v40 = 0x18<32>
	v39 = v39 << v40
	v40 = 0x18<32>
	v39 = v39 >> v40
	v40 = 0<32>
	v41 = v39 < v40
	loc35 = v41
	v39 = loc35
	branch !v39 l0011D204
	// succ:  l0011D1F1 l0011D204
l0011D1F1:
	v39 = arg2
	v40 = 4<32>
	v39 = v39 + v40
	loc36 = v39
	v39 = loc36
	v39 = Mem0[v39:word32]
	loc5 = v39
	v39 = loc5
	loc8 = v39
	goto l0011D210
	// succ:  l0011D210
l0011D204:
	v39 = loc34
	v40 = 0xFF<32>
	v39 = v39 & v40
	loc6 = v39
	v39 = loc6
	loc8 = v39
	// succ:  l0011D210
l0011D210:
	v39 = loc8
	v40 = 0<32>
	v41 = v39 == v40
	loc7 = v41
	v39 = loc7
	branch !v39 l0011D221
	// succ:  l0011D21C l0011D221
l0011D21C:
	v39 = loc31
	loc14 = v39
	goto l0011D236
	// succ:  l0011D236
l0011D221:
	v39 = arg2
	v40 = 0x40A4<32>
	v39 = fn0011C48D(v39, v40)
	v39 = arg1
	v39 = Mem0[v39:word32]
	loc4 = v39
	v39 = loc4
	loc14 = v39
	// succ:  l0011D236
l0011D236:
	v39 = arg1
	v40 = 4<32>
	v39 = v39 + v40
	loc9 = v39
	v39 = loc9
	v39 = Mem0[v39:word32]
	loc10 = v39
	v39 = loc10
	v39 = Mem0[v39:word32]
	loc11 = v39
	v39 = loc11
	v40 = 0x18<32>
	v39 = v39 + v40
	loc12 = v39
	v39 = loc12
	v39 = Mem0[v39:word32]
	loc13 = v39
	v39 = loc25
	v40 = loc10
	v43 = loc14
	v44 = loc13
	v45 = 0x1FF<32>
	v44 = v44 & v45
	v45 = 0x2820<32>
	v44 = v44 + v45
fn0011D1A0_exit:


// fn0011D354
// Return size: 0
void fn0011D354(word32 arg0, word32 arg1, word32 arg2)
fn0011D354_entry:
	// succ:  l0011D354
l0011D354:
	v19 = Mem0[0x00140030<p32>:word32]
	loc18 = v19
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = 0x20<32>
	v19 = v19 + v20
	Mem0[0x00140030<p32>:word32] = v19
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = Mem0[0x00140034<p32>:word32]
	v21 = v19 >= v20
	branch !v21 l0011D36D
	// succ:  l0011D368 l0011D36D
l0011D368:
	v19 = 0x20<32>
	abortStackOverflow(v19)
	// succ:  l0011D36D
l0011D36D:
	v19 = loc18
	v20 = 0xC<32>
	v19 = v19 + v20
	loc10 = v19
	v19 = loc18
	loc11 = v19
	v19 = loc11
	v22 = 0<64>
	Mem0[v19:word64] = v22
	v19 = loc11
	v20 = 8<32>
	v19 = v19 + v20
	v20 = 0<32>
	Mem0[v19:word32] = v20
	v19 = arg2
	v19 = fn000DAF30(v19)
	loc12 = v19
	v19 = loc11
	v20 = arg2
	v23 = loc12
	fn0011B96D(v19, v20, v23)
	v19 = 0<32>
	Mem0[0x00140048<p32>:word32] = v19
	v19 = 0x1ED<32>
	v20 = loc10
	v23 = arg1
	v24 = loc11
	invoke_viii(v19, v20, v23, v24)
	v19 = Mem0[0x00140048<p32>:word32]
	loc13 = v19
	v19 = 0<32>
	Mem0[0x00140048<p32>:word32] = v19
	v19 = loc13
	v20 = 1<32>
	v19 = v19 & v20
	loc14 = v19
	// succ:  l0011D3B7
l0011D3B7:
	v19 = loc14
	branch !v19 l0011D3CE
	// succ:  l0011D3BD l0011D3CE
l0011D3BD:
	v19 = ___cxa_find_matching_catch_2()
	loc6 = v19
	v19 = Mem0[0x00140094<p32>:word32]
	loc7 = v19
	v19 = loc7
	loc3 = v19
	v19 = loc6
	loc4 = v19
	goto l0011D434
	// succ:  l0011D434
l0011D3CE:
	v19 = 0<32>
	Mem0[0x00140048<p32>:word32] = v19
	v19 = 0x1EE<32>
	v20 = arg0
	v23 = loc10
	invoke_vii(v19, v20, v23)
	v19 = Mem0[0x00140048<p32>:word32]
	loc15 = v19
	v19 = 0<32>
	Mem0[0x00140048<p32>:word32] = v19
	v19 = loc15
	v20 = 1<32>
	v19 = v19 & v20
	loc16 = v19
	v19 = loc16
	branch !v19 l0011D406
	// succ:  l0011D3EE l0011D406
l0011D3EE:
	v19 = ___cxa_find_matching_catch_2()
	loc8 = v19
	v19 = Mem0[0x00140094<p32>:word32]
	loc9 = v19
	v19 = loc10
	fn0011BAF7(v19)
	v19 = loc9
	loc3 = v19
	v19 = loc8
	loc4 = v19
	goto l0011D435
	// succ:  l0011D435
l0011D406:
	v19 = loc10
	fn0011BAF7(v19)
	v19 = loc11
	fn0011BAF7(v19)
	v19 = arg0
	v20 = 0x2654<32>
	Mem0[v19:word32] = v20
	v19 = arg0
	v20 = 8<32>
	v19 = v19 + v20
	loc5 = v19
	v19 = arg1
	v25 = Mem0[v19:word64]
	loc19 = v25
	v19 = loc5
	v22 = loc19
	Mem0[v19:word64] = v22
	v19 = loc18
	Mem0[0x00140030<p32>:word32] = v19
	return
	// succ:  fn0011D354_exit
l0011D433:
	// succ:  l0011D434
l0011D434:
	// succ:  l0011D435
l0011D435:
	v19 = loc11
	fn0011BAF7(v19)
	v19 = loc4
	___resumeException(v19)
	// succ:  l0011D43F
l0011D43F:
	return
	// succ:  fn0011D354_exit
fn0011D354_exit:


// fn0011D441
// Return size: 0
void fn0011D441()
fn0011D441_entry:
	// succ:  l0011D441
l0011D441:
	v40 = Mem0[0x00140030<p32>:word32]
	loc35 = v40
	v40 = Mem0[0x00140030<p32>:word32]
	v41 = 0x30<32>
	v40 = v40 + v41
	Mem0[0x00140030<p32>:word32] = v40
	v40 = Mem0[0x00140030<p32>:word32]
	v41 = Mem0[0x00140034<p32>:word32]
	v42 = v40 >= v41
	branch !v42 l0011D45A
	// succ:  l0011D455 l0011D45A
l0011D455:
	v40 = 0x30<32>
	abortStackOverflow(v40)
	// succ:  l0011D45A
l0011D45A:
	v40 = loc35
	v41 = 0x20<32>
	v40 = v40 + v41
	loc28 = v40
	v40 = loc35
	v41 = 0x18<32>
	v40 = v40 + v41
	loc30 = v40
	v40 = loc35
	v41 = 0x10<32>
	v40 = v40 + v41
	loc29 = v40
	v40 = loc35
	loc27 = v40
	v40 = loc35
	v41 = 0x24<32>
	v40 = v40 + v41
	loc0 = v40
	v40 = fn0011D5FB()
	loc1 = v40
	v40 = loc1
	v41 = 0<32>
	v42 = v40 == v41
	loc12 = v42
	v40 = loc12
	v42 = v40 == 0<32>
	v42 = v42
	// succ:  l0011D48B
l0011D48B:
	v40 = loc1
	v40 = Mem0[v40:word32]
	loc22 = v40
	v40 = loc22
	v41 = 0<32>
	v42 = v40 == v41
	loc23 = v42
	v40 = loc23
	v42 = v40 == 0<32>
	v42 = v42
	// succ:  l0011D49E
l0011D49E:
	v40 = loc22
	v41 = 0x50<32>
	v40 = v40 + v41
	loc24 = v40
	v40 = loc22
	v41 = 0x30<32>
	v40 = v40 + v41
	loc25 = v40
	v40 = loc25
	v43 = Mem0[v40:word64]
	loc36 = v43
	v43 = loc36
	v44 = 0xFFFFFFFFFFFFFF00<64>
	v43 = v43 & v44
	loc37 = v43
	v43 = loc37
	v44 = 0x436F6F40<64>
	v42 = v43 == v44
	loc26 = v42
	v40 = loc26
	v42 = v40 == 0<32>
	branch !v42 l0011D4EB
	// succ:  l0011D4D1 l0011D4EB
l0011D4D1:
	v40 = 0x2664<32>
	v40 = Mem0[v40:word32]
	loc21 = v40
	v40 = loc30
	v41 = loc21
	Mem0[v40:word32] = v41
	v40 = 0x40FD<32>
	v41 = loc30
	fn0011D654(v40, v41)
	// succ:  l0011D4EB
l0011D4EB:
	v43 = loc36
	v44 = 0x436F6F41<64>
	v42 = v43 == v44
	loc2 = v42
	v40 = loc2
	branch !v40 l0011D512
	// succ:  l0011D4FF l0011D512
l0011D4FF:
	v40 = loc22
	v41 = 0x2C<32>
	v40 = v40 + v41
	loc3 = v40
	v40 = loc3
	v40 = Mem0[v40:word32]
	loc4 = v40
	v40 = loc4
	loc5 = v40
	goto l0011D516
	// succ:  l0011D516
l0011D512:
	v40 = loc24
	loc5 = v40
	// succ:  l0011D516
l0011D516:
	v40 = loc0
	v41 = loc5
	Mem0[v40:word32] = v41
	v40 = loc22
	v40 = Mem0[v40:word32]
	loc6 = v40
	v40 = loc6
	v41 = 4<32>
	v40 = v40 + v41
	loc7 = v40
	v40 = loc7
	v40 = Mem0[v40:word32]
	loc8 = v40
	v40 = 0x988<32>
	v40 = Mem0[v40:word32]
	loc9 = v40
	v40 = loc9
	v41 = 0x10<32>
	v40 = v40 + v41
	loc10 = v40
	v40 = loc10
	v40 = Mem0[v40:word32]
	loc11 = v40
	v40 = 0x988<32>
	v41 = loc6
	v45 = loc0
	v46 = loc11
	v47 = 0x1FF<32>
	v46 = v46 & v47
	v47 = 0xF20<32>
	v46 = v46 + v47
fn0011D441_exit:


// fn0011D5FB
// Return size: 0
word32 fn0011D5FB()
fn0011D5FB_entry:
	// succ:  l0011D5FB
l0011D5FB:
	v9 = Mem0[0x00140030<p32>:word32]
	loc6 = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = 0x10<32>
	v9 = v9 + v10
	Mem0[0x00140030<p32>:word32] = v9
	v9 = Mem0[0x00140030<p32>:word32]
	v10 = Mem0[0x00140034<p32>:word32]
	v11 = v9 >= v10
	branch !v11 l0011D614
	// succ:  l0011D60F l0011D614
l0011D60F:
	v9 = 0x10<32>
	abortStackOverflow(v9)
	// succ:  l0011D614
l0011D614:
	v9 = loc6
	loc4 = v9
	v9 = 0x53EC<32>
	v10 = 0x1EF<32>
	v9 = _pthread_once(v9, v10)
	loc0 = v9
	v9 = loc0
	v10 = 0<32>
	v11 = v9 == v10
	loc1 = v11
	v9 = loc1
	branch !v9 l0011D645
	// succ:  l0011D62E l0011D645
l0011D62E:
	v9 = 0x53F0<32>
	v9 = Mem0[v9:word32]
	loc2 = v9
	v9 = loc2
	v9 = _pthread_getspecific(v9)
	loc3 = v9
	v9 = loc6
	Mem0[0x00140030<p32>:word32] = v9
	v9 = loc3
	return v9
	// succ:  fn0011D5FB_exit
l0011D645:
	v9 = 0x41BA<32>
	v10 = loc4
	fn0011D654(v9, v10)
	// succ:  l0011D64E
l0011D64E:
	v9 = 0<32>
	return v9
	// succ:  fn0011D5FB_exit
l0011D652:
	return v9
	// succ:  fn0011D5FB_exit
fn0011D5FB_exit:


// fn0011D654
// Return size: 0
void fn0011D654(word32 arg0, word32 arg1)
fn0011D654_entry:
	// succ:  l0011D654
l0011D654:
	v6 = Mem0[0x00140030<p32>:word32]
	loc5 = v6
	v6 = Mem0[0x00140030<p32>:word32]
	v7 = 0x10<32>
	v6 = v6 + v7
	Mem0[0x00140030<p32>:word32] = v6
	v6 = Mem0[0x00140030<p32>:word32]
	v7 = Mem0[0x00140034<p32>:word32]
	v8 = v6 >= v7
	branch !v8 l0011D66D
	// succ:  l0011D668 l0011D66D
l0011D668:
	v6 = 0x10<32>
	abortStackOverflow(v6)
	// succ:  l0011D66D
l0011D66D:
	v6 = loc5
	loc2 = v6
	v6 = loc2
	v7 = arg1
	Mem0[v6:word32] = v7
	v6 = 0xB14<32>
	v6 = Mem0[v6:word32]
	loc3 = v6
	v6 = loc3
	v7 = arg0
	v9 = loc2
	v6 = fn000D2BD4(v6, v7, v9)
	v6 = 0xA<32>
	v7 = loc3
	v6 = fn000DEC35(v6, v7)
	_abort()
	// succ:  l0011D694
l0011D694:
	return
	// succ:  fn0011D654_exit
fn0011D654_exit:


// fn0011D696
// Return size: 0
void fn0011D696(word32 arg0)
fn0011D696_entry:
	// succ:  l0011D696
l0011D696:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011D696_exit
l0011D69D:
	return
	// succ:  fn0011D696_exit
fn0011D696_exit:


// fn0011D69F
// Return size: 0
void fn0011D69F(word32 arg0)
fn0011D69F_entry:
	// succ:  l0011D69F
l0011D69F:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011D69F_exit
l0011D6AB:
	return
	// succ:  fn0011D69F_exit
fn0011D69F_exit:


// fn0011D6AD
// Return size: 0
void fn0011D6AD(word32 arg0)
fn0011D6AD_entry:
	// succ:  l0011D6AD
l0011D6AD:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011D6AD_exit
l0011D6B4:
	return
	// succ:  fn0011D6AD_exit
fn0011D6AD_exit:


// fn0011D6B6
// Return size: 0
void fn0011D6B6(word32 arg0)
fn0011D6B6_entry:
	// succ:  l0011D6B6
l0011D6B6:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011D6B6_exit
l0011D6BD:
	return
	// succ:  fn0011D6B6_exit
fn0011D6B6_exit:


// fn0011D6BF
// Return size: 0
word32 fn0011D6BF(word32 arg0, word32 arg1, word32 arg2)
fn0011D6BF_entry:
	// succ:  l0011D6BF
l0011D6BF:
	v24 = Mem0[0x00140030<p32>:word32]
	loc24 = v24
	v24 = Mem0[0x00140030<p32>:word32]
	v25 = 0x40<32>
	v24 = v24 + v25
	Mem0[0x00140030<p32>:word32] = v24
	v24 = Mem0[0x00140030<p32>:word32]
	v25 = Mem0[0x00140034<p32>:word32]
	v26 = v24 >= v25
	branch !v26 l0011D6DA
	// succ:  l0011D6D4 l0011D6DA
l0011D6D4:
	v24 = 0x40<32>
	abortStackOverflow(v24)
	// succ:  l0011D6DA
l0011D6DA:
	v24 = loc24
	loc16 = v24
	v24 = arg0
	v25 = arg1
	v26 = v24 == v25
	loc17 = v26
	v24 = loc17
	branch !v24 l0011D6EE
	// succ:  l0011D6E9 l0011D6EE
l0011D6E9:
	v24 = 1<32>
	loc4 = v24
l0011D6EE:
	v24 = arg1
	v25 = 0<32>
	v26 = v24 == v25
	loc18 = v26
	v24 = loc18
	branch !v24 l0011D6FE
	// succ:  l0011D6F9 l0011D6FE
l0011D6F9:
	v24 = 0<32>
	loc4 = v24
l0011D6FE:
	v24 = arg1
	v25 = 0x9A0<32>
	v27 = 0x990<32>
	v28 = 0<32>
	v24 = fn0011DBBE(v24, v25, v27, v28)
	loc19 = v24
	v24 = loc19
	v25 = 0<32>
	v26 = v24 == v25
	loc20 = v26
	v24 = loc20
	branch !v24 l0011D71D
	// succ:  l0011D718 l0011D71D
l0011D718:
	v24 = 0<32>
	loc4 = v24
l0011D71D:
	v24 = loc16
	v25 = 4<32>
	v24 = v24 + v25
	loc21 = v24
	v24 = loc21
	v29 = 0<64>
	Mem0[v24:word64] = v29
	v24 = loc21
	v25 = 8<32>
	v24 = v24 + v25
	v29 = 0<64>
	Mem0[v24:word64] = v29
	v24 = loc21
	v25 = 0x10<32>
	v24 = v24 + v25
	v29 = 0<64>
	Mem0[v24:word64] = v29
	v24 = loc21
	v25 = 0x18<32>
	v24 = v24 + v25
	v29 = 0<64>
	Mem0[v24:word64] = v29
	v24 = loc21
	v25 = 0x20<32>
	v24 = v24 + v25
	v29 = 0<64>
	Mem0[v24:word64] = v29
	v24 = loc21
	v25 = 0x28<32>
	v24 = v24 + v25
	v29 = 0<64>
	Mem0[v24:word64] = v29
	v24 = loc21
	v25 = 0x30<32>
	v24 = v24 + v25
	v25 = 0<32>
	Mem0[v24:word32] = v25
	v24 = loc16
	v25 = loc19
	Mem0[v24:word32] = v25
	v24 = loc16
	v25 = 8<32>
	v24 = v24 + v25
	loc22 = v24
	v24 = loc22
	v25 = arg0
	Mem0[v24:word32] = v25
	v24 = loc16
	v25 = 0xC<32>
	v24 = v24 + v25
	loc5 = v24
	v24 = loc5
	v25 = 0xFFFFFFFF<32>
	Mem0[v24:word32] = v25
	v24 = loc16
	v25 = 0x30<32>
	v24 = v24 + v25
	loc6 = v24
	v24 = loc6
	v25 = 1<32>
	Mem0[v24:word32] = v25
	v24 = loc19
	v24 = Mem0[v24:word32]
	loc7 = v24
	v24 = loc7
	v25 = 0x1C<32>
	v24 = v24 + v25
	loc8 = v24
	v24 = loc8
	v24 = Mem0[v24:word32]
	loc9 = v24
	v24 = arg2
	v24 = Mem0[v24:word32]
	loc10 = v24
	v24 = loc19
	v25 = loc16
	v27 = loc10
	v28 = 1<32>
	v30 = loc9
	v31 = 0x1FF<32>
	v30 = v30 & v31
	v31 = 0x2F20<32>
	v30 = v30 + v31
fn0011D6BF_exit:


// fn0011D812
// Return size: 0
void fn0011D812(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0011D812_entry:
	// succ:  l0011D812
l0011D812:
	v7 = Mem0[0x00140030<p32>:word32]
	loc10 = v7
	v7 = arg1
	v8 = 8<32>
	v7 = v7 + v8
	loc6 = v7
	v7 = loc6
	v7 = Mem0[v7:word32]
	loc7 = v7
	v7 = arg0
	v8 = loc7
	v9 = v7 == v8
	loc8 = v9
	v7 = loc8
	branch !v7 l0011D83F
	// succ:  l0011D831 l0011D83F
l0011D831:
	v7 = 0<32>
	v8 = arg1
	v10 = arg2
	v11 = arg3
	v12 = arg4
	fn0011DA6B(v7, v8, v10, v11, v12)
	// succ:  l0011D83F
l0011D83F:
	return
	// succ:  fn0011D812_exit
l0011D840:
	return
	// succ:  fn0011D812_exit
fn0011D812_exit:


// fn0011D842
// Return size: 0
void fn0011D842(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011D842_entry:
	// succ:  l0011D842
l0011D842:
	v35 = Mem0[0x00140030<p32>:word32]
	loc37 = v35
	v35 = arg1
	v36 = 8<32>
	v35 = v35 + v36
	loc31 = v35
	v35 = loc31
	v35 = Mem0[v35:word32]
	loc32 = v35
	v35 = arg0
	v36 = loc32
	v37 = v35 == v36
	loc33 = v37
	// succ:  l0011D85D
l0011D85D:
	v35 = loc33
	branch !v35 l0011D8A0
	// succ:  l0011D863 l0011D8A0
l0011D863:
	v35 = arg1
	v36 = 4<32>
	v35 = v35 + v36
	loc34 = v35
	v35 = loc34
	v35 = Mem0[v35:word32]
	loc35 = v35
	v35 = loc35
	v36 = arg2
	v37 = v35 == v36
	loc5 = v37
	v35 = loc5
	branch !v35 l0011D89F
	// succ:  l0011D87C l0011D89F
l0011D87C:
	v35 = arg1
	v36 = 0x1C<32>
	v35 = v35 + v36
	loc6 = v35
	v35 = loc6
	v35 = Mem0[v35:word32]
	loc7 = v35
	v35 = loc7
	v36 = 1<32>
	v37 = v35 == v36
	loc8 = v37
	v35 = loc8
	v37 = v35 == 0<32>
	branch !v37 l0011D89E
	// succ:  l0011D896 l0011D89E
l0011D896:
	v35 = loc6
	v36 = arg3
	Mem0[v35:word32] = v36
	// succ:  l0011D89E
l0011D89E:
	// succ:  l0011D89F
l0011D89F:
	goto l0011D986
	// succ:  l0011D986
l0011D8A0:
	v35 = arg1
	v35 = Mem0[v35:word32]
	loc9 = v35
	v35 = arg0
	v36 = loc9
	v37 = v35 == v36
	loc10 = v37
	v35 = loc10
	branch !v35 l0011D986
	// succ:  l0011D8B2 l0011D986
l0011D8B2:
	v35 = arg1
	v36 = 0x10<32>
	v35 = v35 + v36
	loc11 = v35
	v35 = loc11
	v35 = Mem0[v35:word32]
	loc12 = v35
	v35 = loc12
	v36 = arg2
	v37 = v35 == v36
	loc13 = v37
	v35 = loc13
	v37 = v35 == 0<32>
	branch !v37 l0011D96B
	// succ:  l0011D8CC l0011D96B
l0011D8CC:
	v35 = arg1
	v36 = 0x14<32>
	v35 = v35 + v36
	loc14 = v35
	v35 = loc14
	v35 = Mem0[v35:word32]
	loc15 = v35
	v35 = loc15
	v36 = arg2
	v37 = v35 == v36
	loc16 = v37
	v35 = loc16
	v37 = v35 == 0<32>
	branch !v37 l0011D96A
	// succ:  l0011D8E6 l0011D96A
l0011D8E6:
	v35 = arg1
	v36 = 0x20<32>
	v35 = v35 + v36
	loc19 = v35
	v35 = loc19
	v36 = arg3
	Mem0[v35:word32] = v36
	v35 = loc14
	v36 = arg2
	Mem0[v35:word32] = v36
	v35 = arg1
	v36 = 0x28<32>
	v35 = v35 + v36
	loc20 = v35
	v35 = loc20
	v35 = Mem0[v35:word32]
	loc21 = v35
	v35 = loc21
	v36 = 1<32>
	v35 = v35 + v36
	loc22 = v35
	v35 = loc20
	v36 = loc22
	Mem0[v35:word32] = v36
	v35 = arg1
	v36 = 0x24<32>
	v35 = v35 + v36
	loc23 = v35
	v35 = loc23
	v35 = Mem0[v35:word32]
	loc24 = v35
	v35 = loc24
	v36 = 1<32>
	v37 = v35 == v36
	loc25 = v37
	v35 = loc25
	branch !v35 l0011D959
	// succ:  l0011D930 l0011D959
l0011D930:
	v35 = arg1
	v36 = 0x18<32>
	v35 = v35 + v36
	loc26 = v35
	v35 = loc26
	v35 = Mem0[v35:word32]
	loc27 = v35
	v35 = loc27
	v36 = 2<32>
	v37 = v35 == v36
	loc28 = v37
	v35 = loc28
	branch !v35 l0011D958
	// succ:  l0011D949 l0011D958
l0011D949:
	v35 = arg1
	v36 = 0x36<32>
	v35 = v35 + v36
	loc29 = v35
	v35 = loc29
	v36 = 1<32>
	v38 = SLICE(v36, byte, 0)
	Mem0[v35:byte] = v38
	// succ:  l0011D958
l0011D958:
	// succ:  l0011D959
l0011D959:
	v35 = arg1
	v36 = 0x2C<32>
	v35 = v35 + v36
	loc30 = v35
	v35 = loc30
	v36 = 4<32>
	Mem0[v35:word32] = v36
	goto l0011D987
	// succ:  l0011D987
l0011D96A:
	// succ:  l0011D96B
l0011D96B:
	v35 = arg3
	v36 = 1<32>
	v37 = v35 == v36
	loc17 = v37
	v35 = loc17
	branch !v35 l0011D985
	// succ:  l0011D976 l0011D985
l0011D976:
	v35 = arg1
	v36 = 0x20<32>
	v35 = v35 + v36
	loc18 = v35
	v35 = loc18
	v36 = 1<32>
	Mem0[v35:word32] = v36
	// succ:  l0011D985
l0011D985:
	// succ:  l0011D986
l0011D986:
	// succ:  l0011D986
l0011D986:
	// succ:  l0011D987
l0011D987:
	return
	// succ:  fn0011D842_exit
l0011D989:
	return
	// succ:  fn0011D842_exit
fn0011D842_exit:


// fn0011D98B
// Return size: 0
void fn0011D98B(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011D98B_entry:
	// succ:  l0011D98B
l0011D98B:
	v7 = Mem0[0x00140030<p32>:word32]
	loc8 = v7
	v7 = arg1
	v8 = 8<32>
	v7 = v7 + v8
	loc4 = v7
	v7 = loc4
	v7 = Mem0[v7:word32]
	loc5 = v7
	v7 = arg0
	v8 = loc5
	v9 = v7 == v8
	loc6 = v9
	v7 = loc6
	branch !v7 l0011D9B6
	// succ:  l0011D9AA l0011D9B6
l0011D9AA:
	v7 = 0<32>
	v8 = arg1
	v10 = arg2
	v11 = arg3
	fn0011D9B9(v7, v8, v10, v11)
	// succ:  l0011D9B6
l0011D9B6:
	return
	// succ:  fn0011D98B_exit
l0011D9B7:
	return
	// succ:  fn0011D98B_exit
fn0011D98B_exit:


// fn0011D9B9
// Return size: 0
void fn0011D9B9(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011D9B9_entry:
	// succ:  l0011D9B9
l0011D9B9:
	v18 = Mem0[0x00140030<p32>:word32]
	loc19 = v18
	v18 = arg1
	v19 = 0x10<32>
	v18 = v18 + v19
	loc12 = v18
	v18 = loc12
	v18 = Mem0[v18:word32]
	loc13 = v18
	v18 = loc13
	v19 = 0<32>
	v20 = v18 == v19
	loc14 = v20
	// succ:  l0011D9D4
l0011D9D4:
	v18 = loc14
	branch !v18 l0011D9FE
	// succ:  l0011D9DA l0011D9FE
l0011D9DA:
	v18 = loc12
	v19 = arg2
	Mem0[v18:word32] = v19
	v18 = arg1
	v19 = 0x18<32>
	v18 = v18 + v19
	loc15 = v18
	v18 = loc15
	v19 = arg3
	Mem0[v18:word32] = v19
	v18 = arg1
	v19 = 0x24<32>
	v18 = v18 + v19
	loc16 = v18
	v18 = loc16
	v19 = 1<32>
	Mem0[v18:word32] = v19
	goto l0011DA66
	// succ:  l0011DA66
l0011D9FE:
	v18 = loc13
	v19 = arg2
	v20 = v18 == v19
	loc17 = v20
	v18 = loc17
	v20 = v18 == 0<32>
	branch !v20 l0011DA45
	// succ:  l0011DA0A l0011DA45
l0011DA0A:
	v18 = arg1
	v19 = 0x24<32>
	v18 = v18 + v19
	loc7 = v18
	v18 = loc7
	v18 = Mem0[v18:word32]
	loc8 = v18
	v18 = loc8
	v19 = 1<32>
	v18 = v18 + v19
	loc9 = v18
	v18 = loc7
	v19 = loc9
	Mem0[v18:word32] = v19
	v18 = arg1
	v19 = 0x18<32>
	v18 = v18 + v19
	loc10 = v18
	v18 = loc10
	v19 = 2<32>
	Mem0[v18:word32] = v19
	v18 = arg1
	v19 = 0x36<32>
	v18 = v18 + v19
	loc11 = v18
	v18 = loc11
	v19 = 1<32>
	v21 = SLICE(v19, byte, 0)
	Mem0[v18:byte] = v21
	goto l0011DA67
	// succ:  l0011DA67
l0011DA45:
	v18 = arg1
	v19 = 0x18<32>
	v18 = v18 + v19
	loc4 = v18
	v18 = loc4
	v18 = Mem0[v18:word32]
	loc5 = v18
	v18 = loc5
	v19 = 2<32>
	v20 = v18 == v19
	loc6 = v20
	v18 = loc6
	branch !v18 l0011DA66
	// succ:  l0011DA5E l0011DA66
l0011DA5E:
	v18 = loc4
	v19 = arg3
	Mem0[v18:word32] = v19
	// succ:  l0011DA66
l0011DA66:
	// succ:  l0011DA66
l0011DA66:
	// succ:  l0011DA67
l0011DA67:
	return
	// succ:  fn0011D9B9_exit
l0011DA69:
	return
	// succ:  fn0011D9B9_exit
fn0011D9B9_exit:


// fn0011DA6B
// Return size: 0
void fn0011DA6B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011DA6B_entry:
	// succ:  l0011DA6B
l0011DA6B:
	v35 = Mem0[0x00140030<p32>:word32]
	loc37 = v35
	v35 = arg1
	v36 = 0x35<32>
	v35 = v35 + v36
	loc29 = v35
	v35 = loc29
	v36 = 1<32>
	v37 = SLICE(v36, byte, 0)
	Mem0[v35:byte] = v37
	v35 = arg1
	v36 = 4<32>
	v35 = v35 + v36
	loc30 = v35
	v35 = loc30
	v35 = Mem0[v35:word32]
	loc31 = v35
	v35 = loc31
	v36 = arg3
	v38 = v35 == v36
	loc32 = v38
	// succ:  l0011DA94
l0011DA94:
	v35 = loc32
	branch !v35 l0011DBBA
	// succ:  l0011DA9A l0011DBBA
l0011DA9A:
	v35 = arg1
	v36 = 0x34<32>
	v35 = v35 + v36
	loc33 = v35
	v35 = loc33
	v36 = 1<32>
	v39 = SLICE(v36, byte, 0)
	Mem0[v35:byte] = v39
	v35 = arg1
	v36 = 0x10<32>
	v35 = v35 + v36
	loc5 = v35
	v35 = loc5
	v35 = Mem0[v35:word32]
	loc6 = v35
	v35 = loc6
	v36 = 0<32>
	v38 = v35 == v36
	loc7 = v38
	v35 = loc7
	branch !v35 l0011DB20
	// succ:  l0011DAC1 l0011DB20
l0011DAC1:
	v35 = loc5
	v36 = arg2
	Mem0[v35:word32] = v36
	v35 = arg1
	v36 = 0x18<32>
	v35 = v35 + v36
	loc8 = v35
	v35 = loc8
	v36 = arg4
	Mem0[v35:word32] = v36
	v35 = arg1
	v36 = 0x24<32>
	v35 = v35 + v36
	loc9 = v35
	v35 = loc9
	v36 = 1<32>
	Mem0[v35:word32] = v36
	v35 = arg1
	v36 = 0x30<32>
	v35 = v35 + v36
	loc10 = v35
	v35 = loc10
	v35 = Mem0[v35:word32]
	loc11 = v35
	v35 = loc11
	v36 = 1<32>
	v38 = v35 == v36
	loc12 = v38
	v35 = arg4
	v36 = 1<32>
	v38 = v35 == v36
	loc13 = v38
	v35 = loc12
	v36 = loc13
	v35 = v35 & v36
	loc34 = v35
	v35 = loc34
	v38 = v35 == 0<32>
	branch !v38 l0011DB0F
	// succ:  l0011DB0C l0011DB0F
l0011DB0C:
	goto l0011DBBA
	// succ:  l0011DBBA
l0011DB0F:
	v35 = arg1
	v36 = 0x36<32>
	v35 = v35 + v36
	loc14 = v35
	v35 = loc14
	v36 = 1<32>
	v40 = SLICE(v36, byte, 0)
	Mem0[v35:byte] = v40
	goto l0011DBBA
	// succ:  l0011DBBA
l0011DB20:
	v35 = loc6
	v36 = arg2
	v38 = v35 == v36
	loc15 = v38
	v35 = loc15
	v38 = v35 == 0<32>
	branch !v38 l0011DB59
	// succ:  l0011DB2C l0011DB59
l0011DB2C:
	v35 = arg1
	v36 = 0x24<32>
	v35 = v35 + v36
	loc25 = v35
	v35 = loc25
	v35 = Mem0[v35:word32]
	loc26 = v35
	v35 = loc26
	v36 = 1<32>
	v35 = v35 + v36
	loc27 = v35
	v35 = loc25
	v36 = loc27
	Mem0[v35:word32] = v36
	v35 = arg1
	v36 = 0x36<32>
	v35 = v35 + v36
	loc28 = v35
	v35 = loc28
	v36 = 1<32>
	v41 = SLICE(v36, byte, 0)
	Mem0[v35:byte] = v41
	goto l0011DBBA
	// succ:  l0011DBBA
l0011DB59:
	v35 = arg1
	v36 = 0x18<32>
	v35 = v35 + v36
	loc16 = v35
	v35 = loc16
	v35 = Mem0[v35:word32]
	loc17 = v35
	v35 = loc17
	v36 = 2<32>
	v38 = v35 == v36
	loc18 = v38
	v35 = loc18
	branch !v35 l0011DB7E
	// succ:  l0011DB72 l0011DB7E
l0011DB72:
	v35 = loc16
	v36 = arg4
	Mem0[v35:word32] = v36
	v35 = arg4
	loc23 = v35
	goto l0011DB82
	// succ:  l0011DB82
l0011DB7E:
	v35 = loc17
	loc23 = v35
	// succ:  l0011DB82
l0011DB82:
	v35 = arg1
	v36 = 0x30<32>
	v35 = v35 + v36
	loc19 = v35
	v35 = loc19
	v35 = Mem0[v35:word32]
	loc20 = v35
	v35 = loc20
	v36 = 1<32>
	v38 = v35 == v36
	loc21 = v38
	v35 = loc23
	v36 = 1<32>
	v38 = v35 == v36
	loc22 = v38
	v35 = loc21
	v36 = loc22
	v35 = v35 & v36
	loc35 = v35
	v35 = loc35
	branch !v35 l0011DBB9
	// succ:  l0011DBAA l0011DBB9
l0011DBAA:
	v35 = arg1
	v36 = 0x36<32>
	v35 = v35 + v36
	loc24 = v35
	v35 = loc24
	v36 = 1<32>
	v42 = SLICE(v36, byte, 0)
	Mem0[v35:byte] = v42
	// succ:  l0011DBB9
l0011DBB9:
	// succ:  l0011DBBA
l0011DBBA:
	// succ:  l0011DBBA
l0011DBBA:
	return
	// succ:  fn0011DA6B_exit
l0011DBBC:
	return
	// succ:  fn0011DA6B_exit
fn0011DA6B_exit:


// fn0011DBBE
// Return size: 0
word32 fn0011DBBE(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011DBBE_entry:
	// succ:  l0011DBBE
l0011DBBE:
	v55 = Mem0[0x00140030<p32>:word32]
	loc56 = v55
	v55 = Mem0[0x00140030<p32>:word32]
	v56 = 0x40<32>
	v55 = v55 + v56
	Mem0[0x00140030<p32>:word32] = v55
	v55 = Mem0[0x00140030<p32>:word32]
	v56 = Mem0[0x00140034<p32>:word32]
	v57 = v55 >= v56
	branch !v57 l0011DBD9
	// succ:  l0011DBD3 l0011DBD9
l0011DBD3:
	v55 = 0x40<32>
	abortStackOverflow(v55)
	// succ:  l0011DBD9
l0011DBD9:
	v55 = loc56
	loc37 = v55
	v55 = arg0
	v55 = Mem0[v55:word32]
	loc46 = v55
	v55 = loc46
	v56 = 0xFFFFFFF8<32>
	v55 = v55 + v56
	loc47 = v55
	v55 = loc47
	v55 = Mem0[v55:word32]
	loc48 = v55
	v55 = arg0
	v56 = loc48
	v55 = v55 + v56
	loc49 = v55
	v55 = loc46
	v56 = 0xFFFFFFFC<32>
	v55 = v55 + v56
	loc50 = v55
	v55 = loc50
	v55 = Mem0[v55:word32]
	loc7 = v55
	v55 = loc37
	v56 = arg2
	Mem0[v55:word32] = v56
	v55 = loc37
	v56 = 4<32>
	v55 = v55 + v56
	loc8 = v55
	v55 = loc8
	v56 = arg0
	Mem0[v55:word32] = v56
	v55 = loc37
	v56 = 8<32>
	v55 = v55 + v56
	loc9 = v55
	v55 = loc9
	v56 = arg1
	Mem0[v55:word32] = v56
	v55 = loc37
	v56 = 0xC<32>
	v55 = v55 + v56
	loc10 = v55
	v55 = loc10
	v56 = arg3
	Mem0[v55:word32] = v56
	v55 = loc37
	v56 = 0x10<32>
	v55 = v55 + v56
	loc11 = v55
	v55 = loc37
	v56 = 0x14<32>
	v55 = v55 + v56
	loc12 = v55
	v55 = loc37
	v56 = 0x18<32>
	v55 = v55 + v56
	loc13 = v55
	v55 = loc37
	v56 = 0x1C<32>
	v55 = v55 + v56
	loc14 = v55
	v55 = loc37
	v56 = 0x20<32>
	v55 = v55 + v56
	loc15 = v55
	v55 = loc37
	v56 = 0x28<32>
	v55 = v55 + v56
	loc16 = v55
	v55 = loc7
	v56 = arg2
	v57 = v55 == v56
	loc17 = v57
	v55 = loc11
	v58 = 0<64>
	Mem0[v55:word64] = v58
	v55 = loc11
	v56 = 8<32>
	v55 = v55 + v56
	v58 = 0<64>
	Mem0[v55:word64] = v58
	v55 = loc11
	v56 = 0x10<32>
	v55 = v55 + v56
	v58 = 0<64>
	Mem0[v55:word64] = v58
	v55 = loc11
	v56 = 0x18<32>
	v55 = v55 + v56
	v58 = 0<64>
	Mem0[v55:word64] = v58
	v55 = loc11
	v56 = 0x20<32>
	v55 = v55 + v56
	v56 = 0<32>
	Mem0[v55:word32] = v56
	v55 = loc11
	v56 = 0x24<32>
	v55 = v55 + v56
	v56 = 0<32>
	v59 = SLICE(v56, word16, 0)
	Mem0[v55:word16] = v59
	v55 = loc11
	v56 = 0x26<32>
	v55 = v55 + v56
	v56 = 0<32>
	v60 = SLICE(v56, byte, 0)
	Mem0[v55:byte] = v60
	// succ:  l0011DCAC
l0011DCAC:
	v55 = loc17
	v55 = v55
	// succ:  l0011DCB2
l0011DCB2:
	v55 = loc37
	v56 = 0x30<32>
	v55 = v55 + v56
	loc18 = v55
	v55 = loc18
	v56 = 1<32>
	Mem0[v55:word32] = v56
	v55 = arg2
	v55 = Mem0[v55:word32]
	loc19 = v55
	v55 = loc19
	v56 = 0x14<32>
	v55 = v55 + v56
	loc20 = v55
	v55 = loc20
	v55 = Mem0[v55:word32]
	loc21 = v55
	v55 = arg2
	v56 = loc37
	v61 = loc49
	v62 = loc49
	v63 = 1<32>
	v64 = 0<32>
	v65 = loc21
	v66 = 0x1FF<32>
	v65 = v65 & v66
	v66 = 0x1320<32>
	v65 = v65 + v66
fn0011DBBE_exit:


// fn0011DE2C
// Return size: 0
void fn0011DE2C(word32 arg0)
fn0011DE2C_entry:
	// succ:  l0011DE2C
l0011DE2C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011DE2C_exit
l0011DE38:
	return
	// succ:  fn0011DE2C_exit
fn0011DE2C_exit:


// fn0011DE3A
// Return size: 0
void fn0011DE3A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0011DE3A_entry:
	// succ:  l0011DE3A
l0011DE3A:
	v12 = Mem0[0x00140030<p32>:word32]
	loc15 = v12
	v12 = arg1
	v13 = 8<32>
	v12 = v12 + v13
	loc10 = v12
	v12 = loc10
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = arg0
	v13 = loc11
	v14 = v12 == v13
	loc12 = v14
	v12 = loc12
	branch !v12 l0011DE67
	// succ:  l0011DE59 l0011DE67
l0011DE59:
	v12 = 0<32>
	v13 = arg1
	v15 = arg2
	v16 = arg3
	v17 = arg4
	fn0011DA6B(v12, v13, v15, v16, v17)
l0011DE67:
	v12 = arg0
	v13 = 8<32>
	v12 = v12 + v13
	loc13 = v12
	v12 = loc13
	v12 = Mem0[v12:word32]
	loc6 = v12
	v12 = loc6
	v12 = Mem0[v12:word32]
	loc7 = v12
	v12 = loc7
	v13 = 0x14<32>
	v12 = v12 + v13
	loc8 = v12
	v12 = loc8
	v12 = Mem0[v12:word32]
	loc9 = v12
	v12 = loc6
	v13 = arg1
	v15 = arg2
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v19 = loc9
	v20 = 0x1FF<32>
	v19 = v19 & v20
	v20 = 0x1320<32>
	v19 = v19 + v20
fn0011DE3A_exit:


// fn0011DEA7
// Return size: 0
void fn0011DEA7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011DEA7_entry:
	// succ:  l0011DEA7
l0011DEA7:
	v55 = Mem0[0x00140030<p32>:word32]
	loc57 = v55
	v55 = arg1
	v56 = 8<32>
	v55 = v55 + v56
	loc46 = v55
	v55 = loc46
	v55 = Mem0[v55:word32]
	loc51 = v55
	v55 = arg0
	v56 = loc51
	v57 = v55 == v56
	loc52 = v57
	// succ:  l0011DEC2
l0011DEC2:
	v55 = loc52
	branch !v55 l0011DF05
	// succ:  l0011DEC8 l0011DF05
l0011DEC8:
	v55 = arg1
	v56 = 4<32>
	v55 = v55 + v56
	loc53 = v55
	v55 = loc53
	v55 = Mem0[v55:word32]
	loc54 = v55
	v55 = loc54
	v56 = arg2
	v57 = v55 == v56
	loc6 = v57
	v55 = loc6
	branch !v55 l0011DF04
	// succ:  l0011DEE1 l0011DF04
l0011DEE1:
	v55 = arg1
	v56 = 0x1C<32>
	v55 = v55 + v56
	loc7 = v55
	v55 = loc7
	v55 = Mem0[v55:word32]
	loc8 = v55
	v55 = loc8
	v56 = 1<32>
	v57 = v55 == v56
	loc9 = v57
	v55 = loc9
	v57 = v55 == 0<32>
	branch !v57 l0011DF03
	// succ:  l0011DEFB l0011DF03
l0011DEFB:
	v55 = loc7
	v56 = arg3
	Mem0[v55:word32] = v56
	// succ:  l0011DF03
l0011DF03:
	// succ:  l0011DF04
l0011DF04:
l0011DF05:
	v55 = arg1
	v55 = Mem0[v55:word32]
	loc10 = v55
	v55 = arg0
	v56 = loc10
	v57 = v55 == v56
	loc11 = v57
	v55 = loc11
	v57 = v55 == 0<32>
	v57 = v57
	// succ:  l0011DF18
l0011DF18:
	v55 = arg0
	v56 = 8<32>
	v55 = v55 + v56
	loc45 = v55
	v55 = loc45
	v55 = Mem0[v55:word32]
	loc47 = v55
	v55 = loc47
	v55 = Mem0[v55:word32]
	loc48 = v55
	v55 = loc48
	v56 = 0x18<32>
	v55 = v55 + v56
	loc49 = v55
	v55 = loc49
	v55 = Mem0[v55:word32]
	loc50 = v55
	v55 = loc47
	v56 = arg1
	v58 = arg2
	v59 = arg3
	v60 = arg4
	v61 = loc50
	v62 = 0x1FF<32>
	v61 = v61 & v62
	v62 = 0x200<32>
	v61 = v61 + v62
fn0011DEA7_exit:


// fn0011E119
// Return size: 0
void fn0011E119(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011E119_entry:
	// succ:  l0011E119
l0011E119:
	v12 = Mem0[0x00140030<p32>:word32]
	loc13 = v12
	v12 = arg1
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc6
	v12 = Mem0[v12:word32]
	loc7 = v12
	v12 = arg0
	v13 = loc7
	v14 = v12 == v13
	loc8 = v14
	v12 = loc8
	branch !v12 l0011E144
	// succ:  l0011E138 l0011E144
l0011E138:
	v12 = 0<32>
	v13 = arg1
	v15 = arg2
	v16 = arg3
	fn0011D9B9(v12, v13, v15, v16)
l0011E144:
	v12 = arg0
	v13 = 8<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc9
	v12 = Mem0[v12:word32]
	loc10 = v12
	v12 = loc10
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc11
	v13 = 0x1C<32>
	v12 = v12 + v13
	loc4 = v12
	v12 = loc4
	v12 = Mem0[v12:word32]
	loc5 = v12
	v12 = loc10
	v13 = arg1
	v15 = arg2
	v16 = arg3
	v17 = loc5
	v18 = 0x1FF<32>
	v17 = v17 & v18
	v18 = 0x2F20<32>
	v17 = v17 + v18
fn0011E119_exit:


// fn0011E181
// Return size: 0
void fn0011E181(word32 arg0)
fn0011E181_entry:
	// succ:  l0011E181
l0011E181:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011E181_exit
l0011E188:
	return
	// succ:  fn0011E181_exit
fn0011E181_exit:


// fn0011E18A
// Return size: 0
void fn0011E18A()
fn0011E18A_entry:
	// succ:  l0011E18A
l0011E18A:
	v7 = Mem0[0x00140030<p32>:word32]
	loc4 = v7
	v7 = Mem0[0x00140030<p32>:word32]
	v8 = 0x10<32>
	v7 = v7 + v8
	Mem0[0x00140030<p32>:word32] = v7
	v7 = Mem0[0x00140030<p32>:word32]
	v8 = Mem0[0x00140034<p32>:word32]
	v9 = v7 >= v8
	branch !v9 l0011E1A3
	// succ:  l0011E19E l0011E1A3
l0011E19E:
	v7 = 0x10<32>
	abortStackOverflow(v7)
	// succ:  l0011E1A3
l0011E1A3:
	v7 = loc4
	loc2 = v7
	v7 = 0x53F0<32>
	v8 = 0x1F0<32>
	v7 = _pthread_key_create(v7, v8)
	loc0 = v7
	v7 = loc0
	v8 = 0<32>
	v9 = v7 == v8
	loc1 = v9
	v7 = loc1
	branch !v7 l0011E1C3
	// succ:  l0011E1BD l0011E1C3
l0011E1BD:
	v7 = loc4
	Mem0[0x00140030<p32>:word32] = v7
	return
	// succ:  fn0011E18A_exit
l0011E1C3:
	v7 = 0x41EB<32>
	v8 = loc2
	fn0011D654(v7, v8)
	// succ:  l0011E1CC
l0011E1CC:
	// succ:  l0011E1CD
l0011E1CD:
	return
	// succ:  fn0011E18A_exit
fn0011E18A_exit:


// fn0011E1CF
// Return size: 0
void fn0011E1CF(word32 arg0)
fn0011E1CF_entry:
	// succ:  l0011E1CF
l0011E1CF:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v8 = Mem0[0x00140030<p32>:word32]
	v9 = 0x10<32>
	v8 = v8 + v9
	Mem0[0x00140030<p32>:word32] = v8
	v8 = Mem0[0x00140030<p32>:word32]
	v9 = Mem0[0x00140034<p32>:word32]
	v10 = v8 >= v9
	branch !v10 l0011E1E8
	// succ:  l0011E1E3 l0011E1E8
l0011E1E3:
	v8 = 0x10<32>
	abortStackOverflow(v8)
	// succ:  l0011E1E8
l0011E1E8:
	v8 = loc6
	loc4 = v8
	v8 = arg0
	_free(v8)
	v8 = 0x53F0<32>
	v8 = Mem0[v8:word32]
	loc1 = v8
	v8 = loc1
	v9 = 0<32>
	v8 = _pthread_setspecific(v8, v9)
	loc2 = v8
	v8 = loc2
	v9 = 0<32>
	v10 = v8 == v9
	loc3 = v10
	v8 = loc3
	branch !v8 l0011E213
	// succ:  l0011E20D l0011E213
l0011E20D:
	v8 = loc6
	Mem0[0x00140030<p32>:word32] = v8
	return
	// succ:  fn0011E1CF_exit
l0011E213:
	v8 = 0x421D<32>
	v9 = loc4
	fn0011D654(v8, v9)
	// succ:  l0011E21C
l0011E21C:
	// succ:  l0011E21D
l0011E21D:
	return
	// succ:  fn0011E1CF_exit
fn0011E1CF_exit:


// fn0011E21F
// Return size: 0
void fn0011E21F()
fn0011E21F_entry:
	// succ:  l0011E21F
l0011E21F:
	v19 = Mem0[0x00140030<p32>:word32]
	loc14 = v19
	v19 = 0<32>
	Mem0[0x00140048<p32>:word32] = v19
	v19 = 0x1F1<32>
	v19 = invoke_i(v19)
	loc0 = v19
	v19 = Mem0[0x00140048<p32>:word32]
	loc1 = v19
	v19 = 0<32>
	Mem0[0x00140048<p32>:word32] = v19
	v19 = loc1
	v20 = 1<32>
	v19 = v19 & v20
	loc7 = v19
	v19 = loc7
	branch !v19 l0011E252
	// succ:  l0011E243 l0011E252
l0011E243:
	v19 = 0<32>
	v19 = ___cxa_find_matching_catch_3(v19)
	loc5 = v19
	v19 = Mem0[0x00140094<p32>:word32]
	loc6 = v19
	v19 = loc5
	fn000D0E65(v19)
	// succ:  l0011E252
l0011E252:
	v19 = loc0
	v20 = 0<32>
	v21 = v19 == v20
	loc8 = v21
	v19 = loc8
	v21 = v19 == 0<32>
	branch !v21 l0011E2B1
	// succ:  l0011E25E l0011E2B1
l0011E25E:
	v19 = loc0
	v19 = Mem0[v19:word32]
	loc9 = v19
	v19 = loc9
	v20 = 0<32>
	v21 = v19 == v20
	loc10 = v21
	v19 = loc10
	v21 = v19 == 0<32>
	branch !v21 l0011E2B0
	// succ:  l0011E271 l0011E2B0
l0011E271:
	v19 = loc9
	v20 = 0x30<32>
	v19 = v19 + v20
	loc11 = v19
	v19 = loc11
	v22 = Mem0[v19:word64]
	loc15 = v22
	v22 = loc15
	v23 = 0xFFFFFFFFFFFFFF00<64>
	v22 = v22 & v23
	loc16 = v22
	v22 = loc16
	v23 = 0x436F6F40<64>
	v21 = v22 == v23
	loc12 = v21
	v19 = loc12
	branch !v19 l0011E2AF
	// succ:  l0011E29B l0011E2AF
l0011E29B:
	v19 = loc9
	v20 = 0xC<32>
	v19 = v19 + v20
	loc2 = v19
	v19 = loc2
	v19 = Mem0[v19:word32]
	loc3 = v19
	v19 = loc3
	fn0011E2BD(v19)
	// succ:  l0011E2AF
l0011E2AF:
	// succ:  l0011E2B0
l0011E2B0:
	// succ:  l0011E2B1
l0011E2B1:
	v19 = fn0011E377()
	loc4 = v19
	v19 = loc4
	fn0011E2BD(v19)
	// succ:  l0011E2BB
l0011E2BB:
	return
	// succ:  fn0011E21F_exit
fn0011E21F_exit:


// fn0011E2BD
// Return size: 0
void fn0011E2BD(word32 arg0)
fn0011E2BD_entry:
	// succ:  l0011E2BD
l0011E2BD:
	v18 = Mem0[0x00140030<p32>:word32]
	loc16 = v18
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = 0x10<32>
	v18 = v18 + v19
	Mem0[0x00140030<p32>:word32] = v18
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l0011E2D6
	// succ:  l0011E2D1 l0011E2D6
l0011E2D1:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l0011E2D6
l0011E2D6:
	v18 = loc16
	v19 = 8<32>
	v18 = v18 + v19
	loc14 = v18
	v18 = loc16
	loc13 = v18
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = arg0
	invoke_v(v18)
	v18 = Mem0[0x00140048<p32>:word32]
	loc1 = v18
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = loc1
	v19 = 1<32>
	v18 = v18 & v19
	loc5 = v18
	v18 = loc5
	v20 = v18 == 0<32>
	branch !v20 l0011E315
	// succ:  l0011E2FD l0011E315
l0011E2FD:
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = 0x1F2<32>
	v19 = 0x4252<32>
	v21 = loc13
	invoke_vii(v18, v19, v21)
	v18 = Mem0[0x00140048<p32>:word32]
	loc6 = v18
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	// succ:  l0011E315
l0011E315:
	v18 = 0<32>
	v18 = ___cxa_find_matching_catch_3(v18)
	loc7 = v18
	v18 = Mem0[0x00140094<p32>:word32]
	loc8 = v18
	v18 = loc7
	v18 = ___cxa_begin_catch(v18)
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = 0x1F2<32>
	v19 = 0x427A<32>
	v21 = loc14
	invoke_vii(v18, v19, v21)
	v18 = Mem0[0x00140048<p32>:word32]
	loc9 = v18
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = 0<32>
	v18 = ___cxa_find_matching_catch_3(v18)
	loc10 = v18
	v18 = Mem0[0x00140094<p32>:word32]
	loc11 = v18
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = 0x16C<32>
	invoke_v(v18)
	v18 = Mem0[0x00140048<p32>:word32]
	loc12 = v18
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v18 = loc12
	v19 = 1<32>
	v18 = v18 & v19
	loc2 = v18
	v18 = loc2
	branch !v18 l0011E370
	// succ:  l0011E361 l0011E370
l0011E361:
	v18 = 0<32>
	v18 = ___cxa_find_matching_catch_3(v18)
	loc3 = v18
	v18 = Mem0[0x00140094<p32>:word32]
	loc4 = v18
	v18 = loc3
	fn000D0E65(v18)
	goto l0011E374
	// succ:  l0011E374
l0011E370:
	v18 = loc10
	fn000D0E65(v18)
	// succ:  l0011E374
l0011E374:
	// succ:  l0011E375
l0011E375:
	return
	// succ:  fn0011E2BD_exit
fn0011E2BD_exit:


// fn0011E377
// Return size: 0
word32 fn0011E377()
fn0011E377_entry:
	// succ:  l0011E377
l0011E377:
	v7 = Mem0[0x00140030<p32>:word32]
	loc4 = v7
	v7 = 0x2660<32>
	v7 = Mem0[v7:word32]
	loc0 = v7
	v7 = loc0
	v8 = 0<32>
	v7 = v7 + v8
	loc1 = v7
	v7 = 0x2660<32>
	v8 = loc1
	Mem0[v7:word32] = v8
	v7 = loc0
	loc2 = v7
	v7 = loc2
	return v7
	// succ:  fn0011E377_exit
l0011E39D:
	return v7
	// succ:  fn0011E377_exit
fn0011E377_exit:


// fn0011E39F
// Return size: 0
void fn0011E39F(word32 arg0)
fn0011E39F_entry:
	// succ:  l0011E39F
l0011E39F:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011E39F_exit
l0011E3A6:
	return
	// succ:  fn0011E39F_exit
fn0011E39F_exit:


// fn0011E3A8
// Return size: 0
void fn0011E3A8(word32 arg0)
fn0011E3A8_entry:
	// succ:  l0011E3A8
l0011E3A8:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011E3A8_exit
l0011E3B4:
	return
	// succ:  fn0011E3A8_exit
fn0011E3A8_exit:


// fn0011E3B6
// Return size: 0
word32 fn0011E3B6(word32 arg0)
fn0011E3B6_entry:
	// succ:  l0011E3B6
l0011E3B6:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 0x42AC<32>
	return v4
	// succ:  fn0011E3B6_exit
l0011E3C1:
	return v4
	// succ:  fn0011E3B6_exit
fn0011E3B6_exit:


// fn0011E3C3
// Return size: 0
void fn0011E3C3(word32 arg0)
fn0011E3C3_entry:
	// succ:  l0011E3C3
l0011E3C3:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011E3C3_exit
l0011E3CA:
	return
	// succ:  fn0011E3C3_exit
fn0011E3C3_exit:


// fn0011E3CC
// Return size: 0
void fn0011E3CC(word32 arg0)
fn0011E3CC_entry:
	// succ:  l0011E3CC
l0011E3CC:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v5 = arg0
	v6 = 0x26D4<32>
	Mem0[v5:word32] = v6
	v5 = arg0
	v6 = 4<32>
	v5 = v5 + v6
	loc1 = v5
	v5 = loc1
	fn0011E416(v5)
	return
	// succ:  fn0011E3CC_exit
l0011E3E8:
	return
	// succ:  fn0011E3CC_exit
fn0011E3CC_exit:


// fn0011E3EA
// Return size: 0
void fn0011E3EA(word32 arg0)
fn0011E3EA_entry:
	// succ:  l0011E3EA
l0011E3EA:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011E3CC(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011E3EA_exit
l0011E3FB:
	return
	// succ:  fn0011E3EA_exit
fn0011E3EA_exit:


// fn0011E3FD
// Return size: 0
word32 fn0011E3FD(word32 arg0)
fn0011E3FD_entry:
	// succ:  l0011E3FD
l0011E3FD:
	v6 = Mem0[0x00140030<p32>:word32]
	loc4 = v6
	v6 = arg0
	v7 = 4<32>
	v6 = v6 + v7
	loc1 = v6
	v6 = loc1
	v6 = Mem0[v6:word32]
	loc2 = v6
	v6 = loc2
	return v6
	// succ:  fn0011E3FD_exit
l0011E414:
	return v6
	// succ:  fn0011E3FD_exit
fn0011E3FD_exit:


// fn0011E416
// Return size: 0
void fn0011E416(word32 arg0)
fn0011E416_entry:
	// succ:  l0011E416
l0011E416:
	v12 = Mem0[0x00140030<p32>:word32]
	loc10 = v12
	v12 = arg0
	v12 = Mem0[v12:word32]
	loc1 = v12
	v12 = loc1
	v13 = 0xFFFFFFFC<32>
	v12 = v12 + v13
	loc2 = v12
	v12 = loc2
	v12 = Mem0[v12:word32]
	loc3 = v12
	v12 = loc3
	v13 = 0xFFFFFFFF<32>
	v12 = v12 + v13
	loc4 = v12
	v12 = loc2
	v13 = loc4
	Mem0[v12:word32] = v13
	v12 = loc3
	v13 = 0xFFFFFFFF<32>
	v12 = v12 + v13
	loc5 = v12
	v12 = loc5
	v13 = 0<32>
	v14 = v12 < v13
	loc6 = v14
	v12 = loc6
	branch !v12 l0011E465
	// succ:  l0011E451 l0011E465
l0011E451:
	v12 = arg0
	v12 = Mem0[v12:word32]
	loc7 = v12
	v12 = loc7
	v13 = 0xFFFFFFF4<32>
	v12 = v12 + v13
	loc8 = v12
	v12 = loc8
	fn0011B709(v12)
	// succ:  l0011E465
l0011E465:
	return
	// succ:  fn0011E416_exit
l0011E466:
	return
	// succ:  fn0011E416_exit
fn0011E416_exit:


// fn0011E468
// Return size: 0
void fn0011E468(word32 arg0)
fn0011E468_entry:
	// succ:  l0011E468
l0011E468:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v5 = arg0
	v6 = 0x26E8<32>
	Mem0[v5:word32] = v6
	v5 = arg0
	v6 = 4<32>
	v5 = v5 + v6
	loc1 = v5
	v5 = loc1
	fn0011E416(v5)
	return
	// succ:  fn0011E468_exit
l0011E484:
	return
	// succ:  fn0011E468_exit
fn0011E468_exit:


// fn0011E486
// Return size: 0
void fn0011E486(word32 arg0)
fn0011E486_entry:
	// succ:  l0011E486
l0011E486:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011E468(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011E486_exit
l0011E497:
	return
	// succ:  fn0011E486_exit
fn0011E486_exit:


// fn0011E499
// Return size: 0
word32 fn0011E499(word32 arg0)
fn0011E499_entry:
	// succ:  l0011E499
l0011E499:
	v6 = Mem0[0x00140030<p32>:word32]
	loc4 = v6
	v6 = arg0
	v7 = 4<32>
	v6 = v6 + v7
	loc1 = v6
	v6 = loc1
	v6 = Mem0[v6:word32]
	loc2 = v6
	v6 = loc2
	return v6
	// succ:  fn0011E499_exit
l0011E4B0:
	return v6
	// succ:  fn0011E499_exit
fn0011E499_exit:


// fn0011E4B2
// Return size: 0
void fn0011E4B2(word32 arg0)
fn0011E4B2_entry:
	// succ:  l0011E4B2
l0011E4B2:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011E3CC(v4)
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011E4B2_exit
l0011E4C3:
	return
	// succ:  fn0011E4B2_exit
fn0011E4B2_exit:


// fn0011E4C5
// Return size: 0
void fn0011E4C5(word32 arg0)
fn0011E4C5_entry:
	// succ:  l0011E4C5
l0011E4C5:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011E4C5_exit
l0011E4CC:
	return
	// succ:  fn0011E4C5_exit
fn0011E4C5_exit:


// fn0011E4CE
// Return size: 0
void fn0011E4CE(word32 arg0)
fn0011E4CE_entry:
	// succ:  l0011E4CE
l0011E4CE:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011E4CE_exit
l0011E4DA:
	return
	// succ:  fn0011E4CE_exit
fn0011E4CE_exit:


// fn0011E4DC
// Return size: 0
word32 fn0011E4DC(word32 arg0)
fn0011E4DC_entry:
	// succ:  l0011E4DC
l0011E4DC:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = 0x42FB<32>
	return v4
	// succ:  fn0011E4DC_exit
l0011E4E7:
	return v4
	// succ:  fn0011E4DC_exit
fn0011E4DC_exit:


// fn0011E4E9
// Return size: 0
void fn0011E4E9(word32 arg0)
fn0011E4E9_entry:
	// succ:  l0011E4E9
l0011E4E9:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	fn0011B709(v4)
	return
	// succ:  fn0011E4E9_exit
l0011E4F5:
	return
	// succ:  fn0011E4E9_exit
fn0011E4E9_exit:


// fn0011E4F7
// Return size: 0
void fn0011E4F7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0011E4F7_entry:
	// succ:  l0011E4F7
l0011E4F7:
	v39 = Mem0[0x00140030<p32>:word32]
	loc42 = v39
	v39 = arg1
	v40 = 8<32>
	v39 = v39 + v40
	loc37 = v39
	v39 = loc37
	v39 = Mem0[v39:word32]
	loc38 = v39
	v39 = arg0
	v40 = loc38
	v41 = v39 == v40
	loc39 = v41
	v39 = loc39
	branch !v39 l0011E524
	// succ:  l0011E516 l0011E524
l0011E516:
	v39 = 0<32>
	v40 = arg1
	v42 = arg2
	v43 = arg3
	v44 = arg4
	fn0011DA6B(v39, v40, v42, v43, v44)
	goto l0011E6AE
	// succ:  l0011E6AE
l0011E524:
	v39 = arg1
	v40 = 0x34<32>
	v39 = v39 + v40
	loc40 = v39
	v39 = loc40
	v45 = Mem0[v39:int16]
	v39 = CONVERT(v45, int16, word32)
	loc7 = v39
	v39 = loc7
	v40 = 0xFF<32>
	v39 = v39 & v40
	loc8 = v39
	v39 = arg1
	v40 = 0x35<32>
	v39 = v39 + v40
	loc9 = v39
	v39 = loc7
	v40 = 0xFFFF<32>
	v39 = v39 & v40
	v40 = 8<32>
	v39 = v39 >>u v40
	loc10 = v39
	v39 = loc10
	v40 = 0xFF<32>
	v39 = v39 & v40
	loc11 = v39
	v39 = arg0
	v40 = 0x10<32>
	v39 = v39 + v40
	loc12 = v39
	v39 = arg0
	v40 = 0xC<32>
	v39 = v39 + v40
	loc13 = v39
	v39 = loc13
	v39 = Mem0[v39:word32]
	loc14 = v39
	v39 = arg0
	v40 = 0x10<32>
	v39 = v39 + v40
	v40 = loc14
	v42 = 3<32>
	v40 = v40 << v42
	v39 = v39 + v40
	loc15 = v39
	v39 = loc40
	v40 = 0<32>
	v46 = SLICE(v40, byte, 0)
	Mem0[v39:byte] = v46
	v39 = loc9
	v40 = 0<32>
	v47 = SLICE(v40, byte, 0)
	Mem0[v39:byte] = v47
	v39 = loc12
	v40 = arg1
	v42 = arg2
	v43 = arg3
	v44 = arg4
	v48 = arg5
	fn0011ECEC(v39, v40, v42, v43, v44, v48)
	v39 = loc14
	v40 = 1<32>
	v41 = v39 > v40
	loc16 = v41
	// succ:  l0011E59B
l0011E59B:
	v39 = loc16
	branch !v39 l0011E69F
	// succ:  l0011E5A1 l0011E69F
l0011E5A1:
	v39 = arg0
	v40 = 0x18<32>
	v39 = v39 + v40
	loc17 = v39
	v39 = arg1
	v40 = 0x18<32>
	v39 = v39 + v40
	loc18 = v39
	v39 = arg0
	v40 = 8<32>
	v39 = v39 + v40
	loc19 = v39
	v39 = arg1
	v40 = 0x36<32>
	v39 = v39 + v40
	loc20 = v39
	v39 = loc17
	loc6 = v39
	// succ:  l0011E5C3
l0011E5C3:
	v39 = loc20
	v49 = Mem0[v39:int8]
	v39 = CONVERT(v49, int8, word32)
	loc21 = v39
	v39 = loc21
	v40 = 0x18<32>
	v39 = v39 << v40
	v40 = 0x18<32>
	v39 = v39 >> v40
	v40 = 0<32>
	v41 = v39 == v40
	loc22 = v41
	v39 = loc22
	v41 = v39 == 0<32>
	branch !v41 l0011E5E1
	// succ:  l0011E5DE l0011E5E1
l0011E5DE:
	goto l0011E69F
	// succ:  l0011E69F
l0011E5E1:
	v39 = loc40
	v50 = Mem0[v39:int16]
	v39 = CONVERT(v50, int16, word32)
	loc23 = v39
	v39 = loc23
	v40 = 0xFF<32>
	v39 = v39 & v40
	loc24 = v39
	v39 = loc24
	v40 = 0x18<32>
	v39 = v39 << v40
	v40 = 0x18<32>
	v39 = v39 >> v40
	v40 = 0<32>
	v41 = v39 == v40
	loc25 = v41
	v39 = loc25
	branch !v39 l0011E631
	// succ:  l0011E601 l0011E631
l0011E601:
	v39 = loc23
	v40 = 0xFFFF<32>
	v39 = v39 & v40
	v40 = 0x100<32>
	v41 = v39 < v40
	loc31 = v41
	v39 = loc31
	v41 = v39 == 0<32>
	branch !v41 l0011E630
	// succ:  l0011E613 l0011E630
l0011E613:
	v39 = loc19
	v39 = Mem0[v39:word32]
	loc32 = v39
	v39 = loc32
	v40 = 1<32>
	v39 = v39 & v40
	loc33 = v39
	v39 = loc33
	v40 = 0<32>
	v41 = v39 == v40
	loc34 = v41
	v39 = loc34
	branch !v39 l0011E62F
	// succ:  l0011E62C l0011E62F
l0011E62C:
	goto l0011E69F
	// succ:  l0011E69F
l0011E62F:
	// succ:  l0011E630
l0011E630:
	goto l0011E662
	// succ:  l0011E662
l0011E631:
	v39 = loc18
	v39 = Mem0[v39:word32]
	loc26 = v39
	v39 = loc26
	v40 = 1<32>
	v41 = v39 == v40
	loc27 = v41
	v39 = loc27
	branch !v39 l0011E646
	// succ:  l0011E643 l0011E646
l0011E643:
	goto l0011E69F
	// succ:  l0011E69F
l0011E646:
	v39 = loc19
	v39 = Mem0[v39:word32]
	loc28 = v39
	v39 = loc28
	v40 = 2<32>
	v39 = v39 & v40
	loc29 = v39
	v39 = loc29
	v40 = 0<32>
	v41 = v39 == v40
	loc30 = v41
	v39 = loc30
	branch !v39 l0011E662
	// succ:  l0011E65F l0011E662
l0011E65F:
	goto l0011E69F
	// succ:  l0011E69F
l0011E662:
	// succ:  l0011E662
l0011E662:
	v39 = loc40
	v40 = 0<32>
	v51 = SLICE(v40, byte, 0)
	Mem0[v39:byte] = v51
	v39 = loc9
	v40 = 0<32>
	v52 = SLICE(v40, byte, 0)
	Mem0[v39:byte] = v52
	v39 = loc6
	v40 = arg1
	v42 = arg2
	v43 = arg3
	v44 = arg4
	v48 = arg5
	fn0011ECEC(v39, v40, v42, v43, v44, v48)
	v39 = loc6
	v40 = 8<32>
	v39 = v39 + v40
	loc35 = v39
	v39 = loc35
	v40 = loc15
	v41 = v39 <u v40
	loc36 = v41
	v39 = loc36
	branch !v39 l0011E697
	// succ:  l0011E692 l0011E697
l0011E692:
	v39 = loc35
	loc6 = v39
	goto l0011E699
	// succ:  l0011E699
l0011E697:
	goto l0011E69C
	// succ:  l0011E69C
l0011E699:
	goto l0011E5A1
	// succ:  l0011E5A1
l0011E69C:
	// succ:  l0011E69F
l0011E69F:
	// succ:  l0011E69F
l0011E69F:
	v39 = loc40
	v40 = loc8
	v53 = SLICE(v40, byte, 0)
	Mem0[v39:byte] = v53
	v39 = loc9
	v40 = loc11
	v54 = SLICE(v40, byte, 0)
	Mem0[v39:byte] = v54
	// succ:  l0011E6AE
l0011E6AE:
	return
	// succ:  fn0011E4F7_exit
l0011E6B0:
	return
	// succ:  fn0011E4F7_exit
fn0011E4F7_exit:


// fn0011E6B2
// Return size: 0
void fn0011E6B2(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011E6B2_entry:
	// succ:  l0011E6B2
l0011E6B2:
	v107 = Mem0[0x00140030<p32>:word32]
	loc109 = v107
	v107 = arg1
	v108 = 8<32>
	v107 = v107 + v108
	loc54 = v107
	v107 = loc54
	v107 = Mem0[v107:word32]
	loc65 = v107
	v107 = arg0
	v108 = loc65
	v109 = v107 == v108
	loc76 = v109
	// succ:  l0011E6CD
l0011E6CD:
	v107 = loc76
	branch !v107 l0011E710
	// succ:  l0011E6D3 l0011E710
l0011E6D3:
	v107 = arg1
	v108 = 4<32>
	v107 = v107 + v108
	loc87 = v107
	v107 = loc87
	v107 = Mem0[v107:word32]
	loc98 = v107
	v107 = loc98
	v108 = arg2
	v109 = v107 == v108
	loc14 = v109
	v107 = loc14
	branch !v107 l0011E70F
	// succ:  l0011E6EC l0011E70F
l0011E6EC:
	v107 = arg1
	v108 = 0x1C<32>
	v107 = v107 + v108
	loc15 = v107
	v107 = loc15
	v107 = Mem0[v107:word32]
	loc16 = v107
	v107 = loc16
	v108 = 1<32>
	v109 = v107 == v108
	loc17 = v109
	v107 = loc17
	v109 = v107 == 0<32>
	branch !v109 l0011E70E
	// succ:  l0011E706 l0011E70E
l0011E706:
	v107 = loc15
	v108 = arg3
	Mem0[v107:word32] = v108
	// succ:  l0011E70E
l0011E70E:
	// succ:  l0011E70F
l0011E70F:
	goto l0011EB7F
	// succ:  l0011EB7F
l0011E710:
	v107 = arg1
	v107 = Mem0[v107:word32]
	loc18 = v107
	v107 = arg0
	v108 = loc18
	v109 = v107 == v108
	loc19 = v109
	v107 = loc19
	v109 = v107 == 0<32>
	branch !v109 l0011E8F5
	// succ:  l0011E723 l0011E8F5
l0011E723:
	v107 = arg0
	v108 = 0x10<32>
	v107 = v107 + v108
	loc68 = v107
	v107 = arg0
	v108 = 0xC<32>
	v107 = v107 + v108
	loc69 = v107
	v107 = loc69
	v107 = Mem0[v107:word32]
	loc70 = v107
	v107 = arg0
	v108 = 0x10<32>
	v107 = v107 + v108
	v108 = loc70
	v110 = 3<32>
	v108 = v108 << v110
	v107 = v107 + v108
	loc71 = v107
	v107 = loc68
	v108 = arg1
	v110 = arg2
	v111 = arg3
	v112 = arg4
	fn0011ED91(v107, v108, v110, v111, v112)
	v107 = arg0
	v108 = 0x18<32>
	v107 = v107 + v108
	loc72 = v107
	v107 = loc70
	v108 = 1<32>
	v109 = v107 > v108
	loc73 = v109
	v107 = loc73
	v109 = v107 == 0<32>
	branch !v109 l0011E768
	// succ:  l0011E765 l0011E768
l0011E765:
	goto l0011EB80
	// succ:  l0011EB80
l0011E768:
	v107 = arg0
	v108 = 8<32>
	v107 = v107 + v108
	loc74 = v107
	v107 = loc74
	v107 = Mem0[v107:word32]
	loc75 = v107
	v107 = loc75
	v108 = 2<32>
	v107 = v107 & v108
	loc77 = v107
	v107 = loc77
	v108 = 0<32>
	v109 = v107 == v108
	loc78 = v109
	v107 = loc78
	branch !v107 l0011E8A1
	// succ:  l0011E788 l0011E8A1
l0011E788:
	v107 = arg1
	v108 = 0x24<32>
	v107 = v107 + v108
	loc79 = v107
	v107 = loc79
	v107 = Mem0[v107:word32]
	loc80 = v107
	v107 = loc80
	v108 = 1<32>
	v109 = v107 == v108
	loc81 = v109
	v107 = loc81
	v109 = v107 == 0<32>
	branch !v109 l0011E8A0
	// succ:  l0011E7A2 l0011E8A0
l0011E7A2:
	v107 = loc75
	v108 = 1<32>
	v107 = v107 & v108
	loc88 = v107
	v107 = loc88
	v108 = 0<32>
	v109 = v107 == v108
	loc89 = v109
	v107 = loc89
	branch !v107 l0011E81D
	// succ:  l0011E7B4 l0011E81D
l0011E7B4:
	v107 = arg1
	v108 = 0x36<32>
	v107 = v107 + v108
	loc92 = v107
	v107 = loc72
	loc12 = v107
	v107 = loc92
	v113 = Mem0[v107:int8]
	v107 = CONVERT(v113, int8, word32)
	loc102 = v107
	v107 = loc102
	v108 = 0x18<32>
	v107 = v107 << v108
	v108 = 0x18<32>
	v107 = v107 >> v108
	v108 = 0<32>
	v109 = v107 == v108
	loc103 = v109
	v107 = loc103
	v109 = v107 == 0<32>
	branch !v109 l0011E7DD
	// succ:  l0011E7DA l0011E7DD
l0011E7DA:
	goto l0011EB80
	// succ:  l0011EB80
l0011E7DD:
	v107 = loc79
	v107 = Mem0[v107:word32]
	loc104 = v107
	v107 = loc104
	v108 = 1<32>
	v109 = v107 == v108
	loc105 = v109
	v107 = loc105
	branch !v107 l0011E7F2
	// succ:  l0011E7EF l0011E7F2
l0011E7EF:
	goto l0011EB80
	// succ:  l0011EB80
l0011E7F2:
	v107 = loc12
	v108 = arg1
	v110 = arg2
	v111 = arg3
	v112 = arg4
	fn0011ED91(v107, v108, v110, v111, v112)
	v107 = loc12
	v108 = 8<32>
	v107 = v107 + v108
	loc106 = v107
	v107 = loc106
	v108 = loc71
	v109 = v107 <u v108
	loc107 = v109
	v107 = loc107
	branch !v107 l0011E816
	// succ:  l0011E811 l0011E816
l0011E811:
	v107 = loc106
	loc12 = v107
	goto l0011E818
	// succ:  l0011E818
l0011E816:
	goto l0011EB80
	// succ:  l0011EB80
l0011E818:
	goto l0011E7B4
	// succ:  l0011E7B4
l0011E81D:
	v107 = arg1
	v108 = 0x18<32>
	v107 = v107 + v108
	loc90 = v107
	v107 = arg1
	v108 = 0x36<32>
	v107 = v107 + v108
	loc91 = v107
	v107 = loc72
	loc9 = v107
	v107 = loc91
	v114 = Mem0[v107:int8]
	v107 = CONVERT(v114, int8, word32)
	loc93 = v107
	v107 = loc93
	v108 = 0x18<32>
	v107 = v107 << v108
	v108 = 0x18<32>
	v107 = v107 >> v108
	v108 = 0<32>
	v109 = v107 == v108
	loc94 = v109
	v107 = loc94
	v109 = v107 == 0<32>
	branch !v109 l0011E84D
	// succ:  l0011E84A l0011E84D
l0011E84A:
	goto l0011EB80
	// succ:  l0011EB80
l0011E84D:
	v107 = loc79
	v107 = Mem0[v107:word32]
	loc95 = v107
	v107 = loc95
	v108 = 1<32>
	v109 = v107 == v108
	loc96 = v109
	v107 = loc96
	branch !v107 l0011E875
	// succ:  l0011E85F l0011E875
l0011E85F:
	v107 = loc90
	v107 = Mem0[v107:word32]
	loc97 = v107
	v107 = loc97
	v108 = 1<32>
	v109 = v107 == v108
	loc99 = v109
	v107 = loc99
	branch !v107 l0011E874
	// succ:  l0011E871 l0011E874
l0011E871:
	goto l0011EB80
	// succ:  l0011EB80
l0011E874:
	// succ:  l0011E875
l0011E875:
	v107 = loc9
	v108 = arg1
	v110 = arg2
	v111 = arg3
	v112 = arg4
	fn0011ED91(v107, v108, v110, v111, v112)
	v107 = loc9
	v108 = 8<32>
	v107 = v107 + v108
	loc100 = v107
	v107 = loc100
	v108 = loc71
	v109 = v107 <u v108
	loc101 = v109
	v107 = loc101
	branch !v107 l0011E899
	// succ:  l0011E894 l0011E899
l0011E894:
	v107 = loc100
	loc9 = v107
	goto l0011E89B
	// succ:  l0011E89B
l0011E899:
	goto l0011EB80
	// succ:  l0011EB80
l0011E89B:
	goto l0011E81D
	// succ:  l0011E81D
l0011E8A0:
	// succ:  l0011E8A1
l0011E8A1:
	v107 = arg1
	v108 = 0x36<32>
	v107 = v107 + v108
	loc82 = v107
	v107 = loc72
	loc5 = v107
	v107 = loc82
	v115 = Mem0[v107:int8]
	v107 = CONVERT(v115, int8, word32)
	loc83 = v107
	v107 = loc83
	v108 = 0x18<32>
	v107 = v107 << v108
	v108 = 0x18<32>
	v107 = v107 >> v108
	v108 = 0<32>
	v109 = v107 == v108
	loc84 = v109
	v107 = loc84
	v109 = v107 == 0<32>
	branch !v109 l0011E8CA
	// succ:  l0011E8C7 l0011E8CA
l0011E8C7:
	goto l0011EB80
	// succ:  l0011EB80
l0011E8CA:
	v107 = loc5
	v108 = arg1
	v110 = arg2
	v111 = arg3
	v112 = arg4
	fn0011ED91(v107, v108, v110, v111, v112)
	v107 = loc5
	v108 = 8<32>
	v107 = v107 + v108
	loc85 = v107
	v107 = loc85
	v108 = loc71
	v109 = v107 <u v108
	loc86 = v109
	v107 = loc86
	branch !v107 l0011E8EE
	// succ:  l0011E8E9 l0011E8EE
l0011E8E9:
	v107 = loc85
	loc5 = v107
	goto l0011E8F0
	// succ:  l0011E8F0
l0011E8EE:
	goto l0011EB80
	// succ:  l0011EB80
l0011E8F0:
	goto l0011E8A1
	// succ:  l0011E8A1
l0011E8F5:
	v107 = arg1
	v108 = 0x10<32>
	v107 = v107 + v108
	loc20 = v107
	v107 = loc20
	v107 = Mem0[v107:word32]
	loc21 = v107
	v107 = loc21
	v108 = arg2
	v109 = v107 == v108
	loc22 = v109
	v107 = loc22
	v109 = v107 == 0<32>
	branch !v109 l0011EB65
	// succ:  l0011E90F l0011EB65
l0011E90F:
	v107 = arg1
	v108 = 0x14<32>
	v107 = v107 + v108
	loc23 = v107
	v107 = loc23
	v107 = Mem0[v107:word32]
	loc24 = v107
	v107 = loc24
	v108 = arg2
	v109 = v107 == v108
	loc25 = v109
	v107 = loc25
	v109 = v107 == 0<32>
	branch !v109 l0011EB64
	// succ:  l0011E929 l0011EB64
l0011E929:
	v107 = arg1
	v108 = 0x20<32>
	v107 = v107 + v108
	loc28 = v107
	v107 = loc28
	v108 = arg3
	Mem0[v107:word32] = v108
	v107 = arg1
	v108 = 0x2C<32>
	v107 = v107 + v108
	loc29 = v107
	v107 = loc29
	v107 = Mem0[v107:word32]
	loc30 = v107
	v107 = loc30
	v108 = 4<32>
	v109 = v107 == v108
	loc31 = v109
	v107 = loc31
	branch !v107 l0011E953
	// succ:  l0011E950 l0011E953
l0011E950:
	goto l0011EB80
	// succ:  l0011EB80
l0011E953:
	v107 = arg0
	v108 = 0x10<32>
	v107 = v107 + v108
	loc32 = v107
	v107 = arg0
	v108 = 0xC<32>
	v107 = v107 + v108
	loc33 = v107
	v107 = loc33
	v107 = Mem0[v107:word32]
	loc34 = v107
	v107 = arg0
	v108 = 0x10<32>
	v107 = v107 + v108
	v108 = loc34
	v110 = 3<32>
	v108 = v108 << v110
	v107 = v107 + v108
	loc35 = v107
	v107 = arg1
	v108 = 0x34<32>
	v107 = v107 + v108
	loc36 = v107
	v107 = arg1
	v108 = 0x35<32>
	v107 = v107 + v108
	loc37 = v107
	v107 = arg1
	v108 = 0x36<32>
	v107 = v107 + v108
	loc38 = v107
	v107 = arg0
	v108 = 8<32>
	v107 = v107 + v108
	loc39 = v107
	v107 = arg1
	v108 = 0x18<32>
	v107 = v107 + v108
	loc40 = v107
	v107 = 0<32>
	loc6 = v107
	v107 = loc32
	loc7 = v107
	v107 = 0<32>
	loc8 = v107
	// succ:  l0011E9A6
l0011E9A6:
	v107 = loc7
	v108 = loc35
	v109 = v107 <u v108
	loc41 = v109
	v107 = loc41
	v109 = v107 == 0<32>
	branch !v109 l0011E9BF
	// succ:  l0011E9B4 l0011E9BF
l0011E9B4:
	v107 = loc6
	loc13 = v107
	v107 = 0x14<32>
	loc108 = v107
	goto l0011EAC4
	// succ:  l0011EAC4
l0011E9BF:
	v107 = loc36
	v108 = 0<32>
	v116 = SLICE(v108, byte, 0)
	Mem0[v107:byte] = v116
	v107 = loc37
	v108 = 0<32>
	v117 = SLICE(v108, byte, 0)
	Mem0[v107:byte] = v117
	v107 = loc7
	v108 = arg1
	v110 = arg2
	v111 = arg2
	v112 = 1<32>
	v118 = arg4
	fn0011ECEC(v107, v108, v110, v111, v112, v118)
	v107 = loc38
	v119 = Mem0[v107:int8]
	v107 = CONVERT(v119, int8, word32)
	loc42 = v107
	v107 = loc42
	v108 = 0x18<32>
	v107 = v107 << v108
	v108 = 0x18<32>
	v107 = v107 >> v108
	v108 = 0<32>
	v109 = v107 == v108
	loc43 = v109
	v107 = loc43
	v109 = v107 == 0<32>
	branch !v109 l0011EA00
	// succ:  l0011E9F5 l0011EA00
l0011E9F5:
	v107 = loc6
	loc13 = v107
	v107 = 0x14<32>
	loc108 = v107
	goto l0011EAC4
	// succ:  l0011EAC4
l0011EA00:
	v107 = loc37
	v120 = Mem0[v107:int8]
	v107 = CONVERT(v120, int8, word32)
	loc44 = v107
	v107 = loc44
	v108 = 0x18<32>
	v107 = v107 << v108
	v108 = 0x18<32>
	v107 = v107 >> v108
	v108 = 0<32>
	v109 = v107 == v108
	loc45 = v109
	// succ:  l0011EA14
l0011EA14:
	v107 = loc45
	branch !v107 l0011EA23
	// succ:  l0011EA1A l0011EA23
l0011EA1A:
	v107 = loc6
	loc10 = v107
	v107 = loc8
	loc11 = v107
	goto l0011EAAD
	// succ:  l0011EAAD
l0011EA23:
	v107 = loc36
	v121 = Mem0[v107:int8]
	v107 = CONVERT(v121, int8, word32)
	loc46 = v107
	v107 = loc46
	v108 = 0x18<32>
	v107 = v107 << v108
	v108 = 0x18<32>
	v107 = v107 >> v108
	v108 = 0<32>
	v109 = v107 == v108
	loc47 = v109
	v107 = loc47
	branch !v107 l0011EA6B
	// succ:  l0011EA3B l0011EA6B
l0011EA3B:
	v107 = loc39
	v107 = Mem0[v107:word32]
	loc53 = v107
	v107 = loc53
	v108 = 1<32>
	v107 = v107 & v108
	loc55 = v107
	v107 = loc55
	v108 = 0<32>
	v109 = v107 == v108
	loc56 = v109
	v107 = loc56
	branch !v107 l0011EA5F
	// succ:  l0011EA54 l0011EA5F
l0011EA54:
	v107 = 1<32>
	loc13 = v107
	v107 = 0x14<32>
	loc108 = v107
	goto l0011EAC4
	// succ:  l0011EAC4
l0011EA5F:
	v107 = 1<32>
	loc10 = v107
	v107 = loc8
	loc11 = v107
	goto l0011EAAE
	// succ:  l0011EAAE
l0011EA69:
	// succ:  l0011EA6B
l0011EA6B:
	v107 = loc40
	v107 = Mem0[v107:word32]
	loc48 = v107
	v107 = loc48
	v108 = 1<32>
	v109 = v107 == v108
	loc49 = v109
	v107 = loc49
	branch !v107 l0011EA84
	// succ:  l0011EA7D l0011EA84
l0011EA7D:
	v107 = 0x19<32>
	loc108 = v107
	goto l0011EAC4
	// succ:  l0011EAC4
l0011EA84:
	v107 = loc39
	v107 = Mem0[v107:word32]
	loc50 = v107
	v107 = loc50
	v108 = 2<32>
	v107 = v107 & v108
	loc51 = v107
	v107 = loc51
	v108 = 0<32>
	v109 = v107 == v108
	loc52 = v109
	v107 = loc52
	branch !v107 l0011EAA4
	// succ:  l0011EA9D l0011EAA4
l0011EA9D:
	v107 = 0x19<32>
	loc108 = v107
	goto l0011EAC4
	// succ:  l0011EAC4
l0011EAA4:
	v107 = 1<32>
	loc10 = v107
	v107 = 1<32>
	loc11 = v107
	// succ:  l0011EAAC
l0011EAAC:
	// succ:  l0011EAAD
l0011EAAD:
	// succ:  l0011EAAE
l0011EAAE:
	v107 = loc7
	v108 = 8<32>
	v107 = v107 + v108
	loc57 = v107
	v107 = loc10
	loc6 = v107
	v107 = loc57
	loc7 = v107
	v107 = loc11
	loc8 = v107
	goto l0011E953
	// succ:  l0011E953
l0011EAC4:
	v107 = loc108
	v108 = 0x14<32>
	v109 = v107 == v108
	branch !v109 l0011EB4D
	// succ:  l0011EACF l0011EB4D
l0011EACF:
	v107 = loc8
	v109 = v107 == 0<32>
	branch !v109 l0011EB3E
	// succ:  l0011EAD4 l0011EB3E
l0011EAD4:
	v107 = loc23
	v108 = arg2
	Mem0[v107:word32] = v108
	v107 = arg1
	v108 = 0x28<32>
	v107 = v107 + v108
	loc58 = v107
	v107 = loc58
	v107 = Mem0[v107:word32]
	loc59 = v107
	v107 = loc59
	v108 = 1<32>
	v107 = v107 + v108
	loc60 = v107
	v107 = loc58
	v108 = loc60
	Mem0[v107:word32] = v108
	v107 = arg1
	v108 = 0x24<32>
	v107 = v107 + v108
	loc61 = v107
	v107 = loc61
	v107 = Mem0[v107:word32]
	loc62 = v107
	v107 = loc62
	v108 = 1<32>
	v109 = v107 == v108
	loc63 = v109
	v107 = loc63
	branch !v107 l0011EB3D
	// succ:  l0011EB10 l0011EB3D
l0011EB10:
	v107 = loc40
	v107 = Mem0[v107:word32]
	loc64 = v107
	v107 = loc64
	v108 = 2<32>
	v109 = v107 == v108
	loc66 = v109
	v107 = loc66
	branch !v107 l0011EB3C
	// succ:  l0011EB22 l0011EB3C
l0011EB22:
	v107 = loc38
	v108 = 1<32>
	v122 = SLICE(v108, byte, 0)
	Mem0[v107:byte] = v122
	v107 = loc13
	branch !v107 l0011EB34
	// succ:  l0011EB2D l0011EB34
l0011EB2D:
	v107 = 0x19<32>
	loc108 = v107
	goto l0011EB4D
	// succ:  l0011EB4D
l0011EB34:
	v107 = 4<32>
	loc67 = v107
	goto l0011EB4D
	// succ:  l0011EB4D
l0011EB3A:
	// succ:  l0011EB3C
l0011EB3C:
	// succ:  l0011EB3D
l0011EB3D:
	// succ:  l0011EB3E
l0011EB3E:
	v107 = loc13
	branch !v107 l0011EB47
	// succ:  l0011EB42 l0011EB47
l0011EB42:
	v107 = 0x19<32>
	loc108 = v107
	goto l0011EB4B
	// succ:  l0011EB4B
l0011EB47:
	v107 = 4<32>
	loc67 = v107
	// succ:  l0011EB4B
l0011EB4B:
	// succ:  l0011EB4D
l0011EB4D:
	// succ:  l0011EB4D
l0011EB4D:
	v107 = loc108
	v108 = 0x19<32>
	v109 = v107 == v108
	branch !v109 l0011EB5A
	// succ:  l0011EB55 l0011EB5A
l0011EB55:
	v107 = 3<32>
	loc67 = v107
	// succ:  l0011EB5A
l0011EB5A:
	v107 = loc29
	v108 = loc67
	Mem0[v107:word32] = v108
	goto l0011EB80
	// succ:  l0011EB80
l0011EB64:
	// succ:  l0011EB65
l0011EB65:
	v107 = arg3
	v108 = 1<32>
	v109 = v107 == v108
	loc26 = v109
	v107 = loc26
	branch !v107 l0011EB7F
	// succ:  l0011EB70 l0011EB7F
l0011EB70:
	v107 = arg1
	v108 = 0x20<32>
	v107 = v107 + v108
	loc27 = v107
	v107 = loc27
	v108 = 1<32>
	Mem0[v107:word32] = v108
	// succ:  l0011EB7F
l0011EB7F:
	// succ:  l0011EB7F
l0011EB7F:
	// succ:  l0011EB80
l0011EB80:
	return
	// succ:  fn0011E6B2_exit
l0011EB82:
	return
	// succ:  fn0011E6B2_exit
fn0011E6B2_exit:


// fn0011EB84
// Return size: 0
void fn0011EB84(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011EB84_entry:
	// succ:  l0011EB84
l0011EB84:
	v19 = Mem0[0x00140030<p32>:word32]
	loc20 = v19
	v19 = arg1
	v20 = 8<32>
	v19 = v19 + v20
	loc13 = v19
	v19 = loc13
	v19 = Mem0[v19:word32]
	loc14 = v19
	v19 = arg0
	v20 = loc14
	v21 = v19 == v20
	loc15 = v21
	// succ:  l0011EB9F
l0011EB9F:
	v19 = loc15
	branch !v19 l0011EBB1
	// succ:  l0011EBA5 l0011EBB1
l0011EBA5:
	v19 = 0<32>
	v20 = arg1
	v22 = arg2
	v23 = arg3
	fn0011D9B9(v19, v20, v22, v23)
	goto l0011EC45
	// succ:  l0011EC45
l0011EBB1:
	v19 = arg0
	v20 = 0x10<32>
	v19 = v19 + v20
	loc16 = v19
	v19 = arg0
	v20 = 0xC<32>
	v19 = v19 + v20
	loc17 = v19
	v19 = loc17
	v19 = Mem0[v19:word32]
	loc18 = v19
	v19 = arg0
	v20 = 0x10<32>
	v19 = v19 + v20
	v20 = loc18
	v22 = 3<32>
	v20 = v20 << v22
	v19 = v19 + v20
	loc5 = v19
	v19 = loc16
	v20 = arg1
	v22 = arg2
	v23 = arg3
	fn0011EC4A(v19, v20, v22, v23)
	v19 = loc18
	v20 = 1<32>
	v21 = v19 > v20
	loc6 = v21
	v19 = loc6
	branch !v19 l0011EC45
	// succ:  l0011EBE9 l0011EC45
l0011EBE9:
	v19 = arg0
	v20 = 0x18<32>
	v19 = v19 + v20
	loc7 = v19
	v19 = arg1
	v20 = 0x36<32>
	v19 = v19 + v20
	loc8 = v19
	v19 = loc7
	loc4 = v19
	// succ:  l0011EBFD
l0011EBFD:
	v19 = loc4
	v20 = arg1
	v22 = arg2
	v23 = arg3
	fn0011EC4A(v19, v20, v22, v23)
	v19 = loc8
	v24 = Mem0[v19:int8]
	v19 = CONVERT(v24, int8, word32)
	loc9 = v19
	v19 = loc9
	v20 = 0x18<32>
	v19 = v19 << v20
	v20 = 0x18<32>
	v19 = v19 >> v20
	v20 = 0<32>
	v21 = v19 == v20
	loc10 = v21
	v19 = loc10
	v21 = v19 == 0<32>
	branch !v21 l0011EC26
	// succ:  l0011EC23 l0011EC26
l0011EC23:
	goto l0011EC46
	// succ:  l0011EC46
l0011EC26:
	v19 = loc4
	v20 = 8<32>
	v19 = v19 + v20
	loc11 = v19
	v19 = loc11
	v20 = loc5
	v21 = v19 <u v20
	loc12 = v21
	v19 = loc12
	branch !v19 l0011EC3D
	// succ:  l0011EC38 l0011EC3D
l0011EC38:
	v19 = loc11
	loc4 = v19
	goto l0011EC3F
	// succ:  l0011EC3F
l0011EC3D:
	goto l0011EC42
	// succ:  l0011EC42
l0011EC3F:
	goto l0011EBE9
	// succ:  l0011EBE9
l0011EC42:
	// succ:  l0011EC45
l0011EC45:
	// succ:  l0011EC45
l0011EC45:
	// succ:  l0011EC46
l0011EC46:
	return
	// succ:  fn0011EB84_exit
l0011EC48:
	return
	// succ:  fn0011EB84_exit
fn0011EB84_exit:


// fn0011EC4A
// Return size: 0
void fn0011EC4A(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011EC4A_entry:
	// succ:  l0011EC4A
l0011EC4A:
	v21 = Mem0[0x00140030<p32>:word32]
	loc22 = v21
	v21 = arg0
	v22 = 4<32>
	v21 = v21 + v22
	loc15 = v21
	v21 = loc15
	v21 = Mem0[v21:word32]
	loc16 = v21
	v21 = loc16
	v22 = 8<32>
	v21 = v21 >> v22
	loc17 = v21
	v21 = loc16
	v22 = 1<32>
	v21 = v21 & v22
	loc18 = v21
	v21 = loc18
	v22 = 0<32>
	v23 = v21 == v22
	loc19 = v23
	v21 = loc19
	branch !v21 l0011EC7C
	// succ:  l0011EC77 l0011EC7C
l0011EC77:
	v21 = loc17
	loc4 = v21
	goto l0011EC95
	// succ:  l0011EC95
l0011EC7C:
	v21 = arg2
	v21 = Mem0[v21:word32]
	loc20 = v21
	v21 = loc20
	v22 = loc17
	v21 = v21 + v22
	loc5 = v21
	v21 = loc5
	v21 = Mem0[v21:word32]
	loc6 = v21
	v21 = loc6
	loc4 = v21
	// succ:  l0011EC95
l0011EC95:
	v21 = arg0
	v21 = Mem0[v21:word32]
	loc7 = v21
	v21 = loc7
	v21 = Mem0[v21:word32]
	loc8 = v21
	v21 = loc8
	v22 = 0x1C<32>
	v21 = v21 + v22
	loc9 = v21
	v21 = loc9
	v21 = Mem0[v21:word32]
	loc10 = v21
	v21 = arg2
	v22 = loc4
	v21 = v21 + v22
	loc11 = v21
	v21 = loc16
	v22 = 2<32>
	v21 = v21 & v22
	loc12 = v21
	v21 = loc12
	v22 = 0<32>
	v23 = v21 != v22
	loc13 = v23
	v21 = loc13
	branch !v21 l0011ECCE
	// succ:  l0011ECCB l0011ECCE
l0011ECCB:
	v21 = arg3
	goto l0011ECD0
	// succ:  l0011ECD0
l0011ECCE:
	v21 = 2<32>
	// succ:  l0011ECD0
l0011ECD0:
	loc14 = v21
	v21 = loc7
	v22 = arg1
	v24 = loc11
	v25 = loc14
	v26 = loc10
	v27 = 0x1FF<32>
	v26 = v26 & v27
	v27 = 0x2F20<32>
	v26 = v26 + v27
fn0011EC4A_exit:


// fn0011ECEC
// Return size: 0
void fn0011ECEC(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0011ECEC_entry:
	// succ:  l0011ECEC
l0011ECEC:
	v21 = Mem0[0x00140030<p32>:word32]
	loc24 = v21
	v21 = arg0
	v22 = 4<32>
	v21 = v21 + v22
	loc19 = v21
	v21 = loc19
	v21 = Mem0[v21:word32]
	loc20 = v21
	v21 = loc20
	v22 = 8<32>
	v21 = v21 >> v22
	loc21 = v21
	v21 = loc20
	v22 = 1<32>
	v21 = v21 & v22
	loc22 = v21
	v21 = loc22
	v22 = 0<32>
	v23 = v21 == v22
	loc7 = v23
	v21 = loc7
	branch !v21 l0011ED1E
	// succ:  l0011ED19 l0011ED1E
l0011ED19:
	v21 = loc21
	loc6 = v21
	goto l0011ED37
	// succ:  l0011ED37
l0011ED1E:
	v21 = arg3
	v21 = Mem0[v21:word32]
	loc8 = v21
	v21 = loc8
	v22 = loc21
	v21 = v21 + v22
	loc9 = v21
	v21 = loc9
	v21 = Mem0[v21:word32]
	loc10 = v21
	v21 = loc10
	loc6 = v21
	// succ:  l0011ED37
l0011ED37:
	v21 = arg0
	v21 = Mem0[v21:word32]
	loc11 = v21
	v21 = loc11
	v21 = Mem0[v21:word32]
	loc12 = v21
	v21 = loc12
	v22 = 0x14<32>
	v21 = v21 + v22
	loc13 = v21
	v21 = loc13
	v21 = Mem0[v21:word32]
	loc14 = v21
	v21 = arg3
	v22 = loc6
	v21 = v21 + v22
	loc15 = v21
	v21 = loc20
	v22 = 2<32>
	v21 = v21 & v22
	loc16 = v21
	v21 = loc16
	v22 = 0<32>
	v23 = v21 != v22
	loc17 = v23
	v21 = loc17
	branch !v21 l0011ED70
	// succ:  l0011ED6D l0011ED70
l0011ED6D:
	v21 = arg4
	goto l0011ED72
	// succ:  l0011ED72
l0011ED70:
	v21 = 2<32>
	// succ:  l0011ED72
l0011ED72:
	loc18 = v21
	v21 = loc11
	v22 = arg1
	v24 = arg2
	v25 = loc15
	v26 = loc18
	v27 = arg5
	v28 = loc14
	v29 = 0x1FF<32>
	v28 = v28 & v29
	v29 = 0x1320<32>
	v28 = v28 + v29
fn0011ECEC_exit:


// fn0011ED91
// Return size: 0
void fn0011ED91(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011ED91_entry:
	// succ:  l0011ED91
l0011ED91:
	v21 = Mem0[0x00140030<p32>:word32]
	loc23 = v21
	v21 = arg0
	v22 = 4<32>
	v21 = v21 + v22
	loc17 = v21
	v21 = loc17
	v21 = Mem0[v21:word32]
	loc18 = v21
	v21 = loc18
	v22 = 8<32>
	v21 = v21 >> v22
	loc19 = v21
	v21 = loc18
	v22 = 1<32>
	v21 = v21 & v22
	loc20 = v21
	v21 = loc20
	v22 = 0<32>
	v23 = v21 == v22
	loc21 = v23
	v21 = loc21
	branch !v21 l0011EDC3
	// succ:  l0011EDBE l0011EDC3
l0011EDBE:
	v21 = loc19
	loc5 = v21
	goto l0011EDDC
	// succ:  l0011EDDC
l0011EDC3:
	v21 = arg2
	v21 = Mem0[v21:word32]
	loc6 = v21
	v21 = loc6
	v22 = loc19
	v21 = v21 + v22
	loc7 = v21
	v21 = loc7
	v21 = Mem0[v21:word32]
	loc8 = v21
	v21 = loc8
	loc5 = v21
	// succ:  l0011EDDC
l0011EDDC:
	v21 = arg0
	v21 = Mem0[v21:word32]
	loc9 = v21
	v21 = loc9
	v21 = Mem0[v21:word32]
	loc10 = v21
	v21 = loc10
	v22 = 0x18<32>
	v21 = v21 + v22
	loc11 = v21
	v21 = loc11
	v21 = Mem0[v21:word32]
	loc12 = v21
	v21 = arg2
	v22 = loc5
	v21 = v21 + v22
	loc13 = v21
	v21 = loc18
	v22 = 2<32>
	v21 = v21 & v22
	loc14 = v21
	v21 = loc14
	v22 = 0<32>
	v23 = v21 != v22
	loc15 = v23
	v21 = loc15
	branch !v21 l0011EE15
	// succ:  l0011EE12 l0011EE15
l0011EE12:
	v21 = arg3
	goto l0011EE17
	// succ:  l0011EE17
l0011EE15:
	v21 = 2<32>
	// succ:  l0011EE17
l0011EE17:
	loc16 = v21
	v21 = loc9
	v22 = arg1
	v24 = loc13
	v25 = loc16
	v26 = arg4
	v27 = loc12
	v28 = 0x1FF<32>
	v27 = v27 & v28
	v28 = 0x200<32>
	v27 = v27 + v28
fn0011ED91_exit:


// fn0011EE34
// Return size: 0
void fn0011EE34(word32 arg0)
fn0011EE34_entry:
	// succ:  l0011EE34
l0011EE34:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	v5 = 0x2710<32>
	Mem0[v4:word32] = v5
	return
	// succ:  fn0011EE34_exit
l0011EE44:
	return
	// succ:  fn0011EE34_exit
fn0011EE34_exit:


// fn0011EE46
// Return size: 0
word32 fn0011EE46(word32 arg0)
fn0011EE46_entry:
	// succ:  l0011EE46
l0011EE46:
	v7 = Mem0[0x00140030<p32>:word32]
	loc5 = v7
	v7 = arg0
	v8 = Mem0[v7:int8]
	v7 = CONVERT(v8, int8, word32)
	loc2 = v7
	v7 = loc2
	v9 = 0x18<32>
	v7 = v7 << v9
	v9 = 0x18<32>
	v7 = v7 >> v9
	v9 = 1<32>
	v10 = v7 == v9
	loc3 = v10
	v7 = loc3
	branch !v7 l0011EE69
	// succ:  l0011EE64 l0011EE69
l0011EE64:
	v7 = 0<32>
	loc1 = v7
	goto l0011EE74
	// succ:  l0011EE74
l0011EE69:
	v7 = arg0
	v9 = 1<32>
	v11 = SLICE(v9, byte, 0)
	Mem0[v7:byte] = v11
	v7 = 1<32>
	loc1 = v7
	// succ:  l0011EE74
l0011EE74:
	v7 = loc1
	return v7
	// succ:  fn0011EE46_exit
l0011EE78:
	return v7
	// succ:  fn0011EE46_exit
fn0011EE46_exit:


// fn0011EE7A
// Return size: 0
void fn0011EE7A(word32 arg0)
fn0011EE7A_entry:
	// succ:  l0011EE7A
l0011EE7A:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011EE7A_exit
l0011EE81:
	return
	// succ:  fn0011EE7A_exit
fn0011EE7A_exit:


// fn0011EE83
// Return size: 0
void fn0011EE83(word32 arg0)
fn0011EE83_entry:
	// succ:  l0011EE83
l0011EE83:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn0011EE83_exit
l0011EE8A:
	return
	// succ:  fn0011EE83_exit
fn0011EE83_exit:


// fn0011EE8C
// Return size: 0
void fn0011EE8C(word32 arg0)
fn0011EE8C_entry:
	// succ:  l0011EE8C
l0011EE8C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v4 = arg0
	v5 = 0x26C0<32>
	Mem0[v4:word32] = v5
	return
	// succ:  fn0011EE8C_exit
l0011EE9C:
	return
	// succ:  fn0011EE8C_exit
fn0011EE8C_exit:


// fn0011EE9E
// Return size: 0
word32 fn0011EE9E()
fn0011EE9E_entry:
	// succ:  l0011EE9E
l0011EE9E:
	v7 = Mem0[0x00140030<p32>:word32]
	loc4 = v7
	v7 = 0x53F4<32>
	v7 = Mem0[v7:word32]
	loc0 = v7
	v7 = loc0
	v8 = 0<32>
	v7 = v7 + v8
	loc1 = v7
	v7 = 0x53F4<32>
	v8 = loc1
	Mem0[v7:word32] = v8
	v7 = loc0
	loc2 = v7
	v7 = loc2
	return v7
	// succ:  fn0011EE9E_exit
l0011EEC4:
	return v7
	// succ:  fn0011EE9E_exit
fn0011EE9E_exit:


// ___cxa_can_catch
// Return size: 0
word32 ___cxa_can_catch(word32 arg0, word32 arg1, word32 arg2)
___cxa_can_catch_entry:
	// succ:  l0011EEC6
l0011EEC6:
	v12 = Mem0[0x00140030<p32>:word32]
	loc12 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l0011EEDF
	// succ:  l0011EEDA l0011EEDF
l0011EEDA:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l0011EEDF
l0011EEDF:
	v12 = loc12
	loc4 = v12
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc5 = v12
	v12 = loc4
	v13 = loc5
	Mem0[v12:word32] = v13
	v12 = arg0
	v12 = Mem0[v12:word32]
	loc6 = v12
	v12 = loc6
	v13 = 0x10<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc7
	v12 = Mem0[v12:word32]
	loc8 = v12
	v12 = arg0
	v13 = arg1
	v15 = loc4
	v16 = loc8
	v17 = 0x1FF<32>
	v16 = v16 & v17
	v17 = 0xF20<32>
	v16 = v16 + v17
___cxa_can_catch_exit:


// ___cxa_is_pointer_type
// Return size: 0
word32 ___cxa_is_pointer_type(word32 arg0)
___cxa_is_pointer_type_entry:
	// succ:  l0011EF3E
l0011EF3E:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v9 = arg0
	v10 = 0<32>
	v11 = v9 == v10
	loc1 = v11
	v9 = loc1
	branch !v9 l0011EF54
	// succ:  l0011EF4F l0011EF54
l0011EF4F:
	v9 = 0<32>
	loc4 = v9
	goto l0011EF6E
	// succ:  l0011EF6E
l0011EF54:
	v9 = arg0
	v10 = 0x9A0<32>
	v12 = 0xA28<32>
	v13 = 0<32>
	v9 = fn0011DBBE(v9, v10, v12, v13)
	loc2 = v9
	v9 = loc2
	v10 = 0<32>
	v11 = v9 != v10
	loc5 = v11
	v9 = loc5
	loc4 = v9
	// succ:  l0011EF6E
l0011EF6E:
	v9 = loc4
	v10 = 1<32>
	v9 = v9 & v10
	loc3 = v9
	v9 = loc3
	return v9
	// succ:  ___cxa_is_pointer_type_exit
l0011EF79:
	return v9
	// succ:  ___cxa_is_pointer_type_exit
___cxa_is_pointer_type_exit:


// runPostSets
// Return size: 0
void runPostSets()
runPostSets_entry:
	// succ:  l0011EF7B
l0011EF7B:
	return
	// succ:  runPostSets_exit
runPostSets_exit:


// _memset
// Return size: 0
word32 _memset(word32 arg0, word32 arg1, word32 arg2)
_memset_entry:
	// succ:  l0011EF7D
l0011EF7D:
	v6 = arg0
	v7 = arg2
	v6 = v6 + v7
	loc3 = v6
	v6 = arg2
	v7 = 0x14<32>
	v8 = v6 >= v7
	branch !v8 l0011F014
	// succ:  l0011EF8D l0011F014
l0011EF8D:
	v6 = arg1
	v7 = 0xFF<32>
	v6 = v6 & v7
	arg1 = v6
	v6 = arg0
	v7 = 3<32>
	v6 = v6 & v7
	loc6 = v6
	v6 = arg1
	v7 = arg1
	v9 = 8<32>
	v7 = v7 << v9
	v6 = v6 | v7
	v7 = arg1
	v9 = 0x10<32>
	v7 = v7 << v9
	v6 = v6 | v7
	v7 = arg1
	v9 = 0x18<32>
	v7 = v7 << v9
	v6 = v6 | v7
	loc4 = v6
	v6 = loc3
	v7 = 3<32>
	v9 = 0xFFFFFFFF<32>
	v7 = v7 ^ v9
	v6 = v6 & v7
	loc5 = v6
	v6 = loc6
	branch !v6 l0011EFEF
	// succ:  l0011EFC0 l0011EFEF
l0011EFC0:
	v6 = arg0
	v7 = 4<32>
	v6 = v6 + v7
	v7 = loc6
	v6 = v6 - v7
	loc6 = v6
	// succ:  l0011EFCC
l0011EFCC:
	v6 = arg0
	v7 = loc6
	v8 = v6 < v7
	v8 = v8 == 0<32>
	branch !v8 l0011EFD9
	// succ:  l0011EFD6 l0011EFD9
l0011EFD6:
	goto l0011EFEC
	// succ:  l0011EFEC
l0011EFD9:
	v6 = arg0
	v7 = arg1
	v10 = SLICE(v7, byte, 0)
	Mem0[v6:byte] = v10
	v6 = arg0
	v7 = 1<32>
	v6 = v6 + v7
	arg0 = v6
	// succ:  l0011EFE9
l0011EFE9:
	goto l0011EFC0
	// succ:  l0011EFC0
l0011EFEC:
	// succ:  l0011EFEF
l0011EFEF:
	v6 = arg0
	v7 = loc5
	v8 = v6 < v7
	v8 = v8 == 0<32>
	branch !v8 l0011EFFE
	// succ:  l0011EFFB l0011EFFE
l0011EFFB:
	goto l0011F011
	// succ:  l0011F011
l0011EFFE:
	v6 = arg0
	v7 = loc4
	Mem0[v6:word32] = v7
	v6 = arg0
	v7 = 4<32>
	v6 = v6 + v7
	arg0 = v6
	// succ:  l0011F00E
l0011F00E:
	goto l0011EFEF
	// succ:  l0011EFEF
l0011F011:
	// succ:  l0011F014
l0011F014:
	v6 = arg0
	v7 = loc3
	v8 = v6 < v7
	v8 = v8 == 0<32>
	branch !v8 l0011F023
	// succ:  l0011F020 l0011F023
l0011F020:
	goto l0011F036
	// succ:  l0011F036
l0011F023:
	v6 = arg0
	v7 = arg1
	v11 = SLICE(v7, byte, 0)
	Mem0[v6:byte] = v11
	v6 = arg0
	v7 = 1<32>
	v6 = v6 + v7
	arg0 = v6
	// succ:  l0011F033
l0011F033:
	goto l0011F014
	// succ:  l0011F014
l0011F036:
	v6 = arg0
	v7 = arg2
	v6 = v6 - v7
	return v6
	// succ:  _memset_exit
l0011F03E:
	return v6
	// succ:  _memset_exit
_memset_exit:


// _pthread_mutex_lock
// Return size: 0
word32 _pthread_mutex_lock(word32 arg0)
_pthread_mutex_lock_entry:
	// succ:  l0011F040
l0011F040:
	v2 = 0<32>
	return v2
	// succ:  _pthread_mutex_lock_exit
_pthread_mutex_lock_exit:


// _pthread_cond_broadcast
// Return size: 0
word32 _pthread_cond_broadcast(word32 arg0)
_pthread_cond_broadcast_entry:
	// succ:  l0011F044
l0011F044:
	v2 = 0<32>
	return v2
	// succ:  _pthread_cond_broadcast_exit
_pthread_cond_broadcast_exit:


// _memcpy
// Return size: 0
word32 _memcpy(word32 arg0, word32 arg1, word32 arg2)
_memcpy_entry:
	// succ:  l0011F048
l0011F048:
	v3 = arg2
	v4 = 0x1000<32>
	v5 = v3 >= v4
	branch !v5 l0011F05C
	// succ:  l0011F052 l0011F05C
l0011F052:
	v3 = arg0
	v4 = arg1
	v6 = arg2
	v3 = _emscripten_memcpy_big(v3, v4, v6)
	return v3
	// succ:  _memcpy_exit
l0011F05C:
	v3 = arg0
	loc3 = v3
	v3 = arg0
	v4 = 3<32>
	v3 = v3 & v4
	v4 = arg1
	v6 = 3<32>
	v4 = v4 & v6
	v5 = v3 == v4
	branch !v5 l0011F0E3
	// succ:  l0011F06D l0011F0E3
l0011F06D:
	v3 = arg0
	v4 = 3<32>
	v3 = v3 & v4
	v5 = v3 == 0<32>
	branch !v5 l0011F07C
	// succ:  l0011F079 l0011F07C
l0011F079:
	goto l0011F0AB
	// succ:  l0011F0AB
l0011F07C:
	v3 = arg2
	v4 = 0<32>
	v5 = v3 == v4
	branch !v5 l0011F089
	// succ:  l0011F085 l0011F089
l0011F085:
	v3 = loc3
	return v3
	// succ:  _memcpy_exit
l0011F089:
	v3 = arg0
	v4 = arg1
	v7 = Mem0[v4:int8]
	v4 = CONVERT(v7, int8, word32)
	v8 = SLICE(v4, byte, 0)
	Mem0[v3:byte] = v8
	v3 = arg0
	v4 = 1<32>
	v3 = v3 + v4
	arg0 = v3
	v3 = arg1
	v4 = 1<32>
	v3 = v3 + v4
	arg1 = v3
	v3 = arg2
	v4 = 1<32>
	v3 = v3 - v4
	arg2 = v3
	// succ:  l0011F0A8
l0011F0A8:
	goto l0011F06D
	// succ:  l0011F06D
l0011F0AB:
	v3 = arg2
	v4 = 4<32>
	v5 = v3 >= v4
	v5 = v5 == 0<32>
	branch !v5 l0011F0BC
	// succ:  l0011F0B9 l0011F0BC
l0011F0B9:
	goto l0011F0E0
	// succ:  l0011F0E0
l0011F0BC:
	v3 = arg0
	v4 = arg1
	v4 = Mem0[v4:word32]
	Mem0[v3:word32] = v4
	v3 = arg0
	v4 = 4<32>
	v3 = v3 + v4
	arg0 = v3
	v3 = arg1
	v4 = 4<32>
	v3 = v3 + v4
	arg1 = v3
	v3 = arg2
	v4 = 4<32>
	v3 = v3 - v4
	arg2 = v3
	// succ:  l0011F0DD
l0011F0DD:
	goto l0011F0AB
	// succ:  l0011F0AB
l0011F0E0:
	// succ:  l0011F0E3
l0011F0E3:
	v3 = arg2
	v4 = 0<32>
	v5 = v3 > v4
	v5 = v5 == 0<32>
	branch !v5 l0011F0F2
	// succ:  l0011F0EF l0011F0F2
l0011F0EF:
	goto l0011F116
	// succ:  l0011F116
l0011F0F2:
	v3 = arg0
	v4 = arg1
	v9 = Mem0[v4:int8]
	v4 = CONVERT(v9, int8, word32)
	v10 = SLICE(v4, byte, 0)
	Mem0[v3:byte] = v10
	v3 = arg0
	v4 = 1<32>
	v3 = v3 + v4
	arg0 = v3
	v3 = arg1
	v4 = 1<32>
	v3 = v3 + v4
	arg1 = v3
	v3 = arg2
	v4 = 1<32>
	v3 = v3 - v4
	arg2 = v3
	// succ:  l0011F113
l0011F113:
	goto l0011F0E3
	// succ:  l0011F0E3
l0011F116:
	v3 = loc3
	return v3
	// succ:  _memcpy_exit
l0011F11B:
	return v3
	// succ:  _memcpy_exit
_memcpy_exit:


// _sbrk
// Return size: 0
word32 _sbrk(word32 arg0)
_sbrk_entry:
	// succ:  l0011F11D
l0011F11D:
	v6 = arg0
	v7 = 0xF<32>
	v6 = v6 + v7
	v7 = 0xFFFFFFF0<32>
	v6 = v6 & v7
	arg0 = v6
	v6 = Mem0[0x00140038<p32>:word32]
	v6 = Mem0[v6:word32]
	loc1 = v6
	v6 = loc1
	v7 = arg0
	v6 = v6 + v7
	loc3 = v6
	v6 = arg0
	v7 = 0<32>
	v8 = v6 > v7
	v7 = loc3
	v9 = loc1
	v10 = v7 < v9
	v6 = v8 & v10
	v7 = loc3
	v9 = 0<32>
	v10 = v7 < v9
	v6 = v6 | v10
	branch !v6 l0011F155
	// succ:  l0011F14A l0011F155
l0011F14A:
	v6 = abortOnCannotGrowMemory()
	v6 = 0xC<32>
	___setErrNo(v6)
	v6 = 0xFFFFFFFF<32>
	return v6
	// succ:  _sbrk_exit
l0011F155:
	v6 = Mem0[0x00140038<p32>:word32]
	v7 = loc3
	Mem0[v6:word32] = v7
	v6 = getTotalMemory()
	loc4 = v6
	v6 = loc3
	v7 = loc4
	v8 = v6 > v7
	branch !v8 l0011F17E
	// succ:  l0011F167 l0011F17E
l0011F167:
	v6 = enlargeMemory()
	v7 = 0<32>
	v8 = v6 == v7
	branch !v8 l0011F17D
	// succ:  l0011F16E l0011F17D
l0011F16E:
	v6 = 0xC<32>
	___setErrNo(v6)
	v6 = Mem0[0x00140038<p32>:word32]
	v7 = loc1
	Mem0[v6:word32] = v7
	v6 = 0xFFFFFFFF<32>
	return v6
	// succ:  _sbrk_exit
l0011F17D:
	// succ:  l0011F17E
l0011F17E:
	v6 = loc1
	return v6
	// succ:  _sbrk_exit
l0011F181:
	return v6
	// succ:  _sbrk_exit
_sbrk_exit:


// _memmove
// Return size: 0
word32 _memmove(word32 arg0, word32 arg1, word32 arg2)
_memmove_entry:
	// succ:  l0011F183
l0011F183:
	v3 = arg1
	v4 = arg0
	v5 = v3 < v4
	v4 = arg0
	v6 = arg1
	v7 = arg2
	v6 = v6 + v7
	v8 = v4 < v6
	v3 = v5 & v8
	branch !v3 l0011F1E1
	// succ:  l0011F195 l0011F1E1
l0011F195:
	v3 = arg0
	loc3 = v3
	v3 = arg1
	v4 = arg2
	v3 = v3 + v4
	arg1 = v3
	v3 = arg0
	v4 = arg2
	v3 = v3 + v4
	arg0 = v3
	// succ:  l0011F1A9
l0011F1A9:
	v3 = arg2
	v4 = 0<32>
	v5 = v3 > v4
	v5 = v5 == 0<32>
	branch !v5 l0011F1B6
	// succ:  l0011F1B3 l0011F1B6
l0011F1B3:
	goto l0011F1DA
	// succ:  l0011F1DA
l0011F1B6:
	v3 = arg0
	v4 = 1<32>
	v3 = v3 - v4
	arg0 = v3
	v3 = arg1
	v4 = 1<32>
	v3 = v3 - v4
	arg1 = v3
	v3 = arg2
	v4 = 1<32>
	v3 = v3 - v4
	arg2 = v3
	v3 = arg0
	v4 = arg1
	v9 = Mem0[v4:int8]
	v4 = CONVERT(v9, int8, word32)
	v10 = SLICE(v4, byte, 0)
	Mem0[v3:byte] = v10
	// succ:  l0011F1D7
l0011F1D7:
	goto l0011F195
	// succ:  l0011F195
l0011F1DA:
	v3 = loc3
	arg0 = v3
	goto l0011F1EB
	// succ:  l0011F1EB
l0011F1E1:
	v3 = arg0
	v4 = arg1
	v6 = arg2
	v3 = _memcpy(v3, v4, v6)
	// succ:  l0011F1EB
l0011F1EB:
	v3 = arg0
	return v3
	// succ:  _memmove_exit
l0011F1EF:
	return v3
	// succ:  _memmove_exit
_memmove_exit:


// _pthread_mutex_unlock
// Return size: 0
word32 _pthread_mutex_unlock(word32 arg0)
_pthread_mutex_unlock_entry:
	// succ:  l0011F1F1
l0011F1F1:
	v2 = 0<32>
	return v2
	// succ:  _pthread_mutex_unlock_exit
_pthread_mutex_unlock_exit:


// _pthread_self
// Return size: 0
word32 _pthread_self()
_pthread_self_entry:
	// succ:  l0011F1F5
l0011F1F5:
	v2 = 0<32>
	return v2
	// succ:  _pthread_self_exit
_pthread_self_exit:


// dynCall_iiiiiiii
// Return size: 0
word32 dynCall_iiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
dynCall_iiiiiiii_entry:
	// succ:  l0011F1F9
l0011F1F9:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg7
	v9 = arg0
	v10 = 0x1FF<32>
	v9 = v9 & v10
	v10 = 0<32>
	v9 = v9 + v10
dynCall_iiiiiiii_exit:


// dynCall_viiiii
// Return size: 0
void dynCall_viiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
dynCall_viiiii_entry:
	// succ:  l0011F215
l0011F215:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg0
	v8 = 0x1FF<32>
	v7 = v7 & v8
	v8 = 0x200<32>
	v7 = v7 + v8
dynCall_viiiii_exit:


// dynCall_iiiiiid
// Return size: 0
word32 dynCall_iiiiiid(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, real64 arg6)
dynCall_iiiiiid_entry:
	// succ:  l0011F22D
l0011F22D:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg0
	v9 = 0xFF<32>
	v8 = v8 & v9
	v9 = 0x400<32>
	v8 = v8 + v9
dynCall_iiiiiid_exit:


// dynCall_vi
// Return size: 0
void dynCall_vi(word32 arg0, word32 arg1)
dynCall_vi_entry:
	// succ:  l0011F248
l0011F248:
	v2 = arg1
	v3 = arg0
	v4 = 0x1FF<32>
	v3 = v3 & v4
	v4 = 0x500<32>
	v3 = v3 + v4
dynCall_vi_exit:


// dynCall_vii
// Return size: 0
void dynCall_vii(word32 arg0, word32 arg1, word32 arg2)
dynCall_vii_entry:
	// succ:  l0011F258
l0011F258:
	v2 = arg1
	v3 = arg2
	v4 = arg0
	v5 = 0x1FF<32>
	v4 = v4 & v5
	v5 = 0x700<32>
	v4 = v4 + v5
dynCall_vii_exit:


// dynCall_iiiiiii
// Return size: 0
word32 dynCall_iiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
dynCall_iiiiiii_entry:
	// succ:  l0011F26A
l0011F26A:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg0
	v9 = 0x1FF<32>
	v8 = v8 & v9
	v9 = 0x900<32>
	v8 = v8 + v9
dynCall_iiiiiii_exit:


// dynCall_ii
// Return size: 0
word32 dynCall_ii(word32 arg0, word32 arg1)
dynCall_ii_entry:
	// succ:  l0011F285
l0011F285:
	v2 = arg1
	v3 = arg0
	v4 = 0x1FF<32>
	v3 = v3 & v4
	v4 = 0xB00<32>
	v3 = v3 + v4
dynCall_ii_exit:


// fn0011F296
// Return size: 0
void fn0011F296(word32 arg0, word32 arg1, word32 arg2, word64 arg3, word32 arg4, word32 arg5)
fn0011F296_entry:
	// succ:  l0011F296
l0011F296:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg0
	v8 = 0x1F<32>
	v7 = v7 & v8
	v8 = 0xD00<32>
	v7 = v7 + v8
fn0011F296_exit:


// dynCall_iiiiiiiiiiii
// Return size: 0
word32 dynCall_iiiiiiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11)
dynCall_iiiiiiiiiiii_entry:
	// succ:  l0011F2AD
l0011F2AD:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg7
	v9 = arg8
	v10 = arg9
	v11 = arg10
	v12 = arg11
	v13 = arg0
	v14 = 0x1FF<32>
	v13 = v13 & v14
	v14 = 0xD20<32>
	v13 = v13 + v14
dynCall_iiiiiiiiiiii_exit:


// dynCall_iiii
// Return size: 0
word32 dynCall_iiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
dynCall_iiii_entry:
	// succ:  l0011F2D2
l0011F2D2:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg0
	v6 = 0x1FF<32>
	v5 = v5 & v6
	v6 = 0xF20<32>
	v5 = v5 + v6
dynCall_iiii_exit:


// dynCall_viiiiiiiiiiiiiii
// Return size: 0
void dynCall_viiiiiiiiiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11, word32 arg12, word32 arg13, word32 arg14, word32 arg15)
dynCall_viiiiiiiiiiiiiii_entry:
	// succ:  l0011F2E7
l0011F2E7:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg7
	v9 = arg8
	v10 = arg9
	v11 = arg10
	v12 = arg11
	v13 = arg12
	v14 = arg13
	v15 = arg14
	v16 = arg15
	v17 = arg0
	v18 = 0x1FF<32>
	v17 = v17 & v18
	v18 = 0x1120<32>
	v17 = v17 + v18
dynCall_viiiiiiiiiiiiiii_exit:


// dynCall_viiiiii
// Return size: 0
void dynCall_viiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
dynCall_viiiiii_entry:
	// succ:  l0011F313
l0011F313:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg0
	v9 = 0x1FF<32>
	v8 = v8 & v9
	v9 = 0x1320<32>
	v8 = v8 + v9
dynCall_viiiiii_exit:


// dynCall_fiii
// Return size: 0
real32 dynCall_fiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
dynCall_fiii_entry:
	// succ:  l0011F32D
l0011F32D:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg0
	v6 = 0x1FF<32>
	v5 = v5 & v6
	v6 = 0x1520<32>
	v5 = v5 + v6
dynCall_fiii_exit:


// dynCall_viiiiiii
// Return size: 0
void dynCall_viiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
dynCall_viiiiiii_entry:
	// succ:  l0011F342
l0011F342:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg7
	v9 = arg0
	v10 = 0x1FF<32>
	v9 = v9 & v10
	v10 = 0x1720<32>
	v9 = v9 + v10
dynCall_viiiiiii_exit:


// dynCall_viiiiiiiiii
// Return size: 0
void dynCall_viiiiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10)
dynCall_viiiiiiiiii_entry:
	// succ:  l0011F35E
l0011F35E:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg7
	v9 = arg8
	v10 = arg9
	v11 = arg10
	v12 = arg0
	v13 = 0x1FF<32>
	v12 = v12 & v13
	v13 = 0x1920<32>
	v12 = v12 + v13
dynCall_viiiiiiiiii_exit:


// dynCall_iii
// Return size: 0
word32 dynCall_iii(word32 arg0, word32 arg1, word32 arg2)
dynCall_iii_entry:
	// succ:  l0011F380
l0011F380:
	v2 = arg1
	v3 = arg2
	v4 = arg0
	v5 = 0x1FF<32>
	v4 = v4 & v5
	v5 = 0x1B20<32>
	v4 = v4 + v5
dynCall_iii_exit:


// dynCall_iiiiii
// Return size: 0
word32 dynCall_iiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
dynCall_iiiiii_entry:
	// succ:  l0011F393
l0011F393:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg0
	v8 = 0x1FF<32>
	v7 = v7 & v8
	v8 = 0x1D20<32>
	v7 = v7 + v8
dynCall_iiiiii_exit:


// dynCall_diii
// Return size: 0
real64 dynCall_diii(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
dynCall_diii_entry:
	// succ:  l0011F3AC
l0011F3AC:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg0
	v6 = 0x1FF<32>
	v5 = v5 & v6
	v6 = 0x1F20<32>
	v5 = v5 + v6
dynCall_diii_exit:


// dynCall_i
// Return size: 0
word32 dynCall_i(word32 arg0)
dynCall_i_entry:
	// succ:  l0011F3C1
l0011F3C1:
	v2 = arg0
	v3 = 0x1FF<32>
	v2 = v2 & v3
	v3 = 0x2120<32>
	v2 = v2 + v3
dynCall_i_exit:


// fn0011F3D1
// Return size: 0
word64 fn0011F3D1(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011F3D1_entry:
	// succ:  l0011F3D1
l0011F3D1:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg0
	v7 = 0x1FF<32>
	v6 = v6 & v7
	v7 = 0x2320<32>
	v6 = v6 + v7
fn0011F3D1_exit:


// dynCall_iiiii
// Return size: 0
word32 dynCall_iiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
dynCall_iiiii_entry:
	// succ:  l0011F3E9
l0011F3E9:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg0
	v7 = 0x1FF<32>
	v6 = v6 & v7
	v7 = 0x2520<32>
	v6 = v6 + v7
dynCall_iiiii_exit:


// fn0011F401
// Return size: 0
word32 fn0011F401(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word64 arg5)
fn0011F401_entry:
	// succ:  l0011F401
l0011F401:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg0
	v8 = 0xFF<32>
	v7 = v7 & v8
	v8 = 0x2720<32>
	v7 = v7 + v8
fn0011F401_exit:


// dynCall_viii
// Return size: 0
void dynCall_viii(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
dynCall_viii_entry:
	// succ:  l0011F41B
l0011F41B:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg0
	v6 = 0x1FF<32>
	v5 = v5 & v6
	v6 = 0x2820<32>
	v5 = v5 + v6
dynCall_viii_exit:


// dynCall_v
// Return size: 0
void dynCall_v(word32 arg0)
dynCall_v_entry:
	// succ:  l0011F430
l0011F430:
	v2 = arg0
	v3 = 0x1FF<32>
	v2 = v2 & v3
	v3 = 0x2A20<32>
	v2 = v2 + v3
dynCall_v_exit:


// dynCall_iiiiiiiii
// Return size: 0
word32 dynCall_iiiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8)
dynCall_iiiiiiiii_entry:
	// succ:  l0011F43F
l0011F43F:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg6
	v8 = arg7
	v9 = arg8
	v10 = arg0
	v11 = 0x1FF<32>
	v10 = v10 & v11
	v11 = 0x2C20<32>
	v10 = v10 + v11
dynCall_iiiiiiiii_exit:


// dynCall_iiiiid
// Return size: 0
word32 dynCall_iiiiid(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, real64 arg5)
dynCall_iiiiid_entry:
	// succ:  l0011F45F
l0011F45F:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg5
	v7 = arg0
	v8 = 0xFF<32>
	v7 = v7 & v8
	v8 = 0x2E20<32>
	v7 = v7 + v8
dynCall_iiiiid_exit:


// dynCall_viiii
// Return size: 0
void dynCall_viiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
dynCall_viiii_entry:
	// succ:  l0011F479
l0011F479:
	v2 = arg1
	v3 = arg2
	v4 = arg3
	v5 = arg4
	v6 = arg0
	v7 = 0x1FF<32>
	v6 = v6 & v7
	v7 = 0x2F20<32>
	v6 = v6 + v7
dynCall_viiii_exit:


// fn0011F490
// Return size: 0
word32 fn0011F490(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn0011F490_entry:
	// succ:  l0011F490
l0011F490:
	v2 = 0<32>
	nullFunc_iiiiiiii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F490_exit
l0011F499:
	return v2
	// succ:  fn0011F490_exit
fn0011F490_exit:


// fn0011F49B
// Return size: 0
void fn0011F49B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011F49B_entry:
	// succ:  l0011F49B
l0011F49B:
	v2 = 1<32>
	nullFunc_viiiii(v2)
	return
	// succ:  fn0011F49B_exit
fn0011F49B_exit:


// fn0011F4A0
// Return size: 0
word32 fn0011F4A0(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, real64 arg5)
fn0011F4A0_entry:
	// succ:  l0011F4A0
l0011F4A0:
	v2 = 2<32>
	nullFunc_iiiiiid(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F4A0_exit
l0011F4A9:
	return v2
	// succ:  fn0011F4A0_exit
fn0011F4A0_exit:


// fn0011F4AB
// Return size: 0
void fn0011F4AB(word32 arg0)
fn0011F4AB_entry:
	// succ:  l0011F4AB
l0011F4AB:
	v2 = 3<32>
	nullFunc_vi(v2)
	return
	// succ:  fn0011F4AB_exit
fn0011F4AB_exit:


// fn0011F4B0
// Return size: 0
void fn0011F4B0(word32 arg0, word32 arg1)
fn0011F4B0_entry:
	// succ:  l0011F4B0
l0011F4B0:
	v2 = 4<32>
	nullFunc_vii(v2)
	return
	// succ:  fn0011F4B0_exit
fn0011F4B0_exit:


// fn0011F4B5
// Return size: 0
word32 fn0011F4B5(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0011F4B5_entry:
	// succ:  l0011F4B5
l0011F4B5:
	v2 = 5<32>
	nullFunc_iiiiiii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F4B5_exit
l0011F4BE:
	return v2
	// succ:  fn0011F4B5_exit
fn0011F4B5_exit:


// fn0011F4C0
// Return size: 0
word32 fn0011F4C0(word32 arg0)
fn0011F4C0_entry:
	// succ:  l0011F4C0
l0011F4C0:
	v2 = 6<32>
	nullFunc_ii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F4C0_exit
l0011F4C9:
	return v2
	// succ:  fn0011F4C0_exit
fn0011F4C0_exit:


// fn0011F4CB
// Return size: 0
word32 fn0011F4CB(word32 arg0)
fn0011F4CB_entry:
	// succ:  l0011F4CB
l0011F4CB:
	v2 = arg0
	v2 = _pthread_mutex_unlock(v2)
	return v2
	// succ:  fn0011F4CB_exit
fn0011F4CB_exit:


// fn0011F4D2
// Return size: 0
word32 fn0011F4D2(word32 arg0)
fn0011F4D2_entry:
	// succ:  l0011F4D2
l0011F4D2:
	v2 = arg0
	v2 = _pthread_mutex_lock(v2)
	return v2
	// succ:  fn0011F4D2_exit
fn0011F4D2_exit:


// fn0011F4D9
// Return size: 0
word32 fn0011F4D9(word32 arg0)
fn0011F4D9_entry:
	// succ:  l0011F4D9
l0011F4D9:
	v2 = arg0
	v2 = _pthread_cond_broadcast(v2)
	return v2
	// succ:  fn0011F4D9_exit
fn0011F4D9_exit:


// fn0011F4E0
// Return size: 0
void fn0011F4E0(word32 arg0, word32 arg1, word64 arg2, word32 arg3, word32 arg4)
fn0011F4E0_entry:
	// succ:  l0011F4E0
l0011F4E0:
	v2 = 7<32>
	nullFunc_viijii(v2)
	return
	// succ:  fn0011F4E0_exit
fn0011F4E0_exit:


// fn0011F4E5
// Return size: 0
word32 fn0011F4E5(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10)
fn0011F4E5_entry:
	// succ:  l0011F4E5
l0011F4E5:
	v2 = 8<32>
	nullFunc_iiiiiiiiiiii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F4E5_exit
l0011F4EE:
	return v2
	// succ:  fn0011F4E5_exit
fn0011F4E5_exit:


// fn0011F4F0
// Return size: 0
word32 fn0011F4F0(word32 arg0, word32 arg1, word32 arg2)
fn0011F4F0_entry:
	// succ:  l0011F4F0
l0011F4F0:
	v2 = 9<32>
	nullFunc_iiii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F4F0_exit
l0011F4F9:
	return v2
	// succ:  fn0011F4F0_exit
fn0011F4F0_exit:


// fn0011F4FB
// Return size: 0
void fn0011F4FB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11, word32 arg12, word32 arg13, word32 arg14)
fn0011F4FB_entry:
	// succ:  l0011F4FB
l0011F4FB:
	v2 = 0xA<32>
	nullFunc_viiiiiiiiiiiiiii(v2)
	return
	// succ:  fn0011F4FB_exit
fn0011F4FB_exit:


// fn0011F500
// Return size: 0
void fn0011F500(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0011F500_entry:
	// succ:  l0011F500
l0011F500:
	v2 = 0xB<32>
	nullFunc_viiiiii(v2)
	return
	// succ:  fn0011F500_exit
fn0011F500_exit:


// fn0011F505
// Return size: 0
real32 fn0011F505(word32 arg0, word32 arg1, word32 arg2)
fn0011F505_entry:
	// succ:  l0011F505
l0011F505:
	v2 = 0xC<32>
	nullFunc_fiii(v2)
	v3 = 0.0F
	return v3
	// succ:  fn0011F505_exit
l0011F511:
	return v3
	// succ:  fn0011F505_exit
fn0011F505_exit:


// fn0011F513
// Return size: 0
void fn0011F513(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn0011F513_entry:
	// succ:  l0011F513
l0011F513:
	v2 = 0xD<32>
	nullFunc_viiiiiii(v2)
	return
	// succ:  fn0011F513_exit
fn0011F513_exit:


// fn0011F518
// Return size: 0
void fn0011F518(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
fn0011F518_entry:
	// succ:  l0011F518
l0011F518:
	v2 = 0xE<32>
	nullFunc_viiiiiiiiii(v2)
	return
	// succ:  fn0011F518_exit
fn0011F518_exit:


// fn0011F51D
// Return size: 0
word32 fn0011F51D(word32 arg0, word32 arg1)
fn0011F51D_entry:
	// succ:  l0011F51D
l0011F51D:
	v2 = 0xF<32>
	nullFunc_iii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F51D_exit
l0011F526:
	return v2
	// succ:  fn0011F51D_exit
fn0011F51D_exit:


// fn0011F528
// Return size: 0
word32 fn0011F528(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011F528_entry:
	// succ:  l0011F528
l0011F528:
	v2 = 0x10<32>
	nullFunc_iiiiii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F528_exit
l0011F531:
	return v2
	// succ:  fn0011F528_exit
fn0011F528_exit:


// fn0011F533
// Return size: 0
real64 fn0011F533(word32 arg0, word32 arg1, word32 arg2)
fn0011F533_entry:
	// succ:  l0011F533
l0011F533:
	v2 = 0x11<32>
	nullFunc_diii(v2)
	v3 = 0.0
	return v3
	// succ:  fn0011F533_exit
l0011F543:
	return v3
	// succ:  fn0011F533_exit
fn0011F533_exit:


// fn0011F545
// Return size: 0
word32 fn0011F545()
fn0011F545_entry:
	// succ:  l0011F545
l0011F545:
	v2 = 0x12<32>
	nullFunc_i(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F545_exit
l0011F54E:
	return v2
	// succ:  fn0011F545_exit
fn0011F545_exit:


// fn0011F550
// Return size: 0
word64 fn0011F550(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011F550_entry:
	// succ:  l0011F550
l0011F550:
	v2 = 0x13<32>
	nullFunc_jiiii(v2)
	v3 = 0<64>
	return v3
	// succ:  fn0011F550_exit
l0011F559:
	return v3
	// succ:  fn0011F550_exit
fn0011F550_exit:


// fn0011F55B
// Return size: 0
word32 fn0011F55B(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011F55B_entry:
	// succ:  l0011F55B
l0011F55B:
	v2 = 0x14<32>
	nullFunc_iiiii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F55B_exit
l0011F564:
	return v2
	// succ:  fn0011F55B_exit
fn0011F55B_exit:


// fn0011F566
// Return size: 0
word32 fn0011F566(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn0011F566_entry:
	// succ:  l0011F566
l0011F566:
	v2 = 0x15<32>
	nullFunc_iiiiij(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F566_exit
l0011F56F:
	return v2
	// succ:  fn0011F566_exit
fn0011F566_exit:


// fn0011F571
// Return size: 0
void fn0011F571(word32 arg0, word32 arg1, word32 arg2)
fn0011F571_entry:
	// succ:  l0011F571
l0011F571:
	v2 = 0x16<32>
	nullFunc_viii(v2)
	return
	// succ:  fn0011F571_exit
fn0011F571_exit:


// fn0011F576
// Return size: 0
void fn0011F576(word32 arg0, word32 arg1, word32 arg2)
fn0011F576_entry:
	// succ:  l0011F576
l0011F576:
	v2 = arg0
	v3 = arg1
	v4 = arg2
	___cxa_throw(v2, v3, v4)
	return
	// succ:  fn0011F576_exit
fn0011F576_exit:


// fn0011F57F
// Return size: 0
void fn0011F57F()
fn0011F57F_entry:
	// succ:  l0011F57F
l0011F57F:
	v2 = 0x17<32>
	nullFunc_v(v2)
	return
	// succ:  fn0011F57F_exit
fn0011F57F_exit:


// fn0011F584
// Return size: 0
void fn0011F584()
fn0011F584_entry:
	// succ:  l0011F584
l0011F584:
	___cxa_end_catch()
	return
	// succ:  fn0011F584_exit
fn0011F584_exit:


// fn0011F587
// Return size: 0
void fn0011F587()
fn0011F587_entry:
	// succ:  l0011F587
l0011F587:
	___cxa_rethrow()
	return
	// succ:  fn0011F587_exit
fn0011F587_exit:


// fn0011F58A
// Return size: 0
word32 fn0011F58A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn0011F58A_entry:
	// succ:  l0011F58A
l0011F58A:
	v2 = 0x18<32>
	nullFunc_iiiiiiiii(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F58A_exit
l0011F593:
	return v2
	// succ:  fn0011F58A_exit
fn0011F58A_exit:


// fn0011F595
// Return size: 0
word32 fn0011F595(word32 arg0, word32 arg1, word32 arg2, word32 arg3, real64 arg4)
fn0011F595_entry:
	// succ:  l0011F595
l0011F595:
	v2 = 0x19<32>
	nullFunc_iiiiid(v2)
	v2 = 0<32>
	return v2
	// succ:  fn0011F595_exit
l0011F59E:
	return v2
	// succ:  fn0011F595_exit
fn0011F595_exit:


// fn0011F5A0
// Return size: 0
void fn0011F5A0(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn0011F5A0_entry:
	// succ:  l0011F5A0
l0011F5A0:
	v2 = 0x1A<32>
	nullFunc_viiii(v2)
	return
	// succ:  fn0011F5A0_exit
fn0011F5A0_exit:


// dynCall_viijii
// Return size: 0
void dynCall_viijii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
dynCall_viijii_entry:
	// succ:  l0011F5A5
l0011F5A5:
	v2 = arg0
	v3 = arg1
	v4 = arg2
	v5 = arg3
	v6 = CONVERT(v5, word32, uint64)
	v7 = arg4
	v8 = CONVERT(v7, word32, uint64)
	v9 = 0x20<64>
	v10 = v8 << v9
	v11 = v6 | v10
	v7 = arg5
	v12 = arg6
	fn0011F296(v2, v3, v4, v11, v7, v12)
	return
	// succ:  dynCall_viijii_exit
dynCall_viijii_exit:


// dynCall_jiiii
// Return size: 0
word32 dynCall_jiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
dynCall_jiiii_entry:
	// succ:  l0011F5BD
l0011F5BD:
	v3 = arg0
	v4 = arg1
	v5 = arg2
	v6 = arg3
	v7 = arg4
	v8 = fn0011F3D1(v3, v4, v5, v6, v7)
	loc5 = v8
	v8 = loc5
	v9 = 0x20<64>
	v8 = v8 >>u v9
	v3 = SLICE(v8, word64, 0)
	Mem0[0x00140094<p32>:word32] = v3
	v8 = loc5
	v3 = SLICE(v8, word64, 0)
	// succ:  l0011F5D9
l0011F5D9:
	return v3
	// succ:  dynCall_jiiii_exit
dynCall_jiiii_exit:


// dynCall_iiiiij
// Return size: 0
word32 dynCall_iiiiij(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
dynCall_iiiiij_entry:
	// succ:  l0011F5DB
l0011F5DB:
	v2 = arg0
	v3 = arg1
	v4 = arg2
	v5 = arg3
	v6 = arg4
	v7 = arg5
	v8 = CONVERT(v7, word32, uint64)
	v9 = arg6
	v10 = CONVERT(v9, word32, uint64)
	v11 = 0x20<64>
	v12 = v10 << v11
	v13 = v8 | v12
	v2 = fn0011F401(v2, v3, v4, v5, v6, v13)
	return v2
	// succ:  dynCall_iiiiij_exit
dynCall_iiiiij_exit:


// fn0011F5F3
// Return size: 0
word64 fn0011F5F3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0011F5F3_entry:
	// succ:  l0011F5F3
l0011F5F3:
	v2 = arg0
	v3 = arg1
	v4 = arg2
	v5 = arg3
	v6 = arg4
	v2 = invoke_jiiii(v2, v3, v4, v5, v6)
	v7 = CONVERT(v2, word32, uint64)
	v3 = Mem0[0x00140094<p32>:word32]
	v8 = CONVERT(v3, word32, uint64)
	v9 = 0x20<64>
	v10 = v8 << v9
	v11 = v7 | v10
	return v11
	// succ:  fn0011F5F3_exit
fn0011F5F3_exit:


