// stackSave
// Return size: 0
word32 stackSave()
stackSave_entry:
	// succ:  l000D0028
l000D0028:
	v2 = Mem0[0x00140030<p32>:word32]
	return v2
	// succ:  stackSave_exit
stackSave_exit:


// stackRestore
// Return size: 0
void stackRestore(word32 arg0)
stackRestore_entry:
	// succ:  l000D002C
l000D002C:
	v2 = arg0
	Mem0[0x00140030<p32>:word32] = v2
	return
	// succ:  stackRestore_exit
stackRestore_exit:


// establishStackSpace
// Return size: 0
void establishStackSpace(word32 arg0, word32 arg1)
establishStackSpace_entry:
	// succ:  l000D0031
l000D0031:
	v2 = arg0
	Mem0[0x00140030<p32>:word32] = v2
	v3 = arg1
	Mem0[0x00140034<p32>:word32] = v3
	// succ:  l000D003B
l000D003B:
	return
	// succ:  establishStackSpace_exit
establishStackSpace_exit:


// setThrew
// Return size: 0
void setThrew(word32 arg0, word32 arg1)
setThrew_entry:
	// succ:  l000D003D
l000D003D:
	v2 = Mem0[0x00140048<p32>:word32]
	v3 = 0<32>
	v4 = v2 == v3
	branch !v4 l000D004D
	// succ:  l000D0044 l000D004D
l000D0044:
	v5 = arg0
	Mem0[0x00140048<p32>:word32] = v5
	v6 = arg1
	Mem0[0x0014004C<p32>:word32] = v6
	// succ:  l000D004D
l000D004D:
	return
	// succ:  setThrew_exit
setThrew_exit:


// setTempRet0
// Return size: 0
void setTempRet0(word32 arg0)
setTempRet0_entry:
	// succ:  l000D004E
l000D004E:
	v2 = arg0
	Mem0[0x00140094<p32>:word32] = v2
	return
	// succ:  setTempRet0_exit
setTempRet0_exit:


// getTempRet0
// Return size: 0
word32 getTempRet0()
getTempRet0_entry:
	// succ:  l000D0053
l000D0053:
	v2 = Mem0[0x00140094<p32>:word32]
	return v2
	// succ:  getTempRet0_exit
getTempRet0_exit:


// fn000D0082
// Return size: 0
void fn000D0082()
fn000D0082_entry:
	// succ:  l000D0082
l000D0082:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	v6 = fn000D0057()
	loc0 = v6
	v7 = 0x4620<32>
	v8 = loc0
	Mem0[v7:word32] = v8
	return
	// succ:  fn000D0082_exit
l000D0096:
	return
	// succ:  fn000D0082_exit
fn000D0082_exit:


// _main
// Return size: 0
word32 _main()
_main_entry:
	// succ:  l000D0098
l000D0098:
	v12 = Mem0[0x00140030<p32>:word32]
	loc9 = v12
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = 0x10<32>
	v15 = v13 + v14
	Mem0[0x00140030<p32>:word32] = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = Mem0[0x00140034<p32>:word32]
	v18 = v16 >= v17
	branch !v18 l000D00B1
	// succ:  l000D00AC l000D00B1
l000D00AC:
	v19 = 0x10<32>
	abortStackOverflow(v19)
	// succ:  l000D00B1
l000D00B1:
	v20 = 0<32>
	loc2 = v20
	v21 = 0x4908<32>
	v22 = 0x2A44<32>
	v23 = fn000D00FD(v21, v22)
	loc3 = v23
	v24 = 0x4620<32>
	v25 = Mem0[v24:word32]
	loc4 = v25
	v26 = loc3
	v27 = loc4
	v28 = fn000E6E2A(v26, v27)
	loc5 = v28
	v29 = loc5
	loc0 = v29
	v30 = 0x163<32>
	loc1 = v30
	v31 = loc0
	loc6 = v31
	v32 = loc1
	loc7 = v32
	v33 = loc6
	v34 = loc7
	v35 = 0x1FF<32>
	v36 = v34 & v35
	v37 = 0xB00<32>
	v38 = v36 + v37
_main_exit:


// fn000D0290
// Return size: 0
word32 fn000D0290(word32 arg0, word32 arg1, word32 arg2)
fn000D0290_entry:
	// succ:  l000D0290
l000D0290:
	v163 = Mem0[0x00140030<p32>:word32]
	loc163 = v163
	v164 = Mem0[0x00140030<p32>:word32]
	v165 = 0x80<32>
	v166 = v164 + v165
	Mem0[0x00140030<p32>:word32] = v166
	v167 = Mem0[0x00140030<p32>:word32]
	v168 = Mem0[0x00140034<p32>:word32]
	v169 = v167 >= v168
	branch !v169 l000D02AC
	// succ:  l000D02A6 l000D02AC
l000D02A6:
	v170 = 0x80<32>
	abortStackOverflow(v170)
	// succ:  l000D02AC
l000D02AC:
	v171 = loc163
	v172 = 0x6C<32>
	v173 = v171 + v172
	loc3 = v173
	v174 = loc163
	v175 = 0x5C<32>
	v176 = v174 + v175
	loc140 = v176
	v177 = loc163
	v178 = 0x10<32>
	v179 = v177 + v178
	loc81 = v179
	v180 = loc163
	v181 = 4<32>
	v182 = v180 + v181
	loc84 = v182
	v183 = loc163
	loc86 = v183
	v184 = arg0
	loc78 = v184
	v185 = arg1
	loc79 = v185
	v186 = arg2
	loc80 = v186
	v187 = loc78
	loc87 = v187
	v188 = 0<32>
	Mem0[0x00140048<p32>:word32] = v188
	v189 = 0x166<32>
	v190 = loc81
	v191 = loc87
	invoke_vii(v189, v190, v191)
	v192 = Mem0[0x00140048<p32>:word32]
	loc88 = v192
	v193 = 0<32>
	Mem0[0x00140048<p32>:word32] = v193
	v194 = loc88
	v195 = 1<32>
	v196 = v194 & v195
	loc89 = v196
	// succ:  l000D0300
l000D0300:
	v197 = loc89
	branch !v197 l000D030C
	// succ:  l000D0306 l000D030C
l000D0306:
	v198 = 0xF<32>
	loc162 = v198
	goto l000D0782
	// succ:  l000D0782
l000D030C:
	v199 = loc81
	loc77 = v199
	v200 = loc77
	loc90 = v200
	v201 = loc90
	v202 = Mem0[v201:int8]
	v203 = CONVERT(v202, int8, word32)
	loc91 = v203
	v204 = loc91
	v205 = 1<32>
	v206 = v204 & v205
	loc92 = v206
	// succ:  l000D0322
l000D0322:
	v207 = loc92
	branch !v207 l000D0750
	// succ:  l000D0328 l000D0750
l000D0328:
	v208 = loc78
	loc93 = v208
	v209 = loc84
	loc75 = v209
	v210 = loc93
	loc76 = v210
	v211 = loc75
	loc94 = v211
	v212 = loc76
	loc95 = v212
	v213 = loc95
	v214 = Mem0[v213:word32]
	loc97 = v214
	v215 = loc97
	v216 = 0xFFFFFFF4<32>
	v217 = v215 + v216
	loc98 = v217
	v218 = loc98
	v219 = Mem0[v218:word32]
	loc99 = v219
	v220 = loc95
	v221 = loc99
	v222 = v220 + v221
	loc100 = v222
	v223 = loc100
	loc74 = v223
	v224 = loc74
	loc101 = v224
	v225 = loc101
	loc73 = v225
	v226 = loc73
	loc102 = v226
	v227 = loc102
	v228 = 0x18<32>
	v229 = v227 + v228
	loc103 = v229
	v230 = loc103
	v231 = Mem0[v230:word32]
	loc104 = v231
	v232 = loc94
	v233 = loc104
	Mem0[v232:word32] = v233
	v234 = loc79
	loc105 = v234
	v235 = loc78
	loc106 = v235
	v236 = loc106
	v237 = Mem0[v236:word32]
	loc108 = v237
	v238 = loc108
	v239 = 0xFFFFFFF4<32>
	v240 = v238 + v239
	loc109 = v240
	v241 = loc109
	v242 = Mem0[v241:word32]
	loc110 = v242
	v243 = loc106
	v244 = loc110
	v245 = v243 + v244
	loc111 = v245
	v246 = loc111
	loc39 = v246
	v247 = loc39
	loc112 = v247
	v248 = loc112
	v249 = 4<32>
	v250 = v248 + v249
	loc113 = v250
	v251 = loc113
	v252 = Mem0[v251:word32]
	loc114 = v252
	v253 = loc114
	v254 = 0xB0<32>
	v255 = v253 & v254
	loc115 = v255
	v256 = loc115
	v257 = 0x20<32>
	v258 = v256 == v257
	loc116 = v258
	v259 = loc79
	loc117 = v259
	v260 = loc80
	loc119 = v260
	v261 = loc117
	v262 = loc119
	v263 = v261 + v262
	loc120 = v263
	v264 = loc79
	loc121 = v264
	v265 = loc116
	branch !v265 l000D03E0
	// succ:  l000D03DD l000D03E0
l000D03DD:
	v266 = loc120
	goto l000D03E2
	// succ:  l000D03E2
l000D03E0:
	v267 = loc121
	// succ:  l000D03E2
l000D03E2:
	loc122 = v267
	v268 = loc79
	loc123 = v268
	v269 = loc80
	loc124 = v269
	v270 = loc123
	v271 = loc124
	v272 = v270 + v271
	loc125 = v272
	v273 = loc78
	loc126 = v273
	v274 = loc126
	v275 = Mem0[v274:word32]
	loc127 = v275
	v276 = loc127
	v277 = 0xFFFFFFF4<32>
	v278 = v276 + v277
	loc128 = v278
	v279 = loc128
	v280 = Mem0[v279:word32]
	loc130 = v280
	v281 = loc126
	v282 = loc130
	v283 = v281 + v282
	loc131 = v283
	v284 = loc78
	loc132 = v284
	v285 = loc132
	v286 = Mem0[v285:word32]
	loc133 = v286
	v287 = loc133
	v288 = 0xFFFFFFF4<32>
	v289 = v287 + v288
	loc134 = v289
	v290 = loc134
	v291 = Mem0[v290:word32]
	loc135 = v291
	v292 = loc132
	v293 = loc135
	v294 = v292 + v293
	loc136 = v294
	v295 = loc136
	loc17 = v295
	v296 = loc17
	loc137 = v296
	v297 = fn000D0EAE()
	loc138 = v297
	v298 = loc137
	v299 = 0x4C<32>
	v300 = v298 + v299
	loc139 = v300
	v301 = loc139
	v302 = Mem0[v301:word32]
	loc141 = v302
	v303 = loc138
	v304 = loc141
	v305 = fn000D0E75(v303, v304)
	loc142 = v305
	// succ:  l000D0470
l000D0470:
	v306 = loc142
	branch !v306 l000D05F5
	// succ:  l000D0477 l000D05F5
l000D0477:
	v307 = loc137
	loc118 = v307
	v308 = 0x20<32>
	loc129 = v308
	v309 = loc118
	loc143 = v309
	v310 = 0<32>
	Mem0[0x00140048<p32>:word32] = v310
	v311 = 0x167<32>
	v312 = loc143
	v313 = invoke_ii(v311, v312)
	loc144 = v313
	v314 = Mem0[0x00140048<p32>:word32]
	loc145 = v314
	v315 = 0<32>
	Mem0[0x00140048<p32>:word32] = v315
	v316 = loc145
	v317 = 1<32>
	v318 = v316 & v317
	loc146 = v318
	v319 = loc146
	branch !v319 l000D04B2
	// succ:  l000D04AC l000D04B2
l000D04AC:
	v320 = 0x10<32>
	loc162 = v320
	goto l000D05F3
	// succ:  l000D05F3
l000D04B2:
	v321 = loc140
	v322 = loc144
	Mem0[v321:word32] = v322
	v323 = loc140
	loc107 = v323
	v324 = loc107
	loc147 = v324
	v325 = 0<32>
	Mem0[0x00140048<p32>:word32] = v325
	v326 = 0x164<32>
	v327 = loc147
	v328 = 0x4C70<32>
	v329 = invoke_iii(v326, v327, v328)
	loc148 = v329
	v330 = Mem0[0x00140048<p32>:word32]
	loc149 = v330
	v331 = 0<32>
	Mem0[0x00140048<p32>:word32] = v331
	v332 = loc149
	v333 = 1<32>
	v334 = v332 & v333
	loc150 = v334
	v335 = loc150
	v336 = v335 == 0<32>
	branch !v336 l000D059A
	// succ:  l000D04F0 l000D059A
l000D04F0:
	v337 = loc129
	loc152 = v337
	v338 = loc148
	loc85 = v338
	v339 = loc152
	loc96 = v339
	v340 = loc85
	loc153 = v340
	v341 = loc153
	v342 = Mem0[v341:word32]
	loc154 = v342
	v343 = loc154
	v344 = 0x1C<32>
	v345 = v343 + v344
	loc155 = v345
	v346 = loc155
	v347 = Mem0[v346:word32]
	loc156 = v347
	v348 = loc96
	loc157 = v348
	v349 = 0<32>
	Mem0[0x00140048<p32>:word32] = v349
	v350 = loc156
	v351 = loc153
	v352 = loc157
	v353 = invoke_iii(v350, v351, v352)
	loc158 = v353
	v354 = Mem0[0x00140048<p32>:word32]
	loc159 = v354
	v355 = 0<32>
	Mem0[0x00140048<p32>:word32] = v355
	v356 = loc159
	v357 = 1<32>
	v358 = v356 & v357
	loc160 = v358
	v359 = loc160
	v360 = v359 == 0<32>
	branch !v360 l000D0599
	// succ:  l000D054F l000D0599
l000D054F:
	v361 = 0<32>
	Mem0[0x00140048<p32>:word32] = v361
	v362 = 0x165<32>
	v363 = loc140
	invoke_vi(v362, v363)
	v364 = Mem0[0x00140048<p32>:word32]
	loc14 = v364
	v365 = 0<32>
	Mem0[0x00140048<p32>:word32] = v365
	v366 = loc14
	v367 = 1<32>
	v368 = v366 & v367
	loc15 = v368
	v369 = loc15
	branch !v369 l000D0576
	// succ:  l000D056E l000D0576
l000D056E:
	v370 = 0x10<32>
	loc162 = v370
	goto l000D05FB
	// succ:  l000D05FB
l000D0576:
	v371 = loc158
	v372 = 0x18<32>
	v373 = v371 << v372
	v374 = 0x18<32>
	v375 = v373 >> v374
	loc16 = v375
	v376 = loc137
	v377 = 0x4C<32>
	v378 = v376 + v377
	loc18 = v378
	v379 = loc18
	v380 = loc16
	Mem0[v379:word32] = v380
	v381 = 0xC<32>
	loc162 = v381
	goto l000D05FB
	// succ:  l000D05FB
l000D0599:
	// succ:  l000D059A
l000D059A:
	v382 = 0<32>
	v383 = ___cxa_find_matching_catch_3(v382)
	loc161 = v383
	v384 = Mem0[0x00140094<p32>:word32]
	loc7 = v384
	v385 = loc161
	loc151 = v385
	v386 = loc7
	loc6 = v386
	v387 = 0<32>
	Mem0[0x00140048<p32>:word32] = v387
	v388 = 0x165<32>
	v389 = loc140
	invoke_vi(v388, v389)
	v390 = Mem0[0x00140048<p32>:word32]
	loc8 = v390
	v391 = 0<32>
	Mem0[0x00140048<p32>:word32] = v391
	v392 = loc8
	v393 = 1<32>
	v394 = v392 & v393
	loc9 = v394
	v395 = loc9
	branch !v395 l000D05DF
	// succ:  l000D05CE l000D05DF
l000D05CE:
	v396 = 0<32>
	v397 = 0<32>
	v398 = ___cxa_find_matching_catch_4(v396, v397)
	loc12 = v398
	v399 = Mem0[0x00140094<p32>:word32]
	loc13 = v399
	v400 = loc12
	fn000D0E65(v400)
	goto l000D05F2
	// succ:  l000D05F2
l000D05DF:
	v401 = loc151
	loc10 = v401
	v402 = loc6
	loc11 = v402
	v403 = loc10
	loc4 = v403
	v404 = loc11
	loc5 = v404
	goto l000D05FB
	// succ:  l000D05FB
l000D05F2:
	// succ:  l000D05F3
l000D05F3:
	goto l000D05FA
	// succ:  l000D05FA
l000D05F5:
	v405 = 0xC<32>
	loc162 = v405
	// succ:  l000D05FA
l000D05FA:
	// succ:  l000D05FB
l000D05FB:
	v406 = loc162
	v407 = 0xC<32>
	v408 = v406 == v407
	branch !v408 l000D06FC
	// succ:  l000D0604 l000D06FC
l000D0604:
	v409 = loc137
	v410 = 0x4C<32>
	v411 = v409 + v410
	loc19 = v411
	v412 = loc19
	v413 = Mem0[v412:word32]
	loc20 = v413
	v414 = loc20
	v415 = 0xFF<32>
	v416 = v414 & v415
	loc21 = v416
	v417 = 0<32>
	Mem0[0x00140048<p32>:word32] = v417
	v418 = loc3
	v419 = loc84
	v420 = Mem0[v419:word32]
	Mem0[v418:word32] = v420
	v421 = 0x168<32>
	v422 = loc3
	v423 = loc105
	v424 = loc122
	v425 = loc125
	v426 = loc131
	v427 = loc21
	v428 = invoke_iiiiiii(v421, v422, v423, v424, v425, v426, v427)
	loc22 = v428
	v429 = Mem0[0x00140048<p32>:word32]
	loc23 = v429
	v430 = 0<32>
	Mem0[0x00140048<p32>:word32] = v430
	v431 = loc23
	v432 = 1<32>
	v433 = v431 & v432
	loc24 = v433
	v434 = loc24
	branch !v434 l000D0657
	// succ:  l000D0651 l000D0657
l000D0651:
	v435 = 0x10<32>
	loc162 = v435
	goto l000D06FA
	// succ:  l000D06FA
l000D0657:
	v436 = loc86
	v437 = loc22
	Mem0[v436:word32] = v437
	v438 = loc86
	loc28 = v438
	v439 = loc28
	loc25 = v439
	v440 = loc25
	v441 = Mem0[v440:word32]
	loc26 = v441
	v442 = loc26
	v443 = 0<32>
	v444 = v442 == v443
	loc27 = v444
	v445 = loc27
	v446 = v445 == 0<32>
	branch !v446 l000D067C
	// succ:  l000D0679 l000D067C
l000D0679:
	goto l000D0750
	// succ:  l000D0750
l000D067C:
	v447 = loc78
	loc29 = v447
	v448 = loc29
	v449 = Mem0[v448:word32]
	loc30 = v449
	v450 = loc30
	v451 = 0xFFFFFFF4<32>
	v452 = v450 + v451
	loc31 = v452
	v453 = loc31
	v454 = Mem0[v453:word32]
	loc32 = v454
	v455 = loc29
	v456 = loc32
	v457 = v455 + v456
	loc33 = v457
	v458 = loc33
	loc71 = v458
	v459 = 5<32>
	loc72 = v459
	v460 = loc71
	loc34 = v460
	v461 = loc72
	loc35 = v461
	v462 = loc34
	loc50 = v462
	v463 = loc35
	loc61 = v463
	v464 = loc50
	loc36 = v464
	v465 = loc36
	v466 = 0x10<32>
	v467 = v465 + v466
	loc37 = v467
	v468 = loc37
	v469 = Mem0[v468:word32]
	loc38 = v469
	v470 = loc61
	loc40 = v470
	v471 = loc38
	v472 = loc40
	v473 = v471 | v472
	loc41 = v473
	v474 = 0<32>
	Mem0[0x00140048<p32>:word32] = v474
	v475 = 0x169<32>
	v476 = loc36
	v477 = loc41
	invoke_vii(v475, v476, v477)
	v478 = Mem0[0x00140048<p32>:word32]
	loc42 = v478
	v479 = 0<32>
	Mem0[0x00140048<p32>:word32] = v479
	v480 = loc42
	v481 = 1<32>
	v482 = v480 & v481
	loc43 = v482
	v483 = loc43
	branch !v483 l000D06F7
	// succ:  l000D06F1 l000D06F7
l000D06F1:
	v484 = 0x10<32>
	loc162 = v484
	goto l000D06F9
	// succ:  l000D06F9
l000D06F7:
	goto l000D0750
	// succ:  l000D0750
l000D06F9:
	// succ:  l000D06FA
l000D06FA:
	// succ:  l000D06FC
l000D06FC:
	v485 = loc162
	v486 = 0x10<32>
	v487 = v485 == v486
	branch !v487 l000D0717
	// succ:  l000D0704 l000D0717
l000D0704:
	v488 = 0<32>
	v489 = ___cxa_find_matching_catch_3(v488)
	loc46 = v489
	v490 = Mem0[0x00140094<p32>:word32]
	loc47 = v490
	v491 = loc46
	loc4 = v491
	v492 = loc47
	loc5 = v492
	// succ:  l000D0717
l000D0717:
	v493 = loc4
	loc82 = v493
	v494 = loc5
	loc83 = v494
	v495 = 0<32>
	Mem0[0x00140048<p32>:word32] = v495
	v496 = 0x16A<32>
	v497 = loc81
	invoke_vi(v496, v497)
	v498 = Mem0[0x00140048<p32>:word32]
	loc48 = v498
	v499 = 0<32>
	Mem0[0x00140048<p32>:word32] = v499
	v500 = loc48
	v501 = 1<32>
	v502 = v500 & v501
	loc49 = v502
	v503 = loc49
	v504 = v503 == 0<32>
	branch !v504 l000D0741
	// succ:  l000D073E l000D0741
l000D073E:
	goto l000D0783
	// succ:  l000D0783
l000D0741:
	v505 = 0<32>
	v506 = ___cxa_find_matching_catch_3(v505)
	loc69 = v506
	v507 = Mem0[0x00140094<p32>:word32]
	loc70 = v507
	v508 = loc69
	fn000D0E65(v508)
	// succ:  l000D0750
l000D0750:
	// succ:  l000D0750
l000D0750:
	v509 = 0<32>
	Mem0[0x00140048<p32>:word32] = v509
	v510 = 0x16A<32>
	v511 = loc81
	invoke_vi(v510, v511)
	v512 = Mem0[0x00140048<p32>:word32]
	loc51 = v512
	v513 = 0<32>
	Mem0[0x00140048<p32>:word32] = v513
	v514 = loc51
	v515 = 1<32>
	v516 = v514 & v515
	loc52 = v516
	v517 = loc52
	branch !v517 l000D0775
	// succ:  l000D076F l000D0775
l000D076F:
	v518 = 0xF<32>
	loc162 = v518
	goto l000D0781
	// succ:  l000D0781
l000D0775:
	v519 = loc78
	loc62 = v519
	v520 = loc163
	Mem0[0x00140030<p32>:word32] = v520
	v521 = loc62
	return v521
	// succ:  fn000D0290_exit
l000D0781:
	// succ:  l000D0782
l000D0782:
	// succ:  l000D0783
l000D0783:
	v522 = loc162
	v523 = 0xF<32>
	v524 = v522 == v523
	branch !v524 l000D079F
	// succ:  l000D078C l000D079F
l000D078C:
	v525 = 0<32>
	v526 = ___cxa_find_matching_catch_3(v525)
	loc44 = v526
	v527 = Mem0[0x00140094<p32>:word32]
	loc45 = v527
	v528 = loc44
	loc82 = v528
	v529 = loc45
	loc83 = v529
	// succ:  l000D079F
l000D079F:
	v530 = loc82
	loc53 = v530
	v531 = loc53
	v532 = ___cxa_begin_catch(v531)
	v533 = loc78
	loc54 = v533
	v534 = loc54
	v535 = Mem0[v534:word32]
	loc55 = v535
	v536 = loc55
	v537 = 0xFFFFFFF4<32>
	v538 = v536 + v537
	loc56 = v538
	v539 = loc56
	v540 = Mem0[v539:word32]
	loc57 = v540
	v541 = loc54
	v542 = loc57
	v543 = v541 + v542
	loc58 = v543
	v544 = 0<32>
	Mem0[0x00140048<p32>:word32] = v544
	v545 = 0x16B<32>
	v546 = loc58
	invoke_vi(v545, v546)
	v547 = Mem0[0x00140048<p32>:word32]
	loc59 = v547
	v548 = 0<32>
	Mem0[0x00140048<p32>:word32] = v548
	v549 = loc59
	v550 = 1<32>
	v551 = v549 & v550
	loc60 = v551
	v552 = loc60
	v553 = v552 == 0<32>
	branch !v553 l000D07F6
	// succ:  l000D07E7 l000D07F6
l000D07E7:
	___cxa_end_catch()
	v554 = loc78
	loc62 = v554
	v555 = loc163
	Mem0[0x00140030<p32>:word32] = v555
	v556 = loc62
	return v556
	// succ:  fn000D0290_exit
l000D07F6:
	v557 = ___cxa_find_matching_catch_2()
	loc63 = v557
	v558 = Mem0[0x00140094<p32>:word32]
	loc64 = v558
	v559 = loc63
	loc82 = v559
	v560 = loc64
	loc83 = v560
	v561 = 0<32>
	Mem0[0x00140048<p32>:word32] = v561
	v562 = 0x16C<32>
	invoke_v(v562)
	v563 = Mem0[0x00140048<p32>:word32]
	loc65 = v563
	v564 = 0<32>
	Mem0[0x00140048<p32>:word32] = v564
	v565 = loc65
	v566 = 1<32>
	v567 = v565 & v566
	loc66 = v567
	v568 = loc66
	branch !v568 l000D0831
	// succ:  l000D0822 l000D0831
l000D0822:
	v569 = 0<32>
	v570 = ___cxa_find_matching_catch_3(v569)
	loc69 = v570
	v571 = Mem0[0x00140094<p32>:word32]
	loc70 = v571
	v572 = loc69
	fn000D0E65(v572)
	goto l000D083D
	// succ:  l000D083D
l000D0831:
	v573 = loc82
	loc67 = v573
	v574 = loc83
	loc68 = v574
	v575 = loc67
	___resumeException(v575)
	// succ:  l000D083D
l000D083D:
	v576 = 0<32>
	return v576
	// succ:  fn000D0290_exit
l000D0841:
	return v266
	// succ:  fn000D0290_exit
fn000D0290_exit:


// fn000D0874
// Return size: 0
word32 fn000D0874(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000D0874_entry:
	// succ:  l000D0874
l000D0874:
	v193 = Mem0[0x00140030<p32>:word32]
	loc196 = v193
	v194 = Mem0[0x00140030<p32>:word32]
	v195 = 0x110<32>
	v196 = v194 + v195
	Mem0[0x00140030<p32>:word32] = v196
	v197 = Mem0[0x00140030<p32>:word32]
	v198 = Mem0[0x00140034<p32>:word32]
	v199 = v197 >= v198
	branch !v199 l000D0890
	// succ:  l000D088A l000D0890
l000D088A:
	v200 = 0x110<32>
	abortStackOverflow(v200)
	// succ:  l000D0890
l000D0890:
	v201 = loc196
	v202 = 0xAC<32>
	v203 = v201 + v202
	loc119 = v203
	v204 = loc196
	v205 = 0x88<32>
	v206 = v204 + v205
	loc128 = v206
	v207 = loc196
	v208 = 0x68<32>
	v209 = v207 + v208
	loc136 = v209
	v210 = loc196
	v211 = 0x48<32>
	v212 = v210 + v211
	loc144 = v212
	v213 = loc196
	v214 = 0x44<32>
	v215 = v213 + v214
	loc145 = v215
	v216 = loc196
	v217 = 0x30<32>
	v218 = v216 + v217
	loc152 = v218
	v219 = loc196
	v220 = 0x20<32>
	v221 = v219 + v220
	loc156 = v221
	v222 = loc196
	v223 = 0x14<32>
	v224 = v222 + v223
	loc157 = v224
	v225 = loc196
	v226 = 8<32>
	v227 = v225 + v226
	loc160 = v227
	v228 = loc196
	loc163 = v228
	v229 = arg1
	loc146 = v229
	v230 = arg2
	loc147 = v230
	v231 = arg3
	loc148 = v231
	v232 = arg4
	loc149 = v232
	v233 = arg5
	loc151 = v233
	v234 = arg0
	v235 = Mem0[v234:word32]
	loc164 = v235
	v236 = loc144
	loc142 = v236
	v237 = 0xFFFFFFFF<32>
	loc143 = v237
	v238 = loc142
	loc165 = v238
	v239 = loc165
	v240 = 0<32>
	Mem0[v239:word32] = v240
	v241 = loc144
	v242 = Mem0[v241:word32]
	loc166 = v242
	v243 = loc152
	v244 = loc166
	Mem0[v243:word32] = v244
	v245 = loc152
	loc141 = v245
	v246 = loc164
	v247 = 0<32>
	v248 = v246 == v247
	loc167 = v248
	v249 = loc167
	branch !v249 l000D0967
	// succ:  l000D094B l000D0967
l000D094B:
	v250 = loc145
	v251 = arg0
	v252 = Mem0[v251:word32]
	Mem0[v250:word32] = v252
	v253 = loc145
	v254 = Mem0[v253:word32]
	loc104 = v254
	v255 = loc196
	Mem0[0x00140030<p32>:word32] = v255
	v256 = loc104
	return v256
	// succ:  fn000D0874_exit
l000D0967:
	v257 = loc148
	loc168 = v257
	v258 = loc146
	loc169 = v258
	v259 = loc168
	loc170 = v259
	v260 = loc169
	loc171 = v260
	v261 = loc170
	v262 = loc171
	v263 = v261 - v262
	loc173 = v263
	v264 = loc173
	loc153 = v264
	v265 = loc149
	loc174 = v265
	v266 = loc174
	loc130 = v266
	v267 = loc130
	loc175 = v267
	v268 = loc175
	v269 = 0xC<32>
	v270 = v268 + v269
	loc176 = v270
	v271 = loc176
	v272 = Mem0[v271:word32]
	loc177 = v272
	v273 = loc177
	loc154 = v273
	v274 = loc154
	loc178 = v274
	v275 = loc153
	loc179 = v275
	v276 = loc178
	v277 = loc179
	v278 = v276 > v277
	loc180 = v278
	v279 = loc180
	branch !v279 l000D09F1
	// succ:  l000D09D4 l000D09F1
l000D09D4:
	v280 = loc153
	loc181 = v280
	v281 = loc154
	loc182 = v281
	v282 = loc182
	v283 = loc181
	v284 = v282 - v283
	loc184 = v284
	v285 = loc184
	loc154 = v285
	goto l000D09F6
	// succ:  l000D09F6
l000D09F1:
	v286 = 0<32>
	loc154 = v286
	// succ:  l000D09F6
l000D09F6:
	v287 = loc147
	loc185 = v287
	v288 = loc146
	loc186 = v288
	v289 = loc185
	loc187 = v289
	v290 = loc186
	loc188 = v290
	v291 = loc187
	v292 = loc188
	v293 = v291 - v292
	loc189 = v293
	v294 = loc189
	loc155 = v294
	v295 = loc155
	loc190 = v295
	v296 = loc190
	v297 = 0<32>
	v298 = v296 > v297
	loc191 = v298
	v299 = loc191
	v299 = v299
	// succ:  l000D0A33 l000D0A33
l000D0A33:
	v300 = arg0
	v301 = Mem0[v300:word32]
	loc192 = v301
	v302 = loc146
	loc193 = v302
	v303 = loc155
	loc7 = v303
	v304 = loc192
	loc120 = v304
	v305 = loc193
	loc121 = v305
	v306 = loc7
	loc122 = v306
	v307 = loc120
	loc8 = v307
	v308 = loc8
	v309 = Mem0[v308:word32]
	loc9 = v309
	v310 = loc9
	v311 = 0x30<32>
	v312 = v310 + v311
	loc10 = v312
	v313 = loc10
	v314 = Mem0[v313:word32]
	loc11 = v314
	v315 = loc121
	loc12 = v315
	v316 = loc122
	loc13 = v316
	v317 = loc8
	v318 = loc12
	v319 = loc13
	v320 = loc11
	v321 = 0x1FF<32>
	v322 = v320 & v321
	v323 = 0xF20<32>
	v324 = v322 + v323
fn000D0874_exit:


// fn000D0E65
// Return size: 0
void fn000D0E65(word32 arg0)
fn000D0E65_entry:
	// succ:  l000D0E65
l000D0E65:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	v6 = ___cxa_begin_catch(v5)
	fn0011E21F()
	// succ:  l000D0E73
l000D0E73:
	return
	// succ:  fn000D0E65_exit
fn000D0E65_exit:


// __GLOBAL__sub_I_hello_cpp
// Return size: 0
void __GLOBAL__sub_I_hello_cpp()
__GLOBAL__sub_I_hello_cpp_entry:
	// succ:  l000D0EB9
l000D0EB9:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	fn000D0082()
	return
	// succ:  __GLOBAL__sub_I_hello_cpp_exit
l000D0EC2:
	return
	// succ:  __GLOBAL__sub_I_hello_cpp_exit
__GLOBAL__sub_I_hello_cpp_exit:


// fn000D1329
// Return size: 0
void fn000D1329(word32 arg0)
fn000D1329_entry:
	// succ:  l000D1329
l000D1329:
	v7 = Mem0[0x00140030<p32>:word32]
	loc5 = v7
	v8 = arg0
	v9 = 0x44<32>
	v10 = v8 + v9
	loc1 = v10
	v11 = loc1
	v12 = Mem0[v11:word32]
	loc2 = v12
	v13 = loc2
	v14 = 0<32>
	v15 = v13 == v14
	loc3 = v15
	v16 = loc3
	branch !v16 l000D134E
	// succ:  l000D1349 l000D134E
l000D1349:
	v17 = arg0
	fn000D1351(v17)
	// succ:  l000D134E
l000D134E:
	return
	// succ:  fn000D1329_exit
l000D134F:
	return
	// succ:  fn000D1329_exit
fn000D1329_exit:


// fn000D1351
// Return size: 0
void fn000D1351(word32 arg0)
fn000D1351_entry:
	// succ:  l000D1351
l000D1351:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn000D1351_exit
l000D1358:
	return
	// succ:  fn000D1351_exit
fn000D1351_exit:


// fn000D157C
// Return size: 0
void fn000D157C(word32 arg0)
fn000D157C_entry:
	// succ:  l000D157C
l000D157C:
	v7 = Mem0[0x00140030<p32>:word32]
	loc5 = v7
	v8 = arg0
	v9 = 0x44<32>
	v10 = v8 + v9
	loc1 = v10
	v11 = loc1
	v12 = Mem0[v11:word32]
	loc2 = v12
	v13 = loc2
	v14 = 0<32>
	v15 = v13 == v14
	loc3 = v15
	v16 = loc3
	branch !v16 l000D15A1
	// succ:  l000D159C l000D15A1
l000D159C:
	v17 = arg0
	fn000D1351(v17)
	// succ:  l000D15A1
l000D15A1:
	return
	// succ:  fn000D157C_exit
l000D15A2:
	return
	// succ:  fn000D157C_exit
fn000D157C_exit:


// fn000D1689
// Return size: 0
word64 fn000D1689(word32 arg0, word32 arg1, word32 arg2, word64 arg3)
fn000D1689_entry:
	// succ:  l000D1689
l000D1689:
	v21 = Mem0[0x00140030<p32>:word32]
	loc21 = v21
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = 0x70<32>
	v24 = v22 + v23
	Mem0[0x00140030<p32>:word32] = v24
	v25 = Mem0[0x00140030<p32>:word32]
	v26 = Mem0[0x00140034<p32>:word32]
	v27 = v25 >= v26
	branch !v27 l000D16A4
	// succ:  l000D169E l000D16A4
l000D169E:
	v28 = 0x70<32>
	abortStackOverflow(v28)
	// succ:  l000D16A4
l000D16A4:
	v29 = loc21
	loc14 = v29
	v30 = loc14
	v31 = 0<32>
	Mem0[v30:word32] = v31
	v32 = loc14
	v33 = 4<32>
	v34 = v32 + v33
	loc15 = v34
	v35 = loc15
	v36 = arg0
	Mem0[v35:word32] = v36
	v37 = loc14
	v38 = 0x2C<32>
	v39 = v37 + v38
	loc16 = v39
	v40 = loc16
	v41 = arg0
	Mem0[v40:word32] = v41
	v42 = arg0
	v43 = 0<32>
	v44 = v42 < v43
	loc17 = v44
	v45 = arg0
	v46 = 0x7FFFFFFF<32>
	v47 = v45 + v46
	loc18 = v47
	v48 = loc17
	branch !v48 l000D16E4
	// succ:  l000D16E1 l000D16E4
l000D16E1:
	v49 = 0xFFFFFFFF<32>
	goto l000D16E6
	// succ:  l000D16E6
l000D16E4:
	v50 = loc18
	// succ:  l000D16E6
l000D16E6:
	loc4 = v50
	v51 = loc14
	v52 = 8<32>
	v53 = v51 + v52
	loc19 = v53
	v54 = loc19
	v55 = loc4
	Mem0[v54:word32] = v55
	v56 = loc14
	v57 = 0x4C<32>
	v58 = v56 + v57
	loc5 = v58
	v59 = loc5
	v60 = 0xFFFFFFFF<32>
	Mem0[v59:word32] = v60
	v61 = loc14
	v62 = 0<32>
	fn000D1767(v61, v62)
	v63 = loc14
	v64 = arg2
	v65 = 1<32>
	v66 = arg3
	v67 = fn000D1804(v63, v64, v65, v66)
	loc22 = v67
	v68 = arg1
	v69 = 0<32>
	v70 = v68 == v69
	loc6 = v70
	v71 = loc6
	v72 = v71 == 0<32>
	branch !v72 l000D175E
	// succ:  l000D1724 l000D175E
l000D1724:
	v73 = loc14
	v74 = 0x6C<32>
	v75 = v73 + v74
	loc7 = v75
	v76 = loc7
	v77 = Mem0[v76:word32]
	loc8 = v77
	v78 = loc15
	v79 = Mem0[v78:word32]
	loc9 = v79
	v80 = loc19
	v81 = Mem0[v80:word32]
	loc10 = v81
	v82 = loc9
	v83 = loc8
	v84 = v82 + v83
	loc11 = v84
	v85 = loc11
	v86 = loc10
	v87 = v85 - v86
	loc12 = v87
	v88 = arg0
	v89 = loc12
	v90 = v88 + v89
	loc13 = v90
	v91 = arg1
	v92 = loc13
	Mem0[v91:word32] = v92
	// succ:  l000D175E
l000D175E:
	v93 = loc21
	Mem0[0x00140030<p32>:word32] = v93
	v94 = loc22
	return v94
	// succ:  fn000D1689_exit
l000D1765:
	return v49
	// succ:  fn000D1689_exit
fn000D1689_exit:


// fn000D1767
// Return size: 0
void fn000D1767(word32 arg0, word32 arg1)
fn000D1767_entry:
	// succ:  l000D1767
l000D1767:
	v18 = Mem0[0x00140030<p32>:word32]
	loc17 = v18
	v19 = arg0
	v20 = 0x68<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc7
	v23 = arg1
	Mem0[v22:word32] = v23
	v24 = arg0
	v25 = 8<32>
	v26 = v24 + v25
	loc8 = v26
	v27 = loc8
	v28 = Mem0[v27:word32]
	loc9 = v28
	v29 = arg0
	v30 = 4<32>
	v31 = v29 + v30
	loc10 = v31
	v32 = loc10
	v33 = Mem0[v32:word32]
	loc11 = v33
	v34 = loc9
	v35 = loc11
	v36 = v34 - v35
	loc12 = v36
	v37 = arg0
	v38 = 0x6C<32>
	v39 = v37 + v38
	loc13 = v39
	v40 = loc13
	v41 = loc12
	Mem0[v40:word32] = v41
	v42 = arg1
	v43 = 0<32>
	v44 = v42 != v43
	loc14 = v44
	v45 = loc12
	v46 = arg1
	v47 = v45 > v46
	loc2 = v47
	v48 = loc14
	v49 = loc2
	v50 = v48 & v49
	loc15 = v50
	v51 = loc15
	branch !v51 l000D17E2
	// succ:  l000D17C7 l000D17E2
l000D17C7:
	v52 = loc11
	loc3 = v52
	v53 = loc3
	v54 = arg1
	v55 = v53 + v54
	loc4 = v55
	v56 = arg0
	v57 = 0x64<32>
	v58 = v56 + v57
	loc5 = v58
	v59 = loc5
	v60 = loc4
	Mem0[v59:word32] = v60
	goto l000D17F1
	// succ:  l000D17F1
l000D17E2:
	v61 = arg0
	v62 = 0x64<32>
	v63 = v61 + v62
	loc6 = v63
	v64 = loc6
	v65 = loc9
	Mem0[v64:word32] = v65
	// succ:  l000D17F1
l000D17F1:
	return
	// succ:  fn000D1767_exit
l000D17F3:
	return
	// succ:  fn000D1767_exit
fn000D1767_exit:


// fn000D17F5
// Return size: 0
word64 fn000D17F5(word64 arg0, word64 arg1)
fn000D17F5_entry:
	// succ:  l000D17F5
l000D17F5:
	v2 = arg1
	v3 = v2 == 0<64>
	branch !v3 l000D17FD
	// succ:  l000D17FA l000D17FD
l000D17FA:
	v4 = 0<64>
	goto l000D1802
	// succ:  l000D1802
l000D17FD:
	v5 = arg0
	v6 = arg1
	v7 = v5 /u v6
	// succ:  l000D1802
l000D1802:
	return v7
	// succ:  fn000D17F5_exit
fn000D17F5_exit:


// fn000D2693
// Return size: 0
word32 fn000D2693(word32 arg0)
fn000D2693_entry:
	// succ:  l000D2693
l000D2693:
	v17 = Mem0[0x00140030<p32>:word32]
	loc15 = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = 0x10<32>
	v20 = v18 + v19
	Mem0[0x00140030<p32>:word32] = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = Mem0[0x00140034<p32>:word32]
	v23 = v21 >= v22
	branch !v23 l000D26AC
	// succ:  l000D26A7 l000D26AC
l000D26A7:
	v24 = 0x10<32>
	abortStackOverflow(v24)
	// succ:  l000D26AC
l000D26AC:
	v25 = loc15
	loc2 = v25
	v26 = arg0
	v27 = 8<32>
	v28 = v26 + v27
	loc6 = v28
	v29 = loc6
	v30 = Mem0[v29:word32]
	loc7 = v30
	v31 = loc7
	v32 = 0<32>
	v33 = v31 == v32
	loc8 = v33
	v34 = loc8
	branch !v34 l000D26E5
	// succ:  l000D26C9 l000D26E5
l000D26C9:
	v35 = arg0
	v36 = fn000D2742(v35)
	loc9 = v36
	v37 = loc9
	v38 = 0<32>
	v39 = v37 == v38
	loc10 = v39
	v40 = loc10
	branch !v40 l000D26DF
	// succ:  l000D26DA l000D26DF
l000D26DA:
	v41 = 3<32>
	loc14 = v41
	goto l000D26E3
	// succ:  l000D26E3
l000D26DF:
	v42 = 0xFFFFFFFF<32>
	loc1 = v42
	// succ:  l000D26E3
l000D26E3:
	goto l000D26E9
	// succ:  l000D26E9
l000D26E5:
	v43 = 3<32>
	loc14 = v43
	// succ:  l000D26E9
l000D26E9:
	v44 = loc14
	v45 = 3<32>
	v46 = v44 == v45
	v46 = v46
	// succ:  l000D26F1 l000D26F1
l000D26F1:
	v47 = arg0
	v48 = 0x20<32>
	v49 = v47 + v48
	loc11 = v49
	v50 = loc11
	v51 = Mem0[v50:word32]
	loc12 = v51
	v52 = arg0
	v53 = loc2
	v54 = 1<32>
	v55 = loc12
	v56 = 0x1FF<32>
	v57 = v55 & v56
	v58 = 0xF20<32>
	v59 = v57 + v58
fn000D2693_exit:


// fn000D2742
// Return size: 0
word32 fn000D2742(word32 arg0)
fn000D2742_entry:
	// succ:  l000D2742
l000D2742:
	v29 = Mem0[0x00140030<p32>:word32]
	loc27 = v29
	v30 = arg0
	v31 = 0x4A<32>
	v32 = v30 + v31
	loc2 = v32
	v33 = loc2
	v34 = Mem0[v33:int8]
	v35 = CONVERT(v34, int8, word32)
	loc13 = v35
	v36 = loc13
	v37 = 0x18<32>
	v38 = v36 << v37
	v39 = 0x18<32>
	v40 = v38 >> v39
	loc19 = v40
	v41 = loc19
	v42 = 0xFF<32>
	v43 = v41 + v42
	loc20 = v43
	v44 = loc20
	v45 = loc19
	v46 = v44 | v45
	loc21 = v46
	v47 = loc21
	v48 = 0xFF<32>
	v49 = v47 & v48
	loc22 = v49
	v50 = loc2
	v51 = loc22
	v52 = SLICE(v51, byte, 0)
	Mem0[v50:byte] = v52
	v53 = arg0
	v54 = 0x14<32>
	v55 = v53 + v54
	loc23 = v55
	v56 = loc23
	v57 = Mem0[v56:word32]
	loc24 = v57
	v58 = arg0
	v59 = 0x2C<32>
	v60 = v58 + v59
	loc25 = v60
	v61 = loc25
	v62 = Mem0[v61:word32]
	loc3 = v62
	v63 = loc24
	v64 = loc3
	v65 = v63 >u v64
	loc4 = v65
	v66 = loc4
	v66 = v66
	// succ:  l000D27A6 l000D27A6
l000D27A6:
	v67 = arg0
	v68 = 0x24<32>
	v69 = v67 + v68
	loc5 = v69
	v70 = loc5
	v71 = Mem0[v70:word32]
	loc6 = v71
	v72 = arg0
	v73 = 0<32>
	v74 = 0<32>
	v75 = loc6
	v76 = 0x1FF<32>
	v77 = v75 & v76
	v78 = 0xF20<32>
	v79 = v77 + v78
fn000D2742_exit:


// fn000D29A3
// Return size: 0
word32 fn000D29A3(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000D29A3_entry:
	// succ:  l000D29A3
l000D29A3:
	v30 = Mem0[0x00140030<p32>:word32]
	loc31 = v30
	v31 = Mem0[0x00140030<p32>:word32]
	v32 = 0x80<32>
	v33 = v31 + v32
	Mem0[0x00140030<p32>:word32] = v33
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = Mem0[0x00140034<p32>:word32]
	v36 = v34 >= v35
	branch !v36 l000D29BE
	// succ:  l000D29B8 l000D29BE
l000D29B8:
	v37 = 0x80<32>
	abortStackOverflow(v37)
	// succ:  l000D29BE
l000D29BE:
	v38 = loc31
	v39 = 0x70<32>
	v40 = v38 + v39
	loc24 = v40
	v41 = loc31
	loc25 = v41
	v42 = loc25
	v43 = 0xC74<32>
	v44 = Mem0[v43:word64]
	Mem0[v42:word64] = v44
	v45 = loc25
	v46 = 8<32>
	v47 = v45 + v46
	v48 = 0xC74<32>
	v49 = 8<32>
	v50 = v48 + v49
	v51 = Mem0[v50:word64]
	Mem0[v47:word64] = v51
	v52 = loc25
	v53 = 0x10<32>
	v54 = v52 + v53
	v55 = 0xC74<32>
	v56 = 0x10<32>
	v57 = v55 + v56
	v58 = Mem0[v57:word64]
	Mem0[v54:word64] = v58
	v59 = loc25
	v60 = 0x18<32>
	v61 = v59 + v60
	v62 = 0xC74<32>
	v63 = 0x18<32>
	v64 = v62 + v63
	v65 = Mem0[v64:word64]
	Mem0[v61:word64] = v65
	v66 = loc25
	v67 = 0x20<32>
	v68 = v66 + v67
	v69 = 0xC74<32>
	v70 = 0x20<32>
	v71 = v69 + v70
	v72 = Mem0[v71:word64]
	Mem0[v68:word64] = v72
	v73 = loc25
	v74 = 0x28<32>
	v75 = v73 + v74
	v76 = 0xC74<32>
	v77 = 0x28<32>
	v78 = v76 + v77
	v79 = Mem0[v78:word64]
	Mem0[v75:word64] = v79
	v80 = loc25
	v81 = 0x30<32>
	v82 = v80 + v81
	v83 = 0xC74<32>
	v84 = 0x30<32>
	v85 = v83 + v84
	v86 = Mem0[v85:word64]
	Mem0[v82:word64] = v86
	v87 = loc25
	v88 = 0x38<32>
	v89 = v87 + v88
	v90 = 0xC74<32>
	v91 = 0x38<32>
	v92 = v90 + v91
	v93 = Mem0[v92:word64]
	Mem0[v89:word64] = v93
	v94 = loc25
	v95 = 0x40<32>
	v96 = v94 + v95
	v97 = 0xC74<32>
	v98 = 0x40<32>
	v99 = v97 + v98
	v100 = Mem0[v99:word64]
	Mem0[v96:word64] = v100
	v101 = loc25
	v102 = 0x48<32>
	v103 = v101 + v102
	v104 = 0xC74<32>
	v105 = 0x48<32>
	v106 = v104 + v105
	v107 = Mem0[v106:word64]
	Mem0[v103:word64] = v107
	v108 = loc25
	v109 = 0x50<32>
	v110 = v108 + v109
	v111 = 0xC74<32>
	v112 = 0x50<32>
	v113 = v111 + v112
	v114 = Mem0[v113:word64]
	Mem0[v110:word64] = v114
	v115 = loc25
	v116 = 0x58<32>
	v117 = v115 + v116
	v118 = 0xC74<32>
	v119 = 0x58<32>
	v120 = v118 + v119
	v121 = Mem0[v120:word64]
	Mem0[v117:word64] = v121
	v122 = loc25
	v123 = 0x60<32>
	v124 = v122 + v123
	v125 = 0xC74<32>
	v126 = 0x60<32>
	v127 = v125 + v126
	v128 = Mem0[v127:word64]
	Mem0[v124:word64] = v128
	v129 = loc25
	v130 = 0x68<32>
	v131 = v129 + v130
	v132 = 0xC74<32>
	v133 = 0x68<32>
	v134 = v132 + v133
	v135 = Mem0[v134:word64]
	Mem0[v131:word64] = v135
	v136 = arg1
	v137 = 0xFFFFFFFF<32>
	v138 = v136 + v137
	loc26 = v138
	v139 = loc26
	v140 = 0x7FFFFFFE<32>
	v141 = v139 >u v140
	loc27 = v141
	v142 = loc27
	branch !v142 l000D2AFE
	// succ:  l000D2AD4 l000D2AFE
l000D2AD4:
	v143 = arg1
	v144 = 0<32>
	v145 = v143 == v144
	loc28 = v145
	v146 = loc28
	branch !v146 l000D2AEC
	// succ:  l000D2ADF l000D2AEC
l000D2ADF:
	v147 = loc24
	loc6 = v147
	v148 = 1<32>
	loc7 = v148
	v149 = 4<32>
	loc30 = v149
	goto l000D2AFC
	// succ:  l000D2AFC
l000D2AEC:
	v150 = ___errno_location()
	loc29 = v150
	v151 = loc29
	v152 = 0x4B<32>
	Mem0[v151:word32] = v152
	v153 = 0xFFFFFFFF<32>
	loc5 = v153
	// succ:  l000D2AFC
l000D2AFC:
	goto l000D2B0A
	// succ:  l000D2B0A
l000D2AFE:
	v154 = arg0
	loc6 = v154
	v155 = arg1
	loc7 = v155
	v156 = 4<32>
	loc30 = v156
	// succ:  l000D2B0A
l000D2B0A:
	v157 = loc30
	v158 = 4<32>
	v159 = v157 == v158
	branch !v159 l000D2BCB
	// succ:  l000D2B12 l000D2BCB
l000D2B12:
	v160 = loc6
	loc8 = v160
	v161 = 0xFFFFFFFE<32>
	v162 = loc8
	v163 = v161 - v162
	loc9 = v163
	v164 = loc7
	v165 = loc9
	v166 = v164 >u v165
	loc10 = v166
	v167 = loc10
	branch !v167 l000D2B2B
	// succ:  l000D2B28 l000D2B2B
l000D2B28:
	v168 = loc9
	goto l000D2B2D
	// succ:  l000D2B2D
l000D2B2B:
	v169 = loc7
	// succ:  l000D2B2D
l000D2B2D:
	loc4 = v169
	v170 = loc25
	v171 = 0x30<32>
	v172 = v170 + v171
	loc11 = v172
	v173 = loc11
	v174 = loc4
	Mem0[v173:word32] = v174
	v175 = loc25
	v176 = 0x14<32>
	v177 = v175 + v176
	loc12 = v177
	v178 = loc12
	v179 = loc6
	Mem0[v178:word32] = v179
	v180 = loc25
	v181 = 0x2C<32>
	v182 = v180 + v181
	loc13 = v182
	v183 = loc13
	v184 = loc6
	Mem0[v183:word32] = v184
	v185 = loc6
	v186 = loc4
	v187 = v185 + v186
	loc14 = v187
	v188 = loc25
	v189 = 0x10<32>
	v190 = v188 + v189
	loc15 = v190
	v191 = loc15
	v192 = loc14
	Mem0[v191:word32] = v192
	v193 = loc25
	v194 = 0x1C<32>
	v195 = v193 + v194
	loc16 = v195
	v196 = loc16
	v197 = loc14
	Mem0[v196:word32] = v197
	v198 = loc25
	v199 = arg2
	v200 = arg3
	v201 = fn000D2BD4(v198, v199, v200)
	loc17 = v201
	v202 = loc4
	v203 = 0<32>
	v204 = v202 == v203
	loc18 = v204
	v205 = loc18
	branch !v205 l000D2B98
	// succ:  l000D2B93 l000D2B98
l000D2B93:
	v206 = loc17
	loc5 = v206
	goto l000D2BC9
	// succ:  l000D2BC9
l000D2B98:
	v207 = loc12
	v208 = Mem0[v207:word32]
	loc19 = v208
	v209 = loc15
	v210 = Mem0[v209:word32]
	loc20 = v210
	v211 = loc19
	v212 = loc20
	v213 = v211 == v212
	loc21 = v213
	v214 = loc21
	v215 = 0x1F<32>
	v216 = v214 << v215
	v217 = 0x1F<32>
	v218 = v216 >> v217
	loc22 = v218
	v219 = loc19
	v220 = loc22
	v221 = v219 + v220
	loc23 = v221
	v222 = loc23
	v223 = 0<32>
	v224 = SLICE(v223, byte, 0)
	Mem0[v222:byte] = v224
	v225 = loc17
	loc5 = v225
	// succ:  l000D2BC9
l000D2BC9:
	// succ:  l000D2BCB
l000D2BCB:
	v226 = loc31
	Mem0[0x00140030<p32>:word32] = v226
	v227 = loc5
	return v227
	// succ:  fn000D29A3_exit
l000D2BD2:
	return v168
	// succ:  fn000D29A3_exit
fn000D29A3_exit:


// fn000D2BD4
// Return size: 0
word32 fn000D2BD4(word32 arg0, word32 arg1, word32 arg2)
fn000D2BD4_entry:
	// succ:  l000D2BD4
l000D2BD4:
	v47 = Mem0[0x00140030<p32>:word32]
	loc47 = v47
	v48 = Mem0[0x00140030<p32>:word32]
	v49 = 0xE0<32>
	v50 = v48 + v49
	Mem0[0x00140030<p32>:word32] = v50
	v51 = Mem0[0x00140030<p32>:word32]
	v52 = Mem0[0x00140034<p32>:word32]
	v53 = v51 >= v52
	branch !v53 l000D2BEF
	// succ:  l000D2BE9 l000D2BEF
l000D2BE9:
	v54 = 0xE0<32>
	abortStackOverflow(v54)
	// succ:  l000D2BEF
l000D2BEF:
	v55 = loc47
	v56 = 0x78<32>
	v57 = v55 + v56
	loc27 = v57
	v58 = loc47
	v59 = 0x50<32>
	v60 = v58 + v59
	loc38 = v60
	v61 = loc47
	loc40 = v61
	v62 = loc47
	v63 = 0x88<32>
	v64 = v62 + v63
	loc41 = v64
	v65 = loc38
	v66 = 0<64>
	Mem0[v65:word64] = v66
	v67 = loc38
	v68 = 8<32>
	v69 = v67 + v68
	v70 = 0<64>
	Mem0[v69:word64] = v70
	v71 = loc38
	v72 = 0x10<32>
	v73 = v71 + v72
	v74 = 0<64>
	Mem0[v73:word64] = v74
	v75 = loc38
	v76 = 0x18<32>
	v77 = v75 + v76
	v78 = 0<64>
	Mem0[v77:word64] = v78
	v79 = loc38
	v80 = 0x20<32>
	v81 = v79 + v80
	v82 = 0<64>
	Mem0[v81:word64] = v82
	v83 = arg2
	v84 = Mem0[v83:word32]
	loc45 = v84
	v85 = loc27
	v86 = loc45
	Mem0[v85:word32] = v86
	v87 = 0<32>
	v88 = arg1
	v89 = loc27
	v90 = loc40
	v91 = loc38
	v92 = fn000D2E2C(v87, v88, v89, v90, v91)
	loc42 = v92
	v93 = loc42
	v94 = 0<32>
	v95 = v93 < v94
	loc43 = v95
	v96 = loc43
	branch !v96 l000D2C67
	// succ:  l000D2C62 l000D2C67
l000D2C62:
	v97 = 0xFFFFFFFF<32>
	loc4 = v97
l000D2C67:
	v98 = arg0
	v99 = 0x4C<32>
	v100 = v98 + v99
	loc44 = v100
	v101 = loc44
	v102 = Mem0[v101:word32]
	loc7 = v102
	v103 = loc7
	v104 = 0xFFFFFFFF<32>
	v105 = v103 > v104
	loc8 = v105
	v106 = loc8
	branch !v106 l000D2C8D
	// succ:  l000D2C81 l000D2C8D
l000D2C81:
	v107 = arg0
	v108 = fn000D61F1(v107)
	loc9 = v108
	v109 = loc9
	loc39 = v109
	goto l000D2C91
	// succ:  l000D2C91
l000D2C8D:
	v110 = 0<32>
	loc39 = v110
	// succ:  l000D2C91
l000D2C91:
	v111 = arg0
	v112 = Mem0[v111:word32]
	loc10 = v112
	v113 = loc10
	v114 = 0x20<32>
	v115 = v113 & v114
	loc11 = v115
	v116 = arg0
	v117 = 0x4A<32>
	v118 = v116 + v117
	loc12 = v118
	v119 = loc12
	v120 = Mem0[v119:int8]
	v121 = CONVERT(v120, int8, word32)
	loc13 = v121
	v122 = loc13
	v123 = 0x18<32>
	v124 = v122 << v123
	v125 = 0x18<32>
	v126 = v124 >> v125
	v127 = 1<32>
	v128 = v126 < v127
	loc14 = v128
	v129 = loc14
	branch !v129 l000D2CCF
	// succ:  l000D2CC0 l000D2CCF
l000D2CC0:
	v130 = loc10
	v131 = 0xFFFFFFDF<32>
	v132 = v130 & v131
	loc15 = v132
	v133 = arg0
	v134 = loc15
	Mem0[v133:word32] = v134
	// succ:  l000D2CCF
l000D2CCF:
	v135 = arg0
	v136 = 0x30<32>
	v137 = v135 + v136
	loc16 = v137
	v138 = loc16
	v139 = Mem0[v138:word32]
	loc17 = v139
	v140 = loc17
	v141 = 0<32>
	v142 = v140 == v141
	loc18 = v142
	v143 = loc18
	v143 = v143
	// succ:  l000D2CE8 l000D2CE8
l000D2CE8:
	v144 = arg0
	v145 = 0x2C<32>
	v146 = v144 + v145
	loc20 = v146
	v147 = loc20
	v148 = Mem0[v147:word32]
	loc21 = v148
	v149 = loc20
	v150 = loc41
	Mem0[v149:word32] = v150
	v151 = arg0
	v152 = 0x1C<32>
	v153 = v151 + v152
	loc22 = v153
	v154 = loc22
	v155 = loc41
	Mem0[v154:word32] = v155
	v156 = arg0
	v157 = 0x14<32>
	v158 = v156 + v157
	loc23 = v158
	v159 = loc23
	v160 = loc41
	Mem0[v159:word32] = v160
	v161 = loc16
	v162 = 0x50<32>
	Mem0[v161:word32] = v162
	v163 = loc41
	v164 = 0x50<32>
	v165 = v163 + v164
	loc24 = v165
	v166 = arg0
	v167 = 0x10<32>
	v168 = v166 + v167
	loc25 = v168
	v169 = loc25
	v170 = loc24
	Mem0[v169:word32] = v170
	v171 = arg0
	v172 = arg1
	v173 = loc27
	v174 = loc40
	v175 = loc38
	v176 = fn000D2E2C(v171, v172, v173, v174, v175)
	loc26 = v176
	v177 = loc21
	v178 = 0<32>
	v179 = v177 == v178
	loc28 = v179
	v180 = loc28
	branch !v180 l000D2D56
	// succ:  l000D2D51 l000D2D56
l000D2D51:
	v181 = loc26
	loc5 = v181
l000D2D56:
	v182 = arg0
	v183 = 0x24<32>
	v184 = v182 + v183
	loc29 = v184
	v185 = loc29
	v186 = Mem0[v185:word32]
	loc30 = v186
	v187 = arg0
	v188 = 0<32>
	v189 = 0<32>
	v190 = loc30
	v191 = 0x1FF<32>
	v192 = v190 & v191
	v193 = 0xF20<32>
	v194 = v192 + v193
fn000D2BD4_exit:


// fn000D2E1D
// Return size: 0
word64 fn000D2E1D(word64 arg0, word64 arg1)
fn000D2E1D_entry:
	// succ:  l000D2E1D
l000D2E1D:
	v2 = arg1
	v3 = v2 == 0<64>
	branch !v3 l000D2E25
	// succ:  l000D2E22 l000D2E25
l000D2E22:
	v4 = 0<64>
	goto l000D2E2A
	// succ:  l000D2E2A
l000D2E25:
	v5 = arg0
	v6 = arg1
	v7 = v5 %u v6
	// succ:  l000D2E2A
l000D2E2A:
	return v7
	// succ:  fn000D2E1D_exit
fn000D2E1D_exit:


// fn000D61FC
// Return size: 0
word32 fn000D61FC(word32 arg0, word32 arg1, word32 arg2)
fn000D61FC_entry:
	// succ:  l000D61FC
l000D61FC:
	v44 = Mem0[0x00140030<p32>:word32]
	loc44 = v44
	v45 = arg2
	v46 = 0x10<32>
	v47 = v45 + v46
	loc30 = v47
	v48 = loc30
	v49 = Mem0[v48:word32]
	loc37 = v49
	v50 = loc37
	v51 = 0<32>
	v52 = v50 == v51
	loc38 = v52
	v53 = loc38
	branch !v53 l000D6243
	// succ:  l000D621B l000D6243
l000D621B:
	v54 = arg2
	v55 = fn000D799D(v54)
	loc40 = v55
	v56 = loc40
	v57 = 0<32>
	v58 = v56 == v57
	loc41 = v58
	v59 = loc41
	branch !v59 l000D623D
	// succ:  l000D622D l000D623D
l000D622D:
	v60 = loc30
	v61 = Mem0[v60:word32]
	loc8 = v61
	v62 = loc8
	loc12 = v62
	v63 = 5<32>
	loc43 = v63
	goto l000D6241
	// succ:  l000D6241
l000D623D:
	v64 = 0<32>
	loc4 = v64
	// succ:  l000D6241
l000D6241:
	goto l000D624F
	// succ:  l000D624F
l000D6243:
	v65 = loc37
	loc39 = v65
	v66 = loc39
	loc12 = v66
	v67 = 5<32>
	loc43 = v67
	// succ:  l000D624F
l000D624F:
	v68 = loc43
	v69 = 5<32>
	v70 = v68 == v69
	v70 = v70
	// succ:  l000D6259 l000D6259
l000D6259:
	v71 = arg2
	v72 = 0x14<32>
	v73 = v71 + v72
	loc42 = v73
	v74 = loc42
	v75 = Mem0[v74:word32]
	loc10 = v75
	v76 = loc12
	v77 = loc10
	v78 = v76 - v77
	loc11 = v78
	v79 = loc11
	v80 = arg1
	v81 = v79 <u v80
	loc13 = v81
	v82 = loc10
	loc14 = v82
	v83 = loc13
	v83 = v83
	// succ:  l000D627D l000D627D
l000D627D:
	v84 = arg2
	v85 = 0x24<32>
	v86 = v84 + v85
	loc15 = v86
	v87 = loc15
	v88 = Mem0[v87:word32]
	loc16 = v88
	v89 = arg2
	v90 = arg0
	v91 = arg1
	v92 = loc16
	v93 = 0x1FF<32>
	v94 = v92 & v93
	v95 = 0xF20<32>
	v96 = v94 + v95
fn000D61FC_exit:


// fn000D6D47
// Return size: 0
void fn000D6D47(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000D6D47_entry:
	// succ:  l000D6D47
l000D6D47:
	v28 = Mem0[0x00140030<p32>:word32]
	loc30 = v28
	v29 = Mem0[0x00140030<p32>:word32]
	v30 = 0x100<32>
	v31 = v29 + v30
	Mem0[0x00140030<p32>:word32] = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000D6D62
	// succ:  l000D6D5C l000D6D62
l000D6D5C:
	v35 = 0x100<32>
	abortStackOverflow(v35)
	// succ:  l000D6D62
l000D6D62:
	v36 = loc30
	loc23 = v36
	v37 = arg4
	v38 = 0x12000<32>
	v39 = v37 & v38
	loc24 = v39
	v40 = loc24
	v41 = 0<32>
	v42 = v40 == v41
	loc25 = v42
	v43 = arg2
	v44 = arg3
	v45 = v43 > v44
	loc26 = v45
	v46 = loc26
	v47 = loc25
	v48 = v46 & v47
	loc28 = v48
	// succ:  l000D6D84
l000D6D84:
	v49 = loc28
	branch !v49 l000D6E6B
	// succ:  l000D6D8A l000D6E6B
l000D6D8A:
	v50 = arg2
	v51 = arg3
	v52 = v50 - v51
	loc27 = v52
	v53 = loc27
	v54 = 0x100<32>
	v55 = v53 >u v54
	loc8 = v55
	v56 = loc8
	branch !v56 l000D6DA1
	// succ:  l000D6D9D l000D6DA1
l000D6D9D:
	v57 = 0x100<32>
	goto l000D6DA3
	// succ:  l000D6DA3
l000D6DA1:
	v58 = loc27
	// succ:  l000D6DA3
l000D6DA3:
	loc9 = v58
	v59 = loc23
	v60 = arg1
	v61 = loc9
	v62 = _memset(v59, v60, v61)
	v63 = loc27
	v64 = 0xFF<32>
	v65 = v63 >u v64
	loc10 = v65
	v66 = arg0
	v67 = Mem0[v66:word32]
	loc11 = v67
	v68 = loc11
	v69 = 0x20<32>
	v70 = v68 & v69
	loc12 = v70
	v71 = loc12
	v72 = 0<32>
	v73 = v71 == v72
	loc13 = v73
	v74 = loc10
	branch !v74 l000D6E53
	// succ:  l000D6DD1 l000D6E53
l000D6DD1:
	v75 = arg2
	v76 = arg3
	v77 = v75 - v76
	loc14 = v77
	v78 = loc27
	loc6 = v78
	v79 = loc11
	loc21 = v79
	v80 = loc13
	loc22 = v80
	// succ:  l000D6DE6
l000D6DE6:
	v81 = loc22
	branch !v81 l000D6E03
	// succ:  l000D6DEC l000D6E03
l000D6DEC:
	v82 = loc23
	v83 = 0x100<32>
	v84 = arg0
	v85 = fn000D61FC(v82, v83, v84)
	v86 = arg0
	v87 = Mem0[v86:word32]
	loc7 = v87
	v88 = loc7
	loc18 = v88
	goto l000D6E07
	// succ:  l000D6E07
l000D6E03:
	v89 = loc21
	loc18 = v89
	// succ:  l000D6E07
l000D6E07:
	v90 = loc6
	v91 = 0xFFFFFF00<32>
	v92 = v90 + v91
	loc15 = v92
	v93 = loc15
	v94 = 0xFF<32>
	v95 = v93 >u v94
	loc16 = v95
	v96 = loc18
	v97 = 0x20<32>
	v98 = v96 & v97
	loc17 = v98
	v99 = loc17
	v100 = 0<32>
	v101 = v99 == v100
	loc19 = v101
	v102 = loc16
	branch !v102 l000D6E37
	// succ:  l000D6E2A l000D6E37
l000D6E2A:
	v103 = loc15
	loc6 = v103
	v104 = loc18
	loc21 = v104
	v105 = loc19
	loc22 = v105
	goto l000D6E39
	// succ:  l000D6E39
l000D6E37:
	goto l000D6E3C
	// succ:  l000D6E3C
l000D6E39:
	goto l000D6DD1
	// succ:  l000D6DD1
l000D6E3C:
	v106 = loc14
	v107 = 0xFF<32>
	v108 = v106 & v107
	loc20 = v108
	v109 = loc19
	branch !v109 l000D6E4F
	// succ:  l000D6E4A l000D6E4F
l000D6E4A:
	v110 = loc20
	loc5 = v110
	goto l000D6E51
	// succ:  l000D6E51
l000D6E4F:
	goto l000D6E6B
	// succ:  l000D6E6B
l000D6E51:
	goto l000D6E5F
	// succ:  l000D6E5F
l000D6E53:
	v111 = loc13
	branch !v111 l000D6E5C
	// succ:  l000D6E57 l000D6E5C
l000D6E57:
	v112 = loc27
	loc5 = v112
	goto l000D6E5E
	// succ:  l000D6E5E
l000D6E5C:
	goto l000D6E6B
	// succ:  l000D6E6B
l000D6E5E:
	// succ:  l000D6E5F
l000D6E5F:
	v113 = loc23
	v114 = loc5
	v115 = arg0
	v116 = fn000D61FC(v113, v114, v115)
	// succ:  l000D6E6B
l000D6E6B:
	// succ:  l000D6E6B
l000D6E6B:
	v117 = loc30
	Mem0[0x00140030<p32>:word32] = v117
	return
	// succ:  fn000D6D47_exit
l000D6E71:
	return
	// succ:  fn000D6D47_exit
fn000D6D47_exit:


// fn000D7A7D
// Return size: 0
word32 fn000D7A7D(word32 arg0, word32 arg1, word32 arg2)
fn000D7A7D_entry:
	// succ:  l000D7A7D
l000D7A7D:
	v14 = Mem0[0x00140030<p32>:word32]
	loc14 = v14
	v15 = arg0
	v16 = 0x10<32>
	v17 = v15 + v16
	loc6 = v17
	v18 = loc6
	v19 = Mem0[v18:word32]
	loc7 = v19
	v20 = arg0
	v21 = 0x14<32>
	v22 = v20 + v21
	loc8 = v22
	v23 = loc8
	v24 = Mem0[v23:word32]
	loc9 = v24
	v25 = loc7
	v26 = loc9
	v27 = v25 - v26
	loc10 = v27
	v28 = loc10
	v29 = arg2
	v30 = v28 >u v29
	loc11 = v30
	v31 = loc11
	branch !v31 l000D7AB4
	// succ:  l000D7AB1 l000D7AB4
l000D7AB1:
	v32 = arg2
	goto l000D7AB6
	// succ:  l000D7AB6
l000D7AB4:
	v33 = loc10
	// succ:  l000D7AB6
l000D7AB6:
	loc3 = v33
	v34 = loc9
	loc4 = v34
	v35 = loc4
	v36 = arg1
	v37 = loc3
	v38 = _memcpy(v35, v36, v37)
	v39 = loc8
	v40 = Mem0[v39:word32]
	loc12 = v40
	v41 = loc12
	v42 = loc3
	v43 = v41 + v42
	loc5 = v43
	v44 = loc8
	v45 = loc5
	Mem0[v44:word32] = v45
	v46 = arg2
	return v46
	// succ:  fn000D7A7D_exit
l000D7ADF:
	return v32
	// succ:  fn000D7A7D_exit
fn000D7A7D_exit:


// fn000DA625
// Return size: 0
word64 fn000DA625(word32 arg0, word32 arg1)
fn000DA625_entry:
	// succ:  l000DA625
l000DA625:
	v100 = Mem0[0x00140030<p32>:word32]
	loc89 = v100
	v101 = arg0
	v102 = 4<32>
	v103 = v101 + v102
	loc21 = v103
	v104 = loc21
	v105 = Mem0[v104:word32]
	loc32 = v105
	v106 = arg0
	v107 = 0x64<32>
	v108 = v106 + v107
	loc43 = v108
	v109 = loc43
	v110 = Mem0[v109:word32]
	loc54 = v110
	v111 = loc32
	v112 = loc54
	v113 = v111 <u v112
	loc61 = v113
	v114 = loc61
	branch !v114 l000DA675
	// succ:  l000DA653 l000DA675
l000DA653:
	v115 = loc32
	v116 = 1<32>
	v117 = v115 + v116
	loc72 = v117
	v118 = loc21
	v119 = loc72
	Mem0[v118:word32] = v119
	v120 = loc32
	v121 = Mem0[v120:int8]
	v122 = CONVERT(v121, int8, word32)
	loc83 = v122
	v123 = loc83
	v124 = 0xFF<32>
	v125 = v123 & v124
	loc86 = v125
	v126 = loc86
	loc13 = v126
	goto l000DA67F
	// succ:  l000DA67F
l000DA675:
	v127 = arg0
	v128 = fn000D2493(v127)
	loc11 = v128
	v129 = loc11
	loc13 = v129
	// succ:  l000DA67F
l000DA67F:
	v130 = loc13
	v131 = 0x2D<32>
	v132 = v130 == v131
	loc12 = v132
	// succ:  l000DA687
l000DA687:
	v133 = loc13
	v134 = 0x2B<32>
	v135 = v133 - v134
	switch (v135) { l000DA69A l000DA752 l000DA69C }
	// succ:  l000DA69A l000DA69C l000DA752
l000DA69A:
	// succ:  l000DA69C
l000DA69C:
	v136 = loc12
	v137 = 1<32>
	v138 = v136 & v137
	loc14 = v138
	v139 = loc21
	v140 = Mem0[v139:word32]
	loc15 = v140
	v141 = loc43
	v142 = Mem0[v141:word32]
	loc16 = v142
	v143 = loc15
	v144 = loc16
	v145 = v143 <u v144
	loc17 = v145
	v146 = loc17
	branch !v146 l000DA6E1
	// succ:  l000DA6BF l000DA6E1
l000DA6BF:
	v147 = loc15
	v148 = 1<32>
	v149 = v147 + v148
	loc18 = v149
	v150 = loc21
	v151 = loc18
	Mem0[v150:word32] = v151
	v152 = loc15
	v153 = Mem0[v152:int8]
	v154 = CONVERT(v153, int8, word32)
	loc19 = v154
	v155 = loc19
	v156 = 0xFF<32>
	v157 = v155 & v156
	loc20 = v157
	v158 = loc20
	loc24 = v158
	goto l000DA6EB
	// succ:  l000DA6EB
l000DA6E1:
	v159 = arg0
	v160 = fn000D2493(v159)
	loc22 = v160
	v161 = loc22
	loc24 = v161
	// succ:  l000DA6EB
l000DA6EB:
	v162 = loc24
	v163 = 0xFFFFFFD0<32>
	v164 = v162 + v163
	loc23 = v164
	v165 = loc23
	v166 = 9<32>
	v167 = v165 >u v166
	loc25 = v167
	v168 = arg1
	v169 = 0<32>
	v170 = v168 != v169
	loc26 = v170
	v171 = loc26
	v172 = loc25
	v173 = v171 & v172
	loc87 = v173
	v174 = loc87
	branch !v174 l000DA746
	// succ:  l000DA70C l000DA746
l000DA70C:
	v175 = loc43
	v176 = Mem0[v175:word32]
	loc27 = v176
	v177 = loc27
	v178 = 0<32>
	v179 = v177 == v178
	loc28 = v179
	v180 = loc28
	branch !v180 l000DA727
	// succ:  l000DA71E l000DA727
l000DA71E:
	v181 = loc14
	loc2 = v181
	v182 = loc24
	loc4 = v182
	goto l000DA744
	// succ:  l000DA744
l000DA727:
	v183 = loc21
	v184 = Mem0[v183:word32]
	loc29 = v184
	v185 = loc29
	v186 = 0xFFFFFFFF<32>
	v187 = v185 + v186
	loc30 = v187
	v188 = loc21
	v189 = loc30
	Mem0[v188:word32] = v189
	v190 = loc14
	loc2 = v190
	v191 = loc24
	loc4 = v191
	// succ:  l000DA744
l000DA744:
	goto l000DA74E
	// succ:  l000DA74E
l000DA746:
	v192 = loc14
	loc2 = v192
	v193 = loc24
	loc4 = v193
	// succ:  l000DA74E
l000DA74E:
	goto l000DA75E
	// succ:  l000DA75E
l000DA751:
	// succ:  l000DA752
l000DA752:
	v194 = 0<32>
	loc2 = v194
	v195 = loc13
	loc4 = v195
	// succ:  l000DA75D
l000DA75D:
	// succ:  l000DA75E
l000DA75E:
	v196 = loc4
	v197 = 0xFFFFFFD0<32>
	v198 = v196 + v197
	loc31 = v198
	v199 = loc31
	v200 = 9<32>
	v201 = v199 >u v200
	loc33 = v201
	v202 = loc33
	branch !v202 l000DA7B5
	// succ:  l000DA771 l000DA7B5
l000DA771:
	v203 = loc43
	v204 = Mem0[v203:word32]
	loc34 = v204
	v205 = loc34
	v206 = 0<32>
	v207 = v205 == v206
	loc35 = v207
	v208 = loc35
	branch !v208 l000DA791
	// succ:  l000DA783 l000DA791
l000DA783:
	v209 = 0x80000000<64>
	loc92 = v209
	goto l000DA7B3
	// succ:  l000DA7B3
l000DA791:
	v210 = loc21
	v211 = Mem0[v210:word32]
	loc36 = v211
	v212 = loc36
	v213 = 0xFFFFFFFF<32>
	v214 = v212 + v213
	loc37 = v214
	v215 = loc21
	v216 = loc37
	Mem0[v215:word32] = v216
	v217 = 0x80000000<64>
	loc92 = v217
	// succ:  l000DA7B3
l000DA7B3:
	goto l000DA9DB
	// succ:  l000DA9DB
l000DA7B5:
	v218 = 0<32>
	loc3 = v218
	v219 = loc4
	loc6 = v219
	// succ:  l000DA7BF
l000DA7BF:
	v220 = loc3
	v221 = 0xA<32>
	v222 = v220 * v221
	loc38 = v222
	v223 = loc6
	v224 = 0xFFFFFFD0<32>
	v225 = v223 + v224
	loc39 = v225
	v226 = loc39
	v227 = loc38
	v228 = v226 + v227
	loc40 = v228
	v229 = loc21
	v230 = Mem0[v229:word32]
	loc41 = v230
	v231 = loc43
	v232 = Mem0[v231:word32]
	loc42 = v232
	v233 = loc41
	v234 = loc42
	v235 = v233 <u v234
	loc44 = v235
	v236 = loc44
	branch !v236 l000DA811
	// succ:  l000DA7EF l000DA811
l000DA7EF:
	v237 = loc41
	v238 = 1<32>
	v239 = v237 + v238
	loc45 = v239
	v240 = loc21
	v241 = loc45
	Mem0[v240:word32] = v241
	v242 = loc41
	v243 = Mem0[v242:int8]
	v244 = CONVERT(v243, int8, word32)
	loc46 = v244
	v245 = loc46
	v246 = 0xFF<32>
	v247 = v245 & v246
	loc47 = v247
	v248 = loc47
	loc5 = v248
	goto l000DA81B
	// succ:  l000DA81B
l000DA811:
	v249 = arg0
	v250 = fn000D2493(v249)
	loc48 = v250
	v251 = loc48
	loc5 = v251
	// succ:  l000DA81B
l000DA81B:
	v252 = loc5
	v253 = 0xFFFFFFD0<32>
	v254 = v252 + v253
	loc49 = v254
	v255 = loc49
	v256 = 0xA<32>
	v257 = v255 <u v256
	loc50 = v257
	v258 = loc40
	v259 = 0xCCCCCCC<32>
	v260 = v258 < v259
	loc51 = v260
	v261 = loc50
	v262 = loc51
	v263 = v261 & v262
	loc52 = v263
	v264 = loc52
	branch !v264 l000DA849
	// succ:  l000DA840 l000DA849
l000DA840:
	v265 = loc40
	loc3 = v265
	v266 = loc5
	loc6 = v266
	goto l000DA84B
	// succ:  l000DA84B
l000DA849:
	goto l000DA84E
	// succ:  l000DA84E
l000DA84B:
	goto l000DA7B5
	// succ:  l000DA7B5
l000DA84E:
	v267 = loc40
	v268 = CONVERT(v267, word32, int64)
	loc99 = v268
	v269 = loc5
	v270 = 0xFFFFFFD0<32>
	v271 = v269 + v270
	loc53 = v271
	v272 = loc53
	v273 = 0xA<32>
	v274 = v272 <u v273
	loc55 = v274
	v275 = loc55
	branch !v275 l000DA914
	// succ:  l000DA867 l000DA914
l000DA867:
	v276 = loc99
	loc91 = v276
	v277 = loc5
	loc9 = v277
	// succ:  l000DA871
l000DA871:
	v278 = loc91
	v279 = 0xA<64>
	v280 = v278 * v279
	loc93 = v280
	v281 = loc9
	v282 = CONVERT(v281, word32, int64)
	loc94 = v282
	v283 = loc94
	v284 = 0xFFFFFFFFFFFFFFD0<64>
	v285 = v283 + v284
	loc95 = v285
	v286 = loc95
	v287 = loc93
	v288 = v286 + v287
	loc96 = v288
	v289 = loc21
	v290 = Mem0[v289:word32]
	loc58 = v290
	v291 = loc43
	v292 = Mem0[v291:word32]
	loc59 = v292
	v293 = loc58
	v294 = loc59
	v295 = v293 <u v294
	loc60 = v295
	v296 = loc60
	branch !v296 l000DA8C8
	// succ:  l000DA8A6 l000DA8C8
l000DA8A6:
	v297 = loc58
	v298 = 1<32>
	v299 = v297 + v298
	loc62 = v299
	v300 = loc21
	v301 = loc62
	Mem0[v300:word32] = v301
	v302 = loc58
	v303 = Mem0[v302:int8]
	v304 = CONVERT(v303, int8, word32)
	loc63 = v304
	v305 = loc63
	v306 = 0xFF<32>
	v307 = v305 & v306
	loc64 = v307
	v308 = loc64
	loc7 = v308
	goto l000DA8D2
	// succ:  l000DA8D2
l000DA8C8:
	v309 = arg0
	v310 = fn000D2493(v309)
	loc65 = v310
	v311 = loc65
	loc7 = v311
	// succ:  l000DA8D2
l000DA8D2:
	v312 = loc7
	v313 = 0xFFFFFFD0<32>
	v314 = v312 + v313
	loc66 = v314
	v315 = loc66
	v316 = 0xA<32>
	v317 = v315 <u v316
	loc67 = v317
	v318 = loc96
	v319 = 0x7BE7EFBE<64>
	v320 = v318 < v319
	loc68 = v320
	v321 = loc67
	v322 = loc68
	v323 = v321 & v322
	loc69 = v323
	v324 = loc69
	branch !v324 l000DA904
	// succ:  l000DA8FB l000DA904
l000DA8FB:
	v325 = loc96
	loc91 = v325
	v326 = loc7
	loc9 = v326
	goto l000DA90E
	// succ:  l000DA90E
l000DA904:
	v327 = loc96
	loc90 = v327
	v328 = loc7
	loc8 = v328
	goto l000DA911
	// succ:  l000DA911
l000DA90E:
	goto l000DA867
	// succ:  l000DA867
l000DA911:
	goto l000DA91C
	// succ:  l000DA91C
l000DA914:
	v329 = loc99
	loc90 = v329
	v330 = loc5
	loc8 = v330
	// succ:  l000DA91C
l000DA91C:
	v331 = loc8
	v332 = 0xFFFFFFD0<32>
	v333 = v331 + v332
	loc56 = v333
	v334 = loc56
	v335 = 0xA<32>
	v336 = v334 <u v335
	loc57 = v336
	v337 = loc57
	branch !v337 l000DA994
	// succ:  l000DA92F l000DA994
l000DA92F:
	v338 = loc21
	v339 = Mem0[v338:word32]
	loc70 = v339
	v340 = loc43
	v341 = Mem0[v340:word32]
	loc71 = v341
	v342 = loc70
	v343 = loc71
	v344 = v342 <u v343
	loc73 = v344
	v345 = loc73
	branch !v345 l000DA96E
	// succ:  l000DA94C l000DA96E
l000DA94C:
	v346 = loc70
	v347 = 1<32>
	v348 = v346 + v347
	loc74 = v348
	v349 = loc21
	v350 = loc74
	Mem0[v349:word32] = v350
	v351 = loc70
	v352 = Mem0[v351:int8]
	v353 = CONVERT(v352, int8, word32)
	loc75 = v353
	v354 = loc75
	v355 = 0xFF<32>
	v356 = v354 & v355
	loc76 = v356
	v357 = loc76
	loc10 = v357
	goto l000DA978
	// succ:  l000DA978
l000DA96E:
	v358 = arg0
	v359 = fn000D2493(v358)
	loc77 = v359
	v360 = loc77
	loc10 = v360
	// succ:  l000DA978
l000DA978:
	v361 = loc10
	v362 = 0xFFFFFFD0<32>
	v363 = v361 + v362
	loc78 = v363
	v364 = loc78
	v365 = 0xA<32>
	v366 = v364 <u v365
	loc79 = v366
	v367 = loc79
	v368 = v367 == 0<32>
	branch !v368 l000DA98F
	// succ:  l000DA98C l000DA98F
l000DA98C:
	goto l000DA991
	// succ:  l000DA991
l000DA98F:
	goto l000DA92F
	// succ:  l000DA92F
l000DA991:
	// succ:  l000DA994
l000DA994:
	v369 = loc43
	v370 = Mem0[v369:word32]
	loc80 = v370
	v371 = loc80
	v372 = 0<32>
	v373 = v371 == v372
	loc81 = v373
	v374 = loc81
	v375 = v374 == 0<32>
	branch !v375 l000DA9BD
	// succ:  l000DA9A7 l000DA9BD
l000DA9A7:
	v376 = loc21
	v377 = Mem0[v376:word32]
	loc82 = v377
	v378 = loc82
	v379 = 0xFFFFFFFF<32>
	v380 = v378 + v379
	loc84 = v380
	v381 = loc21
	v382 = loc84
	Mem0[v381:word32] = v382
	// succ:  l000DA9BD
l000DA9BD:
	v383 = loc2
	v384 = 0<32>
	v385 = v383 != v384
	loc85 = v385
	v386 = 0<64>
	v387 = loc90
	v388 = v386 - v387
	loc97 = v388
	v389 = loc85
	branch !v389 l000DA9D2
	// succ:  l000DA9CF l000DA9D2
l000DA9CF:
	v390 = loc97
	goto l000DA9D4
	// succ:  l000DA9D4
l000DA9D2:
	v391 = loc90
	// succ:  l000DA9D4
l000DA9D4:
	loc98 = v391
	v392 = loc98
	loc92 = v392
	// succ:  l000DA9DB
l000DA9DB:
	v393 = loc92
	return v393
	// succ:  fn000DA625_exit
l000DA9DF:
	return v390
	// succ:  fn000DA625_exit
fn000DA625_exit:


// fn000DA9E1
// Return size: 0
real64 fn000DA9E1(real64 arg0, word32 arg1)
fn000DA9E1_entry:
	// succ:  l000DA9E1
l000DA9E1:
	v27 = Mem0[0x00140030<p32>:word32]
	loc17 = v27
	v28 = arg1
	v29 = 0x3FF<32>
	v30 = v28 > v29
	loc10 = v30
	v31 = loc10
	branch !v31 l000DAA53
	// succ:  l000DA9F3 l000DAA53
l000DA9F3:
	v32 = arg0
	v33 = 8.98846567431158e+307
	v34 = v32 * v33
	loc25 = v34
	v35 = arg1
	v36 = 0xFFFFFC01<32>
	v37 = v35 + v36
	loc11 = v37
	v38 = loc11
	v39 = 0x3FF<32>
	v40 = v38 > v39
	loc12 = v40
	v41 = arg1
	v42 = 0xFFFFF802<32>
	v43 = v41 + v42
	loc13 = v43
	v44 = loc12
	branch !v44 l000DAA49
	// succ:  l000DAA1D l000DAA49
l000DAA1D:
	v45 = loc25
	v46 = 8.98846567431158e+307
	v47 = v45 * v46
	loc26 = v47
	v48 = loc13
	v49 = 0x3FF<32>
	v50 = v48 > v49
	loc14 = v50
	v51 = loc14
	branch !v51 l000DAA3B
	// succ:  l000DAA37 l000DAA3B
l000DAA37:
	v52 = 0x3FF<32>
	goto l000DAA3D
	// succ:  l000DAA3D
l000DAA3B:
	v53 = loc13
	// succ:  l000DAA3D
l000DAA3D:
	loc2 = v53
	v54 = loc26
	loc20 = v54
	v55 = loc2
	loc3 = v55
	goto l000DAA51
	// succ:  l000DAA51
l000DAA49:
	v56 = loc25
	loc20 = v56
	v57 = loc11
	loc3 = v57
	// succ:  l000DAA51
l000DAA51:
	goto l000DAAC8
	// succ:  l000DAAC8
l000DAA53:
	v58 = arg1
	v59 = 0xFFFFFC02<32>
	v60 = v58 < v59
	loc15 = v60
	v61 = loc15
	branch !v61 l000DAABF
	// succ:  l000DAA5F l000DAABF
l000DAA5F:
	v62 = arg0
	v63 = 2.2250738585072014e-308
	v64 = v62 * v63
	loc21 = v64
	v65 = arg1
	v66 = 0x3FE<32>
	v67 = v65 + v66
	loc5 = v67
	v68 = loc5
	v69 = 0xFFFFFC02<32>
	v70 = v68 < v69
	loc6 = v70
	v71 = arg1
	v72 = 0x7FC<32>
	v73 = v71 + v72
	loc7 = v73
	v74 = loc6
	branch !v74 l000DAAB5
	// succ:  l000DAA89 l000DAAB5
l000DAA89:
	v75 = loc21
	v76 = 2.2250738585072014e-308
	v77 = v75 * v76
	loc22 = v77
	v78 = loc7
	v79 = 0xFFFFFC02<32>
	v80 = v78 < v79
	loc8 = v80
	v81 = loc8
	branch !v81 l000DAAA7
	// succ:  l000DAAA3 l000DAAA7
l000DAAA3:
	v82 = 0xFFFFFC02<32>
	goto l000DAAA9
	// succ:  l000DAAA9
l000DAAA7:
	v83 = loc7
	// succ:  l000DAAA9
l000DAAA9:
	loc4 = v83
	v84 = loc22
	loc20 = v84
	v85 = loc4
	loc3 = v85
	goto l000DAABD
	// succ:  l000DAABD
l000DAAB5:
	v86 = loc21
	loc20 = v86
	v87 = loc5
	loc3 = v87
	// succ:  l000DAABD
l000DAABD:
	goto l000DAAC7
	// succ:  l000DAAC7
l000DAABF:
	v88 = arg0
	loc20 = v88
	v89 = arg1
	loc3 = v89
	// succ:  l000DAAC7
l000DAAC7:
	// succ:  l000DAAC8
l000DAAC8:
	v90 = loc3
	v91 = 0x3FF<32>
	v92 = v90 + v91
	loc9 = v92
	v93 = loc9
	v94 = CONVERT(v93, word32, uint64)
	loc18 = v94
	v95 = loc18
	v96 = 0x34<64>
	v97 = v95 << v96
	loc19 = v97
	v98 = loc19
	v99 = reinterpret_cast<real64>(v98)
	loc23 = v99
	v100 = loc20
	v101 = loc23
	v102 = v100 * v101
	loc24 = v102
	v103 = loc24
	return v103
	// succ:  fn000DA9E1_exit
l000DAAEC:
	return v82
	// succ:  fn000DA9E1_exit
fn000DA9E1_exit:


// fn000DAF22
// Return size: 0
void fn000DAF22(word32 arg0)
fn000DAF22_entry:
	// succ:  l000DAF22
l000DAF22:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	_free(v5)
	return
	// succ:  fn000DAF22_exit
l000DAF2E:
	return
	// succ:  fn000DAF22_exit
fn000DAF22_exit:


// fn000DB4B6
// Return size: 0
word32 fn000DB4B6(word32 arg0, word32 arg1, word32 arg2)
fn000DB4B6_entry:
	// succ:  l000DB4B6
l000DB4B6:
	v54 = Mem0[0x00140030<p32>:word32]
	loc54 = v54
	v55 = Mem0[0x00140030<p32>:word32]
	v56 = 0x10<32>
	v57 = v55 + v56
	Mem0[0x00140030<p32>:word32] = v57
	v58 = Mem0[0x00140030<p32>:word32]
	v59 = Mem0[0x00140034<p32>:word32]
	v60 = v58 >= v59
	branch !v60 l000DB4CF
	// succ:  l000DB4CA l000DB4CF
l000DB4CA:
	v61 = 0x10<32>
	abortStackOverflow(v61)
	// succ:  l000DB4CF
l000DB4CF:
	v62 = loc54
	loc25 = v62
	v63 = arg1
	v64 = 0<32>
	v65 = v63 == v64
	loc36 = v65
	// succ:  l000DB4DA
l000DB4DA:
	v66 = loc36
	branch !v66 l000DB4E5
	// succ:  l000DB4E0 l000DB4E5
l000DB4E0:
	v67 = 0<32>
	loc4 = v67
	goto l000DB6CB
	// succ:  l000DB6CB
l000DB4E5:
	v68 = arg2
	v69 = 0<32>
	v70 = v68 == v69
	loc47 = v70
	// succ:  l000DB4EC
l000DB4EC:
	v71 = loc47
	v72 = v71 == 0<32>
	branch !v72 l000DB6BA
	// succ:  l000DB4F3 l000DB6BA
l000DB4F3:
	v73 = arg0
	v74 = 0<32>
	v75 = v73 == v74
	loc49 = v75
	v76 = loc49
	branch !v76 l000DB501
	// succ:  l000DB4FE l000DB501
l000DB4FE:
	v77 = loc25
	goto l000DB503
	// succ:  l000DB503
l000DB501:
	v78 = arg0
	// succ:  l000DB503
l000DB503:
	loc3 = v78
	v79 = arg1
	v80 = Mem0[v79:int8]
	v81 = CONVERT(v80, int8, word32)
	loc50 = v81
	v82 = loc50
	v83 = 0xFF<32>
	v84 = v82 & v83
	loc51 = v84
	v85 = loc50
	v86 = 0x18<32>
	v87 = v85 << v86
	v88 = 0x18<32>
	v89 = v87 >> v88
	v90 = 0xFFFFFFFF<32>
	v91 = v89 > v90
	loc52 = v91
	v92 = loc52
	branch !v92 l000DB548
	// succ:  l000DB526 l000DB548
l000DB526:
	v93 = loc3
	v94 = loc51
	Mem0[v93:word32] = v94
	v95 = loc50
	v96 = 0x18<32>
	v97 = v95 << v96
	v98 = 0x18<32>
	v99 = v97 >> v98
	v100 = 0<32>
	v101 = v99 != v100
	loc5 = v101
	v102 = loc5
	v103 = 1<32>
	v104 = v102 & v103
	loc6 = v104
	v105 = loc6
	loc4 = v105
	goto l000DB6CC
	// succ:  l000DB6CC
l000DB548:
	v106 = loc51
	v107 = 0xFFFFFF3E<32>
	v108 = v106 + v107
	loc7 = v108
	v109 = loc7
	v110 = 0x32<32>
	v111 = v109 >u v110
	loc8 = v111
	v112 = loc8
	v113 = v112 == 0<32>
	branch !v113 l000DB6B9
	// succ:  l000DB55C l000DB6B9
l000DB55C:
	v114 = arg1
	v115 = 1<32>
	v116 = v114 + v115
	loc9 = v116
	v117 = 0xA48<32>
	v118 = loc7
	v119 = 2<32>
	v120 = v118 << v119
	v121 = v117 + v120
	loc10 = v121
	v122 = loc10
	v123 = Mem0[v122:word32]
	loc11 = v123
	v124 = arg2
	v125 = 4<32>
	v126 = v124 <u v125
	loc12 = v126
	v127 = loc12
	branch !v127 l000DB5B0
	// succ:  l000DB580 l000DB5B0
l000DB580:
	v128 = arg2
	v129 = 6<32>
	v130 = v128 * v129
	loc13 = v130
	v131 = loc13
	v132 = 0xFFFFFFFA<32>
	v133 = v131 + v132
	loc14 = v133
	v134 = 0x80000000<32>
	v135 = loc14
	v136 = v134 >>u v135
	loc15 = v136
	v137 = loc11
	v138 = loc15
	v139 = v137 & v138
	loc16 = v139
	v140 = loc16
	v141 = 0<32>
	v142 = v140 == v141
	loc17 = v142
	v143 = loc17
	v144 = v143 == 0<32>
	branch !v144 l000DB5AF
	// succ:  l000DB5AC l000DB5AF
l000DB5AC:
	goto l000DB6BA
	// succ:  l000DB6BA
l000DB5AF:
	// succ:  l000DB5B0
l000DB5B0:
	v145 = loc9
	v146 = Mem0[v145:int8]
	v147 = CONVERT(v146, int8, word32)
	loc18 = v147
	v148 = loc18
	v149 = 0xFF<32>
	v150 = v148 & v149
	loc19 = v150
	v151 = loc19
	v152 = 3<32>
	v153 = v151 >>u v152
	loc20 = v153
	v154 = loc20
	v155 = 0xFFFFFFF0<32>
	v156 = v154 + v155
	loc21 = v156
	v157 = loc11
	v158 = 0x1A<32>
	v159 = v157 >> v158
	loc22 = v159
	v160 = loc20
	v161 = loc22
	v162 = v160 + v161
	loc23 = v162
	v163 = loc21
	v164 = loc23
	v165 = v163 | v164
	loc24 = v165
	v166 = loc24
	v167 = 7<32>
	v168 = v166 >u v167
	loc26 = v168
	v169 = loc26
	v170 = v169 == 0<32>
	branch !v170 l000DB6B8
	// succ:  l000DB5EE l000DB6B8
l000DB5EE:
	v171 = loc11
	v172 = 6<32>
	v173 = v171 << v172
	loc27 = v173
	v174 = loc19
	v175 = 0xFFFFFF80<32>
	v176 = v174 + v175
	loc28 = v176
	v177 = loc28
	v178 = loc27
	v179 = v177 | v178
	loc29 = v179
	v180 = loc29
	v181 = 0<32>
	v182 = v180 < v181
	loc30 = v182
	v183 = loc30
	v184 = v183 == 0<32>
	branch !v184 l000DB61E
	// succ:  l000DB610 l000DB61E
l000DB610:
	v185 = loc3
	v186 = loc29
	Mem0[v185:word32] = v186
	v187 = 2<32>
	loc4 = v187
	goto l000DB6CC
	// succ:  l000DB6CC
l000DB61E:
	v188 = arg1
	v189 = 2<32>
	v190 = v188 + v189
	loc31 = v190
	v191 = loc31
	v192 = Mem0[v191:int8]
	v193 = CONVERT(v192, int8, word32)
	loc32 = v193
	v194 = loc32
	v195 = 0xFF<32>
	v196 = v194 & v195
	loc33 = v196
	v197 = loc33
	v198 = 0xFFFFFF80<32>
	v199 = v197 + v198
	loc34 = v199
	v200 = loc34
	v201 = 0x3F<32>
	v202 = v200 >u v201
	loc35 = v202
	v203 = loc35
	v204 = v203 == 0<32>
	branch !v204 l000DB6B7
	// succ:  l000DB648 l000DB6B7
l000DB648:
	v205 = loc29
	v206 = 6<32>
	v207 = v205 << v206
	loc37 = v207
	v208 = loc34
	v209 = loc37
	v210 = v208 | v209
	loc38 = v210
	v211 = loc38
	v212 = 0<32>
	v213 = v211 < v212
	loc39 = v213
	v214 = loc39
	v215 = v214 == 0<32>
	branch !v215 l000DB670
	// succ:  l000DB662 l000DB670
l000DB662:
	v216 = loc3
	v217 = loc38
	Mem0[v216:word32] = v217
	v218 = 3<32>
	loc4 = v218
	goto l000DB6CC
	// succ:  l000DB6CC
l000DB670:
	v219 = arg1
	v220 = 3<32>
	v221 = v219 + v220
	loc40 = v221
	v222 = loc40
	v223 = Mem0[v222:int8]
	v224 = CONVERT(v223, int8, word32)
	loc41 = v224
	v225 = loc41
	v226 = 0xFF<32>
	v227 = v225 & v226
	loc42 = v227
	v228 = loc42
	v229 = 0xFFFFFF80<32>
	v230 = v228 + v229
	loc43 = v230
	v231 = loc43
	v232 = 0x3F<32>
	v233 = v231 >u v232
	loc44 = v233
	v234 = loc44
	v235 = v234 == 0<32>
	branch !v235 l000DB6B6
	// succ:  l000DB69A l000DB6B6
l000DB69A:
	v236 = loc38
	v237 = 6<32>
	v238 = v236 << v237
	loc45 = v238
	v239 = loc43
	v240 = loc45
	v241 = v239 | v240
	loc46 = v241
	v242 = loc3
	v243 = loc46
	Mem0[v242:word32] = v243
	v244 = 4<32>
	loc4 = v244
	goto l000DB6CC
	// succ:  l000DB6CC
l000DB6B6:
	// succ:  l000DB6B7
l000DB6B7:
	// succ:  l000DB6B8
l000DB6B8:
	// succ:  l000DB6B9
l000DB6B9:
	// succ:  l000DB6BA
l000DB6BA:
	// succ:  l000DB6BA
l000DB6BA:
	v245 = ___errno_location()
	loc48 = v245
	v246 = loc48
	v247 = 0x54<32>
	Mem0[v246:word32] = v247
	v248 = 0xFFFFFFFF<32>
	loc4 = v248
	// succ:  l000DB6CB
l000DB6CB:
	// succ:  l000DB6CC
l000DB6CC:
	v249 = loc54
	Mem0[0x00140030<p32>:word32] = v249
	v250 = loc4
	return v250
	// succ:  fn000DB4B6_exit
l000DB6D4:
	return v77
	// succ:  fn000DB4B6_exit
fn000DB4B6_exit:


// fn000DB84B
// Return size: 0
word32 fn000DB84B(word32 arg0)
fn000DB84B_entry:
	// succ:  l000DB84B
l000DB84B:
	v25 = Mem0[0x00140030<p32>:word32]
	loc23 = v25
	v26 = arg0
	v27 = 0x14<32>
	v28 = v26 + v27
	loc2 = v28
	v29 = loc2
	v30 = Mem0[v29:word32]
	loc13 = v30
	v31 = arg0
	v32 = 0x1C<32>
	v33 = v31 + v32
	loc15 = v33
	v34 = loc15
	v35 = Mem0[v34:word32]
	loc16 = v35
	v36 = loc13
	v37 = loc16
	v38 = v36 >u v37
	loc17 = v38
	v39 = loc17
	v39 = v39
	// succ:  l000DB878 l000DB878
l000DB878:
	v40 = arg0
	v41 = 0x24<32>
	v42 = v40 + v41
	loc18 = v42
	v43 = loc18
	v44 = Mem0[v43:word32]
	loc19 = v44
	v45 = arg0
	v46 = 0<32>
	v47 = 0<32>
	v48 = loc19
	v49 = 0x1FF<32>
	v50 = v48 & v49
	v51 = 0xF20<32>
	v52 = v50 + v51
fn000DB84B_exit:


// fn000DD5D8
// Return size: 0
word32 fn000DD5D8(word32 arg0, word32 arg1, word32 arg2)
fn000DD5D8_entry:
	// succ:  l000DD5D8
l000DD5D8:
	v19 = Mem0[0x00140030<p32>:word32]
	loc19 = v19
	v20 = arg0
	v21 = 0x54<32>
	v22 = v20 + v21
	loc11 = v22
	v23 = loc11
	v24 = Mem0[v23:word32]
	loc12 = v24
	v25 = arg2
	v26 = 0x100<32>
	v27 = v25 + v26
	loc13 = v27
	v28 = loc12
	v29 = 0<32>
	v30 = loc13
	v31 = fn000D6AC0(v28, v29, v30)
	loc14 = v31
	v32 = loc14
	v33 = 0<32>
	v34 = v32 == v33
	loc15 = v34
	v35 = loc14
	loc16 = v35
	v36 = loc12
	loc17 = v36
	v37 = loc16
	v38 = loc17
	v39 = v37 - v38
	loc5 = v39
	v40 = loc15
	branch !v40 l000DD61D
	// succ:  l000DD61A l000DD61D
l000DD61A:
	v41 = loc13
	goto l000DD61F
	// succ:  l000DD61F
l000DD61D:
	v42 = loc5
	// succ:  l000DD61F
l000DD61F:
	loc3 = v42
	v43 = loc3
	v44 = arg2
	v45 = v43 <u v44
	loc6 = v45
	v46 = loc6
	branch !v46 l000DD630
	// succ:  l000DD62D l000DD630
l000DD62D:
	v47 = loc3
	goto l000DD632
	// succ:  l000DD632
l000DD630:
	v48 = arg2
	// succ:  l000DD632
l000DD632:
	loc4 = v48
	v49 = arg1
	v50 = loc12
	v51 = loc4
	v52 = _memcpy(v49, v50, v51)
	v53 = loc12
	v54 = loc4
	v55 = v53 + v54
	loc7 = v55
	v56 = arg0
	v57 = 4<32>
	v58 = v56 + v57
	loc8 = v58
	v59 = loc8
	v60 = loc7
	Mem0[v59:word32] = v60
	v61 = loc12
	v62 = loc3
	v63 = v61 + v62
	loc9 = v63
	v64 = arg0
	v65 = 8<32>
	v66 = v64 + v65
	loc10 = v66
	v67 = loc10
	v68 = loc9
	Mem0[v67:word32] = v68
	v69 = loc11
	v70 = loc9
	Mem0[v69:word32] = v70
	v71 = loc4
	return v71
	// succ:  fn000DD5D8_exit
l000DD673:
	return v47
	// succ:  fn000DD5D8_exit
fn000DD5D8_exit:


// fn000DD675
// Return size: 0
word32 fn000DD675(word32 arg0, word32 arg1, word32 arg2)
fn000DD675_entry:
	// succ:  l000DD675
l000DD675:
	v7 = Mem0[0x00140030<p32>:word32]
	loc7 = v7
	v8 = arg2
	v9 = 0<32>
	v10 = v8 != v9
	loc3 = v10
	v11 = loc3
	branch !v11 l000DD689
	// succ:  l000DD686 l000DD689
l000DD686:
	v12 = arg2
	goto l000DD68D
	// succ:  l000DD68D
l000DD689:
	v13 = 0x4660<32>
	// succ:  l000DD68D
l000DD68D:
	loc4 = v13
	v14 = 0<32>
	v15 = arg0
	v16 = arg1
	v17 = loc4
	v18 = fn000DB07F(v14, v15, v16, v17)
	loc5 = v18
	v19 = loc5
	return v19
	// succ:  fn000DD675_exit
l000DD6A0:
	return v12
	// succ:  fn000DD675_exit
fn000DD675_exit:


// fn000DE31D
// Return size: 0
word32 fn000DE31D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000DE31D_entry:
	// succ:  l000DE31D
l000DE31D:
	v67 = Mem0[0x00140030<p32>:word32]
	loc69 = v67
	v68 = Mem0[0x00140030<p32>:word32]
	v69 = 0x110<32>
	v70 = v68 + v69
	Mem0[0x00140030<p32>:word32] = v70
	v71 = Mem0[0x00140030<p32>:word32]
	v72 = Mem0[0x00140034<p32>:word32]
	v73 = v71 >= v72
	branch !v73 l000DE338
	// succ:  l000DE332 l000DE338
l000DE332:
	v74 = 0x110<32>
	abortStackOverflow(v74)
	// succ:  l000DE338
l000DE338:
	v75 = loc69
	v76 = 8<32>
	v77 = v75 + v76
	loc61 = v77
	v78 = loc69
	loc62 = v78
	v79 = arg1
	v80 = Mem0[v79:word32]
	loc63 = v80
	v81 = loc62
	v82 = loc63
	Mem0[v81:word32] = v82
	v83 = arg0
	v84 = 0<32>
	v85 = v83 != v84
	loc64 = v85
	v86 = loc64
	branch !v86 l000DE35F
	// succ:  l000DE35C l000DE35F
l000DE35C:
	v87 = arg3
	goto l000DE362
	// succ:  l000DE362
l000DE35F:
	v88 = 0x100<32>
	// succ:  l000DE362
l000DE362:
	loc5 = v88
	v89 = loc64
	branch !v89 l000DE36C
	// succ:  l000DE369 l000DE36C
l000DE369:
	v90 = arg0
	goto l000DE36E
	// succ:  l000DE36E
l000DE36C:
	v91 = loc61
	// succ:  l000DE36E
l000DE36E:
	loc22 = v91
	v92 = loc63
	loc23 = v92
	v93 = loc63
	v94 = 0<32>
	v95 = v93 != v94
	loc65 = v95
	v96 = loc5
	v97 = 0<32>
	v98 = v96 != v97
	loc25 = v98
	v99 = loc25
	v100 = loc65
	v101 = v99 & v100
	loc67 = v101
	// succ:  l000DE38A
l000DE38A:
	v102 = loc67
	branch !v102 l000DE4A7
	// succ:  l000DE390 l000DE4A7
l000DE390:
	v103 = 0<32>
	loc6 = v103
	v104 = arg2
	loc7 = v104
	v105 = loc5
	loc9 = v105
	v106 = loc22
	loc11 = v106
	v107 = loc23
	loc60 = v107
	// succ:  l000DE3A6
l000DE3A6:
	v108 = loc7
	v109 = loc9
	v110 = v108 >=u v109
	loc26 = v110
	v111 = loc7
	v112 = 0x20<32>
	v113 = v111 >u v112
	loc27 = v113
	v114 = loc26
	v115 = loc27
	v116 = v114 | v115
	loc28 = v116
	v117 = loc28
	v118 = v117 == 0<32>
	branch !v118 l000DE3D9
	// succ:  l000DE3C2 l000DE3D9
l000DE3C2:
	v119 = loc11
	loc10 = v119
	v120 = loc6
	loc13 = v120
	v121 = loc7
	loc14 = v121
	v122 = loc9
	loc18 = v122
	v123 = loc60
	loc40 = v123
	goto l000DE4BC
	// succ:  l000DE4BC
l000DE3D9:
	v124 = loc26
	branch !v124 l000DE3E0
	// succ:  l000DE3DD l000DE3E0
l000DE3DD:
	v125 = loc9
	goto l000DE3E2
	// succ:  l000DE3E2
l000DE3E0:
	v126 = loc7
	// succ:  l000DE3E2
l000DE3E2:
	loc8 = v126
	v127 = loc7
	v128 = loc8
	v129 = v127 - v128
	loc29 = v129
	v130 = loc11
	v131 = loc62
	v132 = loc8
	v133 = 0<32>
	v134 = fn000DE5D1(v130, v131, v132, v133)
	loc30 = v134
	v135 = loc30
	v136 = 0xFFFFFFFF<32>
	v137 = v135 == v136
	loc31 = v137
	v138 = loc31
	branch !v138 l000DE407
	// succ:  l000DE404 l000DE407
l000DE404:
	goto l000DE489
	// succ:  l000DE489
l000DE407:
	v139 = loc11
	v140 = loc61
	v141 = v139 == v140
	loc32 = v141
	v142 = loc11
	v143 = loc30
	v144 = v142 + v143
	loc33 = v144
	v145 = loc32
	branch !v145 l000DE41C
	// succ:  l000DE419 l000DE41C
l000DE419:
	v146 = 0<32>
	goto l000DE41E
	// succ:  l000DE41E
l000DE41C:
	v147 = loc30
	// succ:  l000DE41E
l000DE41E:
	loc34 = v147
	v148 = loc9
	v149 = loc34
	v150 = v148 - v149
	loc15 = v150
	v151 = loc32
	branch !v151 l000DE42F
	// succ:  l000DE42C l000DE42F
l000DE42C:
	v152 = loc11
	goto l000DE431
	// succ:  l000DE431
l000DE42F:
	v153 = loc33
	// succ:  l000DE431
l000DE431:
	loc12 = v153
	v154 = loc30
	v155 = loc6
	v156 = v154 + v155
	loc35 = v156
	v157 = loc62
	v158 = Mem0[v157:word32]
	loc36 = v158
	v159 = loc36
	v160 = 0<32>
	v161 = v159 != v160
	loc37 = v161
	v162 = loc15
	v163 = 0<32>
	v164 = v162 != v163
	loc38 = v164
	v165 = loc38
	v166 = loc37
	v167 = v165 & v166
	loc66 = v167
	v168 = loc66
	branch !v168 l000DE470
	// succ:  l000DE45B l000DE470
l000DE45B:
	v169 = loc35
	loc6 = v169
	v170 = loc29
	loc7 = v170
	v171 = loc15
	loc9 = v171
	v172 = loc12
	loc11 = v172
	v173 = loc36
	loc60 = v173
	goto l000DE486
	// succ:  l000DE486
l000DE470:
	v174 = loc12
	loc10 = v174
	v175 = loc35
	loc13 = v175
	v176 = loc29
	loc14 = v176
	v177 = loc15
	loc18 = v177
	v178 = loc36
	loc40 = v178
	goto l000DE4BC
	// succ:  l000DE4BC
l000DE486:
	goto l000DE390
	// succ:  l000DE390
l000DE489:
	v179 = loc62
	v180 = Mem0[v179:word32]
	loc24 = v180
	v181 = loc11
	loc10 = v181
	v182 = 0xFFFFFFFF<32>
	loc13 = v182
	v183 = loc29
	loc14 = v183
	v184 = 0<32>
	loc18 = v184
	v185 = loc24
	loc40 = v185
	goto l000DE4BB
	// succ:  l000DE4BB
l000DE4A7:
	v186 = loc22
	loc10 = v186
	v187 = 0<32>
	loc13 = v187
	v188 = arg2
	loc14 = v188
	v189 = loc5
	loc18 = v189
	v190 = loc23
	loc40 = v190
	// succ:  l000DE4BB
l000DE4BB:
	// succ:  l000DE4BC
l000DE4BC:
	v191 = loc40
	v192 = 0<32>
	v193 = v191 == v192
	loc39 = v193
	// succ:  l000DE4C4
l000DE4C4:
	v194 = loc39
	branch !v194 l000DE4CF
	// succ:  l000DE4CA l000DE4CF
l000DE4CA:
	v195 = loc13
	loc20 = v195
	goto l000DE5B3
	// succ:  l000DE5B3
l000DE4CF:
	v196 = loc18
	v197 = 0<32>
	v198 = v196 != v197
	loc41 = v198
	v199 = loc14
	v200 = 0<32>
	v201 = v199 != v200
	loc42 = v201
	v202 = loc41
	v203 = loc42
	v204 = v202 & v203
	loc43 = v204
	v205 = loc43
	branch !v205 l000DE5AE
	// succ:  l000DE4E8 l000DE5AE
l000DE4E8:
	v206 = loc13
	loc16 = v206
	v207 = loc14
	loc17 = v207
	v208 = loc10
	loc19 = v208
	v209 = loc18
	loc21 = v209
	v210 = loc40
	loc45 = v210
	// succ:  l000DE4FE
l000DE4FE:
	v211 = loc45
	v212 = Mem0[v211:word32]
	loc44 = v212
	v213 = loc19
	v214 = loc44
	v215 = 0<32>
	v216 = fn000D779F(v213, v214, v215)
	loc46 = v216
	v217 = loc46
	v218 = 1<32>
	v219 = v217 + v218
	loc47 = v219
	v220 = loc47
	v221 = 2<32>
	v222 = v220 <u v221
	loc48 = v222
	v223 = loc48
	branch !v223 l000DE527
	// succ:  l000DE524 l000DE527
l000DE524:
	goto l000DE58F
	// succ:  l000DE58F
l000DE527:
	v224 = loc62
	v225 = Mem0[v224:word32]
	loc50 = v225
	v226 = loc50
	v227 = 4<32>
	v228 = v226 + v227
	loc51 = v228
	v229 = loc62
	v230 = loc51
	Mem0[v229:word32] = v230
	v231 = loc17
	v232 = 0xFFFFFFFF<32>
	v233 = v231 + v232
	loc52 = v233
	v234 = loc19
	v235 = loc46
	v236 = v234 + v235
	loc53 = v236
	v237 = loc21
	v238 = loc46
	v239 = v237 - v238
	loc54 = v239
	v240 = loc16
	v241 = 1<32>
	v242 = v240 + v241
	loc55 = v242
	v243 = loc54
	v244 = 0<32>
	v245 = v243 != v244
	loc56 = v245
	v246 = loc52
	v247 = 0<32>
	v248 = v246 != v247
	loc57 = v248
	v249 = loc56
	v250 = loc57
	v251 = v249 & v250
	loc58 = v251
	v252 = loc58
	branch !v252 l000DE586
	// succ:  l000DE571 l000DE586
l000DE571:
	v253 = loc55
	loc16 = v253
	v254 = loc52
	loc17 = v254
	v255 = loc53
	loc19 = v255
	v256 = loc54
	loc21 = v256
	v257 = loc51
	loc45 = v257
	goto l000DE58C
	// succ:  l000DE58C
l000DE586:
	v258 = loc55
	loc20 = v258
	goto l000DE5B4
	// succ:  l000DE5B4
l000DE58C:
	goto l000DE4E8
	// succ:  l000DE4E8
l000DE58F:
	v259 = loc46
	v260 = 0<32>
	v261 = v259 == v260
	loc49 = v261
	v262 = loc49
	branch !v262 l000DE5A8
	// succ:  l000DE59C l000DE5A8
l000DE59C:
	v263 = loc62
	v264 = 0<32>
	Mem0[v263:word32] = v264
	v265 = loc16
	loc20 = v265
	goto l000DE5AC
	// succ:  l000DE5AC
l000DE5A8:
	v266 = 0xFFFFFFFF<32>
	loc20 = v266
	// succ:  l000DE5AC
l000DE5AC:
	goto l000DE5B2
	// succ:  l000DE5B2
l000DE5AE:
	v267 = loc13
	loc20 = v267
	// succ:  l000DE5B2
l000DE5B2:
	// succ:  l000DE5B3
l000DE5B3:
	// succ:  l000DE5B4
l000DE5B4:
	v268 = loc64
	branch !v268 l000DE5C8
	// succ:  l000DE5B9 l000DE5C8
l000DE5B9:
	v269 = loc62
	v270 = Mem0[v269:word32]
	loc59 = v270
	v271 = arg1
	v272 = loc59
	Mem0[v271:word32] = v272
	// succ:  l000DE5C8
l000DE5C8:
	v273 = loc69
	Mem0[0x00140030<p32>:word32] = v273
	v274 = loc20
	return v274
	// succ:  fn000DE31D_exit
l000DE5CF:
	return v152
	// succ:  fn000DE31D_exit
fn000DE31D_exit:


// fn000DE8FC
// Return size: 0
word32 fn000DE8FC(word32 arg0, word32 arg1)
fn000DE8FC_entry:
	// succ:  l000DE8FC
l000DE8FC:
	v29 = Mem0[0x00140030<p32>:word32]
	loc28 = v29
	v30 = Mem0[0x00140030<p32>:word32]
	v31 = 0x10<32>
	v32 = v30 + v31
	Mem0[0x00140030<p32>:word32] = v32
	v33 = Mem0[0x00140030<p32>:word32]
	v34 = Mem0[0x00140034<p32>:word32]
	v35 = v33 >= v34
	branch !v35 l000DE915
	// succ:  l000DE910 l000DE915
l000DE910:
	v36 = 0x10<32>
	abortStackOverflow(v36)
	// succ:  l000DE915
l000DE915:
	v37 = loc28
	loc14 = v37
	v38 = arg1
	v39 = 0xFF<32>
	v40 = v38 & v39
	loc20 = v40
	v41 = loc14
	v42 = loc20
	v43 = SLICE(v42, byte, 0)
	Mem0[v41:byte] = v43
	v44 = arg0
	v45 = 0x10<32>
	v46 = v44 + v45
	loc21 = v46
	v47 = loc21
	v48 = Mem0[v47:word32]
	loc22 = v48
	v49 = loc22
	v50 = 0<32>
	v51 = v49 == v50
	loc23 = v51
	v52 = loc23
	branch !v52 l000DE969
	// succ:  l000DE941 l000DE969
l000DE941:
	v53 = arg0
	v54 = fn000D799D(v53)
	loc24 = v54
	v55 = loc24
	v56 = 0<32>
	v57 = v55 == v56
	loc25 = v57
	v58 = loc25
	branch !v58 l000DE963
	// succ:  l000DE953 l000DE963
l000DE953:
	v59 = loc21
	v60 = Mem0[v59:word32]
	loc3 = v60
	v61 = loc3
	loc6 = v61
	v62 = 4<32>
	loc27 = v62
	goto l000DE967
	// succ:  l000DE967
l000DE963:
	v63 = 0xFFFFFFFF<32>
	loc2 = v63
	// succ:  l000DE967
l000DE967:
	goto l000DE971
	// succ:  l000DE971
l000DE969:
	v64 = loc22
	loc6 = v64
	v65 = 4<32>
	loc27 = v65
	// succ:  l000DE971
l000DE971:
	v66 = loc27
	v67 = 4<32>
	v68 = v66 == v67
	v68 = v68
	// succ:  l000DE97B l000DE97B
l000DE97B:
	v69 = arg0
	v70 = 0x14<32>
	v71 = v69 + v70
	loc26 = v71
	v72 = loc26
	v73 = Mem0[v72:word32]
	loc4 = v73
	v74 = loc4
	v75 = loc6
	v76 = v74 <u v75
	loc5 = v76
	v77 = loc5
	branch !v77 l000DE9DE
	// succ:  l000DE994 l000DE9DE
l000DE994:
	v78 = arg1
	v79 = 0xFF<32>
	v80 = v78 & v79
	loc7 = v80
	v81 = arg0
	v82 = 0x4B<32>
	v83 = v81 + v82
	loc8 = v83
	v84 = loc8
	v85 = Mem0[v84:int8]
	v86 = CONVERT(v85, int8, word32)
	loc9 = v86
	v87 = loc9
	v88 = 0x18<32>
	v89 = v87 << v88
	v90 = 0x18<32>
	v91 = v89 >> v90
	loc10 = v91
	v92 = loc7
	v93 = loc10
	v94 = v92 == v93
	loc11 = v94
	v95 = loc11
	v96 = v95 == 0<32>
	branch !v96 l000DE9DD
	// succ:  l000DE9C1 l000DE9DD
l000DE9C1:
	v97 = loc4
	v98 = 1<32>
	v99 = v97 + v98
	loc12 = v99
	v100 = loc26
	v101 = loc12
	Mem0[v100:word32] = v101
	v102 = loc4
	v103 = loc20
	v104 = SLICE(v103, byte, 0)
	Mem0[v102:byte] = v104
	v105 = loc7
	loc2 = v105
l000DE9DD:
	// succ:  l000DE9DE
l000DE9DE:
	v106 = arg0
	v107 = 0x24<32>
	v108 = v106 + v107
	loc13 = v108
	v109 = loc13
	v110 = Mem0[v109:word32]
	loc15 = v110
	v111 = arg0
	v112 = loc14
	v113 = 1<32>
	v114 = loc15
	v115 = 0x1FF<32>
	v116 = v114 & v115
	v117 = 0xF20<32>
	v118 = v116 + v117
fn000DE8FC_exit:


// fn000DEA30
// Return size: 0
word32 fn000DEA30(word32 arg0, word32 arg1, word32 arg2)
fn000DEA30_entry:
	// succ:  l000DEA30
l000DEA30:
	v20 = Mem0[0x00140030<p32>:word32]
	loc20 = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = 0x10<32>
	v23 = v21 + v22
	Mem0[0x00140030<p32>:word32] = v23
	v24 = Mem0[0x00140030<p32>:word32]
	v25 = Mem0[0x00140034<p32>:word32]
	v26 = v24 >= v25
	branch !v26 l000DEA49
	// succ:  l000DEA44 l000DEA49
l000DEA44:
	v27 = 0x10<32>
	abortStackOverflow(v27)
	// succ:  l000DEA49
l000DEA49:
	v28 = loc20
	loc11 = v28
	v29 = 0xF0<32>
	v30 = _malloc(v29)
	loc12 = v30
	v31 = loc12
	v32 = 0<32>
	v33 = v31 == v32
	loc13 = v33
	// succ:  l000DEA5C
l000DEA5C:
	v34 = loc13
	branch !v34 l000DEA67
	// succ:  l000DEA62 l000DEA67
l000DEA62:
	v35 = 0xFFFFFFFF<32>
	loc3 = v35
	goto l000DEB0D
	// succ:  l000DEB0D
l000DEA67:
	v36 = arg2
	v37 = Mem0[v36:word32]
	loc18 = v37
	v38 = loc11
	v39 = loc18
	Mem0[v38:word32] = v39
	v40 = loc12
	v41 = 0xF0<32>
	v42 = arg1
	v43 = loc11
	v44 = fn000D29A3(v40, v41, v42, v43)
	loc14 = v44
	v45 = loc14
	v46 = 0xF0<32>
	v47 = v45 <u v46
	loc15 = v47
	v48 = loc15
	branch !v48 l000DEAC0
	// succ:  l000DEA8F l000DEAC0
l000DEA8F:
	v49 = loc14
	v50 = 1<32>
	v51 = v49 + v50
	loc16 = v51
	v52 = loc12
	v53 = loc16
	v54 = fn000E3E00(v52, v53)
	loc17 = v54
	v55 = loc17
	v56 = 0<32>
	v57 = v55 != v56
	loc4 = v57
	v58 = loc4
	branch !v58 l000DEAAD
	// succ:  l000DEAAA l000DEAAD
l000DEAAA:
	v59 = loc17
	goto l000DEAAF
	// succ:  l000DEAAF
l000DEAAD:
	v60 = loc12
	// succ:  l000DEAAF
l000DEAAF:
	loc5 = v60
	v61 = arg0
	v62 = loc5
	Mem0[v61:word32] = v62
	v63 = loc14
	loc3 = v63
	goto l000DEB0E
	// succ:  l000DEB0E
l000DEAC0:
	v64 = loc12
	_free(v64)
	v65 = loc14
	v66 = 0<32>
	v67 = v65 < v66
	loc6 = v67
	v68 = loc6
	branch !v68 l000DEAD5
	// succ:  l000DEAD0 l000DEAD5
l000DEAD0:
	v69 = 0xFFFFFFFF<32>
	loc3 = v69
	goto l000DEB0C
	// succ:  l000DEB0C
l000DEAD5:
	v70 = loc14
	v71 = 1<32>
	v72 = v70 + v71
	loc7 = v72
	v73 = loc7
	v74 = _malloc(v73)
	loc8 = v74
	v75 = arg0
	v76 = loc8
	Mem0[v75:word32] = v76
	v77 = loc8
	v78 = 0<32>
	v79 = v77 == v78
	loc9 = v79
	v80 = loc9
	branch !v80 l000DEAFA
	// succ:  l000DEAF5 l000DEAFA
l000DEAF5:
	v81 = 0xFFFFFFFF<32>
	loc3 = v81
	goto l000DEB0B
	// succ:  l000DEB0B
l000DEAFA:
	v82 = loc8
	v83 = loc7
	v84 = arg1
	v85 = arg2
	v86 = fn000D29A3(v82, v83, v84, v85)
	loc10 = v86
	v87 = loc10
	loc3 = v87
	// succ:  l000DEB0B
l000DEB0B:
	// succ:  l000DEB0C
l000DEB0C:
	// succ:  l000DEB0D
l000DEB0D:
	// succ:  l000DEB0E
l000DEB0E:
	v88 = loc20
	Mem0[0x00140030<p32>:word32] = v88
	v89 = loc3
	return v89
	// succ:  fn000DEA30_exit
l000DEB16:
	return v59
	// succ:  fn000DEA30_exit
fn000DEA30_exit:


// fn000DEF2C
// Return size: 0
real64 fn000DEF2C(word32 arg0, word32 arg1, word32 arg2)
fn000DEF2C_entry:
	// succ:  l000DEF2C
l000DEF2C:
	v20 = Mem0[0x00140030<p32>:word32]
	loc19 = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = 0x70<32>
	v23 = v21 + v22
	Mem0[0x00140030<p32>:word32] = v23
	v24 = Mem0[0x00140030<p32>:word32]
	v25 = Mem0[0x00140034<p32>:word32]
	v26 = v24 >= v25
	branch !v26 l000DEF47
	// succ:  l000DEF41 l000DEF47
l000DEF41:
	v27 = 0x70<32>
	abortStackOverflow(v27)
	// succ:  l000DEF47
l000DEF47:
	v28 = loc19
	loc12 = v28
	v29 = loc12
	v30 = 0<64>
	Mem0[v29:word64] = v30
	v31 = loc12
	v32 = 8<32>
	v33 = v31 + v32
	v34 = 0<64>
	Mem0[v33:word64] = v34
	v35 = loc12
	v36 = 0x10<32>
	v37 = v35 + v36
	v38 = 0<64>
	Mem0[v37:word64] = v38
	v39 = loc12
	v40 = 0x18<32>
	v41 = v39 + v40
	v42 = 0<64>
	Mem0[v41:word64] = v42
	v43 = loc12
	v44 = 0x20<32>
	v45 = v43 + v44
	v46 = 0<64>
	Mem0[v45:word64] = v46
	v47 = loc12
	v48 = 0x28<32>
	v49 = v47 + v48
	v50 = 0<64>
	Mem0[v49:word64] = v50
	v51 = loc12
	v52 = 0x30<32>
	v53 = v51 + v52
	v54 = 0<64>
	Mem0[v53:word64] = v54
	v55 = loc12
	v56 = 0x38<32>
	v57 = v55 + v56
	v58 = 0<64>
	Mem0[v57:word64] = v58
	v59 = loc12
	v60 = 0x40<32>
	v61 = v59 + v60
	v62 = 0<64>
	Mem0[v61:word64] = v62
	v63 = loc12
	v64 = 0x48<32>
	v65 = v63 + v64
	v66 = 0<64>
	Mem0[v65:word64] = v66
	v67 = loc12
	v68 = 0x50<32>
	v69 = v67 + v68
	v70 = 0<64>
	Mem0[v69:word64] = v70
	v71 = loc12
	v72 = 0x58<32>
	v73 = v71 + v72
	v74 = 0<64>
	Mem0[v73:word64] = v74
	v75 = loc12
	v76 = 0x60<32>
	v77 = v75 + v76
	v78 = 0<64>
	Mem0[v77:word64] = v78
	v79 = loc12
	v80 = 0x68<32>
	v81 = v79 + v80
	v82 = 0<64>
	Mem0[v81:word64] = v82
	v83 = loc12
	v84 = 4<32>
	v85 = v83 + v84
	loc13 = v85
	v86 = loc13
	v87 = arg0
	Mem0[v86:word32] = v87
	v88 = loc12
	v89 = 8<32>
	v90 = v88 + v89
	loc14 = v90
	v91 = loc14
	v92 = 0xFFFFFFFF<32>
	Mem0[v91:word32] = v92
	v93 = loc12
	v94 = 0x2C<32>
	v95 = v93 + v94
	loc15 = v95
	v96 = loc15
	v97 = arg0
	Mem0[v96:word32] = v97
	v98 = loc12
	v99 = 0x4C<32>
	v100 = v98 + v99
	loc16 = v100
	v101 = loc16
	v102 = 0xFFFFFFFF<32>
	Mem0[v101:word32] = v102
	v103 = loc12
	v104 = 0<32>
	fn000D1767(v103, v104)
	v105 = loc12
	v106 = arg2
	v107 = 1<32>
	v108 = fn000D7B90(v105, v106, v107)
	loc20 = v108
	v109 = loc12
	v110 = 0x6C<32>
	v111 = v109 + v110
	loc17 = v111
	v112 = loc17
	v113 = Mem0[v112:word32]
	loc3 = v113
	v114 = loc13
	v115 = Mem0[v114:word32]
	loc4 = v115
	v116 = loc14
	v117 = Mem0[v116:word32]
	loc5 = v117
	v118 = loc4
	v119 = loc5
	v120 = v118 - v119
	loc6 = v120
	v121 = loc6
	v122 = loc3
	v123 = v121 + v122
	loc7 = v123
	v124 = arg1
	v125 = 0<32>
	v126 = v124 == v125
	loc8 = v126
	v127 = loc8
	v128 = v127 == 0<32>
	branch !v128 l000DF07D
	// succ:  l000DF05B l000DF07D
l000DF05B:
	v129 = loc7
	v130 = 0<32>
	v131 = v129 != v130
	loc9 = v131
	v132 = arg0
	v133 = loc7
	v134 = v132 + v133
	loc10 = v134
	v135 = loc9
	branch !v135 l000DF070
	// succ:  l000DF06D l000DF070
l000DF06D:
	v136 = loc10
	goto l000DF072
	// succ:  l000DF072
l000DF070:
	v137 = arg0
	// succ:  l000DF072
l000DF072:
	loc11 = v137
	v138 = arg1
	v139 = loc11
	Mem0[v138:word32] = v139
	// succ:  l000DF07D
l000DF07D:
	v140 = loc19
	Mem0[0x00140030<p32>:word32] = v140
	v141 = loc20
	return v141
	// succ:  fn000DEF2C_exit
l000DF084:
	return v136
	// succ:  fn000DEF2C_exit
fn000DEF2C_exit:


